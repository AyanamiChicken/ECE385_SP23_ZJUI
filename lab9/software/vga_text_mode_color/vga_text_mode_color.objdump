
vga_text_mode_color.elf:     file format elf32-littlenios2
vga_text_mode_color.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000230

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x00014420 memsz 0x00014420 flags r-x
    LOAD off    0x00015440 vaddr 0x10014440 paddr 0x10016214 align 2**12
         filesz 0x00001dd4 memsz 0x00001dd4 flags rw-
    LOAD off    0x00017fe8 vaddr 0x10017fe8 paddr 0x10017fe8 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013dc4  10000230  10000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000044c  10013ff4  10013ff4  00014ff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001dd4  10014440  10016214  00015440  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10017fe8  10017fe8  00017fe8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00017214  2**0
                  CONTENTS
  7 .sdram        00000000  10018148  10018148  00017214  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00017214  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000fb0  00000000  00000000  00017238  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00027210  00000000  00000000  000181e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009c59  00000000  00000000  0003f3f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000d009  00000000  00000000  00049051  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000023b8  00000000  00000000  0005605c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003a55  00000000  00000000  00058414  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001cae6  00000000  00000000  0005be69  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00078950  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001ae0  00000000  00000000  00078990  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007d895  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0007d898  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007d8a4  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007d8a5  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0007d8a6  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007d8aa  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0007d8ae  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0007d8b2  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0007d8bd  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0007d8c8  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  0007d8d3  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000000e  00000000  00000000  0007d8db  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0004d794  00000000  00000000  0007d8e9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000230 l    d  .text	00000000 .text
10013ff4 l    d  .rodata	00000000 .rodata
10014440 l    d  .rwdata	00000000 .rwdata
10017fe8 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
10018148 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../vga_text_mode_color_bsp//obj/HAL/src/crt0.o
10000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 palette_test.c
100161cc l     O .rwdata	00000004 vga_ctrl
10014440 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
100161d0 l     O .rwdata	00000004 vga_ctrl
100145b0 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
10014146 l     O .rodata	00000010 zeroes.4389
10014156 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
10014166 l     O .rodata	00000010 zeroes.4404
100058c4 l     F .text	000000bc __sbprintf
10014176 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10005ad4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1000762c l     F .text	00000008 __fp_unlock
10007640 l     F .text	0000019c __sinit.part.1
100077dc l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
10014720 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
10014b64 l     O .rwdata	00000020 lc_ctype_charset
10014b44 l     O .rwdata	00000020 lc_message_charset
10014b84 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
100141a8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
100142cc l     O .rodata	00000010 zeroes.4333
100142dc l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfprintf.c
1000c220 l     F .text	000000fc __sprint_r.part.0
100142ec l     O .rodata	00000010 zeroes.4349
1000d85c l     F .text	000000bc __sbprintf
100142fc l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
100117d4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
100118e8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
10011914 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
10011a08 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
10011af0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
10011bdc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
10011db8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10016204 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
1001205c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
10012198 l     F .text	00000034 alt_dev_reg
1001516c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
10012474 l     F .text	0000020c altera_avalon_jtag_uart_irq
10012680 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
10012f5c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
100133bc l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1001351c l     F .text	0000003c alt_get_errno
10013558 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
1001801c g     O .bss	00000004 alt_instruction_exception_handler
1000a2f4 g     F .text	00000074 _mprec_log10
1000a3e0 g     F .text	0000008c __any_on
1000de10 g     F .text	00000054 _isatty_r
100141b4 g     O .rodata	00000028 __mprec_tinytens
10011cf4 g     F .text	0000007c alt_main
10001064 g     F .text	000000c0 _puts_r
10018048 g     O .bss	00000100 alt_irq
10000c40 g     F .text	000001a4 PaletteRegReadWriteTest
1000de64 g     F .text	00000060 _lseek_r
10016214 g       *ABS*	00000000 __flash_rwdata_start
100101ac g     F .text	00000088 .hidden __eqdf2
10018148 g       *ABS*	00000000 __alt_heap_start
10001028 g     F .text	0000003c printf
1000e07c g     F .text	0000009c _wcrtomb_r
1000ab70 g     F .text	0000005c __sseek
1000798c g     F .text	00000010 __sinit
1000df24 g     F .text	00000140 __swbuf_r
10008460 g     F .text	0000007c _setlocale_r
100077e4 g     F .text	00000078 __sfmoreglue
10011d94 g     F .text	00000024 __malloc_unlock
10000764 g     F .text	0000026c textVGAColorScreenSaver
10009130 g     F .text	0000015c memmove
10007974 g     F .text	00000018 _cleanup
100093b4 g     F .text	000000a8 _Balloc
10010234 g     F .text	000000dc .hidden __gtdf2
10013944 g     F .text	00000024 altera_nios2_gen2_irq_init
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
1000ddb4 g     F .text	0000005c _fstat_r
10018000 g     O .bss	00000004 errno
1000aaec g     F .text	00000008 __seofread
1000ae80 g     F .text	000013a0 ___svfiprintf_internal_r
10018008 g     O .bss	00000004 alt_argv
1001e1cc g       *ABS*	00000000 _gp
1001202c g     F .text	00000030 usleep
10000420 g     F .text	0000008c textVGAColorClr
10014fec g     O .rwdata	00000180 alt_fd_list
10013968 g     F .text	00000090 alt_find_dev
10008fe8 g     F .text	00000148 memcpy
10007634 g     F .text	0000000c _cleanup_r
100115ec g     F .text	000000dc .hidden __floatsidf
100134a0 g     F .text	0000007c alt_io_redirect
10010310 g     F .text	000000f4 .hidden __ltdf2
10013ff4 g       *ABS*	00000000 __DTOR_END__
10001124 g     F .text	00000014 puts
10013bc4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
1000a9d0 g     F .text	00000074 __fpclassifyd
1000a250 g     F .text	000000a4 __ratio
1000d840 g     F .text	0000001c __vfiprintf_internal
10012878 g     F .text	0000021c altera_avalon_jtag_uart_read
10000ff8 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10000f14 g     F .text	00000064 .hidden __udivsi3
10011a44 g     F .text	000000ac isatty
10014204 g     O .rodata	000000c8 __mprec_tens
100084dc g     F .text	0000000c __locale_charset
10017ffc g     O .bss	00000004 __malloc_top_pad
100161dc g     O .rwdata	00000004 __mb_cur_max
1000850c g     F .text	0000000c _localeconv_r
100097e8 g     F .text	0000003c __i2b
10007e10 g     F .text	000004c8 __sfvwrite_r
1000aa44 g     F .text	00000054 _sbrk_r
1000dec4 g     F .text	00000060 _read_r
100161fc g     O .rwdata	00000004 alt_max_fd
1000daa8 g     F .text	000000f0 _fclose_r
100075fc g     F .text	00000030 fflush
10017ff8 g     O .bss	00000004 __malloc_max_sbrked_mem
1000ef30 g     F .text	000008ac .hidden __adddf3
10009ff8 g     F .text	0000010c __b2d
1000e96c g     F .text	000005c4 .hidden __umoddi3
10011c18 g     F .text	000000dc lseek
100161d4 g     O .rwdata	00000004 _global_impure_ptr
1000a46c g     F .text	00000564 _realloc_r
10018148 g       *ABS*	00000000 __bss_end
100132cc g     F .text	000000f0 alt_iic_isr_register
1001383c g     F .text	00000108 alt_tick
1000e370 g     F .text	000005fc .hidden __udivdi3
1000dd10 g     F .text	00000024 _fputwc_r
100141dc g     O .rodata	00000028 __mprec_bigtens
100095cc g     F .text	00000104 __s2b
100116c8 g     F .text	000000a8 .hidden __floatunsidf
10009d38 g     F .text	00000060 __mcmp
100079ac g     F .text	00000018 __fp_lock_all
10013280 g     F .text	0000004c alt_ic_irq_enabled
100137a0 g     F .text	0000009c alt_alarm_stop
10018010 g     O .bss	00000004 alt_irq_active
100000fc g     F .exceptions	000000d4 alt_irq_handler
10014fc4 g     O .rwdata	00000028 alt_dev_null
10012f3c g     F .text	00000020 alt_dcache_flush_all
100096d0 g     F .text	00000068 __hi0bits
1001156c g     F .text	00000080 .hidden __fixdfsi
10016214 g       *ABS*	00000000 __ram_rwdata_end
100161f4 g     O .rwdata	00000008 alt_dev_list
10012098 g     F .text	00000100 write
10014440 g       *ABS*	00000000 __ram_rodata_end
10011950 g     F .text	000000b8 fstat
10010310 g     F .text	000000f4 .hidden __ledf2
10009ab0 g     F .text	00000140 __pow5mult
1000c334 g     F .text	0000150c ___vfiprintf_internal_r
10017ff0 g     O .bss	00000004 __nlocale_changed
10000f78 g     F .text	00000058 .hidden __umodsi3
10018148 g       *ABS*	00000000 end
100123b4 g     F .text	000000c0 altera_avalon_jtag_uart_init
100001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
10013ff4 g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
10011770 g     F .text	00000064 .hidden __clzsi2
10012a94 g     F .text	00000224 altera_avalon_jtag_uart_write
1000799c g     F .text	00000004 __sfp_lock_acquire
10008f04 g     F .text	000000e4 memchr
100035cc g     F .text	000022dc ___vfprintf_internal_r
100011b4 g     F .text	00000058 _sprintf_r
10007b00 g     F .text	00000310 _free_r
100084e8 g     F .text	00000010 __locale_mb_cur_max
10013e40 g     F .text	00000180 __call_exitprocs
10017fec g     O .bss	00000004 __mlocale_changed
100161e0 g     O .rwdata	00000004 __malloc_sbrk_base
10000230 g     F .text	0000003c _start
10018014 g     O .bss	00000004 _alt_tick_rate
10001150 g     F .text	00000064 rand
10009bf0 g     F .text	00000148 __lshift
10018018 g     O .bss	00000004 _alt_nticks
10011df4 g     F .text	00000104 read
10012204 g     F .text	0000004c alt_sys_init
1000acb0 g     F .text	000001d0 __ssprint_r
10013d28 g     F .text	00000118 __register_exitproc
10009824 g     F .text	0000028c __multiply
10012720 g     F .text	00000068 altera_avalon_jtag_uart_close
10000fd0 g     F .text	00000028 .hidden __mulsi3
10014440 g       *ABS*	00000000 __ram_rwdata_start
10013ff4 g       *ABS*	00000000 __ram_rodata_start
10018020 g     O .bss	00000028 __malloc_current_mallinfo
1000a104 g     F .text	0000014c __d2b
10012250 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
10013b00 g     F .text	000000c4 alt_get_fd
10012de4 g     F .text	00000158 alt_busy_sleep
1000d978 g     F .text	00000054 _close_r
10013cac g     F .text	0000007c memcmp
10012310 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10018148 g       *ABS*	00000000 __alt_stack_base
10012360 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10005980 g     F .text	00000154 __swsetup_r
1000f7dc g     F .text	000009d0 .hidden __divdf3
1000785c g     F .text	00000118 __sfp
1000a368 g     F .text	00000078 __copybits
10014bbc g     O .rwdata	00000408 __malloc_av_
100079a8 g     F .text	00000004 __sinit_lock_release
10010404 g     F .text	0000086c .hidden __muldf3
1000aa98 g     F .text	00000054 __sread
100139f8 g     F .text	00000108 alt_find_file
10012f98 g     F .text	000000a4 alt_dev_llist_insert
10011d70 g     F .text	00000024 __malloc_lock
10011f7c g     F .text	000000b0 sbrk
10001310 g     F .text	000022bc ___svfprintf_internal_r
100075a0 g     F .text	0000005c _fflush_r
1000d9cc g     F .text	000000dc _calloc_r
10017fe8 g       *ABS*	00000000 __bss_start
1000928c g     F .text	00000128 memset
10000de4 g     F .text	00000038 main
1001800c g     O .bss	00000004 alt_envp
10017ff4 g     O .bss	00000004 __malloc_max_total_mem
100122b0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1000e064 g     F .text	00000018 __swbuf
10001138 g     F .text	00000018 srand
1000abcc g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000db98 g     F .text	00000014 fclose
10005cfc g     F .text	00001688 _dtoa_r
100086f8 g     F .text	0000080c _malloc_r
1000e1d8 g     F .text	00000030 __ascii_wctomb
10016200 g     O .rwdata	00000004 alt_errno
100082d8 g     F .text	000000c4 _fwalk
10000e1c g     F .text	00000084 .hidden __divsi3
100005bc g     F .text	000001a8 setColorPalette
100079dc g     F .text	00000124 _malloc_trim_r
10013ff4 g       *ABS*	00000000 __CTOR_END__
1000abd4 g     F .text	000000dc strcmp
10013ff4 g       *ABS*	00000000 __flash_rodata_start
10013ff4 g       *ABS*	00000000 __DTOR_LIST__
100101ac g     F .text	00000088 .hidden __nedf2
100121cc g     F .text	00000038 alt_irq_init
10011ef8 g     F .text	00000084 alt_release_fd
1000120c g     F .text	0000006c sprintf
1001430c g     O .rodata	00000100 .hidden __clz_tab
10017fe8 g     O .bss	00000004 _PathLocale
10013c60 g     F .text	00000014 atexit
1000d918 g     F .text	00000060 _write_r
10008518 g     F .text	00000018 setlocale
100161d8 g     O .rwdata	00000004 _impure_ptr
10018004 g     O .bss	00000004 alt_argc
10007384 g     F .text	0000021c __sflush_r
1001309c g     F .text	00000060 _do_dtors
10008504 g     F .text	00000008 __locale_cjk_lang
10000020 g       .exceptions	00000000 alt_irq_entry
10009f94 g     F .text	00000064 __ulp
100079c4 g     F .text	00000018 __fp_unlock_all
100161ec g     O .rwdata	00000008 alt_fs_list
10000020 g       *ABS*	00000000 __ram_exceptions_start
10008530 g     F .text	0000000c localeconv
1001311c g     F .text	00000050 alt_ic_isr_register
10016214 g       *ABS*	00000000 _edata
10018148 g       *ABS*	00000000 _end
100009d0 g     F .text	00000270 textVGAReadWriteTest
1000dbac g     F .text	00000164 __fputwc
10000230 g       *ABS*	00000000 __ram_exceptions_end
10012788 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
100004ac g     F .text	00000110 textVGADrawColorText
100131f4 g     F .text	0000008c alt_ic_irq_disable
1000aaf4 g     F .text	0000007c __swrite
100161e4 g     O .rwdata	00000004 __malloc_trim_threshold
100084f8 g     F .text	0000000c __locale_msgcharset
10013c74 g     F .text	00000038 exit
1000839c g     F .text	000000c4 _fwalk_reent
10009d98 g     F .text	000001fc __mdiff
10000ea0 g     F .text	00000074 .hidden __modsi3
18000000 g       *ABS*	00000000 __alt_data_end
10000020 g     F .exceptions	00000000 alt_exception
100079a0 g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
10013fc0 g     F .text	00000034 _exit
10012cb8 g     F .text	0000012c alt_alarm_start
1000e264 g     F .text	0000010c .hidden __muldi3
1000853c g     F .text	000001bc __smakebuf_r
10001278 g     F .text	00000098 strlen
10013644 g     F .text	0000015c open
10010234 g     F .text	000000dc .hidden __gedf2
100161e8 g     O .rwdata	00000004 __wctomb
1000c31c g     F .text	00000018 __sprint_r
100130fc g     F .text	00000020 alt_icache_flush_all
10016208 g     O .rwdata	00000004 alt_priority_mask
1001316c g     F .text	00000088 alt_ic_irq_enable
100058a8 g     F .text	0000001c __vfprintf_internal
1000e208 g     F .text	0000005c _wctomb_r
10010c70 g     F .text	000008fc .hidden __subdf3
10009738 g     F .text	000000b0 __lo0bits
1001620c g     O .rwdata	00000008 alt_alarm_list
1001303c g     F .text	00000060 _do_ctors
1000e118 g     F .text	000000c0 wcrtomb
10011810 g     F .text	000000d8 close
1000026c g     F .text	000001b4 paletteTest
10011b58 g     F .text	00000084 alt_load
1000dd34 g     F .text	00000080 fputwc
100079a4 g     F .text	00000004 __sinit_lock_acquire
10009484 g     F .text	00000148 __multadd
1000945c g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08408c14 	ori	at,at,560
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001d00 	call	100001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0fffb17 	ldw	r3,-20(fp)
10000130:	e0bffc17 	ldw	r2,-16(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001426 	beq	r2,zero,1000018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	008400b4 	movhi	r2,4098
10000140:	10a01204 	addi	r2,r2,-32696
10000144:	e0fffd17 	ldw	r3,-12(fp)
10000148:	180690fa 	slli	r3,r3,3
1000014c:	10c5883a 	add	r2,r2,r3
10000150:	10c00017 	ldw	r3,0(r2)
10000154:	008400b4 	movhi	r2,4098
10000158:	10a01204 	addi	r2,r2,-32696
1000015c:	e13ffd17 	ldw	r4,-12(fp)
10000160:	200890fa 	slli	r4,r4,3
10000164:	1105883a 	add	r2,r2,r4
10000168:	10800104 	addi	r2,r2,4
1000016c:	10800017 	ldw	r2,0(r2)
10000170:	1009883a 	mov	r4,r2
10000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1000017c:	0005313a 	rdctl	r2,ipending
10000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10000184:	e0bfff17 	ldw	r2,-4(fp)
10000188:	00000706 	br	100001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1000018c:	e0bffc17 	ldw	r2,-16(fp)
10000190:	1085883a 	add	r2,r2,r2
10000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10000198:	e0bffd17 	ldw	r2,-12(fp)
1000019c:	10800044 	addi	r2,r2,1
100001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
100001a4:	003fe106 	br	1000012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
100001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
100001ac:	e0bffb17 	ldw	r2,-20(fp)
100001b0:	103fdb1e 	bne	r2,zero,10000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001b4:	0001883a 	nop
}
100001b8:	0001883a 	nop
100001bc:	e037883a 	mov	sp,fp
100001c0:	dfc00117 	ldw	ra,4(sp)
100001c4:	df000017 	ldw	fp,0(sp)
100001c8:	dec00204 	addi	sp,sp,8
100001cc:	f800283a 	ret

100001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001d0:	defffb04 	addi	sp,sp,-20
100001d4:	dfc00415 	stw	ra,16(sp)
100001d8:	df000315 	stw	fp,12(sp)
100001dc:	df000304 	addi	fp,sp,12
100001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
100001e4:	00bfffc4 	movi	r2,-1
100001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
100001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f0:	d0a79417 	ldw	r2,-25008(gp)
100001f4:	10000726 	beq	r2,zero,10000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
100001f8:	d0a79417 	ldw	r2,-25008(gp)
100001fc:	e0fffd17 	ldw	r3,-12(fp)
10000200:	e1bffe17 	ldw	r6,-8(fp)
10000204:	e17fff17 	ldw	r5,-4(fp)
10000208:	1809883a 	mov	r4,r3
1000020c:	103ee83a 	callr	r2
10000210:	00000206 	br	1000021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000218:	0005883a 	mov	r2,zero
}
1000021c:	e037883a 	mov	sp,fp
10000220:	dfc00117 	ldw	ra,4(sp)
10000224:	df000017 	ldw	fp,0(sp)
10000228:	dec00204 	addi	sp,sp,8
1000022c:	f800283a 	ret

Disassembly of section .text:

10000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000230:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
10000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000238:	06840074 	movhi	gp,4097
    ori gp, gp, %lo(_gp)
1000023c:	d6b87314 	ori	gp,gp,57804
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000240:	00840074 	movhi	r2,4097
    ori r2, r2, %lo(__bss_start)
10000244:	109ffa14 	ori	r2,r2,32744

    movhi r3, %hi(__bss_end)
10000248:	00c40074 	movhi	r3,4097
    ori r3, r3, %lo(__bss_end)
1000024c:	18e05214 	ori	r3,r3,33096

    beq r2, r3, 1f
10000250:	10c00326 	beq	r2,r3,10000260 <_start+0x30>

0:
    stw zero, (r2)
10000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1000025c:	10fffd36 	bltu	r2,r3,10000254 <__alt_data_end+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000260:	0011b580 	call	10011b58 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10000264:	0011cf40 	call	10011cf4 <alt_main>

10000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000268:	003fff06 	br	10000268 <__alt_data_end+0xf8000268>

1000026c <paletteTest>:

#include "text_mode_vga_color.h"


void paletteTest()
{
1000026c:	defffa04 	addi	sp,sp,-24
10000270:	dfc00515 	stw	ra,20(sp)
10000274:	df000415 	stw	fp,16(sp)
10000278:	dc400315 	stw	r17,12(sp)
1000027c:	dc000215 	stw	r16,8(sp)
10000280:	df000404 	addi	fp,sp,16
	textVGAColorClr();
10000284:	00004200 	call	10000420 <textVGAColorClr>
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);
10000288:	00800044 	movi	r2,1
1000028c:	d8800015 	stw	r2,0(sp)
10000290:	000f883a 	mov	r7,zero
10000294:	000d883a 	mov	r6,zero
10000298:	000b883a 	mov	r5,zero
1000029c:	01040074 	movhi	r4,4097
100002a0:	210ffd04 	addi	r4,r4,16372
100002a4:	00004ac0 	call	100004ac <textVGADrawColorText>

	for (int i = 0; i < 100; i ++)
100002a8:	e03ffd15 	stw	zero,-12(fp)
100002ac:	00005106 	br	100003f4 <paletteTest+0x188>
	{
		usleep (20000);
100002b0:	01138804 	movi	r4,20000
100002b4:	001202c0 	call	1001202c <usleep>
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
100002b8:	00011500 	call	10001150 <rand>
100002bc:	1007883a 	mov	r3,r2
100002c0:	00a00034 	movhi	r2,32768
100002c4:	108003c4 	addi	r2,r2,15
100002c8:	1884703a 	and	r2,r3,r2
100002cc:	1000040e 	bge	r2,zero,100002e0 <paletteTest+0x74>
100002d0:	10bfffc4 	addi	r2,r2,-1
100002d4:	00fffc04 	movi	r3,-16
100002d8:	10c4b03a 	or	r2,r2,r3
100002dc:	10800044 	addi	r2,r2,1
100002e0:	14003fcc 	andi	r16,r2,255
100002e4:	00011500 	call	10001150 <rand>
100002e8:	1007883a 	mov	r3,r2
100002ec:	00a00034 	movhi	r2,32768
100002f0:	108003c4 	addi	r2,r2,15
100002f4:	1884703a 	and	r2,r3,r2
100002f8:	1000040e 	bge	r2,zero,1000030c <paletteTest+0xa0>
100002fc:	10bfffc4 	addi	r2,r2,-1
10000300:	00fffc04 	movi	r3,-16
10000304:	10c4b03a 	or	r2,r2,r3
10000308:	10800044 	addi	r2,r2,1
1000030c:	14403fcc 	andi	r17,r2,255
10000310:	00011500 	call	10001150 <rand>
10000314:	1007883a 	mov	r3,r2
10000318:	00a00034 	movhi	r2,32768
1000031c:	108003c4 	addi	r2,r2,15
10000320:	1884703a 	and	r2,r3,r2
10000324:	1000040e 	bge	r2,zero,10000338 <paletteTest+0xcc>
10000328:	10bfffc4 	addi	r2,r2,-1
1000032c:	00fffc04 	movi	r3,-16
10000330:	10c4b03a 	or	r2,r2,r3
10000334:	10800044 	addi	r2,r2,1
10000338:	10803fcc 	andi	r2,r2,255
1000033c:	100f883a 	mov	r7,r2
10000340:	880d883a 	mov	r6,r17
10000344:	800b883a 	mov	r5,r16
10000348:	0009883a 	mov	r4,zero
1000034c:	00005bc0 	call	100005bc <setColorPalette>
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
10000350:	00011500 	call	10001150 <rand>
10000354:	1007883a 	mov	r3,r2
10000358:	00a00034 	movhi	r2,32768
1000035c:	108003c4 	addi	r2,r2,15
10000360:	1884703a 	and	r2,r3,r2
10000364:	1000040e 	bge	r2,zero,10000378 <paletteTest+0x10c>
10000368:	10bfffc4 	addi	r2,r2,-1
1000036c:	00fffc04 	movi	r3,-16
10000370:	10c4b03a 	or	r2,r2,r3
10000374:	10800044 	addi	r2,r2,1
10000378:	14003fcc 	andi	r16,r2,255
1000037c:	00011500 	call	10001150 <rand>
10000380:	1007883a 	mov	r3,r2
10000384:	00a00034 	movhi	r2,32768
10000388:	108003c4 	addi	r2,r2,15
1000038c:	1884703a 	and	r2,r3,r2
10000390:	1000040e 	bge	r2,zero,100003a4 <paletteTest+0x138>
10000394:	10bfffc4 	addi	r2,r2,-1
10000398:	00fffc04 	movi	r3,-16
1000039c:	10c4b03a 	or	r2,r2,r3
100003a0:	10800044 	addi	r2,r2,1
100003a4:	14403fcc 	andi	r17,r2,255
100003a8:	00011500 	call	10001150 <rand>
100003ac:	1007883a 	mov	r3,r2
100003b0:	00a00034 	movhi	r2,32768
100003b4:	108003c4 	addi	r2,r2,15
100003b8:	1884703a 	and	r2,r3,r2
100003bc:	1000040e 	bge	r2,zero,100003d0 <paletteTest+0x164>
100003c0:	10bfffc4 	addi	r2,r2,-1
100003c4:	00fffc04 	movi	r3,-16
100003c8:	10c4b03a 	or	r2,r2,r3
100003cc:	10800044 	addi	r2,r2,1
100003d0:	10803fcc 	andi	r2,r2,255
100003d4:	100f883a 	mov	r7,r2
100003d8:	880d883a 	mov	r6,r17
100003dc:	800b883a 	mov	r5,r16
100003e0:	01000044 	movi	r4,1
100003e4:	00005bc0 	call	100005bc <setColorPalette>
void paletteTest()
{
	textVGAColorClr();
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);

	for (int i = 0; i < 100; i ++)
100003e8:	e0bffd17 	ldw	r2,-12(fp)
100003ec:	10800044 	addi	r2,r2,1
100003f0:	e0bffd15 	stw	r2,-12(fp)
100003f4:	e0bffd17 	ldw	r2,-12(fp)
100003f8:	10801910 	cmplti	r2,r2,100
100003fc:	103fac1e 	bne	r2,zero,100002b0 <__alt_data_end+0xf80002b0>
		usleep (20000);
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
	}

}
10000400:	0001883a 	nop
10000404:	e6fffe04 	addi	sp,fp,-8
10000408:	dfc00317 	ldw	ra,12(sp)
1000040c:	df000217 	ldw	fp,8(sp)
10000410:	dc400117 	ldw	r17,4(sp)
10000414:	dc000017 	ldw	r16,0(sp)
10000418:	dec00404 	addi	sp,sp,16
1000041c:	f800283a 	ret

10000420 <textVGAColorClr>:
#include <alt_types.h>
#include "text_mode_vga_color.h"
#include "palette_test.h"

void textVGAColorClr()
{
10000420:	defffd04 	addi	sp,sp,-12
10000424:	df000215 	stw	fp,8(sp)
10000428:	df000204 	addi	fp,sp,8
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
1000042c:	e03ffe15 	stw	zero,-8(fp)
10000430:	00000706 	br	10000450 <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
10000434:	d0e00117 	ldw	r3,-32764(gp)
10000438:	e0bffe17 	ldw	r2,-8(fp)
1000043c:	1885883a 	add	r2,r3,r2
10000440:	10000005 	stb	zero,0(r2)
#include "text_mode_vga_color.h"
#include "palette_test.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
10000444:	e0bffe17 	ldw	r2,-8(fp)
10000448:	10800044 	addi	r2,r2,1
1000044c:	e0bffe15 	stw	r2,-8(fp)
10000450:	e0bffe17 	ldw	r2,-8(fp)
10000454:	1084b010 	cmplti	r2,r2,4800
10000458:	103ff61e 	bne	r2,zero,10000434 <__alt_data_end+0xf8000434>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
    for (int i = 0; i < 8; i++)
1000045c:	e03fff15 	stw	zero,-4(fp)
10000460:	00000a06 	br	1000048c <textVGAColorClr+0x6c>
        vga_ctrl->PALETTE[i] = 0x00000000;
10000464:	d0e00117 	ldw	r3,-32764(gp)
10000468:	e0bfff17 	ldw	r2,-4(fp)
1000046c:	10820004 	addi	r2,r2,2048
10000470:	1085883a 	add	r2,r2,r2
10000474:	1085883a 	add	r2,r2,r2
10000478:	1885883a 	add	r2,r3,r2
1000047c:	10000015 	stw	zero,0(r2)
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
    for (int i = 0; i < 8; i++)
10000480:	e0bfff17 	ldw	r2,-4(fp)
10000484:	10800044 	addi	r2,r2,1
10000488:	e0bfff15 	stw	r2,-4(fp)
1000048c:	e0bfff17 	ldw	r2,-4(fp)
10000490:	10800210 	cmplti	r2,r2,8
10000494:	103ff31e 	bne	r2,zero,10000464 <__alt_data_end+0xf8000464>
        vga_ctrl->PALETTE[i] = 0x00000000;
}
10000498:	0001883a 	nop
1000049c:	e037883a 	mov	sp,fp
100004a0:	df000017 	ldw	fp,0(sp)
100004a4:	dec00104 	addi	sp,sp,4
100004a8:	f800283a 	ret

100004ac <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
100004ac:	defff704 	addi	sp,sp,-36
100004b0:	dfc00815 	stw	ra,32(sp)
100004b4:	df000715 	stw	fp,28(sp)
100004b8:	dc000615 	stw	r16,24(sp)
100004bc:	df000704 	addi	fp,sp,28
100004c0:	e13ffa15 	stw	r4,-24(fp)
100004c4:	e17ffb15 	stw	r5,-20(fp)
100004c8:	e1bffc15 	stw	r6,-16(fp)
100004cc:	3807883a 	mov	r3,r7
100004d0:	e0800217 	ldw	r2,8(fp)
100004d4:	e0fffd05 	stb	r3,-12(fp)
100004d8:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
100004dc:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
100004e0:	00002706 	br	10000580 <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
100004e4:	d4200117 	ldw	r16,-32764(gp)
100004e8:	01401404 	movi	r5,80
100004ec:	e13ffc17 	ldw	r4,-16(fp)
100004f0:	0000fd00 	call	10000fd0 <__mulsi3>
100004f4:	1007883a 	mov	r3,r2
100004f8:	e0bffb17 	ldw	r2,-20(fp)
100004fc:	1887883a 	add	r3,r3,r2
10000500:	e0bff917 	ldw	r2,-28(fp)
10000504:	1885883a 	add	r2,r3,r2
10000508:	1085883a 	add	r2,r2,r2
1000050c:	1009883a 	mov	r4,r2
10000510:	e0bffe03 	ldbu	r2,-8(fp)
10000514:	1004913a 	slli	r2,r2,4
10000518:	1007883a 	mov	r3,r2
1000051c:	e0bffd03 	ldbu	r2,-12(fp)
10000520:	1884b03a 	or	r2,r3,r2
10000524:	1007883a 	mov	r3,r2
10000528:	8105883a 	add	r2,r16,r4
1000052c:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
10000530:	d4200117 	ldw	r16,-32764(gp)
10000534:	01401404 	movi	r5,80
10000538:	e13ffc17 	ldw	r4,-16(fp)
1000053c:	0000fd00 	call	10000fd0 <__mulsi3>
10000540:	1007883a 	mov	r3,r2
10000544:	e0bffb17 	ldw	r2,-20(fp)
10000548:	1887883a 	add	r3,r3,r2
1000054c:	e0bff917 	ldw	r2,-28(fp)
10000550:	1885883a 	add	r2,r3,r2
10000554:	1085883a 	add	r2,r2,r2
10000558:	10800044 	addi	r2,r2,1
1000055c:	e0fff917 	ldw	r3,-28(fp)
10000560:	e13ffa17 	ldw	r4,-24(fp)
10000564:	20c7883a 	add	r3,r4,r3
10000568:	18c00003 	ldbu	r3,0(r3)
1000056c:	8085883a 	add	r2,r16,r2
10000570:	10c00005 	stb	r3,0(r2)
		i++;
10000574:	e0bff917 	ldw	r2,-28(fp)
10000578:	10800044 	addi	r2,r2,1
1000057c:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
10000580:	e0bff917 	ldw	r2,-28(fp)
10000584:	e0fffa17 	ldw	r3,-24(fp)
10000588:	1885883a 	add	r2,r3,r2
1000058c:	10800003 	ldbu	r2,0(r2)
10000590:	10803fcc 	andi	r2,r2,255
10000594:	1080201c 	xori	r2,r2,128
10000598:	10bfe004 	addi	r2,r2,-128
1000059c:	103fd11e 	bne	r2,zero,100004e4 <__alt_data_end+0xf80004e4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
100005a0:	0001883a 	nop
100005a4:	e6ffff04 	addi	sp,fp,-4
100005a8:	dfc00217 	ldw	ra,8(sp)
100005ac:	df000117 	ldw	fp,4(sp)
100005b0:	dc000017 	ldw	r16,0(sp)
100005b4:	dec00304 	addi	sp,sp,12
100005b8:	f800283a 	ret

100005bc <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
100005bc:	defffb04 	addi	sp,sp,-20
100005c0:	df000415 	stw	fp,16(sp)
100005c4:	df000404 	addi	fp,sp,16
100005c8:	2011883a 	mov	r8,r4
100005cc:	2809883a 	mov	r4,r5
100005d0:	3007883a 	mov	r3,r6
100005d4:	3805883a 	mov	r2,r7
100005d8:	e23ffc05 	stb	r8,-16(fp)
100005dc:	e13ffd05 	stb	r4,-12(fp)
100005e0:	e0fffe05 	stb	r3,-8(fp)
100005e4:	e0bfff05 	stb	r2,-4(fp)
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	// If even, in letter 16 bits
    if (color % 2 == 0)
100005e8:	e0bffc03 	ldbu	r2,-16(fp)
100005ec:	1080004c 	andi	r2,r2,1
100005f0:	10803fcc 	andi	r2,r2,255
100005f4:	10002c1e 	bne	r2,zero,100006a8 <setColorPalette+0xec>
    {
    	vga_ctrl->PALETTE[color / 2] &= 0xFFFFE000;
100005f8:	d1200117 	ldw	r4,-32764(gp)
100005fc:	e0bffc03 	ldbu	r2,-16(fp)
10000600:	1004d07a 	srli	r2,r2,1
10000604:	11403fcc 	andi	r5,r2,255
10000608:	d0e00117 	ldw	r3,-32764(gp)
1000060c:	10803fcc 	andi	r2,r2,255
10000610:	10820004 	addi	r2,r2,2048
10000614:	1085883a 	add	r2,r2,r2
10000618:	1085883a 	add	r2,r2,r2
1000061c:	1885883a 	add	r2,r3,r2
10000620:	10c00017 	ldw	r3,0(r2)
10000624:	00b80004 	movi	r2,-8192
10000628:	1886703a 	and	r3,r3,r2
1000062c:	28820004 	addi	r2,r5,2048
10000630:	1085883a 	add	r2,r2,r2
10000634:	1085883a 	add	r2,r2,r2
10000638:	2085883a 	add	r2,r4,r2
1000063c:	10c00015 	stw	r3,0(r2)
        vga_ctrl->PALETTE[color / 2] |= red << 9 | green << 5 | blue << 1;
10000640:	d1200117 	ldw	r4,-32764(gp)
10000644:	e0bffc03 	ldbu	r2,-16(fp)
10000648:	1004d07a 	srli	r2,r2,1
1000064c:	11403fcc 	andi	r5,r2,255
10000650:	d0e00117 	ldw	r3,-32764(gp)
10000654:	10803fcc 	andi	r2,r2,255
10000658:	10820004 	addi	r2,r2,2048
1000065c:	1085883a 	add	r2,r2,r2
10000660:	1085883a 	add	r2,r2,r2
10000664:	1885883a 	add	r2,r3,r2
10000668:	10c00017 	ldw	r3,0(r2)
1000066c:	e0bffd03 	ldbu	r2,-12(fp)
10000670:	100c927a 	slli	r6,r2,9
10000674:	e0bffe03 	ldbu	r2,-8(fp)
10000678:	1004917a 	slli	r2,r2,5
1000067c:	308cb03a 	or	r6,r6,r2
10000680:	e0bfff03 	ldbu	r2,-4(fp)
10000684:	1085883a 	add	r2,r2,r2
10000688:	3084b03a 	or	r2,r6,r2
1000068c:	1886b03a 	or	r3,r3,r2
10000690:	28820004 	addi	r2,r5,2048
10000694:	1085883a 	add	r2,r2,r2
10000698:	1085883a 	add	r2,r2,r2
1000069c:	2085883a 	add	r2,r4,r2
100006a0:	10c00015 	stw	r3,0(r2)
//    {
//    	vga_ctrl->PALETTE[0] = 0x00000000;
//    }


}
100006a4:	00002a06 	br	10000750 <setColorPalette+0x194>
    	vga_ctrl->PALETTE[color / 2] &= 0xFFFFE000;
        vga_ctrl->PALETTE[color / 2] |= red << 9 | green << 5 | blue << 1;
    }
    else
    {
    	vga_ctrl->PALETTE[color / 2] &= 0x00001FFF;
100006a8:	d1200117 	ldw	r4,-32764(gp)
100006ac:	e0bffc03 	ldbu	r2,-16(fp)
100006b0:	1004d07a 	srli	r2,r2,1
100006b4:	11403fcc 	andi	r5,r2,255
100006b8:	d0e00117 	ldw	r3,-32764(gp)
100006bc:	10803fcc 	andi	r2,r2,255
100006c0:	10820004 	addi	r2,r2,2048
100006c4:	1085883a 	add	r2,r2,r2
100006c8:	1085883a 	add	r2,r2,r2
100006cc:	1885883a 	add	r2,r3,r2
100006d0:	10800017 	ldw	r2,0(r2)
100006d4:	10c7ffcc 	andi	r3,r2,8191
100006d8:	28820004 	addi	r2,r5,2048
100006dc:	1085883a 	add	r2,r2,r2
100006e0:	1085883a 	add	r2,r2,r2
100006e4:	2085883a 	add	r2,r4,r2
100006e8:	10c00015 	stw	r3,0(r2)
        vga_ctrl->PALETTE[color / 2] |= red << 21 | green << 17 | blue << 13;
100006ec:	d1200117 	ldw	r4,-32764(gp)
100006f0:	e0bffc03 	ldbu	r2,-16(fp)
100006f4:	1004d07a 	srli	r2,r2,1
100006f8:	11403fcc 	andi	r5,r2,255
100006fc:	d0e00117 	ldw	r3,-32764(gp)
10000700:	10803fcc 	andi	r2,r2,255
10000704:	10820004 	addi	r2,r2,2048
10000708:	1085883a 	add	r2,r2,r2
1000070c:	1085883a 	add	r2,r2,r2
10000710:	1885883a 	add	r2,r3,r2
10000714:	10800017 	ldw	r2,0(r2)
10000718:	e0fffd03 	ldbu	r3,-12(fp)
1000071c:	180c957a 	slli	r6,r3,21
10000720:	e0fffe03 	ldbu	r3,-8(fp)
10000724:	1806947a 	slli	r3,r3,17
10000728:	30ccb03a 	or	r6,r6,r3
1000072c:	e0ffff03 	ldbu	r3,-4(fp)
10000730:	1806937a 	slli	r3,r3,13
10000734:	30c6b03a 	or	r3,r6,r3
10000738:	10c6b03a 	or	r3,r2,r3
1000073c:	28820004 	addi	r2,r5,2048
10000740:	1085883a 	add	r2,r2,r2
10000744:	1085883a 	add	r2,r2,r2
10000748:	2085883a 	add	r2,r4,r2
1000074c:	10c00015 	stw	r3,0(r2)
//    {
//    	vga_ctrl->PALETTE[0] = 0x00000000;
//    }


}
10000750:	0001883a 	nop
10000754:	e037883a 	mov	sp,fp
10000758:	df000017 	ldw	fp,0(sp)
1000075c:	dec00104 	addi	sp,sp,4
10000760:	f800283a 	ret

10000764 <textVGAColorScreenSaver>:


void textVGAColorScreenSaver()
{
10000764:	deffe004 	addi	sp,sp,-128
10000768:	dfc01f15 	stw	ra,124(sp)
1000076c:	df001e15 	stw	fp,120(sp)
10000770:	dcc01d15 	stw	r19,116(sp)
10000774:	dc801c15 	stw	r18,112(sp)
10000778:	dc401b15 	stw	r17,108(sp)
1000077c:	dc001a15 	stw	r16,104(sp)
10000780:	df001e04 	addi	fp,sp,120
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
10000784:	00004200 	call	10000420 <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
10000788:	e03fe515 	stw	zero,-108(fp)
1000078c:	00002806 	br	10000830 <textVGAColorScreenSaver+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
10000790:	e0bfe517 	ldw	r2,-108(fp)
10000794:	14403fcc 	andi	r17,r2,255
10000798:	04040074 	movhi	r16,4097
1000079c:	84116c04 	addi	r16,r16,17840
100007a0:	e0bfe517 	ldw	r2,-108(fp)
100007a4:	014005c4 	movi	r5,23
100007a8:	1009883a 	mov	r4,r2
100007ac:	0000fd00 	call	10000fd0 <__mulsi3>
100007b0:	8085883a 	add	r2,r16,r2
100007b4:	10800504 	addi	r2,r2,20
100007b8:	10800003 	ldbu	r2,0(r2)
100007bc:	14803fcc 	andi	r18,r2,255
100007c0:	04040074 	movhi	r16,4097
100007c4:	84116c04 	addi	r16,r16,17840
100007c8:	e0bfe517 	ldw	r2,-108(fp)
100007cc:	014005c4 	movi	r5,23
100007d0:	1009883a 	mov	r4,r2
100007d4:	0000fd00 	call	10000fd0 <__mulsi3>
100007d8:	8085883a 	add	r2,r16,r2
100007dc:	10800544 	addi	r2,r2,21
100007e0:	10800003 	ldbu	r2,0(r2)
100007e4:	14c03fcc 	andi	r19,r2,255
100007e8:	04040074 	movhi	r16,4097
100007ec:	84116c04 	addi	r16,r16,17840
100007f0:	e0bfe517 	ldw	r2,-108(fp)
100007f4:	014005c4 	movi	r5,23
100007f8:	1009883a 	mov	r4,r2
100007fc:	0000fd00 	call	10000fd0 <__mulsi3>
10000800:	8085883a 	add	r2,r16,r2
10000804:	10800584 	addi	r2,r2,22
10000808:	10800003 	ldbu	r2,0(r2)
1000080c:	10803fcc 	andi	r2,r2,255
10000810:	100f883a 	mov	r7,r2
10000814:	980d883a 	mov	r6,r19
10000818:	900b883a 	mov	r5,r18
1000081c:	8809883a 	mov	r4,r17
10000820:	00005bc0 	call	100005bc <setColorPalette>
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
10000824:	e0bfe517 	ldw	r2,-108(fp)
10000828:	10800044 	addi	r2,r2,1
1000082c:	e0bfe515 	stw	r2,-108(fp)
10000830:	e0bfe517 	ldw	r2,-108(fp)
10000834:	10800410 	cmplti	r2,r2,16
10000838:	103fd51e 	bne	r2,zero,10000790 <__alt_data_end+0xf8000790>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	while (1)
	{
		fg = rand() % 16;
1000083c:	00011500 	call	10001150 <rand>
10000840:	1007883a 	mov	r3,r2
10000844:	00a00034 	movhi	r2,32768
10000848:	108003c4 	addi	r2,r2,15
1000084c:	1884703a 	and	r2,r3,r2
10000850:	1000040e 	bge	r2,zero,10000864 <textVGAColorScreenSaver+0x100>
10000854:	10bfffc4 	addi	r2,r2,-1
10000858:	00fffc04 	movi	r3,-16
1000085c:	10c4b03a 	or	r2,r2,r3
10000860:	10800044 	addi	r2,r2,1
10000864:	e0bfe315 	stw	r2,-116(fp)
		bg = rand() % 16;
10000868:	00011500 	call	10001150 <rand>
1000086c:	1007883a 	mov	r3,r2
10000870:	00a00034 	movhi	r2,32768
10000874:	108003c4 	addi	r2,r2,15
10000878:	1884703a 	and	r2,r3,r2
1000087c:	1000040e 	bge	r2,zero,10000890 <textVGAColorScreenSaver+0x12c>
10000880:	10bfffc4 	addi	r2,r2,-1
10000884:	00fffc04 	movi	r3,-16
10000888:	10c4b03a 	or	r2,r2,r3
1000088c:	10800044 	addi	r2,r2,1
10000890:	e0bfe415 	stw	r2,-112(fp)
		while (fg == bg)
10000894:	00001606 	br	100008f0 <textVGAColorScreenSaver+0x18c>
		{
			fg = rand() % 16;
10000898:	00011500 	call	10001150 <rand>
1000089c:	1007883a 	mov	r3,r2
100008a0:	00a00034 	movhi	r2,32768
100008a4:	108003c4 	addi	r2,r2,15
100008a8:	1884703a 	and	r2,r3,r2
100008ac:	1000040e 	bge	r2,zero,100008c0 <textVGAColorScreenSaver+0x15c>
100008b0:	10bfffc4 	addi	r2,r2,-1
100008b4:	00fffc04 	movi	r3,-16
100008b8:	10c4b03a 	or	r2,r2,r3
100008bc:	10800044 	addi	r2,r2,1
100008c0:	e0bfe315 	stw	r2,-116(fp)
			bg = rand() % 16;
100008c4:	00011500 	call	10001150 <rand>
100008c8:	1007883a 	mov	r3,r2
100008cc:	00a00034 	movhi	r2,32768
100008d0:	108003c4 	addi	r2,r2,15
100008d4:	1884703a 	and	r2,r3,r2
100008d8:	1000040e 	bge	r2,zero,100008ec <textVGAColorScreenSaver+0x188>
100008dc:	10bfffc4 	addi	r2,r2,-1
100008e0:	00fffc04 	movi	r3,-16
100008e4:	10c4b03a 	or	r2,r2,r3
100008e8:	10800044 	addi	r2,r2,1
100008ec:	e0bfe415 	stw	r2,-112(fp)
	}
	while (1)
	{
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
100008f0:	e0ffe317 	ldw	r3,-116(fp)
100008f4:	e0bfe417 	ldw	r2,-112(fp)
100008f8:	18bfe726 	beq	r3,r2,10000898 <__alt_data_end+0xf8000898>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
100008fc:	014005c4 	movi	r5,23
10000900:	e13fe317 	ldw	r4,-116(fp)
10000904:	0000fd00 	call	10000fd0 <__mulsi3>
10000908:	1007883a 	mov	r3,r2
1000090c:	00840074 	movhi	r2,4097
10000910:	10916c04 	addi	r2,r2,17840
10000914:	18a1883a 	add	r16,r3,r2
10000918:	014005c4 	movi	r5,23
1000091c:	e13fe417 	ldw	r4,-112(fp)
10000920:	0000fd00 	call	10000fd0 <__mulsi3>
10000924:	1007883a 	mov	r3,r2
10000928:	00840074 	movhi	r2,4097
1000092c:	10916c04 	addi	r2,r2,17840
10000930:	1887883a 	add	r3,r3,r2
10000934:	e0bfe804 	addi	r2,fp,-96
10000938:	180f883a 	mov	r7,r3
1000093c:	800d883a 	mov	r6,r16
10000940:	01440074 	movhi	r5,4097
10000944:	29500904 	addi	r5,r5,16420
10000948:	1009883a 	mov	r4,r2
1000094c:	000120c0 	call	1000120c <sprintf>
		x = rand() % (80-strlen(color_string));
10000950:	00011500 	call	10001150 <rand>
10000954:	1021883a 	mov	r16,r2
10000958:	e0bfe804 	addi	r2,fp,-96
1000095c:	1009883a 	mov	r4,r2
10000960:	00012780 	call	10001278 <strlen>
10000964:	1007883a 	mov	r3,r2
10000968:	00801404 	movi	r2,80
1000096c:	10c5c83a 	sub	r2,r2,r3
10000970:	100b883a 	mov	r5,r2
10000974:	8009883a 	mov	r4,r16
10000978:	0000f780 	call	10000f78 <__umodsi3>
1000097c:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 30;
10000980:	00011500 	call	10001150 <rand>
10000984:	01400784 	movi	r5,30
10000988:	1009883a 	mov	r4,r2
1000098c:	0000ea00 	call	10000ea0 <__modsi3>
10000990:	e0bfe715 	stw	r2,-100(fp)
		textVGADrawColorText (color_string, x, y, bg, fg);
10000994:	e0bfe417 	ldw	r2,-112(fp)
10000998:	11003fcc 	andi	r4,r2,255
1000099c:	e0bfe317 	ldw	r2,-116(fp)
100009a0:	10803fcc 	andi	r2,r2,255
100009a4:	e0ffe804 	addi	r3,fp,-96
100009a8:	d8800015 	stw	r2,0(sp)
100009ac:	200f883a 	mov	r7,r4
100009b0:	e1bfe717 	ldw	r6,-100(fp)
100009b4:	e17fe617 	ldw	r5,-104(fp)
100009b8:	1809883a 	mov	r4,r3
100009bc:	00004ac0 	call	100004ac <textVGADrawColorText>
		usleep (100000);
100009c0:	010000b4 	movhi	r4,2
100009c4:	2121a804 	addi	r4,r4,-31072
100009c8:	001202c0 	call	1001202c <usleep>
	}
100009cc:	003f9b06 	br	1000083c <__alt_data_end+0xf800083c>

100009d0 <textVGAReadWriteTest>:
}

void textVGAReadWriteTest()
{
100009d0:	deffbd04 	addi	sp,sp,-268
100009d4:	dfc04215 	stw	ra,264(sp)
100009d8:	df004115 	stw	fp,260(sp)
100009dc:	dc004015 	stw	r16,256(sp)
100009e0:	df004104 	addi	fp,sp,260
	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
100009e4:	e03fbf15 	stw	zero,-260(fp)
100009e8:	00003106 	br	10000ab0 <textVGAReadWriteTest+0xe0>
	{
		checksum[j] = 0;
100009ec:	e0bfbf17 	ldw	r2,-260(fp)
100009f0:	1085883a 	add	r2,r2,r2
100009f4:	1085883a 	add	r2,r2,r2
100009f8:	e0ffbf04 	addi	r3,fp,-260
100009fc:	1885883a 	add	r2,r3,r2
10000a00:	10800404 	addi	r2,r2,16
10000a04:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
10000a08:	e03fc015 	stw	zero,-256(fp)
10000a0c:	00002206 	br	10000a98 <textVGAReadWriteTest+0xc8>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
10000a10:	d4200117 	ldw	r16,-32764(gp)
10000a14:	01401404 	movi	r5,80
10000a18:	e13fbf17 	ldw	r4,-260(fp)
10000a1c:	0000fd00 	call	10000fd0 <__mulsi3>
10000a20:	1007883a 	mov	r3,r2
10000a24:	e0bfc017 	ldw	r2,-256(fp)
10000a28:	1885883a 	add	r2,r3,r2
10000a2c:	e0ffc017 	ldw	r3,-256(fp)
10000a30:	1809883a 	mov	r4,r3
10000a34:	e0ffbf17 	ldw	r3,-260(fp)
10000a38:	20c7883a 	add	r3,r4,r3
10000a3c:	8085883a 	add	r2,r16,r2
10000a40:	10c00005 	stb	r3,0(r2)
			checksum[j] += i + j;
10000a44:	e0bfbf17 	ldw	r2,-260(fp)
10000a48:	1085883a 	add	r2,r2,r2
10000a4c:	1085883a 	add	r2,r2,r2
10000a50:	e13fbf04 	addi	r4,fp,-260
10000a54:	2085883a 	add	r2,r4,r2
10000a58:	10800404 	addi	r2,r2,16
10000a5c:	10800017 	ldw	r2,0(r2)
10000a60:	e13fc017 	ldw	r4,-256(fp)
10000a64:	e0ffbf17 	ldw	r3,-260(fp)
10000a68:	20c7883a 	add	r3,r4,r3
10000a6c:	10c7883a 	add	r3,r2,r3
10000a70:	e0bfbf17 	ldw	r2,-260(fp)
10000a74:	1085883a 	add	r2,r2,r2
10000a78:	1085883a 	add	r2,r2,r2
10000a7c:	e13fbf04 	addi	r4,fp,-260
10000a80:	2085883a 	add	r2,r4,r2
10000a84:	10800404 	addi	r2,r2,16
10000a88:	10c00015 	stw	r3,0(r2)
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
	{
		checksum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
10000a8c:	e0bfc017 	ldw	r2,-256(fp)
10000a90:	10800044 	addi	r2,r2,1
10000a94:	e0bfc015 	stw	r2,-256(fp)
10000a98:	e0bfc017 	ldw	r2,-256(fp)
10000a9c:	10801410 	cmplti	r2,r2,80
10000aa0:	103fdb1e 	bne	r2,zero,10000a10 <__alt_data_end+0xf8000a10>
void textVGAReadWriteTest()
{
	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
10000aa4:	e0bfbf17 	ldw	r2,-260(fp)
10000aa8:	10800044 	addi	r2,r2,1
10000aac:	e0bfbf15 	stw	r2,-260(fp)
10000ab0:	e0bfbf17 	ldw	r2,-260(fp)
10000ab4:	10800790 	cmplti	r2,r2,30
10000ab8:	103fcc1e 	bne	r2,zero,100009ec <__alt_data_end+0xf80009ec>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
10000abc:	e03fc115 	stw	zero,-252(fp)
10000ac0:	00005206 	br	10000c0c <textVGAReadWriteTest+0x23c>
	{
		readsum[j] = 0;
10000ac4:	e0bfc117 	ldw	r2,-252(fp)
10000ac8:	1085883a 	add	r2,r2,r2
10000acc:	1085883a 	add	r2,r2,r2
10000ad0:	e0ffbf04 	addi	r3,fp,-260
10000ad4:	1885883a 	add	r2,r3,r2
10000ad8:	10802204 	addi	r2,r2,136
10000adc:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
10000ae0:	e03fc215 	stw	zero,-248(fp)
10000ae4:	00001c06 	br	10000b58 <textVGAReadWriteTest+0x188>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
10000ae8:	d4200117 	ldw	r16,-32764(gp)
10000aec:	01401404 	movi	r5,80
10000af0:	e13fc117 	ldw	r4,-252(fp)
10000af4:	0000fd00 	call	10000fd0 <__mulsi3>
10000af8:	1007883a 	mov	r3,r2
10000afc:	e0bfc217 	ldw	r2,-248(fp)
10000b00:	1885883a 	add	r2,r3,r2
10000b04:	8085883a 	add	r2,r16,r2
10000b08:	11000003 	ldbu	r4,0(r2)
10000b0c:	e0bfc117 	ldw	r2,-252(fp)
10000b10:	1085883a 	add	r2,r2,r2
10000b14:	1085883a 	add	r2,r2,r2
10000b18:	e0ffbf04 	addi	r3,fp,-260
10000b1c:	1885883a 	add	r2,r3,r2
10000b20:	10802204 	addi	r2,r2,136
10000b24:	10c00017 	ldw	r3,0(r2)
10000b28:	20803fcc 	andi	r2,r4,255
10000b2c:	1887883a 	add	r3,r3,r2
10000b30:	e0bfc117 	ldw	r2,-252(fp)
10000b34:	1085883a 	add	r2,r2,r2
10000b38:	1085883a 	add	r2,r2,r2
10000b3c:	e13fbf04 	addi	r4,fp,-260
10000b40:	2085883a 	add	r2,r4,r2
10000b44:	10802204 	addi	r2,r2,136
10000b48:	10c00015 	stw	r3,0(r2)
		}
	}
	for (int j = 0; j < ROWS; j++)
	{
		readsum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
10000b4c:	e0bfc217 	ldw	r2,-248(fp)
10000b50:	10800044 	addi	r2,r2,1
10000b54:	e0bfc215 	stw	r2,-248(fp)
10000b58:	e0bfc217 	ldw	r2,-248(fp)
10000b5c:	10801410 	cmplti	r2,r2,80
10000b60:	103fe11e 	bne	r2,zero,10000ae8 <__alt_data_end+0xf8000ae8>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
			//printf ("%x \n\r", vga_ctrl->VRAM[j*COLUMNS + i]);
		}
		printf ("Row: %d, Checksum: %x, Read-back Checksum: %x\n\r", j, checksum[j], readsum[j]);
10000b64:	e0bfc117 	ldw	r2,-252(fp)
10000b68:	1085883a 	add	r2,r2,r2
10000b6c:	1085883a 	add	r2,r2,r2
10000b70:	e0ffbf04 	addi	r3,fp,-260
10000b74:	1885883a 	add	r2,r3,r2
10000b78:	10800404 	addi	r2,r2,16
10000b7c:	10c00017 	ldw	r3,0(r2)
10000b80:	e0bfc117 	ldw	r2,-252(fp)
10000b84:	1085883a 	add	r2,r2,r2
10000b88:	1085883a 	add	r2,r2,r2
10000b8c:	e13fbf04 	addi	r4,fp,-260
10000b90:	2085883a 	add	r2,r4,r2
10000b94:	10802204 	addi	r2,r2,136
10000b98:	10800017 	ldw	r2,0(r2)
10000b9c:	100f883a 	mov	r7,r2
10000ba0:	180d883a 	mov	r6,r3
10000ba4:	e17fc117 	ldw	r5,-252(fp)
10000ba8:	01040074 	movhi	r4,4097
10000bac:	21101204 	addi	r4,r4,16456
10000bb0:	00010280 	call	10001028 <printf>
		if (checksum[j] != readsum[j])
10000bb4:	e0bfc117 	ldw	r2,-252(fp)
10000bb8:	1085883a 	add	r2,r2,r2
10000bbc:	1085883a 	add	r2,r2,r2
10000bc0:	e0ffbf04 	addi	r3,fp,-260
10000bc4:	1885883a 	add	r2,r3,r2
10000bc8:	10800404 	addi	r2,r2,16
10000bcc:	10c00017 	ldw	r3,0(r2)
10000bd0:	e0bfc117 	ldw	r2,-252(fp)
10000bd4:	1085883a 	add	r2,r2,r2
10000bd8:	1085883a 	add	r2,r2,r2
10000bdc:	e13fbf04 	addi	r4,fp,-260
10000be0:	2085883a 	add	r2,r4,r2
10000be4:	10802204 	addi	r2,r2,136
10000be8:	10800017 	ldw	r2,0(r2)
10000bec:	18800426 	beq	r3,r2,10000c00 <textVGAReadWriteTest+0x230>
		{
			printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
10000bf0:	01040074 	movhi	r4,4097
10000bf4:	21101e04 	addi	r4,r4,16504
10000bf8:	00010280 	call	10001028 <printf>
			while (1){};
10000bfc:	003fff06 	br	10000bfc <__alt_data_end+0xf8000bfc>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
10000c00:	e0bfc117 	ldw	r2,-252(fp)
10000c04:	10800044 	addi	r2,r2,1
10000c08:	e0bfc115 	stw	r2,-252(fp)
10000c0c:	e0bfc117 	ldw	r2,-252(fp)
10000c10:	10800790 	cmplti	r2,r2,30
10000c14:	103fab1e 	bne	r2,zero,10000ac4 <__alt_data_end+0xf8000ac4>
		{
			printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
			while (1){};
		}
	}
	printf("Checksum match!\n");
10000c18:	01040074 	movhi	r4,4097
10000c1c:	21102a04 	addi	r4,r4,16552
10000c20:	00011240 	call	10001124 <puts>
}
10000c24:	0001883a 	nop
10000c28:	e6ffff04 	addi	sp,fp,-4
10000c2c:	dfc00217 	ldw	ra,8(sp)
10000c30:	df000117 	ldw	fp,4(sp)
10000c34:	dc000017 	ldw	r16,0(sp)
10000c38:	dec00304 	addi	sp,sp,12
10000c3c:	f800283a 	ret

10000c40 <PaletteRegReadWriteTest>:

void PaletteRegReadWriteTest()
{
10000c40:	deffeb04 	addi	sp,sp,-84
10000c44:	dfc01415 	stw	ra,80(sp)
10000c48:	df001315 	stw	fp,76(sp)
10000c4c:	df001304 	addi	fp,sp,76
	alt_u32 check[8], read[8];
	for (int i = 0; i < 8; i ++)
10000c50:	e03fed15 	stw	zero,-76(fp)
10000c54:	00001306 	br	10000ca4 <PaletteRegReadWriteTest+0x64>
	{
		vga_ctrl->PALETTE[i] = i;
10000c58:	d1200117 	ldw	r4,-32764(gp)
10000c5c:	e0ffed17 	ldw	r3,-76(fp)
10000c60:	e0bfed17 	ldw	r2,-76(fp)
10000c64:	10820004 	addi	r2,r2,2048
10000c68:	1085883a 	add	r2,r2,r2
10000c6c:	1085883a 	add	r2,r2,r2
10000c70:	2085883a 	add	r2,r4,r2
10000c74:	10c00015 	stw	r3,0(r2)
		check[i] = i;
10000c78:	e0ffed17 	ldw	r3,-76(fp)
10000c7c:	e0bfed17 	ldw	r2,-76(fp)
10000c80:	1085883a 	add	r2,r2,r2
10000c84:	1085883a 	add	r2,r2,r2
10000c88:	e13fed04 	addi	r4,fp,-76
10000c8c:	2085883a 	add	r2,r4,r2
10000c90:	10800304 	addi	r2,r2,12
10000c94:	10c00015 	stw	r3,0(r2)
}

void PaletteRegReadWriteTest()
{
	alt_u32 check[8], read[8];
	for (int i = 0; i < 8; i ++)
10000c98:	e0bfed17 	ldw	r2,-76(fp)
10000c9c:	10800044 	addi	r2,r2,1
10000ca0:	e0bfed15 	stw	r2,-76(fp)
10000ca4:	e0bfed17 	ldw	r2,-76(fp)
10000ca8:	10800210 	cmplti	r2,r2,8
10000cac:	103fea1e 	bne	r2,zero,10000c58 <__alt_data_end+0xf8000c58>
	{
		vga_ctrl->PALETTE[i] = i;
		check[i] = i;
	}
	for (int j = 0; j < 8; j++)
10000cb0:	e03fee15 	stw	zero,-72(fp)
10000cb4:	00001106 	br	10000cfc <PaletteRegReadWriteTest+0xbc>
	{
		read[j] = vga_ctrl->PALETTE[j];
10000cb8:	d0e00117 	ldw	r3,-32764(gp)
10000cbc:	e0bfee17 	ldw	r2,-72(fp)
10000cc0:	10820004 	addi	r2,r2,2048
10000cc4:	1085883a 	add	r2,r2,r2
10000cc8:	1085883a 	add	r2,r2,r2
10000ccc:	1885883a 	add	r2,r3,r2
10000cd0:	10c00017 	ldw	r3,0(r2)
10000cd4:	e0bfee17 	ldw	r2,-72(fp)
10000cd8:	1085883a 	add	r2,r2,r2
10000cdc:	1085883a 	add	r2,r2,r2
10000ce0:	e13fed04 	addi	r4,fp,-76
10000ce4:	2085883a 	add	r2,r4,r2
10000ce8:	10800b04 	addi	r2,r2,44
10000cec:	10c00015 	stw	r3,0(r2)
	for (int i = 0; i < 8; i ++)
	{
		vga_ctrl->PALETTE[i] = i;
		check[i] = i;
	}
	for (int j = 0; j < 8; j++)
10000cf0:	e0bfee17 	ldw	r2,-72(fp)
10000cf4:	10800044 	addi	r2,r2,1
10000cf8:	e0bfee15 	stw	r2,-72(fp)
10000cfc:	e0bfee17 	ldw	r2,-72(fp)
10000d00:	10800210 	cmplti	r2,r2,8
10000d04:	103fec1e 	bne	r2,zero,10000cb8 <__alt_data_end+0xf8000cb8>
	{
		read[j] = vga_ctrl->PALETTE[j];
	}
	for (int i = 0; i < 8; i++)
10000d08:	e03fef15 	stw	zero,-68(fp)
10000d0c:	00002906 	br	10000db4 <PaletteRegReadWriteTest+0x174>
	{
		printf("check: %x, read: %x\n", check[i],read[i]);
10000d10:	e0bfef17 	ldw	r2,-68(fp)
10000d14:	1085883a 	add	r2,r2,r2
10000d18:	1085883a 	add	r2,r2,r2
10000d1c:	e0ffed04 	addi	r3,fp,-76
10000d20:	1885883a 	add	r2,r3,r2
10000d24:	10800304 	addi	r2,r2,12
10000d28:	10c00017 	ldw	r3,0(r2)
10000d2c:	e0bfef17 	ldw	r2,-68(fp)
10000d30:	1085883a 	add	r2,r2,r2
10000d34:	1085883a 	add	r2,r2,r2
10000d38:	e13fed04 	addi	r4,fp,-76
10000d3c:	2085883a 	add	r2,r4,r2
10000d40:	10800b04 	addi	r2,r2,44
10000d44:	10800017 	ldw	r2,0(r2)
10000d48:	100d883a 	mov	r6,r2
10000d4c:	180b883a 	mov	r5,r3
10000d50:	01040074 	movhi	r4,4097
10000d54:	21102e04 	addi	r4,r4,16568
10000d58:	00010280 	call	10001028 <printf>
		if (check[i] != read[i])
10000d5c:	e0bfef17 	ldw	r2,-68(fp)
10000d60:	1085883a 	add	r2,r2,r2
10000d64:	1085883a 	add	r2,r2,r2
10000d68:	e0ffed04 	addi	r3,fp,-76
10000d6c:	1885883a 	add	r2,r3,r2
10000d70:	10800304 	addi	r2,r2,12
10000d74:	10c00017 	ldw	r3,0(r2)
10000d78:	e0bfef17 	ldw	r2,-68(fp)
10000d7c:	1085883a 	add	r2,r2,r2
10000d80:	1085883a 	add	r2,r2,r2
10000d84:	e13fed04 	addi	r4,fp,-76
10000d88:	2085883a 	add	r2,r4,r2
10000d8c:	10800b04 	addi	r2,r2,44
10000d90:	10800017 	ldw	r2,0(r2)
10000d94:	18800426 	beq	r3,r2,10000da8 <PaletteRegReadWriteTest+0x168>
		{
			printf("Palette mismatch!\n");
10000d98:	01040074 	movhi	r4,4097
10000d9c:	21103404 	addi	r4,r4,16592
10000da0:	00011240 	call	10001124 <puts>
			while (1){};
10000da4:	003fff06 	br	10000da4 <__alt_data_end+0xf8000da4>
	}
	for (int j = 0; j < 8; j++)
	{
		read[j] = vga_ctrl->PALETTE[j];
	}
	for (int i = 0; i < 8; i++)
10000da8:	e0bfef17 	ldw	r2,-68(fp)
10000dac:	10800044 	addi	r2,r2,1
10000db0:	e0bfef15 	stw	r2,-68(fp)
10000db4:	e0bfef17 	ldw	r2,-68(fp)
10000db8:	10800210 	cmplti	r2,r2,8
10000dbc:	103fd41e 	bne	r2,zero,10000d10 <__alt_data_end+0xf8000d10>
		{
			printf("Palette mismatch!\n");
			while (1){};
		}
	}
	printf("Palette Read Write match!\n");
10000dc0:	01040074 	movhi	r4,4097
10000dc4:	21103904 	addi	r4,r4,16612
10000dc8:	00011240 	call	10001124 <puts>
}
10000dcc:	0001883a 	nop
10000dd0:	e037883a 	mov	sp,fp
10000dd4:	dfc00117 	ldw	ra,4(sp)
10000dd8:	df000017 	ldw	fp,0(sp)
10000ddc:	dec00204 	addi	sp,sp,8
10000de0:	f800283a 	ret

10000de4 <main>:
int main()
{
10000de4:	defffe04 	addi	sp,sp,-8
10000de8:	dfc00115 	stw	ra,4(sp)
10000dec:	df000015 	stw	fp,0(sp)
10000df0:	d839883a 	mov	fp,sp
	PaletteRegReadWriteTest();
10000df4:	0000c400 	call	10000c40 <PaletteRegReadWriteTest>
	textVGAReadWriteTest();
10000df8:	00009d00 	call	100009d0 <textVGAReadWriteTest>

    paletteTest();
10000dfc:	000026c0 	call	1000026c <paletteTest>
    textVGAColorScreenSaver();
10000e00:	00007640 	call	10000764 <textVGAColorScreenSaver>
10000e04:	0005883a 	mov	r2,zero


}
10000e08:	e037883a 	mov	sp,fp
10000e0c:	dfc00117 	ldw	ra,4(sp)
10000e10:	df000017 	ldw	fp,0(sp)
10000e14:	dec00204 	addi	sp,sp,8
10000e18:	f800283a 	ret

10000e1c <__divsi3>:
10000e1c:	20001b16 	blt	r4,zero,10000e8c <__divsi3+0x70>
10000e20:	000f883a 	mov	r7,zero
10000e24:	28001616 	blt	r5,zero,10000e80 <__divsi3+0x64>
10000e28:	200d883a 	mov	r6,r4
10000e2c:	29001a2e 	bgeu	r5,r4,10000e98 <__divsi3+0x7c>
10000e30:	00800804 	movi	r2,32
10000e34:	00c00044 	movi	r3,1
10000e38:	00000106 	br	10000e40 <__divsi3+0x24>
10000e3c:	10000d26 	beq	r2,zero,10000e74 <__divsi3+0x58>
10000e40:	294b883a 	add	r5,r5,r5
10000e44:	10bfffc4 	addi	r2,r2,-1
10000e48:	18c7883a 	add	r3,r3,r3
10000e4c:	293ffb36 	bltu	r5,r4,10000e3c <__alt_data_end+0xf8000e3c>
10000e50:	0005883a 	mov	r2,zero
10000e54:	18000726 	beq	r3,zero,10000e74 <__divsi3+0x58>
10000e58:	0005883a 	mov	r2,zero
10000e5c:	31400236 	bltu	r6,r5,10000e68 <__divsi3+0x4c>
10000e60:	314dc83a 	sub	r6,r6,r5
10000e64:	10c4b03a 	or	r2,r2,r3
10000e68:	1806d07a 	srli	r3,r3,1
10000e6c:	280ad07a 	srli	r5,r5,1
10000e70:	183ffa1e 	bne	r3,zero,10000e5c <__alt_data_end+0xf8000e5c>
10000e74:	38000126 	beq	r7,zero,10000e7c <__divsi3+0x60>
10000e78:	0085c83a 	sub	r2,zero,r2
10000e7c:	f800283a 	ret
10000e80:	014bc83a 	sub	r5,zero,r5
10000e84:	39c0005c 	xori	r7,r7,1
10000e88:	003fe706 	br	10000e28 <__alt_data_end+0xf8000e28>
10000e8c:	0109c83a 	sub	r4,zero,r4
10000e90:	01c00044 	movi	r7,1
10000e94:	003fe306 	br	10000e24 <__alt_data_end+0xf8000e24>
10000e98:	00c00044 	movi	r3,1
10000e9c:	003fee06 	br	10000e58 <__alt_data_end+0xf8000e58>

10000ea0 <__modsi3>:
10000ea0:	20001716 	blt	r4,zero,10000f00 <__modsi3+0x60>
10000ea4:	000f883a 	mov	r7,zero
10000ea8:	2005883a 	mov	r2,r4
10000eac:	28001216 	blt	r5,zero,10000ef8 <__modsi3+0x58>
10000eb0:	2900162e 	bgeu	r5,r4,10000f0c <__modsi3+0x6c>
10000eb4:	01800804 	movi	r6,32
10000eb8:	00c00044 	movi	r3,1
10000ebc:	00000106 	br	10000ec4 <__modsi3+0x24>
10000ec0:	30000a26 	beq	r6,zero,10000eec <__modsi3+0x4c>
10000ec4:	294b883a 	add	r5,r5,r5
10000ec8:	31bfffc4 	addi	r6,r6,-1
10000ecc:	18c7883a 	add	r3,r3,r3
10000ed0:	293ffb36 	bltu	r5,r4,10000ec0 <__alt_data_end+0xf8000ec0>
10000ed4:	18000526 	beq	r3,zero,10000eec <__modsi3+0x4c>
10000ed8:	1806d07a 	srli	r3,r3,1
10000edc:	11400136 	bltu	r2,r5,10000ee4 <__modsi3+0x44>
10000ee0:	1145c83a 	sub	r2,r2,r5
10000ee4:	280ad07a 	srli	r5,r5,1
10000ee8:	183ffb1e 	bne	r3,zero,10000ed8 <__alt_data_end+0xf8000ed8>
10000eec:	38000126 	beq	r7,zero,10000ef4 <__modsi3+0x54>
10000ef0:	0085c83a 	sub	r2,zero,r2
10000ef4:	f800283a 	ret
10000ef8:	014bc83a 	sub	r5,zero,r5
10000efc:	003fec06 	br	10000eb0 <__alt_data_end+0xf8000eb0>
10000f00:	0109c83a 	sub	r4,zero,r4
10000f04:	01c00044 	movi	r7,1
10000f08:	003fe706 	br	10000ea8 <__alt_data_end+0xf8000ea8>
10000f0c:	00c00044 	movi	r3,1
10000f10:	003ff106 	br	10000ed8 <__alt_data_end+0xf8000ed8>

10000f14 <__udivsi3>:
10000f14:	200d883a 	mov	r6,r4
10000f18:	2900152e 	bgeu	r5,r4,10000f70 <__udivsi3+0x5c>
10000f1c:	28001416 	blt	r5,zero,10000f70 <__udivsi3+0x5c>
10000f20:	00800804 	movi	r2,32
10000f24:	00c00044 	movi	r3,1
10000f28:	00000206 	br	10000f34 <__udivsi3+0x20>
10000f2c:	10000e26 	beq	r2,zero,10000f68 <__udivsi3+0x54>
10000f30:	28000516 	blt	r5,zero,10000f48 <__udivsi3+0x34>
10000f34:	294b883a 	add	r5,r5,r5
10000f38:	10bfffc4 	addi	r2,r2,-1
10000f3c:	18c7883a 	add	r3,r3,r3
10000f40:	293ffa36 	bltu	r5,r4,10000f2c <__alt_data_end+0xf8000f2c>
10000f44:	18000826 	beq	r3,zero,10000f68 <__udivsi3+0x54>
10000f48:	0005883a 	mov	r2,zero
10000f4c:	31400236 	bltu	r6,r5,10000f58 <__udivsi3+0x44>
10000f50:	314dc83a 	sub	r6,r6,r5
10000f54:	10c4b03a 	or	r2,r2,r3
10000f58:	1806d07a 	srli	r3,r3,1
10000f5c:	280ad07a 	srli	r5,r5,1
10000f60:	183ffa1e 	bne	r3,zero,10000f4c <__alt_data_end+0xf8000f4c>
10000f64:	f800283a 	ret
10000f68:	0005883a 	mov	r2,zero
10000f6c:	f800283a 	ret
10000f70:	00c00044 	movi	r3,1
10000f74:	003ff406 	br	10000f48 <__alt_data_end+0xf8000f48>

10000f78 <__umodsi3>:
10000f78:	2005883a 	mov	r2,r4
10000f7c:	2900122e 	bgeu	r5,r4,10000fc8 <__umodsi3+0x50>
10000f80:	28001116 	blt	r5,zero,10000fc8 <__umodsi3+0x50>
10000f84:	01800804 	movi	r6,32
10000f88:	00c00044 	movi	r3,1
10000f8c:	00000206 	br	10000f98 <__umodsi3+0x20>
10000f90:	30000c26 	beq	r6,zero,10000fc4 <__umodsi3+0x4c>
10000f94:	28000516 	blt	r5,zero,10000fac <__umodsi3+0x34>
10000f98:	294b883a 	add	r5,r5,r5
10000f9c:	31bfffc4 	addi	r6,r6,-1
10000fa0:	18c7883a 	add	r3,r3,r3
10000fa4:	293ffa36 	bltu	r5,r4,10000f90 <__alt_data_end+0xf8000f90>
10000fa8:	18000626 	beq	r3,zero,10000fc4 <__umodsi3+0x4c>
10000fac:	1806d07a 	srli	r3,r3,1
10000fb0:	11400136 	bltu	r2,r5,10000fb8 <__umodsi3+0x40>
10000fb4:	1145c83a 	sub	r2,r2,r5
10000fb8:	280ad07a 	srli	r5,r5,1
10000fbc:	183ffb1e 	bne	r3,zero,10000fac <__alt_data_end+0xf8000fac>
10000fc0:	f800283a 	ret
10000fc4:	f800283a 	ret
10000fc8:	00c00044 	movi	r3,1
10000fcc:	003ff706 	br	10000fac <__alt_data_end+0xf8000fac>

10000fd0 <__mulsi3>:
10000fd0:	0005883a 	mov	r2,zero
10000fd4:	20000726 	beq	r4,zero,10000ff4 <__mulsi3+0x24>
10000fd8:	20c0004c 	andi	r3,r4,1
10000fdc:	2008d07a 	srli	r4,r4,1
10000fe0:	18000126 	beq	r3,zero,10000fe8 <__mulsi3+0x18>
10000fe4:	1145883a 	add	r2,r2,r5
10000fe8:	294b883a 	add	r5,r5,r5
10000fec:	203ffa1e 	bne	r4,zero,10000fd8 <__alt_data_end+0xf8000fd8>
10000ff0:	f800283a 	ret
10000ff4:	f800283a 	ret

10000ff8 <_printf_r>:
10000ff8:	defffd04 	addi	sp,sp,-12
10000ffc:	2805883a 	mov	r2,r5
10001000:	dfc00015 	stw	ra,0(sp)
10001004:	d9800115 	stw	r6,4(sp)
10001008:	d9c00215 	stw	r7,8(sp)
1000100c:	21400217 	ldw	r5,8(r4)
10001010:	d9c00104 	addi	r7,sp,4
10001014:	100d883a 	mov	r6,r2
10001018:	00035cc0 	call	100035cc <___vfprintf_internal_r>
1000101c:	dfc00017 	ldw	ra,0(sp)
10001020:	dec00304 	addi	sp,sp,12
10001024:	f800283a 	ret

10001028 <printf>:
10001028:	defffc04 	addi	sp,sp,-16
1000102c:	dfc00015 	stw	ra,0(sp)
10001030:	d9400115 	stw	r5,4(sp)
10001034:	d9800215 	stw	r6,8(sp)
10001038:	d9c00315 	stw	r7,12(sp)
1000103c:	00840074 	movhi	r2,4097
10001040:	10987604 	addi	r2,r2,25048
10001044:	10800017 	ldw	r2,0(r2)
10001048:	200b883a 	mov	r5,r4
1000104c:	d9800104 	addi	r6,sp,4
10001050:	11000217 	ldw	r4,8(r2)
10001054:	00058a80 	call	100058a8 <__vfprintf_internal>
10001058:	dfc00017 	ldw	ra,0(sp)
1000105c:	dec00404 	addi	sp,sp,16
10001060:	f800283a 	ret

10001064 <_puts_r>:
10001064:	defff604 	addi	sp,sp,-40
10001068:	dc000715 	stw	r16,28(sp)
1000106c:	2021883a 	mov	r16,r4
10001070:	2809883a 	mov	r4,r5
10001074:	dc400815 	stw	r17,32(sp)
10001078:	dfc00915 	stw	ra,36(sp)
1000107c:	2823883a 	mov	r17,r5
10001080:	00012780 	call	10001278 <strlen>
10001084:	10c00044 	addi	r3,r2,1
10001088:	d8800115 	stw	r2,4(sp)
1000108c:	00840074 	movhi	r2,4097
10001090:	10904004 	addi	r2,r2,16640
10001094:	d8800215 	stw	r2,8(sp)
10001098:	00800044 	movi	r2,1
1000109c:	d8800315 	stw	r2,12(sp)
100010a0:	00800084 	movi	r2,2
100010a4:	dc400015 	stw	r17,0(sp)
100010a8:	d8c00615 	stw	r3,24(sp)
100010ac:	dec00415 	stw	sp,16(sp)
100010b0:	d8800515 	stw	r2,20(sp)
100010b4:	80000226 	beq	r16,zero,100010c0 <_puts_r+0x5c>
100010b8:	80800e17 	ldw	r2,56(r16)
100010bc:	10001426 	beq	r2,zero,10001110 <_puts_r+0xac>
100010c0:	81400217 	ldw	r5,8(r16)
100010c4:	2880030b 	ldhu	r2,12(r5)
100010c8:	10c8000c 	andi	r3,r2,8192
100010cc:	1800061e 	bne	r3,zero,100010e8 <_puts_r+0x84>
100010d0:	29001917 	ldw	r4,100(r5)
100010d4:	00f7ffc4 	movi	r3,-8193
100010d8:	10880014 	ori	r2,r2,8192
100010dc:	20c6703a 	and	r3,r4,r3
100010e0:	2880030d 	sth	r2,12(r5)
100010e4:	28c01915 	stw	r3,100(r5)
100010e8:	d9800404 	addi	r6,sp,16
100010ec:	8009883a 	mov	r4,r16
100010f0:	0007e100 	call	10007e10 <__sfvwrite_r>
100010f4:	1000091e 	bne	r2,zero,1000111c <_puts_r+0xb8>
100010f8:	00800284 	movi	r2,10
100010fc:	dfc00917 	ldw	ra,36(sp)
10001100:	dc400817 	ldw	r17,32(sp)
10001104:	dc000717 	ldw	r16,28(sp)
10001108:	dec00a04 	addi	sp,sp,40
1000110c:	f800283a 	ret
10001110:	8009883a 	mov	r4,r16
10001114:	000798c0 	call	1000798c <__sinit>
10001118:	003fe906 	br	100010c0 <__alt_data_end+0xf80010c0>
1000111c:	00bfffc4 	movi	r2,-1
10001120:	003ff606 	br	100010fc <__alt_data_end+0xf80010fc>

10001124 <puts>:
10001124:	00840074 	movhi	r2,4097
10001128:	10987604 	addi	r2,r2,25048
1000112c:	200b883a 	mov	r5,r4
10001130:	11000017 	ldw	r4,0(r2)
10001134:	00010641 	jmpi	10001064 <_puts_r>

10001138 <srand>:
10001138:	00840074 	movhi	r2,4097
1000113c:	10987604 	addi	r2,r2,25048
10001140:	10800017 	ldw	r2,0(r2)
10001144:	11002915 	stw	r4,164(r2)
10001148:	10002a15 	stw	zero,168(r2)
1000114c:	f800283a 	ret

10001150 <rand>:
10001150:	00840074 	movhi	r2,4097
10001154:	defffe04 	addi	sp,sp,-8
10001158:	10987604 	addi	r2,r2,25048
1000115c:	dc000015 	stw	r16,0(sp)
10001160:	14000017 	ldw	r16,0(r2)
10001164:	dfc00115 	stw	ra,4(sp)
10001168:	01932574 	movhi	r6,19605
1000116c:	81002917 	ldw	r4,164(r16)
10001170:	81402a17 	ldw	r5,168(r16)
10001174:	01d614b4 	movhi	r7,22610
10001178:	319fcb44 	addi	r6,r6,32557
1000117c:	39fd0b44 	addi	r7,r7,-3027
10001180:	000e2640 	call	1000e264 <__muldi3>
10001184:	11000044 	addi	r4,r2,1
10001188:	2085803a 	cmpltu	r2,r4,r2
1000118c:	10c7883a 	add	r3,r2,r3
10001190:	00a00034 	movhi	r2,32768
10001194:	10bfffc4 	addi	r2,r2,-1
10001198:	1884703a 	and	r2,r3,r2
1000119c:	81002915 	stw	r4,164(r16)
100011a0:	80c02a15 	stw	r3,168(r16)
100011a4:	dfc00117 	ldw	ra,4(sp)
100011a8:	dc000017 	ldw	r16,0(sp)
100011ac:	dec00204 	addi	sp,sp,8
100011b0:	f800283a 	ret

100011b4 <_sprintf_r>:
100011b4:	deffe404 	addi	sp,sp,-112
100011b8:	2807883a 	mov	r3,r5
100011bc:	dfc01a15 	stw	ra,104(sp)
100011c0:	d9c01b15 	stw	r7,108(sp)
100011c4:	00a00034 	movhi	r2,32768
100011c8:	10bfffc4 	addi	r2,r2,-1
100011cc:	02008204 	movi	r8,520
100011d0:	d8800215 	stw	r2,8(sp)
100011d4:	d8800515 	stw	r2,20(sp)
100011d8:	d9c01b04 	addi	r7,sp,108
100011dc:	d80b883a 	mov	r5,sp
100011e0:	00bfffc4 	movi	r2,-1
100011e4:	d8c00015 	stw	r3,0(sp)
100011e8:	d8c00415 	stw	r3,16(sp)
100011ec:	da00030d 	sth	r8,12(sp)
100011f0:	d880038d 	sth	r2,14(sp)
100011f4:	00013100 	call	10001310 <___svfprintf_internal_r>
100011f8:	d8c00017 	ldw	r3,0(sp)
100011fc:	18000005 	stb	zero,0(r3)
10001200:	dfc01a17 	ldw	ra,104(sp)
10001204:	dec01c04 	addi	sp,sp,112
10001208:	f800283a 	ret

1000120c <sprintf>:
1000120c:	deffe304 	addi	sp,sp,-116
10001210:	2007883a 	mov	r3,r4
10001214:	dfc01a15 	stw	ra,104(sp)
10001218:	d9801b15 	stw	r6,108(sp)
1000121c:	d9c01c15 	stw	r7,112(sp)
10001220:	01040074 	movhi	r4,4097
10001224:	21187604 	addi	r4,r4,25048
10001228:	21000017 	ldw	r4,0(r4)
1000122c:	00a00034 	movhi	r2,32768
10001230:	10bfffc4 	addi	r2,r2,-1
10001234:	280d883a 	mov	r6,r5
10001238:	02008204 	movi	r8,520
1000123c:	d8800215 	stw	r2,8(sp)
10001240:	d8800515 	stw	r2,20(sp)
10001244:	d9c01b04 	addi	r7,sp,108
10001248:	d80b883a 	mov	r5,sp
1000124c:	00bfffc4 	movi	r2,-1
10001250:	d8c00015 	stw	r3,0(sp)
10001254:	d8c00415 	stw	r3,16(sp)
10001258:	da00030d 	sth	r8,12(sp)
1000125c:	d880038d 	sth	r2,14(sp)
10001260:	00013100 	call	10001310 <___svfprintf_internal_r>
10001264:	d8c00017 	ldw	r3,0(sp)
10001268:	18000005 	stb	zero,0(r3)
1000126c:	dfc01a17 	ldw	ra,104(sp)
10001270:	dec01d04 	addi	sp,sp,116
10001274:	f800283a 	ret

10001278 <strlen>:
10001278:	208000cc 	andi	r2,r4,3
1000127c:	10002026 	beq	r2,zero,10001300 <strlen+0x88>
10001280:	20800007 	ldb	r2,0(r4)
10001284:	10002026 	beq	r2,zero,10001308 <strlen+0x90>
10001288:	2005883a 	mov	r2,r4
1000128c:	00000206 	br	10001298 <strlen+0x20>
10001290:	10c00007 	ldb	r3,0(r2)
10001294:	18001826 	beq	r3,zero,100012f8 <strlen+0x80>
10001298:	10800044 	addi	r2,r2,1
1000129c:	10c000cc 	andi	r3,r2,3
100012a0:	183ffb1e 	bne	r3,zero,10001290 <__alt_data_end+0xf8001290>
100012a4:	10c00017 	ldw	r3,0(r2)
100012a8:	01ffbff4 	movhi	r7,65279
100012ac:	39ffbfc4 	addi	r7,r7,-257
100012b0:	00ca303a 	nor	r5,zero,r3
100012b4:	01a02074 	movhi	r6,32897
100012b8:	19c7883a 	add	r3,r3,r7
100012bc:	31a02004 	addi	r6,r6,-32640
100012c0:	1946703a 	and	r3,r3,r5
100012c4:	1986703a 	and	r3,r3,r6
100012c8:	1800091e 	bne	r3,zero,100012f0 <strlen+0x78>
100012cc:	10800104 	addi	r2,r2,4
100012d0:	10c00017 	ldw	r3,0(r2)
100012d4:	19cb883a 	add	r5,r3,r7
100012d8:	00c6303a 	nor	r3,zero,r3
100012dc:	28c6703a 	and	r3,r5,r3
100012e0:	1986703a 	and	r3,r3,r6
100012e4:	183ff926 	beq	r3,zero,100012cc <__alt_data_end+0xf80012cc>
100012e8:	00000106 	br	100012f0 <strlen+0x78>
100012ec:	10800044 	addi	r2,r2,1
100012f0:	10c00007 	ldb	r3,0(r2)
100012f4:	183ffd1e 	bne	r3,zero,100012ec <__alt_data_end+0xf80012ec>
100012f8:	1105c83a 	sub	r2,r2,r4
100012fc:	f800283a 	ret
10001300:	2005883a 	mov	r2,r4
10001304:	003fe706 	br	100012a4 <__alt_data_end+0xf80012a4>
10001308:	0005883a 	mov	r2,zero
1000130c:	f800283a 	ret

10001310 <___svfprintf_internal_r>:
10001310:	deffb704 	addi	sp,sp,-292
10001314:	dfc04815 	stw	ra,288(sp)
10001318:	ddc04615 	stw	r23,280(sp)
1000131c:	d9402d15 	stw	r5,180(sp)
10001320:	d9003915 	stw	r4,228(sp)
10001324:	302f883a 	mov	r23,r6
10001328:	d9c02e15 	stw	r7,184(sp)
1000132c:	df004715 	stw	fp,284(sp)
10001330:	dd804515 	stw	r22,276(sp)
10001334:	dd404415 	stw	r21,272(sp)
10001338:	dd004315 	stw	r20,268(sp)
1000133c:	dcc04215 	stw	r19,264(sp)
10001340:	dc804115 	stw	r18,260(sp)
10001344:	dc404015 	stw	r17,256(sp)
10001348:	dc003f15 	stw	r16,252(sp)
1000134c:	000850c0 	call	1000850c <_localeconv_r>
10001350:	10800017 	ldw	r2,0(r2)
10001354:	1009883a 	mov	r4,r2
10001358:	d8803415 	stw	r2,208(sp)
1000135c:	00012780 	call	10001278 <strlen>
10001360:	d8c02d17 	ldw	r3,180(sp)
10001364:	d8803815 	stw	r2,224(sp)
10001368:	1880030b 	ldhu	r2,12(r3)
1000136c:	1080200c 	andi	r2,r2,128
10001370:	10000226 	beq	r2,zero,1000137c <___svfprintf_internal_r+0x6c>
10001374:	18800417 	ldw	r2,16(r3)
10001378:	1006b126 	beq	r2,zero,10002e40 <___svfprintf_internal_r+0x1b30>
1000137c:	dcc03917 	ldw	r19,228(sp)
10001380:	d8c00404 	addi	r3,sp,16
10001384:	05440074 	movhi	r21,4097
10001388:	d9001e04 	addi	r4,sp,120
1000138c:	ad505184 	addi	r21,r21,16710
10001390:	d8c01e15 	stw	r3,120(sp)
10001394:	d8002015 	stw	zero,128(sp)
10001398:	d8001f15 	stw	zero,124(sp)
1000139c:	d8003315 	stw	zero,204(sp)
100013a0:	d8003615 	stw	zero,216(sp)
100013a4:	d8003715 	stw	zero,220(sp)
100013a8:	1811883a 	mov	r8,r3
100013ac:	d8003a15 	stw	zero,232(sp)
100013b0:	d8003b15 	stw	zero,236(sp)
100013b4:	d8002f15 	stw	zero,188(sp)
100013b8:	d9002815 	stw	r4,160(sp)
100013bc:	b8800007 	ldb	r2,0(r23)
100013c0:	10027726 	beq	r2,zero,10001da0 <___svfprintf_internal_r+0xa90>
100013c4:	00c00944 	movi	r3,37
100013c8:	b823883a 	mov	r17,r23
100013cc:	10c0021e 	bne	r2,r3,100013d8 <___svfprintf_internal_r+0xc8>
100013d0:	00001406 	br	10001424 <___svfprintf_internal_r+0x114>
100013d4:	10c00326 	beq	r2,r3,100013e4 <___svfprintf_internal_r+0xd4>
100013d8:	8c400044 	addi	r17,r17,1
100013dc:	88800007 	ldb	r2,0(r17)
100013e0:	103ffc1e 	bne	r2,zero,100013d4 <__alt_data_end+0xf80013d4>
100013e4:	8de1c83a 	sub	r16,r17,r23
100013e8:	80000e26 	beq	r16,zero,10001424 <___svfprintf_internal_r+0x114>
100013ec:	d8c02017 	ldw	r3,128(sp)
100013f0:	d8801f17 	ldw	r2,124(sp)
100013f4:	45c00015 	stw	r23,0(r8)
100013f8:	1c07883a 	add	r3,r3,r16
100013fc:	10800044 	addi	r2,r2,1
10001400:	d8c02015 	stw	r3,128(sp)
10001404:	44000115 	stw	r16,4(r8)
10001408:	d8801f15 	stw	r2,124(sp)
1000140c:	00c001c4 	movi	r3,7
10001410:	18809916 	blt	r3,r2,10001678 <___svfprintf_internal_r+0x368>
10001414:	42000204 	addi	r8,r8,8
10001418:	d9402f17 	ldw	r5,188(sp)
1000141c:	2c0b883a 	add	r5,r5,r16
10001420:	d9402f15 	stw	r5,188(sp)
10001424:	88800007 	ldb	r2,0(r17)
10001428:	10009a26 	beq	r2,zero,10001694 <___svfprintf_internal_r+0x384>
1000142c:	8dc00044 	addi	r23,r17,1
10001430:	8c400047 	ldb	r17,1(r17)
10001434:	0021883a 	mov	r16,zero
10001438:	00bfffc4 	movi	r2,-1
1000143c:	0025883a 	mov	r18,zero
10001440:	dc002905 	stb	r16,164(sp)
10001444:	d8002785 	stb	zero,158(sp)
10001448:	d8002b05 	stb	zero,172(sp)
1000144c:	d8802a15 	stw	r2,168(sp)
10001450:	d8003115 	stw	zero,196(sp)
10001454:	05001604 	movi	r20,88
10001458:	05800244 	movi	r22,9
1000145c:	4039883a 	mov	fp,r8
10001460:	9021883a 	mov	r16,r18
10001464:	bdc00044 	addi	r23,r23,1
10001468:	88bff804 	addi	r2,r17,-32
1000146c:	a0831e36 	bltu	r20,r2,100020e8 <___svfprintf_internal_r+0xdd8>
10001470:	100490ba 	slli	r2,r2,2
10001474:	00c40034 	movhi	r3,4096
10001478:	18c52204 	addi	r3,r3,5256
1000147c:	10c5883a 	add	r2,r2,r3
10001480:	10800017 	ldw	r2,0(r2)
10001484:	1000683a 	jmp	r2
10001488:	10002030 	cmpltui	zero,r2,128
1000148c:	100020e8 	cmpgeui	zero,r2,131
10001490:	100020e8 	cmpgeui	zero,r2,131
10001494:	10002024 	muli	zero,r2,128
10001498:	100020e8 	cmpgeui	zero,r2,131
1000149c:	100020e8 	cmpgeui	zero,r2,131
100014a0:	100020e8 	cmpgeui	zero,r2,131
100014a4:	100020e8 	cmpgeui	zero,r2,131
100014a8:	100020e8 	cmpgeui	zero,r2,131
100014ac:	100020e8 	cmpgeui	zero,r2,131
100014b0:	100016f0 	cmpltui	zero,r2,91
100014b4:	10001f34 	orhi	zero,r2,124
100014b8:	100020e8 	cmpgeui	zero,r2,131
100014bc:	100015fc 	xorhi	zero,r2,87
100014c0:	10001714 	ori	zero,r2,92
100014c4:	100020e8 	cmpgeui	zero,r2,131
100014c8:	100017a0 	cmpeqi	zero,r2,94
100014cc:	10001764 	muli	zero,r2,93
100014d0:	10001764 	muli	zero,r2,93
100014d4:	10001764 	muli	zero,r2,93
100014d8:	10001764 	muli	zero,r2,93
100014dc:	10001764 	muli	zero,r2,93
100014e0:	10001764 	muli	zero,r2,93
100014e4:	10001764 	muli	zero,r2,93
100014e8:	10001764 	muli	zero,r2,93
100014ec:	10001764 	muli	zero,r2,93
100014f0:	100020e8 	cmpgeui	zero,r2,131
100014f4:	100020e8 	cmpgeui	zero,r2,131
100014f8:	100020e8 	cmpgeui	zero,r2,131
100014fc:	100020e8 	cmpgeui	zero,r2,131
10001500:	100020e8 	cmpgeui	zero,r2,131
10001504:	100020e8 	cmpgeui	zero,r2,131
10001508:	100020e8 	cmpgeui	zero,r2,131
1000150c:	100020e8 	cmpgeui	zero,r2,131
10001510:	100020e8 	cmpgeui	zero,r2,131
10001514:	100020e8 	cmpgeui	zero,r2,131
10001518:	10001864 	muli	zero,r2,97
1000151c:	100017ac 	andhi	zero,r2,94
10001520:	100020e8 	cmpgeui	zero,r2,131
10001524:	100017ac 	andhi	zero,r2,94
10001528:	100020e8 	cmpgeui	zero,r2,131
1000152c:	100020e8 	cmpgeui	zero,r2,131
10001530:	100020e8 	cmpgeui	zero,r2,131
10001534:	100020e8 	cmpgeui	zero,r2,131
10001538:	10001858 	cmpnei	zero,r2,97
1000153c:	100020e8 	cmpgeui	zero,r2,131
10001540:	100020e8 	cmpgeui	zero,r2,131
10001544:	1000192c 	andhi	zero,r2,100
10001548:	100020e8 	cmpgeui	zero,r2,131
1000154c:	100020e8 	cmpgeui	zero,r2,131
10001550:	100020e8 	cmpgeui	zero,r2,131
10001554:	100020e8 	cmpgeui	zero,r2,131
10001558:	100020e8 	cmpgeui	zero,r2,131
1000155c:	10001da8 	cmpgeui	zero,r2,118
10001560:	100020e8 	cmpgeui	zero,r2,131
10001564:	100020e8 	cmpgeui	zero,r2,131
10001568:	10001e14 	ori	zero,r2,120
1000156c:	100020e8 	cmpgeui	zero,r2,131
10001570:	100020e8 	cmpgeui	zero,r2,131
10001574:	100020e8 	cmpgeui	zero,r2,131
10001578:	100020e8 	cmpgeui	zero,r2,131
1000157c:	100020e8 	cmpgeui	zero,r2,131
10001580:	100020e8 	cmpgeui	zero,r2,131
10001584:	100020e8 	cmpgeui	zero,r2,131
10001588:	100020e8 	cmpgeui	zero,r2,131
1000158c:	100020e8 	cmpgeui	zero,r2,131
10001590:	100020e8 	cmpgeui	zero,r2,131
10001594:	10001ed0 	cmplti	zero,r2,123
10001598:	10002050 	cmplti	zero,r2,129
1000159c:	100017ac 	andhi	zero,r2,94
100015a0:	100017ac 	andhi	zero,r2,94
100015a4:	100017ac 	andhi	zero,r2,94
100015a8:	100020c4 	addi	zero,r2,131
100015ac:	10002050 	cmplti	zero,r2,129
100015b0:	100020e8 	cmpgeui	zero,r2,131
100015b4:	100020e8 	cmpgeui	zero,r2,131
100015b8:	10002070 	cmpltui	zero,r2,129
100015bc:	100020e8 	cmpgeui	zero,r2,131
100015c0:	10002084 	addi	zero,r2,130
100015c4:	10001f14 	ori	zero,r2,124
100015c8:	10001608 	cmpgei	zero,r2,88
100015cc:	10001f4c 	andi	zero,r2,125
100015d0:	100020e8 	cmpgeui	zero,r2,131
100015d4:	10001f58 	cmpnei	zero,r2,125
100015d8:	100020e8 	cmpgeui	zero,r2,131
100015dc:	10001fbc 	xorhi	zero,r2,126
100015e0:	100020e8 	cmpgeui	zero,r2,131
100015e4:	100020e8 	cmpgeui	zero,r2,131
100015e8:	10001fdc 	xori	zero,r2,127
100015ec:	d8c03117 	ldw	r3,196(sp)
100015f0:	d8802e15 	stw	r2,184(sp)
100015f4:	00c7c83a 	sub	r3,zero,r3
100015f8:	d8c03115 	stw	r3,196(sp)
100015fc:	84000114 	ori	r16,r16,4
10001600:	bc400007 	ldb	r17,0(r23)
10001604:	003f9706 	br	10001464 <__alt_data_end+0xf8001464>
10001608:	00800c04 	movi	r2,48
1000160c:	d8802705 	stb	r2,156(sp)
10001610:	00801e04 	movi	r2,120
10001614:	d8802745 	stb	r2,157(sp)
10001618:	d9002a17 	ldw	r4,168(sp)
1000161c:	d8802e17 	ldw	r2,184(sp)
10001620:	d8002785 	stb	zero,158(sp)
10001624:	e011883a 	mov	r8,fp
10001628:	10c00104 	addi	r3,r2,4
1000162c:	15000017 	ldw	r20,0(r2)
10001630:	002d883a 	mov	r22,zero
10001634:	80800094 	ori	r2,r16,2
10001638:	2002b616 	blt	r4,zero,10002114 <___svfprintf_internal_r+0xe04>
1000163c:	00bfdfc4 	movi	r2,-129
10001640:	80a4703a 	and	r18,r16,r2
10001644:	d8c02e15 	stw	r3,184(sp)
10001648:	94800094 	ori	r18,r18,2
1000164c:	a002a01e 	bne	r20,zero,100020d0 <___svfprintf_internal_r+0xdc0>
10001650:	01440074 	movhi	r5,4097
10001654:	29504a04 	addi	r5,r5,16680
10001658:	d9403a15 	stw	r5,232(sp)
1000165c:	04401e04 	movi	r17,120
10001660:	d8c02a17 	ldw	r3,168(sp)
10001664:	0039883a 	mov	fp,zero
10001668:	1801e626 	beq	r3,zero,10001e04 <___svfprintf_internal_r+0xaf4>
1000166c:	0029883a 	mov	r20,zero
10001670:	002d883a 	mov	r22,zero
10001674:	00020506 	br	10001e8c <___svfprintf_internal_r+0xb7c>
10001678:	d9402d17 	ldw	r5,180(sp)
1000167c:	d9801e04 	addi	r6,sp,120
10001680:	9809883a 	mov	r4,r19
10001684:	000acb00 	call	1000acb0 <__ssprint_r>
10001688:	1000081e 	bne	r2,zero,100016ac <___svfprintf_internal_r+0x39c>
1000168c:	da000404 	addi	r8,sp,16
10001690:	003f6106 	br	10001418 <__alt_data_end+0xf8001418>
10001694:	d8802017 	ldw	r2,128(sp)
10001698:	10000426 	beq	r2,zero,100016ac <___svfprintf_internal_r+0x39c>
1000169c:	d9402d17 	ldw	r5,180(sp)
100016a0:	d9003917 	ldw	r4,228(sp)
100016a4:	d9801e04 	addi	r6,sp,120
100016a8:	000acb00 	call	1000acb0 <__ssprint_r>
100016ac:	d8802d17 	ldw	r2,180(sp)
100016b0:	10c0030b 	ldhu	r3,12(r2)
100016b4:	d8802f17 	ldw	r2,188(sp)
100016b8:	18c0100c 	andi	r3,r3,64
100016bc:	1806251e 	bne	r3,zero,10002f54 <___svfprintf_internal_r+0x1c44>
100016c0:	dfc04817 	ldw	ra,288(sp)
100016c4:	df004717 	ldw	fp,284(sp)
100016c8:	ddc04617 	ldw	r23,280(sp)
100016cc:	dd804517 	ldw	r22,276(sp)
100016d0:	dd404417 	ldw	r21,272(sp)
100016d4:	dd004317 	ldw	r20,268(sp)
100016d8:	dcc04217 	ldw	r19,264(sp)
100016dc:	dc804117 	ldw	r18,260(sp)
100016e0:	dc404017 	ldw	r17,256(sp)
100016e4:	dc003f17 	ldw	r16,252(sp)
100016e8:	dec04904 	addi	sp,sp,292
100016ec:	f800283a 	ret
100016f0:	d9002e17 	ldw	r4,184(sp)
100016f4:	d9402e17 	ldw	r5,184(sp)
100016f8:	21000017 	ldw	r4,0(r4)
100016fc:	28800104 	addi	r2,r5,4
10001700:	d9003115 	stw	r4,196(sp)
10001704:	203fb916 	blt	r4,zero,100015ec <__alt_data_end+0xf80015ec>
10001708:	d8802e15 	stw	r2,184(sp)
1000170c:	bc400007 	ldb	r17,0(r23)
10001710:	003f5406 	br	10001464 <__alt_data_end+0xf8001464>
10001714:	bc400007 	ldb	r17,0(r23)
10001718:	01000a84 	movi	r4,42
1000171c:	b8c00044 	addi	r3,r23,1
10001720:	89076926 	beq	r17,r4,100034c8 <___svfprintf_internal_r+0x21b8>
10001724:	8cbff404 	addi	r18,r17,-48
10001728:	b486b936 	bltu	r22,r18,10003210 <___svfprintf_internal_r+0x1f00>
1000172c:	0009883a 	mov	r4,zero
10001730:	1823883a 	mov	r17,r3
10001734:	01400284 	movi	r5,10
10001738:	0000fd00 	call	10000fd0 <__mulsi3>
1000173c:	88c00007 	ldb	r3,0(r17)
10001740:	1489883a 	add	r4,r2,r18
10001744:	8dc00044 	addi	r23,r17,1
10001748:	1cbff404 	addi	r18,r3,-48
1000174c:	b823883a 	mov	r17,r23
10001750:	b4bff82e 	bgeu	r22,r18,10001734 <__alt_data_end+0xf8001734>
10001754:	1823883a 	mov	r17,r3
10001758:	20060416 	blt	r4,zero,10002f6c <___svfprintf_internal_r+0x1c5c>
1000175c:	d9002a15 	stw	r4,168(sp)
10001760:	003f4106 	br	10001468 <__alt_data_end+0xf8001468>
10001764:	8cbff404 	addi	r18,r17,-48
10001768:	d8003115 	stw	zero,196(sp)
1000176c:	0009883a 	mov	r4,zero
10001770:	b823883a 	mov	r17,r23
10001774:	01400284 	movi	r5,10
10001778:	0000fd00 	call	10000fd0 <__mulsi3>
1000177c:	88c00007 	ldb	r3,0(r17)
10001780:	9089883a 	add	r4,r18,r2
10001784:	bdc00044 	addi	r23,r23,1
10001788:	1cbff404 	addi	r18,r3,-48
1000178c:	b823883a 	mov	r17,r23
10001790:	b4bff82e 	bgeu	r22,r18,10001774 <__alt_data_end+0xf8001774>
10001794:	1823883a 	mov	r17,r3
10001798:	d9003115 	stw	r4,196(sp)
1000179c:	003f3206 	br	10001468 <__alt_data_end+0xf8001468>
100017a0:	84002014 	ori	r16,r16,128
100017a4:	bc400007 	ldb	r17,0(r23)
100017a8:	003f2e06 	br	10001464 <__alt_data_end+0xf8001464>
100017ac:	8025883a 	mov	r18,r16
100017b0:	dc002903 	ldbu	r16,164(sp)
100017b4:	e011883a 	mov	r8,fp
100017b8:	84003fcc 	andi	r16,r16,255
100017bc:	8007721e 	bne	r16,zero,10003588 <___svfprintf_internal_r+0x2278>
100017c0:	9080020c 	andi	r2,r18,8
100017c4:	1004a526 	beq	r2,zero,10002a5c <___svfprintf_internal_r+0x174c>
100017c8:	d9002e17 	ldw	r4,184(sp)
100017cc:	d9402e17 	ldw	r5,184(sp)
100017d0:	d8802e17 	ldw	r2,184(sp)
100017d4:	21000017 	ldw	r4,0(r4)
100017d8:	29400117 	ldw	r5,4(r5)
100017dc:	10800204 	addi	r2,r2,8
100017e0:	d9003615 	stw	r4,216(sp)
100017e4:	d9403715 	stw	r5,220(sp)
100017e8:	d8802e15 	stw	r2,184(sp)
100017ec:	d9003617 	ldw	r4,216(sp)
100017f0:	d9403717 	ldw	r5,220(sp)
100017f4:	da003e15 	stw	r8,248(sp)
100017f8:	04000044 	movi	r16,1
100017fc:	000a9d00 	call	1000a9d0 <__fpclassifyd>
10001800:	da003e17 	ldw	r8,248(sp)
10001804:	1404731e 	bne	r2,r16,100029d4 <___svfprintf_internal_r+0x16c4>
10001808:	d9003617 	ldw	r4,216(sp)
1000180c:	d9403717 	ldw	r5,220(sp)
10001810:	000d883a 	mov	r6,zero
10001814:	000f883a 	mov	r7,zero
10001818:	00103100 	call	10010310 <__ledf2>
1000181c:	da003e17 	ldw	r8,248(sp)
10001820:	10061b16 	blt	r2,zero,10003090 <___svfprintf_internal_r+0x1d80>
10001824:	df002783 	ldbu	fp,158(sp)
10001828:	008011c4 	movi	r2,71
1000182c:	1445810e 	bge	r2,r17,10002e34 <___svfprintf_internal_r+0x1b24>
10001830:	04040074 	movhi	r16,4097
10001834:	84104204 	addi	r16,r16,16648
10001838:	00c000c4 	movi	r3,3
1000183c:	00bfdfc4 	movi	r2,-129
10001840:	d8c02915 	stw	r3,164(sp)
10001844:	90a4703a 	and	r18,r18,r2
10001848:	d8c02b15 	stw	r3,172(sp)
1000184c:	d8002a15 	stw	zero,168(sp)
10001850:	d8003215 	stw	zero,200(sp)
10001854:	00006c06 	br	10001a08 <___svfprintf_internal_r+0x6f8>
10001858:	84000214 	ori	r16,r16,8
1000185c:	bc400007 	ldb	r17,0(r23)
10001860:	003f0006 	br	10001464 <__alt_data_end+0xf8001464>
10001864:	8025883a 	mov	r18,r16
10001868:	dc002903 	ldbu	r16,164(sp)
1000186c:	e011883a 	mov	r8,fp
10001870:	84003fcc 	andi	r16,r16,255
10001874:	80073f1e 	bne	r16,zero,10003574 <___svfprintf_internal_r+0x2264>
10001878:	94800414 	ori	r18,r18,16
1000187c:	9080080c 	andi	r2,r18,32
10001880:	1003bb26 	beq	r2,zero,10002770 <___svfprintf_internal_r+0x1460>
10001884:	d9002e17 	ldw	r4,184(sp)
10001888:	20800117 	ldw	r2,4(r4)
1000188c:	25000017 	ldw	r20,0(r4)
10001890:	21000204 	addi	r4,r4,8
10001894:	d9002e15 	stw	r4,184(sp)
10001898:	102d883a 	mov	r22,r2
1000189c:	1003bd16 	blt	r2,zero,10002794 <___svfprintf_internal_r+0x1484>
100018a0:	d9002a17 	ldw	r4,168(sp)
100018a4:	df002783 	ldbu	fp,158(sp)
100018a8:	2003d016 	blt	r4,zero,100027ec <___svfprintf_internal_r+0x14dc>
100018ac:	00ffdfc4 	movi	r3,-129
100018b0:	a584b03a 	or	r2,r20,r22
100018b4:	90e4703a 	and	r18,r18,r3
100018b8:	10015026 	beq	r2,zero,10001dfc <___svfprintf_internal_r+0xaec>
100018bc:	b0037026 	beq	r22,zero,10002680 <___svfprintf_internal_r+0x1370>
100018c0:	dc402915 	stw	r17,164(sp)
100018c4:	dc001e04 	addi	r16,sp,120
100018c8:	b023883a 	mov	r17,r22
100018cc:	402d883a 	mov	r22,r8
100018d0:	a009883a 	mov	r4,r20
100018d4:	880b883a 	mov	r5,r17
100018d8:	01800284 	movi	r6,10
100018dc:	000f883a 	mov	r7,zero
100018e0:	000e96c0 	call	1000e96c <__umoddi3>
100018e4:	10800c04 	addi	r2,r2,48
100018e8:	843fffc4 	addi	r16,r16,-1
100018ec:	a009883a 	mov	r4,r20
100018f0:	880b883a 	mov	r5,r17
100018f4:	80800005 	stb	r2,0(r16)
100018f8:	01800284 	movi	r6,10
100018fc:	000f883a 	mov	r7,zero
10001900:	000e3700 	call	1000e370 <__udivdi3>
10001904:	1029883a 	mov	r20,r2
10001908:	10c4b03a 	or	r2,r2,r3
1000190c:	1823883a 	mov	r17,r3
10001910:	103fef1e 	bne	r2,zero,100018d0 <__alt_data_end+0xf80018d0>
10001914:	d8c02817 	ldw	r3,160(sp)
10001918:	dc402917 	ldw	r17,164(sp)
1000191c:	b011883a 	mov	r8,r22
10001920:	1c07c83a 	sub	r3,r3,r16
10001924:	d8c02b15 	stw	r3,172(sp)
10001928:	00003106 	br	100019f0 <___svfprintf_internal_r+0x6e0>
1000192c:	8025883a 	mov	r18,r16
10001930:	dc002903 	ldbu	r16,164(sp)
10001934:	e011883a 	mov	r8,fp
10001938:	84003fcc 	andi	r16,r16,255
1000193c:	80070a1e 	bne	r16,zero,10003568 <___svfprintf_internal_r+0x2258>
10001940:	94800414 	ori	r18,r18,16
10001944:	9080080c 	andi	r2,r18,32
10001948:	1002f626 	beq	r2,zero,10002524 <___svfprintf_internal_r+0x1214>
1000194c:	d9002e17 	ldw	r4,184(sp)
10001950:	d9402a17 	ldw	r5,168(sp)
10001954:	d8002785 	stb	zero,158(sp)
10001958:	20800204 	addi	r2,r4,8
1000195c:	25000017 	ldw	r20,0(r4)
10001960:	25800117 	ldw	r22,4(r4)
10001964:	28043716 	blt	r5,zero,10002a44 <___svfprintf_internal_r+0x1734>
10001968:	013fdfc4 	movi	r4,-129
1000196c:	a586b03a 	or	r3,r20,r22
10001970:	d8802e15 	stw	r2,184(sp)
10001974:	9124703a 	and	r18,r18,r4
10001978:	1802f71e 	bne	r3,zero,10002558 <___svfprintf_internal_r+0x1248>
1000197c:	d9402a17 	ldw	r5,168(sp)
10001980:	0039883a 	mov	fp,zero
10001984:	2806df26 	beq	r5,zero,10003504 <___svfprintf_internal_r+0x21f4>
10001988:	0029883a 	mov	r20,zero
1000198c:	002d883a 	mov	r22,zero
10001990:	dc001e04 	addi	r16,sp,120
10001994:	a006d0fa 	srli	r3,r20,3
10001998:	b008977a 	slli	r4,r22,29
1000199c:	b02cd0fa 	srli	r22,r22,3
100019a0:	a50001cc 	andi	r20,r20,7
100019a4:	a0800c04 	addi	r2,r20,48
100019a8:	843fffc4 	addi	r16,r16,-1
100019ac:	20e8b03a 	or	r20,r4,r3
100019b0:	80800005 	stb	r2,0(r16)
100019b4:	a586b03a 	or	r3,r20,r22
100019b8:	183ff61e 	bne	r3,zero,10001994 <__alt_data_end+0xf8001994>
100019bc:	90c0004c 	andi	r3,r18,1
100019c0:	18013f26 	beq	r3,zero,10001ec0 <___svfprintf_internal_r+0xbb0>
100019c4:	10803fcc 	andi	r2,r2,255
100019c8:	1080201c 	xori	r2,r2,128
100019cc:	10bfe004 	addi	r2,r2,-128
100019d0:	00c00c04 	movi	r3,48
100019d4:	10c13a26 	beq	r2,r3,10001ec0 <___svfprintf_internal_r+0xbb0>
100019d8:	80ffffc5 	stb	r3,-1(r16)
100019dc:	d8c02817 	ldw	r3,160(sp)
100019e0:	80bfffc4 	addi	r2,r16,-1
100019e4:	1021883a 	mov	r16,r2
100019e8:	1887c83a 	sub	r3,r3,r2
100019ec:	d8c02b15 	stw	r3,172(sp)
100019f0:	d8802b17 	ldw	r2,172(sp)
100019f4:	d9002a17 	ldw	r4,168(sp)
100019f8:	1100010e 	bge	r2,r4,10001a00 <___svfprintf_internal_r+0x6f0>
100019fc:	2005883a 	mov	r2,r4
10001a00:	d8802915 	stw	r2,164(sp)
10001a04:	d8003215 	stw	zero,200(sp)
10001a08:	e7003fcc 	andi	fp,fp,255
10001a0c:	e700201c 	xori	fp,fp,128
10001a10:	e73fe004 	addi	fp,fp,-128
10001a14:	e0000326 	beq	fp,zero,10001a24 <___svfprintf_internal_r+0x714>
10001a18:	d8c02917 	ldw	r3,164(sp)
10001a1c:	18c00044 	addi	r3,r3,1
10001a20:	d8c02915 	stw	r3,164(sp)
10001a24:	90c0008c 	andi	r3,r18,2
10001a28:	d8c02c15 	stw	r3,176(sp)
10001a2c:	18000326 	beq	r3,zero,10001a3c <___svfprintf_internal_r+0x72c>
10001a30:	d8c02917 	ldw	r3,164(sp)
10001a34:	18c00084 	addi	r3,r3,2
10001a38:	d8c02915 	stw	r3,164(sp)
10001a3c:	90c0210c 	andi	r3,r18,132
10001a40:	d8c03015 	stw	r3,192(sp)
10001a44:	1801c31e 	bne	r3,zero,10002154 <___svfprintf_internal_r+0xe44>
10001a48:	d9003117 	ldw	r4,196(sp)
10001a4c:	d8c02917 	ldw	r3,164(sp)
10001a50:	20e9c83a 	sub	r20,r4,r3
10001a54:	0501bf0e 	bge	zero,r20,10002154 <___svfprintf_internal_r+0xe44>
10001a58:	02400404 	movi	r9,16
10001a5c:	d8c02017 	ldw	r3,128(sp)
10001a60:	d8801f17 	ldw	r2,124(sp)
10001a64:	4d053d0e 	bge	r9,r20,10002f5c <___svfprintf_internal_r+0x1c4c>
10001a68:	01440074 	movhi	r5,4097
10001a6c:	29505584 	addi	r5,r5,16726
10001a70:	dc403c15 	stw	r17,240(sp)
10001a74:	d9403515 	stw	r5,212(sp)
10001a78:	a023883a 	mov	r17,r20
10001a7c:	482d883a 	mov	r22,r9
10001a80:	9029883a 	mov	r20,r18
10001a84:	070001c4 	movi	fp,7
10001a88:	8025883a 	mov	r18,r16
10001a8c:	dc002d17 	ldw	r16,180(sp)
10001a90:	00000306 	br	10001aa0 <___svfprintf_internal_r+0x790>
10001a94:	8c7ffc04 	addi	r17,r17,-16
10001a98:	42000204 	addi	r8,r8,8
10001a9c:	b440130e 	bge	r22,r17,10001aec <___svfprintf_internal_r+0x7dc>
10001aa0:	01040074 	movhi	r4,4097
10001aa4:	18c00404 	addi	r3,r3,16
10001aa8:	10800044 	addi	r2,r2,1
10001aac:	21105584 	addi	r4,r4,16726
10001ab0:	41000015 	stw	r4,0(r8)
10001ab4:	45800115 	stw	r22,4(r8)
10001ab8:	d8c02015 	stw	r3,128(sp)
10001abc:	d8801f15 	stw	r2,124(sp)
10001ac0:	e0bff40e 	bge	fp,r2,10001a94 <__alt_data_end+0xf8001a94>
10001ac4:	d9801e04 	addi	r6,sp,120
10001ac8:	800b883a 	mov	r5,r16
10001acc:	9809883a 	mov	r4,r19
10001ad0:	000acb00 	call	1000acb0 <__ssprint_r>
10001ad4:	103ef51e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10001ad8:	8c7ffc04 	addi	r17,r17,-16
10001adc:	d8c02017 	ldw	r3,128(sp)
10001ae0:	d8801f17 	ldw	r2,124(sp)
10001ae4:	da000404 	addi	r8,sp,16
10001ae8:	b47fed16 	blt	r22,r17,10001aa0 <__alt_data_end+0xf8001aa0>
10001aec:	9021883a 	mov	r16,r18
10001af0:	a025883a 	mov	r18,r20
10001af4:	8829883a 	mov	r20,r17
10001af8:	dc403c17 	ldw	r17,240(sp)
10001afc:	d9403517 	ldw	r5,212(sp)
10001b00:	a0c7883a 	add	r3,r20,r3
10001b04:	10800044 	addi	r2,r2,1
10001b08:	41400015 	stw	r5,0(r8)
10001b0c:	45000115 	stw	r20,4(r8)
10001b10:	d8c02015 	stw	r3,128(sp)
10001b14:	d8801f15 	stw	r2,124(sp)
10001b18:	010001c4 	movi	r4,7
10001b1c:	2082c116 	blt	r4,r2,10002624 <___svfprintf_internal_r+0x1314>
10001b20:	df002787 	ldb	fp,158(sp)
10001b24:	42000204 	addi	r8,r8,8
10001b28:	e0000c26 	beq	fp,zero,10001b5c <___svfprintf_internal_r+0x84c>
10001b2c:	d8801f17 	ldw	r2,124(sp)
10001b30:	d9002784 	addi	r4,sp,158
10001b34:	18c00044 	addi	r3,r3,1
10001b38:	10800044 	addi	r2,r2,1
10001b3c:	41000015 	stw	r4,0(r8)
10001b40:	01000044 	movi	r4,1
10001b44:	41000115 	stw	r4,4(r8)
10001b48:	d8c02015 	stw	r3,128(sp)
10001b4c:	d8801f15 	stw	r2,124(sp)
10001b50:	010001c4 	movi	r4,7
10001b54:	20825a16 	blt	r4,r2,100024c0 <___svfprintf_internal_r+0x11b0>
10001b58:	42000204 	addi	r8,r8,8
10001b5c:	d8802c17 	ldw	r2,176(sp)
10001b60:	10000c26 	beq	r2,zero,10001b94 <___svfprintf_internal_r+0x884>
10001b64:	d8801f17 	ldw	r2,124(sp)
10001b68:	d9002704 	addi	r4,sp,156
10001b6c:	18c00084 	addi	r3,r3,2
10001b70:	10800044 	addi	r2,r2,1
10001b74:	41000015 	stw	r4,0(r8)
10001b78:	01000084 	movi	r4,2
10001b7c:	41000115 	stw	r4,4(r8)
10001b80:	d8c02015 	stw	r3,128(sp)
10001b84:	d8801f15 	stw	r2,124(sp)
10001b88:	010001c4 	movi	r4,7
10001b8c:	20825416 	blt	r4,r2,100024e0 <___svfprintf_internal_r+0x11d0>
10001b90:	42000204 	addi	r8,r8,8
10001b94:	d9003017 	ldw	r4,192(sp)
10001b98:	00802004 	movi	r2,128
10001b9c:	2081b926 	beq	r4,r2,10002284 <___svfprintf_internal_r+0xf74>
10001ba0:	d9402a17 	ldw	r5,168(sp)
10001ba4:	d8802b17 	ldw	r2,172(sp)
10001ba8:	28adc83a 	sub	r22,r5,r2
10001bac:	05802f0e 	bge	zero,r22,10001c6c <___svfprintf_internal_r+0x95c>
10001bb0:	07000404 	movi	fp,16
10001bb4:	d8801f17 	ldw	r2,124(sp)
10001bb8:	e583e20e 	bge	fp,r22,10002b44 <___svfprintf_internal_r+0x1834>
10001bbc:	01440074 	movhi	r5,4097
10001bc0:	29505184 	addi	r5,r5,16710
10001bc4:	dc402a15 	stw	r17,168(sp)
10001bc8:	d9402c15 	stw	r5,176(sp)
10001bcc:	b023883a 	mov	r17,r22
10001bd0:	050001c4 	movi	r20,7
10001bd4:	902d883a 	mov	r22,r18
10001bd8:	8025883a 	mov	r18,r16
10001bdc:	dc002d17 	ldw	r16,180(sp)
10001be0:	00000306 	br	10001bf0 <___svfprintf_internal_r+0x8e0>
10001be4:	8c7ffc04 	addi	r17,r17,-16
10001be8:	42000204 	addi	r8,r8,8
10001bec:	e440110e 	bge	fp,r17,10001c34 <___svfprintf_internal_r+0x924>
10001bf0:	18c00404 	addi	r3,r3,16
10001bf4:	10800044 	addi	r2,r2,1
10001bf8:	45400015 	stw	r21,0(r8)
10001bfc:	47000115 	stw	fp,4(r8)
10001c00:	d8c02015 	stw	r3,128(sp)
10001c04:	d8801f15 	stw	r2,124(sp)
10001c08:	a0bff60e 	bge	r20,r2,10001be4 <__alt_data_end+0xf8001be4>
10001c0c:	d9801e04 	addi	r6,sp,120
10001c10:	800b883a 	mov	r5,r16
10001c14:	9809883a 	mov	r4,r19
10001c18:	000acb00 	call	1000acb0 <__ssprint_r>
10001c1c:	103ea31e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10001c20:	8c7ffc04 	addi	r17,r17,-16
10001c24:	d8c02017 	ldw	r3,128(sp)
10001c28:	d8801f17 	ldw	r2,124(sp)
10001c2c:	da000404 	addi	r8,sp,16
10001c30:	e47fef16 	blt	fp,r17,10001bf0 <__alt_data_end+0xf8001bf0>
10001c34:	9021883a 	mov	r16,r18
10001c38:	b025883a 	mov	r18,r22
10001c3c:	882d883a 	mov	r22,r17
10001c40:	dc402a17 	ldw	r17,168(sp)
10001c44:	d9002c17 	ldw	r4,176(sp)
10001c48:	1d87883a 	add	r3,r3,r22
10001c4c:	10800044 	addi	r2,r2,1
10001c50:	41000015 	stw	r4,0(r8)
10001c54:	45800115 	stw	r22,4(r8)
10001c58:	d8c02015 	stw	r3,128(sp)
10001c5c:	d8801f15 	stw	r2,124(sp)
10001c60:	010001c4 	movi	r4,7
10001c64:	20820e16 	blt	r4,r2,100024a0 <___svfprintf_internal_r+0x1190>
10001c68:	42000204 	addi	r8,r8,8
10001c6c:	9080400c 	andi	r2,r18,256
10001c70:	10013a1e 	bne	r2,zero,1000215c <___svfprintf_internal_r+0xe4c>
10001c74:	d9402b17 	ldw	r5,172(sp)
10001c78:	d8801f17 	ldw	r2,124(sp)
10001c7c:	44000015 	stw	r16,0(r8)
10001c80:	1947883a 	add	r3,r3,r5
10001c84:	10800044 	addi	r2,r2,1
10001c88:	41400115 	stw	r5,4(r8)
10001c8c:	d8c02015 	stw	r3,128(sp)
10001c90:	d8801f15 	stw	r2,124(sp)
10001c94:	010001c4 	movi	r4,7
10001c98:	2081f316 	blt	r4,r2,10002468 <___svfprintf_internal_r+0x1158>
10001c9c:	42000204 	addi	r8,r8,8
10001ca0:	9480010c 	andi	r18,r18,4
10001ca4:	90003226 	beq	r18,zero,10001d70 <___svfprintf_internal_r+0xa60>
10001ca8:	d9403117 	ldw	r5,196(sp)
10001cac:	d8802917 	ldw	r2,164(sp)
10001cb0:	28a1c83a 	sub	r16,r5,r2
10001cb4:	04002e0e 	bge	zero,r16,10001d70 <___svfprintf_internal_r+0xa60>
10001cb8:	04400404 	movi	r17,16
10001cbc:	d8801f17 	ldw	r2,124(sp)
10001cc0:	8c04db0e 	bge	r17,r16,10003030 <___svfprintf_internal_r+0x1d20>
10001cc4:	01440074 	movhi	r5,4097
10001cc8:	29505584 	addi	r5,r5,16726
10001ccc:	d9403515 	stw	r5,212(sp)
10001cd0:	048001c4 	movi	r18,7
10001cd4:	dd002d17 	ldw	r20,180(sp)
10001cd8:	00000306 	br	10001ce8 <___svfprintf_internal_r+0x9d8>
10001cdc:	843ffc04 	addi	r16,r16,-16
10001ce0:	42000204 	addi	r8,r8,8
10001ce4:	8c00130e 	bge	r17,r16,10001d34 <___svfprintf_internal_r+0xa24>
10001ce8:	01040074 	movhi	r4,4097
10001cec:	18c00404 	addi	r3,r3,16
10001cf0:	10800044 	addi	r2,r2,1
10001cf4:	21105584 	addi	r4,r4,16726
10001cf8:	41000015 	stw	r4,0(r8)
10001cfc:	44400115 	stw	r17,4(r8)
10001d00:	d8c02015 	stw	r3,128(sp)
10001d04:	d8801f15 	stw	r2,124(sp)
10001d08:	90bff40e 	bge	r18,r2,10001cdc <__alt_data_end+0xf8001cdc>
10001d0c:	d9801e04 	addi	r6,sp,120
10001d10:	a00b883a 	mov	r5,r20
10001d14:	9809883a 	mov	r4,r19
10001d18:	000acb00 	call	1000acb0 <__ssprint_r>
10001d1c:	103e631e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10001d20:	843ffc04 	addi	r16,r16,-16
10001d24:	d8c02017 	ldw	r3,128(sp)
10001d28:	d8801f17 	ldw	r2,124(sp)
10001d2c:	da000404 	addi	r8,sp,16
10001d30:	8c3fed16 	blt	r17,r16,10001ce8 <__alt_data_end+0xf8001ce8>
10001d34:	d9403517 	ldw	r5,212(sp)
10001d38:	1c07883a 	add	r3,r3,r16
10001d3c:	10800044 	addi	r2,r2,1
10001d40:	41400015 	stw	r5,0(r8)
10001d44:	44000115 	stw	r16,4(r8)
10001d48:	d8c02015 	stw	r3,128(sp)
10001d4c:	d8801f15 	stw	r2,124(sp)
10001d50:	010001c4 	movi	r4,7
10001d54:	2080060e 	bge	r4,r2,10001d70 <___svfprintf_internal_r+0xa60>
10001d58:	d9402d17 	ldw	r5,180(sp)
10001d5c:	d9801e04 	addi	r6,sp,120
10001d60:	9809883a 	mov	r4,r19
10001d64:	000acb00 	call	1000acb0 <__ssprint_r>
10001d68:	103e501e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10001d6c:	d8c02017 	ldw	r3,128(sp)
10001d70:	d8803117 	ldw	r2,196(sp)
10001d74:	d9002917 	ldw	r4,164(sp)
10001d78:	1100010e 	bge	r2,r4,10001d80 <___svfprintf_internal_r+0xa70>
10001d7c:	2005883a 	mov	r2,r4
10001d80:	d9402f17 	ldw	r5,188(sp)
10001d84:	288b883a 	add	r5,r5,r2
10001d88:	d9402f15 	stw	r5,188(sp)
10001d8c:	1801be1e 	bne	r3,zero,10002488 <___svfprintf_internal_r+0x1178>
10001d90:	b8800007 	ldb	r2,0(r23)
10001d94:	d8001f15 	stw	zero,124(sp)
10001d98:	da000404 	addi	r8,sp,16
10001d9c:	103d891e 	bne	r2,zero,100013c4 <__alt_data_end+0xf80013c4>
10001da0:	b823883a 	mov	r17,r23
10001da4:	003d9f06 	br	10001424 <__alt_data_end+0xf8001424>
10001da8:	8025883a 	mov	r18,r16
10001dac:	dc002903 	ldbu	r16,164(sp)
10001db0:	e011883a 	mov	r8,fp
10001db4:	84003fcc 	andi	r16,r16,255
10001db8:	8005e61e 	bne	r16,zero,10003554 <___svfprintf_internal_r+0x2244>
10001dbc:	94800414 	ori	r18,r18,16
10001dc0:	9080080c 	andi	r2,r18,32
10001dc4:	10022026 	beq	r2,zero,10002648 <___svfprintf_internal_r+0x1338>
10001dc8:	d9002e17 	ldw	r4,184(sp)
10001dcc:	d9402a17 	ldw	r5,168(sp)
10001dd0:	d8002785 	stb	zero,158(sp)
10001dd4:	20c00204 	addi	r3,r4,8
10001dd8:	25000017 	ldw	r20,0(r4)
10001ddc:	25800117 	ldw	r22,4(r4)
10001de0:	2803ad16 	blt	r5,zero,10002c98 <___svfprintf_internal_r+0x1988>
10001de4:	013fdfc4 	movi	r4,-129
10001de8:	a584b03a 	or	r2,r20,r22
10001dec:	d8c02e15 	stw	r3,184(sp)
10001df0:	9124703a 	and	r18,r18,r4
10001df4:	0039883a 	mov	fp,zero
10001df8:	103eb01e 	bne	r2,zero,100018bc <__alt_data_end+0xf80018bc>
10001dfc:	d8802a17 	ldw	r2,168(sp)
10001e00:	1002e71e 	bne	r2,zero,100029a0 <___svfprintf_internal_r+0x1690>
10001e04:	d8002a15 	stw	zero,168(sp)
10001e08:	d8002b15 	stw	zero,172(sp)
10001e0c:	dc001e04 	addi	r16,sp,120
10001e10:	003ef706 	br	100019f0 <__alt_data_end+0xf80019f0>
10001e14:	8025883a 	mov	r18,r16
10001e18:	dc002903 	ldbu	r16,164(sp)
10001e1c:	e011883a 	mov	r8,fp
10001e20:	84003fcc 	andi	r16,r16,255
10001e24:	8005c81e 	bne	r16,zero,10003548 <___svfprintf_internal_r+0x2238>
10001e28:	01040074 	movhi	r4,4097
10001e2c:	21104504 	addi	r4,r4,16660
10001e30:	d9003a15 	stw	r4,232(sp)
10001e34:	9080080c 	andi	r2,r18,32
10001e38:	10007226 	beq	r2,zero,10002004 <___svfprintf_internal_r+0xcf4>
10001e3c:	d9402e17 	ldw	r5,184(sp)
10001e40:	2d000017 	ldw	r20,0(r5)
10001e44:	2d800117 	ldw	r22,4(r5)
10001e48:	29400204 	addi	r5,r5,8
10001e4c:	d9402e15 	stw	r5,184(sp)
10001e50:	9080004c 	andi	r2,r18,1
10001e54:	1001aa26 	beq	r2,zero,10002500 <___svfprintf_internal_r+0x11f0>
10001e58:	a584b03a 	or	r2,r20,r22
10001e5c:	10032526 	beq	r2,zero,10002af4 <___svfprintf_internal_r+0x17e4>
10001e60:	d8c02a17 	ldw	r3,168(sp)
10001e64:	00800c04 	movi	r2,48
10001e68:	d8802705 	stb	r2,156(sp)
10001e6c:	dc402745 	stb	r17,157(sp)
10001e70:	d8002785 	stb	zero,158(sp)
10001e74:	90800094 	ori	r2,r18,2
10001e78:	1804a316 	blt	r3,zero,10003108 <___svfprintf_internal_r+0x1df8>
10001e7c:	00bfdfc4 	movi	r2,-129
10001e80:	90a4703a 	and	r18,r18,r2
10001e84:	94800094 	ori	r18,r18,2
10001e88:	0039883a 	mov	fp,zero
10001e8c:	d9003a17 	ldw	r4,232(sp)
10001e90:	dc001e04 	addi	r16,sp,120
10001e94:	a08003cc 	andi	r2,r20,15
10001e98:	b006973a 	slli	r3,r22,28
10001e9c:	2085883a 	add	r2,r4,r2
10001ea0:	a028d13a 	srli	r20,r20,4
10001ea4:	10800003 	ldbu	r2,0(r2)
10001ea8:	b02cd13a 	srli	r22,r22,4
10001eac:	843fffc4 	addi	r16,r16,-1
10001eb0:	1d28b03a 	or	r20,r3,r20
10001eb4:	80800005 	stb	r2,0(r16)
10001eb8:	a584b03a 	or	r2,r20,r22
10001ebc:	103ff51e 	bne	r2,zero,10001e94 <__alt_data_end+0xf8001e94>
10001ec0:	d8c02817 	ldw	r3,160(sp)
10001ec4:	1c07c83a 	sub	r3,r3,r16
10001ec8:	d8c02b15 	stw	r3,172(sp)
10001ecc:	003ec806 	br	100019f0 <__alt_data_end+0xf80019f0>
10001ed0:	d8c02e17 	ldw	r3,184(sp)
10001ed4:	d9002e17 	ldw	r4,184(sp)
10001ed8:	8025883a 	mov	r18,r16
10001edc:	18800017 	ldw	r2,0(r3)
10001ee0:	21000104 	addi	r4,r4,4
10001ee4:	00c00044 	movi	r3,1
10001ee8:	e011883a 	mov	r8,fp
10001eec:	d8c02915 	stw	r3,164(sp)
10001ef0:	d8002785 	stb	zero,158(sp)
10001ef4:	d8801405 	stb	r2,80(sp)
10001ef8:	d9002e15 	stw	r4,184(sp)
10001efc:	d8c02b15 	stw	r3,172(sp)
10001f00:	d8002a15 	stw	zero,168(sp)
10001f04:	d8003215 	stw	zero,200(sp)
10001f08:	dc001404 	addi	r16,sp,80
10001f0c:	0039883a 	mov	fp,zero
10001f10:	003ec406 	br	10001a24 <__alt_data_end+0xf8001a24>
10001f14:	8025883a 	mov	r18,r16
10001f18:	dc002903 	ldbu	r16,164(sp)
10001f1c:	e011883a 	mov	r8,fp
10001f20:	84003fcc 	andi	r16,r16,255
10001f24:	803e8726 	beq	r16,zero,10001944 <__alt_data_end+0xf8001944>
10001f28:	d8c02b03 	ldbu	r3,172(sp)
10001f2c:	d8c02785 	stb	r3,158(sp)
10001f30:	003e8406 	br	10001944 <__alt_data_end+0xf8001944>
10001f34:	00c00044 	movi	r3,1
10001f38:	d8c02905 	stb	r3,164(sp)
10001f3c:	00c00ac4 	movi	r3,43
10001f40:	d8c02b05 	stb	r3,172(sp)
10001f44:	bc400007 	ldb	r17,0(r23)
10001f48:	003d4606 	br	10001464 <__alt_data_end+0xf8001464>
10001f4c:	84000814 	ori	r16,r16,32
10001f50:	bc400007 	ldb	r17,0(r23)
10001f54:	003d4306 	br	10001464 <__alt_data_end+0xf8001464>
10001f58:	d8802e17 	ldw	r2,184(sp)
10001f5c:	8025883a 	mov	r18,r16
10001f60:	d8002785 	stb	zero,158(sp)
10001f64:	14000017 	ldw	r16,0(r2)
10001f68:	e011883a 	mov	r8,fp
10001f6c:	15000104 	addi	r20,r2,4
10001f70:	80042126 	beq	r16,zero,10002ff8 <___svfprintf_internal_r+0x1ce8>
10001f74:	d8c02a17 	ldw	r3,168(sp)
10001f78:	1803ee16 	blt	r3,zero,10002f34 <___svfprintf_internal_r+0x1c24>
10001f7c:	180d883a 	mov	r6,r3
10001f80:	000b883a 	mov	r5,zero
10001f84:	8009883a 	mov	r4,r16
10001f88:	df003e15 	stw	fp,248(sp)
10001f8c:	0008f040 	call	10008f04 <memchr>
10001f90:	da003e17 	ldw	r8,248(sp)
10001f94:	10046a26 	beq	r2,zero,10003140 <___svfprintf_internal_r+0x1e30>
10001f98:	1405c83a 	sub	r2,r2,r16
10001f9c:	d8802b15 	stw	r2,172(sp)
10001fa0:	1003ea16 	blt	r2,zero,10002f4c <___svfprintf_internal_r+0x1c3c>
10001fa4:	df002783 	ldbu	fp,158(sp)
10001fa8:	d8802915 	stw	r2,164(sp)
10001fac:	dd002e15 	stw	r20,184(sp)
10001fb0:	d8002a15 	stw	zero,168(sp)
10001fb4:	d8003215 	stw	zero,200(sp)
10001fb8:	003e9306 	br	10001a08 <__alt_data_end+0xf8001a08>
10001fbc:	8025883a 	mov	r18,r16
10001fc0:	dc002903 	ldbu	r16,164(sp)
10001fc4:	e011883a 	mov	r8,fp
10001fc8:	84003fcc 	andi	r16,r16,255
10001fcc:	803f7c26 	beq	r16,zero,10001dc0 <__alt_data_end+0xf8001dc0>
10001fd0:	d8c02b03 	ldbu	r3,172(sp)
10001fd4:	d8c02785 	stb	r3,158(sp)
10001fd8:	003f7906 	br	10001dc0 <__alt_data_end+0xf8001dc0>
10001fdc:	8025883a 	mov	r18,r16
10001fe0:	dc002903 	ldbu	r16,164(sp)
10001fe4:	e011883a 	mov	r8,fp
10001fe8:	84003fcc 	andi	r16,r16,255
10001fec:	8005741e 	bne	r16,zero,100035c0 <___svfprintf_internal_r+0x22b0>
10001ff0:	01040074 	movhi	r4,4097
10001ff4:	21104a04 	addi	r4,r4,16680
10001ff8:	d9003a15 	stw	r4,232(sp)
10001ffc:	9080080c 	andi	r2,r18,32
10002000:	103f8e1e 	bne	r2,zero,10001e3c <__alt_data_end+0xf8001e3c>
10002004:	9080040c 	andi	r2,r18,16
10002008:	1002a726 	beq	r2,zero,10002aa8 <___svfprintf_internal_r+0x1798>
1000200c:	d8802e17 	ldw	r2,184(sp)
10002010:	002d883a 	mov	r22,zero
10002014:	15000017 	ldw	r20,0(r2)
10002018:	10800104 	addi	r2,r2,4
1000201c:	d8802e15 	stw	r2,184(sp)
10002020:	003f8b06 	br	10001e50 <__alt_data_end+0xf8001e50>
10002024:	84000054 	ori	r16,r16,1
10002028:	bc400007 	ldb	r17,0(r23)
1000202c:	003d0d06 	br	10001464 <__alt_data_end+0xf8001464>
10002030:	d8802b07 	ldb	r2,172(sp)
10002034:	1002a41e 	bne	r2,zero,10002ac8 <___svfprintf_internal_r+0x17b8>
10002038:	00c00044 	movi	r3,1
1000203c:	d8c02905 	stb	r3,164(sp)
10002040:	00c00804 	movi	r3,32
10002044:	d8c02b05 	stb	r3,172(sp)
10002048:	bc400007 	ldb	r17,0(r23)
1000204c:	003d0506 	br	10001464 <__alt_data_end+0xf8001464>
10002050:	8025883a 	mov	r18,r16
10002054:	dc002903 	ldbu	r16,164(sp)
10002058:	e011883a 	mov	r8,fp
1000205c:	84003fcc 	andi	r16,r16,255
10002060:	803e0626 	beq	r16,zero,1000187c <__alt_data_end+0xf800187c>
10002064:	d8c02b03 	ldbu	r3,172(sp)
10002068:	d8c02785 	stb	r3,158(sp)
1000206c:	003e0306 	br	1000187c <__alt_data_end+0xf800187c>
10002070:	bc400007 	ldb	r17,0(r23)
10002074:	00801b04 	movi	r2,108
10002078:	88830a26 	beq	r17,r2,10002ca4 <___svfprintf_internal_r+0x1994>
1000207c:	84000414 	ori	r16,r16,16
10002080:	003cf806 	br	10001464 <__alt_data_end+0xf8001464>
10002084:	8025883a 	mov	r18,r16
10002088:	dc002903 	ldbu	r16,164(sp)
1000208c:	e011883a 	mov	r8,fp
10002090:	84003fcc 	andi	r16,r16,255
10002094:	8005471e 	bne	r16,zero,100035b4 <___svfprintf_internal_r+0x22a4>
10002098:	9080080c 	andi	r2,r18,32
1000209c:	10028c26 	beq	r2,zero,10002ad0 <___svfprintf_internal_r+0x17c0>
100020a0:	d9002e17 	ldw	r4,184(sp)
100020a4:	d9402f17 	ldw	r5,188(sp)
100020a8:	20800017 	ldw	r2,0(r4)
100020ac:	2807d7fa 	srai	r3,r5,31
100020b0:	21000104 	addi	r4,r4,4
100020b4:	d9002e15 	stw	r4,184(sp)
100020b8:	11400015 	stw	r5,0(r2)
100020bc:	10c00115 	stw	r3,4(r2)
100020c0:	003cbe06 	br	100013bc <__alt_data_end+0xf80013bc>
100020c4:	84001014 	ori	r16,r16,64
100020c8:	bc400007 	ldb	r17,0(r23)
100020cc:	003ce506 	br	10001464 <__alt_data_end+0xf8001464>
100020d0:	01040074 	movhi	r4,4097
100020d4:	21104a04 	addi	r4,r4,16680
100020d8:	0039883a 	mov	fp,zero
100020dc:	d9003a15 	stw	r4,232(sp)
100020e0:	04401e04 	movi	r17,120
100020e4:	003f6906 	br	10001e8c <__alt_data_end+0xf8001e8c>
100020e8:	8025883a 	mov	r18,r16
100020ec:	dc002903 	ldbu	r16,164(sp)
100020f0:	e011883a 	mov	r8,fp
100020f4:	84003fcc 	andi	r16,r16,255
100020f8:	8005261e 	bne	r16,zero,10003594 <___svfprintf_internal_r+0x2284>
100020fc:	883d6526 	beq	r17,zero,10001694 <__alt_data_end+0xf8001694>
10002100:	00c00044 	movi	r3,1
10002104:	d8c02915 	stw	r3,164(sp)
10002108:	dc401405 	stb	r17,80(sp)
1000210c:	d8002785 	stb	zero,158(sp)
10002110:	003f7a06 	br	10001efc <__alt_data_end+0xf8001efc>
10002114:	01040074 	movhi	r4,4097
10002118:	21104a04 	addi	r4,r4,16680
1000211c:	d9003a15 	stw	r4,232(sp)
10002120:	d8c02e15 	stw	r3,184(sp)
10002124:	1025883a 	mov	r18,r2
10002128:	04401e04 	movi	r17,120
1000212c:	a584b03a 	or	r2,r20,r22
10002130:	1000fa1e 	bne	r2,zero,1000251c <___svfprintf_internal_r+0x120c>
10002134:	0039883a 	mov	fp,zero
10002138:	00800084 	movi	r2,2
1000213c:	10803fcc 	andi	r2,r2,255
10002140:	00c00044 	movi	r3,1
10002144:	10c21626 	beq	r2,r3,100029a0 <___svfprintf_internal_r+0x1690>
10002148:	00c00084 	movi	r3,2
1000214c:	10fe0e1e 	bne	r2,r3,10001988 <__alt_data_end+0xf8001988>
10002150:	003d4606 	br	1000166c <__alt_data_end+0xf800166c>
10002154:	d8c02017 	ldw	r3,128(sp)
10002158:	003e7306 	br	10001b28 <__alt_data_end+0xf8001b28>
1000215c:	00801944 	movi	r2,101
10002160:	14407c0e 	bge	r2,r17,10002354 <___svfprintf_internal_r+0x1044>
10002164:	d9003617 	ldw	r4,216(sp)
10002168:	d9403717 	ldw	r5,220(sp)
1000216c:	000d883a 	mov	r6,zero
10002170:	000f883a 	mov	r7,zero
10002174:	d8c03d15 	stw	r3,244(sp)
10002178:	da003e15 	stw	r8,248(sp)
1000217c:	00101ac0 	call	100101ac <__eqdf2>
10002180:	d8c03d17 	ldw	r3,244(sp)
10002184:	da003e17 	ldw	r8,248(sp)
10002188:	1000f51e 	bne	r2,zero,10002560 <___svfprintf_internal_r+0x1250>
1000218c:	d8801f17 	ldw	r2,124(sp)
10002190:	01040074 	movhi	r4,4097
10002194:	21105104 	addi	r4,r4,16708
10002198:	18c00044 	addi	r3,r3,1
1000219c:	10800044 	addi	r2,r2,1
100021a0:	41000015 	stw	r4,0(r8)
100021a4:	01000044 	movi	r4,1
100021a8:	41000115 	stw	r4,4(r8)
100021ac:	d8c02015 	stw	r3,128(sp)
100021b0:	d8801f15 	stw	r2,124(sp)
100021b4:	010001c4 	movi	r4,7
100021b8:	20826616 	blt	r4,r2,10002b54 <___svfprintf_internal_r+0x1844>
100021bc:	42000204 	addi	r8,r8,8
100021c0:	d8802617 	ldw	r2,152(sp)
100021c4:	d9403317 	ldw	r5,204(sp)
100021c8:	11400216 	blt	r2,r5,100021d4 <___svfprintf_internal_r+0xec4>
100021cc:	9080004c 	andi	r2,r18,1
100021d0:	103eb326 	beq	r2,zero,10001ca0 <__alt_data_end+0xf8001ca0>
100021d4:	d8803817 	ldw	r2,224(sp)
100021d8:	d9003417 	ldw	r4,208(sp)
100021dc:	d9403817 	ldw	r5,224(sp)
100021e0:	1887883a 	add	r3,r3,r2
100021e4:	d8801f17 	ldw	r2,124(sp)
100021e8:	41000015 	stw	r4,0(r8)
100021ec:	41400115 	stw	r5,4(r8)
100021f0:	10800044 	addi	r2,r2,1
100021f4:	d8c02015 	stw	r3,128(sp)
100021f8:	d8801f15 	stw	r2,124(sp)
100021fc:	010001c4 	movi	r4,7
10002200:	2082af16 	blt	r4,r2,10002cc0 <___svfprintf_internal_r+0x19b0>
10002204:	42000204 	addi	r8,r8,8
10002208:	d8803317 	ldw	r2,204(sp)
1000220c:	143fffc4 	addi	r16,r2,-1
10002210:	043ea30e 	bge	zero,r16,10001ca0 <__alt_data_end+0xf8001ca0>
10002214:	04400404 	movi	r17,16
10002218:	d8801f17 	ldw	r2,124(sp)
1000221c:	8c00860e 	bge	r17,r16,10002438 <___svfprintf_internal_r+0x1128>
10002220:	01440074 	movhi	r5,4097
10002224:	29505184 	addi	r5,r5,16710
10002228:	d9402c15 	stw	r5,176(sp)
1000222c:	058001c4 	movi	r22,7
10002230:	dd002d17 	ldw	r20,180(sp)
10002234:	00000306 	br	10002244 <___svfprintf_internal_r+0xf34>
10002238:	42000204 	addi	r8,r8,8
1000223c:	843ffc04 	addi	r16,r16,-16
10002240:	8c00800e 	bge	r17,r16,10002444 <___svfprintf_internal_r+0x1134>
10002244:	18c00404 	addi	r3,r3,16
10002248:	10800044 	addi	r2,r2,1
1000224c:	45400015 	stw	r21,0(r8)
10002250:	44400115 	stw	r17,4(r8)
10002254:	d8c02015 	stw	r3,128(sp)
10002258:	d8801f15 	stw	r2,124(sp)
1000225c:	b0bff60e 	bge	r22,r2,10002238 <__alt_data_end+0xf8002238>
10002260:	d9801e04 	addi	r6,sp,120
10002264:	a00b883a 	mov	r5,r20
10002268:	9809883a 	mov	r4,r19
1000226c:	000acb00 	call	1000acb0 <__ssprint_r>
10002270:	103d0e1e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002274:	d8c02017 	ldw	r3,128(sp)
10002278:	d8801f17 	ldw	r2,124(sp)
1000227c:	da000404 	addi	r8,sp,16
10002280:	003fee06 	br	1000223c <__alt_data_end+0xf800223c>
10002284:	d9403117 	ldw	r5,196(sp)
10002288:	d8802917 	ldw	r2,164(sp)
1000228c:	28adc83a 	sub	r22,r5,r2
10002290:	05be430e 	bge	zero,r22,10001ba0 <__alt_data_end+0xf8001ba0>
10002294:	07000404 	movi	fp,16
10002298:	d8801f17 	ldw	r2,124(sp)
1000229c:	e583a20e 	bge	fp,r22,10003128 <___svfprintf_internal_r+0x1e18>
100022a0:	01440074 	movhi	r5,4097
100022a4:	29505184 	addi	r5,r5,16710
100022a8:	dc403015 	stw	r17,192(sp)
100022ac:	d9402c15 	stw	r5,176(sp)
100022b0:	b023883a 	mov	r17,r22
100022b4:	050001c4 	movi	r20,7
100022b8:	902d883a 	mov	r22,r18
100022bc:	8025883a 	mov	r18,r16
100022c0:	dc002d17 	ldw	r16,180(sp)
100022c4:	00000306 	br	100022d4 <___svfprintf_internal_r+0xfc4>
100022c8:	8c7ffc04 	addi	r17,r17,-16
100022cc:	42000204 	addi	r8,r8,8
100022d0:	e440110e 	bge	fp,r17,10002318 <___svfprintf_internal_r+0x1008>
100022d4:	18c00404 	addi	r3,r3,16
100022d8:	10800044 	addi	r2,r2,1
100022dc:	45400015 	stw	r21,0(r8)
100022e0:	47000115 	stw	fp,4(r8)
100022e4:	d8c02015 	stw	r3,128(sp)
100022e8:	d8801f15 	stw	r2,124(sp)
100022ec:	a0bff60e 	bge	r20,r2,100022c8 <__alt_data_end+0xf80022c8>
100022f0:	d9801e04 	addi	r6,sp,120
100022f4:	800b883a 	mov	r5,r16
100022f8:	9809883a 	mov	r4,r19
100022fc:	000acb00 	call	1000acb0 <__ssprint_r>
10002300:	103cea1e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002304:	8c7ffc04 	addi	r17,r17,-16
10002308:	d8c02017 	ldw	r3,128(sp)
1000230c:	d8801f17 	ldw	r2,124(sp)
10002310:	da000404 	addi	r8,sp,16
10002314:	e47fef16 	blt	fp,r17,100022d4 <__alt_data_end+0xf80022d4>
10002318:	9021883a 	mov	r16,r18
1000231c:	b025883a 	mov	r18,r22
10002320:	882d883a 	mov	r22,r17
10002324:	dc403017 	ldw	r17,192(sp)
10002328:	d9002c17 	ldw	r4,176(sp)
1000232c:	1d87883a 	add	r3,r3,r22
10002330:	10800044 	addi	r2,r2,1
10002334:	41000015 	stw	r4,0(r8)
10002338:	45800115 	stw	r22,4(r8)
1000233c:	d8c02015 	stw	r3,128(sp)
10002340:	d8801f15 	stw	r2,124(sp)
10002344:	010001c4 	movi	r4,7
10002348:	20819a16 	blt	r4,r2,100029b4 <___svfprintf_internal_r+0x16a4>
1000234c:	42000204 	addi	r8,r8,8
10002350:	003e1306 	br	10001ba0 <__alt_data_end+0xf8001ba0>
10002354:	d9403317 	ldw	r5,204(sp)
10002358:	00800044 	movi	r2,1
1000235c:	18c00044 	addi	r3,r3,1
10002360:	1141710e 	bge	r2,r5,10002928 <___svfprintf_internal_r+0x1618>
10002364:	dc401f17 	ldw	r17,124(sp)
10002368:	00800044 	movi	r2,1
1000236c:	40800115 	stw	r2,4(r8)
10002370:	8c400044 	addi	r17,r17,1
10002374:	44000015 	stw	r16,0(r8)
10002378:	d8c02015 	stw	r3,128(sp)
1000237c:	dc401f15 	stw	r17,124(sp)
10002380:	008001c4 	movi	r2,7
10002384:	14417416 	blt	r2,r17,10002958 <___svfprintf_internal_r+0x1648>
10002388:	42000204 	addi	r8,r8,8
1000238c:	d8803817 	ldw	r2,224(sp)
10002390:	d9003417 	ldw	r4,208(sp)
10002394:	8c400044 	addi	r17,r17,1
10002398:	10c7883a 	add	r3,r2,r3
1000239c:	40800115 	stw	r2,4(r8)
100023a0:	41000015 	stw	r4,0(r8)
100023a4:	d8c02015 	stw	r3,128(sp)
100023a8:	dc401f15 	stw	r17,124(sp)
100023ac:	008001c4 	movi	r2,7
100023b0:	14417216 	blt	r2,r17,1000297c <___svfprintf_internal_r+0x166c>
100023b4:	45800204 	addi	r22,r8,8
100023b8:	d9003617 	ldw	r4,216(sp)
100023bc:	d9403717 	ldw	r5,220(sp)
100023c0:	000d883a 	mov	r6,zero
100023c4:	000f883a 	mov	r7,zero
100023c8:	d8c03d15 	stw	r3,244(sp)
100023cc:	00101ac0 	call	100101ac <__eqdf2>
100023d0:	d8c03d17 	ldw	r3,244(sp)
100023d4:	1000b326 	beq	r2,zero,100026a4 <___svfprintf_internal_r+0x1394>
100023d8:	d9403317 	ldw	r5,204(sp)
100023dc:	84000044 	addi	r16,r16,1
100023e0:	8c400044 	addi	r17,r17,1
100023e4:	28bfffc4 	addi	r2,r5,-1
100023e8:	1887883a 	add	r3,r3,r2
100023ec:	b0800115 	stw	r2,4(r22)
100023f0:	b4000015 	stw	r16,0(r22)
100023f4:	d8c02015 	stw	r3,128(sp)
100023f8:	dc401f15 	stw	r17,124(sp)
100023fc:	008001c4 	movi	r2,7
10002400:	1440d216 	blt	r2,r17,1000274c <___svfprintf_internal_r+0x143c>
10002404:	b5800204 	addi	r22,r22,8
10002408:	d9003b17 	ldw	r4,236(sp)
1000240c:	df0022c4 	addi	fp,sp,139
10002410:	8c400044 	addi	r17,r17,1
10002414:	20c7883a 	add	r3,r4,r3
10002418:	b7000015 	stw	fp,0(r22)
1000241c:	b1000115 	stw	r4,4(r22)
10002420:	d8c02015 	stw	r3,128(sp)
10002424:	dc401f15 	stw	r17,124(sp)
10002428:	008001c4 	movi	r2,7
1000242c:	14400e16 	blt	r2,r17,10002468 <___svfprintf_internal_r+0x1158>
10002430:	b2000204 	addi	r8,r22,8
10002434:	003e1a06 	br	10001ca0 <__alt_data_end+0xf8001ca0>
10002438:	01040074 	movhi	r4,4097
1000243c:	21105184 	addi	r4,r4,16710
10002440:	d9002c15 	stw	r4,176(sp)
10002444:	d9002c17 	ldw	r4,176(sp)
10002448:	1c07883a 	add	r3,r3,r16
1000244c:	44000115 	stw	r16,4(r8)
10002450:	41000015 	stw	r4,0(r8)
10002454:	10800044 	addi	r2,r2,1
10002458:	d8c02015 	stw	r3,128(sp)
1000245c:	d8801f15 	stw	r2,124(sp)
10002460:	010001c4 	movi	r4,7
10002464:	20be0d0e 	bge	r4,r2,10001c9c <__alt_data_end+0xf8001c9c>
10002468:	d9402d17 	ldw	r5,180(sp)
1000246c:	d9801e04 	addi	r6,sp,120
10002470:	9809883a 	mov	r4,r19
10002474:	000acb00 	call	1000acb0 <__ssprint_r>
10002478:	103c8c1e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
1000247c:	d8c02017 	ldw	r3,128(sp)
10002480:	da000404 	addi	r8,sp,16
10002484:	003e0606 	br	10001ca0 <__alt_data_end+0xf8001ca0>
10002488:	d9402d17 	ldw	r5,180(sp)
1000248c:	d9801e04 	addi	r6,sp,120
10002490:	9809883a 	mov	r4,r19
10002494:	000acb00 	call	1000acb0 <__ssprint_r>
10002498:	103e3d26 	beq	r2,zero,10001d90 <__alt_data_end+0xf8001d90>
1000249c:	003c8306 	br	100016ac <__alt_data_end+0xf80016ac>
100024a0:	d9402d17 	ldw	r5,180(sp)
100024a4:	d9801e04 	addi	r6,sp,120
100024a8:	9809883a 	mov	r4,r19
100024ac:	000acb00 	call	1000acb0 <__ssprint_r>
100024b0:	103c7e1e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
100024b4:	d8c02017 	ldw	r3,128(sp)
100024b8:	da000404 	addi	r8,sp,16
100024bc:	003deb06 	br	10001c6c <__alt_data_end+0xf8001c6c>
100024c0:	d9402d17 	ldw	r5,180(sp)
100024c4:	d9801e04 	addi	r6,sp,120
100024c8:	9809883a 	mov	r4,r19
100024cc:	000acb00 	call	1000acb0 <__ssprint_r>
100024d0:	103c761e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
100024d4:	d8c02017 	ldw	r3,128(sp)
100024d8:	da000404 	addi	r8,sp,16
100024dc:	003d9f06 	br	10001b5c <__alt_data_end+0xf8001b5c>
100024e0:	d9402d17 	ldw	r5,180(sp)
100024e4:	d9801e04 	addi	r6,sp,120
100024e8:	9809883a 	mov	r4,r19
100024ec:	000acb00 	call	1000acb0 <__ssprint_r>
100024f0:	103c6e1e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
100024f4:	d8c02017 	ldw	r3,128(sp)
100024f8:	da000404 	addi	r8,sp,16
100024fc:	003da506 	br	10001b94 <__alt_data_end+0xf8001b94>
10002500:	d9402a17 	ldw	r5,168(sp)
10002504:	d8002785 	stb	zero,158(sp)
10002508:	283f0816 	blt	r5,zero,1000212c <__alt_data_end+0xf800212c>
1000250c:	00ffdfc4 	movi	r3,-129
10002510:	a584b03a 	or	r2,r20,r22
10002514:	90e4703a 	and	r18,r18,r3
10002518:	103c5126 	beq	r2,zero,10001660 <__alt_data_end+0xf8001660>
1000251c:	0039883a 	mov	fp,zero
10002520:	003e5a06 	br	10001e8c <__alt_data_end+0xf8001e8c>
10002524:	9080040c 	andi	r2,r18,16
10002528:	10013d26 	beq	r2,zero,10002a20 <___svfprintf_internal_r+0x1710>
1000252c:	d8c02e17 	ldw	r3,184(sp)
10002530:	d9002a17 	ldw	r4,168(sp)
10002534:	d8002785 	stb	zero,158(sp)
10002538:	18800104 	addi	r2,r3,4
1000253c:	1d000017 	ldw	r20,0(r3)
10002540:	002d883a 	mov	r22,zero
10002544:	20013f16 	blt	r4,zero,10002a44 <___svfprintf_internal_r+0x1734>
10002548:	00ffdfc4 	movi	r3,-129
1000254c:	d8802e15 	stw	r2,184(sp)
10002550:	90e4703a 	and	r18,r18,r3
10002554:	a03d0926 	beq	r20,zero,1000197c <__alt_data_end+0xf800197c>
10002558:	0039883a 	mov	fp,zero
1000255c:	003d0c06 	br	10001990 <__alt_data_end+0xf8001990>
10002560:	dc402617 	ldw	r17,152(sp)
10002564:	0441830e 	bge	zero,r17,10002b74 <___svfprintf_internal_r+0x1864>
10002568:	dc403217 	ldw	r17,200(sp)
1000256c:	d8803317 	ldw	r2,204(sp)
10002570:	1440010e 	bge	r2,r17,10002578 <___svfprintf_internal_r+0x1268>
10002574:	1023883a 	mov	r17,r2
10002578:	04400a0e 	bge	zero,r17,100025a4 <___svfprintf_internal_r+0x1294>
1000257c:	d8801f17 	ldw	r2,124(sp)
10002580:	1c47883a 	add	r3,r3,r17
10002584:	44000015 	stw	r16,0(r8)
10002588:	10800044 	addi	r2,r2,1
1000258c:	44400115 	stw	r17,4(r8)
10002590:	d8c02015 	stw	r3,128(sp)
10002594:	d8801f15 	stw	r2,124(sp)
10002598:	010001c4 	movi	r4,7
1000259c:	20827516 	blt	r4,r2,10002f74 <___svfprintf_internal_r+0x1c64>
100025a0:	42000204 	addi	r8,r8,8
100025a4:	88027b16 	blt	r17,zero,10002f94 <___svfprintf_internal_r+0x1c84>
100025a8:	d9003217 	ldw	r4,200(sp)
100025ac:	2463c83a 	sub	r17,r4,r17
100025b0:	0440990e 	bge	zero,r17,10002818 <___svfprintf_internal_r+0x1508>
100025b4:	05800404 	movi	r22,16
100025b8:	d8801f17 	ldw	r2,124(sp)
100025bc:	b441530e 	bge	r22,r17,10002b0c <___svfprintf_internal_r+0x17fc>
100025c0:	01040074 	movhi	r4,4097
100025c4:	21105184 	addi	r4,r4,16710
100025c8:	d9002c15 	stw	r4,176(sp)
100025cc:	070001c4 	movi	fp,7
100025d0:	dd002d17 	ldw	r20,180(sp)
100025d4:	00000306 	br	100025e4 <___svfprintf_internal_r+0x12d4>
100025d8:	42000204 	addi	r8,r8,8
100025dc:	8c7ffc04 	addi	r17,r17,-16
100025e0:	b4414d0e 	bge	r22,r17,10002b18 <___svfprintf_internal_r+0x1808>
100025e4:	18c00404 	addi	r3,r3,16
100025e8:	10800044 	addi	r2,r2,1
100025ec:	45400015 	stw	r21,0(r8)
100025f0:	45800115 	stw	r22,4(r8)
100025f4:	d8c02015 	stw	r3,128(sp)
100025f8:	d8801f15 	stw	r2,124(sp)
100025fc:	e0bff60e 	bge	fp,r2,100025d8 <__alt_data_end+0xf80025d8>
10002600:	d9801e04 	addi	r6,sp,120
10002604:	a00b883a 	mov	r5,r20
10002608:	9809883a 	mov	r4,r19
1000260c:	000acb00 	call	1000acb0 <__ssprint_r>
10002610:	103c261e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002614:	d8c02017 	ldw	r3,128(sp)
10002618:	d8801f17 	ldw	r2,124(sp)
1000261c:	da000404 	addi	r8,sp,16
10002620:	003fee06 	br	100025dc <__alt_data_end+0xf80025dc>
10002624:	d9402d17 	ldw	r5,180(sp)
10002628:	d9801e04 	addi	r6,sp,120
1000262c:	9809883a 	mov	r4,r19
10002630:	000acb00 	call	1000acb0 <__ssprint_r>
10002634:	103c1d1e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002638:	d8c02017 	ldw	r3,128(sp)
1000263c:	df002787 	ldb	fp,158(sp)
10002640:	da000404 	addi	r8,sp,16
10002644:	003d3806 	br	10001b28 <__alt_data_end+0xf8001b28>
10002648:	9080040c 	andi	r2,r18,16
1000264c:	10005c26 	beq	r2,zero,100027c0 <___svfprintf_internal_r+0x14b0>
10002650:	d8c02e17 	ldw	r3,184(sp)
10002654:	d9002a17 	ldw	r4,168(sp)
10002658:	d8002785 	stb	zero,158(sp)
1000265c:	18800104 	addi	r2,r3,4
10002660:	1d000017 	ldw	r20,0(r3)
10002664:	002d883a 	mov	r22,zero
10002668:	20005e16 	blt	r4,zero,100027e4 <___svfprintf_internal_r+0x14d4>
1000266c:	00ffdfc4 	movi	r3,-129
10002670:	d8802e15 	stw	r2,184(sp)
10002674:	90e4703a 	and	r18,r18,r3
10002678:	0039883a 	mov	fp,zero
1000267c:	a03ddf26 	beq	r20,zero,10001dfc <__alt_data_end+0xf8001dfc>
10002680:	00800244 	movi	r2,9
10002684:	153c8e36 	bltu	r2,r20,100018c0 <__alt_data_end+0xf80018c0>
10002688:	a5000c04 	addi	r20,r20,48
1000268c:	dc001dc4 	addi	r16,sp,119
10002690:	dd001dc5 	stb	r20,119(sp)
10002694:	d8c02817 	ldw	r3,160(sp)
10002698:	1c07c83a 	sub	r3,r3,r16
1000269c:	d8c02b15 	stw	r3,172(sp)
100026a0:	003cd306 	br	100019f0 <__alt_data_end+0xf80019f0>
100026a4:	d8803317 	ldw	r2,204(sp)
100026a8:	143fffc4 	addi	r16,r2,-1
100026ac:	043f560e 	bge	zero,r16,10002408 <__alt_data_end+0xf8002408>
100026b0:	07000404 	movi	fp,16
100026b4:	e403530e 	bge	fp,r16,10003404 <___svfprintf_internal_r+0x20f4>
100026b8:	01440074 	movhi	r5,4097
100026bc:	29505184 	addi	r5,r5,16710
100026c0:	d9402c15 	stw	r5,176(sp)
100026c4:	01c001c4 	movi	r7,7
100026c8:	dd002d17 	ldw	r20,180(sp)
100026cc:	00000306 	br	100026dc <___svfprintf_internal_r+0x13cc>
100026d0:	843ffc04 	addi	r16,r16,-16
100026d4:	b5800204 	addi	r22,r22,8
100026d8:	e400130e 	bge	fp,r16,10002728 <___svfprintf_internal_r+0x1418>
100026dc:	18c00404 	addi	r3,r3,16
100026e0:	8c400044 	addi	r17,r17,1
100026e4:	b5400015 	stw	r21,0(r22)
100026e8:	b7000115 	stw	fp,4(r22)
100026ec:	d8c02015 	stw	r3,128(sp)
100026f0:	dc401f15 	stw	r17,124(sp)
100026f4:	3c7ff60e 	bge	r7,r17,100026d0 <__alt_data_end+0xf80026d0>
100026f8:	d9801e04 	addi	r6,sp,120
100026fc:	a00b883a 	mov	r5,r20
10002700:	9809883a 	mov	r4,r19
10002704:	d9c03d15 	stw	r7,244(sp)
10002708:	000acb00 	call	1000acb0 <__ssprint_r>
1000270c:	d9c03d17 	ldw	r7,244(sp)
10002710:	103be61e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002714:	843ffc04 	addi	r16,r16,-16
10002718:	d8c02017 	ldw	r3,128(sp)
1000271c:	dc401f17 	ldw	r17,124(sp)
10002720:	dd800404 	addi	r22,sp,16
10002724:	e43fed16 	blt	fp,r16,100026dc <__alt_data_end+0xf80026dc>
10002728:	d8802c17 	ldw	r2,176(sp)
1000272c:	1c07883a 	add	r3,r3,r16
10002730:	8c400044 	addi	r17,r17,1
10002734:	b0800015 	stw	r2,0(r22)
10002738:	b4000115 	stw	r16,4(r22)
1000273c:	d8c02015 	stw	r3,128(sp)
10002740:	dc401f15 	stw	r17,124(sp)
10002744:	008001c4 	movi	r2,7
10002748:	147f2e0e 	bge	r2,r17,10002404 <__alt_data_end+0xf8002404>
1000274c:	d9402d17 	ldw	r5,180(sp)
10002750:	d9801e04 	addi	r6,sp,120
10002754:	9809883a 	mov	r4,r19
10002758:	000acb00 	call	1000acb0 <__ssprint_r>
1000275c:	103bd31e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002760:	d8c02017 	ldw	r3,128(sp)
10002764:	dc401f17 	ldw	r17,124(sp)
10002768:	dd800404 	addi	r22,sp,16
1000276c:	003f2606 	br	10002408 <__alt_data_end+0xf8002408>
10002770:	9080040c 	andi	r2,r18,16
10002774:	1000c326 	beq	r2,zero,10002a84 <___svfprintf_internal_r+0x1774>
10002778:	d9402e17 	ldw	r5,184(sp)
1000277c:	2d000017 	ldw	r20,0(r5)
10002780:	29400104 	addi	r5,r5,4
10002784:	d9402e15 	stw	r5,184(sp)
10002788:	a02dd7fa 	srai	r22,r20,31
1000278c:	b005883a 	mov	r2,r22
10002790:	103c430e 	bge	r2,zero,100018a0 <__alt_data_end+0xf80018a0>
10002794:	d9402a17 	ldw	r5,168(sp)
10002798:	0529c83a 	sub	r20,zero,r20
1000279c:	07000b44 	movi	fp,45
100027a0:	a004c03a 	cmpne	r2,r20,zero
100027a4:	05adc83a 	sub	r22,zero,r22
100027a8:	df002785 	stb	fp,158(sp)
100027ac:	b0adc83a 	sub	r22,r22,r2
100027b0:	28022e16 	blt	r5,zero,1000306c <___svfprintf_internal_r+0x1d5c>
100027b4:	00bfdfc4 	movi	r2,-129
100027b8:	90a4703a 	and	r18,r18,r2
100027bc:	003c3f06 	br	100018bc <__alt_data_end+0xf80018bc>
100027c0:	9080100c 	andi	r2,r18,64
100027c4:	d8002785 	stb	zero,158(sp)
100027c8:	10012526 	beq	r2,zero,10002c60 <___svfprintf_internal_r+0x1950>
100027cc:	d9402e17 	ldw	r5,184(sp)
100027d0:	d8c02a17 	ldw	r3,168(sp)
100027d4:	002d883a 	mov	r22,zero
100027d8:	28800104 	addi	r2,r5,4
100027dc:	2d00000b 	ldhu	r20,0(r5)
100027e0:	183fa20e 	bge	r3,zero,1000266c <__alt_data_end+0xf800266c>
100027e4:	d8802e15 	stw	r2,184(sp)
100027e8:	0039883a 	mov	fp,zero
100027ec:	a584b03a 	or	r2,r20,r22
100027f0:	103c321e 	bne	r2,zero,100018bc <__alt_data_end+0xf80018bc>
100027f4:	00800044 	movi	r2,1
100027f8:	003e5006 	br	1000213c <__alt_data_end+0xf800213c>
100027fc:	d9402d17 	ldw	r5,180(sp)
10002800:	d9801e04 	addi	r6,sp,120
10002804:	9809883a 	mov	r4,r19
10002808:	000acb00 	call	1000acb0 <__ssprint_r>
1000280c:	103ba71e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002810:	d8c02017 	ldw	r3,128(sp)
10002814:	da000404 	addi	r8,sp,16
10002818:	d9003217 	ldw	r4,200(sp)
1000281c:	d8802617 	ldw	r2,152(sp)
10002820:	d9403317 	ldw	r5,204(sp)
10002824:	8123883a 	add	r17,r16,r4
10002828:	11400216 	blt	r2,r5,10002834 <___svfprintf_internal_r+0x1524>
1000282c:	9100004c 	andi	r4,r18,1
10002830:	20000d26 	beq	r4,zero,10002868 <___svfprintf_internal_r+0x1558>
10002834:	d9003817 	ldw	r4,224(sp)
10002838:	d9403417 	ldw	r5,208(sp)
1000283c:	1907883a 	add	r3,r3,r4
10002840:	d9001f17 	ldw	r4,124(sp)
10002844:	41400015 	stw	r5,0(r8)
10002848:	d9403817 	ldw	r5,224(sp)
1000284c:	21000044 	addi	r4,r4,1
10002850:	d8c02015 	stw	r3,128(sp)
10002854:	41400115 	stw	r5,4(r8)
10002858:	d9001f15 	stw	r4,124(sp)
1000285c:	014001c4 	movi	r5,7
10002860:	2901dc16 	blt	r5,r4,10002fd4 <___svfprintf_internal_r+0x1cc4>
10002864:	42000204 	addi	r8,r8,8
10002868:	d9003317 	ldw	r4,204(sp)
1000286c:	8121883a 	add	r16,r16,r4
10002870:	2085c83a 	sub	r2,r4,r2
10002874:	8461c83a 	sub	r16,r16,r17
10002878:	1400010e 	bge	r2,r16,10002880 <___svfprintf_internal_r+0x1570>
1000287c:	1021883a 	mov	r16,r2
10002880:	04000a0e 	bge	zero,r16,100028ac <___svfprintf_internal_r+0x159c>
10002884:	d9001f17 	ldw	r4,124(sp)
10002888:	1c07883a 	add	r3,r3,r16
1000288c:	44400015 	stw	r17,0(r8)
10002890:	21000044 	addi	r4,r4,1
10002894:	44000115 	stw	r16,4(r8)
10002898:	d8c02015 	stw	r3,128(sp)
1000289c:	d9001f15 	stw	r4,124(sp)
100028a0:	014001c4 	movi	r5,7
100028a4:	2901e616 	blt	r5,r4,10003040 <___svfprintf_internal_r+0x1d30>
100028a8:	42000204 	addi	r8,r8,8
100028ac:	8001f616 	blt	r16,zero,10003088 <___svfprintf_internal_r+0x1d78>
100028b0:	1421c83a 	sub	r16,r2,r16
100028b4:	043cfa0e 	bge	zero,r16,10001ca0 <__alt_data_end+0xf8001ca0>
100028b8:	04400404 	movi	r17,16
100028bc:	d8801f17 	ldw	r2,124(sp)
100028c0:	8c3edd0e 	bge	r17,r16,10002438 <__alt_data_end+0xf8002438>
100028c4:	01440074 	movhi	r5,4097
100028c8:	29505184 	addi	r5,r5,16710
100028cc:	d9402c15 	stw	r5,176(sp)
100028d0:	058001c4 	movi	r22,7
100028d4:	dd002d17 	ldw	r20,180(sp)
100028d8:	00000306 	br	100028e8 <___svfprintf_internal_r+0x15d8>
100028dc:	42000204 	addi	r8,r8,8
100028e0:	843ffc04 	addi	r16,r16,-16
100028e4:	8c3ed70e 	bge	r17,r16,10002444 <__alt_data_end+0xf8002444>
100028e8:	18c00404 	addi	r3,r3,16
100028ec:	10800044 	addi	r2,r2,1
100028f0:	45400015 	stw	r21,0(r8)
100028f4:	44400115 	stw	r17,4(r8)
100028f8:	d8c02015 	stw	r3,128(sp)
100028fc:	d8801f15 	stw	r2,124(sp)
10002900:	b0bff60e 	bge	r22,r2,100028dc <__alt_data_end+0xf80028dc>
10002904:	d9801e04 	addi	r6,sp,120
10002908:	a00b883a 	mov	r5,r20
1000290c:	9809883a 	mov	r4,r19
10002910:	000acb00 	call	1000acb0 <__ssprint_r>
10002914:	103b651e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002918:	d8c02017 	ldw	r3,128(sp)
1000291c:	d8801f17 	ldw	r2,124(sp)
10002920:	da000404 	addi	r8,sp,16
10002924:	003fee06 	br	100028e0 <__alt_data_end+0xf80028e0>
10002928:	9088703a 	and	r4,r18,r2
1000292c:	203e8d1e 	bne	r4,zero,10002364 <__alt_data_end+0xf8002364>
10002930:	dc401f17 	ldw	r17,124(sp)
10002934:	40800115 	stw	r2,4(r8)
10002938:	44000015 	stw	r16,0(r8)
1000293c:	8c400044 	addi	r17,r17,1
10002940:	d8c02015 	stw	r3,128(sp)
10002944:	dc401f15 	stw	r17,124(sp)
10002948:	008001c4 	movi	r2,7
1000294c:	147f7f16 	blt	r2,r17,1000274c <__alt_data_end+0xf800274c>
10002950:	45800204 	addi	r22,r8,8
10002954:	003eac06 	br	10002408 <__alt_data_end+0xf8002408>
10002958:	d9402d17 	ldw	r5,180(sp)
1000295c:	d9801e04 	addi	r6,sp,120
10002960:	9809883a 	mov	r4,r19
10002964:	000acb00 	call	1000acb0 <__ssprint_r>
10002968:	103b501e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
1000296c:	d8c02017 	ldw	r3,128(sp)
10002970:	dc401f17 	ldw	r17,124(sp)
10002974:	da000404 	addi	r8,sp,16
10002978:	003e8406 	br	1000238c <__alt_data_end+0xf800238c>
1000297c:	d9402d17 	ldw	r5,180(sp)
10002980:	d9801e04 	addi	r6,sp,120
10002984:	9809883a 	mov	r4,r19
10002988:	000acb00 	call	1000acb0 <__ssprint_r>
1000298c:	103b471e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002990:	d8c02017 	ldw	r3,128(sp)
10002994:	dc401f17 	ldw	r17,124(sp)
10002998:	dd800404 	addi	r22,sp,16
1000299c:	003e8606 	br	100023b8 <__alt_data_end+0xf80023b8>
100029a0:	0029883a 	mov	r20,zero
100029a4:	a5000c04 	addi	r20,r20,48
100029a8:	dc001dc4 	addi	r16,sp,119
100029ac:	dd001dc5 	stb	r20,119(sp)
100029b0:	003f3806 	br	10002694 <__alt_data_end+0xf8002694>
100029b4:	d9402d17 	ldw	r5,180(sp)
100029b8:	d9801e04 	addi	r6,sp,120
100029bc:	9809883a 	mov	r4,r19
100029c0:	000acb00 	call	1000acb0 <__ssprint_r>
100029c4:	103b391e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
100029c8:	d8c02017 	ldw	r3,128(sp)
100029cc:	da000404 	addi	r8,sp,16
100029d0:	003c7306 	br	10001ba0 <__alt_data_end+0xf8001ba0>
100029d4:	d9003617 	ldw	r4,216(sp)
100029d8:	d9403717 	ldw	r5,220(sp)
100029dc:	da003e15 	stw	r8,248(sp)
100029e0:	000a9d00 	call	1000a9d0 <__fpclassifyd>
100029e4:	da003e17 	ldw	r8,248(sp)
100029e8:	1000bd1e 	bne	r2,zero,10002ce0 <___svfprintf_internal_r+0x19d0>
100029ec:	008011c4 	movi	r2,71
100029f0:	14411e0e 	bge	r2,r17,10002e6c <___svfprintf_internal_r+0x1b5c>
100029f4:	04040074 	movhi	r16,4097
100029f8:	84104404 	addi	r16,r16,16656
100029fc:	00c000c4 	movi	r3,3
10002a00:	00bfdfc4 	movi	r2,-129
10002a04:	d8c02915 	stw	r3,164(sp)
10002a08:	90a4703a 	and	r18,r18,r2
10002a0c:	df002783 	ldbu	fp,158(sp)
10002a10:	d8c02b15 	stw	r3,172(sp)
10002a14:	d8002a15 	stw	zero,168(sp)
10002a18:	d8003215 	stw	zero,200(sp)
10002a1c:	003bfa06 	br	10001a08 <__alt_data_end+0xf8001a08>
10002a20:	9080100c 	andi	r2,r18,64
10002a24:	d8002785 	stb	zero,158(sp)
10002a28:	10009426 	beq	r2,zero,10002c7c <___svfprintf_internal_r+0x196c>
10002a2c:	d9402e17 	ldw	r5,184(sp)
10002a30:	d8c02a17 	ldw	r3,168(sp)
10002a34:	002d883a 	mov	r22,zero
10002a38:	28800104 	addi	r2,r5,4
10002a3c:	2d00000b 	ldhu	r20,0(r5)
10002a40:	183ec10e 	bge	r3,zero,10002548 <__alt_data_end+0xf8002548>
10002a44:	a586b03a 	or	r3,r20,r22
10002a48:	d8802e15 	stw	r2,184(sp)
10002a4c:	183ec21e 	bne	r3,zero,10002558 <__alt_data_end+0xf8002558>
10002a50:	0039883a 	mov	fp,zero
10002a54:	0005883a 	mov	r2,zero
10002a58:	003db806 	br	1000213c <__alt_data_end+0xf800213c>
10002a5c:	d8c02e17 	ldw	r3,184(sp)
10002a60:	d9002e17 	ldw	r4,184(sp)
10002a64:	d9402e17 	ldw	r5,184(sp)
10002a68:	18c00017 	ldw	r3,0(r3)
10002a6c:	21000117 	ldw	r4,4(r4)
10002a70:	29400204 	addi	r5,r5,8
10002a74:	d8c03615 	stw	r3,216(sp)
10002a78:	d9003715 	stw	r4,220(sp)
10002a7c:	d9402e15 	stw	r5,184(sp)
10002a80:	003b5a06 	br	100017ec <__alt_data_end+0xf80017ec>
10002a84:	9080100c 	andi	r2,r18,64
10002a88:	10010726 	beq	r2,zero,10002ea8 <___svfprintf_internal_r+0x1b98>
10002a8c:	d8802e17 	ldw	r2,184(sp)
10002a90:	1500000f 	ldh	r20,0(r2)
10002a94:	10800104 	addi	r2,r2,4
10002a98:	d8802e15 	stw	r2,184(sp)
10002a9c:	a02dd7fa 	srai	r22,r20,31
10002aa0:	b005883a 	mov	r2,r22
10002aa4:	003b7d06 	br	1000189c <__alt_data_end+0xf800189c>
10002aa8:	9080100c 	andi	r2,r18,64
10002aac:	10010526 	beq	r2,zero,10002ec4 <___svfprintf_internal_r+0x1bb4>
10002ab0:	d8c02e17 	ldw	r3,184(sp)
10002ab4:	002d883a 	mov	r22,zero
10002ab8:	1d00000b 	ldhu	r20,0(r3)
10002abc:	18c00104 	addi	r3,r3,4
10002ac0:	d8c02e15 	stw	r3,184(sp)
10002ac4:	003ce206 	br	10001e50 <__alt_data_end+0xf8001e50>
10002ac8:	bc400007 	ldb	r17,0(r23)
10002acc:	003a6506 	br	10001464 <__alt_data_end+0xf8001464>
10002ad0:	9080040c 	andi	r2,r18,16
10002ad4:	10010126 	beq	r2,zero,10002edc <___svfprintf_internal_r+0x1bcc>
10002ad8:	d8c02e17 	ldw	r3,184(sp)
10002adc:	d9002f17 	ldw	r4,188(sp)
10002ae0:	18800017 	ldw	r2,0(r3)
10002ae4:	18c00104 	addi	r3,r3,4
10002ae8:	d8c02e15 	stw	r3,184(sp)
10002aec:	11000015 	stw	r4,0(r2)
10002af0:	003a3206 	br	100013bc <__alt_data_end+0xf80013bc>
10002af4:	d9002a17 	ldw	r4,168(sp)
10002af8:	d8002785 	stb	zero,158(sp)
10002afc:	203d8d16 	blt	r4,zero,10002134 <__alt_data_end+0xf8002134>
10002b00:	00bfdfc4 	movi	r2,-129
10002b04:	90a4703a 	and	r18,r18,r2
10002b08:	003ad506 	br	10001660 <__alt_data_end+0xf8001660>
10002b0c:	01440074 	movhi	r5,4097
10002b10:	29505184 	addi	r5,r5,16710
10002b14:	d9402c15 	stw	r5,176(sp)
10002b18:	d9402c17 	ldw	r5,176(sp)
10002b1c:	1c47883a 	add	r3,r3,r17
10002b20:	10800044 	addi	r2,r2,1
10002b24:	41400015 	stw	r5,0(r8)
10002b28:	44400115 	stw	r17,4(r8)
10002b2c:	d8c02015 	stw	r3,128(sp)
10002b30:	d8801f15 	stw	r2,124(sp)
10002b34:	010001c4 	movi	r4,7
10002b38:	20bf3016 	blt	r4,r2,100027fc <__alt_data_end+0xf80027fc>
10002b3c:	42000204 	addi	r8,r8,8
10002b40:	003f3506 	br	10002818 <__alt_data_end+0xf8002818>
10002b44:	01040074 	movhi	r4,4097
10002b48:	21105184 	addi	r4,r4,16710
10002b4c:	d9002c15 	stw	r4,176(sp)
10002b50:	003c3c06 	br	10001c44 <__alt_data_end+0xf8001c44>
10002b54:	d9402d17 	ldw	r5,180(sp)
10002b58:	d9801e04 	addi	r6,sp,120
10002b5c:	9809883a 	mov	r4,r19
10002b60:	000acb00 	call	1000acb0 <__ssprint_r>
10002b64:	103ad11e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002b68:	d8c02017 	ldw	r3,128(sp)
10002b6c:	da000404 	addi	r8,sp,16
10002b70:	003d9306 	br	100021c0 <__alt_data_end+0xf80021c0>
10002b74:	d8801f17 	ldw	r2,124(sp)
10002b78:	01440074 	movhi	r5,4097
10002b7c:	01000044 	movi	r4,1
10002b80:	18c00044 	addi	r3,r3,1
10002b84:	10800044 	addi	r2,r2,1
10002b88:	29505104 	addi	r5,r5,16708
10002b8c:	41000115 	stw	r4,4(r8)
10002b90:	41400015 	stw	r5,0(r8)
10002b94:	d8c02015 	stw	r3,128(sp)
10002b98:	d8801f15 	stw	r2,124(sp)
10002b9c:	010001c4 	movi	r4,7
10002ba0:	2080b516 	blt	r4,r2,10002e78 <___svfprintf_internal_r+0x1b68>
10002ba4:	42000204 	addi	r8,r8,8
10002ba8:	8800041e 	bne	r17,zero,10002bbc <___svfprintf_internal_r+0x18ac>
10002bac:	d8803317 	ldw	r2,204(sp)
10002bb0:	1000021e 	bne	r2,zero,10002bbc <___svfprintf_internal_r+0x18ac>
10002bb4:	9080004c 	andi	r2,r18,1
10002bb8:	103c3926 	beq	r2,zero,10001ca0 <__alt_data_end+0xf8001ca0>
10002bbc:	d9003817 	ldw	r4,224(sp)
10002bc0:	d8801f17 	ldw	r2,124(sp)
10002bc4:	d9403417 	ldw	r5,208(sp)
10002bc8:	20c7883a 	add	r3,r4,r3
10002bcc:	10800044 	addi	r2,r2,1
10002bd0:	41000115 	stw	r4,4(r8)
10002bd4:	41400015 	stw	r5,0(r8)
10002bd8:	d8c02015 	stw	r3,128(sp)
10002bdc:	d8801f15 	stw	r2,124(sp)
10002be0:	010001c4 	movi	r4,7
10002be4:	20818016 	blt	r4,r2,100031e8 <___svfprintf_internal_r+0x1ed8>
10002be8:	42000204 	addi	r8,r8,8
10002bec:	0463c83a 	sub	r17,zero,r17
10002bf0:	0440cb0e 	bge	zero,r17,10002f20 <___svfprintf_internal_r+0x1c10>
10002bf4:	05800404 	movi	r22,16
10002bf8:	b440e80e 	bge	r22,r17,10002f9c <___svfprintf_internal_r+0x1c8c>
10002bfc:	01440074 	movhi	r5,4097
10002c00:	29505184 	addi	r5,r5,16710
10002c04:	d9402c15 	stw	r5,176(sp)
10002c08:	070001c4 	movi	fp,7
10002c0c:	dd002d17 	ldw	r20,180(sp)
10002c10:	00000306 	br	10002c20 <___svfprintf_internal_r+0x1910>
10002c14:	42000204 	addi	r8,r8,8
10002c18:	8c7ffc04 	addi	r17,r17,-16
10002c1c:	b440e20e 	bge	r22,r17,10002fa8 <___svfprintf_internal_r+0x1c98>
10002c20:	18c00404 	addi	r3,r3,16
10002c24:	10800044 	addi	r2,r2,1
10002c28:	45400015 	stw	r21,0(r8)
10002c2c:	45800115 	stw	r22,4(r8)
10002c30:	d8c02015 	stw	r3,128(sp)
10002c34:	d8801f15 	stw	r2,124(sp)
10002c38:	e0bff60e 	bge	fp,r2,10002c14 <__alt_data_end+0xf8002c14>
10002c3c:	d9801e04 	addi	r6,sp,120
10002c40:	a00b883a 	mov	r5,r20
10002c44:	9809883a 	mov	r4,r19
10002c48:	000acb00 	call	1000acb0 <__ssprint_r>
10002c4c:	103a971e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002c50:	d8c02017 	ldw	r3,128(sp)
10002c54:	d8801f17 	ldw	r2,124(sp)
10002c58:	da000404 	addi	r8,sp,16
10002c5c:	003fee06 	br	10002c18 <__alt_data_end+0xf8002c18>
10002c60:	d9002e17 	ldw	r4,184(sp)
10002c64:	d9402a17 	ldw	r5,168(sp)
10002c68:	002d883a 	mov	r22,zero
10002c6c:	20800104 	addi	r2,r4,4
10002c70:	25000017 	ldw	r20,0(r4)
10002c74:	283e7d0e 	bge	r5,zero,1000266c <__alt_data_end+0xf800266c>
10002c78:	003eda06 	br	100027e4 <__alt_data_end+0xf80027e4>
10002c7c:	d9002e17 	ldw	r4,184(sp)
10002c80:	d9402a17 	ldw	r5,168(sp)
10002c84:	002d883a 	mov	r22,zero
10002c88:	20800104 	addi	r2,r4,4
10002c8c:	25000017 	ldw	r20,0(r4)
10002c90:	283e2d0e 	bge	r5,zero,10002548 <__alt_data_end+0xf8002548>
10002c94:	003f6b06 	br	10002a44 <__alt_data_end+0xf8002a44>
10002c98:	d8c02e15 	stw	r3,184(sp)
10002c9c:	0039883a 	mov	fp,zero
10002ca0:	003ed206 	br	100027ec <__alt_data_end+0xf80027ec>
10002ca4:	bc400043 	ldbu	r17,1(r23)
10002ca8:	84000814 	ori	r16,r16,32
10002cac:	bdc00044 	addi	r23,r23,1
10002cb0:	8c403fcc 	andi	r17,r17,255
10002cb4:	8c40201c 	xori	r17,r17,128
10002cb8:	8c7fe004 	addi	r17,r17,-128
10002cbc:	0039e906 	br	10001464 <__alt_data_end+0xf8001464>
10002cc0:	d9402d17 	ldw	r5,180(sp)
10002cc4:	d9801e04 	addi	r6,sp,120
10002cc8:	9809883a 	mov	r4,r19
10002ccc:	000acb00 	call	1000acb0 <__ssprint_r>
10002cd0:	103a761e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002cd4:	d8c02017 	ldw	r3,128(sp)
10002cd8:	da000404 	addi	r8,sp,16
10002cdc:	003d4a06 	br	10002208 <__alt_data_end+0xf8002208>
10002ce0:	d9002a17 	ldw	r4,168(sp)
10002ce4:	05bff7c4 	movi	r22,-33
10002ce8:	00bfffc4 	movi	r2,-1
10002cec:	8dac703a 	and	r22,r17,r22
10002cf0:	20806a26 	beq	r4,r2,10002e9c <___svfprintf_internal_r+0x1b8c>
10002cf4:	008011c4 	movi	r2,71
10002cf8:	b0813726 	beq	r22,r2,100031d8 <___svfprintf_internal_r+0x1ec8>
10002cfc:	d9003717 	ldw	r4,220(sp)
10002d00:	90c04014 	ori	r3,r18,256
10002d04:	d8c02c15 	stw	r3,176(sp)
10002d08:	20015d16 	blt	r4,zero,10003280 <___svfprintf_internal_r+0x1f70>
10002d0c:	dd003717 	ldw	r20,220(sp)
10002d10:	d8002905 	stb	zero,164(sp)
10002d14:	00801984 	movi	r2,102
10002d18:	88814026 	beq	r17,r2,1000321c <___svfprintf_internal_r+0x1f0c>
10002d1c:	00801184 	movi	r2,70
10002d20:	88817126 	beq	r17,r2,100032e8 <___svfprintf_internal_r+0x1fd8>
10002d24:	00801144 	movi	r2,69
10002d28:	b0816226 	beq	r22,r2,100032b4 <___svfprintf_internal_r+0x1fa4>
10002d2c:	d8c02a17 	ldw	r3,168(sp)
10002d30:	d8802104 	addi	r2,sp,132
10002d34:	d8800315 	stw	r2,12(sp)
10002d38:	d9403617 	ldw	r5,216(sp)
10002d3c:	d8802504 	addi	r2,sp,148
10002d40:	d8800215 	stw	r2,8(sp)
10002d44:	d8802604 	addi	r2,sp,152
10002d48:	d8c00015 	stw	r3,0(sp)
10002d4c:	d8800115 	stw	r2,4(sp)
10002d50:	01c00084 	movi	r7,2
10002d54:	a00d883a 	mov	r6,r20
10002d58:	9809883a 	mov	r4,r19
10002d5c:	d8c03d15 	stw	r3,244(sp)
10002d60:	da003e15 	stw	r8,248(sp)
10002d64:	0005cfc0 	call	10005cfc <_dtoa_r>
10002d68:	1021883a 	mov	r16,r2
10002d6c:	008019c4 	movi	r2,103
10002d70:	d8c03d17 	ldw	r3,244(sp)
10002d74:	da003e17 	ldw	r8,248(sp)
10002d78:	8880e726 	beq	r17,r2,10003118 <___svfprintf_internal_r+0x1e08>
10002d7c:	008011c4 	movi	r2,71
10002d80:	8880d426 	beq	r17,r2,100030d4 <___svfprintf_internal_r+0x1dc4>
10002d84:	80f9883a 	add	fp,r16,r3
10002d88:	d9003617 	ldw	r4,216(sp)
10002d8c:	000d883a 	mov	r6,zero
10002d90:	000f883a 	mov	r7,zero
10002d94:	a00b883a 	mov	r5,r20
10002d98:	da003e15 	stw	r8,248(sp)
10002d9c:	00101ac0 	call	100101ac <__eqdf2>
10002da0:	da003e17 	ldw	r8,248(sp)
10002da4:	1000e426 	beq	r2,zero,10003138 <___svfprintf_internal_r+0x1e28>
10002da8:	d8802117 	ldw	r2,132(sp)
10002dac:	1700062e 	bgeu	r2,fp,10002dc8 <___svfprintf_internal_r+0x1ab8>
10002db0:	01000c04 	movi	r4,48
10002db4:	10c00044 	addi	r3,r2,1
10002db8:	d8c02115 	stw	r3,132(sp)
10002dbc:	11000005 	stb	r4,0(r2)
10002dc0:	d8802117 	ldw	r2,132(sp)
10002dc4:	173ffb36 	bltu	r2,fp,10002db4 <__alt_data_end+0xf8002db4>
10002dc8:	1405c83a 	sub	r2,r2,r16
10002dcc:	d8803315 	stw	r2,204(sp)
10002dd0:	008011c4 	movi	r2,71
10002dd4:	b080c526 	beq	r22,r2,100030ec <___svfprintf_internal_r+0x1ddc>
10002dd8:	00801944 	movi	r2,101
10002ddc:	1441d80e 	bge	r2,r17,10003540 <___svfprintf_internal_r+0x2230>
10002de0:	d8c02617 	ldw	r3,152(sp)
10002de4:	00801984 	movi	r2,102
10002de8:	d8c03215 	stw	r3,200(sp)
10002dec:	88813426 	beq	r17,r2,100032c0 <___svfprintf_internal_r+0x1fb0>
10002df0:	d8c03217 	ldw	r3,200(sp)
10002df4:	d9003317 	ldw	r4,204(sp)
10002df8:	19012516 	blt	r3,r4,10003290 <___svfprintf_internal_r+0x1f80>
10002dfc:	9480004c 	andi	r18,r18,1
10002e00:	9001841e 	bne	r18,zero,10003414 <___svfprintf_internal_r+0x2104>
10002e04:	1805883a 	mov	r2,r3
10002e08:	1801cb16 	blt	r3,zero,10003538 <___svfprintf_internal_r+0x2228>
10002e0c:	d8c03217 	ldw	r3,200(sp)
10002e10:	044019c4 	movi	r17,103
10002e14:	d8c02b15 	stw	r3,172(sp)
10002e18:	df002907 	ldb	fp,164(sp)
10002e1c:	e000a61e 	bne	fp,zero,100030b8 <___svfprintf_internal_r+0x1da8>
10002e20:	df002783 	ldbu	fp,158(sp)
10002e24:	d8802915 	stw	r2,164(sp)
10002e28:	dc802c17 	ldw	r18,176(sp)
10002e2c:	d8002a15 	stw	zero,168(sp)
10002e30:	003af506 	br	10001a08 <__alt_data_end+0xf8001a08>
10002e34:	04040074 	movhi	r16,4097
10002e38:	84104104 	addi	r16,r16,16644
10002e3c:	003a7e06 	br	10001838 <__alt_data_end+0xf8001838>
10002e40:	d9003917 	ldw	r4,228(sp)
10002e44:	04001004 	movi	r16,64
10002e48:	800b883a 	mov	r5,r16
10002e4c:	00086f80 	call	100086f8 <_malloc_r>
10002e50:	d9002d17 	ldw	r4,180(sp)
10002e54:	20800015 	stw	r2,0(r4)
10002e58:	20800415 	stw	r2,16(r4)
10002e5c:	1001d026 	beq	r2,zero,100035a0 <___svfprintf_internal_r+0x2290>
10002e60:	d8802d17 	ldw	r2,180(sp)
10002e64:	14000515 	stw	r16,20(r2)
10002e68:	00394406 	br	1000137c <__alt_data_end+0xf800137c>
10002e6c:	04040074 	movhi	r16,4097
10002e70:	84104304 	addi	r16,r16,16652
10002e74:	003ee106 	br	100029fc <__alt_data_end+0xf80029fc>
10002e78:	d9402d17 	ldw	r5,180(sp)
10002e7c:	d9801e04 	addi	r6,sp,120
10002e80:	9809883a 	mov	r4,r19
10002e84:	000acb00 	call	1000acb0 <__ssprint_r>
10002e88:	103a081e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002e8c:	dc402617 	ldw	r17,152(sp)
10002e90:	d8c02017 	ldw	r3,128(sp)
10002e94:	da000404 	addi	r8,sp,16
10002e98:	003f4306 	br	10002ba8 <__alt_data_end+0xf8002ba8>
10002e9c:	01400184 	movi	r5,6
10002ea0:	d9402a15 	stw	r5,168(sp)
10002ea4:	003f9506 	br	10002cfc <__alt_data_end+0xf8002cfc>
10002ea8:	d8c02e17 	ldw	r3,184(sp)
10002eac:	1d000017 	ldw	r20,0(r3)
10002eb0:	18c00104 	addi	r3,r3,4
10002eb4:	d8c02e15 	stw	r3,184(sp)
10002eb8:	a02dd7fa 	srai	r22,r20,31
10002ebc:	b005883a 	mov	r2,r22
10002ec0:	003a7606 	br	1000189c <__alt_data_end+0xf800189c>
10002ec4:	d9002e17 	ldw	r4,184(sp)
10002ec8:	002d883a 	mov	r22,zero
10002ecc:	25000017 	ldw	r20,0(r4)
10002ed0:	21000104 	addi	r4,r4,4
10002ed4:	d9002e15 	stw	r4,184(sp)
10002ed8:	003bdd06 	br	10001e50 <__alt_data_end+0xf8001e50>
10002edc:	9480100c 	andi	r18,r18,64
10002ee0:	90006e26 	beq	r18,zero,1000309c <___svfprintf_internal_r+0x1d8c>
10002ee4:	d9402e17 	ldw	r5,184(sp)
10002ee8:	d8c02f17 	ldw	r3,188(sp)
10002eec:	28800017 	ldw	r2,0(r5)
10002ef0:	29400104 	addi	r5,r5,4
10002ef4:	d9402e15 	stw	r5,184(sp)
10002ef8:	10c0000d 	sth	r3,0(r2)
10002efc:	00392f06 	br	100013bc <__alt_data_end+0xf80013bc>
10002f00:	d9402d17 	ldw	r5,180(sp)
10002f04:	d9801e04 	addi	r6,sp,120
10002f08:	9809883a 	mov	r4,r19
10002f0c:	000acb00 	call	1000acb0 <__ssprint_r>
10002f10:	1039e61e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002f14:	d8c02017 	ldw	r3,128(sp)
10002f18:	d8801f17 	ldw	r2,124(sp)
10002f1c:	da000404 	addi	r8,sp,16
10002f20:	d9403317 	ldw	r5,204(sp)
10002f24:	10800044 	addi	r2,r2,1
10002f28:	44000015 	stw	r16,0(r8)
10002f2c:	28c7883a 	add	r3,r5,r3
10002f30:	003b5506 	br	10001c88 <__alt_data_end+0xf8001c88>
10002f34:	8009883a 	mov	r4,r16
10002f38:	df003e15 	stw	fp,248(sp)
10002f3c:	00012780 	call	10001278 <strlen>
10002f40:	d8802b15 	stw	r2,172(sp)
10002f44:	da003e17 	ldw	r8,248(sp)
10002f48:	103c160e 	bge	r2,zero,10001fa4 <__alt_data_end+0xf8001fa4>
10002f4c:	0005883a 	mov	r2,zero
10002f50:	003c1406 	br	10001fa4 <__alt_data_end+0xf8001fa4>
10002f54:	00bfffc4 	movi	r2,-1
10002f58:	0039d906 	br	100016c0 <__alt_data_end+0xf80016c0>
10002f5c:	01040074 	movhi	r4,4097
10002f60:	21105584 	addi	r4,r4,16726
10002f64:	d9003515 	stw	r4,212(sp)
10002f68:	003ae406 	br	10001afc <__alt_data_end+0xf8001afc>
10002f6c:	013fffc4 	movi	r4,-1
10002f70:	0039fa06 	br	1000175c <__alt_data_end+0xf800175c>
10002f74:	d9402d17 	ldw	r5,180(sp)
10002f78:	d9801e04 	addi	r6,sp,120
10002f7c:	9809883a 	mov	r4,r19
10002f80:	000acb00 	call	1000acb0 <__ssprint_r>
10002f84:	1039c91e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002f88:	d8c02017 	ldw	r3,128(sp)
10002f8c:	da000404 	addi	r8,sp,16
10002f90:	003d8406 	br	100025a4 <__alt_data_end+0xf80025a4>
10002f94:	0023883a 	mov	r17,zero
10002f98:	003d8306 	br	100025a8 <__alt_data_end+0xf80025a8>
10002f9c:	01040074 	movhi	r4,4097
10002fa0:	21105184 	addi	r4,r4,16710
10002fa4:	d9002c15 	stw	r4,176(sp)
10002fa8:	d9002c17 	ldw	r4,176(sp)
10002fac:	1c47883a 	add	r3,r3,r17
10002fb0:	10800044 	addi	r2,r2,1
10002fb4:	41000015 	stw	r4,0(r8)
10002fb8:	44400115 	stw	r17,4(r8)
10002fbc:	d8c02015 	stw	r3,128(sp)
10002fc0:	d8801f15 	stw	r2,124(sp)
10002fc4:	010001c4 	movi	r4,7
10002fc8:	20bfcd16 	blt	r4,r2,10002f00 <__alt_data_end+0xf8002f00>
10002fcc:	42000204 	addi	r8,r8,8
10002fd0:	003fd306 	br	10002f20 <__alt_data_end+0xf8002f20>
10002fd4:	d9402d17 	ldw	r5,180(sp)
10002fd8:	d9801e04 	addi	r6,sp,120
10002fdc:	9809883a 	mov	r4,r19
10002fe0:	000acb00 	call	1000acb0 <__ssprint_r>
10002fe4:	1039b11e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10002fe8:	d8802617 	ldw	r2,152(sp)
10002fec:	d8c02017 	ldw	r3,128(sp)
10002ff0:	da000404 	addi	r8,sp,16
10002ff4:	003e1c06 	br	10002868 <__alt_data_end+0xf8002868>
10002ff8:	d8802a17 	ldw	r2,168(sp)
10002ffc:	00c00184 	movi	r3,6
10003000:	1880012e 	bgeu	r3,r2,10003008 <___svfprintf_internal_r+0x1cf8>
10003004:	1805883a 	mov	r2,r3
10003008:	d8802b15 	stw	r2,172(sp)
1000300c:	1000f316 	blt	r2,zero,100033dc <___svfprintf_internal_r+0x20cc>
10003010:	04040074 	movhi	r16,4097
10003014:	d8802915 	stw	r2,164(sp)
10003018:	dd002e15 	stw	r20,184(sp)
1000301c:	d8002a15 	stw	zero,168(sp)
10003020:	d8003215 	stw	zero,200(sp)
10003024:	84104f04 	addi	r16,r16,16700
10003028:	0039883a 	mov	fp,zero
1000302c:	003a7d06 	br	10001a24 <__alt_data_end+0xf8001a24>
10003030:	01040074 	movhi	r4,4097
10003034:	21105584 	addi	r4,r4,16726
10003038:	d9003515 	stw	r4,212(sp)
1000303c:	003b3d06 	br	10001d34 <__alt_data_end+0xf8001d34>
10003040:	d9402d17 	ldw	r5,180(sp)
10003044:	d9801e04 	addi	r6,sp,120
10003048:	9809883a 	mov	r4,r19
1000304c:	000acb00 	call	1000acb0 <__ssprint_r>
10003050:	1039961e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
10003054:	d8802617 	ldw	r2,152(sp)
10003058:	d9403317 	ldw	r5,204(sp)
1000305c:	d8c02017 	ldw	r3,128(sp)
10003060:	da000404 	addi	r8,sp,16
10003064:	2885c83a 	sub	r2,r5,r2
10003068:	003e1006 	br	100028ac <__alt_data_end+0xf80028ac>
1000306c:	00800044 	movi	r2,1
10003070:	10803fcc 	andi	r2,r2,255
10003074:	00c00044 	movi	r3,1
10003078:	10fa1026 	beq	r2,r3,100018bc <__alt_data_end+0xf80018bc>
1000307c:	00c00084 	movi	r3,2
10003080:	10fb8226 	beq	r2,r3,10001e8c <__alt_data_end+0xf8001e8c>
10003084:	003a4206 	br	10001990 <__alt_data_end+0xf8001990>
10003088:	0021883a 	mov	r16,zero
1000308c:	003e0806 	br	100028b0 <__alt_data_end+0xf80028b0>
10003090:	07000b44 	movi	fp,45
10003094:	df002785 	stb	fp,158(sp)
10003098:	0039e306 	br	10001828 <__alt_data_end+0xf8001828>
1000309c:	d9002e17 	ldw	r4,184(sp)
100030a0:	d9402f17 	ldw	r5,188(sp)
100030a4:	20800017 	ldw	r2,0(r4)
100030a8:	21000104 	addi	r4,r4,4
100030ac:	d9002e15 	stw	r4,184(sp)
100030b0:	11400015 	stw	r5,0(r2)
100030b4:	0038c106 	br	100013bc <__alt_data_end+0xf80013bc>
100030b8:	00c00b44 	movi	r3,45
100030bc:	d8c02785 	stb	r3,158(sp)
100030c0:	d8802915 	stw	r2,164(sp)
100030c4:	dc802c17 	ldw	r18,176(sp)
100030c8:	d8002a15 	stw	zero,168(sp)
100030cc:	07000b44 	movi	fp,45
100030d0:	003a5106 	br	10001a18 <__alt_data_end+0xf8001a18>
100030d4:	9080004c 	andi	r2,r18,1
100030d8:	1000941e 	bne	r2,zero,1000332c <___svfprintf_internal_r+0x201c>
100030dc:	d8802117 	ldw	r2,132(sp)
100030e0:	1405c83a 	sub	r2,r2,r16
100030e4:	d8803315 	stw	r2,204(sp)
100030e8:	b441151e 	bne	r22,r17,10003540 <___svfprintf_internal_r+0x2230>
100030ec:	dd802617 	ldw	r22,152(sp)
100030f0:	00bfff44 	movi	r2,-3
100030f4:	b0801a16 	blt	r22,r2,10003160 <___svfprintf_internal_r+0x1e50>
100030f8:	d9402a17 	ldw	r5,168(sp)
100030fc:	2d801816 	blt	r5,r22,10003160 <___svfprintf_internal_r+0x1e50>
10003100:	dd803215 	stw	r22,200(sp)
10003104:	003f3a06 	br	10002df0 <__alt_data_end+0xf8002df0>
10003108:	1025883a 	mov	r18,r2
1000310c:	0039883a 	mov	fp,zero
10003110:	00800084 	movi	r2,2
10003114:	003fd606 	br	10003070 <__alt_data_end+0xf8003070>
10003118:	9080004c 	andi	r2,r18,1
1000311c:	103f191e 	bne	r2,zero,10002d84 <__alt_data_end+0xf8002d84>
10003120:	d8802117 	ldw	r2,132(sp)
10003124:	003f2806 	br	10002dc8 <__alt_data_end+0xf8002dc8>
10003128:	01040074 	movhi	r4,4097
1000312c:	21105184 	addi	r4,r4,16710
10003130:	d9002c15 	stw	r4,176(sp)
10003134:	003c7c06 	br	10002328 <__alt_data_end+0xf8002328>
10003138:	e005883a 	mov	r2,fp
1000313c:	003f2206 	br	10002dc8 <__alt_data_end+0xf8002dc8>
10003140:	d9002a17 	ldw	r4,168(sp)
10003144:	df002783 	ldbu	fp,158(sp)
10003148:	dd002e15 	stw	r20,184(sp)
1000314c:	d9002915 	stw	r4,164(sp)
10003150:	d9002b15 	stw	r4,172(sp)
10003154:	d8002a15 	stw	zero,168(sp)
10003158:	d8003215 	stw	zero,200(sp)
1000315c:	003a2a06 	br	10001a08 <__alt_data_end+0xf8001a08>
10003160:	8c7fff84 	addi	r17,r17,-2
10003164:	b5bfffc4 	addi	r22,r22,-1
10003168:	dd802615 	stw	r22,152(sp)
1000316c:	dc4022c5 	stb	r17,139(sp)
10003170:	b000c316 	blt	r22,zero,10003480 <___svfprintf_internal_r+0x2170>
10003174:	00800ac4 	movi	r2,43
10003178:	d8802305 	stb	r2,140(sp)
1000317c:	00800244 	movi	r2,9
10003180:	15806e16 	blt	r2,r22,1000333c <___svfprintf_internal_r+0x202c>
10003184:	00800c04 	movi	r2,48
10003188:	b5800c04 	addi	r22,r22,48
1000318c:	d8802345 	stb	r2,141(sp)
10003190:	dd802385 	stb	r22,142(sp)
10003194:	d88023c4 	addi	r2,sp,143
10003198:	df0022c4 	addi	fp,sp,139
1000319c:	d8c03317 	ldw	r3,204(sp)
100031a0:	1739c83a 	sub	fp,r2,fp
100031a4:	d9003317 	ldw	r4,204(sp)
100031a8:	e0c7883a 	add	r3,fp,r3
100031ac:	df003b15 	stw	fp,236(sp)
100031b0:	d8c02b15 	stw	r3,172(sp)
100031b4:	00800044 	movi	r2,1
100031b8:	1100b70e 	bge	r2,r4,10003498 <___svfprintf_internal_r+0x2188>
100031bc:	d8c02b17 	ldw	r3,172(sp)
100031c0:	18c00044 	addi	r3,r3,1
100031c4:	d8c02b15 	stw	r3,172(sp)
100031c8:	1805883a 	mov	r2,r3
100031cc:	1800b016 	blt	r3,zero,10003490 <___svfprintf_internal_r+0x2180>
100031d0:	d8003215 	stw	zero,200(sp)
100031d4:	003f1006 	br	10002e18 <__alt_data_end+0xf8002e18>
100031d8:	d8802a17 	ldw	r2,168(sp)
100031dc:	103ec71e 	bne	r2,zero,10002cfc <__alt_data_end+0xf8002cfc>
100031e0:	dc002a15 	stw	r16,168(sp)
100031e4:	003ec506 	br	10002cfc <__alt_data_end+0xf8002cfc>
100031e8:	d9402d17 	ldw	r5,180(sp)
100031ec:	d9801e04 	addi	r6,sp,120
100031f0:	9809883a 	mov	r4,r19
100031f4:	000acb00 	call	1000acb0 <__ssprint_r>
100031f8:	10392c1e 	bne	r2,zero,100016ac <__alt_data_end+0xf80016ac>
100031fc:	dc402617 	ldw	r17,152(sp)
10003200:	d8c02017 	ldw	r3,128(sp)
10003204:	d8801f17 	ldw	r2,124(sp)
10003208:	da000404 	addi	r8,sp,16
1000320c:	003e7706 	br	10002bec <__alt_data_end+0xf8002bec>
10003210:	182f883a 	mov	r23,r3
10003214:	d8002a15 	stw	zero,168(sp)
10003218:	00389306 	br	10001468 <__alt_data_end+0xf8001468>
1000321c:	d8c02a17 	ldw	r3,168(sp)
10003220:	d8802104 	addi	r2,sp,132
10003224:	d8800315 	stw	r2,12(sp)
10003228:	d9403617 	ldw	r5,216(sp)
1000322c:	d8802504 	addi	r2,sp,148
10003230:	d8800215 	stw	r2,8(sp)
10003234:	d8802604 	addi	r2,sp,152
10003238:	d8c00015 	stw	r3,0(sp)
1000323c:	9809883a 	mov	r4,r19
10003240:	d8800115 	stw	r2,4(sp)
10003244:	01c000c4 	movi	r7,3
10003248:	a00d883a 	mov	r6,r20
1000324c:	da003e15 	stw	r8,248(sp)
10003250:	0005cfc0 	call	10005cfc <_dtoa_r>
10003254:	d9002a17 	ldw	r4,168(sp)
10003258:	da003e17 	ldw	r8,248(sp)
1000325c:	1021883a 	mov	r16,r2
10003260:	1139883a 	add	fp,r2,r4
10003264:	2007883a 	mov	r3,r4
10003268:	81000007 	ldb	r4,0(r16)
1000326c:	00800c04 	movi	r2,48
10003270:	20806f26 	beq	r4,r2,10003430 <___svfprintf_internal_r+0x2120>
10003274:	d8c02617 	ldw	r3,152(sp)
10003278:	e0f9883a 	add	fp,fp,r3
1000327c:	003ec206 	br	10002d88 <__alt_data_end+0xf8002d88>
10003280:	00c00b44 	movi	r3,45
10003284:	2520003c 	xorhi	r20,r4,32768
10003288:	d8c02905 	stb	r3,164(sp)
1000328c:	003ea106 	br	10002d14 <__alt_data_end+0xf8002d14>
10003290:	d8c03217 	ldw	r3,200(sp)
10003294:	00c0890e 	bge	zero,r3,100034bc <___svfprintf_internal_r+0x21ac>
10003298:	00800044 	movi	r2,1
1000329c:	d9003317 	ldw	r4,204(sp)
100032a0:	1105883a 	add	r2,r2,r4
100032a4:	d8802b15 	stw	r2,172(sp)
100032a8:	10005f16 	blt	r2,zero,10003428 <___svfprintf_internal_r+0x2118>
100032ac:	044019c4 	movi	r17,103
100032b0:	003ed906 	br	10002e18 <__alt_data_end+0xf8002e18>
100032b4:	d9002a17 	ldw	r4,168(sp)
100032b8:	20c00044 	addi	r3,r4,1
100032bc:	003e9c06 	br	10002d30 <__alt_data_end+0xf8002d30>
100032c0:	d9002a17 	ldw	r4,168(sp)
100032c4:	00c0680e 	bge	zero,r3,10003468 <___svfprintf_internal_r+0x2158>
100032c8:	2000461e 	bne	r4,zero,100033e4 <___svfprintf_internal_r+0x20d4>
100032cc:	9480004c 	andi	r18,r18,1
100032d0:	9000441e 	bne	r18,zero,100033e4 <___svfprintf_internal_r+0x20d4>
100032d4:	1805883a 	mov	r2,r3
100032d8:	1800a116 	blt	r3,zero,10003560 <___svfprintf_internal_r+0x2250>
100032dc:	d8c03217 	ldw	r3,200(sp)
100032e0:	d8c02b15 	stw	r3,172(sp)
100032e4:	003ecc06 	br	10002e18 <__alt_data_end+0xf8002e18>
100032e8:	d9402a17 	ldw	r5,168(sp)
100032ec:	d8802104 	addi	r2,sp,132
100032f0:	d8800315 	stw	r2,12(sp)
100032f4:	d9400015 	stw	r5,0(sp)
100032f8:	d8802504 	addi	r2,sp,148
100032fc:	d9403617 	ldw	r5,216(sp)
10003300:	d8800215 	stw	r2,8(sp)
10003304:	d8802604 	addi	r2,sp,152
10003308:	d8800115 	stw	r2,4(sp)
1000330c:	01c000c4 	movi	r7,3
10003310:	a00d883a 	mov	r6,r20
10003314:	9809883a 	mov	r4,r19
10003318:	da003e15 	stw	r8,248(sp)
1000331c:	0005cfc0 	call	10005cfc <_dtoa_r>
10003320:	d8c02a17 	ldw	r3,168(sp)
10003324:	da003e17 	ldw	r8,248(sp)
10003328:	1021883a 	mov	r16,r2
1000332c:	00801184 	movi	r2,70
10003330:	80f9883a 	add	fp,r16,r3
10003334:	88bfcc26 	beq	r17,r2,10003268 <__alt_data_end+0xf8003268>
10003338:	003e9306 	br	10002d88 <__alt_data_end+0xf8002d88>
1000333c:	df0022c4 	addi	fp,sp,139
10003340:	dc002a15 	stw	r16,168(sp)
10003344:	9829883a 	mov	r20,r19
10003348:	e021883a 	mov	r16,fp
1000334c:	4027883a 	mov	r19,r8
10003350:	b009883a 	mov	r4,r22
10003354:	01400284 	movi	r5,10
10003358:	0000ea00 	call	10000ea0 <__modsi3>
1000335c:	10800c04 	addi	r2,r2,48
10003360:	843fffc4 	addi	r16,r16,-1
10003364:	b009883a 	mov	r4,r22
10003368:	01400284 	movi	r5,10
1000336c:	80800005 	stb	r2,0(r16)
10003370:	0000e1c0 	call	10000e1c <__divsi3>
10003374:	102d883a 	mov	r22,r2
10003378:	00800244 	movi	r2,9
1000337c:	15bff416 	blt	r2,r22,10003350 <__alt_data_end+0xf8003350>
10003380:	9811883a 	mov	r8,r19
10003384:	b0800c04 	addi	r2,r22,48
10003388:	a027883a 	mov	r19,r20
1000338c:	8029883a 	mov	r20,r16
10003390:	a17fffc4 	addi	r5,r20,-1
10003394:	a0bfffc5 	stb	r2,-1(r20)
10003398:	dc002a17 	ldw	r16,168(sp)
1000339c:	2f00782e 	bgeu	r5,fp,10003580 <___svfprintf_internal_r+0x2270>
100033a0:	d9c02384 	addi	r7,sp,142
100033a4:	3d0fc83a 	sub	r7,r7,r20
100033a8:	d9002344 	addi	r4,sp,141
100033ac:	e1cf883a 	add	r7,fp,r7
100033b0:	00000106 	br	100033b8 <___svfprintf_internal_r+0x20a8>
100033b4:	28800003 	ldbu	r2,0(r5)
100033b8:	20800005 	stb	r2,0(r4)
100033bc:	21000044 	addi	r4,r4,1
100033c0:	29400044 	addi	r5,r5,1
100033c4:	21fffb1e 	bne	r4,r7,100033b4 <__alt_data_end+0xf80033b4>
100033c8:	d8802304 	addi	r2,sp,140
100033cc:	1505c83a 	sub	r2,r2,r20
100033d0:	d8c02344 	addi	r3,sp,141
100033d4:	1885883a 	add	r2,r3,r2
100033d8:	003f7006 	br	1000319c <__alt_data_end+0xf800319c>
100033dc:	0005883a 	mov	r2,zero
100033e0:	003f0b06 	br	10003010 <__alt_data_end+0xf8003010>
100033e4:	d9002a17 	ldw	r4,168(sp)
100033e8:	d8c03217 	ldw	r3,200(sp)
100033ec:	20800044 	addi	r2,r4,1
100033f0:	1885883a 	add	r2,r3,r2
100033f4:	d8802b15 	stw	r2,172(sp)
100033f8:	103e870e 	bge	r2,zero,10002e18 <__alt_data_end+0xf8002e18>
100033fc:	0005883a 	mov	r2,zero
10003400:	003e8506 	br	10002e18 <__alt_data_end+0xf8002e18>
10003404:	01040074 	movhi	r4,4097
10003408:	21105184 	addi	r4,r4,16710
1000340c:	d9002c15 	stw	r4,176(sp)
10003410:	003cc506 	br	10002728 <__alt_data_end+0xf8002728>
10003414:	d8c03217 	ldw	r3,200(sp)
10003418:	18c00044 	addi	r3,r3,1
1000341c:	d8c02b15 	stw	r3,172(sp)
10003420:	1805883a 	mov	r2,r3
10003424:	183fa10e 	bge	r3,zero,100032ac <__alt_data_end+0xf80032ac>
10003428:	0005883a 	mov	r2,zero
1000342c:	003f9f06 	br	100032ac <__alt_data_end+0xf80032ac>
10003430:	d9003617 	ldw	r4,216(sp)
10003434:	000d883a 	mov	r6,zero
10003438:	000f883a 	mov	r7,zero
1000343c:	a00b883a 	mov	r5,r20
10003440:	d8c03d15 	stw	r3,244(sp)
10003444:	da003e15 	stw	r8,248(sp)
10003448:	00101ac0 	call	100101ac <__eqdf2>
1000344c:	d8c03d17 	ldw	r3,244(sp)
10003450:	da003e17 	ldw	r8,248(sp)
10003454:	103f8726 	beq	r2,zero,10003274 <__alt_data_end+0xf8003274>
10003458:	00800044 	movi	r2,1
1000345c:	10c7c83a 	sub	r3,r2,r3
10003460:	d8c02615 	stw	r3,152(sp)
10003464:	003f8406 	br	10003278 <__alt_data_end+0xf8003278>
10003468:	20000e1e 	bne	r4,zero,100034a4 <___svfprintf_internal_r+0x2194>
1000346c:	9480004c 	andi	r18,r18,1
10003470:	90000c1e 	bne	r18,zero,100034a4 <___svfprintf_internal_r+0x2194>
10003474:	00800044 	movi	r2,1
10003478:	d8802b15 	stw	r2,172(sp)
1000347c:	003e6606 	br	10002e18 <__alt_data_end+0xf8002e18>
10003480:	00800b44 	movi	r2,45
10003484:	05adc83a 	sub	r22,zero,r22
10003488:	d8802305 	stb	r2,140(sp)
1000348c:	003f3b06 	br	1000317c <__alt_data_end+0xf800317c>
10003490:	0005883a 	mov	r2,zero
10003494:	003f4e06 	br	100031d0 <__alt_data_end+0xf80031d0>
10003498:	90a4703a 	and	r18,r18,r2
1000349c:	903f4a26 	beq	r18,zero,100031c8 <__alt_data_end+0xf80031c8>
100034a0:	003f4606 	br	100031bc <__alt_data_end+0xf80031bc>
100034a4:	d8c02a17 	ldw	r3,168(sp)
100034a8:	18c00084 	addi	r3,r3,2
100034ac:	d8c02b15 	stw	r3,172(sp)
100034b0:	1805883a 	mov	r2,r3
100034b4:	183e580e 	bge	r3,zero,10002e18 <__alt_data_end+0xf8002e18>
100034b8:	003fd006 	br	100033fc <__alt_data_end+0xf80033fc>
100034bc:	00800084 	movi	r2,2
100034c0:	10c5c83a 	sub	r2,r2,r3
100034c4:	003f7506 	br	1000329c <__alt_data_end+0xf800329c>
100034c8:	d9402e17 	ldw	r5,184(sp)
100034cc:	d9002e17 	ldw	r4,184(sp)
100034d0:	bc400043 	ldbu	r17,1(r23)
100034d4:	29400017 	ldw	r5,0(r5)
100034d8:	20800104 	addi	r2,r4,4
100034dc:	d8802e15 	stw	r2,184(sp)
100034e0:	d9402a15 	stw	r5,168(sp)
100034e4:	182f883a 	mov	r23,r3
100034e8:	283df10e 	bge	r5,zero,10002cb0 <__alt_data_end+0xf8002cb0>
100034ec:	8c403fcc 	andi	r17,r17,255
100034f0:	017fffc4 	movi	r5,-1
100034f4:	8c40201c 	xori	r17,r17,128
100034f8:	d9402a15 	stw	r5,168(sp)
100034fc:	8c7fe004 	addi	r17,r17,-128
10003500:	0037d806 	br	10001464 <__alt_data_end+0xf8001464>
10003504:	9080004c 	andi	r2,r18,1
10003508:	0039883a 	mov	fp,zero
1000350c:	10000726 	beq	r2,zero,1000352c <___svfprintf_internal_r+0x221c>
10003510:	d8c02817 	ldw	r3,160(sp)
10003514:	dc001dc4 	addi	r16,sp,119
10003518:	00800c04 	movi	r2,48
1000351c:	1c07c83a 	sub	r3,r3,r16
10003520:	d8801dc5 	stb	r2,119(sp)
10003524:	d8c02b15 	stw	r3,172(sp)
10003528:	00393106 	br	100019f0 <__alt_data_end+0xf80019f0>
1000352c:	d8002b15 	stw	zero,172(sp)
10003530:	dc001e04 	addi	r16,sp,120
10003534:	00392e06 	br	100019f0 <__alt_data_end+0xf80019f0>
10003538:	0005883a 	mov	r2,zero
1000353c:	003e3306 	br	10002e0c <__alt_data_end+0xf8002e0c>
10003540:	dd802617 	ldw	r22,152(sp)
10003544:	003f0706 	br	10003164 <__alt_data_end+0xf8003164>
10003548:	d8c02b03 	ldbu	r3,172(sp)
1000354c:	d8c02785 	stb	r3,158(sp)
10003550:	003a3506 	br	10001e28 <__alt_data_end+0xf8001e28>
10003554:	d8c02b03 	ldbu	r3,172(sp)
10003558:	d8c02785 	stb	r3,158(sp)
1000355c:	003a1706 	br	10001dbc <__alt_data_end+0xf8001dbc>
10003560:	0005883a 	mov	r2,zero
10003564:	003f5d06 	br	100032dc <__alt_data_end+0xf80032dc>
10003568:	d8c02b03 	ldbu	r3,172(sp)
1000356c:	d8c02785 	stb	r3,158(sp)
10003570:	0038f306 	br	10001940 <__alt_data_end+0xf8001940>
10003574:	d8c02b03 	ldbu	r3,172(sp)
10003578:	d8c02785 	stb	r3,158(sp)
1000357c:	0038be06 	br	10001878 <__alt_data_end+0xf8001878>
10003580:	d8802344 	addi	r2,sp,141
10003584:	003f0506 	br	1000319c <__alt_data_end+0xf800319c>
10003588:	d8c02b03 	ldbu	r3,172(sp)
1000358c:	d8c02785 	stb	r3,158(sp)
10003590:	00388b06 	br	100017c0 <__alt_data_end+0xf80017c0>
10003594:	d8c02b03 	ldbu	r3,172(sp)
10003598:	d8c02785 	stb	r3,158(sp)
1000359c:	003ad706 	br	100020fc <__alt_data_end+0xf80020fc>
100035a0:	d9403917 	ldw	r5,228(sp)
100035a4:	00800304 	movi	r2,12
100035a8:	28800015 	stw	r2,0(r5)
100035ac:	00bfffc4 	movi	r2,-1
100035b0:	00384306 	br	100016c0 <__alt_data_end+0xf80016c0>
100035b4:	d8c02b03 	ldbu	r3,172(sp)
100035b8:	d8c02785 	stb	r3,158(sp)
100035bc:	003ab606 	br	10002098 <__alt_data_end+0xf8002098>
100035c0:	d8c02b03 	ldbu	r3,172(sp)
100035c4:	d8c02785 	stb	r3,158(sp)
100035c8:	003a8906 	br	10001ff0 <__alt_data_end+0xf8001ff0>

100035cc <___vfprintf_internal_r>:
100035cc:	deffb804 	addi	sp,sp,-288
100035d0:	dfc04715 	stw	ra,284(sp)
100035d4:	ddc04515 	stw	r23,276(sp)
100035d8:	dd404315 	stw	r21,268(sp)
100035dc:	d9002d15 	stw	r4,180(sp)
100035e0:	282f883a 	mov	r23,r5
100035e4:	302b883a 	mov	r21,r6
100035e8:	d9c02e15 	stw	r7,184(sp)
100035ec:	df004615 	stw	fp,280(sp)
100035f0:	dd804415 	stw	r22,272(sp)
100035f4:	dd004215 	stw	r20,264(sp)
100035f8:	dcc04115 	stw	r19,260(sp)
100035fc:	dc804015 	stw	r18,256(sp)
10003600:	dc403f15 	stw	r17,252(sp)
10003604:	dc003e15 	stw	r16,248(sp)
10003608:	000850c0 	call	1000850c <_localeconv_r>
1000360c:	10800017 	ldw	r2,0(r2)
10003610:	1009883a 	mov	r4,r2
10003614:	d8803415 	stw	r2,208(sp)
10003618:	00012780 	call	10001278 <strlen>
1000361c:	d8803715 	stw	r2,220(sp)
10003620:	d8802d17 	ldw	r2,180(sp)
10003624:	10000226 	beq	r2,zero,10003630 <___vfprintf_internal_r+0x64>
10003628:	10800e17 	ldw	r2,56(r2)
1000362c:	1000fb26 	beq	r2,zero,10003a1c <___vfprintf_internal_r+0x450>
10003630:	b880030b 	ldhu	r2,12(r23)
10003634:	10c8000c 	andi	r3,r2,8192
10003638:	1800061e 	bne	r3,zero,10003654 <___vfprintf_internal_r+0x88>
1000363c:	b9001917 	ldw	r4,100(r23)
10003640:	00f7ffc4 	movi	r3,-8193
10003644:	10880014 	ori	r2,r2,8192
10003648:	20c6703a 	and	r3,r4,r3
1000364c:	b880030d 	sth	r2,12(r23)
10003650:	b8c01915 	stw	r3,100(r23)
10003654:	10c0020c 	andi	r3,r2,8
10003658:	1800c326 	beq	r3,zero,10003968 <___vfprintf_internal_r+0x39c>
1000365c:	b8c00417 	ldw	r3,16(r23)
10003660:	1800c126 	beq	r3,zero,10003968 <___vfprintf_internal_r+0x39c>
10003664:	1080068c 	andi	r2,r2,26
10003668:	00c00284 	movi	r3,10
1000366c:	10c0c626 	beq	r2,r3,10003988 <___vfprintf_internal_r+0x3bc>
10003670:	d8c00404 	addi	r3,sp,16
10003674:	05040074 	movhi	r20,4097
10003678:	d9001e04 	addi	r4,sp,120
1000367c:	a5105984 	addi	r20,r20,16742
10003680:	d8c01e15 	stw	r3,120(sp)
10003684:	d8002015 	stw	zero,128(sp)
10003688:	d8001f15 	stw	zero,124(sp)
1000368c:	d8003315 	stw	zero,204(sp)
10003690:	d8003615 	stw	zero,216(sp)
10003694:	d8003815 	stw	zero,224(sp)
10003698:	1811883a 	mov	r8,r3
1000369c:	d8003915 	stw	zero,228(sp)
100036a0:	d8003a15 	stw	zero,232(sp)
100036a4:	d8002f15 	stw	zero,188(sp)
100036a8:	d9002815 	stw	r4,160(sp)
100036ac:	a8800007 	ldb	r2,0(r21)
100036b0:	10028b26 	beq	r2,zero,100040e0 <___vfprintf_internal_r+0xb14>
100036b4:	00c00944 	movi	r3,37
100036b8:	a823883a 	mov	r17,r21
100036bc:	10c0021e 	bne	r2,r3,100036c8 <___vfprintf_internal_r+0xfc>
100036c0:	00001406 	br	10003714 <___vfprintf_internal_r+0x148>
100036c4:	10c00326 	beq	r2,r3,100036d4 <___vfprintf_internal_r+0x108>
100036c8:	8c400044 	addi	r17,r17,1
100036cc:	88800007 	ldb	r2,0(r17)
100036d0:	103ffc1e 	bne	r2,zero,100036c4 <__alt_data_end+0xf80036c4>
100036d4:	8d61c83a 	sub	r16,r17,r21
100036d8:	80000e26 	beq	r16,zero,10003714 <___vfprintf_internal_r+0x148>
100036dc:	d8c02017 	ldw	r3,128(sp)
100036e0:	d8801f17 	ldw	r2,124(sp)
100036e4:	45400015 	stw	r21,0(r8)
100036e8:	1c07883a 	add	r3,r3,r16
100036ec:	10800044 	addi	r2,r2,1
100036f0:	d8c02015 	stw	r3,128(sp)
100036f4:	44000115 	stw	r16,4(r8)
100036f8:	d8801f15 	stw	r2,124(sp)
100036fc:	00c001c4 	movi	r3,7
10003700:	1880a916 	blt	r3,r2,100039a8 <___vfprintf_internal_r+0x3dc>
10003704:	42000204 	addi	r8,r8,8
10003708:	d9402f17 	ldw	r5,188(sp)
1000370c:	2c0b883a 	add	r5,r5,r16
10003710:	d9402f15 	stw	r5,188(sp)
10003714:	88800007 	ldb	r2,0(r17)
10003718:	1000aa26 	beq	r2,zero,100039c4 <___vfprintf_internal_r+0x3f8>
1000371c:	8d400044 	addi	r21,r17,1
10003720:	8c400047 	ldb	r17,1(r17)
10003724:	0021883a 	mov	r16,zero
10003728:	00bfffc4 	movi	r2,-1
1000372c:	0025883a 	mov	r18,zero
10003730:	dc002905 	stb	r16,164(sp)
10003734:	d8002785 	stb	zero,158(sp)
10003738:	d8002b05 	stb	zero,172(sp)
1000373c:	d8802a15 	stw	r2,168(sp)
10003740:	d8003115 	stw	zero,196(sp)
10003744:	04c01604 	movi	r19,88
10003748:	05800244 	movi	r22,9
1000374c:	9021883a 	mov	r16,r18
10003750:	4039883a 	mov	fp,r8
10003754:	ad400044 	addi	r21,r21,1
10003758:	88bff804 	addi	r2,r17,-32
1000375c:	98833236 	bltu	r19,r2,10004428 <___vfprintf_internal_r+0xe5c>
10003760:	100490ba 	slli	r2,r2,2
10003764:	00c40034 	movhi	r3,4096
10003768:	18cdde04 	addi	r3,r3,14200
1000376c:	10c5883a 	add	r2,r2,r3
10003770:	10800017 	ldw	r2,0(r2)
10003774:	1000683a 	jmp	r2
10003778:	10004320 	cmpeqi	zero,r2,268
1000377c:	10004428 	cmpgeui	zero,r2,272
10003780:	10004428 	cmpgeui	zero,r2,272
10003784:	10004340 	call	11000434 <_gp+0xfe2268>
10003788:	10004428 	cmpgeui	zero,r2,272
1000378c:	10004428 	cmpgeui	zero,r2,272
10003790:	10004428 	cmpgeui	zero,r2,272
10003794:	10004428 	cmpgeui	zero,r2,272
10003798:	10004428 	cmpgeui	zero,r2,272
1000379c:	10004428 	cmpgeui	zero,r2,272
100037a0:	10003a28 	cmpgeui	zero,r2,232
100037a4:	10004230 	cmpltui	zero,r2,264
100037a8:	10004428 	cmpgeui	zero,r2,272
100037ac:	100038ec 	andhi	zero,r2,227
100037b0:	10003a4c 	andi	zero,r2,233
100037b4:	10004428 	cmpgeui	zero,r2,272
100037b8:	10003a9c 	xori	zero,r2,234
100037bc:	10003aa8 	cmpgeui	zero,r2,234
100037c0:	10003aa8 	cmpgeui	zero,r2,234
100037c4:	10003aa8 	cmpgeui	zero,r2,234
100037c8:	10003aa8 	cmpgeui	zero,r2,234
100037cc:	10003aa8 	cmpgeui	zero,r2,234
100037d0:	10003aa8 	cmpgeui	zero,r2,234
100037d4:	10003aa8 	cmpgeui	zero,r2,234
100037d8:	10003aa8 	cmpgeui	zero,r2,234
100037dc:	10003aa8 	cmpgeui	zero,r2,234
100037e0:	10004428 	cmpgeui	zero,r2,272
100037e4:	10004428 	cmpgeui	zero,r2,272
100037e8:	10004428 	cmpgeui	zero,r2,272
100037ec:	10004428 	cmpgeui	zero,r2,272
100037f0:	10004428 	cmpgeui	zero,r2,272
100037f4:	10004428 	cmpgeui	zero,r2,272
100037f8:	10004428 	cmpgeui	zero,r2,272
100037fc:	10004428 	cmpgeui	zero,r2,272
10003800:	10004428 	cmpgeui	zero,r2,272
10003804:	10004428 	cmpgeui	zero,r2,272
10003808:	10003ae4 	muli	zero,r2,235
1000380c:	10003bac 	andhi	zero,r2,238
10003810:	10004428 	cmpgeui	zero,r2,272
10003814:	10003bac 	andhi	zero,r2,238
10003818:	10004428 	cmpgeui	zero,r2,272
1000381c:	10004428 	cmpgeui	zero,r2,272
10003820:	10004428 	cmpgeui	zero,r2,272
10003824:	10004428 	cmpgeui	zero,r2,272
10003828:	10003c58 	cmpnei	zero,r2,241
1000382c:	10004428 	cmpgeui	zero,r2,272
10003830:	10004428 	cmpgeui	zero,r2,272
10003834:	10003c64 	muli	zero,r2,241
10003838:	10004428 	cmpgeui	zero,r2,272
1000383c:	10004428 	cmpgeui	zero,r2,272
10003840:	10004428 	cmpgeui	zero,r2,272
10003844:	10004428 	cmpgeui	zero,r2,272
10003848:	10004428 	cmpgeui	zero,r2,272
1000384c:	100040e8 	cmpgeui	zero,r2,259
10003850:	10004428 	cmpgeui	zero,r2,272
10003854:	10004428 	cmpgeui	zero,r2,272
10003858:	10004154 	ori	zero,r2,261
1000385c:	10004428 	cmpgeui	zero,r2,272
10003860:	10004428 	cmpgeui	zero,r2,272
10003864:	10004428 	cmpgeui	zero,r2,272
10003868:	10004428 	cmpgeui	zero,r2,272
1000386c:	10004428 	cmpgeui	zero,r2,272
10003870:	10004428 	cmpgeui	zero,r2,272
10003874:	10004428 	cmpgeui	zero,r2,272
10003878:	10004428 	cmpgeui	zero,r2,272
1000387c:	10004428 	cmpgeui	zero,r2,272
10003880:	10004428 	cmpgeui	zero,r2,272
10003884:	100043cc 	andi	zero,r2,271
10003888:	1000434c 	andi	zero,r2,269
1000388c:	10003bac 	andhi	zero,r2,238
10003890:	10003bac 	andhi	zero,r2,238
10003894:	10003bac 	andhi	zero,r2,238
10003898:	1000436c 	andhi	zero,r2,269
1000389c:	1000434c 	andi	zero,r2,269
100038a0:	10004428 	cmpgeui	zero,r2,272
100038a4:	10004428 	cmpgeui	zero,r2,272
100038a8:	10004378 	rdprs	zero,r2,269
100038ac:	10004428 	cmpgeui	zero,r2,272
100038b0:	1000438c 	andi	zero,r2,270
100038b4:	10004210 	cmplti	zero,r2,264
100038b8:	100038f8 	rdprs	zero,r2,227
100038bc:	10004248 	cmpgei	zero,r2,265
100038c0:	10004428 	cmpgeui	zero,r2,272
100038c4:	10004254 	ori	zero,r2,265
100038c8:	10004428 	cmpgeui	zero,r2,272
100038cc:	100042b8 	rdprs	zero,r2,266
100038d0:	10004428 	cmpgeui	zero,r2,272
100038d4:	10004428 	cmpgeui	zero,r2,272
100038d8:	100042d8 	cmpnei	zero,r2,267
100038dc:	d8c03117 	ldw	r3,196(sp)
100038e0:	d8802e15 	stw	r2,184(sp)
100038e4:	00c7c83a 	sub	r3,zero,r3
100038e8:	d8c03115 	stw	r3,196(sp)
100038ec:	84000114 	ori	r16,r16,4
100038f0:	ac400007 	ldb	r17,0(r21)
100038f4:	003f9706 	br	10003754 <__alt_data_end+0xf8003754>
100038f8:	00800c04 	movi	r2,48
100038fc:	d8802705 	stb	r2,156(sp)
10003900:	00801e04 	movi	r2,120
10003904:	d8802745 	stb	r2,157(sp)
10003908:	d9002a17 	ldw	r4,168(sp)
1000390c:	d8802e17 	ldw	r2,184(sp)
10003910:	d8002785 	stb	zero,158(sp)
10003914:	e011883a 	mov	r8,fp
10003918:	10c00104 	addi	r3,r2,4
1000391c:	14c00017 	ldw	r19,0(r2)
10003920:	002d883a 	mov	r22,zero
10003924:	80800094 	ori	r2,r16,2
10003928:	2002ca16 	blt	r4,zero,10004454 <___vfprintf_internal_r+0xe88>
1000392c:	00bfdfc4 	movi	r2,-129
10003930:	80a4703a 	and	r18,r16,r2
10003934:	d8c02e15 	stw	r3,184(sp)
10003938:	94800094 	ori	r18,r18,2
1000393c:	9802b41e 	bne	r19,zero,10004410 <___vfprintf_internal_r+0xe44>
10003940:	01440074 	movhi	r5,4097
10003944:	29504a04 	addi	r5,r5,16680
10003948:	d9403915 	stw	r5,228(sp)
1000394c:	04401e04 	movi	r17,120
10003950:	d8802a17 	ldw	r2,168(sp)
10003954:	0039883a 	mov	fp,zero
10003958:	1001fa26 	beq	r2,zero,10004144 <___vfprintf_internal_r+0xb78>
1000395c:	0027883a 	mov	r19,zero
10003960:	002d883a 	mov	r22,zero
10003964:	00021906 	br	100041cc <___vfprintf_internal_r+0xc00>
10003968:	d9002d17 	ldw	r4,180(sp)
1000396c:	b80b883a 	mov	r5,r23
10003970:	00059800 	call	10005980 <__swsetup_r>
10003974:	1005dc1e 	bne	r2,zero,100050e8 <___vfprintf_internal_r+0x1b1c>
10003978:	b880030b 	ldhu	r2,12(r23)
1000397c:	00c00284 	movi	r3,10
10003980:	1080068c 	andi	r2,r2,26
10003984:	10ff3a1e 	bne	r2,r3,10003670 <__alt_data_end+0xf8003670>
10003988:	b880038f 	ldh	r2,14(r23)
1000398c:	103f3816 	blt	r2,zero,10003670 <__alt_data_end+0xf8003670>
10003990:	d9c02e17 	ldw	r7,184(sp)
10003994:	d9002d17 	ldw	r4,180(sp)
10003998:	a80d883a 	mov	r6,r21
1000399c:	b80b883a 	mov	r5,r23
100039a0:	00058c40 	call	100058c4 <__sbprintf>
100039a4:	00001106 	br	100039ec <___vfprintf_internal_r+0x420>
100039a8:	d9002d17 	ldw	r4,180(sp)
100039ac:	d9801e04 	addi	r6,sp,120
100039b0:	b80b883a 	mov	r5,r23
100039b4:	000c31c0 	call	1000c31c <__sprint_r>
100039b8:	1000081e 	bne	r2,zero,100039dc <___vfprintf_internal_r+0x410>
100039bc:	da000404 	addi	r8,sp,16
100039c0:	003f5106 	br	10003708 <__alt_data_end+0xf8003708>
100039c4:	d8802017 	ldw	r2,128(sp)
100039c8:	10000426 	beq	r2,zero,100039dc <___vfprintf_internal_r+0x410>
100039cc:	d9002d17 	ldw	r4,180(sp)
100039d0:	d9801e04 	addi	r6,sp,120
100039d4:	b80b883a 	mov	r5,r23
100039d8:	000c31c0 	call	1000c31c <__sprint_r>
100039dc:	b880030b 	ldhu	r2,12(r23)
100039e0:	1080100c 	andi	r2,r2,64
100039e4:	1005c01e 	bne	r2,zero,100050e8 <___vfprintf_internal_r+0x1b1c>
100039e8:	d8802f17 	ldw	r2,188(sp)
100039ec:	dfc04717 	ldw	ra,284(sp)
100039f0:	df004617 	ldw	fp,280(sp)
100039f4:	ddc04517 	ldw	r23,276(sp)
100039f8:	dd804417 	ldw	r22,272(sp)
100039fc:	dd404317 	ldw	r21,268(sp)
10003a00:	dd004217 	ldw	r20,264(sp)
10003a04:	dcc04117 	ldw	r19,260(sp)
10003a08:	dc804017 	ldw	r18,256(sp)
10003a0c:	dc403f17 	ldw	r17,252(sp)
10003a10:	dc003e17 	ldw	r16,248(sp)
10003a14:	dec04804 	addi	sp,sp,288
10003a18:	f800283a 	ret
10003a1c:	d9002d17 	ldw	r4,180(sp)
10003a20:	000798c0 	call	1000798c <__sinit>
10003a24:	003f0206 	br	10003630 <__alt_data_end+0xf8003630>
10003a28:	d9002e17 	ldw	r4,184(sp)
10003a2c:	d9402e17 	ldw	r5,184(sp)
10003a30:	21000017 	ldw	r4,0(r4)
10003a34:	28800104 	addi	r2,r5,4
10003a38:	d9003115 	stw	r4,196(sp)
10003a3c:	203fa716 	blt	r4,zero,100038dc <__alt_data_end+0xf80038dc>
10003a40:	d8802e15 	stw	r2,184(sp)
10003a44:	ac400007 	ldb	r17,0(r21)
10003a48:	003f4206 	br	10003754 <__alt_data_end+0xf8003754>
10003a4c:	ac400007 	ldb	r17,0(r21)
10003a50:	01000a84 	movi	r4,42
10003a54:	a8c00044 	addi	r3,r21,1
10003a58:	89075826 	beq	r17,r4,100057bc <___vfprintf_internal_r+0x21f0>
10003a5c:	8cbff404 	addi	r18,r17,-48
10003a60:	b486ae36 	bltu	r22,r18,1000551c <___vfprintf_internal_r+0x1f50>
10003a64:	0009883a 	mov	r4,zero
10003a68:	1823883a 	mov	r17,r3
10003a6c:	01400284 	movi	r5,10
10003a70:	0000fd00 	call	10000fd0 <__mulsi3>
10003a74:	88c00007 	ldb	r3,0(r17)
10003a78:	1489883a 	add	r4,r2,r18
10003a7c:	8d400044 	addi	r21,r17,1
10003a80:	1cbff404 	addi	r18,r3,-48
10003a84:	a823883a 	mov	r17,r21
10003a88:	b4bff82e 	bgeu	r22,r18,10003a6c <__alt_data_end+0xf8003a6c>
10003a8c:	1823883a 	mov	r17,r3
10003a90:	2005f616 	blt	r4,zero,1000526c <___vfprintf_internal_r+0x1ca0>
10003a94:	d9002a15 	stw	r4,168(sp)
10003a98:	003f2f06 	br	10003758 <__alt_data_end+0xf8003758>
10003a9c:	84002014 	ori	r16,r16,128
10003aa0:	ac400007 	ldb	r17,0(r21)
10003aa4:	003f2b06 	br	10003754 <__alt_data_end+0xf8003754>
10003aa8:	8cbff404 	addi	r18,r17,-48
10003aac:	d8003115 	stw	zero,196(sp)
10003ab0:	0009883a 	mov	r4,zero
10003ab4:	a823883a 	mov	r17,r21
10003ab8:	01400284 	movi	r5,10
10003abc:	0000fd00 	call	10000fd0 <__mulsi3>
10003ac0:	88c00007 	ldb	r3,0(r17)
10003ac4:	9089883a 	add	r4,r18,r2
10003ac8:	ad400044 	addi	r21,r21,1
10003acc:	1cbff404 	addi	r18,r3,-48
10003ad0:	a823883a 	mov	r17,r21
10003ad4:	b4bff82e 	bgeu	r22,r18,10003ab8 <__alt_data_end+0xf8003ab8>
10003ad8:	1823883a 	mov	r17,r3
10003adc:	d9003115 	stw	r4,196(sp)
10003ae0:	003f1d06 	br	10003758 <__alt_data_end+0xf8003758>
10003ae4:	8025883a 	mov	r18,r16
10003ae8:	dc002903 	ldbu	r16,164(sp)
10003aec:	e011883a 	mov	r8,fp
10003af0:	84003fcc 	andi	r16,r16,255
10003af4:	8007531e 	bne	r16,zero,10005844 <___vfprintf_internal_r+0x2278>
10003af8:	94800414 	ori	r18,r18,16
10003afc:	9080080c 	andi	r2,r18,32
10003b00:	1003a326 	beq	r2,zero,10004990 <___vfprintf_internal_r+0x13c4>
10003b04:	d9002e17 	ldw	r4,184(sp)
10003b08:	20800117 	ldw	r2,4(r4)
10003b0c:	24c00017 	ldw	r19,0(r4)
10003b10:	21000204 	addi	r4,r4,8
10003b14:	d9002e15 	stw	r4,184(sp)
10003b18:	102d883a 	mov	r22,r2
10003b1c:	10047316 	blt	r2,zero,10004cec <___vfprintf_internal_r+0x1720>
10003b20:	d9002a17 	ldw	r4,168(sp)
10003b24:	df002783 	ldbu	fp,158(sp)
10003b28:	2003e416 	blt	r4,zero,10004abc <___vfprintf_internal_r+0x14f0>
10003b2c:	00ffdfc4 	movi	r3,-129
10003b30:	9d84b03a 	or	r2,r19,r22
10003b34:	90e4703a 	and	r18,r18,r3
10003b38:	10018026 	beq	r2,zero,1000413c <___vfprintf_internal_r+0xb70>
10003b3c:	b003ab26 	beq	r22,zero,100049ec <___vfprintf_internal_r+0x1420>
10003b40:	dc402915 	stw	r17,164(sp)
10003b44:	dc001e04 	addi	r16,sp,120
10003b48:	b023883a 	mov	r17,r22
10003b4c:	402d883a 	mov	r22,r8
10003b50:	9809883a 	mov	r4,r19
10003b54:	880b883a 	mov	r5,r17
10003b58:	01800284 	movi	r6,10
10003b5c:	000f883a 	mov	r7,zero
10003b60:	000e96c0 	call	1000e96c <__umoddi3>
10003b64:	10800c04 	addi	r2,r2,48
10003b68:	843fffc4 	addi	r16,r16,-1
10003b6c:	9809883a 	mov	r4,r19
10003b70:	880b883a 	mov	r5,r17
10003b74:	80800005 	stb	r2,0(r16)
10003b78:	01800284 	movi	r6,10
10003b7c:	000f883a 	mov	r7,zero
10003b80:	000e3700 	call	1000e370 <__udivdi3>
10003b84:	1027883a 	mov	r19,r2
10003b88:	10c4b03a 	or	r2,r2,r3
10003b8c:	1823883a 	mov	r17,r3
10003b90:	103fef1e 	bne	r2,zero,10003b50 <__alt_data_end+0xf8003b50>
10003b94:	d8c02817 	ldw	r3,160(sp)
10003b98:	dc402917 	ldw	r17,164(sp)
10003b9c:	b011883a 	mov	r8,r22
10003ba0:	1c07c83a 	sub	r3,r3,r16
10003ba4:	d8c02b15 	stw	r3,172(sp)
10003ba8:	00005f06 	br	10003d28 <___vfprintf_internal_r+0x75c>
10003bac:	8025883a 	mov	r18,r16
10003bb0:	dc002903 	ldbu	r16,164(sp)
10003bb4:	e011883a 	mov	r8,fp
10003bb8:	84003fcc 	andi	r16,r16,255
10003bbc:	80071e1e 	bne	r16,zero,10005838 <___vfprintf_internal_r+0x226c>
10003bc0:	9080020c 	andi	r2,r18,8
10003bc4:	1004af26 	beq	r2,zero,10004e84 <___vfprintf_internal_r+0x18b8>
10003bc8:	d9002e17 	ldw	r4,184(sp)
10003bcc:	d9402e17 	ldw	r5,184(sp)
10003bd0:	d8802e17 	ldw	r2,184(sp)
10003bd4:	21000017 	ldw	r4,0(r4)
10003bd8:	29400117 	ldw	r5,4(r5)
10003bdc:	10800204 	addi	r2,r2,8
10003be0:	d9003615 	stw	r4,216(sp)
10003be4:	d9403815 	stw	r5,224(sp)
10003be8:	d8802e15 	stw	r2,184(sp)
10003bec:	d9003617 	ldw	r4,216(sp)
10003bf0:	d9403817 	ldw	r5,224(sp)
10003bf4:	da003d15 	stw	r8,244(sp)
10003bf8:	04000044 	movi	r16,1
10003bfc:	000a9d00 	call	1000a9d0 <__fpclassifyd>
10003c00:	da003d17 	ldw	r8,244(sp)
10003c04:	1404441e 	bne	r2,r16,10004d18 <___vfprintf_internal_r+0x174c>
10003c08:	d9003617 	ldw	r4,216(sp)
10003c0c:	d9403817 	ldw	r5,224(sp)
10003c10:	000d883a 	mov	r6,zero
10003c14:	000f883a 	mov	r7,zero
10003c18:	00103100 	call	10010310 <__ledf2>
10003c1c:	da003d17 	ldw	r8,244(sp)
10003c20:	1005e316 	blt	r2,zero,100053b0 <___vfprintf_internal_r+0x1de4>
10003c24:	df002783 	ldbu	fp,158(sp)
10003c28:	008011c4 	movi	r2,71
10003c2c:	1445580e 	bge	r2,r17,10005190 <___vfprintf_internal_r+0x1bc4>
10003c30:	04040074 	movhi	r16,4097
10003c34:	84104204 	addi	r16,r16,16648
10003c38:	00c000c4 	movi	r3,3
10003c3c:	00bfdfc4 	movi	r2,-129
10003c40:	d8c02915 	stw	r3,164(sp)
10003c44:	90a4703a 	and	r18,r18,r2
10003c48:	d8c02b15 	stw	r3,172(sp)
10003c4c:	d8002a15 	stw	zero,168(sp)
10003c50:	d8003215 	stw	zero,200(sp)
10003c54:	00003a06 	br	10003d40 <___vfprintf_internal_r+0x774>
10003c58:	84000214 	ori	r16,r16,8
10003c5c:	ac400007 	ldb	r17,0(r21)
10003c60:	003ebc06 	br	10003754 <__alt_data_end+0xf8003754>
10003c64:	8025883a 	mov	r18,r16
10003c68:	dc002903 	ldbu	r16,164(sp)
10003c6c:	e011883a 	mov	r8,fp
10003c70:	84003fcc 	andi	r16,r16,255
10003c74:	8007001e 	bne	r16,zero,10005878 <___vfprintf_internal_r+0x22ac>
10003c78:	94800414 	ori	r18,r18,16
10003c7c:	9080080c 	andi	r2,r18,32
10003c80:	1002fa26 	beq	r2,zero,1000486c <___vfprintf_internal_r+0x12a0>
10003c84:	d9002e17 	ldw	r4,184(sp)
10003c88:	d9402a17 	ldw	r5,168(sp)
10003c8c:	d8002785 	stb	zero,158(sp)
10003c90:	20800204 	addi	r2,r4,8
10003c94:	24c00017 	ldw	r19,0(r4)
10003c98:	25800117 	ldw	r22,4(r4)
10003c9c:	2804b116 	blt	r5,zero,10004f64 <___vfprintf_internal_r+0x1998>
10003ca0:	013fdfc4 	movi	r4,-129
10003ca4:	9d86b03a 	or	r3,r19,r22
10003ca8:	d8802e15 	stw	r2,184(sp)
10003cac:	9124703a 	and	r18,r18,r4
10003cb0:	1802fb1e 	bne	r3,zero,100048a0 <___vfprintf_internal_r+0x12d4>
10003cb4:	d8c02a17 	ldw	r3,168(sp)
10003cb8:	0039883a 	mov	fp,zero
10003cbc:	1805e526 	beq	r3,zero,10005454 <___vfprintf_internal_r+0x1e88>
10003cc0:	0027883a 	mov	r19,zero
10003cc4:	002d883a 	mov	r22,zero
10003cc8:	dc001e04 	addi	r16,sp,120
10003ccc:	9806d0fa 	srli	r3,r19,3
10003cd0:	b008977a 	slli	r4,r22,29
10003cd4:	b02cd0fa 	srli	r22,r22,3
10003cd8:	9cc001cc 	andi	r19,r19,7
10003cdc:	98800c04 	addi	r2,r19,48
10003ce0:	843fffc4 	addi	r16,r16,-1
10003ce4:	20e6b03a 	or	r19,r4,r3
10003ce8:	80800005 	stb	r2,0(r16)
10003cec:	9d86b03a 	or	r3,r19,r22
10003cf0:	183ff61e 	bne	r3,zero,10003ccc <__alt_data_end+0xf8003ccc>
10003cf4:	90c0004c 	andi	r3,r18,1
10003cf8:	18014126 	beq	r3,zero,10004200 <___vfprintf_internal_r+0xc34>
10003cfc:	10803fcc 	andi	r2,r2,255
10003d00:	1080201c 	xori	r2,r2,128
10003d04:	10bfe004 	addi	r2,r2,-128
10003d08:	00c00c04 	movi	r3,48
10003d0c:	10c13c26 	beq	r2,r3,10004200 <___vfprintf_internal_r+0xc34>
10003d10:	80ffffc5 	stb	r3,-1(r16)
10003d14:	d8c02817 	ldw	r3,160(sp)
10003d18:	80bfffc4 	addi	r2,r16,-1
10003d1c:	1021883a 	mov	r16,r2
10003d20:	1887c83a 	sub	r3,r3,r2
10003d24:	d8c02b15 	stw	r3,172(sp)
10003d28:	d8802b17 	ldw	r2,172(sp)
10003d2c:	d9002a17 	ldw	r4,168(sp)
10003d30:	1100010e 	bge	r2,r4,10003d38 <___vfprintf_internal_r+0x76c>
10003d34:	2005883a 	mov	r2,r4
10003d38:	d8802915 	stw	r2,164(sp)
10003d3c:	d8003215 	stw	zero,200(sp)
10003d40:	e7003fcc 	andi	fp,fp,255
10003d44:	e700201c 	xori	fp,fp,128
10003d48:	e73fe004 	addi	fp,fp,-128
10003d4c:	e0000326 	beq	fp,zero,10003d5c <___vfprintf_internal_r+0x790>
10003d50:	d8c02917 	ldw	r3,164(sp)
10003d54:	18c00044 	addi	r3,r3,1
10003d58:	d8c02915 	stw	r3,164(sp)
10003d5c:	90c0008c 	andi	r3,r18,2
10003d60:	d8c02c15 	stw	r3,176(sp)
10003d64:	18000326 	beq	r3,zero,10003d74 <___vfprintf_internal_r+0x7a8>
10003d68:	d8c02917 	ldw	r3,164(sp)
10003d6c:	18c00084 	addi	r3,r3,2
10003d70:	d8c02915 	stw	r3,164(sp)
10003d74:	90c0210c 	andi	r3,r18,132
10003d78:	d8c03015 	stw	r3,192(sp)
10003d7c:	1801c51e 	bne	r3,zero,10004494 <___vfprintf_internal_r+0xec8>
10003d80:	d9003117 	ldw	r4,196(sp)
10003d84:	d8c02917 	ldw	r3,164(sp)
10003d88:	20e7c83a 	sub	r19,r4,r3
10003d8c:	04c1c10e 	bge	zero,r19,10004494 <___vfprintf_internal_r+0xec8>
10003d90:	02400404 	movi	r9,16
10003d94:	d8c02017 	ldw	r3,128(sp)
10003d98:	d8801f17 	ldw	r2,124(sp)
10003d9c:	4cc52f0e 	bge	r9,r19,1000525c <___vfprintf_internal_r+0x1c90>
10003da0:	01440074 	movhi	r5,4097
10003da4:	29505d84 	addi	r5,r5,16758
10003da8:	dc403b15 	stw	r17,236(sp)
10003dac:	d9403515 	stw	r5,212(sp)
10003db0:	9823883a 	mov	r17,r19
10003db4:	482d883a 	mov	r22,r9
10003db8:	9027883a 	mov	r19,r18
10003dbc:	070001c4 	movi	fp,7
10003dc0:	8025883a 	mov	r18,r16
10003dc4:	dc002d17 	ldw	r16,180(sp)
10003dc8:	00000306 	br	10003dd8 <___vfprintf_internal_r+0x80c>
10003dcc:	8c7ffc04 	addi	r17,r17,-16
10003dd0:	42000204 	addi	r8,r8,8
10003dd4:	b440130e 	bge	r22,r17,10003e24 <___vfprintf_internal_r+0x858>
10003dd8:	01040074 	movhi	r4,4097
10003ddc:	18c00404 	addi	r3,r3,16
10003de0:	10800044 	addi	r2,r2,1
10003de4:	21105d84 	addi	r4,r4,16758
10003de8:	41000015 	stw	r4,0(r8)
10003dec:	45800115 	stw	r22,4(r8)
10003df0:	d8c02015 	stw	r3,128(sp)
10003df4:	d8801f15 	stw	r2,124(sp)
10003df8:	e0bff40e 	bge	fp,r2,10003dcc <__alt_data_end+0xf8003dcc>
10003dfc:	d9801e04 	addi	r6,sp,120
10003e00:	b80b883a 	mov	r5,r23
10003e04:	8009883a 	mov	r4,r16
10003e08:	000c31c0 	call	1000c31c <__sprint_r>
10003e0c:	103ef31e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10003e10:	8c7ffc04 	addi	r17,r17,-16
10003e14:	d8c02017 	ldw	r3,128(sp)
10003e18:	d8801f17 	ldw	r2,124(sp)
10003e1c:	da000404 	addi	r8,sp,16
10003e20:	b47fed16 	blt	r22,r17,10003dd8 <__alt_data_end+0xf8003dd8>
10003e24:	9021883a 	mov	r16,r18
10003e28:	9825883a 	mov	r18,r19
10003e2c:	8827883a 	mov	r19,r17
10003e30:	dc403b17 	ldw	r17,236(sp)
10003e34:	d9403517 	ldw	r5,212(sp)
10003e38:	98c7883a 	add	r3,r19,r3
10003e3c:	10800044 	addi	r2,r2,1
10003e40:	41400015 	stw	r5,0(r8)
10003e44:	44c00115 	stw	r19,4(r8)
10003e48:	d8c02015 	stw	r3,128(sp)
10003e4c:	d8801f15 	stw	r2,124(sp)
10003e50:	010001c4 	movi	r4,7
10003e54:	2082c516 	blt	r4,r2,1000496c <___vfprintf_internal_r+0x13a0>
10003e58:	df002787 	ldb	fp,158(sp)
10003e5c:	42000204 	addi	r8,r8,8
10003e60:	e0000c26 	beq	fp,zero,10003e94 <___vfprintf_internal_r+0x8c8>
10003e64:	d8801f17 	ldw	r2,124(sp)
10003e68:	d9002784 	addi	r4,sp,158
10003e6c:	18c00044 	addi	r3,r3,1
10003e70:	10800044 	addi	r2,r2,1
10003e74:	41000015 	stw	r4,0(r8)
10003e78:	01000044 	movi	r4,1
10003e7c:	41000115 	stw	r4,4(r8)
10003e80:	d8c02015 	stw	r3,128(sp)
10003e84:	d8801f15 	stw	r2,124(sp)
10003e88:	010001c4 	movi	r4,7
10003e8c:	20825e16 	blt	r4,r2,10004808 <___vfprintf_internal_r+0x123c>
10003e90:	42000204 	addi	r8,r8,8
10003e94:	d8802c17 	ldw	r2,176(sp)
10003e98:	10000c26 	beq	r2,zero,10003ecc <___vfprintf_internal_r+0x900>
10003e9c:	d8801f17 	ldw	r2,124(sp)
10003ea0:	d9002704 	addi	r4,sp,156
10003ea4:	18c00084 	addi	r3,r3,2
10003ea8:	10800044 	addi	r2,r2,1
10003eac:	41000015 	stw	r4,0(r8)
10003eb0:	01000084 	movi	r4,2
10003eb4:	41000115 	stw	r4,4(r8)
10003eb8:	d8c02015 	stw	r3,128(sp)
10003ebc:	d8801f15 	stw	r2,124(sp)
10003ec0:	010001c4 	movi	r4,7
10003ec4:	20825816 	blt	r4,r2,10004828 <___vfprintf_internal_r+0x125c>
10003ec8:	42000204 	addi	r8,r8,8
10003ecc:	d9003017 	ldw	r4,192(sp)
10003ed0:	00802004 	movi	r2,128
10003ed4:	2081bb26 	beq	r4,r2,100045c4 <___vfprintf_internal_r+0xff8>
10003ed8:	d9402a17 	ldw	r5,168(sp)
10003edc:	d8802b17 	ldw	r2,172(sp)
10003ee0:	28adc83a 	sub	r22,r5,r2
10003ee4:	0580310e 	bge	zero,r22,10003fac <___vfprintf_internal_r+0x9e0>
10003ee8:	07000404 	movi	fp,16
10003eec:	d8801f17 	ldw	r2,124(sp)
10003ef0:	e584360e 	bge	fp,r22,10004fcc <___vfprintf_internal_r+0x1a00>
10003ef4:	01440074 	movhi	r5,4097
10003ef8:	29505984 	addi	r5,r5,16742
10003efc:	dc402a15 	stw	r17,168(sp)
10003f00:	d9402c15 	stw	r5,176(sp)
10003f04:	b023883a 	mov	r17,r22
10003f08:	04c001c4 	movi	r19,7
10003f0c:	a82d883a 	mov	r22,r21
10003f10:	902b883a 	mov	r21,r18
10003f14:	8025883a 	mov	r18,r16
10003f18:	dc002d17 	ldw	r16,180(sp)
10003f1c:	00000306 	br	10003f2c <___vfprintf_internal_r+0x960>
10003f20:	8c7ffc04 	addi	r17,r17,-16
10003f24:	42000204 	addi	r8,r8,8
10003f28:	e440110e 	bge	fp,r17,10003f70 <___vfprintf_internal_r+0x9a4>
10003f2c:	18c00404 	addi	r3,r3,16
10003f30:	10800044 	addi	r2,r2,1
10003f34:	45000015 	stw	r20,0(r8)
10003f38:	47000115 	stw	fp,4(r8)
10003f3c:	d8c02015 	stw	r3,128(sp)
10003f40:	d8801f15 	stw	r2,124(sp)
10003f44:	98bff60e 	bge	r19,r2,10003f20 <__alt_data_end+0xf8003f20>
10003f48:	d9801e04 	addi	r6,sp,120
10003f4c:	b80b883a 	mov	r5,r23
10003f50:	8009883a 	mov	r4,r16
10003f54:	000c31c0 	call	1000c31c <__sprint_r>
10003f58:	103ea01e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10003f5c:	8c7ffc04 	addi	r17,r17,-16
10003f60:	d8c02017 	ldw	r3,128(sp)
10003f64:	d8801f17 	ldw	r2,124(sp)
10003f68:	da000404 	addi	r8,sp,16
10003f6c:	e47fef16 	blt	fp,r17,10003f2c <__alt_data_end+0xf8003f2c>
10003f70:	9021883a 	mov	r16,r18
10003f74:	a825883a 	mov	r18,r21
10003f78:	b02b883a 	mov	r21,r22
10003f7c:	882d883a 	mov	r22,r17
10003f80:	dc402a17 	ldw	r17,168(sp)
10003f84:	d9002c17 	ldw	r4,176(sp)
10003f88:	1d87883a 	add	r3,r3,r22
10003f8c:	10800044 	addi	r2,r2,1
10003f90:	41000015 	stw	r4,0(r8)
10003f94:	45800115 	stw	r22,4(r8)
10003f98:	d8c02015 	stw	r3,128(sp)
10003f9c:	d8801f15 	stw	r2,124(sp)
10003fa0:	010001c4 	movi	r4,7
10003fa4:	20821016 	blt	r4,r2,100047e8 <___vfprintf_internal_r+0x121c>
10003fa8:	42000204 	addi	r8,r8,8
10003fac:	9080400c 	andi	r2,r18,256
10003fb0:	10013a1e 	bne	r2,zero,1000449c <___vfprintf_internal_r+0xed0>
10003fb4:	d9402b17 	ldw	r5,172(sp)
10003fb8:	d8801f17 	ldw	r2,124(sp)
10003fbc:	44000015 	stw	r16,0(r8)
10003fc0:	1947883a 	add	r3,r3,r5
10003fc4:	10800044 	addi	r2,r2,1
10003fc8:	41400115 	stw	r5,4(r8)
10003fcc:	d8c02015 	stw	r3,128(sp)
10003fd0:	d8801f15 	stw	r2,124(sp)
10003fd4:	010001c4 	movi	r4,7
10003fd8:	2081f516 	blt	r4,r2,100047b0 <___vfprintf_internal_r+0x11e4>
10003fdc:	42000204 	addi	r8,r8,8
10003fe0:	9480010c 	andi	r18,r18,4
10003fe4:	90003226 	beq	r18,zero,100040b0 <___vfprintf_internal_r+0xae4>
10003fe8:	d9403117 	ldw	r5,196(sp)
10003fec:	d8802917 	ldw	r2,164(sp)
10003ff0:	28a1c83a 	sub	r16,r5,r2
10003ff4:	04002e0e 	bge	zero,r16,100040b0 <___vfprintf_internal_r+0xae4>
10003ff8:	04400404 	movi	r17,16
10003ffc:	d8801f17 	ldw	r2,124(sp)
10004000:	8c04c40e 	bge	r17,r16,10005314 <___vfprintf_internal_r+0x1d48>
10004004:	01440074 	movhi	r5,4097
10004008:	29505d84 	addi	r5,r5,16758
1000400c:	d9403515 	stw	r5,212(sp)
10004010:	048001c4 	movi	r18,7
10004014:	dcc02d17 	ldw	r19,180(sp)
10004018:	00000306 	br	10004028 <___vfprintf_internal_r+0xa5c>
1000401c:	843ffc04 	addi	r16,r16,-16
10004020:	42000204 	addi	r8,r8,8
10004024:	8c00130e 	bge	r17,r16,10004074 <___vfprintf_internal_r+0xaa8>
10004028:	01040074 	movhi	r4,4097
1000402c:	18c00404 	addi	r3,r3,16
10004030:	10800044 	addi	r2,r2,1
10004034:	21105d84 	addi	r4,r4,16758
10004038:	41000015 	stw	r4,0(r8)
1000403c:	44400115 	stw	r17,4(r8)
10004040:	d8c02015 	stw	r3,128(sp)
10004044:	d8801f15 	stw	r2,124(sp)
10004048:	90bff40e 	bge	r18,r2,1000401c <__alt_data_end+0xf800401c>
1000404c:	d9801e04 	addi	r6,sp,120
10004050:	b80b883a 	mov	r5,r23
10004054:	9809883a 	mov	r4,r19
10004058:	000c31c0 	call	1000c31c <__sprint_r>
1000405c:	103e5f1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004060:	843ffc04 	addi	r16,r16,-16
10004064:	d8c02017 	ldw	r3,128(sp)
10004068:	d8801f17 	ldw	r2,124(sp)
1000406c:	da000404 	addi	r8,sp,16
10004070:	8c3fed16 	blt	r17,r16,10004028 <__alt_data_end+0xf8004028>
10004074:	d9403517 	ldw	r5,212(sp)
10004078:	1c07883a 	add	r3,r3,r16
1000407c:	10800044 	addi	r2,r2,1
10004080:	41400015 	stw	r5,0(r8)
10004084:	44000115 	stw	r16,4(r8)
10004088:	d8c02015 	stw	r3,128(sp)
1000408c:	d8801f15 	stw	r2,124(sp)
10004090:	010001c4 	movi	r4,7
10004094:	2080060e 	bge	r4,r2,100040b0 <___vfprintf_internal_r+0xae4>
10004098:	d9002d17 	ldw	r4,180(sp)
1000409c:	d9801e04 	addi	r6,sp,120
100040a0:	b80b883a 	mov	r5,r23
100040a4:	000c31c0 	call	1000c31c <__sprint_r>
100040a8:	103e4c1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100040ac:	d8c02017 	ldw	r3,128(sp)
100040b0:	d8803117 	ldw	r2,196(sp)
100040b4:	d9002917 	ldw	r4,164(sp)
100040b8:	1100010e 	bge	r2,r4,100040c0 <___vfprintf_internal_r+0xaf4>
100040bc:	2005883a 	mov	r2,r4
100040c0:	d9402f17 	ldw	r5,188(sp)
100040c4:	288b883a 	add	r5,r5,r2
100040c8:	d9402f15 	stw	r5,188(sp)
100040cc:	1801c01e 	bne	r3,zero,100047d0 <___vfprintf_internal_r+0x1204>
100040d0:	a8800007 	ldb	r2,0(r21)
100040d4:	d8001f15 	stw	zero,124(sp)
100040d8:	da000404 	addi	r8,sp,16
100040dc:	103d751e 	bne	r2,zero,100036b4 <__alt_data_end+0xf80036b4>
100040e0:	a823883a 	mov	r17,r21
100040e4:	003d8b06 	br	10003714 <__alt_data_end+0xf8003714>
100040e8:	8025883a 	mov	r18,r16
100040ec:	dc002903 	ldbu	r16,164(sp)
100040f0:	e011883a 	mov	r8,fp
100040f4:	84003fcc 	andi	r16,r16,255
100040f8:	8005e51e 	bne	r16,zero,10005890 <___vfprintf_internal_r+0x22c4>
100040fc:	94800414 	ori	r18,r18,16
10004100:	9080080c 	andi	r2,r18,32
10004104:	10022b26 	beq	r2,zero,100049b4 <___vfprintf_internal_r+0x13e8>
10004108:	d9002e17 	ldw	r4,184(sp)
1000410c:	d9402a17 	ldw	r5,168(sp)
10004110:	d8002785 	stb	zero,158(sp)
10004114:	20c00204 	addi	r3,r4,8
10004118:	24c00017 	ldw	r19,0(r4)
1000411c:	25800117 	ldw	r22,4(r4)
10004120:	28042e16 	blt	r5,zero,100051dc <___vfprintf_internal_r+0x1c10>
10004124:	013fdfc4 	movi	r4,-129
10004128:	9d84b03a 	or	r2,r19,r22
1000412c:	d8c02e15 	stw	r3,184(sp)
10004130:	9124703a 	and	r18,r18,r4
10004134:	0039883a 	mov	fp,zero
10004138:	103e801e 	bne	r2,zero,10003b3c <__alt_data_end+0xf8003b3c>
1000413c:	d9002a17 	ldw	r4,168(sp)
10004140:	2002e01e 	bne	r4,zero,10004cc4 <___vfprintf_internal_r+0x16f8>
10004144:	d8002a15 	stw	zero,168(sp)
10004148:	d8002b15 	stw	zero,172(sp)
1000414c:	dc001e04 	addi	r16,sp,120
10004150:	003ef506 	br	10003d28 <__alt_data_end+0xf8003d28>
10004154:	8025883a 	mov	r18,r16
10004158:	dc002903 	ldbu	r16,164(sp)
1000415c:	e011883a 	mov	r8,fp
10004160:	84003fcc 	andi	r16,r16,255
10004164:	8005ba1e 	bne	r16,zero,10005850 <___vfprintf_internal_r+0x2284>
10004168:	01040074 	movhi	r4,4097
1000416c:	21104504 	addi	r4,r4,16660
10004170:	d9003915 	stw	r4,228(sp)
10004174:	9080080c 	andi	r2,r18,32
10004178:	10006126 	beq	r2,zero,10004300 <___vfprintf_internal_r+0xd34>
1000417c:	d9402e17 	ldw	r5,184(sp)
10004180:	2cc00017 	ldw	r19,0(r5)
10004184:	2d800117 	ldw	r22,4(r5)
10004188:	29400204 	addi	r5,r5,8
1000418c:	d9402e15 	stw	r5,184(sp)
10004190:	9080004c 	andi	r2,r18,1
10004194:	1001ac26 	beq	r2,zero,10004848 <___vfprintf_internal_r+0x127c>
10004198:	9d84b03a 	or	r2,r19,r22
1000419c:	10038526 	beq	r2,zero,10004fb4 <___vfprintf_internal_r+0x19e8>
100041a0:	d8c02a17 	ldw	r3,168(sp)
100041a4:	00800c04 	movi	r2,48
100041a8:	d8802705 	stb	r2,156(sp)
100041ac:	dc402745 	stb	r17,157(sp)
100041b0:	d8002785 	stb	zero,158(sp)
100041b4:	90800094 	ori	r2,r18,2
100041b8:	18047916 	blt	r3,zero,100053a0 <___vfprintf_internal_r+0x1dd4>
100041bc:	00bfdfc4 	movi	r2,-129
100041c0:	90a4703a 	and	r18,r18,r2
100041c4:	94800094 	ori	r18,r18,2
100041c8:	0039883a 	mov	fp,zero
100041cc:	d9003917 	ldw	r4,228(sp)
100041d0:	dc001e04 	addi	r16,sp,120
100041d4:	988003cc 	andi	r2,r19,15
100041d8:	b006973a 	slli	r3,r22,28
100041dc:	2085883a 	add	r2,r4,r2
100041e0:	9826d13a 	srli	r19,r19,4
100041e4:	10800003 	ldbu	r2,0(r2)
100041e8:	b02cd13a 	srli	r22,r22,4
100041ec:	843fffc4 	addi	r16,r16,-1
100041f0:	1ce6b03a 	or	r19,r3,r19
100041f4:	80800005 	stb	r2,0(r16)
100041f8:	9d84b03a 	or	r2,r19,r22
100041fc:	103ff51e 	bne	r2,zero,100041d4 <__alt_data_end+0xf80041d4>
10004200:	d8c02817 	ldw	r3,160(sp)
10004204:	1c07c83a 	sub	r3,r3,r16
10004208:	d8c02b15 	stw	r3,172(sp)
1000420c:	003ec606 	br	10003d28 <__alt_data_end+0xf8003d28>
10004210:	8025883a 	mov	r18,r16
10004214:	dc002903 	ldbu	r16,164(sp)
10004218:	e011883a 	mov	r8,fp
1000421c:	84003fcc 	andi	r16,r16,255
10004220:	803e9626 	beq	r16,zero,10003c7c <__alt_data_end+0xf8003c7c>
10004224:	d8c02b03 	ldbu	r3,172(sp)
10004228:	d8c02785 	stb	r3,158(sp)
1000422c:	003e9306 	br	10003c7c <__alt_data_end+0xf8003c7c>
10004230:	00c00044 	movi	r3,1
10004234:	d8c02905 	stb	r3,164(sp)
10004238:	00c00ac4 	movi	r3,43
1000423c:	d8c02b05 	stb	r3,172(sp)
10004240:	ac400007 	ldb	r17,0(r21)
10004244:	003d4306 	br	10003754 <__alt_data_end+0xf8003754>
10004248:	84000814 	ori	r16,r16,32
1000424c:	ac400007 	ldb	r17,0(r21)
10004250:	003d4006 	br	10003754 <__alt_data_end+0xf8003754>
10004254:	d8802e17 	ldw	r2,184(sp)
10004258:	8025883a 	mov	r18,r16
1000425c:	d8002785 	stb	zero,158(sp)
10004260:	14000017 	ldw	r16,0(r2)
10004264:	e011883a 	mov	r8,fp
10004268:	14c00104 	addi	r19,r2,4
1000426c:	80042d26 	beq	r16,zero,10005324 <___vfprintf_internal_r+0x1d58>
10004270:	d8c02a17 	ldw	r3,168(sp)
10004274:	1803e416 	blt	r3,zero,10005208 <___vfprintf_internal_r+0x1c3c>
10004278:	180d883a 	mov	r6,r3
1000427c:	000b883a 	mov	r5,zero
10004280:	8009883a 	mov	r4,r16
10004284:	df003d15 	stw	fp,244(sp)
10004288:	0008f040 	call	10008f04 <memchr>
1000428c:	da003d17 	ldw	r8,244(sp)
10004290:	10046826 	beq	r2,zero,10005434 <___vfprintf_internal_r+0x1e68>
10004294:	1405c83a 	sub	r2,r2,r16
10004298:	d8802b15 	stw	r2,172(sp)
1000429c:	1003e016 	blt	r2,zero,10005220 <___vfprintf_internal_r+0x1c54>
100042a0:	df002783 	ldbu	fp,158(sp)
100042a4:	d8802915 	stw	r2,164(sp)
100042a8:	dcc02e15 	stw	r19,184(sp)
100042ac:	d8002a15 	stw	zero,168(sp)
100042b0:	d8003215 	stw	zero,200(sp)
100042b4:	003ea206 	br	10003d40 <__alt_data_end+0xf8003d40>
100042b8:	8025883a 	mov	r18,r16
100042bc:	dc002903 	ldbu	r16,164(sp)
100042c0:	e011883a 	mov	r8,fp
100042c4:	84003fcc 	andi	r16,r16,255
100042c8:	803f8d26 	beq	r16,zero,10004100 <__alt_data_end+0xf8004100>
100042cc:	d8c02b03 	ldbu	r3,172(sp)
100042d0:	d8c02785 	stb	r3,158(sp)
100042d4:	003f8a06 	br	10004100 <__alt_data_end+0xf8004100>
100042d8:	8025883a 	mov	r18,r16
100042dc:	dc002903 	ldbu	r16,164(sp)
100042e0:	e011883a 	mov	r8,fp
100042e4:	84003fcc 	andi	r16,r16,255
100042e8:	8005661e 	bne	r16,zero,10005884 <___vfprintf_internal_r+0x22b8>
100042ec:	01040074 	movhi	r4,4097
100042f0:	21104a04 	addi	r4,r4,16680
100042f4:	d9003915 	stw	r4,228(sp)
100042f8:	9080080c 	andi	r2,r18,32
100042fc:	103f9f1e 	bne	r2,zero,1000417c <__alt_data_end+0xf800417c>
10004300:	9080040c 	andi	r2,r18,16
10004304:	1002eb26 	beq	r2,zero,10004eb4 <___vfprintf_internal_r+0x18e8>
10004308:	d8802e17 	ldw	r2,184(sp)
1000430c:	002d883a 	mov	r22,zero
10004310:	14c00017 	ldw	r19,0(r2)
10004314:	10800104 	addi	r2,r2,4
10004318:	d8802e15 	stw	r2,184(sp)
1000431c:	003f9c06 	br	10004190 <__alt_data_end+0xf8004190>
10004320:	d8802b07 	ldb	r2,172(sp)
10004324:	1002e11e 	bne	r2,zero,10004eac <___vfprintf_internal_r+0x18e0>
10004328:	00c00044 	movi	r3,1
1000432c:	d8c02905 	stb	r3,164(sp)
10004330:	00c00804 	movi	r3,32
10004334:	d8c02b05 	stb	r3,172(sp)
10004338:	ac400007 	ldb	r17,0(r21)
1000433c:	003d0506 	br	10003754 <__alt_data_end+0xf8003754>
10004340:	84000054 	ori	r16,r16,1
10004344:	ac400007 	ldb	r17,0(r21)
10004348:	003d0206 	br	10003754 <__alt_data_end+0xf8003754>
1000434c:	8025883a 	mov	r18,r16
10004350:	dc002903 	ldbu	r16,164(sp)
10004354:	e011883a 	mov	r8,fp
10004358:	84003fcc 	andi	r16,r16,255
1000435c:	803de726 	beq	r16,zero,10003afc <__alt_data_end+0xf8003afc>
10004360:	d8c02b03 	ldbu	r3,172(sp)
10004364:	d8c02785 	stb	r3,158(sp)
10004368:	003de406 	br	10003afc <__alt_data_end+0xf8003afc>
1000436c:	84001014 	ori	r16,r16,64
10004370:	ac400007 	ldb	r17,0(r21)
10004374:	003cf706 	br	10003754 <__alt_data_end+0xf8003754>
10004378:	ac400007 	ldb	r17,0(r21)
1000437c:	00801b04 	movi	r2,108
10004380:	88838f26 	beq	r17,r2,100051c0 <___vfprintf_internal_r+0x1bf4>
10004384:	84000414 	ori	r16,r16,16
10004388:	003cf206 	br	10003754 <__alt_data_end+0xf8003754>
1000438c:	8025883a 	mov	r18,r16
10004390:	dc002903 	ldbu	r16,164(sp)
10004394:	e011883a 	mov	r8,fp
10004398:	84003fcc 	andi	r16,r16,255
1000439c:	80053f1e 	bne	r16,zero,1000589c <___vfprintf_internal_r+0x22d0>
100043a0:	9080080c 	andi	r2,r18,32
100043a4:	1002d226 	beq	r2,zero,10004ef0 <___vfprintf_internal_r+0x1924>
100043a8:	d9002e17 	ldw	r4,184(sp)
100043ac:	d9402f17 	ldw	r5,188(sp)
100043b0:	20800017 	ldw	r2,0(r4)
100043b4:	2807d7fa 	srai	r3,r5,31
100043b8:	21000104 	addi	r4,r4,4
100043bc:	d9002e15 	stw	r4,184(sp)
100043c0:	11400015 	stw	r5,0(r2)
100043c4:	10c00115 	stw	r3,4(r2)
100043c8:	003cb806 	br	100036ac <__alt_data_end+0xf80036ac>
100043cc:	d8c02e17 	ldw	r3,184(sp)
100043d0:	d9002e17 	ldw	r4,184(sp)
100043d4:	8025883a 	mov	r18,r16
100043d8:	18800017 	ldw	r2,0(r3)
100043dc:	21000104 	addi	r4,r4,4
100043e0:	00c00044 	movi	r3,1
100043e4:	e011883a 	mov	r8,fp
100043e8:	d8c02915 	stw	r3,164(sp)
100043ec:	d8002785 	stb	zero,158(sp)
100043f0:	d8801405 	stb	r2,80(sp)
100043f4:	d9002e15 	stw	r4,184(sp)
100043f8:	d8c02b15 	stw	r3,172(sp)
100043fc:	d8002a15 	stw	zero,168(sp)
10004400:	d8003215 	stw	zero,200(sp)
10004404:	dc001404 	addi	r16,sp,80
10004408:	0039883a 	mov	fp,zero
1000440c:	003e5306 	br	10003d5c <__alt_data_end+0xf8003d5c>
10004410:	01040074 	movhi	r4,4097
10004414:	21104a04 	addi	r4,r4,16680
10004418:	0039883a 	mov	fp,zero
1000441c:	d9003915 	stw	r4,228(sp)
10004420:	04401e04 	movi	r17,120
10004424:	003f6906 	br	100041cc <__alt_data_end+0xf80041cc>
10004428:	8025883a 	mov	r18,r16
1000442c:	dc002903 	ldbu	r16,164(sp)
10004430:	e011883a 	mov	r8,fp
10004434:	84003fcc 	andi	r16,r16,255
10004438:	8005081e 	bne	r16,zero,1000585c <___vfprintf_internal_r+0x2290>
1000443c:	883d6126 	beq	r17,zero,100039c4 <__alt_data_end+0xf80039c4>
10004440:	00c00044 	movi	r3,1
10004444:	d8c02915 	stw	r3,164(sp)
10004448:	dc401405 	stb	r17,80(sp)
1000444c:	d8002785 	stb	zero,158(sp)
10004450:	003fe906 	br	100043f8 <__alt_data_end+0xf80043f8>
10004454:	01440074 	movhi	r5,4097
10004458:	29504a04 	addi	r5,r5,16680
1000445c:	d9403915 	stw	r5,228(sp)
10004460:	d8c02e15 	stw	r3,184(sp)
10004464:	1025883a 	mov	r18,r2
10004468:	04401e04 	movi	r17,120
1000446c:	9d84b03a 	or	r2,r19,r22
10004470:	1000fc1e 	bne	r2,zero,10004864 <___vfprintf_internal_r+0x1298>
10004474:	0039883a 	mov	fp,zero
10004478:	00800084 	movi	r2,2
1000447c:	10803fcc 	andi	r2,r2,255
10004480:	00c00044 	movi	r3,1
10004484:	10c20f26 	beq	r2,r3,10004cc4 <___vfprintf_internal_r+0x16f8>
10004488:	00c00084 	movi	r3,2
1000448c:	10fd3326 	beq	r2,r3,1000395c <__alt_data_end+0xf800395c>
10004490:	003e0b06 	br	10003cc0 <__alt_data_end+0xf8003cc0>
10004494:	d8c02017 	ldw	r3,128(sp)
10004498:	003e7106 	br	10003e60 <__alt_data_end+0xf8003e60>
1000449c:	00801944 	movi	r2,101
100044a0:	14407e0e 	bge	r2,r17,1000469c <___vfprintf_internal_r+0x10d0>
100044a4:	d9003617 	ldw	r4,216(sp)
100044a8:	d9403817 	ldw	r5,224(sp)
100044ac:	000d883a 	mov	r6,zero
100044b0:	000f883a 	mov	r7,zero
100044b4:	d8c03c15 	stw	r3,240(sp)
100044b8:	da003d15 	stw	r8,244(sp)
100044bc:	00101ac0 	call	100101ac <__eqdf2>
100044c0:	d8c03c17 	ldw	r3,240(sp)
100044c4:	da003d17 	ldw	r8,244(sp)
100044c8:	1000f71e 	bne	r2,zero,100048a8 <___vfprintf_internal_r+0x12dc>
100044cc:	d8801f17 	ldw	r2,124(sp)
100044d0:	01040074 	movhi	r4,4097
100044d4:	21105104 	addi	r4,r4,16708
100044d8:	18c00044 	addi	r3,r3,1
100044dc:	10800044 	addi	r2,r2,1
100044e0:	41000015 	stw	r4,0(r8)
100044e4:	01000044 	movi	r4,1
100044e8:	41000115 	stw	r4,4(r8)
100044ec:	d8c02015 	stw	r3,128(sp)
100044f0:	d8801f15 	stw	r2,124(sp)
100044f4:	010001c4 	movi	r4,7
100044f8:	2082b816 	blt	r4,r2,10004fdc <___vfprintf_internal_r+0x1a10>
100044fc:	42000204 	addi	r8,r8,8
10004500:	d8802617 	ldw	r2,152(sp)
10004504:	d9403317 	ldw	r5,204(sp)
10004508:	11400216 	blt	r2,r5,10004514 <___vfprintf_internal_r+0xf48>
1000450c:	9080004c 	andi	r2,r18,1
10004510:	103eb326 	beq	r2,zero,10003fe0 <__alt_data_end+0xf8003fe0>
10004514:	d8803717 	ldw	r2,220(sp)
10004518:	d9003417 	ldw	r4,208(sp)
1000451c:	d9403717 	ldw	r5,220(sp)
10004520:	1887883a 	add	r3,r3,r2
10004524:	d8801f17 	ldw	r2,124(sp)
10004528:	41000015 	stw	r4,0(r8)
1000452c:	41400115 	stw	r5,4(r8)
10004530:	10800044 	addi	r2,r2,1
10004534:	d8c02015 	stw	r3,128(sp)
10004538:	d8801f15 	stw	r2,124(sp)
1000453c:	010001c4 	movi	r4,7
10004540:	20832916 	blt	r4,r2,100051e8 <___vfprintf_internal_r+0x1c1c>
10004544:	42000204 	addi	r8,r8,8
10004548:	d8803317 	ldw	r2,204(sp)
1000454c:	143fffc4 	addi	r16,r2,-1
10004550:	043ea30e 	bge	zero,r16,10003fe0 <__alt_data_end+0xf8003fe0>
10004554:	04400404 	movi	r17,16
10004558:	d8801f17 	ldw	r2,124(sp)
1000455c:	8c00880e 	bge	r17,r16,10004780 <___vfprintf_internal_r+0x11b4>
10004560:	01440074 	movhi	r5,4097
10004564:	29505984 	addi	r5,r5,16742
10004568:	d9402c15 	stw	r5,176(sp)
1000456c:	058001c4 	movi	r22,7
10004570:	dcc02d17 	ldw	r19,180(sp)
10004574:	00000306 	br	10004584 <___vfprintf_internal_r+0xfb8>
10004578:	42000204 	addi	r8,r8,8
1000457c:	843ffc04 	addi	r16,r16,-16
10004580:	8c00820e 	bge	r17,r16,1000478c <___vfprintf_internal_r+0x11c0>
10004584:	18c00404 	addi	r3,r3,16
10004588:	10800044 	addi	r2,r2,1
1000458c:	45000015 	stw	r20,0(r8)
10004590:	44400115 	stw	r17,4(r8)
10004594:	d8c02015 	stw	r3,128(sp)
10004598:	d8801f15 	stw	r2,124(sp)
1000459c:	b0bff60e 	bge	r22,r2,10004578 <__alt_data_end+0xf8004578>
100045a0:	d9801e04 	addi	r6,sp,120
100045a4:	b80b883a 	mov	r5,r23
100045a8:	9809883a 	mov	r4,r19
100045ac:	000c31c0 	call	1000c31c <__sprint_r>
100045b0:	103d0a1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100045b4:	d8c02017 	ldw	r3,128(sp)
100045b8:	d8801f17 	ldw	r2,124(sp)
100045bc:	da000404 	addi	r8,sp,16
100045c0:	003fee06 	br	1000457c <__alt_data_end+0xf800457c>
100045c4:	d9403117 	ldw	r5,196(sp)
100045c8:	d8802917 	ldw	r2,164(sp)
100045cc:	28adc83a 	sub	r22,r5,r2
100045d0:	05be410e 	bge	zero,r22,10003ed8 <__alt_data_end+0xf8003ed8>
100045d4:	07000404 	movi	fp,16
100045d8:	d8801f17 	ldw	r2,124(sp)
100045dc:	e5838f0e 	bge	fp,r22,1000541c <___vfprintf_internal_r+0x1e50>
100045e0:	01440074 	movhi	r5,4097
100045e4:	29505984 	addi	r5,r5,16742
100045e8:	dc403015 	stw	r17,192(sp)
100045ec:	d9402c15 	stw	r5,176(sp)
100045f0:	b023883a 	mov	r17,r22
100045f4:	04c001c4 	movi	r19,7
100045f8:	a82d883a 	mov	r22,r21
100045fc:	902b883a 	mov	r21,r18
10004600:	8025883a 	mov	r18,r16
10004604:	dc002d17 	ldw	r16,180(sp)
10004608:	00000306 	br	10004618 <___vfprintf_internal_r+0x104c>
1000460c:	8c7ffc04 	addi	r17,r17,-16
10004610:	42000204 	addi	r8,r8,8
10004614:	e440110e 	bge	fp,r17,1000465c <___vfprintf_internal_r+0x1090>
10004618:	18c00404 	addi	r3,r3,16
1000461c:	10800044 	addi	r2,r2,1
10004620:	45000015 	stw	r20,0(r8)
10004624:	47000115 	stw	fp,4(r8)
10004628:	d8c02015 	stw	r3,128(sp)
1000462c:	d8801f15 	stw	r2,124(sp)
10004630:	98bff60e 	bge	r19,r2,1000460c <__alt_data_end+0xf800460c>
10004634:	d9801e04 	addi	r6,sp,120
10004638:	b80b883a 	mov	r5,r23
1000463c:	8009883a 	mov	r4,r16
10004640:	000c31c0 	call	1000c31c <__sprint_r>
10004644:	103ce51e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004648:	8c7ffc04 	addi	r17,r17,-16
1000464c:	d8c02017 	ldw	r3,128(sp)
10004650:	d8801f17 	ldw	r2,124(sp)
10004654:	da000404 	addi	r8,sp,16
10004658:	e47fef16 	blt	fp,r17,10004618 <__alt_data_end+0xf8004618>
1000465c:	9021883a 	mov	r16,r18
10004660:	a825883a 	mov	r18,r21
10004664:	b02b883a 	mov	r21,r22
10004668:	882d883a 	mov	r22,r17
1000466c:	dc403017 	ldw	r17,192(sp)
10004670:	d9002c17 	ldw	r4,176(sp)
10004674:	1d87883a 	add	r3,r3,r22
10004678:	10800044 	addi	r2,r2,1
1000467c:	41000015 	stw	r4,0(r8)
10004680:	45800115 	stw	r22,4(r8)
10004684:	d8c02015 	stw	r3,128(sp)
10004688:	d8801f15 	stw	r2,124(sp)
1000468c:	010001c4 	movi	r4,7
10004690:	20818e16 	blt	r4,r2,10004ccc <___vfprintf_internal_r+0x1700>
10004694:	42000204 	addi	r8,r8,8
10004698:	003e0f06 	br	10003ed8 <__alt_data_end+0xf8003ed8>
1000469c:	d9403317 	ldw	r5,204(sp)
100046a0:	00800044 	movi	r2,1
100046a4:	18c00044 	addi	r3,r3,1
100046a8:	1141530e 	bge	r2,r5,10004bf8 <___vfprintf_internal_r+0x162c>
100046ac:	dc401f17 	ldw	r17,124(sp)
100046b0:	00800044 	movi	r2,1
100046b4:	40800115 	stw	r2,4(r8)
100046b8:	8c400044 	addi	r17,r17,1
100046bc:	44000015 	stw	r16,0(r8)
100046c0:	d8c02015 	stw	r3,128(sp)
100046c4:	dc401f15 	stw	r17,124(sp)
100046c8:	008001c4 	movi	r2,7
100046cc:	14416b16 	blt	r2,r17,10004c7c <___vfprintf_internal_r+0x16b0>
100046d0:	42000204 	addi	r8,r8,8
100046d4:	d8803717 	ldw	r2,220(sp)
100046d8:	d9003417 	ldw	r4,208(sp)
100046dc:	8c400044 	addi	r17,r17,1
100046e0:	10c7883a 	add	r3,r2,r3
100046e4:	40800115 	stw	r2,4(r8)
100046e8:	41000015 	stw	r4,0(r8)
100046ec:	d8c02015 	stw	r3,128(sp)
100046f0:	dc401f15 	stw	r17,124(sp)
100046f4:	008001c4 	movi	r2,7
100046f8:	14416916 	blt	r2,r17,10004ca0 <___vfprintf_internal_r+0x16d4>
100046fc:	45800204 	addi	r22,r8,8
10004700:	d9003617 	ldw	r4,216(sp)
10004704:	d9403817 	ldw	r5,224(sp)
10004708:	000d883a 	mov	r6,zero
1000470c:	000f883a 	mov	r7,zero
10004710:	d8c03c15 	stw	r3,240(sp)
10004714:	00101ac0 	call	100101ac <__eqdf2>
10004718:	d8c03c17 	ldw	r3,240(sp)
1000471c:	1000bc26 	beq	r2,zero,10004a10 <___vfprintf_internal_r+0x1444>
10004720:	d9403317 	ldw	r5,204(sp)
10004724:	84000044 	addi	r16,r16,1
10004728:	8c400044 	addi	r17,r17,1
1000472c:	28bfffc4 	addi	r2,r5,-1
10004730:	1887883a 	add	r3,r3,r2
10004734:	b0800115 	stw	r2,4(r22)
10004738:	b4000015 	stw	r16,0(r22)
1000473c:	d8c02015 	stw	r3,128(sp)
10004740:	dc401f15 	stw	r17,124(sp)
10004744:	008001c4 	movi	r2,7
10004748:	14414316 	blt	r2,r17,10004c58 <___vfprintf_internal_r+0x168c>
1000474c:	b5800204 	addi	r22,r22,8
10004750:	d9003a17 	ldw	r4,232(sp)
10004754:	df0022c4 	addi	fp,sp,139
10004758:	8c400044 	addi	r17,r17,1
1000475c:	20c7883a 	add	r3,r4,r3
10004760:	b7000015 	stw	fp,0(r22)
10004764:	b1000115 	stw	r4,4(r22)
10004768:	d8c02015 	stw	r3,128(sp)
1000476c:	dc401f15 	stw	r17,124(sp)
10004770:	008001c4 	movi	r2,7
10004774:	14400e16 	blt	r2,r17,100047b0 <___vfprintf_internal_r+0x11e4>
10004778:	b2000204 	addi	r8,r22,8
1000477c:	003e1806 	br	10003fe0 <__alt_data_end+0xf8003fe0>
10004780:	01040074 	movhi	r4,4097
10004784:	21105984 	addi	r4,r4,16742
10004788:	d9002c15 	stw	r4,176(sp)
1000478c:	d9002c17 	ldw	r4,176(sp)
10004790:	1c07883a 	add	r3,r3,r16
10004794:	44000115 	stw	r16,4(r8)
10004798:	41000015 	stw	r4,0(r8)
1000479c:	10800044 	addi	r2,r2,1
100047a0:	d8c02015 	stw	r3,128(sp)
100047a4:	d8801f15 	stw	r2,124(sp)
100047a8:	010001c4 	movi	r4,7
100047ac:	20be0b0e 	bge	r4,r2,10003fdc <__alt_data_end+0xf8003fdc>
100047b0:	d9002d17 	ldw	r4,180(sp)
100047b4:	d9801e04 	addi	r6,sp,120
100047b8:	b80b883a 	mov	r5,r23
100047bc:	000c31c0 	call	1000c31c <__sprint_r>
100047c0:	103c861e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100047c4:	d8c02017 	ldw	r3,128(sp)
100047c8:	da000404 	addi	r8,sp,16
100047cc:	003e0406 	br	10003fe0 <__alt_data_end+0xf8003fe0>
100047d0:	d9002d17 	ldw	r4,180(sp)
100047d4:	d9801e04 	addi	r6,sp,120
100047d8:	b80b883a 	mov	r5,r23
100047dc:	000c31c0 	call	1000c31c <__sprint_r>
100047e0:	103e3b26 	beq	r2,zero,100040d0 <__alt_data_end+0xf80040d0>
100047e4:	003c7d06 	br	100039dc <__alt_data_end+0xf80039dc>
100047e8:	d9002d17 	ldw	r4,180(sp)
100047ec:	d9801e04 	addi	r6,sp,120
100047f0:	b80b883a 	mov	r5,r23
100047f4:	000c31c0 	call	1000c31c <__sprint_r>
100047f8:	103c781e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100047fc:	d8c02017 	ldw	r3,128(sp)
10004800:	da000404 	addi	r8,sp,16
10004804:	003de906 	br	10003fac <__alt_data_end+0xf8003fac>
10004808:	d9002d17 	ldw	r4,180(sp)
1000480c:	d9801e04 	addi	r6,sp,120
10004810:	b80b883a 	mov	r5,r23
10004814:	000c31c0 	call	1000c31c <__sprint_r>
10004818:	103c701e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
1000481c:	d8c02017 	ldw	r3,128(sp)
10004820:	da000404 	addi	r8,sp,16
10004824:	003d9b06 	br	10003e94 <__alt_data_end+0xf8003e94>
10004828:	d9002d17 	ldw	r4,180(sp)
1000482c:	d9801e04 	addi	r6,sp,120
10004830:	b80b883a 	mov	r5,r23
10004834:	000c31c0 	call	1000c31c <__sprint_r>
10004838:	103c681e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
1000483c:	d8c02017 	ldw	r3,128(sp)
10004840:	da000404 	addi	r8,sp,16
10004844:	003da106 	br	10003ecc <__alt_data_end+0xf8003ecc>
10004848:	d9402a17 	ldw	r5,168(sp)
1000484c:	d8002785 	stb	zero,158(sp)
10004850:	283f0616 	blt	r5,zero,1000446c <__alt_data_end+0xf800446c>
10004854:	00ffdfc4 	movi	r3,-129
10004858:	9d84b03a 	or	r2,r19,r22
1000485c:	90e4703a 	and	r18,r18,r3
10004860:	103c3b26 	beq	r2,zero,10003950 <__alt_data_end+0xf8003950>
10004864:	0039883a 	mov	fp,zero
10004868:	003e5806 	br	100041cc <__alt_data_end+0xf80041cc>
1000486c:	9080040c 	andi	r2,r18,16
10004870:	1001b326 	beq	r2,zero,10004f40 <___vfprintf_internal_r+0x1974>
10004874:	d8c02e17 	ldw	r3,184(sp)
10004878:	d9002a17 	ldw	r4,168(sp)
1000487c:	d8002785 	stb	zero,158(sp)
10004880:	18800104 	addi	r2,r3,4
10004884:	1cc00017 	ldw	r19,0(r3)
10004888:	002d883a 	mov	r22,zero
1000488c:	2001b516 	blt	r4,zero,10004f64 <___vfprintf_internal_r+0x1998>
10004890:	00ffdfc4 	movi	r3,-129
10004894:	d8802e15 	stw	r2,184(sp)
10004898:	90e4703a 	and	r18,r18,r3
1000489c:	983d0526 	beq	r19,zero,10003cb4 <__alt_data_end+0xf8003cb4>
100048a0:	0039883a 	mov	fp,zero
100048a4:	003d0806 	br	10003cc8 <__alt_data_end+0xf8003cc8>
100048a8:	dc402617 	ldw	r17,152(sp)
100048ac:	0441d30e 	bge	zero,r17,10004ffc <___vfprintf_internal_r+0x1a30>
100048b0:	dc403217 	ldw	r17,200(sp)
100048b4:	d8803317 	ldw	r2,204(sp)
100048b8:	1440010e 	bge	r2,r17,100048c0 <___vfprintf_internal_r+0x12f4>
100048bc:	1023883a 	mov	r17,r2
100048c0:	04400a0e 	bge	zero,r17,100048ec <___vfprintf_internal_r+0x1320>
100048c4:	d8801f17 	ldw	r2,124(sp)
100048c8:	1c47883a 	add	r3,r3,r17
100048cc:	44000015 	stw	r16,0(r8)
100048d0:	10800044 	addi	r2,r2,1
100048d4:	44400115 	stw	r17,4(r8)
100048d8:	d8c02015 	stw	r3,128(sp)
100048dc:	d8801f15 	stw	r2,124(sp)
100048e0:	010001c4 	movi	r4,7
100048e4:	20826516 	blt	r4,r2,1000527c <___vfprintf_internal_r+0x1cb0>
100048e8:	42000204 	addi	r8,r8,8
100048ec:	88026116 	blt	r17,zero,10005274 <___vfprintf_internal_r+0x1ca8>
100048f0:	d9003217 	ldw	r4,200(sp)
100048f4:	2463c83a 	sub	r17,r4,r17
100048f8:	04407b0e 	bge	zero,r17,10004ae8 <___vfprintf_internal_r+0x151c>
100048fc:	05800404 	movi	r22,16
10004900:	d8801f17 	ldw	r2,124(sp)
10004904:	b4419d0e 	bge	r22,r17,10004f7c <___vfprintf_internal_r+0x19b0>
10004908:	01040074 	movhi	r4,4097
1000490c:	21105984 	addi	r4,r4,16742
10004910:	d9002c15 	stw	r4,176(sp)
10004914:	070001c4 	movi	fp,7
10004918:	dcc02d17 	ldw	r19,180(sp)
1000491c:	00000306 	br	1000492c <___vfprintf_internal_r+0x1360>
10004920:	42000204 	addi	r8,r8,8
10004924:	8c7ffc04 	addi	r17,r17,-16
10004928:	b441970e 	bge	r22,r17,10004f88 <___vfprintf_internal_r+0x19bc>
1000492c:	18c00404 	addi	r3,r3,16
10004930:	10800044 	addi	r2,r2,1
10004934:	45000015 	stw	r20,0(r8)
10004938:	45800115 	stw	r22,4(r8)
1000493c:	d8c02015 	stw	r3,128(sp)
10004940:	d8801f15 	stw	r2,124(sp)
10004944:	e0bff60e 	bge	fp,r2,10004920 <__alt_data_end+0xf8004920>
10004948:	d9801e04 	addi	r6,sp,120
1000494c:	b80b883a 	mov	r5,r23
10004950:	9809883a 	mov	r4,r19
10004954:	000c31c0 	call	1000c31c <__sprint_r>
10004958:	103c201e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
1000495c:	d8c02017 	ldw	r3,128(sp)
10004960:	d8801f17 	ldw	r2,124(sp)
10004964:	da000404 	addi	r8,sp,16
10004968:	003fee06 	br	10004924 <__alt_data_end+0xf8004924>
1000496c:	d9002d17 	ldw	r4,180(sp)
10004970:	d9801e04 	addi	r6,sp,120
10004974:	b80b883a 	mov	r5,r23
10004978:	000c31c0 	call	1000c31c <__sprint_r>
1000497c:	103c171e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004980:	d8c02017 	ldw	r3,128(sp)
10004984:	df002787 	ldb	fp,158(sp)
10004988:	da000404 	addi	r8,sp,16
1000498c:	003d3406 	br	10003e60 <__alt_data_end+0xf8003e60>
10004990:	9080040c 	andi	r2,r18,16
10004994:	10016126 	beq	r2,zero,10004f1c <___vfprintf_internal_r+0x1950>
10004998:	d9402e17 	ldw	r5,184(sp)
1000499c:	2cc00017 	ldw	r19,0(r5)
100049a0:	29400104 	addi	r5,r5,4
100049a4:	d9402e15 	stw	r5,184(sp)
100049a8:	982dd7fa 	srai	r22,r19,31
100049ac:	b005883a 	mov	r2,r22
100049b0:	003c5a06 	br	10003b1c <__alt_data_end+0xf8003b1c>
100049b4:	9080040c 	andi	r2,r18,16
100049b8:	10003526 	beq	r2,zero,10004a90 <___vfprintf_internal_r+0x14c4>
100049bc:	d8c02e17 	ldw	r3,184(sp)
100049c0:	d9002a17 	ldw	r4,168(sp)
100049c4:	d8002785 	stb	zero,158(sp)
100049c8:	18800104 	addi	r2,r3,4
100049cc:	1cc00017 	ldw	r19,0(r3)
100049d0:	002d883a 	mov	r22,zero
100049d4:	20003716 	blt	r4,zero,10004ab4 <___vfprintf_internal_r+0x14e8>
100049d8:	00ffdfc4 	movi	r3,-129
100049dc:	d8802e15 	stw	r2,184(sp)
100049e0:	90e4703a 	and	r18,r18,r3
100049e4:	0039883a 	mov	fp,zero
100049e8:	983dd426 	beq	r19,zero,1000413c <__alt_data_end+0xf800413c>
100049ec:	00800244 	movi	r2,9
100049f0:	14fc5336 	bltu	r2,r19,10003b40 <__alt_data_end+0xf8003b40>
100049f4:	d8c02817 	ldw	r3,160(sp)
100049f8:	dc001dc4 	addi	r16,sp,119
100049fc:	9cc00c04 	addi	r19,r19,48
10004a00:	1c07c83a 	sub	r3,r3,r16
10004a04:	dcc01dc5 	stb	r19,119(sp)
10004a08:	d8c02b15 	stw	r3,172(sp)
10004a0c:	003cc606 	br	10003d28 <__alt_data_end+0xf8003d28>
10004a10:	d8803317 	ldw	r2,204(sp)
10004a14:	143fffc4 	addi	r16,r2,-1
10004a18:	043f4d0e 	bge	zero,r16,10004750 <__alt_data_end+0xf8004750>
10004a1c:	07000404 	movi	fp,16
10004a20:	e400810e 	bge	fp,r16,10004c28 <___vfprintf_internal_r+0x165c>
10004a24:	01440074 	movhi	r5,4097
10004a28:	29505984 	addi	r5,r5,16742
10004a2c:	d9402c15 	stw	r5,176(sp)
10004a30:	01c001c4 	movi	r7,7
10004a34:	dcc02d17 	ldw	r19,180(sp)
10004a38:	00000306 	br	10004a48 <___vfprintf_internal_r+0x147c>
10004a3c:	b5800204 	addi	r22,r22,8
10004a40:	843ffc04 	addi	r16,r16,-16
10004a44:	e4007b0e 	bge	fp,r16,10004c34 <___vfprintf_internal_r+0x1668>
10004a48:	18c00404 	addi	r3,r3,16
10004a4c:	8c400044 	addi	r17,r17,1
10004a50:	b5000015 	stw	r20,0(r22)
10004a54:	b7000115 	stw	fp,4(r22)
10004a58:	d8c02015 	stw	r3,128(sp)
10004a5c:	dc401f15 	stw	r17,124(sp)
10004a60:	3c7ff60e 	bge	r7,r17,10004a3c <__alt_data_end+0xf8004a3c>
10004a64:	d9801e04 	addi	r6,sp,120
10004a68:	b80b883a 	mov	r5,r23
10004a6c:	9809883a 	mov	r4,r19
10004a70:	d9c03c15 	stw	r7,240(sp)
10004a74:	000c31c0 	call	1000c31c <__sprint_r>
10004a78:	d9c03c17 	ldw	r7,240(sp)
10004a7c:	103bd71e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004a80:	d8c02017 	ldw	r3,128(sp)
10004a84:	dc401f17 	ldw	r17,124(sp)
10004a88:	dd800404 	addi	r22,sp,16
10004a8c:	003fec06 	br	10004a40 <__alt_data_end+0xf8004a40>
10004a90:	9080100c 	andi	r2,r18,64
10004a94:	d8002785 	stb	zero,158(sp)
10004a98:	10010e26 	beq	r2,zero,10004ed4 <___vfprintf_internal_r+0x1908>
10004a9c:	d9402e17 	ldw	r5,184(sp)
10004aa0:	d8c02a17 	ldw	r3,168(sp)
10004aa4:	002d883a 	mov	r22,zero
10004aa8:	28800104 	addi	r2,r5,4
10004aac:	2cc0000b 	ldhu	r19,0(r5)
10004ab0:	183fc90e 	bge	r3,zero,100049d8 <__alt_data_end+0xf80049d8>
10004ab4:	d8802e15 	stw	r2,184(sp)
10004ab8:	0039883a 	mov	fp,zero
10004abc:	9d84b03a 	or	r2,r19,r22
10004ac0:	103c1e1e 	bne	r2,zero,10003b3c <__alt_data_end+0xf8003b3c>
10004ac4:	00800044 	movi	r2,1
10004ac8:	003e6c06 	br	1000447c <__alt_data_end+0xf800447c>
10004acc:	d9002d17 	ldw	r4,180(sp)
10004ad0:	d9801e04 	addi	r6,sp,120
10004ad4:	b80b883a 	mov	r5,r23
10004ad8:	000c31c0 	call	1000c31c <__sprint_r>
10004adc:	103bbf1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004ae0:	d8c02017 	ldw	r3,128(sp)
10004ae4:	da000404 	addi	r8,sp,16
10004ae8:	d9003217 	ldw	r4,200(sp)
10004aec:	d8802617 	ldw	r2,152(sp)
10004af0:	d9403317 	ldw	r5,204(sp)
10004af4:	8123883a 	add	r17,r16,r4
10004af8:	11400216 	blt	r2,r5,10004b04 <___vfprintf_internal_r+0x1538>
10004afc:	9100004c 	andi	r4,r18,1
10004b00:	20000d26 	beq	r4,zero,10004b38 <___vfprintf_internal_r+0x156c>
10004b04:	d9003717 	ldw	r4,220(sp)
10004b08:	d9403417 	ldw	r5,208(sp)
10004b0c:	1907883a 	add	r3,r3,r4
10004b10:	d9001f17 	ldw	r4,124(sp)
10004b14:	41400015 	stw	r5,0(r8)
10004b18:	d9403717 	ldw	r5,220(sp)
10004b1c:	21000044 	addi	r4,r4,1
10004b20:	d8c02015 	stw	r3,128(sp)
10004b24:	41400115 	stw	r5,4(r8)
10004b28:	d9001f15 	stw	r4,124(sp)
10004b2c:	014001c4 	movi	r5,7
10004b30:	2901e816 	blt	r5,r4,100052d4 <___vfprintf_internal_r+0x1d08>
10004b34:	42000204 	addi	r8,r8,8
10004b38:	d9003317 	ldw	r4,204(sp)
10004b3c:	8121883a 	add	r16,r16,r4
10004b40:	2085c83a 	sub	r2,r4,r2
10004b44:	8461c83a 	sub	r16,r16,r17
10004b48:	1400010e 	bge	r2,r16,10004b50 <___vfprintf_internal_r+0x1584>
10004b4c:	1021883a 	mov	r16,r2
10004b50:	04000a0e 	bge	zero,r16,10004b7c <___vfprintf_internal_r+0x15b0>
10004b54:	d9001f17 	ldw	r4,124(sp)
10004b58:	1c07883a 	add	r3,r3,r16
10004b5c:	44400015 	stw	r17,0(r8)
10004b60:	21000044 	addi	r4,r4,1
10004b64:	44000115 	stw	r16,4(r8)
10004b68:	d8c02015 	stw	r3,128(sp)
10004b6c:	d9001f15 	stw	r4,124(sp)
10004b70:	014001c4 	movi	r5,7
10004b74:	2901fb16 	blt	r5,r4,10005364 <___vfprintf_internal_r+0x1d98>
10004b78:	42000204 	addi	r8,r8,8
10004b7c:	8001f716 	blt	r16,zero,1000535c <___vfprintf_internal_r+0x1d90>
10004b80:	1421c83a 	sub	r16,r2,r16
10004b84:	043d160e 	bge	zero,r16,10003fe0 <__alt_data_end+0xf8003fe0>
10004b88:	04400404 	movi	r17,16
10004b8c:	d8801f17 	ldw	r2,124(sp)
10004b90:	8c3efb0e 	bge	r17,r16,10004780 <__alt_data_end+0xf8004780>
10004b94:	01440074 	movhi	r5,4097
10004b98:	29505984 	addi	r5,r5,16742
10004b9c:	d9402c15 	stw	r5,176(sp)
10004ba0:	058001c4 	movi	r22,7
10004ba4:	dcc02d17 	ldw	r19,180(sp)
10004ba8:	00000306 	br	10004bb8 <___vfprintf_internal_r+0x15ec>
10004bac:	42000204 	addi	r8,r8,8
10004bb0:	843ffc04 	addi	r16,r16,-16
10004bb4:	8c3ef50e 	bge	r17,r16,1000478c <__alt_data_end+0xf800478c>
10004bb8:	18c00404 	addi	r3,r3,16
10004bbc:	10800044 	addi	r2,r2,1
10004bc0:	45000015 	stw	r20,0(r8)
10004bc4:	44400115 	stw	r17,4(r8)
10004bc8:	d8c02015 	stw	r3,128(sp)
10004bcc:	d8801f15 	stw	r2,124(sp)
10004bd0:	b0bff60e 	bge	r22,r2,10004bac <__alt_data_end+0xf8004bac>
10004bd4:	d9801e04 	addi	r6,sp,120
10004bd8:	b80b883a 	mov	r5,r23
10004bdc:	9809883a 	mov	r4,r19
10004be0:	000c31c0 	call	1000c31c <__sprint_r>
10004be4:	103b7d1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004be8:	d8c02017 	ldw	r3,128(sp)
10004bec:	d8801f17 	ldw	r2,124(sp)
10004bf0:	da000404 	addi	r8,sp,16
10004bf4:	003fee06 	br	10004bb0 <__alt_data_end+0xf8004bb0>
10004bf8:	9088703a 	and	r4,r18,r2
10004bfc:	203eab1e 	bne	r4,zero,100046ac <__alt_data_end+0xf80046ac>
10004c00:	dc401f17 	ldw	r17,124(sp)
10004c04:	40800115 	stw	r2,4(r8)
10004c08:	44000015 	stw	r16,0(r8)
10004c0c:	8c400044 	addi	r17,r17,1
10004c10:	d8c02015 	stw	r3,128(sp)
10004c14:	dc401f15 	stw	r17,124(sp)
10004c18:	008001c4 	movi	r2,7
10004c1c:	14400e16 	blt	r2,r17,10004c58 <___vfprintf_internal_r+0x168c>
10004c20:	45800204 	addi	r22,r8,8
10004c24:	003eca06 	br	10004750 <__alt_data_end+0xf8004750>
10004c28:	01040074 	movhi	r4,4097
10004c2c:	21105984 	addi	r4,r4,16742
10004c30:	d9002c15 	stw	r4,176(sp)
10004c34:	d8802c17 	ldw	r2,176(sp)
10004c38:	1c07883a 	add	r3,r3,r16
10004c3c:	8c400044 	addi	r17,r17,1
10004c40:	b0800015 	stw	r2,0(r22)
10004c44:	b4000115 	stw	r16,4(r22)
10004c48:	d8c02015 	stw	r3,128(sp)
10004c4c:	dc401f15 	stw	r17,124(sp)
10004c50:	008001c4 	movi	r2,7
10004c54:	147ebd0e 	bge	r2,r17,1000474c <__alt_data_end+0xf800474c>
10004c58:	d9002d17 	ldw	r4,180(sp)
10004c5c:	d9801e04 	addi	r6,sp,120
10004c60:	b80b883a 	mov	r5,r23
10004c64:	000c31c0 	call	1000c31c <__sprint_r>
10004c68:	103b5c1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004c6c:	d8c02017 	ldw	r3,128(sp)
10004c70:	dc401f17 	ldw	r17,124(sp)
10004c74:	dd800404 	addi	r22,sp,16
10004c78:	003eb506 	br	10004750 <__alt_data_end+0xf8004750>
10004c7c:	d9002d17 	ldw	r4,180(sp)
10004c80:	d9801e04 	addi	r6,sp,120
10004c84:	b80b883a 	mov	r5,r23
10004c88:	000c31c0 	call	1000c31c <__sprint_r>
10004c8c:	103b531e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004c90:	d8c02017 	ldw	r3,128(sp)
10004c94:	dc401f17 	ldw	r17,124(sp)
10004c98:	da000404 	addi	r8,sp,16
10004c9c:	003e8d06 	br	100046d4 <__alt_data_end+0xf80046d4>
10004ca0:	d9002d17 	ldw	r4,180(sp)
10004ca4:	d9801e04 	addi	r6,sp,120
10004ca8:	b80b883a 	mov	r5,r23
10004cac:	000c31c0 	call	1000c31c <__sprint_r>
10004cb0:	103b4a1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004cb4:	d8c02017 	ldw	r3,128(sp)
10004cb8:	dc401f17 	ldw	r17,124(sp)
10004cbc:	dd800404 	addi	r22,sp,16
10004cc0:	003e8f06 	br	10004700 <__alt_data_end+0xf8004700>
10004cc4:	0027883a 	mov	r19,zero
10004cc8:	003f4a06 	br	100049f4 <__alt_data_end+0xf80049f4>
10004ccc:	d9002d17 	ldw	r4,180(sp)
10004cd0:	d9801e04 	addi	r6,sp,120
10004cd4:	b80b883a 	mov	r5,r23
10004cd8:	000c31c0 	call	1000c31c <__sprint_r>
10004cdc:	103b3f1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004ce0:	d8c02017 	ldw	r3,128(sp)
10004ce4:	da000404 	addi	r8,sp,16
10004ce8:	003c7b06 	br	10003ed8 <__alt_data_end+0xf8003ed8>
10004cec:	d9402a17 	ldw	r5,168(sp)
10004cf0:	04e7c83a 	sub	r19,zero,r19
10004cf4:	07000b44 	movi	fp,45
10004cf8:	9804c03a 	cmpne	r2,r19,zero
10004cfc:	05adc83a 	sub	r22,zero,r22
10004d00:	df002785 	stb	fp,158(sp)
10004d04:	b0adc83a 	sub	r22,r22,r2
10004d08:	28017b16 	blt	r5,zero,100052f8 <___vfprintf_internal_r+0x1d2c>
10004d0c:	00bfdfc4 	movi	r2,-129
10004d10:	90a4703a 	and	r18,r18,r2
10004d14:	003b8906 	br	10003b3c <__alt_data_end+0xf8003b3c>
10004d18:	d9003617 	ldw	r4,216(sp)
10004d1c:	d9403817 	ldw	r5,224(sp)
10004d20:	da003d15 	stw	r8,244(sp)
10004d24:	000a9d00 	call	1000a9d0 <__fpclassifyd>
10004d28:	da003d17 	ldw	r8,244(sp)
10004d2c:	1000f026 	beq	r2,zero,100050f0 <___vfprintf_internal_r+0x1b24>
10004d30:	d9002a17 	ldw	r4,168(sp)
10004d34:	05bff7c4 	movi	r22,-33
10004d38:	00bfffc4 	movi	r2,-1
10004d3c:	8dac703a 	and	r22,r17,r22
10004d40:	20820026 	beq	r4,r2,10005544 <___vfprintf_internal_r+0x1f78>
10004d44:	008011c4 	movi	r2,71
10004d48:	b081f726 	beq	r22,r2,10005528 <___vfprintf_internal_r+0x1f5c>
10004d4c:	d9003817 	ldw	r4,224(sp)
10004d50:	90c04014 	ori	r3,r18,256
10004d54:	d8c02c15 	stw	r3,176(sp)
10004d58:	20021516 	blt	r4,zero,100055b0 <___vfprintf_internal_r+0x1fe4>
10004d5c:	dcc03817 	ldw	r19,224(sp)
10004d60:	d8002905 	stb	zero,164(sp)
10004d64:	00801984 	movi	r2,102
10004d68:	8881f926 	beq	r17,r2,10005550 <___vfprintf_internal_r+0x1f84>
10004d6c:	00801184 	movi	r2,70
10004d70:	88821c26 	beq	r17,r2,100055e4 <___vfprintf_internal_r+0x2018>
10004d74:	00801144 	movi	r2,69
10004d78:	b081ef26 	beq	r22,r2,10005538 <___vfprintf_internal_r+0x1f6c>
10004d7c:	d8c02a17 	ldw	r3,168(sp)
10004d80:	d8802104 	addi	r2,sp,132
10004d84:	d8800315 	stw	r2,12(sp)
10004d88:	d9403617 	ldw	r5,216(sp)
10004d8c:	d8802504 	addi	r2,sp,148
10004d90:	d9002d17 	ldw	r4,180(sp)
10004d94:	d8800215 	stw	r2,8(sp)
10004d98:	d8802604 	addi	r2,sp,152
10004d9c:	d8c00015 	stw	r3,0(sp)
10004da0:	d8800115 	stw	r2,4(sp)
10004da4:	01c00084 	movi	r7,2
10004da8:	980d883a 	mov	r6,r19
10004dac:	d8c03c15 	stw	r3,240(sp)
10004db0:	da003d15 	stw	r8,244(sp)
10004db4:	0005cfc0 	call	10005cfc <_dtoa_r>
10004db8:	1021883a 	mov	r16,r2
10004dbc:	008019c4 	movi	r2,103
10004dc0:	d8c03c17 	ldw	r3,240(sp)
10004dc4:	da003d17 	ldw	r8,244(sp)
10004dc8:	88817126 	beq	r17,r2,10005390 <___vfprintf_internal_r+0x1dc4>
10004dcc:	008011c4 	movi	r2,71
10004dd0:	88829126 	beq	r17,r2,10005818 <___vfprintf_internal_r+0x224c>
10004dd4:	80f9883a 	add	fp,r16,r3
10004dd8:	d9003617 	ldw	r4,216(sp)
10004ddc:	000d883a 	mov	r6,zero
10004de0:	000f883a 	mov	r7,zero
10004de4:	980b883a 	mov	r5,r19
10004de8:	da003d15 	stw	r8,244(sp)
10004dec:	00101ac0 	call	100101ac <__eqdf2>
10004df0:	da003d17 	ldw	r8,244(sp)
10004df4:	10018d26 	beq	r2,zero,1000542c <___vfprintf_internal_r+0x1e60>
10004df8:	d8802117 	ldw	r2,132(sp)
10004dfc:	1700062e 	bgeu	r2,fp,10004e18 <___vfprintf_internal_r+0x184c>
10004e00:	01000c04 	movi	r4,48
10004e04:	10c00044 	addi	r3,r2,1
10004e08:	d8c02115 	stw	r3,132(sp)
10004e0c:	11000005 	stb	r4,0(r2)
10004e10:	d8802117 	ldw	r2,132(sp)
10004e14:	173ffb36 	bltu	r2,fp,10004e04 <__alt_data_end+0xf8004e04>
10004e18:	1405c83a 	sub	r2,r2,r16
10004e1c:	d8803315 	stw	r2,204(sp)
10004e20:	008011c4 	movi	r2,71
10004e24:	b0817626 	beq	r22,r2,10005400 <___vfprintf_internal_r+0x1e34>
10004e28:	00801944 	movi	r2,101
10004e2c:	1442800e 	bge	r2,r17,10005830 <___vfprintf_internal_r+0x2264>
10004e30:	d8c02617 	ldw	r3,152(sp)
10004e34:	00801984 	movi	r2,102
10004e38:	d8c03215 	stw	r3,200(sp)
10004e3c:	8881fe26 	beq	r17,r2,10005638 <___vfprintf_internal_r+0x206c>
10004e40:	d8c03217 	ldw	r3,200(sp)
10004e44:	d9003317 	ldw	r4,204(sp)
10004e48:	1901dd16 	blt	r3,r4,100055c0 <___vfprintf_internal_r+0x1ff4>
10004e4c:	9480004c 	andi	r18,r18,1
10004e50:	90022b1e 	bne	r18,zero,10005700 <___vfprintf_internal_r+0x2134>
10004e54:	1805883a 	mov	r2,r3
10004e58:	18028316 	blt	r3,zero,10005868 <___vfprintf_internal_r+0x229c>
10004e5c:	d8c03217 	ldw	r3,200(sp)
10004e60:	044019c4 	movi	r17,103
10004e64:	d8c02b15 	stw	r3,172(sp)
10004e68:	df002907 	ldb	fp,164(sp)
10004e6c:	e001531e 	bne	fp,zero,100053bc <___vfprintf_internal_r+0x1df0>
10004e70:	df002783 	ldbu	fp,158(sp)
10004e74:	d8802915 	stw	r2,164(sp)
10004e78:	dc802c17 	ldw	r18,176(sp)
10004e7c:	d8002a15 	stw	zero,168(sp)
10004e80:	003baf06 	br	10003d40 <__alt_data_end+0xf8003d40>
10004e84:	d8c02e17 	ldw	r3,184(sp)
10004e88:	d9002e17 	ldw	r4,184(sp)
10004e8c:	d9402e17 	ldw	r5,184(sp)
10004e90:	18c00017 	ldw	r3,0(r3)
10004e94:	21000117 	ldw	r4,4(r4)
10004e98:	29400204 	addi	r5,r5,8
10004e9c:	d8c03615 	stw	r3,216(sp)
10004ea0:	d9003815 	stw	r4,224(sp)
10004ea4:	d9402e15 	stw	r5,184(sp)
10004ea8:	003b5006 	br	10003bec <__alt_data_end+0xf8003bec>
10004eac:	ac400007 	ldb	r17,0(r21)
10004eb0:	003a2806 	br	10003754 <__alt_data_end+0xf8003754>
10004eb4:	9080100c 	andi	r2,r18,64
10004eb8:	1000a826 	beq	r2,zero,1000515c <___vfprintf_internal_r+0x1b90>
10004ebc:	d8c02e17 	ldw	r3,184(sp)
10004ec0:	002d883a 	mov	r22,zero
10004ec4:	1cc0000b 	ldhu	r19,0(r3)
10004ec8:	18c00104 	addi	r3,r3,4
10004ecc:	d8c02e15 	stw	r3,184(sp)
10004ed0:	003caf06 	br	10004190 <__alt_data_end+0xf8004190>
10004ed4:	d9002e17 	ldw	r4,184(sp)
10004ed8:	d9402a17 	ldw	r5,168(sp)
10004edc:	002d883a 	mov	r22,zero
10004ee0:	20800104 	addi	r2,r4,4
10004ee4:	24c00017 	ldw	r19,0(r4)
10004ee8:	283ebb0e 	bge	r5,zero,100049d8 <__alt_data_end+0xf80049d8>
10004eec:	003ef106 	br	10004ab4 <__alt_data_end+0xf8004ab4>
10004ef0:	9080040c 	andi	r2,r18,16
10004ef4:	1000921e 	bne	r2,zero,10005140 <___vfprintf_internal_r+0x1b74>
10004ef8:	9480100c 	andi	r18,r18,64
10004efc:	90013926 	beq	r18,zero,100053e4 <___vfprintf_internal_r+0x1e18>
10004f00:	d9402e17 	ldw	r5,184(sp)
10004f04:	d8c02f17 	ldw	r3,188(sp)
10004f08:	28800017 	ldw	r2,0(r5)
10004f0c:	29400104 	addi	r5,r5,4
10004f10:	d9402e15 	stw	r5,184(sp)
10004f14:	10c0000d 	sth	r3,0(r2)
10004f18:	0039e406 	br	100036ac <__alt_data_end+0xf80036ac>
10004f1c:	9080100c 	andi	r2,r18,64
10004f20:	10008026 	beq	r2,zero,10005124 <___vfprintf_internal_r+0x1b58>
10004f24:	d8802e17 	ldw	r2,184(sp)
10004f28:	14c0000f 	ldh	r19,0(r2)
10004f2c:	10800104 	addi	r2,r2,4
10004f30:	d8802e15 	stw	r2,184(sp)
10004f34:	982dd7fa 	srai	r22,r19,31
10004f38:	b005883a 	mov	r2,r22
10004f3c:	003af706 	br	10003b1c <__alt_data_end+0xf8003b1c>
10004f40:	9080100c 	andi	r2,r18,64
10004f44:	d8002785 	stb	zero,158(sp)
10004f48:	10008a1e 	bne	r2,zero,10005174 <___vfprintf_internal_r+0x1ba8>
10004f4c:	d9002e17 	ldw	r4,184(sp)
10004f50:	d9402a17 	ldw	r5,168(sp)
10004f54:	002d883a 	mov	r22,zero
10004f58:	20800104 	addi	r2,r4,4
10004f5c:	24c00017 	ldw	r19,0(r4)
10004f60:	283e4b0e 	bge	r5,zero,10004890 <__alt_data_end+0xf8004890>
10004f64:	9d86b03a 	or	r3,r19,r22
10004f68:	d8802e15 	stw	r2,184(sp)
10004f6c:	183e4c1e 	bne	r3,zero,100048a0 <__alt_data_end+0xf80048a0>
10004f70:	0039883a 	mov	fp,zero
10004f74:	0005883a 	mov	r2,zero
10004f78:	003d4006 	br	1000447c <__alt_data_end+0xf800447c>
10004f7c:	01440074 	movhi	r5,4097
10004f80:	29505984 	addi	r5,r5,16742
10004f84:	d9402c15 	stw	r5,176(sp)
10004f88:	d9402c17 	ldw	r5,176(sp)
10004f8c:	1c47883a 	add	r3,r3,r17
10004f90:	10800044 	addi	r2,r2,1
10004f94:	41400015 	stw	r5,0(r8)
10004f98:	44400115 	stw	r17,4(r8)
10004f9c:	d8c02015 	stw	r3,128(sp)
10004fa0:	d8801f15 	stw	r2,124(sp)
10004fa4:	010001c4 	movi	r4,7
10004fa8:	20bec816 	blt	r4,r2,10004acc <__alt_data_end+0xf8004acc>
10004fac:	42000204 	addi	r8,r8,8
10004fb0:	003ecd06 	br	10004ae8 <__alt_data_end+0xf8004ae8>
10004fb4:	d9002a17 	ldw	r4,168(sp)
10004fb8:	d8002785 	stb	zero,158(sp)
10004fbc:	203d2d16 	blt	r4,zero,10004474 <__alt_data_end+0xf8004474>
10004fc0:	00bfdfc4 	movi	r2,-129
10004fc4:	90a4703a 	and	r18,r18,r2
10004fc8:	003a6106 	br	10003950 <__alt_data_end+0xf8003950>
10004fcc:	01040074 	movhi	r4,4097
10004fd0:	21105984 	addi	r4,r4,16742
10004fd4:	d9002c15 	stw	r4,176(sp)
10004fd8:	003bea06 	br	10003f84 <__alt_data_end+0xf8003f84>
10004fdc:	d9002d17 	ldw	r4,180(sp)
10004fe0:	d9801e04 	addi	r6,sp,120
10004fe4:	b80b883a 	mov	r5,r23
10004fe8:	000c31c0 	call	1000c31c <__sprint_r>
10004fec:	103a7b1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10004ff0:	d8c02017 	ldw	r3,128(sp)
10004ff4:	da000404 	addi	r8,sp,16
10004ff8:	003d4106 	br	10004500 <__alt_data_end+0xf8004500>
10004ffc:	d8801f17 	ldw	r2,124(sp)
10005000:	01440074 	movhi	r5,4097
10005004:	01000044 	movi	r4,1
10005008:	18c00044 	addi	r3,r3,1
1000500c:	10800044 	addi	r2,r2,1
10005010:	29505104 	addi	r5,r5,16708
10005014:	41000115 	stw	r4,4(r8)
10005018:	41400015 	stw	r5,0(r8)
1000501c:	d8c02015 	stw	r3,128(sp)
10005020:	d8801f15 	stw	r2,124(sp)
10005024:	010001c4 	movi	r4,7
10005028:	20805c16 	blt	r4,r2,1000519c <___vfprintf_internal_r+0x1bd0>
1000502c:	42000204 	addi	r8,r8,8
10005030:	8800041e 	bne	r17,zero,10005044 <___vfprintf_internal_r+0x1a78>
10005034:	d8803317 	ldw	r2,204(sp)
10005038:	1000021e 	bne	r2,zero,10005044 <___vfprintf_internal_r+0x1a78>
1000503c:	9080004c 	andi	r2,r18,1
10005040:	103be726 	beq	r2,zero,10003fe0 <__alt_data_end+0xf8003fe0>
10005044:	d9003717 	ldw	r4,220(sp)
10005048:	d8801f17 	ldw	r2,124(sp)
1000504c:	d9403417 	ldw	r5,208(sp)
10005050:	20c7883a 	add	r3,r4,r3
10005054:	10800044 	addi	r2,r2,1
10005058:	41000115 	stw	r4,4(r8)
1000505c:	41400015 	stw	r5,0(r8)
10005060:	d8c02015 	stw	r3,128(sp)
10005064:	d8801f15 	stw	r2,124(sp)
10005068:	010001c4 	movi	r4,7
1000506c:	20812116 	blt	r4,r2,100054f4 <___vfprintf_internal_r+0x1f28>
10005070:	42000204 	addi	r8,r8,8
10005074:	0463c83a 	sub	r17,zero,r17
10005078:	0440730e 	bge	zero,r17,10005248 <___vfprintf_internal_r+0x1c7c>
1000507c:	05800404 	movi	r22,16
10005080:	b440860e 	bge	r22,r17,1000529c <___vfprintf_internal_r+0x1cd0>
10005084:	01440074 	movhi	r5,4097
10005088:	29505984 	addi	r5,r5,16742
1000508c:	d9402c15 	stw	r5,176(sp)
10005090:	070001c4 	movi	fp,7
10005094:	dcc02d17 	ldw	r19,180(sp)
10005098:	00000306 	br	100050a8 <___vfprintf_internal_r+0x1adc>
1000509c:	42000204 	addi	r8,r8,8
100050a0:	8c7ffc04 	addi	r17,r17,-16
100050a4:	b440800e 	bge	r22,r17,100052a8 <___vfprintf_internal_r+0x1cdc>
100050a8:	18c00404 	addi	r3,r3,16
100050ac:	10800044 	addi	r2,r2,1
100050b0:	45000015 	stw	r20,0(r8)
100050b4:	45800115 	stw	r22,4(r8)
100050b8:	d8c02015 	stw	r3,128(sp)
100050bc:	d8801f15 	stw	r2,124(sp)
100050c0:	e0bff60e 	bge	fp,r2,1000509c <__alt_data_end+0xf800509c>
100050c4:	d9801e04 	addi	r6,sp,120
100050c8:	b80b883a 	mov	r5,r23
100050cc:	9809883a 	mov	r4,r19
100050d0:	000c31c0 	call	1000c31c <__sprint_r>
100050d4:	103a411e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100050d8:	d8c02017 	ldw	r3,128(sp)
100050dc:	d8801f17 	ldw	r2,124(sp)
100050e0:	da000404 	addi	r8,sp,16
100050e4:	003fee06 	br	100050a0 <__alt_data_end+0xf80050a0>
100050e8:	00bfffc4 	movi	r2,-1
100050ec:	003a3f06 	br	100039ec <__alt_data_end+0xf80039ec>
100050f0:	008011c4 	movi	r2,71
100050f4:	1440b816 	blt	r2,r17,100053d8 <___vfprintf_internal_r+0x1e0c>
100050f8:	04040074 	movhi	r16,4097
100050fc:	84104304 	addi	r16,r16,16652
10005100:	00c000c4 	movi	r3,3
10005104:	00bfdfc4 	movi	r2,-129
10005108:	d8c02915 	stw	r3,164(sp)
1000510c:	90a4703a 	and	r18,r18,r2
10005110:	df002783 	ldbu	fp,158(sp)
10005114:	d8c02b15 	stw	r3,172(sp)
10005118:	d8002a15 	stw	zero,168(sp)
1000511c:	d8003215 	stw	zero,200(sp)
10005120:	003b0706 	br	10003d40 <__alt_data_end+0xf8003d40>
10005124:	d8c02e17 	ldw	r3,184(sp)
10005128:	1cc00017 	ldw	r19,0(r3)
1000512c:	18c00104 	addi	r3,r3,4
10005130:	d8c02e15 	stw	r3,184(sp)
10005134:	982dd7fa 	srai	r22,r19,31
10005138:	b005883a 	mov	r2,r22
1000513c:	003a7706 	br	10003b1c <__alt_data_end+0xf8003b1c>
10005140:	d8c02e17 	ldw	r3,184(sp)
10005144:	d9002f17 	ldw	r4,188(sp)
10005148:	18800017 	ldw	r2,0(r3)
1000514c:	18c00104 	addi	r3,r3,4
10005150:	d8c02e15 	stw	r3,184(sp)
10005154:	11000015 	stw	r4,0(r2)
10005158:	00395406 	br	100036ac <__alt_data_end+0xf80036ac>
1000515c:	d9002e17 	ldw	r4,184(sp)
10005160:	002d883a 	mov	r22,zero
10005164:	24c00017 	ldw	r19,0(r4)
10005168:	21000104 	addi	r4,r4,4
1000516c:	d9002e15 	stw	r4,184(sp)
10005170:	003c0706 	br	10004190 <__alt_data_end+0xf8004190>
10005174:	d9402e17 	ldw	r5,184(sp)
10005178:	d8c02a17 	ldw	r3,168(sp)
1000517c:	002d883a 	mov	r22,zero
10005180:	28800104 	addi	r2,r5,4
10005184:	2cc0000b 	ldhu	r19,0(r5)
10005188:	183dc10e 	bge	r3,zero,10004890 <__alt_data_end+0xf8004890>
1000518c:	003f7506 	br	10004f64 <__alt_data_end+0xf8004f64>
10005190:	04040074 	movhi	r16,4097
10005194:	84104104 	addi	r16,r16,16644
10005198:	003aa706 	br	10003c38 <__alt_data_end+0xf8003c38>
1000519c:	d9002d17 	ldw	r4,180(sp)
100051a0:	d9801e04 	addi	r6,sp,120
100051a4:	b80b883a 	mov	r5,r23
100051a8:	000c31c0 	call	1000c31c <__sprint_r>
100051ac:	103a0b1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100051b0:	dc402617 	ldw	r17,152(sp)
100051b4:	d8c02017 	ldw	r3,128(sp)
100051b8:	da000404 	addi	r8,sp,16
100051bc:	003f9c06 	br	10005030 <__alt_data_end+0xf8005030>
100051c0:	ac400043 	ldbu	r17,1(r21)
100051c4:	84000814 	ori	r16,r16,32
100051c8:	ad400044 	addi	r21,r21,1
100051cc:	8c403fcc 	andi	r17,r17,255
100051d0:	8c40201c 	xori	r17,r17,128
100051d4:	8c7fe004 	addi	r17,r17,-128
100051d8:	00395e06 	br	10003754 <__alt_data_end+0xf8003754>
100051dc:	d8c02e15 	stw	r3,184(sp)
100051e0:	0039883a 	mov	fp,zero
100051e4:	003e3506 	br	10004abc <__alt_data_end+0xf8004abc>
100051e8:	d9002d17 	ldw	r4,180(sp)
100051ec:	d9801e04 	addi	r6,sp,120
100051f0:	b80b883a 	mov	r5,r23
100051f4:	000c31c0 	call	1000c31c <__sprint_r>
100051f8:	1039f81e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100051fc:	d8c02017 	ldw	r3,128(sp)
10005200:	da000404 	addi	r8,sp,16
10005204:	003cd006 	br	10004548 <__alt_data_end+0xf8004548>
10005208:	8009883a 	mov	r4,r16
1000520c:	df003d15 	stw	fp,244(sp)
10005210:	00012780 	call	10001278 <strlen>
10005214:	d8802b15 	stw	r2,172(sp)
10005218:	da003d17 	ldw	r8,244(sp)
1000521c:	103c200e 	bge	r2,zero,100042a0 <__alt_data_end+0xf80042a0>
10005220:	0005883a 	mov	r2,zero
10005224:	003c1e06 	br	100042a0 <__alt_data_end+0xf80042a0>
10005228:	d9002d17 	ldw	r4,180(sp)
1000522c:	d9801e04 	addi	r6,sp,120
10005230:	b80b883a 	mov	r5,r23
10005234:	000c31c0 	call	1000c31c <__sprint_r>
10005238:	1039e81e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
1000523c:	d8c02017 	ldw	r3,128(sp)
10005240:	d8801f17 	ldw	r2,124(sp)
10005244:	da000404 	addi	r8,sp,16
10005248:	d9403317 	ldw	r5,204(sp)
1000524c:	10800044 	addi	r2,r2,1
10005250:	44000015 	stw	r16,0(r8)
10005254:	28c7883a 	add	r3,r5,r3
10005258:	003b5b06 	br	10003fc8 <__alt_data_end+0xf8003fc8>
1000525c:	01040074 	movhi	r4,4097
10005260:	21105d84 	addi	r4,r4,16758
10005264:	d9003515 	stw	r4,212(sp)
10005268:	003af206 	br	10003e34 <__alt_data_end+0xf8003e34>
1000526c:	013fffc4 	movi	r4,-1
10005270:	003a0806 	br	10003a94 <__alt_data_end+0xf8003a94>
10005274:	0023883a 	mov	r17,zero
10005278:	003d9d06 	br	100048f0 <__alt_data_end+0xf80048f0>
1000527c:	d9002d17 	ldw	r4,180(sp)
10005280:	d9801e04 	addi	r6,sp,120
10005284:	b80b883a 	mov	r5,r23
10005288:	000c31c0 	call	1000c31c <__sprint_r>
1000528c:	1039d31e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10005290:	d8c02017 	ldw	r3,128(sp)
10005294:	da000404 	addi	r8,sp,16
10005298:	003d9406 	br	100048ec <__alt_data_end+0xf80048ec>
1000529c:	01040074 	movhi	r4,4097
100052a0:	21105984 	addi	r4,r4,16742
100052a4:	d9002c15 	stw	r4,176(sp)
100052a8:	d9002c17 	ldw	r4,176(sp)
100052ac:	1c47883a 	add	r3,r3,r17
100052b0:	10800044 	addi	r2,r2,1
100052b4:	41000015 	stw	r4,0(r8)
100052b8:	44400115 	stw	r17,4(r8)
100052bc:	d8c02015 	stw	r3,128(sp)
100052c0:	d8801f15 	stw	r2,124(sp)
100052c4:	010001c4 	movi	r4,7
100052c8:	20bfd716 	blt	r4,r2,10005228 <__alt_data_end+0xf8005228>
100052cc:	42000204 	addi	r8,r8,8
100052d0:	003fdd06 	br	10005248 <__alt_data_end+0xf8005248>
100052d4:	d9002d17 	ldw	r4,180(sp)
100052d8:	d9801e04 	addi	r6,sp,120
100052dc:	b80b883a 	mov	r5,r23
100052e0:	000c31c0 	call	1000c31c <__sprint_r>
100052e4:	1039bd1e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
100052e8:	d8802617 	ldw	r2,152(sp)
100052ec:	d8c02017 	ldw	r3,128(sp)
100052f0:	da000404 	addi	r8,sp,16
100052f4:	003e1006 	br	10004b38 <__alt_data_end+0xf8004b38>
100052f8:	00800044 	movi	r2,1
100052fc:	10803fcc 	andi	r2,r2,255
10005300:	00c00044 	movi	r3,1
10005304:	10fa0d26 	beq	r2,r3,10003b3c <__alt_data_end+0xf8003b3c>
10005308:	00c00084 	movi	r3,2
1000530c:	10fbaf26 	beq	r2,r3,100041cc <__alt_data_end+0xf80041cc>
10005310:	003a6d06 	br	10003cc8 <__alt_data_end+0xf8003cc8>
10005314:	01040074 	movhi	r4,4097
10005318:	21105d84 	addi	r4,r4,16758
1000531c:	d9003515 	stw	r4,212(sp)
10005320:	003b5406 	br	10004074 <__alt_data_end+0xf8004074>
10005324:	d8802a17 	ldw	r2,168(sp)
10005328:	00c00184 	movi	r3,6
1000532c:	1880012e 	bgeu	r3,r2,10005334 <___vfprintf_internal_r+0x1d68>
10005330:	1805883a 	mov	r2,r3
10005334:	d8802b15 	stw	r2,172(sp)
10005338:	1000ef16 	blt	r2,zero,100056f8 <___vfprintf_internal_r+0x212c>
1000533c:	04040074 	movhi	r16,4097
10005340:	d8802915 	stw	r2,164(sp)
10005344:	dcc02e15 	stw	r19,184(sp)
10005348:	d8002a15 	stw	zero,168(sp)
1000534c:	d8003215 	stw	zero,200(sp)
10005350:	84104f04 	addi	r16,r16,16700
10005354:	0039883a 	mov	fp,zero
10005358:	003a8006 	br	10003d5c <__alt_data_end+0xf8003d5c>
1000535c:	0021883a 	mov	r16,zero
10005360:	003e0706 	br	10004b80 <__alt_data_end+0xf8004b80>
10005364:	d9002d17 	ldw	r4,180(sp)
10005368:	d9801e04 	addi	r6,sp,120
1000536c:	b80b883a 	mov	r5,r23
10005370:	000c31c0 	call	1000c31c <__sprint_r>
10005374:	1039991e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10005378:	d8802617 	ldw	r2,152(sp)
1000537c:	d9403317 	ldw	r5,204(sp)
10005380:	d8c02017 	ldw	r3,128(sp)
10005384:	da000404 	addi	r8,sp,16
10005388:	2885c83a 	sub	r2,r5,r2
1000538c:	003dfb06 	br	10004b7c <__alt_data_end+0xf8004b7c>
10005390:	9080004c 	andi	r2,r18,1
10005394:	103e8f1e 	bne	r2,zero,10004dd4 <__alt_data_end+0xf8004dd4>
10005398:	d8802117 	ldw	r2,132(sp)
1000539c:	003e9e06 	br	10004e18 <__alt_data_end+0xf8004e18>
100053a0:	1025883a 	mov	r18,r2
100053a4:	0039883a 	mov	fp,zero
100053a8:	00800084 	movi	r2,2
100053ac:	003fd306 	br	100052fc <__alt_data_end+0xf80052fc>
100053b0:	07000b44 	movi	fp,45
100053b4:	df002785 	stb	fp,158(sp)
100053b8:	003a1b06 	br	10003c28 <__alt_data_end+0xf8003c28>
100053bc:	00c00b44 	movi	r3,45
100053c0:	d8c02785 	stb	r3,158(sp)
100053c4:	d8802915 	stw	r2,164(sp)
100053c8:	dc802c17 	ldw	r18,176(sp)
100053cc:	d8002a15 	stw	zero,168(sp)
100053d0:	07000b44 	movi	fp,45
100053d4:	003a5e06 	br	10003d50 <__alt_data_end+0xf8003d50>
100053d8:	04040074 	movhi	r16,4097
100053dc:	84104404 	addi	r16,r16,16656
100053e0:	003f4706 	br	10005100 <__alt_data_end+0xf8005100>
100053e4:	d9002e17 	ldw	r4,184(sp)
100053e8:	d9402f17 	ldw	r5,188(sp)
100053ec:	20800017 	ldw	r2,0(r4)
100053f0:	21000104 	addi	r4,r4,4
100053f4:	d9002e15 	stw	r4,184(sp)
100053f8:	11400015 	stw	r5,0(r2)
100053fc:	0038ab06 	br	100036ac <__alt_data_end+0xf80036ac>
10005400:	dd802617 	ldw	r22,152(sp)
10005404:	00bfff44 	movi	r2,-3
10005408:	b0801c16 	blt	r22,r2,1000547c <___vfprintf_internal_r+0x1eb0>
1000540c:	d9402a17 	ldw	r5,168(sp)
10005410:	2d801a16 	blt	r5,r22,1000547c <___vfprintf_internal_r+0x1eb0>
10005414:	dd803215 	stw	r22,200(sp)
10005418:	003e8906 	br	10004e40 <__alt_data_end+0xf8004e40>
1000541c:	01040074 	movhi	r4,4097
10005420:	21105984 	addi	r4,r4,16742
10005424:	d9002c15 	stw	r4,176(sp)
10005428:	003c9106 	br	10004670 <__alt_data_end+0xf8004670>
1000542c:	e005883a 	mov	r2,fp
10005430:	003e7906 	br	10004e18 <__alt_data_end+0xf8004e18>
10005434:	d9002a17 	ldw	r4,168(sp)
10005438:	df002783 	ldbu	fp,158(sp)
1000543c:	dcc02e15 	stw	r19,184(sp)
10005440:	d9002915 	stw	r4,164(sp)
10005444:	d9002b15 	stw	r4,172(sp)
10005448:	d8002a15 	stw	zero,168(sp)
1000544c:	d8003215 	stw	zero,200(sp)
10005450:	003a3b06 	br	10003d40 <__alt_data_end+0xf8003d40>
10005454:	9080004c 	andi	r2,r18,1
10005458:	0039883a 	mov	fp,zero
1000545c:	10000426 	beq	r2,zero,10005470 <___vfprintf_internal_r+0x1ea4>
10005460:	00800c04 	movi	r2,48
10005464:	dc001dc4 	addi	r16,sp,119
10005468:	d8801dc5 	stb	r2,119(sp)
1000546c:	003b6406 	br	10004200 <__alt_data_end+0xf8004200>
10005470:	d8002b15 	stw	zero,172(sp)
10005474:	dc001e04 	addi	r16,sp,120
10005478:	003a2b06 	br	10003d28 <__alt_data_end+0xf8003d28>
1000547c:	8c7fff84 	addi	r17,r17,-2
10005480:	b5bfffc4 	addi	r22,r22,-1
10005484:	dd802615 	stw	r22,152(sp)
10005488:	dc4022c5 	stb	r17,139(sp)
1000548c:	b000bf16 	blt	r22,zero,1000578c <___vfprintf_internal_r+0x21c0>
10005490:	00800ac4 	movi	r2,43
10005494:	d8802305 	stb	r2,140(sp)
10005498:	00800244 	movi	r2,9
1000549c:	15807016 	blt	r2,r22,10005660 <___vfprintf_internal_r+0x2094>
100054a0:	00800c04 	movi	r2,48
100054a4:	b5800c04 	addi	r22,r22,48
100054a8:	d8802345 	stb	r2,141(sp)
100054ac:	dd802385 	stb	r22,142(sp)
100054b0:	d88023c4 	addi	r2,sp,143
100054b4:	df0022c4 	addi	fp,sp,139
100054b8:	d8c03317 	ldw	r3,204(sp)
100054bc:	1739c83a 	sub	fp,r2,fp
100054c0:	d9003317 	ldw	r4,204(sp)
100054c4:	e0c7883a 	add	r3,fp,r3
100054c8:	df003a15 	stw	fp,232(sp)
100054cc:	d8c02b15 	stw	r3,172(sp)
100054d0:	00800044 	movi	r2,1
100054d4:	1100b30e 	bge	r2,r4,100057a4 <___vfprintf_internal_r+0x21d8>
100054d8:	d8c02b17 	ldw	r3,172(sp)
100054dc:	18c00044 	addi	r3,r3,1
100054e0:	d8c02b15 	stw	r3,172(sp)
100054e4:	1805883a 	mov	r2,r3
100054e8:	1800ac16 	blt	r3,zero,1000579c <___vfprintf_internal_r+0x21d0>
100054ec:	d8003215 	stw	zero,200(sp)
100054f0:	003e5d06 	br	10004e68 <__alt_data_end+0xf8004e68>
100054f4:	d9002d17 	ldw	r4,180(sp)
100054f8:	d9801e04 	addi	r6,sp,120
100054fc:	b80b883a 	mov	r5,r23
10005500:	000c31c0 	call	1000c31c <__sprint_r>
10005504:	1039351e 	bne	r2,zero,100039dc <__alt_data_end+0xf80039dc>
10005508:	dc402617 	ldw	r17,152(sp)
1000550c:	d8c02017 	ldw	r3,128(sp)
10005510:	d8801f17 	ldw	r2,124(sp)
10005514:	da000404 	addi	r8,sp,16
10005518:	003ed606 	br	10005074 <__alt_data_end+0xf8005074>
1000551c:	182b883a 	mov	r21,r3
10005520:	d8002a15 	stw	zero,168(sp)
10005524:	00388c06 	br	10003758 <__alt_data_end+0xf8003758>
10005528:	d8802a17 	ldw	r2,168(sp)
1000552c:	103e071e 	bne	r2,zero,10004d4c <__alt_data_end+0xf8004d4c>
10005530:	dc002a15 	stw	r16,168(sp)
10005534:	003e0506 	br	10004d4c <__alt_data_end+0xf8004d4c>
10005538:	d9002a17 	ldw	r4,168(sp)
1000553c:	20c00044 	addi	r3,r4,1
10005540:	003e0f06 	br	10004d80 <__alt_data_end+0xf8004d80>
10005544:	01400184 	movi	r5,6
10005548:	d9402a15 	stw	r5,168(sp)
1000554c:	003dff06 	br	10004d4c <__alt_data_end+0xf8004d4c>
10005550:	d8802104 	addi	r2,sp,132
10005554:	d8800315 	stw	r2,12(sp)
10005558:	d8802504 	addi	r2,sp,148
1000555c:	d8800215 	stw	r2,8(sp)
10005560:	d8802604 	addi	r2,sp,152
10005564:	d8800115 	stw	r2,4(sp)
10005568:	d8802a17 	ldw	r2,168(sp)
1000556c:	d9403617 	ldw	r5,216(sp)
10005570:	d9002d17 	ldw	r4,180(sp)
10005574:	d8800015 	stw	r2,0(sp)
10005578:	01c000c4 	movi	r7,3
1000557c:	980d883a 	mov	r6,r19
10005580:	da003d15 	stw	r8,244(sp)
10005584:	0005cfc0 	call	10005cfc <_dtoa_r>
10005588:	d8c02a17 	ldw	r3,168(sp)
1000558c:	da003d17 	ldw	r8,244(sp)
10005590:	1021883a 	mov	r16,r2
10005594:	10f9883a 	add	fp,r2,r3
10005598:	81000007 	ldb	r4,0(r16)
1000559c:	00800c04 	movi	r2,48
100055a0:	20805e26 	beq	r4,r2,1000571c <___vfprintf_internal_r+0x2150>
100055a4:	d8c02617 	ldw	r3,152(sp)
100055a8:	e0f9883a 	add	fp,fp,r3
100055ac:	003e0a06 	br	10004dd8 <__alt_data_end+0xf8004dd8>
100055b0:	00c00b44 	movi	r3,45
100055b4:	24e0003c 	xorhi	r19,r4,32768
100055b8:	d8c02905 	stb	r3,164(sp)
100055bc:	003de906 	br	10004d64 <__alt_data_end+0xf8004d64>
100055c0:	d8c03217 	ldw	r3,200(sp)
100055c4:	00c07a0e 	bge	zero,r3,100057b0 <___vfprintf_internal_r+0x21e4>
100055c8:	00800044 	movi	r2,1
100055cc:	d9003317 	ldw	r4,204(sp)
100055d0:	1105883a 	add	r2,r2,r4
100055d4:	d8802b15 	stw	r2,172(sp)
100055d8:	10004e16 	blt	r2,zero,10005714 <___vfprintf_internal_r+0x2148>
100055dc:	044019c4 	movi	r17,103
100055e0:	003e2106 	br	10004e68 <__alt_data_end+0xf8004e68>
100055e4:	d9002a17 	ldw	r4,168(sp)
100055e8:	d8802104 	addi	r2,sp,132
100055ec:	d8800315 	stw	r2,12(sp)
100055f0:	d9000015 	stw	r4,0(sp)
100055f4:	d8802504 	addi	r2,sp,148
100055f8:	d9403617 	ldw	r5,216(sp)
100055fc:	d9002d17 	ldw	r4,180(sp)
10005600:	d8800215 	stw	r2,8(sp)
10005604:	d8802604 	addi	r2,sp,152
10005608:	d8800115 	stw	r2,4(sp)
1000560c:	01c000c4 	movi	r7,3
10005610:	980d883a 	mov	r6,r19
10005614:	da003d15 	stw	r8,244(sp)
10005618:	0005cfc0 	call	10005cfc <_dtoa_r>
1000561c:	d8c02a17 	ldw	r3,168(sp)
10005620:	da003d17 	ldw	r8,244(sp)
10005624:	1021883a 	mov	r16,r2
10005628:	00801184 	movi	r2,70
1000562c:	80f9883a 	add	fp,r16,r3
10005630:	88bfd926 	beq	r17,r2,10005598 <__alt_data_end+0xf8005598>
10005634:	003de806 	br	10004dd8 <__alt_data_end+0xf8004dd8>
10005638:	d9002a17 	ldw	r4,168(sp)
1000563c:	00c04d0e 	bge	zero,r3,10005774 <___vfprintf_internal_r+0x21a8>
10005640:	2000441e 	bne	r4,zero,10005754 <___vfprintf_internal_r+0x2188>
10005644:	9480004c 	andi	r18,r18,1
10005648:	9000421e 	bne	r18,zero,10005754 <___vfprintf_internal_r+0x2188>
1000564c:	1805883a 	mov	r2,r3
10005650:	18006f16 	blt	r3,zero,10005810 <___vfprintf_internal_r+0x2244>
10005654:	d8c03217 	ldw	r3,200(sp)
10005658:	d8c02b15 	stw	r3,172(sp)
1000565c:	003e0206 	br	10004e68 <__alt_data_end+0xf8004e68>
10005660:	df0022c4 	addi	fp,sp,139
10005664:	dc002a15 	stw	r16,168(sp)
10005668:	4027883a 	mov	r19,r8
1000566c:	e021883a 	mov	r16,fp
10005670:	b009883a 	mov	r4,r22
10005674:	01400284 	movi	r5,10
10005678:	0000ea00 	call	10000ea0 <__modsi3>
1000567c:	10800c04 	addi	r2,r2,48
10005680:	843fffc4 	addi	r16,r16,-1
10005684:	b009883a 	mov	r4,r22
10005688:	01400284 	movi	r5,10
1000568c:	80800005 	stb	r2,0(r16)
10005690:	0000e1c0 	call	10000e1c <__divsi3>
10005694:	102d883a 	mov	r22,r2
10005698:	00800244 	movi	r2,9
1000569c:	15bff416 	blt	r2,r22,10005670 <__alt_data_end+0xf8005670>
100056a0:	9811883a 	mov	r8,r19
100056a4:	b0800c04 	addi	r2,r22,48
100056a8:	8027883a 	mov	r19,r16
100056ac:	997fffc4 	addi	r5,r19,-1
100056b0:	98bfffc5 	stb	r2,-1(r19)
100056b4:	dc002a17 	ldw	r16,168(sp)
100056b8:	2f006d2e 	bgeu	r5,fp,10005870 <___vfprintf_internal_r+0x22a4>
100056bc:	d9c02384 	addi	r7,sp,142
100056c0:	3ccfc83a 	sub	r7,r7,r19
100056c4:	d9002344 	addi	r4,sp,141
100056c8:	e1cf883a 	add	r7,fp,r7
100056cc:	00000106 	br	100056d4 <___vfprintf_internal_r+0x2108>
100056d0:	28800003 	ldbu	r2,0(r5)
100056d4:	20800005 	stb	r2,0(r4)
100056d8:	21000044 	addi	r4,r4,1
100056dc:	29400044 	addi	r5,r5,1
100056e0:	393ffb1e 	bne	r7,r4,100056d0 <__alt_data_end+0xf80056d0>
100056e4:	d8802304 	addi	r2,sp,140
100056e8:	14c5c83a 	sub	r2,r2,r19
100056ec:	d8c02344 	addi	r3,sp,141
100056f0:	1885883a 	add	r2,r3,r2
100056f4:	003f7006 	br	100054b8 <__alt_data_end+0xf80054b8>
100056f8:	0005883a 	mov	r2,zero
100056fc:	003f0f06 	br	1000533c <__alt_data_end+0xf800533c>
10005700:	d8c03217 	ldw	r3,200(sp)
10005704:	18c00044 	addi	r3,r3,1
10005708:	d8c02b15 	stw	r3,172(sp)
1000570c:	1805883a 	mov	r2,r3
10005710:	183fb20e 	bge	r3,zero,100055dc <__alt_data_end+0xf80055dc>
10005714:	0005883a 	mov	r2,zero
10005718:	003fb006 	br	100055dc <__alt_data_end+0xf80055dc>
1000571c:	d9003617 	ldw	r4,216(sp)
10005720:	000d883a 	mov	r6,zero
10005724:	000f883a 	mov	r7,zero
10005728:	980b883a 	mov	r5,r19
1000572c:	d8c03c15 	stw	r3,240(sp)
10005730:	da003d15 	stw	r8,244(sp)
10005734:	00101ac0 	call	100101ac <__eqdf2>
10005738:	d8c03c17 	ldw	r3,240(sp)
1000573c:	da003d17 	ldw	r8,244(sp)
10005740:	103f9826 	beq	r2,zero,100055a4 <__alt_data_end+0xf80055a4>
10005744:	00800044 	movi	r2,1
10005748:	10c7c83a 	sub	r3,r2,r3
1000574c:	d8c02615 	stw	r3,152(sp)
10005750:	003f9506 	br	100055a8 <__alt_data_end+0xf80055a8>
10005754:	d9002a17 	ldw	r4,168(sp)
10005758:	d8c03217 	ldw	r3,200(sp)
1000575c:	20800044 	addi	r2,r4,1
10005760:	1885883a 	add	r2,r3,r2
10005764:	d8802b15 	stw	r2,172(sp)
10005768:	103dbf0e 	bge	r2,zero,10004e68 <__alt_data_end+0xf8004e68>
1000576c:	0005883a 	mov	r2,zero
10005770:	003dbd06 	br	10004e68 <__alt_data_end+0xf8004e68>
10005774:	2000201e 	bne	r4,zero,100057f8 <___vfprintf_internal_r+0x222c>
10005778:	9480004c 	andi	r18,r18,1
1000577c:	90001e1e 	bne	r18,zero,100057f8 <___vfprintf_internal_r+0x222c>
10005780:	00800044 	movi	r2,1
10005784:	d8802b15 	stw	r2,172(sp)
10005788:	003db706 	br	10004e68 <__alt_data_end+0xf8004e68>
1000578c:	00800b44 	movi	r2,45
10005790:	05adc83a 	sub	r22,zero,r22
10005794:	d8802305 	stb	r2,140(sp)
10005798:	003f3f06 	br	10005498 <__alt_data_end+0xf8005498>
1000579c:	0005883a 	mov	r2,zero
100057a0:	003f5206 	br	100054ec <__alt_data_end+0xf80054ec>
100057a4:	90a4703a 	and	r18,r18,r2
100057a8:	903f4e26 	beq	r18,zero,100054e4 <__alt_data_end+0xf80054e4>
100057ac:	003f4a06 	br	100054d8 <__alt_data_end+0xf80054d8>
100057b0:	00800084 	movi	r2,2
100057b4:	10c5c83a 	sub	r2,r2,r3
100057b8:	003f8406 	br	100055cc <__alt_data_end+0xf80055cc>
100057bc:	d9402e17 	ldw	r5,184(sp)
100057c0:	d9002e17 	ldw	r4,184(sp)
100057c4:	ac400043 	ldbu	r17,1(r21)
100057c8:	29400017 	ldw	r5,0(r5)
100057cc:	20800104 	addi	r2,r4,4
100057d0:	d8802e15 	stw	r2,184(sp)
100057d4:	d9402a15 	stw	r5,168(sp)
100057d8:	182b883a 	mov	r21,r3
100057dc:	283e7b0e 	bge	r5,zero,100051cc <__alt_data_end+0xf80051cc>
100057e0:	8c403fcc 	andi	r17,r17,255
100057e4:	017fffc4 	movi	r5,-1
100057e8:	8c40201c 	xori	r17,r17,128
100057ec:	d9402a15 	stw	r5,168(sp)
100057f0:	8c7fe004 	addi	r17,r17,-128
100057f4:	0037d706 	br	10003754 <__alt_data_end+0xf8003754>
100057f8:	d8c02a17 	ldw	r3,168(sp)
100057fc:	18c00084 	addi	r3,r3,2
10005800:	d8c02b15 	stw	r3,172(sp)
10005804:	1805883a 	mov	r2,r3
10005808:	183d970e 	bge	r3,zero,10004e68 <__alt_data_end+0xf8004e68>
1000580c:	003fd706 	br	1000576c <__alt_data_end+0xf800576c>
10005810:	0005883a 	mov	r2,zero
10005814:	003f8f06 	br	10005654 <__alt_data_end+0xf8005654>
10005818:	9080004c 	andi	r2,r18,1
1000581c:	103f821e 	bne	r2,zero,10005628 <__alt_data_end+0xf8005628>
10005820:	d8802117 	ldw	r2,132(sp)
10005824:	1405c83a 	sub	r2,r2,r16
10005828:	d8803315 	stw	r2,204(sp)
1000582c:	b47ef426 	beq	r22,r17,10005400 <__alt_data_end+0xf8005400>
10005830:	dd802617 	ldw	r22,152(sp)
10005834:	003f1206 	br	10005480 <__alt_data_end+0xf8005480>
10005838:	d8c02b03 	ldbu	r3,172(sp)
1000583c:	d8c02785 	stb	r3,158(sp)
10005840:	0038df06 	br	10003bc0 <__alt_data_end+0xf8003bc0>
10005844:	d8c02b03 	ldbu	r3,172(sp)
10005848:	d8c02785 	stb	r3,158(sp)
1000584c:	0038aa06 	br	10003af8 <__alt_data_end+0xf8003af8>
10005850:	d8c02b03 	ldbu	r3,172(sp)
10005854:	d8c02785 	stb	r3,158(sp)
10005858:	003a4306 	br	10004168 <__alt_data_end+0xf8004168>
1000585c:	d8c02b03 	ldbu	r3,172(sp)
10005860:	d8c02785 	stb	r3,158(sp)
10005864:	003af506 	br	1000443c <__alt_data_end+0xf800443c>
10005868:	0005883a 	mov	r2,zero
1000586c:	003d7b06 	br	10004e5c <__alt_data_end+0xf8004e5c>
10005870:	d8802344 	addi	r2,sp,141
10005874:	003f1006 	br	100054b8 <__alt_data_end+0xf80054b8>
10005878:	d8c02b03 	ldbu	r3,172(sp)
1000587c:	d8c02785 	stb	r3,158(sp)
10005880:	0038fd06 	br	10003c78 <__alt_data_end+0xf8003c78>
10005884:	d8c02b03 	ldbu	r3,172(sp)
10005888:	d8c02785 	stb	r3,158(sp)
1000588c:	003a9706 	br	100042ec <__alt_data_end+0xf80042ec>
10005890:	d8c02b03 	ldbu	r3,172(sp)
10005894:	d8c02785 	stb	r3,158(sp)
10005898:	003a1806 	br	100040fc <__alt_data_end+0xf80040fc>
1000589c:	d8c02b03 	ldbu	r3,172(sp)
100058a0:	d8c02785 	stb	r3,158(sp)
100058a4:	003abe06 	br	100043a0 <__alt_data_end+0xf80043a0>

100058a8 <__vfprintf_internal>:
100058a8:	00840074 	movhi	r2,4097
100058ac:	10987604 	addi	r2,r2,25048
100058b0:	300f883a 	mov	r7,r6
100058b4:	280d883a 	mov	r6,r5
100058b8:	200b883a 	mov	r5,r4
100058bc:	11000017 	ldw	r4,0(r2)
100058c0:	00035cc1 	jmpi	100035cc <___vfprintf_internal_r>

100058c4 <__sbprintf>:
100058c4:	2880030b 	ldhu	r2,12(r5)
100058c8:	2ac01917 	ldw	r11,100(r5)
100058cc:	2a80038b 	ldhu	r10,14(r5)
100058d0:	2a400717 	ldw	r9,28(r5)
100058d4:	2a000917 	ldw	r8,36(r5)
100058d8:	defee204 	addi	sp,sp,-1144
100058dc:	00c10004 	movi	r3,1024
100058e0:	dc011a15 	stw	r16,1128(sp)
100058e4:	10bfff4c 	andi	r2,r2,65533
100058e8:	2821883a 	mov	r16,r5
100058ec:	d8cb883a 	add	r5,sp,r3
100058f0:	dc811c15 	stw	r18,1136(sp)
100058f4:	dc411b15 	stw	r17,1132(sp)
100058f8:	dfc11d15 	stw	ra,1140(sp)
100058fc:	2025883a 	mov	r18,r4
10005900:	d881030d 	sth	r2,1036(sp)
10005904:	dac11915 	stw	r11,1124(sp)
10005908:	da81038d 	sth	r10,1038(sp)
1000590c:	da410715 	stw	r9,1052(sp)
10005910:	da010915 	stw	r8,1060(sp)
10005914:	dec10015 	stw	sp,1024(sp)
10005918:	dec10415 	stw	sp,1040(sp)
1000591c:	d8c10215 	stw	r3,1032(sp)
10005920:	d8c10515 	stw	r3,1044(sp)
10005924:	d8010615 	stw	zero,1048(sp)
10005928:	00035cc0 	call	100035cc <___vfprintf_internal_r>
1000592c:	1023883a 	mov	r17,r2
10005930:	10000416 	blt	r2,zero,10005944 <__sbprintf+0x80>
10005934:	d9410004 	addi	r5,sp,1024
10005938:	9009883a 	mov	r4,r18
1000593c:	00075a00 	call	100075a0 <_fflush_r>
10005940:	10000d1e 	bne	r2,zero,10005978 <__sbprintf+0xb4>
10005944:	d881030b 	ldhu	r2,1036(sp)
10005948:	1080100c 	andi	r2,r2,64
1000594c:	10000326 	beq	r2,zero,1000595c <__sbprintf+0x98>
10005950:	8080030b 	ldhu	r2,12(r16)
10005954:	10801014 	ori	r2,r2,64
10005958:	8080030d 	sth	r2,12(r16)
1000595c:	8805883a 	mov	r2,r17
10005960:	dfc11d17 	ldw	ra,1140(sp)
10005964:	dc811c17 	ldw	r18,1136(sp)
10005968:	dc411b17 	ldw	r17,1132(sp)
1000596c:	dc011a17 	ldw	r16,1128(sp)
10005970:	dec11e04 	addi	sp,sp,1144
10005974:	f800283a 	ret
10005978:	047fffc4 	movi	r17,-1
1000597c:	003ff106 	br	10005944 <__alt_data_end+0xf8005944>

10005980 <__swsetup_r>:
10005980:	00840074 	movhi	r2,4097
10005984:	defffd04 	addi	sp,sp,-12
10005988:	10987604 	addi	r2,r2,25048
1000598c:	dc400115 	stw	r17,4(sp)
10005990:	2023883a 	mov	r17,r4
10005994:	11000017 	ldw	r4,0(r2)
10005998:	dc000015 	stw	r16,0(sp)
1000599c:	dfc00215 	stw	ra,8(sp)
100059a0:	2821883a 	mov	r16,r5
100059a4:	20000226 	beq	r4,zero,100059b0 <__swsetup_r+0x30>
100059a8:	20800e17 	ldw	r2,56(r4)
100059ac:	10003126 	beq	r2,zero,10005a74 <__swsetup_r+0xf4>
100059b0:	8080030b 	ldhu	r2,12(r16)
100059b4:	10c0020c 	andi	r3,r2,8
100059b8:	1009883a 	mov	r4,r2
100059bc:	18000f26 	beq	r3,zero,100059fc <__swsetup_r+0x7c>
100059c0:	80c00417 	ldw	r3,16(r16)
100059c4:	18001526 	beq	r3,zero,10005a1c <__swsetup_r+0x9c>
100059c8:	1100004c 	andi	r4,r2,1
100059cc:	20001c1e 	bne	r4,zero,10005a40 <__swsetup_r+0xc0>
100059d0:	1080008c 	andi	r2,r2,2
100059d4:	1000291e 	bne	r2,zero,10005a7c <__swsetup_r+0xfc>
100059d8:	80800517 	ldw	r2,20(r16)
100059dc:	80800215 	stw	r2,8(r16)
100059e0:	18001c26 	beq	r3,zero,10005a54 <__swsetup_r+0xd4>
100059e4:	0005883a 	mov	r2,zero
100059e8:	dfc00217 	ldw	ra,8(sp)
100059ec:	dc400117 	ldw	r17,4(sp)
100059f0:	dc000017 	ldw	r16,0(sp)
100059f4:	dec00304 	addi	sp,sp,12
100059f8:	f800283a 	ret
100059fc:	2080040c 	andi	r2,r4,16
10005a00:	10002e26 	beq	r2,zero,10005abc <__swsetup_r+0x13c>
10005a04:	2080010c 	andi	r2,r4,4
10005a08:	10001e1e 	bne	r2,zero,10005a84 <__swsetup_r+0x104>
10005a0c:	80c00417 	ldw	r3,16(r16)
10005a10:	20800214 	ori	r2,r4,8
10005a14:	8080030d 	sth	r2,12(r16)
10005a18:	183feb1e 	bne	r3,zero,100059c8 <__alt_data_end+0xf80059c8>
10005a1c:	1100a00c 	andi	r4,r2,640
10005a20:	01408004 	movi	r5,512
10005a24:	217fe826 	beq	r4,r5,100059c8 <__alt_data_end+0xf80059c8>
10005a28:	800b883a 	mov	r5,r16
10005a2c:	8809883a 	mov	r4,r17
10005a30:	000853c0 	call	1000853c <__smakebuf_r>
10005a34:	8080030b 	ldhu	r2,12(r16)
10005a38:	80c00417 	ldw	r3,16(r16)
10005a3c:	003fe206 	br	100059c8 <__alt_data_end+0xf80059c8>
10005a40:	80800517 	ldw	r2,20(r16)
10005a44:	80000215 	stw	zero,8(r16)
10005a48:	0085c83a 	sub	r2,zero,r2
10005a4c:	80800615 	stw	r2,24(r16)
10005a50:	183fe41e 	bne	r3,zero,100059e4 <__alt_data_end+0xf80059e4>
10005a54:	80c0030b 	ldhu	r3,12(r16)
10005a58:	0005883a 	mov	r2,zero
10005a5c:	1900200c 	andi	r4,r3,128
10005a60:	203fe126 	beq	r4,zero,100059e8 <__alt_data_end+0xf80059e8>
10005a64:	18c01014 	ori	r3,r3,64
10005a68:	80c0030d 	sth	r3,12(r16)
10005a6c:	00bfffc4 	movi	r2,-1
10005a70:	003fdd06 	br	100059e8 <__alt_data_end+0xf80059e8>
10005a74:	000798c0 	call	1000798c <__sinit>
10005a78:	003fcd06 	br	100059b0 <__alt_data_end+0xf80059b0>
10005a7c:	0005883a 	mov	r2,zero
10005a80:	003fd606 	br	100059dc <__alt_data_end+0xf80059dc>
10005a84:	81400c17 	ldw	r5,48(r16)
10005a88:	28000626 	beq	r5,zero,10005aa4 <__swsetup_r+0x124>
10005a8c:	80801004 	addi	r2,r16,64
10005a90:	28800326 	beq	r5,r2,10005aa0 <__swsetup_r+0x120>
10005a94:	8809883a 	mov	r4,r17
10005a98:	0007b000 	call	10007b00 <_free_r>
10005a9c:	8100030b 	ldhu	r4,12(r16)
10005aa0:	80000c15 	stw	zero,48(r16)
10005aa4:	80c00417 	ldw	r3,16(r16)
10005aa8:	00bff6c4 	movi	r2,-37
10005aac:	1108703a 	and	r4,r2,r4
10005ab0:	80000115 	stw	zero,4(r16)
10005ab4:	80c00015 	stw	r3,0(r16)
10005ab8:	003fd506 	br	10005a10 <__alt_data_end+0xf8005a10>
10005abc:	00800244 	movi	r2,9
10005ac0:	88800015 	stw	r2,0(r17)
10005ac4:	20801014 	ori	r2,r4,64
10005ac8:	8080030d 	sth	r2,12(r16)
10005acc:	00bfffc4 	movi	r2,-1
10005ad0:	003fc506 	br	100059e8 <__alt_data_end+0xf80059e8>

10005ad4 <quorem>:
10005ad4:	defff204 	addi	sp,sp,-56
10005ad8:	ddc00b15 	stw	r23,44(sp)
10005adc:	20800417 	ldw	r2,16(r4)
10005ae0:	2dc00417 	ldw	r23,16(r5)
10005ae4:	dfc00d15 	stw	ra,52(sp)
10005ae8:	df000c15 	stw	fp,48(sp)
10005aec:	dd800a15 	stw	r22,40(sp)
10005af0:	dd400915 	stw	r21,36(sp)
10005af4:	dd000815 	stw	r20,32(sp)
10005af8:	dcc00715 	stw	r19,28(sp)
10005afc:	dc800615 	stw	r18,24(sp)
10005b00:	dc400515 	stw	r17,20(sp)
10005b04:	dc000415 	stw	r16,16(sp)
10005b08:	15c07a16 	blt	r2,r23,10005cf4 <quorem+0x220>
10005b0c:	bdffffc4 	addi	r23,r23,-1
10005b10:	bde9883a 	add	r20,r23,r23
10005b14:	28c00504 	addi	r3,r5,20
10005b18:	a529883a 	add	r20,r20,r20
10005b1c:	1d39883a 	add	fp,r3,r20
10005b20:	24c00504 	addi	r19,r4,20
10005b24:	d9400215 	stw	r5,8(sp)
10005b28:	9d29883a 	add	r20,r19,r20
10005b2c:	e1400017 	ldw	r5,0(fp)
10005b30:	d9000015 	stw	r4,0(sp)
10005b34:	a1000017 	ldw	r4,0(r20)
10005b38:	29400044 	addi	r5,r5,1
10005b3c:	d8c00115 	stw	r3,4(sp)
10005b40:	dd000315 	stw	r20,12(sp)
10005b44:	0000f140 	call	10000f14 <__udivsi3>
10005b48:	1025883a 	mov	r18,r2
10005b4c:	10003026 	beq	r2,zero,10005c10 <quorem+0x13c>
10005b50:	dc400117 	ldw	r17,4(sp)
10005b54:	9829883a 	mov	r20,r19
10005b58:	002d883a 	mov	r22,zero
10005b5c:	0021883a 	mov	r16,zero
10005b60:	8d400017 	ldw	r21,0(r17)
10005b64:	900b883a 	mov	r5,r18
10005b68:	8c400104 	addi	r17,r17,4
10005b6c:	a93fffcc 	andi	r4,r21,65535
10005b70:	0000fd00 	call	10000fd0 <__mulsi3>
10005b74:	a808d43a 	srli	r4,r21,16
10005b78:	900b883a 	mov	r5,r18
10005b7c:	15ad883a 	add	r22,r2,r22
10005b80:	0000fd00 	call	10000fd0 <__mulsi3>
10005b84:	a1000017 	ldw	r4,0(r20)
10005b88:	b00cd43a 	srli	r6,r22,16
10005b8c:	b0ffffcc 	andi	r3,r22,65535
10005b90:	217fffcc 	andi	r5,r4,65535
10005b94:	2c21883a 	add	r16,r5,r16
10005b98:	80c7c83a 	sub	r3,r16,r3
10005b9c:	2008d43a 	srli	r4,r4,16
10005ba0:	1185883a 	add	r2,r2,r6
10005ba4:	1821d43a 	srai	r16,r3,16
10005ba8:	117fffcc 	andi	r5,r2,65535
10005bac:	2149c83a 	sub	r4,r4,r5
10005bb0:	2421883a 	add	r16,r4,r16
10005bb4:	8008943a 	slli	r4,r16,16
10005bb8:	18ffffcc 	andi	r3,r3,65535
10005bbc:	102cd43a 	srli	r22,r2,16
10005bc0:	20c8b03a 	or	r4,r4,r3
10005bc4:	a1000015 	stw	r4,0(r20)
10005bc8:	8021d43a 	srai	r16,r16,16
10005bcc:	a5000104 	addi	r20,r20,4
10005bd0:	e47fe32e 	bgeu	fp,r17,10005b60 <__alt_data_end+0xf8005b60>
10005bd4:	d8c00317 	ldw	r3,12(sp)
10005bd8:	18800017 	ldw	r2,0(r3)
10005bdc:	10000c1e 	bne	r2,zero,10005c10 <quorem+0x13c>
10005be0:	18bfff04 	addi	r2,r3,-4
10005be4:	9880082e 	bgeu	r19,r2,10005c08 <quorem+0x134>
10005be8:	18ffff17 	ldw	r3,-4(r3)
10005bec:	18000326 	beq	r3,zero,10005bfc <quorem+0x128>
10005bf0:	00000506 	br	10005c08 <quorem+0x134>
10005bf4:	10c00017 	ldw	r3,0(r2)
10005bf8:	1800031e 	bne	r3,zero,10005c08 <quorem+0x134>
10005bfc:	10bfff04 	addi	r2,r2,-4
10005c00:	bdffffc4 	addi	r23,r23,-1
10005c04:	98bffb36 	bltu	r19,r2,10005bf4 <__alt_data_end+0xf8005bf4>
10005c08:	d8c00017 	ldw	r3,0(sp)
10005c0c:	1dc00415 	stw	r23,16(r3)
10005c10:	d9400217 	ldw	r5,8(sp)
10005c14:	d9000017 	ldw	r4,0(sp)
10005c18:	0009d380 	call	10009d38 <__mcmp>
10005c1c:	10002816 	blt	r2,zero,10005cc0 <quorem+0x1ec>
10005c20:	dc400117 	ldw	r17,4(sp)
10005c24:	94800044 	addi	r18,r18,1
10005c28:	980d883a 	mov	r6,r19
10005c2c:	0007883a 	mov	r3,zero
10005c30:	31000017 	ldw	r4,0(r6)
10005c34:	89400017 	ldw	r5,0(r17)
10005c38:	31800104 	addi	r6,r6,4
10005c3c:	20bfffcc 	andi	r2,r4,65535
10005c40:	10c7883a 	add	r3,r2,r3
10005c44:	28bfffcc 	andi	r2,r5,65535
10005c48:	1885c83a 	sub	r2,r3,r2
10005c4c:	280ad43a 	srli	r5,r5,16
10005c50:	2008d43a 	srli	r4,r4,16
10005c54:	1007d43a 	srai	r3,r2,16
10005c58:	10bfffcc 	andi	r2,r2,65535
10005c5c:	2149c83a 	sub	r4,r4,r5
10005c60:	20c9883a 	add	r4,r4,r3
10005c64:	200a943a 	slli	r5,r4,16
10005c68:	8c400104 	addi	r17,r17,4
10005c6c:	2007d43a 	srai	r3,r4,16
10005c70:	2884b03a 	or	r2,r5,r2
10005c74:	30bfff15 	stw	r2,-4(r6)
10005c78:	e47fed2e 	bgeu	fp,r17,10005c30 <__alt_data_end+0xf8005c30>
10005c7c:	bdc5883a 	add	r2,r23,r23
10005c80:	1085883a 	add	r2,r2,r2
10005c84:	9887883a 	add	r3,r19,r2
10005c88:	18800017 	ldw	r2,0(r3)
10005c8c:	10000c1e 	bne	r2,zero,10005cc0 <quorem+0x1ec>
10005c90:	18bfff04 	addi	r2,r3,-4
10005c94:	9880082e 	bgeu	r19,r2,10005cb8 <quorem+0x1e4>
10005c98:	18ffff17 	ldw	r3,-4(r3)
10005c9c:	18000326 	beq	r3,zero,10005cac <quorem+0x1d8>
10005ca0:	00000506 	br	10005cb8 <quorem+0x1e4>
10005ca4:	10c00017 	ldw	r3,0(r2)
10005ca8:	1800031e 	bne	r3,zero,10005cb8 <quorem+0x1e4>
10005cac:	10bfff04 	addi	r2,r2,-4
10005cb0:	bdffffc4 	addi	r23,r23,-1
10005cb4:	98bffb36 	bltu	r19,r2,10005ca4 <__alt_data_end+0xf8005ca4>
10005cb8:	d8c00017 	ldw	r3,0(sp)
10005cbc:	1dc00415 	stw	r23,16(r3)
10005cc0:	9005883a 	mov	r2,r18
10005cc4:	dfc00d17 	ldw	ra,52(sp)
10005cc8:	df000c17 	ldw	fp,48(sp)
10005ccc:	ddc00b17 	ldw	r23,44(sp)
10005cd0:	dd800a17 	ldw	r22,40(sp)
10005cd4:	dd400917 	ldw	r21,36(sp)
10005cd8:	dd000817 	ldw	r20,32(sp)
10005cdc:	dcc00717 	ldw	r19,28(sp)
10005ce0:	dc800617 	ldw	r18,24(sp)
10005ce4:	dc400517 	ldw	r17,20(sp)
10005ce8:	dc000417 	ldw	r16,16(sp)
10005cec:	dec00e04 	addi	sp,sp,56
10005cf0:	f800283a 	ret
10005cf4:	0005883a 	mov	r2,zero
10005cf8:	003ff206 	br	10005cc4 <__alt_data_end+0xf8005cc4>

10005cfc <_dtoa_r>:
10005cfc:	20801017 	ldw	r2,64(r4)
10005d00:	deffde04 	addi	sp,sp,-136
10005d04:	df002015 	stw	fp,128(sp)
10005d08:	dcc01b15 	stw	r19,108(sp)
10005d0c:	dc801a15 	stw	r18,104(sp)
10005d10:	dc401915 	stw	r17,100(sp)
10005d14:	dc001815 	stw	r16,96(sp)
10005d18:	dfc02115 	stw	ra,132(sp)
10005d1c:	ddc01f15 	stw	r23,124(sp)
10005d20:	dd801e15 	stw	r22,120(sp)
10005d24:	dd401d15 	stw	r21,116(sp)
10005d28:	dd001c15 	stw	r20,112(sp)
10005d2c:	d9c00315 	stw	r7,12(sp)
10005d30:	2039883a 	mov	fp,r4
10005d34:	3023883a 	mov	r17,r6
10005d38:	2825883a 	mov	r18,r5
10005d3c:	dc002417 	ldw	r16,144(sp)
10005d40:	3027883a 	mov	r19,r6
10005d44:	10000826 	beq	r2,zero,10005d68 <_dtoa_r+0x6c>
10005d48:	21801117 	ldw	r6,68(r4)
10005d4c:	00c00044 	movi	r3,1
10005d50:	100b883a 	mov	r5,r2
10005d54:	1986983a 	sll	r3,r3,r6
10005d58:	11800115 	stw	r6,4(r2)
10005d5c:	10c00215 	stw	r3,8(r2)
10005d60:	000945c0 	call	1000945c <_Bfree>
10005d64:	e0001015 	stw	zero,64(fp)
10005d68:	88002e16 	blt	r17,zero,10005e24 <_dtoa_r+0x128>
10005d6c:	80000015 	stw	zero,0(r16)
10005d70:	889ffc2c 	andhi	r2,r17,32752
10005d74:	00dffc34 	movhi	r3,32752
10005d78:	10c01c26 	beq	r2,r3,10005dec <_dtoa_r+0xf0>
10005d7c:	000d883a 	mov	r6,zero
10005d80:	000f883a 	mov	r7,zero
10005d84:	9009883a 	mov	r4,r18
10005d88:	980b883a 	mov	r5,r19
10005d8c:	00101ac0 	call	100101ac <__eqdf2>
10005d90:	10002b1e 	bne	r2,zero,10005e40 <_dtoa_r+0x144>
10005d94:	d9c02317 	ldw	r7,140(sp)
10005d98:	00800044 	movi	r2,1
10005d9c:	38800015 	stw	r2,0(r7)
10005da0:	d8802517 	ldw	r2,148(sp)
10005da4:	10019e26 	beq	r2,zero,10006420 <_dtoa_r+0x724>
10005da8:	d8c02517 	ldw	r3,148(sp)
10005dac:	00840074 	movhi	r2,4097
10005db0:	10905144 	addi	r2,r2,16709
10005db4:	18800015 	stw	r2,0(r3)
10005db8:	10bfffc4 	addi	r2,r2,-1
10005dbc:	dfc02117 	ldw	ra,132(sp)
10005dc0:	df002017 	ldw	fp,128(sp)
10005dc4:	ddc01f17 	ldw	r23,124(sp)
10005dc8:	dd801e17 	ldw	r22,120(sp)
10005dcc:	dd401d17 	ldw	r21,116(sp)
10005dd0:	dd001c17 	ldw	r20,112(sp)
10005dd4:	dcc01b17 	ldw	r19,108(sp)
10005dd8:	dc801a17 	ldw	r18,104(sp)
10005ddc:	dc401917 	ldw	r17,100(sp)
10005de0:	dc001817 	ldw	r16,96(sp)
10005de4:	dec02204 	addi	sp,sp,136
10005de8:	f800283a 	ret
10005dec:	d8c02317 	ldw	r3,140(sp)
10005df0:	0089c3c4 	movi	r2,9999
10005df4:	18800015 	stw	r2,0(r3)
10005df8:	90017726 	beq	r18,zero,100063d8 <_dtoa_r+0x6dc>
10005dfc:	00840074 	movhi	r2,4097
10005e00:	10906504 	addi	r2,r2,16788
10005e04:	d9002517 	ldw	r4,148(sp)
10005e08:	203fec26 	beq	r4,zero,10005dbc <__alt_data_end+0xf8005dbc>
10005e0c:	10c000c7 	ldb	r3,3(r2)
10005e10:	1801781e 	bne	r3,zero,100063f4 <_dtoa_r+0x6f8>
10005e14:	10c000c4 	addi	r3,r2,3
10005e18:	d9802517 	ldw	r6,148(sp)
10005e1c:	30c00015 	stw	r3,0(r6)
10005e20:	003fe606 	br	10005dbc <__alt_data_end+0xf8005dbc>
10005e24:	04e00034 	movhi	r19,32768
10005e28:	9cffffc4 	addi	r19,r19,-1
10005e2c:	00800044 	movi	r2,1
10005e30:	8ce6703a 	and	r19,r17,r19
10005e34:	80800015 	stw	r2,0(r16)
10005e38:	9823883a 	mov	r17,r19
10005e3c:	003fcc06 	br	10005d70 <__alt_data_end+0xf8005d70>
10005e40:	d8800204 	addi	r2,sp,8
10005e44:	d8800015 	stw	r2,0(sp)
10005e48:	d9c00104 	addi	r7,sp,4
10005e4c:	900b883a 	mov	r5,r18
10005e50:	980d883a 	mov	r6,r19
10005e54:	e009883a 	mov	r4,fp
10005e58:	8820d53a 	srli	r16,r17,20
10005e5c:	000a1040 	call	1000a104 <__d2b>
10005e60:	d8800915 	stw	r2,36(sp)
10005e64:	8001651e 	bne	r16,zero,100063fc <_dtoa_r+0x700>
10005e68:	dd800217 	ldw	r22,8(sp)
10005e6c:	dc000117 	ldw	r16,4(sp)
10005e70:	00800804 	movi	r2,32
10005e74:	b421883a 	add	r16,r22,r16
10005e78:	80c10c84 	addi	r3,r16,1074
10005e7c:	10c2d10e 	bge	r2,r3,100069c4 <_dtoa_r+0xcc8>
10005e80:	00801004 	movi	r2,64
10005e84:	81010484 	addi	r4,r16,1042
10005e88:	10c7c83a 	sub	r3,r2,r3
10005e8c:	9108d83a 	srl	r4,r18,r4
10005e90:	88e2983a 	sll	r17,r17,r3
10005e94:	2448b03a 	or	r4,r4,r17
10005e98:	00116c80 	call	100116c8 <__floatunsidf>
10005e9c:	017f8434 	movhi	r5,65040
10005ea0:	01800044 	movi	r6,1
10005ea4:	1009883a 	mov	r4,r2
10005ea8:	194b883a 	add	r5,r3,r5
10005eac:	843fffc4 	addi	r16,r16,-1
10005eb0:	d9801115 	stw	r6,68(sp)
10005eb4:	000d883a 	mov	r6,zero
10005eb8:	01cffe34 	movhi	r7,16376
10005ebc:	0010c700 	call	10010c70 <__subdf3>
10005ec0:	0198dbf4 	movhi	r6,25455
10005ec4:	01cff4f4 	movhi	r7,16339
10005ec8:	3190d844 	addi	r6,r6,17249
10005ecc:	39e1e9c4 	addi	r7,r7,-30809
10005ed0:	1009883a 	mov	r4,r2
10005ed4:	180b883a 	mov	r5,r3
10005ed8:	00104040 	call	10010404 <__muldf3>
10005edc:	01a2d874 	movhi	r6,35681
10005ee0:	01cff1f4 	movhi	r7,16327
10005ee4:	31b22cc4 	addi	r6,r6,-14157
10005ee8:	39e28a04 	addi	r7,r7,-30168
10005eec:	180b883a 	mov	r5,r3
10005ef0:	1009883a 	mov	r4,r2
10005ef4:	000ef300 	call	1000ef30 <__adddf3>
10005ef8:	8009883a 	mov	r4,r16
10005efc:	1029883a 	mov	r20,r2
10005f00:	1823883a 	mov	r17,r3
10005f04:	00115ec0 	call	100115ec <__floatsidf>
10005f08:	019427f4 	movhi	r6,20639
10005f0c:	01cff4f4 	movhi	r7,16339
10005f10:	319e7ec4 	addi	r6,r6,31227
10005f14:	39d104c4 	addi	r7,r7,17427
10005f18:	1009883a 	mov	r4,r2
10005f1c:	180b883a 	mov	r5,r3
10005f20:	00104040 	call	10010404 <__muldf3>
10005f24:	100d883a 	mov	r6,r2
10005f28:	180f883a 	mov	r7,r3
10005f2c:	a009883a 	mov	r4,r20
10005f30:	880b883a 	mov	r5,r17
10005f34:	000ef300 	call	1000ef30 <__adddf3>
10005f38:	1009883a 	mov	r4,r2
10005f3c:	180b883a 	mov	r5,r3
10005f40:	1029883a 	mov	r20,r2
10005f44:	1823883a 	mov	r17,r3
10005f48:	001156c0 	call	1001156c <__fixdfsi>
10005f4c:	000d883a 	mov	r6,zero
10005f50:	000f883a 	mov	r7,zero
10005f54:	a009883a 	mov	r4,r20
10005f58:	880b883a 	mov	r5,r17
10005f5c:	d8800515 	stw	r2,20(sp)
10005f60:	00103100 	call	10010310 <__ledf2>
10005f64:	10028716 	blt	r2,zero,10006984 <_dtoa_r+0xc88>
10005f68:	d8c00517 	ldw	r3,20(sp)
10005f6c:	00800584 	movi	r2,22
10005f70:	10c27536 	bltu	r2,r3,10006948 <_dtoa_r+0xc4c>
10005f74:	180490fa 	slli	r2,r3,3
10005f78:	00c40074 	movhi	r3,4097
10005f7c:	18d08104 	addi	r3,r3,16900
10005f80:	1885883a 	add	r2,r3,r2
10005f84:	11000017 	ldw	r4,0(r2)
10005f88:	11400117 	ldw	r5,4(r2)
10005f8c:	900d883a 	mov	r6,r18
10005f90:	980f883a 	mov	r7,r19
10005f94:	00102340 	call	10010234 <__gedf2>
10005f98:	00828d0e 	bge	zero,r2,100069d0 <_dtoa_r+0xcd4>
10005f9c:	d9000517 	ldw	r4,20(sp)
10005fa0:	d8000e15 	stw	zero,56(sp)
10005fa4:	213fffc4 	addi	r4,r4,-1
10005fa8:	d9000515 	stw	r4,20(sp)
10005fac:	b42dc83a 	sub	r22,r22,r16
10005fb0:	b5bfffc4 	addi	r22,r22,-1
10005fb4:	b0026f16 	blt	r22,zero,10006974 <_dtoa_r+0xc78>
10005fb8:	d8000815 	stw	zero,32(sp)
10005fbc:	d9c00517 	ldw	r7,20(sp)
10005fc0:	38026416 	blt	r7,zero,10006954 <_dtoa_r+0xc58>
10005fc4:	b1ed883a 	add	r22,r22,r7
10005fc8:	d9c00d15 	stw	r7,52(sp)
10005fcc:	d8000a15 	stw	zero,40(sp)
10005fd0:	d9800317 	ldw	r6,12(sp)
10005fd4:	00800244 	movi	r2,9
10005fd8:	11811436 	bltu	r2,r6,1000642c <_dtoa_r+0x730>
10005fdc:	00800144 	movi	r2,5
10005fe0:	1184e10e 	bge	r2,r6,10007368 <_dtoa_r+0x166c>
10005fe4:	31bfff04 	addi	r6,r6,-4
10005fe8:	d9800315 	stw	r6,12(sp)
10005fec:	0023883a 	mov	r17,zero
10005ff0:	d9800317 	ldw	r6,12(sp)
10005ff4:	008000c4 	movi	r2,3
10005ff8:	30836726 	beq	r6,r2,10006d98 <_dtoa_r+0x109c>
10005ffc:	1183410e 	bge	r2,r6,10006d04 <_dtoa_r+0x1008>
10006000:	d9c00317 	ldw	r7,12(sp)
10006004:	00800104 	movi	r2,4
10006008:	38827c26 	beq	r7,r2,100069fc <_dtoa_r+0xd00>
1000600c:	00800144 	movi	r2,5
10006010:	3884c41e 	bne	r7,r2,10007324 <_dtoa_r+0x1628>
10006014:	00800044 	movi	r2,1
10006018:	d8800b15 	stw	r2,44(sp)
1000601c:	d8c00517 	ldw	r3,20(sp)
10006020:	d9002217 	ldw	r4,136(sp)
10006024:	1907883a 	add	r3,r3,r4
10006028:	19800044 	addi	r6,r3,1
1000602c:	d8c00c15 	stw	r3,48(sp)
10006030:	d9800615 	stw	r6,24(sp)
10006034:	0183a40e 	bge	zero,r6,10006ec8 <_dtoa_r+0x11cc>
10006038:	d9800617 	ldw	r6,24(sp)
1000603c:	3021883a 	mov	r16,r6
10006040:	e0001115 	stw	zero,68(fp)
10006044:	008005c4 	movi	r2,23
10006048:	1184c92e 	bgeu	r2,r6,10007370 <_dtoa_r+0x1674>
1000604c:	00c00044 	movi	r3,1
10006050:	00800104 	movi	r2,4
10006054:	1085883a 	add	r2,r2,r2
10006058:	11000504 	addi	r4,r2,20
1000605c:	180b883a 	mov	r5,r3
10006060:	18c00044 	addi	r3,r3,1
10006064:	313ffb2e 	bgeu	r6,r4,10006054 <__alt_data_end+0xf8006054>
10006068:	e1401115 	stw	r5,68(fp)
1000606c:	e009883a 	mov	r4,fp
10006070:	00093b40 	call	100093b4 <_Balloc>
10006074:	d8800715 	stw	r2,28(sp)
10006078:	e0801015 	stw	r2,64(fp)
1000607c:	00800384 	movi	r2,14
10006080:	1400f736 	bltu	r2,r16,10006460 <_dtoa_r+0x764>
10006084:	8800f626 	beq	r17,zero,10006460 <_dtoa_r+0x764>
10006088:	d9c00517 	ldw	r7,20(sp)
1000608c:	01c39a0e 	bge	zero,r7,10006ef8 <_dtoa_r+0x11fc>
10006090:	388003cc 	andi	r2,r7,15
10006094:	100490fa 	slli	r2,r2,3
10006098:	382bd13a 	srai	r21,r7,4
1000609c:	00c40074 	movhi	r3,4097
100060a0:	18d08104 	addi	r3,r3,16900
100060a4:	1885883a 	add	r2,r3,r2
100060a8:	a8c0040c 	andi	r3,r21,16
100060ac:	12400017 	ldw	r9,0(r2)
100060b0:	12000117 	ldw	r8,4(r2)
100060b4:	18037926 	beq	r3,zero,10006e9c <_dtoa_r+0x11a0>
100060b8:	00840074 	movhi	r2,4097
100060bc:	10907704 	addi	r2,r2,16860
100060c0:	11800817 	ldw	r6,32(r2)
100060c4:	11c00917 	ldw	r7,36(r2)
100060c8:	9009883a 	mov	r4,r18
100060cc:	980b883a 	mov	r5,r19
100060d0:	da001715 	stw	r8,92(sp)
100060d4:	da401615 	stw	r9,88(sp)
100060d8:	000f7dc0 	call	1000f7dc <__divdf3>
100060dc:	da001717 	ldw	r8,92(sp)
100060e0:	da401617 	ldw	r9,88(sp)
100060e4:	ad4003cc 	andi	r21,r21,15
100060e8:	040000c4 	movi	r16,3
100060ec:	1023883a 	mov	r17,r2
100060f0:	1829883a 	mov	r20,r3
100060f4:	a8001126 	beq	r21,zero,1000613c <_dtoa_r+0x440>
100060f8:	05c40074 	movhi	r23,4097
100060fc:	bdd07704 	addi	r23,r23,16860
10006100:	4805883a 	mov	r2,r9
10006104:	4007883a 	mov	r3,r8
10006108:	a980004c 	andi	r6,r21,1
1000610c:	1009883a 	mov	r4,r2
10006110:	a82bd07a 	srai	r21,r21,1
10006114:	180b883a 	mov	r5,r3
10006118:	30000426 	beq	r6,zero,1000612c <_dtoa_r+0x430>
1000611c:	b9800017 	ldw	r6,0(r23)
10006120:	b9c00117 	ldw	r7,4(r23)
10006124:	84000044 	addi	r16,r16,1
10006128:	00104040 	call	10010404 <__muldf3>
1000612c:	bdc00204 	addi	r23,r23,8
10006130:	a83ff51e 	bne	r21,zero,10006108 <__alt_data_end+0xf8006108>
10006134:	1013883a 	mov	r9,r2
10006138:	1811883a 	mov	r8,r3
1000613c:	480d883a 	mov	r6,r9
10006140:	400f883a 	mov	r7,r8
10006144:	8809883a 	mov	r4,r17
10006148:	a00b883a 	mov	r5,r20
1000614c:	000f7dc0 	call	1000f7dc <__divdf3>
10006150:	d8800f15 	stw	r2,60(sp)
10006154:	d8c01015 	stw	r3,64(sp)
10006158:	d8c00e17 	ldw	r3,56(sp)
1000615c:	18000626 	beq	r3,zero,10006178 <_dtoa_r+0x47c>
10006160:	d9000f17 	ldw	r4,60(sp)
10006164:	d9401017 	ldw	r5,64(sp)
10006168:	000d883a 	mov	r6,zero
1000616c:	01cffc34 	movhi	r7,16368
10006170:	00103100 	call	10010310 <__ledf2>
10006174:	10040b16 	blt	r2,zero,100071a4 <_dtoa_r+0x14a8>
10006178:	8009883a 	mov	r4,r16
1000617c:	00115ec0 	call	100115ec <__floatsidf>
10006180:	d9800f17 	ldw	r6,60(sp)
10006184:	d9c01017 	ldw	r7,64(sp)
10006188:	1009883a 	mov	r4,r2
1000618c:	180b883a 	mov	r5,r3
10006190:	00104040 	call	10010404 <__muldf3>
10006194:	000d883a 	mov	r6,zero
10006198:	01d00734 	movhi	r7,16412
1000619c:	1009883a 	mov	r4,r2
100061a0:	180b883a 	mov	r5,r3
100061a4:	000ef300 	call	1000ef30 <__adddf3>
100061a8:	1021883a 	mov	r16,r2
100061ac:	d8800617 	ldw	r2,24(sp)
100061b0:	047f3034 	movhi	r17,64704
100061b4:	1c63883a 	add	r17,r3,r17
100061b8:	10031826 	beq	r2,zero,10006e1c <_dtoa_r+0x1120>
100061bc:	d8c00517 	ldw	r3,20(sp)
100061c0:	db000617 	ldw	r12,24(sp)
100061c4:	d8c01315 	stw	r3,76(sp)
100061c8:	d9000b17 	ldw	r4,44(sp)
100061cc:	20038f26 	beq	r4,zero,1000700c <_dtoa_r+0x1310>
100061d0:	60bfffc4 	addi	r2,r12,-1
100061d4:	100490fa 	slli	r2,r2,3
100061d8:	00c40074 	movhi	r3,4097
100061dc:	18d08104 	addi	r3,r3,16900
100061e0:	1885883a 	add	r2,r3,r2
100061e4:	11800017 	ldw	r6,0(r2)
100061e8:	11c00117 	ldw	r7,4(r2)
100061ec:	d8800717 	ldw	r2,28(sp)
100061f0:	0009883a 	mov	r4,zero
100061f4:	014ff834 	movhi	r5,16352
100061f8:	db001615 	stw	r12,88(sp)
100061fc:	15c00044 	addi	r23,r2,1
10006200:	000f7dc0 	call	1000f7dc <__divdf3>
10006204:	800d883a 	mov	r6,r16
10006208:	880f883a 	mov	r7,r17
1000620c:	1009883a 	mov	r4,r2
10006210:	180b883a 	mov	r5,r3
10006214:	0010c700 	call	10010c70 <__subdf3>
10006218:	d9401017 	ldw	r5,64(sp)
1000621c:	d9000f17 	ldw	r4,60(sp)
10006220:	102b883a 	mov	r21,r2
10006224:	d8c01215 	stw	r3,72(sp)
10006228:	001156c0 	call	1001156c <__fixdfsi>
1000622c:	1009883a 	mov	r4,r2
10006230:	1029883a 	mov	r20,r2
10006234:	00115ec0 	call	100115ec <__floatsidf>
10006238:	d9000f17 	ldw	r4,60(sp)
1000623c:	d9401017 	ldw	r5,64(sp)
10006240:	100d883a 	mov	r6,r2
10006244:	180f883a 	mov	r7,r3
10006248:	0010c700 	call	10010c70 <__subdf3>
1000624c:	1823883a 	mov	r17,r3
10006250:	d8c00717 	ldw	r3,28(sp)
10006254:	d9401217 	ldw	r5,72(sp)
10006258:	a2000c04 	addi	r8,r20,48
1000625c:	1021883a 	mov	r16,r2
10006260:	1a000005 	stb	r8,0(r3)
10006264:	800d883a 	mov	r6,r16
10006268:	880f883a 	mov	r7,r17
1000626c:	a809883a 	mov	r4,r21
10006270:	4029883a 	mov	r20,r8
10006274:	00102340 	call	10010234 <__gedf2>
10006278:	00841d16 	blt	zero,r2,100072f0 <_dtoa_r+0x15f4>
1000627c:	800d883a 	mov	r6,r16
10006280:	880f883a 	mov	r7,r17
10006284:	0009883a 	mov	r4,zero
10006288:	014ffc34 	movhi	r5,16368
1000628c:	0010c700 	call	10010c70 <__subdf3>
10006290:	d9401217 	ldw	r5,72(sp)
10006294:	100d883a 	mov	r6,r2
10006298:	180f883a 	mov	r7,r3
1000629c:	a809883a 	mov	r4,r21
100062a0:	00102340 	call	10010234 <__gedf2>
100062a4:	db001617 	ldw	r12,88(sp)
100062a8:	00840e16 	blt	zero,r2,100072e4 <_dtoa_r+0x15e8>
100062ac:	00800044 	movi	r2,1
100062b0:	13006b0e 	bge	r2,r12,10006460 <_dtoa_r+0x764>
100062b4:	d9000717 	ldw	r4,28(sp)
100062b8:	dd800f15 	stw	r22,60(sp)
100062bc:	dcc01015 	stw	r19,64(sp)
100062c0:	2319883a 	add	r12,r4,r12
100062c4:	dcc01217 	ldw	r19,72(sp)
100062c8:	602d883a 	mov	r22,r12
100062cc:	dc801215 	stw	r18,72(sp)
100062d0:	b825883a 	mov	r18,r23
100062d4:	00000906 	br	100062fc <_dtoa_r+0x600>
100062d8:	0010c700 	call	10010c70 <__subdf3>
100062dc:	a80d883a 	mov	r6,r21
100062e0:	980f883a 	mov	r7,r19
100062e4:	1009883a 	mov	r4,r2
100062e8:	180b883a 	mov	r5,r3
100062ec:	00103100 	call	10010310 <__ledf2>
100062f0:	1003e816 	blt	r2,zero,10007294 <_dtoa_r+0x1598>
100062f4:	b825883a 	mov	r18,r23
100062f8:	bd83e926 	beq	r23,r22,100072a0 <_dtoa_r+0x15a4>
100062fc:	a809883a 	mov	r4,r21
10006300:	980b883a 	mov	r5,r19
10006304:	000d883a 	mov	r6,zero
10006308:	01d00934 	movhi	r7,16420
1000630c:	00104040 	call	10010404 <__muldf3>
10006310:	000d883a 	mov	r6,zero
10006314:	01d00934 	movhi	r7,16420
10006318:	8009883a 	mov	r4,r16
1000631c:	880b883a 	mov	r5,r17
10006320:	102b883a 	mov	r21,r2
10006324:	1827883a 	mov	r19,r3
10006328:	00104040 	call	10010404 <__muldf3>
1000632c:	180b883a 	mov	r5,r3
10006330:	1009883a 	mov	r4,r2
10006334:	1821883a 	mov	r16,r3
10006338:	1023883a 	mov	r17,r2
1000633c:	001156c0 	call	1001156c <__fixdfsi>
10006340:	1009883a 	mov	r4,r2
10006344:	1029883a 	mov	r20,r2
10006348:	00115ec0 	call	100115ec <__floatsidf>
1000634c:	8809883a 	mov	r4,r17
10006350:	800b883a 	mov	r5,r16
10006354:	100d883a 	mov	r6,r2
10006358:	180f883a 	mov	r7,r3
1000635c:	0010c700 	call	10010c70 <__subdf3>
10006360:	a5000c04 	addi	r20,r20,48
10006364:	a80d883a 	mov	r6,r21
10006368:	980f883a 	mov	r7,r19
1000636c:	1009883a 	mov	r4,r2
10006370:	180b883a 	mov	r5,r3
10006374:	95000005 	stb	r20,0(r18)
10006378:	1021883a 	mov	r16,r2
1000637c:	1823883a 	mov	r17,r3
10006380:	00103100 	call	10010310 <__ledf2>
10006384:	bdc00044 	addi	r23,r23,1
10006388:	800d883a 	mov	r6,r16
1000638c:	880f883a 	mov	r7,r17
10006390:	0009883a 	mov	r4,zero
10006394:	014ffc34 	movhi	r5,16368
10006398:	103fcf0e 	bge	r2,zero,100062d8 <__alt_data_end+0xf80062d8>
1000639c:	d8c01317 	ldw	r3,76(sp)
100063a0:	d8c00515 	stw	r3,20(sp)
100063a4:	d9400917 	ldw	r5,36(sp)
100063a8:	e009883a 	mov	r4,fp
100063ac:	000945c0 	call	1000945c <_Bfree>
100063b0:	d9000517 	ldw	r4,20(sp)
100063b4:	d9802317 	ldw	r6,140(sp)
100063b8:	d9c02517 	ldw	r7,148(sp)
100063bc:	b8000005 	stb	zero,0(r23)
100063c0:	20800044 	addi	r2,r4,1
100063c4:	30800015 	stw	r2,0(r6)
100063c8:	3802aa26 	beq	r7,zero,10006e74 <_dtoa_r+0x1178>
100063cc:	3dc00015 	stw	r23,0(r7)
100063d0:	d8800717 	ldw	r2,28(sp)
100063d4:	003e7906 	br	10005dbc <__alt_data_end+0xf8005dbc>
100063d8:	00800434 	movhi	r2,16
100063dc:	10bfffc4 	addi	r2,r2,-1
100063e0:	88a2703a 	and	r17,r17,r2
100063e4:	883e851e 	bne	r17,zero,10005dfc <__alt_data_end+0xf8005dfc>
100063e8:	00840074 	movhi	r2,4097
100063ec:	10906204 	addi	r2,r2,16776
100063f0:	003e8406 	br	10005e04 <__alt_data_end+0xf8005e04>
100063f4:	10c00204 	addi	r3,r2,8
100063f8:	003e8706 	br	10005e18 <__alt_data_end+0xf8005e18>
100063fc:	01400434 	movhi	r5,16
10006400:	297fffc4 	addi	r5,r5,-1
10006404:	994a703a 	and	r5,r19,r5
10006408:	9009883a 	mov	r4,r18
1000640c:	843f0044 	addi	r16,r16,-1023
10006410:	294ffc34 	orhi	r5,r5,16368
10006414:	dd800217 	ldw	r22,8(sp)
10006418:	d8001115 	stw	zero,68(sp)
1000641c:	003ea506 	br	10005eb4 <__alt_data_end+0xf8005eb4>
10006420:	00840074 	movhi	r2,4097
10006424:	10905104 	addi	r2,r2,16708
10006428:	003e6406 	br	10005dbc <__alt_data_end+0xf8005dbc>
1000642c:	e0001115 	stw	zero,68(fp)
10006430:	000b883a 	mov	r5,zero
10006434:	e009883a 	mov	r4,fp
10006438:	00093b40 	call	100093b4 <_Balloc>
1000643c:	01bfffc4 	movi	r6,-1
10006440:	01c00044 	movi	r7,1
10006444:	d8800715 	stw	r2,28(sp)
10006448:	d9800c15 	stw	r6,48(sp)
1000644c:	e0801015 	stw	r2,64(fp)
10006450:	d8000315 	stw	zero,12(sp)
10006454:	d9c00b15 	stw	r7,44(sp)
10006458:	d9800615 	stw	r6,24(sp)
1000645c:	d8002215 	stw	zero,136(sp)
10006460:	d8800117 	ldw	r2,4(sp)
10006464:	10008916 	blt	r2,zero,1000668c <_dtoa_r+0x990>
10006468:	d9000517 	ldw	r4,20(sp)
1000646c:	00c00384 	movi	r3,14
10006470:	19008616 	blt	r3,r4,1000668c <_dtoa_r+0x990>
10006474:	200490fa 	slli	r2,r4,3
10006478:	00c40074 	movhi	r3,4097
1000647c:	d9802217 	ldw	r6,136(sp)
10006480:	18d08104 	addi	r3,r3,16900
10006484:	1885883a 	add	r2,r3,r2
10006488:	14000017 	ldw	r16,0(r2)
1000648c:	14400117 	ldw	r17,4(r2)
10006490:	30016316 	blt	r6,zero,10006a20 <_dtoa_r+0xd24>
10006494:	800d883a 	mov	r6,r16
10006498:	880f883a 	mov	r7,r17
1000649c:	9009883a 	mov	r4,r18
100064a0:	980b883a 	mov	r5,r19
100064a4:	000f7dc0 	call	1000f7dc <__divdf3>
100064a8:	180b883a 	mov	r5,r3
100064ac:	1009883a 	mov	r4,r2
100064b0:	001156c0 	call	1001156c <__fixdfsi>
100064b4:	1009883a 	mov	r4,r2
100064b8:	102b883a 	mov	r21,r2
100064bc:	00115ec0 	call	100115ec <__floatsidf>
100064c0:	800d883a 	mov	r6,r16
100064c4:	880f883a 	mov	r7,r17
100064c8:	1009883a 	mov	r4,r2
100064cc:	180b883a 	mov	r5,r3
100064d0:	00104040 	call	10010404 <__muldf3>
100064d4:	100d883a 	mov	r6,r2
100064d8:	180f883a 	mov	r7,r3
100064dc:	9009883a 	mov	r4,r18
100064e0:	980b883a 	mov	r5,r19
100064e4:	0010c700 	call	10010c70 <__subdf3>
100064e8:	d9c00717 	ldw	r7,28(sp)
100064ec:	1009883a 	mov	r4,r2
100064f0:	a8800c04 	addi	r2,r21,48
100064f4:	38800005 	stb	r2,0(r7)
100064f8:	3dc00044 	addi	r23,r7,1
100064fc:	d9c00617 	ldw	r7,24(sp)
10006500:	01800044 	movi	r6,1
10006504:	180b883a 	mov	r5,r3
10006508:	2005883a 	mov	r2,r4
1000650c:	39803826 	beq	r7,r6,100065f0 <_dtoa_r+0x8f4>
10006510:	000d883a 	mov	r6,zero
10006514:	01d00934 	movhi	r7,16420
10006518:	00104040 	call	10010404 <__muldf3>
1000651c:	000d883a 	mov	r6,zero
10006520:	000f883a 	mov	r7,zero
10006524:	1009883a 	mov	r4,r2
10006528:	180b883a 	mov	r5,r3
1000652c:	1025883a 	mov	r18,r2
10006530:	1827883a 	mov	r19,r3
10006534:	00101ac0 	call	100101ac <__eqdf2>
10006538:	103f9a26 	beq	r2,zero,100063a4 <__alt_data_end+0xf80063a4>
1000653c:	d9c00617 	ldw	r7,24(sp)
10006540:	d8c00717 	ldw	r3,28(sp)
10006544:	b829883a 	mov	r20,r23
10006548:	38bfffc4 	addi	r2,r7,-1
1000654c:	18ad883a 	add	r22,r3,r2
10006550:	00000a06 	br	1000657c <_dtoa_r+0x880>
10006554:	00104040 	call	10010404 <__muldf3>
10006558:	000d883a 	mov	r6,zero
1000655c:	000f883a 	mov	r7,zero
10006560:	1009883a 	mov	r4,r2
10006564:	180b883a 	mov	r5,r3
10006568:	1025883a 	mov	r18,r2
1000656c:	1827883a 	mov	r19,r3
10006570:	b829883a 	mov	r20,r23
10006574:	00101ac0 	call	100101ac <__eqdf2>
10006578:	103f8a26 	beq	r2,zero,100063a4 <__alt_data_end+0xf80063a4>
1000657c:	800d883a 	mov	r6,r16
10006580:	880f883a 	mov	r7,r17
10006584:	9009883a 	mov	r4,r18
10006588:	980b883a 	mov	r5,r19
1000658c:	000f7dc0 	call	1000f7dc <__divdf3>
10006590:	180b883a 	mov	r5,r3
10006594:	1009883a 	mov	r4,r2
10006598:	001156c0 	call	1001156c <__fixdfsi>
1000659c:	1009883a 	mov	r4,r2
100065a0:	102b883a 	mov	r21,r2
100065a4:	00115ec0 	call	100115ec <__floatsidf>
100065a8:	800d883a 	mov	r6,r16
100065ac:	880f883a 	mov	r7,r17
100065b0:	1009883a 	mov	r4,r2
100065b4:	180b883a 	mov	r5,r3
100065b8:	00104040 	call	10010404 <__muldf3>
100065bc:	100d883a 	mov	r6,r2
100065c0:	180f883a 	mov	r7,r3
100065c4:	9009883a 	mov	r4,r18
100065c8:	980b883a 	mov	r5,r19
100065cc:	0010c700 	call	10010c70 <__subdf3>
100065d0:	aa000c04 	addi	r8,r21,48
100065d4:	a2000005 	stb	r8,0(r20)
100065d8:	000d883a 	mov	r6,zero
100065dc:	01d00934 	movhi	r7,16420
100065e0:	1009883a 	mov	r4,r2
100065e4:	180b883a 	mov	r5,r3
100065e8:	a5c00044 	addi	r23,r20,1
100065ec:	b53fd91e 	bne	r22,r20,10006554 <__alt_data_end+0xf8006554>
100065f0:	100d883a 	mov	r6,r2
100065f4:	180f883a 	mov	r7,r3
100065f8:	1009883a 	mov	r4,r2
100065fc:	180b883a 	mov	r5,r3
10006600:	000ef300 	call	1000ef30 <__adddf3>
10006604:	100d883a 	mov	r6,r2
10006608:	180f883a 	mov	r7,r3
1000660c:	8009883a 	mov	r4,r16
10006610:	880b883a 	mov	r5,r17
10006614:	1027883a 	mov	r19,r2
10006618:	1825883a 	mov	r18,r3
1000661c:	00103100 	call	10010310 <__ledf2>
10006620:	10000816 	blt	r2,zero,10006644 <_dtoa_r+0x948>
10006624:	980d883a 	mov	r6,r19
10006628:	900f883a 	mov	r7,r18
1000662c:	8009883a 	mov	r4,r16
10006630:	880b883a 	mov	r5,r17
10006634:	00101ac0 	call	100101ac <__eqdf2>
10006638:	103f5a1e 	bne	r2,zero,100063a4 <__alt_data_end+0xf80063a4>
1000663c:	ad40004c 	andi	r21,r21,1
10006640:	a83f5826 	beq	r21,zero,100063a4 <__alt_data_end+0xf80063a4>
10006644:	bd3fffc3 	ldbu	r20,-1(r23)
10006648:	b8bfffc4 	addi	r2,r23,-1
1000664c:	1007883a 	mov	r3,r2
10006650:	01400e44 	movi	r5,57
10006654:	d9800717 	ldw	r6,28(sp)
10006658:	00000506 	br	10006670 <_dtoa_r+0x974>
1000665c:	18ffffc4 	addi	r3,r3,-1
10006660:	11824726 	beq	r2,r6,10006f80 <_dtoa_r+0x1284>
10006664:	1d000003 	ldbu	r20,0(r3)
10006668:	102f883a 	mov	r23,r2
1000666c:	10bfffc4 	addi	r2,r2,-1
10006670:	a1003fcc 	andi	r4,r20,255
10006674:	2100201c 	xori	r4,r4,128
10006678:	213fe004 	addi	r4,r4,-128
1000667c:	217ff726 	beq	r4,r5,1000665c <__alt_data_end+0xf800665c>
10006680:	a2000044 	addi	r8,r20,1
10006684:	12000005 	stb	r8,0(r2)
10006688:	003f4606 	br	100063a4 <__alt_data_end+0xf80063a4>
1000668c:	d9000b17 	ldw	r4,44(sp)
10006690:	2000c826 	beq	r4,zero,100069b4 <_dtoa_r+0xcb8>
10006694:	d9800317 	ldw	r6,12(sp)
10006698:	00c00044 	movi	r3,1
1000669c:	1980f90e 	bge	r3,r6,10006a84 <_dtoa_r+0xd88>
100066a0:	d8800617 	ldw	r2,24(sp)
100066a4:	d8c00a17 	ldw	r3,40(sp)
100066a8:	157fffc4 	addi	r21,r2,-1
100066ac:	1d41f316 	blt	r3,r21,10006e7c <_dtoa_r+0x1180>
100066b0:	1d6bc83a 	sub	r21,r3,r21
100066b4:	d9c00617 	ldw	r7,24(sp)
100066b8:	3802aa16 	blt	r7,zero,10007164 <_dtoa_r+0x1468>
100066bc:	dd000817 	ldw	r20,32(sp)
100066c0:	d8800617 	ldw	r2,24(sp)
100066c4:	d8c00817 	ldw	r3,32(sp)
100066c8:	01400044 	movi	r5,1
100066cc:	e009883a 	mov	r4,fp
100066d0:	1887883a 	add	r3,r3,r2
100066d4:	d8c00815 	stw	r3,32(sp)
100066d8:	b0ad883a 	add	r22,r22,r2
100066dc:	00097e80 	call	100097e8 <__i2b>
100066e0:	1023883a 	mov	r17,r2
100066e4:	a0000826 	beq	r20,zero,10006708 <_dtoa_r+0xa0c>
100066e8:	0580070e 	bge	zero,r22,10006708 <_dtoa_r+0xa0c>
100066ec:	a005883a 	mov	r2,r20
100066f0:	b500b916 	blt	r22,r20,100069d8 <_dtoa_r+0xcdc>
100066f4:	d9000817 	ldw	r4,32(sp)
100066f8:	a0a9c83a 	sub	r20,r20,r2
100066fc:	b0adc83a 	sub	r22,r22,r2
10006700:	2089c83a 	sub	r4,r4,r2
10006704:	d9000815 	stw	r4,32(sp)
10006708:	d9800a17 	ldw	r6,40(sp)
1000670c:	0181810e 	bge	zero,r6,10006d14 <_dtoa_r+0x1018>
10006710:	d9c00b17 	ldw	r7,44(sp)
10006714:	3800b326 	beq	r7,zero,100069e4 <_dtoa_r+0xce8>
10006718:	a800b226 	beq	r21,zero,100069e4 <_dtoa_r+0xce8>
1000671c:	880b883a 	mov	r5,r17
10006720:	a80d883a 	mov	r6,r21
10006724:	e009883a 	mov	r4,fp
10006728:	0009ab00 	call	10009ab0 <__pow5mult>
1000672c:	d9800917 	ldw	r6,36(sp)
10006730:	100b883a 	mov	r5,r2
10006734:	e009883a 	mov	r4,fp
10006738:	1023883a 	mov	r17,r2
1000673c:	00098240 	call	10009824 <__multiply>
10006740:	1021883a 	mov	r16,r2
10006744:	d8800a17 	ldw	r2,40(sp)
10006748:	d9400917 	ldw	r5,36(sp)
1000674c:	e009883a 	mov	r4,fp
10006750:	1545c83a 	sub	r2,r2,r21
10006754:	d8800a15 	stw	r2,40(sp)
10006758:	000945c0 	call	1000945c <_Bfree>
1000675c:	d8c00a17 	ldw	r3,40(sp)
10006760:	18009f1e 	bne	r3,zero,100069e0 <_dtoa_r+0xce4>
10006764:	05c00044 	movi	r23,1
10006768:	e009883a 	mov	r4,fp
1000676c:	b80b883a 	mov	r5,r23
10006770:	00097e80 	call	100097e8 <__i2b>
10006774:	d9000d17 	ldw	r4,52(sp)
10006778:	102b883a 	mov	r21,r2
1000677c:	2000ce26 	beq	r4,zero,10006ab8 <_dtoa_r+0xdbc>
10006780:	200d883a 	mov	r6,r4
10006784:	100b883a 	mov	r5,r2
10006788:	e009883a 	mov	r4,fp
1000678c:	0009ab00 	call	10009ab0 <__pow5mult>
10006790:	d9800317 	ldw	r6,12(sp)
10006794:	102b883a 	mov	r21,r2
10006798:	b981810e 	bge	r23,r6,10006da0 <_dtoa_r+0x10a4>
1000679c:	0027883a 	mov	r19,zero
100067a0:	a8800417 	ldw	r2,16(r21)
100067a4:	05c00804 	movi	r23,32
100067a8:	10800104 	addi	r2,r2,4
100067ac:	1085883a 	add	r2,r2,r2
100067b0:	1085883a 	add	r2,r2,r2
100067b4:	a885883a 	add	r2,r21,r2
100067b8:	11000017 	ldw	r4,0(r2)
100067bc:	00096d00 	call	100096d0 <__hi0bits>
100067c0:	b885c83a 	sub	r2,r23,r2
100067c4:	1585883a 	add	r2,r2,r22
100067c8:	108007cc 	andi	r2,r2,31
100067cc:	1000b326 	beq	r2,zero,10006a9c <_dtoa_r+0xda0>
100067d0:	00c00804 	movi	r3,32
100067d4:	1887c83a 	sub	r3,r3,r2
100067d8:	01000104 	movi	r4,4
100067dc:	20c2cd0e 	bge	r4,r3,10007314 <_dtoa_r+0x1618>
100067e0:	00c00704 	movi	r3,28
100067e4:	1885c83a 	sub	r2,r3,r2
100067e8:	d8c00817 	ldw	r3,32(sp)
100067ec:	a0a9883a 	add	r20,r20,r2
100067f0:	b0ad883a 	add	r22,r22,r2
100067f4:	1887883a 	add	r3,r3,r2
100067f8:	d8c00815 	stw	r3,32(sp)
100067fc:	d9800817 	ldw	r6,32(sp)
10006800:	0180040e 	bge	zero,r6,10006814 <_dtoa_r+0xb18>
10006804:	800b883a 	mov	r5,r16
10006808:	e009883a 	mov	r4,fp
1000680c:	0009bf00 	call	10009bf0 <__lshift>
10006810:	1021883a 	mov	r16,r2
10006814:	0580050e 	bge	zero,r22,1000682c <_dtoa_r+0xb30>
10006818:	a80b883a 	mov	r5,r21
1000681c:	b00d883a 	mov	r6,r22
10006820:	e009883a 	mov	r4,fp
10006824:	0009bf00 	call	10009bf0 <__lshift>
10006828:	102b883a 	mov	r21,r2
1000682c:	d9c00e17 	ldw	r7,56(sp)
10006830:	3801211e 	bne	r7,zero,10006cb8 <_dtoa_r+0xfbc>
10006834:	d9800617 	ldw	r6,24(sp)
10006838:	0181380e 	bge	zero,r6,10006d1c <_dtoa_r+0x1020>
1000683c:	d8c00b17 	ldw	r3,44(sp)
10006840:	1800ab1e 	bne	r3,zero,10006af0 <_dtoa_r+0xdf4>
10006844:	dc800717 	ldw	r18,28(sp)
10006848:	dcc00617 	ldw	r19,24(sp)
1000684c:	9029883a 	mov	r20,r18
10006850:	00000206 	br	1000685c <_dtoa_r+0xb60>
10006854:	00094840 	call	10009484 <__multadd>
10006858:	1021883a 	mov	r16,r2
1000685c:	a80b883a 	mov	r5,r21
10006860:	8009883a 	mov	r4,r16
10006864:	0005ad40 	call	10005ad4 <quorem>
10006868:	10800c04 	addi	r2,r2,48
1000686c:	90800005 	stb	r2,0(r18)
10006870:	94800044 	addi	r18,r18,1
10006874:	9507c83a 	sub	r3,r18,r20
10006878:	000f883a 	mov	r7,zero
1000687c:	01800284 	movi	r6,10
10006880:	800b883a 	mov	r5,r16
10006884:	e009883a 	mov	r4,fp
10006888:	1cfff216 	blt	r3,r19,10006854 <__alt_data_end+0xf8006854>
1000688c:	1011883a 	mov	r8,r2
10006890:	d8800617 	ldw	r2,24(sp)
10006894:	0082370e 	bge	zero,r2,10007174 <_dtoa_r+0x1478>
10006898:	d9000717 	ldw	r4,28(sp)
1000689c:	0025883a 	mov	r18,zero
100068a0:	20af883a 	add	r23,r4,r2
100068a4:	01800044 	movi	r6,1
100068a8:	800b883a 	mov	r5,r16
100068ac:	e009883a 	mov	r4,fp
100068b0:	da001715 	stw	r8,92(sp)
100068b4:	0009bf00 	call	10009bf0 <__lshift>
100068b8:	a80b883a 	mov	r5,r21
100068bc:	1009883a 	mov	r4,r2
100068c0:	d8800915 	stw	r2,36(sp)
100068c4:	0009d380 	call	10009d38 <__mcmp>
100068c8:	da001717 	ldw	r8,92(sp)
100068cc:	0081800e 	bge	zero,r2,10006ed0 <_dtoa_r+0x11d4>
100068d0:	b93fffc3 	ldbu	r4,-1(r23)
100068d4:	b8bfffc4 	addi	r2,r23,-1
100068d8:	1007883a 	mov	r3,r2
100068dc:	01800e44 	movi	r6,57
100068e0:	d9c00717 	ldw	r7,28(sp)
100068e4:	00000506 	br	100068fc <_dtoa_r+0xc00>
100068e8:	18ffffc4 	addi	r3,r3,-1
100068ec:	11c12326 	beq	r2,r7,10006d7c <_dtoa_r+0x1080>
100068f0:	19000003 	ldbu	r4,0(r3)
100068f4:	102f883a 	mov	r23,r2
100068f8:	10bfffc4 	addi	r2,r2,-1
100068fc:	21403fcc 	andi	r5,r4,255
10006900:	2940201c 	xori	r5,r5,128
10006904:	297fe004 	addi	r5,r5,-128
10006908:	29bff726 	beq	r5,r6,100068e8 <__alt_data_end+0xf80068e8>
1000690c:	21000044 	addi	r4,r4,1
10006910:	11000005 	stb	r4,0(r2)
10006914:	a80b883a 	mov	r5,r21
10006918:	e009883a 	mov	r4,fp
1000691c:	000945c0 	call	1000945c <_Bfree>
10006920:	883ea026 	beq	r17,zero,100063a4 <__alt_data_end+0xf80063a4>
10006924:	90000426 	beq	r18,zero,10006938 <_dtoa_r+0xc3c>
10006928:	94400326 	beq	r18,r17,10006938 <_dtoa_r+0xc3c>
1000692c:	900b883a 	mov	r5,r18
10006930:	e009883a 	mov	r4,fp
10006934:	000945c0 	call	1000945c <_Bfree>
10006938:	880b883a 	mov	r5,r17
1000693c:	e009883a 	mov	r4,fp
10006940:	000945c0 	call	1000945c <_Bfree>
10006944:	003e9706 	br	100063a4 <__alt_data_end+0xf80063a4>
10006948:	01800044 	movi	r6,1
1000694c:	d9800e15 	stw	r6,56(sp)
10006950:	003d9606 	br	10005fac <__alt_data_end+0xf8005fac>
10006954:	d8800817 	ldw	r2,32(sp)
10006958:	d8c00517 	ldw	r3,20(sp)
1000695c:	d8000d15 	stw	zero,52(sp)
10006960:	10c5c83a 	sub	r2,r2,r3
10006964:	00c9c83a 	sub	r4,zero,r3
10006968:	d8800815 	stw	r2,32(sp)
1000696c:	d9000a15 	stw	r4,40(sp)
10006970:	003d9706 	br	10005fd0 <__alt_data_end+0xf8005fd0>
10006974:	05adc83a 	sub	r22,zero,r22
10006978:	dd800815 	stw	r22,32(sp)
1000697c:	002d883a 	mov	r22,zero
10006980:	003d8e06 	br	10005fbc <__alt_data_end+0xf8005fbc>
10006984:	d9000517 	ldw	r4,20(sp)
10006988:	00115ec0 	call	100115ec <__floatsidf>
1000698c:	100d883a 	mov	r6,r2
10006990:	180f883a 	mov	r7,r3
10006994:	a009883a 	mov	r4,r20
10006998:	880b883a 	mov	r5,r17
1000699c:	00101ac0 	call	100101ac <__eqdf2>
100069a0:	103d7126 	beq	r2,zero,10005f68 <__alt_data_end+0xf8005f68>
100069a4:	d9c00517 	ldw	r7,20(sp)
100069a8:	39ffffc4 	addi	r7,r7,-1
100069ac:	d9c00515 	stw	r7,20(sp)
100069b0:	003d6d06 	br	10005f68 <__alt_data_end+0xf8005f68>
100069b4:	dd400a17 	ldw	r21,40(sp)
100069b8:	dd000817 	ldw	r20,32(sp)
100069bc:	0023883a 	mov	r17,zero
100069c0:	003f4806 	br	100066e4 <__alt_data_end+0xf80066e4>
100069c4:	10e3c83a 	sub	r17,r2,r3
100069c8:	9448983a 	sll	r4,r18,r17
100069cc:	003d3206 	br	10005e98 <__alt_data_end+0xf8005e98>
100069d0:	d8000e15 	stw	zero,56(sp)
100069d4:	003d7506 	br	10005fac <__alt_data_end+0xf8005fac>
100069d8:	b005883a 	mov	r2,r22
100069dc:	003f4506 	br	100066f4 <__alt_data_end+0xf80066f4>
100069e0:	dc000915 	stw	r16,36(sp)
100069e4:	d9800a17 	ldw	r6,40(sp)
100069e8:	d9400917 	ldw	r5,36(sp)
100069ec:	e009883a 	mov	r4,fp
100069f0:	0009ab00 	call	10009ab0 <__pow5mult>
100069f4:	1021883a 	mov	r16,r2
100069f8:	003f5a06 	br	10006764 <__alt_data_end+0xf8006764>
100069fc:	01c00044 	movi	r7,1
10006a00:	d9c00b15 	stw	r7,44(sp)
10006a04:	d8802217 	ldw	r2,136(sp)
10006a08:	0081280e 	bge	zero,r2,10006eac <_dtoa_r+0x11b0>
10006a0c:	100d883a 	mov	r6,r2
10006a10:	1021883a 	mov	r16,r2
10006a14:	d8800c15 	stw	r2,48(sp)
10006a18:	d8800615 	stw	r2,24(sp)
10006a1c:	003d8806 	br	10006040 <__alt_data_end+0xf8006040>
10006a20:	d8800617 	ldw	r2,24(sp)
10006a24:	00be9b16 	blt	zero,r2,10006494 <__alt_data_end+0xf8006494>
10006a28:	10010f1e 	bne	r2,zero,10006e68 <_dtoa_r+0x116c>
10006a2c:	880b883a 	mov	r5,r17
10006a30:	000d883a 	mov	r6,zero
10006a34:	01d00534 	movhi	r7,16404
10006a38:	8009883a 	mov	r4,r16
10006a3c:	00104040 	call	10010404 <__muldf3>
10006a40:	900d883a 	mov	r6,r18
10006a44:	980f883a 	mov	r7,r19
10006a48:	1009883a 	mov	r4,r2
10006a4c:	180b883a 	mov	r5,r3
10006a50:	00102340 	call	10010234 <__gedf2>
10006a54:	002b883a 	mov	r21,zero
10006a58:	0023883a 	mov	r17,zero
10006a5c:	1000bf16 	blt	r2,zero,10006d5c <_dtoa_r+0x1060>
10006a60:	d9802217 	ldw	r6,136(sp)
10006a64:	ddc00717 	ldw	r23,28(sp)
10006a68:	018c303a 	nor	r6,zero,r6
10006a6c:	d9800515 	stw	r6,20(sp)
10006a70:	a80b883a 	mov	r5,r21
10006a74:	e009883a 	mov	r4,fp
10006a78:	000945c0 	call	1000945c <_Bfree>
10006a7c:	883e4926 	beq	r17,zero,100063a4 <__alt_data_end+0xf80063a4>
10006a80:	003fad06 	br	10006938 <__alt_data_end+0xf8006938>
10006a84:	d9c01117 	ldw	r7,68(sp)
10006a88:	3801bc26 	beq	r7,zero,1000717c <_dtoa_r+0x1480>
10006a8c:	10810cc4 	addi	r2,r2,1075
10006a90:	dd400a17 	ldw	r21,40(sp)
10006a94:	dd000817 	ldw	r20,32(sp)
10006a98:	003f0a06 	br	100066c4 <__alt_data_end+0xf80066c4>
10006a9c:	00800704 	movi	r2,28
10006aa0:	d9000817 	ldw	r4,32(sp)
10006aa4:	a0a9883a 	add	r20,r20,r2
10006aa8:	b0ad883a 	add	r22,r22,r2
10006aac:	2089883a 	add	r4,r4,r2
10006ab0:	d9000815 	stw	r4,32(sp)
10006ab4:	003f5106 	br	100067fc <__alt_data_end+0xf80067fc>
10006ab8:	d8c00317 	ldw	r3,12(sp)
10006abc:	b8c1fc0e 	bge	r23,r3,100072b0 <_dtoa_r+0x15b4>
10006ac0:	0027883a 	mov	r19,zero
10006ac4:	b805883a 	mov	r2,r23
10006ac8:	003f3e06 	br	100067c4 <__alt_data_end+0xf80067c4>
10006acc:	880b883a 	mov	r5,r17
10006ad0:	e009883a 	mov	r4,fp
10006ad4:	000f883a 	mov	r7,zero
10006ad8:	01800284 	movi	r6,10
10006adc:	00094840 	call	10009484 <__multadd>
10006ae0:	d9000c17 	ldw	r4,48(sp)
10006ae4:	1023883a 	mov	r17,r2
10006ae8:	0102040e 	bge	zero,r4,100072fc <_dtoa_r+0x1600>
10006aec:	d9000615 	stw	r4,24(sp)
10006af0:	0500050e 	bge	zero,r20,10006b08 <_dtoa_r+0xe0c>
10006af4:	880b883a 	mov	r5,r17
10006af8:	a00d883a 	mov	r6,r20
10006afc:	e009883a 	mov	r4,fp
10006b00:	0009bf00 	call	10009bf0 <__lshift>
10006b04:	1023883a 	mov	r17,r2
10006b08:	9801241e 	bne	r19,zero,10006f9c <_dtoa_r+0x12a0>
10006b0c:	8829883a 	mov	r20,r17
10006b10:	d9000617 	ldw	r4,24(sp)
10006b14:	dcc00717 	ldw	r19,28(sp)
10006b18:	9480004c 	andi	r18,r18,1
10006b1c:	20bfffc4 	addi	r2,r4,-1
10006b20:	9885883a 	add	r2,r19,r2
10006b24:	d8800415 	stw	r2,16(sp)
10006b28:	dc800615 	stw	r18,24(sp)
10006b2c:	a80b883a 	mov	r5,r21
10006b30:	8009883a 	mov	r4,r16
10006b34:	0005ad40 	call	10005ad4 <quorem>
10006b38:	880b883a 	mov	r5,r17
10006b3c:	8009883a 	mov	r4,r16
10006b40:	102f883a 	mov	r23,r2
10006b44:	0009d380 	call	10009d38 <__mcmp>
10006b48:	a80b883a 	mov	r5,r21
10006b4c:	a00d883a 	mov	r6,r20
10006b50:	e009883a 	mov	r4,fp
10006b54:	102d883a 	mov	r22,r2
10006b58:	0009d980 	call	10009d98 <__mdiff>
10006b5c:	1007883a 	mov	r3,r2
10006b60:	10800317 	ldw	r2,12(r2)
10006b64:	bc800c04 	addi	r18,r23,48
10006b68:	180b883a 	mov	r5,r3
10006b6c:	10004e1e 	bne	r2,zero,10006ca8 <_dtoa_r+0xfac>
10006b70:	8009883a 	mov	r4,r16
10006b74:	d8c01615 	stw	r3,88(sp)
10006b78:	0009d380 	call	10009d38 <__mcmp>
10006b7c:	d8c01617 	ldw	r3,88(sp)
10006b80:	e009883a 	mov	r4,fp
10006b84:	d8801615 	stw	r2,88(sp)
10006b88:	180b883a 	mov	r5,r3
10006b8c:	000945c0 	call	1000945c <_Bfree>
10006b90:	d8801617 	ldw	r2,88(sp)
10006b94:	1000041e 	bne	r2,zero,10006ba8 <_dtoa_r+0xeac>
10006b98:	d9800317 	ldw	r6,12(sp)
10006b9c:	3000021e 	bne	r6,zero,10006ba8 <_dtoa_r+0xeac>
10006ba0:	d8c00617 	ldw	r3,24(sp)
10006ba4:	18003726 	beq	r3,zero,10006c84 <_dtoa_r+0xf88>
10006ba8:	b0002016 	blt	r22,zero,10006c2c <_dtoa_r+0xf30>
10006bac:	b000041e 	bne	r22,zero,10006bc0 <_dtoa_r+0xec4>
10006bb0:	d9000317 	ldw	r4,12(sp)
10006bb4:	2000021e 	bne	r4,zero,10006bc0 <_dtoa_r+0xec4>
10006bb8:	d8c00617 	ldw	r3,24(sp)
10006bbc:	18001b26 	beq	r3,zero,10006c2c <_dtoa_r+0xf30>
10006bc0:	00810716 	blt	zero,r2,10006fe0 <_dtoa_r+0x12e4>
10006bc4:	d8c00417 	ldw	r3,16(sp)
10006bc8:	9d800044 	addi	r22,r19,1
10006bcc:	9c800005 	stb	r18,0(r19)
10006bd0:	b02f883a 	mov	r23,r22
10006bd4:	98c10626 	beq	r19,r3,10006ff0 <_dtoa_r+0x12f4>
10006bd8:	800b883a 	mov	r5,r16
10006bdc:	000f883a 	mov	r7,zero
10006be0:	01800284 	movi	r6,10
10006be4:	e009883a 	mov	r4,fp
10006be8:	00094840 	call	10009484 <__multadd>
10006bec:	1021883a 	mov	r16,r2
10006bf0:	000f883a 	mov	r7,zero
10006bf4:	01800284 	movi	r6,10
10006bf8:	880b883a 	mov	r5,r17
10006bfc:	e009883a 	mov	r4,fp
10006c00:	8d002526 	beq	r17,r20,10006c98 <_dtoa_r+0xf9c>
10006c04:	00094840 	call	10009484 <__multadd>
10006c08:	a00b883a 	mov	r5,r20
10006c0c:	000f883a 	mov	r7,zero
10006c10:	01800284 	movi	r6,10
10006c14:	e009883a 	mov	r4,fp
10006c18:	1023883a 	mov	r17,r2
10006c1c:	00094840 	call	10009484 <__multadd>
10006c20:	1029883a 	mov	r20,r2
10006c24:	b027883a 	mov	r19,r22
10006c28:	003fc006 	br	10006b2c <__alt_data_end+0xf8006b2c>
10006c2c:	9011883a 	mov	r8,r18
10006c30:	00800e0e 	bge	zero,r2,10006c6c <_dtoa_r+0xf70>
10006c34:	800b883a 	mov	r5,r16
10006c38:	01800044 	movi	r6,1
10006c3c:	e009883a 	mov	r4,fp
10006c40:	da001715 	stw	r8,92(sp)
10006c44:	0009bf00 	call	10009bf0 <__lshift>
10006c48:	a80b883a 	mov	r5,r21
10006c4c:	1009883a 	mov	r4,r2
10006c50:	1021883a 	mov	r16,r2
10006c54:	0009d380 	call	10009d38 <__mcmp>
10006c58:	da001717 	ldw	r8,92(sp)
10006c5c:	0081960e 	bge	zero,r2,100072b8 <_dtoa_r+0x15bc>
10006c60:	00800e44 	movi	r2,57
10006c64:	40817026 	beq	r8,r2,10007228 <_dtoa_r+0x152c>
10006c68:	ba000c44 	addi	r8,r23,49
10006c6c:	8825883a 	mov	r18,r17
10006c70:	9dc00044 	addi	r23,r19,1
10006c74:	9a000005 	stb	r8,0(r19)
10006c78:	a023883a 	mov	r17,r20
10006c7c:	dc000915 	stw	r16,36(sp)
10006c80:	003f2406 	br	10006914 <__alt_data_end+0xf8006914>
10006c84:	00800e44 	movi	r2,57
10006c88:	9011883a 	mov	r8,r18
10006c8c:	90816626 	beq	r18,r2,10007228 <_dtoa_r+0x152c>
10006c90:	05bff516 	blt	zero,r22,10006c68 <__alt_data_end+0xf8006c68>
10006c94:	003ff506 	br	10006c6c <__alt_data_end+0xf8006c6c>
10006c98:	00094840 	call	10009484 <__multadd>
10006c9c:	1023883a 	mov	r17,r2
10006ca0:	1029883a 	mov	r20,r2
10006ca4:	003fdf06 	br	10006c24 <__alt_data_end+0xf8006c24>
10006ca8:	e009883a 	mov	r4,fp
10006cac:	000945c0 	call	1000945c <_Bfree>
10006cb0:	00800044 	movi	r2,1
10006cb4:	003fbc06 	br	10006ba8 <__alt_data_end+0xf8006ba8>
10006cb8:	a80b883a 	mov	r5,r21
10006cbc:	8009883a 	mov	r4,r16
10006cc0:	0009d380 	call	10009d38 <__mcmp>
10006cc4:	103edb0e 	bge	r2,zero,10006834 <__alt_data_end+0xf8006834>
10006cc8:	800b883a 	mov	r5,r16
10006ccc:	000f883a 	mov	r7,zero
10006cd0:	01800284 	movi	r6,10
10006cd4:	e009883a 	mov	r4,fp
10006cd8:	00094840 	call	10009484 <__multadd>
10006cdc:	1021883a 	mov	r16,r2
10006ce0:	d8800517 	ldw	r2,20(sp)
10006ce4:	d8c00b17 	ldw	r3,44(sp)
10006ce8:	10bfffc4 	addi	r2,r2,-1
10006cec:	d8800515 	stw	r2,20(sp)
10006cf0:	183f761e 	bne	r3,zero,10006acc <__alt_data_end+0xf8006acc>
10006cf4:	d9000c17 	ldw	r4,48(sp)
10006cf8:	0101730e 	bge	zero,r4,100072c8 <_dtoa_r+0x15cc>
10006cfc:	d9000615 	stw	r4,24(sp)
10006d00:	003ed006 	br	10006844 <__alt_data_end+0xf8006844>
10006d04:	00800084 	movi	r2,2
10006d08:	3081861e 	bne	r6,r2,10007324 <_dtoa_r+0x1628>
10006d0c:	d8000b15 	stw	zero,44(sp)
10006d10:	003f3c06 	br	10006a04 <__alt_data_end+0xf8006a04>
10006d14:	dc000917 	ldw	r16,36(sp)
10006d18:	003e9206 	br	10006764 <__alt_data_end+0xf8006764>
10006d1c:	d9c00317 	ldw	r7,12(sp)
10006d20:	00800084 	movi	r2,2
10006d24:	11fec50e 	bge	r2,r7,1000683c <__alt_data_end+0xf800683c>
10006d28:	d9000617 	ldw	r4,24(sp)
10006d2c:	20013c1e 	bne	r4,zero,10007220 <_dtoa_r+0x1524>
10006d30:	a80b883a 	mov	r5,r21
10006d34:	000f883a 	mov	r7,zero
10006d38:	01800144 	movi	r6,5
10006d3c:	e009883a 	mov	r4,fp
10006d40:	00094840 	call	10009484 <__multadd>
10006d44:	100b883a 	mov	r5,r2
10006d48:	8009883a 	mov	r4,r16
10006d4c:	102b883a 	mov	r21,r2
10006d50:	0009d380 	call	10009d38 <__mcmp>
10006d54:	dc000915 	stw	r16,36(sp)
10006d58:	00bf410e 	bge	zero,r2,10006a60 <__alt_data_end+0xf8006a60>
10006d5c:	d9c00717 	ldw	r7,28(sp)
10006d60:	00800c44 	movi	r2,49
10006d64:	38800005 	stb	r2,0(r7)
10006d68:	d8800517 	ldw	r2,20(sp)
10006d6c:	3dc00044 	addi	r23,r7,1
10006d70:	10800044 	addi	r2,r2,1
10006d74:	d8800515 	stw	r2,20(sp)
10006d78:	003f3d06 	br	10006a70 <__alt_data_end+0xf8006a70>
10006d7c:	d9800517 	ldw	r6,20(sp)
10006d80:	d9c00717 	ldw	r7,28(sp)
10006d84:	00800c44 	movi	r2,49
10006d88:	31800044 	addi	r6,r6,1
10006d8c:	d9800515 	stw	r6,20(sp)
10006d90:	38800005 	stb	r2,0(r7)
10006d94:	003edf06 	br	10006914 <__alt_data_end+0xf8006914>
10006d98:	d8000b15 	stw	zero,44(sp)
10006d9c:	003c9f06 	br	1000601c <__alt_data_end+0xf800601c>
10006da0:	903e7e1e 	bne	r18,zero,1000679c <__alt_data_end+0xf800679c>
10006da4:	00800434 	movhi	r2,16
10006da8:	10bfffc4 	addi	r2,r2,-1
10006dac:	9884703a 	and	r2,r19,r2
10006db0:	1000ea1e 	bne	r2,zero,1000715c <_dtoa_r+0x1460>
10006db4:	9cdffc2c 	andhi	r19,r19,32752
10006db8:	9800e826 	beq	r19,zero,1000715c <_dtoa_r+0x1460>
10006dbc:	d9c00817 	ldw	r7,32(sp)
10006dc0:	b5800044 	addi	r22,r22,1
10006dc4:	04c00044 	movi	r19,1
10006dc8:	39c00044 	addi	r7,r7,1
10006dcc:	d9c00815 	stw	r7,32(sp)
10006dd0:	d8800d17 	ldw	r2,52(sp)
10006dd4:	103e721e 	bne	r2,zero,100067a0 <__alt_data_end+0xf80067a0>
10006dd8:	00800044 	movi	r2,1
10006ddc:	003e7906 	br	100067c4 <__alt_data_end+0xf80067c4>
10006de0:	8009883a 	mov	r4,r16
10006de4:	00115ec0 	call	100115ec <__floatsidf>
10006de8:	d9800f17 	ldw	r6,60(sp)
10006dec:	d9c01017 	ldw	r7,64(sp)
10006df0:	1009883a 	mov	r4,r2
10006df4:	180b883a 	mov	r5,r3
10006df8:	00104040 	call	10010404 <__muldf3>
10006dfc:	000d883a 	mov	r6,zero
10006e00:	01d00734 	movhi	r7,16412
10006e04:	1009883a 	mov	r4,r2
10006e08:	180b883a 	mov	r5,r3
10006e0c:	000ef300 	call	1000ef30 <__adddf3>
10006e10:	047f3034 	movhi	r17,64704
10006e14:	1021883a 	mov	r16,r2
10006e18:	1c63883a 	add	r17,r3,r17
10006e1c:	d9000f17 	ldw	r4,60(sp)
10006e20:	d9401017 	ldw	r5,64(sp)
10006e24:	000d883a 	mov	r6,zero
10006e28:	01d00534 	movhi	r7,16404
10006e2c:	0010c700 	call	10010c70 <__subdf3>
10006e30:	800d883a 	mov	r6,r16
10006e34:	880f883a 	mov	r7,r17
10006e38:	1009883a 	mov	r4,r2
10006e3c:	180b883a 	mov	r5,r3
10006e40:	102b883a 	mov	r21,r2
10006e44:	1829883a 	mov	r20,r3
10006e48:	00102340 	call	10010234 <__gedf2>
10006e4c:	00806c16 	blt	zero,r2,10007000 <_dtoa_r+0x1304>
10006e50:	89e0003c 	xorhi	r7,r17,32768
10006e54:	800d883a 	mov	r6,r16
10006e58:	a809883a 	mov	r4,r21
10006e5c:	a00b883a 	mov	r5,r20
10006e60:	00103100 	call	10010310 <__ledf2>
10006e64:	103d7e0e 	bge	r2,zero,10006460 <__alt_data_end+0xf8006460>
10006e68:	002b883a 	mov	r21,zero
10006e6c:	0023883a 	mov	r17,zero
10006e70:	003efb06 	br	10006a60 <__alt_data_end+0xf8006a60>
10006e74:	d8800717 	ldw	r2,28(sp)
10006e78:	003bd006 	br	10005dbc <__alt_data_end+0xf8005dbc>
10006e7c:	d9000a17 	ldw	r4,40(sp)
10006e80:	d9800d17 	ldw	r6,52(sp)
10006e84:	dd400a15 	stw	r21,40(sp)
10006e88:	a905c83a 	sub	r2,r21,r4
10006e8c:	308d883a 	add	r6,r6,r2
10006e90:	d9800d15 	stw	r6,52(sp)
10006e94:	002b883a 	mov	r21,zero
10006e98:	003e0606 	br	100066b4 <__alt_data_end+0xf80066b4>
10006e9c:	9023883a 	mov	r17,r18
10006ea0:	9829883a 	mov	r20,r19
10006ea4:	04000084 	movi	r16,2
10006ea8:	003c9206 	br	100060f4 <__alt_data_end+0xf80060f4>
10006eac:	04000044 	movi	r16,1
10006eb0:	dc000c15 	stw	r16,48(sp)
10006eb4:	dc000615 	stw	r16,24(sp)
10006eb8:	dc002215 	stw	r16,136(sp)
10006ebc:	e0001115 	stw	zero,68(fp)
10006ec0:	000b883a 	mov	r5,zero
10006ec4:	003c6906 	br	1000606c <__alt_data_end+0xf800606c>
10006ec8:	3021883a 	mov	r16,r6
10006ecc:	003ffb06 	br	10006ebc <__alt_data_end+0xf8006ebc>
10006ed0:	1000021e 	bne	r2,zero,10006edc <_dtoa_r+0x11e0>
10006ed4:	4200004c 	andi	r8,r8,1
10006ed8:	403e7d1e 	bne	r8,zero,100068d0 <__alt_data_end+0xf80068d0>
10006edc:	01000c04 	movi	r4,48
10006ee0:	00000106 	br	10006ee8 <_dtoa_r+0x11ec>
10006ee4:	102f883a 	mov	r23,r2
10006ee8:	b8bfffc4 	addi	r2,r23,-1
10006eec:	10c00007 	ldb	r3,0(r2)
10006ef0:	193ffc26 	beq	r3,r4,10006ee4 <__alt_data_end+0xf8006ee4>
10006ef4:	003e8706 	br	10006914 <__alt_data_end+0xf8006914>
10006ef8:	d8800517 	ldw	r2,20(sp)
10006efc:	00a3c83a 	sub	r17,zero,r2
10006f00:	8800a426 	beq	r17,zero,10007194 <_dtoa_r+0x1498>
10006f04:	888003cc 	andi	r2,r17,15
10006f08:	100490fa 	slli	r2,r2,3
10006f0c:	00c40074 	movhi	r3,4097
10006f10:	18d08104 	addi	r3,r3,16900
10006f14:	1885883a 	add	r2,r3,r2
10006f18:	11800017 	ldw	r6,0(r2)
10006f1c:	11c00117 	ldw	r7,4(r2)
10006f20:	9009883a 	mov	r4,r18
10006f24:	980b883a 	mov	r5,r19
10006f28:	8823d13a 	srai	r17,r17,4
10006f2c:	00104040 	call	10010404 <__muldf3>
10006f30:	d8800f15 	stw	r2,60(sp)
10006f34:	d8c01015 	stw	r3,64(sp)
10006f38:	8800e826 	beq	r17,zero,100072dc <_dtoa_r+0x15e0>
10006f3c:	05040074 	movhi	r20,4097
10006f40:	a5107704 	addi	r20,r20,16860
10006f44:	04000084 	movi	r16,2
10006f48:	8980004c 	andi	r6,r17,1
10006f4c:	1009883a 	mov	r4,r2
10006f50:	8823d07a 	srai	r17,r17,1
10006f54:	180b883a 	mov	r5,r3
10006f58:	30000426 	beq	r6,zero,10006f6c <_dtoa_r+0x1270>
10006f5c:	a1800017 	ldw	r6,0(r20)
10006f60:	a1c00117 	ldw	r7,4(r20)
10006f64:	84000044 	addi	r16,r16,1
10006f68:	00104040 	call	10010404 <__muldf3>
10006f6c:	a5000204 	addi	r20,r20,8
10006f70:	883ff51e 	bne	r17,zero,10006f48 <__alt_data_end+0xf8006f48>
10006f74:	d8800f15 	stw	r2,60(sp)
10006f78:	d8c01015 	stw	r3,64(sp)
10006f7c:	003c7606 	br	10006158 <__alt_data_end+0xf8006158>
10006f80:	00c00c04 	movi	r3,48
10006f84:	10c00005 	stb	r3,0(r2)
10006f88:	d8c00517 	ldw	r3,20(sp)
10006f8c:	bd3fffc3 	ldbu	r20,-1(r23)
10006f90:	18c00044 	addi	r3,r3,1
10006f94:	d8c00515 	stw	r3,20(sp)
10006f98:	003db906 	br	10006680 <__alt_data_end+0xf8006680>
10006f9c:	89400117 	ldw	r5,4(r17)
10006fa0:	e009883a 	mov	r4,fp
10006fa4:	00093b40 	call	100093b4 <_Balloc>
10006fa8:	89800417 	ldw	r6,16(r17)
10006fac:	89400304 	addi	r5,r17,12
10006fb0:	11000304 	addi	r4,r2,12
10006fb4:	31800084 	addi	r6,r6,2
10006fb8:	318d883a 	add	r6,r6,r6
10006fbc:	318d883a 	add	r6,r6,r6
10006fc0:	1027883a 	mov	r19,r2
10006fc4:	0008fe80 	call	10008fe8 <memcpy>
10006fc8:	01800044 	movi	r6,1
10006fcc:	980b883a 	mov	r5,r19
10006fd0:	e009883a 	mov	r4,fp
10006fd4:	0009bf00 	call	10009bf0 <__lshift>
10006fd8:	1029883a 	mov	r20,r2
10006fdc:	003ecc06 	br	10006b10 <__alt_data_end+0xf8006b10>
10006fe0:	00800e44 	movi	r2,57
10006fe4:	90809026 	beq	r18,r2,10007228 <_dtoa_r+0x152c>
10006fe8:	92000044 	addi	r8,r18,1
10006fec:	003f1f06 	br	10006c6c <__alt_data_end+0xf8006c6c>
10006ff0:	9011883a 	mov	r8,r18
10006ff4:	8825883a 	mov	r18,r17
10006ff8:	a023883a 	mov	r17,r20
10006ffc:	003e2906 	br	100068a4 <__alt_data_end+0xf80068a4>
10007000:	002b883a 	mov	r21,zero
10007004:	0023883a 	mov	r17,zero
10007008:	003f5406 	br	10006d5c <__alt_data_end+0xf8006d5c>
1000700c:	61bfffc4 	addi	r6,r12,-1
10007010:	300490fa 	slli	r2,r6,3
10007014:	00c40074 	movhi	r3,4097
10007018:	18d08104 	addi	r3,r3,16900
1000701c:	1885883a 	add	r2,r3,r2
10007020:	11000017 	ldw	r4,0(r2)
10007024:	11400117 	ldw	r5,4(r2)
10007028:	d8800717 	ldw	r2,28(sp)
1000702c:	880f883a 	mov	r7,r17
10007030:	d9801215 	stw	r6,72(sp)
10007034:	800d883a 	mov	r6,r16
10007038:	db001615 	stw	r12,88(sp)
1000703c:	15c00044 	addi	r23,r2,1
10007040:	00104040 	call	10010404 <__muldf3>
10007044:	d9401017 	ldw	r5,64(sp)
10007048:	d9000f17 	ldw	r4,60(sp)
1000704c:	d8c01515 	stw	r3,84(sp)
10007050:	d8801415 	stw	r2,80(sp)
10007054:	001156c0 	call	1001156c <__fixdfsi>
10007058:	1009883a 	mov	r4,r2
1000705c:	1021883a 	mov	r16,r2
10007060:	00115ec0 	call	100115ec <__floatsidf>
10007064:	d9000f17 	ldw	r4,60(sp)
10007068:	d9401017 	ldw	r5,64(sp)
1000706c:	100d883a 	mov	r6,r2
10007070:	180f883a 	mov	r7,r3
10007074:	0010c700 	call	10010c70 <__subdf3>
10007078:	1829883a 	mov	r20,r3
1000707c:	d8c00717 	ldw	r3,28(sp)
10007080:	84000c04 	addi	r16,r16,48
10007084:	1023883a 	mov	r17,r2
10007088:	1c000005 	stb	r16,0(r3)
1000708c:	db001617 	ldw	r12,88(sp)
10007090:	00800044 	movi	r2,1
10007094:	60802226 	beq	r12,r2,10007120 <_dtoa_r+0x1424>
10007098:	d9c00717 	ldw	r7,28(sp)
1000709c:	8805883a 	mov	r2,r17
100070a0:	b82b883a 	mov	r21,r23
100070a4:	3b19883a 	add	r12,r7,r12
100070a8:	6023883a 	mov	r17,r12
100070ac:	a007883a 	mov	r3,r20
100070b0:	dc800f15 	stw	r18,60(sp)
100070b4:	000d883a 	mov	r6,zero
100070b8:	01d00934 	movhi	r7,16420
100070bc:	1009883a 	mov	r4,r2
100070c0:	180b883a 	mov	r5,r3
100070c4:	00104040 	call	10010404 <__muldf3>
100070c8:	180b883a 	mov	r5,r3
100070cc:	1009883a 	mov	r4,r2
100070d0:	1829883a 	mov	r20,r3
100070d4:	1025883a 	mov	r18,r2
100070d8:	001156c0 	call	1001156c <__fixdfsi>
100070dc:	1009883a 	mov	r4,r2
100070e0:	1021883a 	mov	r16,r2
100070e4:	00115ec0 	call	100115ec <__floatsidf>
100070e8:	100d883a 	mov	r6,r2
100070ec:	180f883a 	mov	r7,r3
100070f0:	9009883a 	mov	r4,r18
100070f4:	a00b883a 	mov	r5,r20
100070f8:	84000c04 	addi	r16,r16,48
100070fc:	0010c700 	call	10010c70 <__subdf3>
10007100:	ad400044 	addi	r21,r21,1
10007104:	ac3fffc5 	stb	r16,-1(r21)
10007108:	ac7fea1e 	bne	r21,r17,100070b4 <__alt_data_end+0xf80070b4>
1000710c:	1023883a 	mov	r17,r2
10007110:	d8801217 	ldw	r2,72(sp)
10007114:	dc800f17 	ldw	r18,60(sp)
10007118:	1829883a 	mov	r20,r3
1000711c:	b8af883a 	add	r23,r23,r2
10007120:	d9001417 	ldw	r4,80(sp)
10007124:	d9401517 	ldw	r5,84(sp)
10007128:	000d883a 	mov	r6,zero
1000712c:	01cff834 	movhi	r7,16352
10007130:	000ef300 	call	1000ef30 <__adddf3>
10007134:	880d883a 	mov	r6,r17
10007138:	a00f883a 	mov	r7,r20
1000713c:	1009883a 	mov	r4,r2
10007140:	180b883a 	mov	r5,r3
10007144:	00103100 	call	10010310 <__ledf2>
10007148:	10003e0e 	bge	r2,zero,10007244 <_dtoa_r+0x1548>
1000714c:	d9001317 	ldw	r4,76(sp)
10007150:	bd3fffc3 	ldbu	r20,-1(r23)
10007154:	d9000515 	stw	r4,20(sp)
10007158:	003d3b06 	br	10006648 <__alt_data_end+0xf8006648>
1000715c:	0027883a 	mov	r19,zero
10007160:	003f1b06 	br	10006dd0 <__alt_data_end+0xf8006dd0>
10007164:	d8800817 	ldw	r2,32(sp)
10007168:	11e9c83a 	sub	r20,r2,r7
1000716c:	0005883a 	mov	r2,zero
10007170:	003d5406 	br	100066c4 <__alt_data_end+0xf80066c4>
10007174:	00800044 	movi	r2,1
10007178:	003dc706 	br	10006898 <__alt_data_end+0xf8006898>
1000717c:	d8c00217 	ldw	r3,8(sp)
10007180:	00800d84 	movi	r2,54
10007184:	dd400a17 	ldw	r21,40(sp)
10007188:	10c5c83a 	sub	r2,r2,r3
1000718c:	dd000817 	ldw	r20,32(sp)
10007190:	003d4c06 	br	100066c4 <__alt_data_end+0xf80066c4>
10007194:	dc800f15 	stw	r18,60(sp)
10007198:	dcc01015 	stw	r19,64(sp)
1000719c:	04000084 	movi	r16,2
100071a0:	003bed06 	br	10006158 <__alt_data_end+0xf8006158>
100071a4:	d9000617 	ldw	r4,24(sp)
100071a8:	203f0d26 	beq	r4,zero,10006de0 <__alt_data_end+0xf8006de0>
100071ac:	d9800c17 	ldw	r6,48(sp)
100071b0:	01bcab0e 	bge	zero,r6,10006460 <__alt_data_end+0xf8006460>
100071b4:	d9401017 	ldw	r5,64(sp)
100071b8:	d9000f17 	ldw	r4,60(sp)
100071bc:	000d883a 	mov	r6,zero
100071c0:	01d00934 	movhi	r7,16420
100071c4:	00104040 	call	10010404 <__muldf3>
100071c8:	81000044 	addi	r4,r16,1
100071cc:	d8800f15 	stw	r2,60(sp)
100071d0:	d8c01015 	stw	r3,64(sp)
100071d4:	00115ec0 	call	100115ec <__floatsidf>
100071d8:	d9800f17 	ldw	r6,60(sp)
100071dc:	d9c01017 	ldw	r7,64(sp)
100071e0:	1009883a 	mov	r4,r2
100071e4:	180b883a 	mov	r5,r3
100071e8:	00104040 	call	10010404 <__muldf3>
100071ec:	01d00734 	movhi	r7,16412
100071f0:	000d883a 	mov	r6,zero
100071f4:	1009883a 	mov	r4,r2
100071f8:	180b883a 	mov	r5,r3
100071fc:	000ef300 	call	1000ef30 <__adddf3>
10007200:	d9c00517 	ldw	r7,20(sp)
10007204:	047f3034 	movhi	r17,64704
10007208:	1021883a 	mov	r16,r2
1000720c:	39ffffc4 	addi	r7,r7,-1
10007210:	d9c01315 	stw	r7,76(sp)
10007214:	1c63883a 	add	r17,r3,r17
10007218:	db000c17 	ldw	r12,48(sp)
1000721c:	003bea06 	br	100061c8 <__alt_data_end+0xf80061c8>
10007220:	dc000915 	stw	r16,36(sp)
10007224:	003e0e06 	br	10006a60 <__alt_data_end+0xf8006a60>
10007228:	01000e44 	movi	r4,57
1000722c:	8825883a 	mov	r18,r17
10007230:	9dc00044 	addi	r23,r19,1
10007234:	99000005 	stb	r4,0(r19)
10007238:	a023883a 	mov	r17,r20
1000723c:	dc000915 	stw	r16,36(sp)
10007240:	003da406 	br	100068d4 <__alt_data_end+0xf80068d4>
10007244:	d9801417 	ldw	r6,80(sp)
10007248:	d9c01517 	ldw	r7,84(sp)
1000724c:	0009883a 	mov	r4,zero
10007250:	014ff834 	movhi	r5,16352
10007254:	0010c700 	call	10010c70 <__subdf3>
10007258:	880d883a 	mov	r6,r17
1000725c:	a00f883a 	mov	r7,r20
10007260:	1009883a 	mov	r4,r2
10007264:	180b883a 	mov	r5,r3
10007268:	00102340 	call	10010234 <__gedf2>
1000726c:	00bc7c0e 	bge	zero,r2,10006460 <__alt_data_end+0xf8006460>
10007270:	01000c04 	movi	r4,48
10007274:	00000106 	br	1000727c <_dtoa_r+0x1580>
10007278:	102f883a 	mov	r23,r2
1000727c:	b8bfffc4 	addi	r2,r23,-1
10007280:	10c00007 	ldb	r3,0(r2)
10007284:	193ffc26 	beq	r3,r4,10007278 <__alt_data_end+0xf8007278>
10007288:	d9801317 	ldw	r6,76(sp)
1000728c:	d9800515 	stw	r6,20(sp)
10007290:	003c4406 	br	100063a4 <__alt_data_end+0xf80063a4>
10007294:	d9801317 	ldw	r6,76(sp)
10007298:	d9800515 	stw	r6,20(sp)
1000729c:	003cea06 	br	10006648 <__alt_data_end+0xf8006648>
100072a0:	dd800f17 	ldw	r22,60(sp)
100072a4:	dcc01017 	ldw	r19,64(sp)
100072a8:	dc801217 	ldw	r18,72(sp)
100072ac:	003c6c06 	br	10006460 <__alt_data_end+0xf8006460>
100072b0:	903e031e 	bne	r18,zero,10006ac0 <__alt_data_end+0xf8006ac0>
100072b4:	003ebb06 	br	10006da4 <__alt_data_end+0xf8006da4>
100072b8:	103e6c1e 	bne	r2,zero,10006c6c <__alt_data_end+0xf8006c6c>
100072bc:	4080004c 	andi	r2,r8,1
100072c0:	103e6a26 	beq	r2,zero,10006c6c <__alt_data_end+0xf8006c6c>
100072c4:	003e6606 	br	10006c60 <__alt_data_end+0xf8006c60>
100072c8:	d8c00317 	ldw	r3,12(sp)
100072cc:	00800084 	movi	r2,2
100072d0:	10c02916 	blt	r2,r3,10007378 <_dtoa_r+0x167c>
100072d4:	d9000c17 	ldw	r4,48(sp)
100072d8:	003e8806 	br	10006cfc <__alt_data_end+0xf8006cfc>
100072dc:	04000084 	movi	r16,2
100072e0:	003b9d06 	br	10006158 <__alt_data_end+0xf8006158>
100072e4:	d9001317 	ldw	r4,76(sp)
100072e8:	d9000515 	stw	r4,20(sp)
100072ec:	003cd606 	br	10006648 <__alt_data_end+0xf8006648>
100072f0:	d8801317 	ldw	r2,76(sp)
100072f4:	d8800515 	stw	r2,20(sp)
100072f8:	003c2a06 	br	100063a4 <__alt_data_end+0xf80063a4>
100072fc:	d9800317 	ldw	r6,12(sp)
10007300:	00800084 	movi	r2,2
10007304:	11801516 	blt	r2,r6,1000735c <_dtoa_r+0x1660>
10007308:	d9c00c17 	ldw	r7,48(sp)
1000730c:	d9c00615 	stw	r7,24(sp)
10007310:	003df706 	br	10006af0 <__alt_data_end+0xf8006af0>
10007314:	193d3926 	beq	r3,r4,100067fc <__alt_data_end+0xf80067fc>
10007318:	00c00f04 	movi	r3,60
1000731c:	1885c83a 	sub	r2,r3,r2
10007320:	003ddf06 	br	10006aa0 <__alt_data_end+0xf8006aa0>
10007324:	e009883a 	mov	r4,fp
10007328:	e0001115 	stw	zero,68(fp)
1000732c:	000b883a 	mov	r5,zero
10007330:	00093b40 	call	100093b4 <_Balloc>
10007334:	d8800715 	stw	r2,28(sp)
10007338:	d8c00717 	ldw	r3,28(sp)
1000733c:	00bfffc4 	movi	r2,-1
10007340:	01000044 	movi	r4,1
10007344:	d8800c15 	stw	r2,48(sp)
10007348:	e0c01015 	stw	r3,64(fp)
1000734c:	d9000b15 	stw	r4,44(sp)
10007350:	d8800615 	stw	r2,24(sp)
10007354:	d8002215 	stw	zero,136(sp)
10007358:	003c4106 	br	10006460 <__alt_data_end+0xf8006460>
1000735c:	d8c00c17 	ldw	r3,48(sp)
10007360:	d8c00615 	stw	r3,24(sp)
10007364:	003e7006 	br	10006d28 <__alt_data_end+0xf8006d28>
10007368:	04400044 	movi	r17,1
1000736c:	003b2006 	br	10005ff0 <__alt_data_end+0xf8005ff0>
10007370:	000b883a 	mov	r5,zero
10007374:	003b3d06 	br	1000606c <__alt_data_end+0xf800606c>
10007378:	d8800c17 	ldw	r2,48(sp)
1000737c:	d8800615 	stw	r2,24(sp)
10007380:	003e6906 	br	10006d28 <__alt_data_end+0xf8006d28>

10007384 <__sflush_r>:
10007384:	2880030b 	ldhu	r2,12(r5)
10007388:	defffb04 	addi	sp,sp,-20
1000738c:	dcc00315 	stw	r19,12(sp)
10007390:	dc400115 	stw	r17,4(sp)
10007394:	dfc00415 	stw	ra,16(sp)
10007398:	dc800215 	stw	r18,8(sp)
1000739c:	dc000015 	stw	r16,0(sp)
100073a0:	10c0020c 	andi	r3,r2,8
100073a4:	2823883a 	mov	r17,r5
100073a8:	2027883a 	mov	r19,r4
100073ac:	1800311e 	bne	r3,zero,10007474 <__sflush_r+0xf0>
100073b0:	28c00117 	ldw	r3,4(r5)
100073b4:	10820014 	ori	r2,r2,2048
100073b8:	2880030d 	sth	r2,12(r5)
100073bc:	00c04b0e 	bge	zero,r3,100074ec <__sflush_r+0x168>
100073c0:	8a000a17 	ldw	r8,40(r17)
100073c4:	40002326 	beq	r8,zero,10007454 <__sflush_r+0xd0>
100073c8:	9c000017 	ldw	r16,0(r19)
100073cc:	10c4000c 	andi	r3,r2,4096
100073d0:	98000015 	stw	zero,0(r19)
100073d4:	18004826 	beq	r3,zero,100074f8 <__sflush_r+0x174>
100073d8:	89801417 	ldw	r6,80(r17)
100073dc:	10c0010c 	andi	r3,r2,4
100073e0:	18000626 	beq	r3,zero,100073fc <__sflush_r+0x78>
100073e4:	88c00117 	ldw	r3,4(r17)
100073e8:	88800c17 	ldw	r2,48(r17)
100073ec:	30cdc83a 	sub	r6,r6,r3
100073f0:	10000226 	beq	r2,zero,100073fc <__sflush_r+0x78>
100073f4:	88800f17 	ldw	r2,60(r17)
100073f8:	308dc83a 	sub	r6,r6,r2
100073fc:	89400717 	ldw	r5,28(r17)
10007400:	000f883a 	mov	r7,zero
10007404:	9809883a 	mov	r4,r19
10007408:	403ee83a 	callr	r8
1000740c:	00ffffc4 	movi	r3,-1
10007410:	10c04426 	beq	r2,r3,10007524 <__sflush_r+0x1a0>
10007414:	88c0030b 	ldhu	r3,12(r17)
10007418:	89000417 	ldw	r4,16(r17)
1000741c:	88000115 	stw	zero,4(r17)
10007420:	197dffcc 	andi	r5,r3,63487
10007424:	8940030d 	sth	r5,12(r17)
10007428:	89000015 	stw	r4,0(r17)
1000742c:	18c4000c 	andi	r3,r3,4096
10007430:	18002c1e 	bne	r3,zero,100074e4 <__sflush_r+0x160>
10007434:	89400c17 	ldw	r5,48(r17)
10007438:	9c000015 	stw	r16,0(r19)
1000743c:	28000526 	beq	r5,zero,10007454 <__sflush_r+0xd0>
10007440:	88801004 	addi	r2,r17,64
10007444:	28800226 	beq	r5,r2,10007450 <__sflush_r+0xcc>
10007448:	9809883a 	mov	r4,r19
1000744c:	0007b000 	call	10007b00 <_free_r>
10007450:	88000c15 	stw	zero,48(r17)
10007454:	0005883a 	mov	r2,zero
10007458:	dfc00417 	ldw	ra,16(sp)
1000745c:	dcc00317 	ldw	r19,12(sp)
10007460:	dc800217 	ldw	r18,8(sp)
10007464:	dc400117 	ldw	r17,4(sp)
10007468:	dc000017 	ldw	r16,0(sp)
1000746c:	dec00504 	addi	sp,sp,20
10007470:	f800283a 	ret
10007474:	2c800417 	ldw	r18,16(r5)
10007478:	903ff626 	beq	r18,zero,10007454 <__alt_data_end+0xf8007454>
1000747c:	2c000017 	ldw	r16,0(r5)
10007480:	108000cc 	andi	r2,r2,3
10007484:	2c800015 	stw	r18,0(r5)
10007488:	84a1c83a 	sub	r16,r16,r18
1000748c:	1000131e 	bne	r2,zero,100074dc <__sflush_r+0x158>
10007490:	28800517 	ldw	r2,20(r5)
10007494:	88800215 	stw	r2,8(r17)
10007498:	04000316 	blt	zero,r16,100074a8 <__sflush_r+0x124>
1000749c:	003fed06 	br	10007454 <__alt_data_end+0xf8007454>
100074a0:	90a5883a 	add	r18,r18,r2
100074a4:	043feb0e 	bge	zero,r16,10007454 <__alt_data_end+0xf8007454>
100074a8:	88800917 	ldw	r2,36(r17)
100074ac:	89400717 	ldw	r5,28(r17)
100074b0:	800f883a 	mov	r7,r16
100074b4:	900d883a 	mov	r6,r18
100074b8:	9809883a 	mov	r4,r19
100074bc:	103ee83a 	callr	r2
100074c0:	80a1c83a 	sub	r16,r16,r2
100074c4:	00bff616 	blt	zero,r2,100074a0 <__alt_data_end+0xf80074a0>
100074c8:	88c0030b 	ldhu	r3,12(r17)
100074cc:	00bfffc4 	movi	r2,-1
100074d0:	18c01014 	ori	r3,r3,64
100074d4:	88c0030d 	sth	r3,12(r17)
100074d8:	003fdf06 	br	10007458 <__alt_data_end+0xf8007458>
100074dc:	0005883a 	mov	r2,zero
100074e0:	003fec06 	br	10007494 <__alt_data_end+0xf8007494>
100074e4:	88801415 	stw	r2,80(r17)
100074e8:	003fd206 	br	10007434 <__alt_data_end+0xf8007434>
100074ec:	28c00f17 	ldw	r3,60(r5)
100074f0:	00ffb316 	blt	zero,r3,100073c0 <__alt_data_end+0xf80073c0>
100074f4:	003fd706 	br	10007454 <__alt_data_end+0xf8007454>
100074f8:	89400717 	ldw	r5,28(r17)
100074fc:	000d883a 	mov	r6,zero
10007500:	01c00044 	movi	r7,1
10007504:	9809883a 	mov	r4,r19
10007508:	403ee83a 	callr	r8
1000750c:	100d883a 	mov	r6,r2
10007510:	00bfffc4 	movi	r2,-1
10007514:	30801426 	beq	r6,r2,10007568 <__sflush_r+0x1e4>
10007518:	8880030b 	ldhu	r2,12(r17)
1000751c:	8a000a17 	ldw	r8,40(r17)
10007520:	003fae06 	br	100073dc <__alt_data_end+0xf80073dc>
10007524:	98c00017 	ldw	r3,0(r19)
10007528:	183fba26 	beq	r3,zero,10007414 <__alt_data_end+0xf8007414>
1000752c:	01000744 	movi	r4,29
10007530:	19000626 	beq	r3,r4,1000754c <__sflush_r+0x1c8>
10007534:	01000584 	movi	r4,22
10007538:	19000426 	beq	r3,r4,1000754c <__sflush_r+0x1c8>
1000753c:	88c0030b 	ldhu	r3,12(r17)
10007540:	18c01014 	ori	r3,r3,64
10007544:	88c0030d 	sth	r3,12(r17)
10007548:	003fc306 	br	10007458 <__alt_data_end+0xf8007458>
1000754c:	8880030b 	ldhu	r2,12(r17)
10007550:	88c00417 	ldw	r3,16(r17)
10007554:	88000115 	stw	zero,4(r17)
10007558:	10bdffcc 	andi	r2,r2,63487
1000755c:	8880030d 	sth	r2,12(r17)
10007560:	88c00015 	stw	r3,0(r17)
10007564:	003fb306 	br	10007434 <__alt_data_end+0xf8007434>
10007568:	98800017 	ldw	r2,0(r19)
1000756c:	103fea26 	beq	r2,zero,10007518 <__alt_data_end+0xf8007518>
10007570:	00c00744 	movi	r3,29
10007574:	10c00226 	beq	r2,r3,10007580 <__sflush_r+0x1fc>
10007578:	00c00584 	movi	r3,22
1000757c:	10c0031e 	bne	r2,r3,1000758c <__sflush_r+0x208>
10007580:	9c000015 	stw	r16,0(r19)
10007584:	0005883a 	mov	r2,zero
10007588:	003fb306 	br	10007458 <__alt_data_end+0xf8007458>
1000758c:	88c0030b 	ldhu	r3,12(r17)
10007590:	3005883a 	mov	r2,r6
10007594:	18c01014 	ori	r3,r3,64
10007598:	88c0030d 	sth	r3,12(r17)
1000759c:	003fae06 	br	10007458 <__alt_data_end+0xf8007458>

100075a0 <_fflush_r>:
100075a0:	defffd04 	addi	sp,sp,-12
100075a4:	dc000115 	stw	r16,4(sp)
100075a8:	dfc00215 	stw	ra,8(sp)
100075ac:	2021883a 	mov	r16,r4
100075b0:	20000226 	beq	r4,zero,100075bc <_fflush_r+0x1c>
100075b4:	20800e17 	ldw	r2,56(r4)
100075b8:	10000c26 	beq	r2,zero,100075ec <_fflush_r+0x4c>
100075bc:	2880030f 	ldh	r2,12(r5)
100075c0:	1000051e 	bne	r2,zero,100075d8 <_fflush_r+0x38>
100075c4:	0005883a 	mov	r2,zero
100075c8:	dfc00217 	ldw	ra,8(sp)
100075cc:	dc000117 	ldw	r16,4(sp)
100075d0:	dec00304 	addi	sp,sp,12
100075d4:	f800283a 	ret
100075d8:	8009883a 	mov	r4,r16
100075dc:	dfc00217 	ldw	ra,8(sp)
100075e0:	dc000117 	ldw	r16,4(sp)
100075e4:	dec00304 	addi	sp,sp,12
100075e8:	00073841 	jmpi	10007384 <__sflush_r>
100075ec:	d9400015 	stw	r5,0(sp)
100075f0:	000798c0 	call	1000798c <__sinit>
100075f4:	d9400017 	ldw	r5,0(sp)
100075f8:	003ff006 	br	100075bc <__alt_data_end+0xf80075bc>

100075fc <fflush>:
100075fc:	20000526 	beq	r4,zero,10007614 <fflush+0x18>
10007600:	00840074 	movhi	r2,4097
10007604:	10987604 	addi	r2,r2,25048
10007608:	200b883a 	mov	r5,r4
1000760c:	11000017 	ldw	r4,0(r2)
10007610:	00075a01 	jmpi	100075a0 <_fflush_r>
10007614:	00840074 	movhi	r2,4097
10007618:	10987504 	addi	r2,r2,25044
1000761c:	11000017 	ldw	r4,0(r2)
10007620:	01440034 	movhi	r5,4096
10007624:	295d6804 	addi	r5,r5,30112
10007628:	000839c1 	jmpi	1000839c <_fwalk_reent>

1000762c <__fp_unlock>:
1000762c:	0005883a 	mov	r2,zero
10007630:	f800283a 	ret

10007634 <_cleanup_r>:
10007634:	01440074 	movhi	r5,4097
10007638:	2976aa04 	addi	r5,r5,-9560
1000763c:	000839c1 	jmpi	1000839c <_fwalk_reent>

10007640 <__sinit.part.1>:
10007640:	defff704 	addi	sp,sp,-36
10007644:	00c40034 	movhi	r3,4096
10007648:	dfc00815 	stw	ra,32(sp)
1000764c:	ddc00715 	stw	r23,28(sp)
10007650:	dd800615 	stw	r22,24(sp)
10007654:	dd400515 	stw	r21,20(sp)
10007658:	dd000415 	stw	r20,16(sp)
1000765c:	dcc00315 	stw	r19,12(sp)
10007660:	dc800215 	stw	r18,8(sp)
10007664:	dc400115 	stw	r17,4(sp)
10007668:	dc000015 	stw	r16,0(sp)
1000766c:	18dd8d04 	addi	r3,r3,30260
10007670:	24000117 	ldw	r16,4(r4)
10007674:	20c00f15 	stw	r3,60(r4)
10007678:	2080bb04 	addi	r2,r4,748
1000767c:	00c000c4 	movi	r3,3
10007680:	20c0b915 	stw	r3,740(r4)
10007684:	2080ba15 	stw	r2,744(r4)
10007688:	2000b815 	stw	zero,736(r4)
1000768c:	05c00204 	movi	r23,8
10007690:	00800104 	movi	r2,4
10007694:	2025883a 	mov	r18,r4
10007698:	b80d883a 	mov	r6,r23
1000769c:	81001704 	addi	r4,r16,92
100076a0:	000b883a 	mov	r5,zero
100076a4:	80000015 	stw	zero,0(r16)
100076a8:	80000115 	stw	zero,4(r16)
100076ac:	80000215 	stw	zero,8(r16)
100076b0:	8080030d 	sth	r2,12(r16)
100076b4:	80001915 	stw	zero,100(r16)
100076b8:	8000038d 	sth	zero,14(r16)
100076bc:	80000415 	stw	zero,16(r16)
100076c0:	80000515 	stw	zero,20(r16)
100076c4:	80000615 	stw	zero,24(r16)
100076c8:	000928c0 	call	1000928c <memset>
100076cc:	05840074 	movhi	r22,4097
100076d0:	94400217 	ldw	r17,8(r18)
100076d4:	05440074 	movhi	r21,4097
100076d8:	05040074 	movhi	r20,4097
100076dc:	04c40074 	movhi	r19,4097
100076e0:	b5aaa604 	addi	r22,r22,-21864
100076e4:	ad6abd04 	addi	r21,r21,-21772
100076e8:	a52adc04 	addi	r20,r20,-21648
100076ec:	9ceaf304 	addi	r19,r19,-21556
100076f0:	85800815 	stw	r22,32(r16)
100076f4:	85400915 	stw	r21,36(r16)
100076f8:	85000a15 	stw	r20,40(r16)
100076fc:	84c00b15 	stw	r19,44(r16)
10007700:	84000715 	stw	r16,28(r16)
10007704:	00800284 	movi	r2,10
10007708:	8880030d 	sth	r2,12(r17)
1000770c:	00800044 	movi	r2,1
10007710:	b80d883a 	mov	r6,r23
10007714:	89001704 	addi	r4,r17,92
10007718:	000b883a 	mov	r5,zero
1000771c:	88000015 	stw	zero,0(r17)
10007720:	88000115 	stw	zero,4(r17)
10007724:	88000215 	stw	zero,8(r17)
10007728:	88001915 	stw	zero,100(r17)
1000772c:	8880038d 	sth	r2,14(r17)
10007730:	88000415 	stw	zero,16(r17)
10007734:	88000515 	stw	zero,20(r17)
10007738:	88000615 	stw	zero,24(r17)
1000773c:	000928c0 	call	1000928c <memset>
10007740:	94000317 	ldw	r16,12(r18)
10007744:	00800484 	movi	r2,18
10007748:	8c400715 	stw	r17,28(r17)
1000774c:	8d800815 	stw	r22,32(r17)
10007750:	8d400915 	stw	r21,36(r17)
10007754:	8d000a15 	stw	r20,40(r17)
10007758:	8cc00b15 	stw	r19,44(r17)
1000775c:	8080030d 	sth	r2,12(r16)
10007760:	00800084 	movi	r2,2
10007764:	80000015 	stw	zero,0(r16)
10007768:	80000115 	stw	zero,4(r16)
1000776c:	80000215 	stw	zero,8(r16)
10007770:	80001915 	stw	zero,100(r16)
10007774:	8080038d 	sth	r2,14(r16)
10007778:	80000415 	stw	zero,16(r16)
1000777c:	80000515 	stw	zero,20(r16)
10007780:	80000615 	stw	zero,24(r16)
10007784:	b80d883a 	mov	r6,r23
10007788:	000b883a 	mov	r5,zero
1000778c:	81001704 	addi	r4,r16,92
10007790:	000928c0 	call	1000928c <memset>
10007794:	00800044 	movi	r2,1
10007798:	84000715 	stw	r16,28(r16)
1000779c:	85800815 	stw	r22,32(r16)
100077a0:	85400915 	stw	r21,36(r16)
100077a4:	85000a15 	stw	r20,40(r16)
100077a8:	84c00b15 	stw	r19,44(r16)
100077ac:	90800e15 	stw	r2,56(r18)
100077b0:	dfc00817 	ldw	ra,32(sp)
100077b4:	ddc00717 	ldw	r23,28(sp)
100077b8:	dd800617 	ldw	r22,24(sp)
100077bc:	dd400517 	ldw	r21,20(sp)
100077c0:	dd000417 	ldw	r20,16(sp)
100077c4:	dcc00317 	ldw	r19,12(sp)
100077c8:	dc800217 	ldw	r18,8(sp)
100077cc:	dc400117 	ldw	r17,4(sp)
100077d0:	dc000017 	ldw	r16,0(sp)
100077d4:	dec00904 	addi	sp,sp,36
100077d8:	f800283a 	ret

100077dc <__fp_lock>:
100077dc:	0005883a 	mov	r2,zero
100077e0:	f800283a 	ret

100077e4 <__sfmoreglue>:
100077e4:	defffc04 	addi	sp,sp,-16
100077e8:	dc800215 	stw	r18,8(sp)
100077ec:	2825883a 	mov	r18,r5
100077f0:	dc000015 	stw	r16,0(sp)
100077f4:	01401a04 	movi	r5,104
100077f8:	2021883a 	mov	r16,r4
100077fc:	913fffc4 	addi	r4,r18,-1
10007800:	dfc00315 	stw	ra,12(sp)
10007804:	dc400115 	stw	r17,4(sp)
10007808:	0000fd00 	call	10000fd0 <__mulsi3>
1000780c:	8009883a 	mov	r4,r16
10007810:	11401d04 	addi	r5,r2,116
10007814:	1023883a 	mov	r17,r2
10007818:	00086f80 	call	100086f8 <_malloc_r>
1000781c:	1021883a 	mov	r16,r2
10007820:	10000726 	beq	r2,zero,10007840 <__sfmoreglue+0x5c>
10007824:	11000304 	addi	r4,r2,12
10007828:	10000015 	stw	zero,0(r2)
1000782c:	14800115 	stw	r18,4(r2)
10007830:	11000215 	stw	r4,8(r2)
10007834:	89801a04 	addi	r6,r17,104
10007838:	000b883a 	mov	r5,zero
1000783c:	000928c0 	call	1000928c <memset>
10007840:	8005883a 	mov	r2,r16
10007844:	dfc00317 	ldw	ra,12(sp)
10007848:	dc800217 	ldw	r18,8(sp)
1000784c:	dc400117 	ldw	r17,4(sp)
10007850:	dc000017 	ldw	r16,0(sp)
10007854:	dec00404 	addi	sp,sp,16
10007858:	f800283a 	ret

1000785c <__sfp>:
1000785c:	defffb04 	addi	sp,sp,-20
10007860:	dc000015 	stw	r16,0(sp)
10007864:	04040074 	movhi	r16,4097
10007868:	84187504 	addi	r16,r16,25044
1000786c:	dcc00315 	stw	r19,12(sp)
10007870:	2027883a 	mov	r19,r4
10007874:	81000017 	ldw	r4,0(r16)
10007878:	dfc00415 	stw	ra,16(sp)
1000787c:	dc800215 	stw	r18,8(sp)
10007880:	20800e17 	ldw	r2,56(r4)
10007884:	dc400115 	stw	r17,4(sp)
10007888:	1000021e 	bne	r2,zero,10007894 <__sfp+0x38>
1000788c:	00076400 	call	10007640 <__sinit.part.1>
10007890:	81000017 	ldw	r4,0(r16)
10007894:	2480b804 	addi	r18,r4,736
10007898:	047fffc4 	movi	r17,-1
1000789c:	91000117 	ldw	r4,4(r18)
100078a0:	94000217 	ldw	r16,8(r18)
100078a4:	213fffc4 	addi	r4,r4,-1
100078a8:	20000a16 	blt	r4,zero,100078d4 <__sfp+0x78>
100078ac:	8080030f 	ldh	r2,12(r16)
100078b0:	10000c26 	beq	r2,zero,100078e4 <__sfp+0x88>
100078b4:	80c01d04 	addi	r3,r16,116
100078b8:	00000206 	br	100078c4 <__sfp+0x68>
100078bc:	18bfe60f 	ldh	r2,-104(r3)
100078c0:	10000826 	beq	r2,zero,100078e4 <__sfp+0x88>
100078c4:	213fffc4 	addi	r4,r4,-1
100078c8:	1c3ffd04 	addi	r16,r3,-12
100078cc:	18c01a04 	addi	r3,r3,104
100078d0:	247ffa1e 	bne	r4,r17,100078bc <__alt_data_end+0xf80078bc>
100078d4:	90800017 	ldw	r2,0(r18)
100078d8:	10001d26 	beq	r2,zero,10007950 <__sfp+0xf4>
100078dc:	1025883a 	mov	r18,r2
100078e0:	003fee06 	br	1000789c <__alt_data_end+0xf800789c>
100078e4:	00bfffc4 	movi	r2,-1
100078e8:	8080038d 	sth	r2,14(r16)
100078ec:	00800044 	movi	r2,1
100078f0:	8080030d 	sth	r2,12(r16)
100078f4:	80001915 	stw	zero,100(r16)
100078f8:	80000015 	stw	zero,0(r16)
100078fc:	80000215 	stw	zero,8(r16)
10007900:	80000115 	stw	zero,4(r16)
10007904:	80000415 	stw	zero,16(r16)
10007908:	80000515 	stw	zero,20(r16)
1000790c:	80000615 	stw	zero,24(r16)
10007910:	01800204 	movi	r6,8
10007914:	000b883a 	mov	r5,zero
10007918:	81001704 	addi	r4,r16,92
1000791c:	000928c0 	call	1000928c <memset>
10007920:	8005883a 	mov	r2,r16
10007924:	80000c15 	stw	zero,48(r16)
10007928:	80000d15 	stw	zero,52(r16)
1000792c:	80001115 	stw	zero,68(r16)
10007930:	80001215 	stw	zero,72(r16)
10007934:	dfc00417 	ldw	ra,16(sp)
10007938:	dcc00317 	ldw	r19,12(sp)
1000793c:	dc800217 	ldw	r18,8(sp)
10007940:	dc400117 	ldw	r17,4(sp)
10007944:	dc000017 	ldw	r16,0(sp)
10007948:	dec00504 	addi	sp,sp,20
1000794c:	f800283a 	ret
10007950:	01400104 	movi	r5,4
10007954:	9809883a 	mov	r4,r19
10007958:	00077e40 	call	100077e4 <__sfmoreglue>
1000795c:	90800015 	stw	r2,0(r18)
10007960:	103fde1e 	bne	r2,zero,100078dc <__alt_data_end+0xf80078dc>
10007964:	00800304 	movi	r2,12
10007968:	98800015 	stw	r2,0(r19)
1000796c:	0005883a 	mov	r2,zero
10007970:	003ff006 	br	10007934 <__alt_data_end+0xf8007934>

10007974 <_cleanup>:
10007974:	00840074 	movhi	r2,4097
10007978:	10987504 	addi	r2,r2,25044
1000797c:	11000017 	ldw	r4,0(r2)
10007980:	01440074 	movhi	r5,4097
10007984:	2976aa04 	addi	r5,r5,-9560
10007988:	000839c1 	jmpi	1000839c <_fwalk_reent>

1000798c <__sinit>:
1000798c:	20800e17 	ldw	r2,56(r4)
10007990:	10000126 	beq	r2,zero,10007998 <__sinit+0xc>
10007994:	f800283a 	ret
10007998:	00076401 	jmpi	10007640 <__sinit.part.1>

1000799c <__sfp_lock_acquire>:
1000799c:	f800283a 	ret

100079a0 <__sfp_lock_release>:
100079a0:	f800283a 	ret

100079a4 <__sinit_lock_acquire>:
100079a4:	f800283a 	ret

100079a8 <__sinit_lock_release>:
100079a8:	f800283a 	ret

100079ac <__fp_lock_all>:
100079ac:	00840074 	movhi	r2,4097
100079b0:	10987604 	addi	r2,r2,25048
100079b4:	11000017 	ldw	r4,0(r2)
100079b8:	01440034 	movhi	r5,4096
100079bc:	295df704 	addi	r5,r5,30684
100079c0:	00082d81 	jmpi	100082d8 <_fwalk>

100079c4 <__fp_unlock_all>:
100079c4:	00840074 	movhi	r2,4097
100079c8:	10987604 	addi	r2,r2,25048
100079cc:	11000017 	ldw	r4,0(r2)
100079d0:	01440034 	movhi	r5,4096
100079d4:	295d8b04 	addi	r5,r5,30252
100079d8:	00082d81 	jmpi	100082d8 <_fwalk>

100079dc <_malloc_trim_r>:
100079dc:	defffb04 	addi	sp,sp,-20
100079e0:	dcc00315 	stw	r19,12(sp)
100079e4:	04c40074 	movhi	r19,4097
100079e8:	dc800215 	stw	r18,8(sp)
100079ec:	dc400115 	stw	r17,4(sp)
100079f0:	dc000015 	stw	r16,0(sp)
100079f4:	dfc00415 	stw	ra,16(sp)
100079f8:	2821883a 	mov	r16,r5
100079fc:	9cd2ef04 	addi	r19,r19,19388
10007a00:	2025883a 	mov	r18,r4
10007a04:	0011d700 	call	10011d70 <__malloc_lock>
10007a08:	98800217 	ldw	r2,8(r19)
10007a0c:	14400117 	ldw	r17,4(r2)
10007a10:	00bfff04 	movi	r2,-4
10007a14:	88a2703a 	and	r17,r17,r2
10007a18:	8c21c83a 	sub	r16,r17,r16
10007a1c:	8403fbc4 	addi	r16,r16,4079
10007a20:	8020d33a 	srli	r16,r16,12
10007a24:	0083ffc4 	movi	r2,4095
10007a28:	843fffc4 	addi	r16,r16,-1
10007a2c:	8020933a 	slli	r16,r16,12
10007a30:	1400060e 	bge	r2,r16,10007a4c <_malloc_trim_r+0x70>
10007a34:	000b883a 	mov	r5,zero
10007a38:	9009883a 	mov	r4,r18
10007a3c:	000aa440 	call	1000aa44 <_sbrk_r>
10007a40:	98c00217 	ldw	r3,8(r19)
10007a44:	1c47883a 	add	r3,r3,r17
10007a48:	10c00a26 	beq	r2,r3,10007a74 <_malloc_trim_r+0x98>
10007a4c:	9009883a 	mov	r4,r18
10007a50:	0011d940 	call	10011d94 <__malloc_unlock>
10007a54:	0005883a 	mov	r2,zero
10007a58:	dfc00417 	ldw	ra,16(sp)
10007a5c:	dcc00317 	ldw	r19,12(sp)
10007a60:	dc800217 	ldw	r18,8(sp)
10007a64:	dc400117 	ldw	r17,4(sp)
10007a68:	dc000017 	ldw	r16,0(sp)
10007a6c:	dec00504 	addi	sp,sp,20
10007a70:	f800283a 	ret
10007a74:	040bc83a 	sub	r5,zero,r16
10007a78:	9009883a 	mov	r4,r18
10007a7c:	000aa440 	call	1000aa44 <_sbrk_r>
10007a80:	00ffffc4 	movi	r3,-1
10007a84:	10c00d26 	beq	r2,r3,10007abc <_malloc_trim_r+0xe0>
10007a88:	00c400b4 	movhi	r3,4098
10007a8c:	18e00804 	addi	r3,r3,-32736
10007a90:	18800017 	ldw	r2,0(r3)
10007a94:	99000217 	ldw	r4,8(r19)
10007a98:	8c23c83a 	sub	r17,r17,r16
10007a9c:	8c400054 	ori	r17,r17,1
10007aa0:	1421c83a 	sub	r16,r2,r16
10007aa4:	24400115 	stw	r17,4(r4)
10007aa8:	9009883a 	mov	r4,r18
10007aac:	1c000015 	stw	r16,0(r3)
10007ab0:	0011d940 	call	10011d94 <__malloc_unlock>
10007ab4:	00800044 	movi	r2,1
10007ab8:	003fe706 	br	10007a58 <__alt_data_end+0xf8007a58>
10007abc:	000b883a 	mov	r5,zero
10007ac0:	9009883a 	mov	r4,r18
10007ac4:	000aa440 	call	1000aa44 <_sbrk_r>
10007ac8:	99000217 	ldw	r4,8(r19)
10007acc:	014003c4 	movi	r5,15
10007ad0:	1107c83a 	sub	r3,r2,r4
10007ad4:	28ffdd0e 	bge	r5,r3,10007a4c <__alt_data_end+0xf8007a4c>
10007ad8:	01440074 	movhi	r5,4097
10007adc:	29587804 	addi	r5,r5,25056
10007ae0:	29400017 	ldw	r5,0(r5)
10007ae4:	18c00054 	ori	r3,r3,1
10007ae8:	20c00115 	stw	r3,4(r4)
10007aec:	00c400b4 	movhi	r3,4098
10007af0:	1145c83a 	sub	r2,r2,r5
10007af4:	18e00804 	addi	r3,r3,-32736
10007af8:	18800015 	stw	r2,0(r3)
10007afc:	003fd306 	br	10007a4c <__alt_data_end+0xf8007a4c>

10007b00 <_free_r>:
10007b00:	28004126 	beq	r5,zero,10007c08 <_free_r+0x108>
10007b04:	defffd04 	addi	sp,sp,-12
10007b08:	dc400115 	stw	r17,4(sp)
10007b0c:	dc000015 	stw	r16,0(sp)
10007b10:	2023883a 	mov	r17,r4
10007b14:	2821883a 	mov	r16,r5
10007b18:	dfc00215 	stw	ra,8(sp)
10007b1c:	0011d700 	call	10011d70 <__malloc_lock>
10007b20:	81ffff17 	ldw	r7,-4(r16)
10007b24:	00bfff84 	movi	r2,-2
10007b28:	01040074 	movhi	r4,4097
10007b2c:	81bffe04 	addi	r6,r16,-8
10007b30:	3884703a 	and	r2,r7,r2
10007b34:	2112ef04 	addi	r4,r4,19388
10007b38:	308b883a 	add	r5,r6,r2
10007b3c:	2a400117 	ldw	r9,4(r5)
10007b40:	22000217 	ldw	r8,8(r4)
10007b44:	00ffff04 	movi	r3,-4
10007b48:	48c6703a 	and	r3,r9,r3
10007b4c:	2a005726 	beq	r5,r8,10007cac <_free_r+0x1ac>
10007b50:	28c00115 	stw	r3,4(r5)
10007b54:	39c0004c 	andi	r7,r7,1
10007b58:	3800091e 	bne	r7,zero,10007b80 <_free_r+0x80>
10007b5c:	823ffe17 	ldw	r8,-8(r16)
10007b60:	22400204 	addi	r9,r4,8
10007b64:	320dc83a 	sub	r6,r6,r8
10007b68:	31c00217 	ldw	r7,8(r6)
10007b6c:	1205883a 	add	r2,r2,r8
10007b70:	3a406526 	beq	r7,r9,10007d08 <_free_r+0x208>
10007b74:	32000317 	ldw	r8,12(r6)
10007b78:	3a000315 	stw	r8,12(r7)
10007b7c:	41c00215 	stw	r7,8(r8)
10007b80:	28cf883a 	add	r7,r5,r3
10007b84:	39c00117 	ldw	r7,4(r7)
10007b88:	39c0004c 	andi	r7,r7,1
10007b8c:	38003a26 	beq	r7,zero,10007c78 <_free_r+0x178>
10007b90:	10c00054 	ori	r3,r2,1
10007b94:	30c00115 	stw	r3,4(r6)
10007b98:	3087883a 	add	r3,r6,r2
10007b9c:	18800015 	stw	r2,0(r3)
10007ba0:	00c07fc4 	movi	r3,511
10007ba4:	18801936 	bltu	r3,r2,10007c0c <_free_r+0x10c>
10007ba8:	1004d0fa 	srli	r2,r2,3
10007bac:	01c00044 	movi	r7,1
10007bb0:	21400117 	ldw	r5,4(r4)
10007bb4:	10c00044 	addi	r3,r2,1
10007bb8:	18c7883a 	add	r3,r3,r3
10007bbc:	1005d0ba 	srai	r2,r2,2
10007bc0:	18c7883a 	add	r3,r3,r3
10007bc4:	18c7883a 	add	r3,r3,r3
10007bc8:	1907883a 	add	r3,r3,r4
10007bcc:	3884983a 	sll	r2,r7,r2
10007bd0:	19c00017 	ldw	r7,0(r3)
10007bd4:	1a3ffe04 	addi	r8,r3,-8
10007bd8:	1144b03a 	or	r2,r2,r5
10007bdc:	32000315 	stw	r8,12(r6)
10007be0:	31c00215 	stw	r7,8(r6)
10007be4:	20800115 	stw	r2,4(r4)
10007be8:	19800015 	stw	r6,0(r3)
10007bec:	39800315 	stw	r6,12(r7)
10007bf0:	8809883a 	mov	r4,r17
10007bf4:	dfc00217 	ldw	ra,8(sp)
10007bf8:	dc400117 	ldw	r17,4(sp)
10007bfc:	dc000017 	ldw	r16,0(sp)
10007c00:	dec00304 	addi	sp,sp,12
10007c04:	0011d941 	jmpi	10011d94 <__malloc_unlock>
10007c08:	f800283a 	ret
10007c0c:	100ad27a 	srli	r5,r2,9
10007c10:	00c00104 	movi	r3,4
10007c14:	19404a36 	bltu	r3,r5,10007d40 <_free_r+0x240>
10007c18:	100ad1ba 	srli	r5,r2,6
10007c1c:	28c00e44 	addi	r3,r5,57
10007c20:	18c7883a 	add	r3,r3,r3
10007c24:	29400e04 	addi	r5,r5,56
10007c28:	18c7883a 	add	r3,r3,r3
10007c2c:	18c7883a 	add	r3,r3,r3
10007c30:	1909883a 	add	r4,r3,r4
10007c34:	20c00017 	ldw	r3,0(r4)
10007c38:	01c40074 	movhi	r7,4097
10007c3c:	213ffe04 	addi	r4,r4,-8
10007c40:	39d2ef04 	addi	r7,r7,19388
10007c44:	20c04426 	beq	r4,r3,10007d58 <_free_r+0x258>
10007c48:	01ffff04 	movi	r7,-4
10007c4c:	19400117 	ldw	r5,4(r3)
10007c50:	29ca703a 	and	r5,r5,r7
10007c54:	1140022e 	bgeu	r2,r5,10007c60 <_free_r+0x160>
10007c58:	18c00217 	ldw	r3,8(r3)
10007c5c:	20fffb1e 	bne	r4,r3,10007c4c <__alt_data_end+0xf8007c4c>
10007c60:	19000317 	ldw	r4,12(r3)
10007c64:	31000315 	stw	r4,12(r6)
10007c68:	30c00215 	stw	r3,8(r6)
10007c6c:	21800215 	stw	r6,8(r4)
10007c70:	19800315 	stw	r6,12(r3)
10007c74:	003fde06 	br	10007bf0 <__alt_data_end+0xf8007bf0>
10007c78:	29c00217 	ldw	r7,8(r5)
10007c7c:	10c5883a 	add	r2,r2,r3
10007c80:	00c40074 	movhi	r3,4097
10007c84:	18d2f104 	addi	r3,r3,19396
10007c88:	38c03b26 	beq	r7,r3,10007d78 <_free_r+0x278>
10007c8c:	2a000317 	ldw	r8,12(r5)
10007c90:	11400054 	ori	r5,r2,1
10007c94:	3087883a 	add	r3,r6,r2
10007c98:	3a000315 	stw	r8,12(r7)
10007c9c:	41c00215 	stw	r7,8(r8)
10007ca0:	31400115 	stw	r5,4(r6)
10007ca4:	18800015 	stw	r2,0(r3)
10007ca8:	003fbd06 	br	10007ba0 <__alt_data_end+0xf8007ba0>
10007cac:	39c0004c 	andi	r7,r7,1
10007cb0:	10c5883a 	add	r2,r2,r3
10007cb4:	3800071e 	bne	r7,zero,10007cd4 <_free_r+0x1d4>
10007cb8:	81fffe17 	ldw	r7,-8(r16)
10007cbc:	31cdc83a 	sub	r6,r6,r7
10007cc0:	30c00317 	ldw	r3,12(r6)
10007cc4:	31400217 	ldw	r5,8(r6)
10007cc8:	11c5883a 	add	r2,r2,r7
10007ccc:	28c00315 	stw	r3,12(r5)
10007cd0:	19400215 	stw	r5,8(r3)
10007cd4:	10c00054 	ori	r3,r2,1
10007cd8:	30c00115 	stw	r3,4(r6)
10007cdc:	00c40074 	movhi	r3,4097
10007ce0:	18d87904 	addi	r3,r3,25060
10007ce4:	18c00017 	ldw	r3,0(r3)
10007ce8:	21800215 	stw	r6,8(r4)
10007cec:	10ffc036 	bltu	r2,r3,10007bf0 <__alt_data_end+0xf8007bf0>
10007cf0:	00840074 	movhi	r2,4097
10007cf4:	109fff04 	addi	r2,r2,32764
10007cf8:	11400017 	ldw	r5,0(r2)
10007cfc:	8809883a 	mov	r4,r17
10007d00:	00079dc0 	call	100079dc <_malloc_trim_r>
10007d04:	003fba06 	br	10007bf0 <__alt_data_end+0xf8007bf0>
10007d08:	28c9883a 	add	r4,r5,r3
10007d0c:	21000117 	ldw	r4,4(r4)
10007d10:	2100004c 	andi	r4,r4,1
10007d14:	2000391e 	bne	r4,zero,10007dfc <_free_r+0x2fc>
10007d18:	29c00217 	ldw	r7,8(r5)
10007d1c:	29000317 	ldw	r4,12(r5)
10007d20:	1885883a 	add	r2,r3,r2
10007d24:	10c00054 	ori	r3,r2,1
10007d28:	39000315 	stw	r4,12(r7)
10007d2c:	21c00215 	stw	r7,8(r4)
10007d30:	30c00115 	stw	r3,4(r6)
10007d34:	308d883a 	add	r6,r6,r2
10007d38:	30800015 	stw	r2,0(r6)
10007d3c:	003fac06 	br	10007bf0 <__alt_data_end+0xf8007bf0>
10007d40:	00c00504 	movi	r3,20
10007d44:	19401536 	bltu	r3,r5,10007d9c <_free_r+0x29c>
10007d48:	28c01704 	addi	r3,r5,92
10007d4c:	18c7883a 	add	r3,r3,r3
10007d50:	294016c4 	addi	r5,r5,91
10007d54:	003fb406 	br	10007c28 <__alt_data_end+0xf8007c28>
10007d58:	280bd0ba 	srai	r5,r5,2
10007d5c:	00c00044 	movi	r3,1
10007d60:	38800117 	ldw	r2,4(r7)
10007d64:	194a983a 	sll	r5,r3,r5
10007d68:	2007883a 	mov	r3,r4
10007d6c:	2884b03a 	or	r2,r5,r2
10007d70:	38800115 	stw	r2,4(r7)
10007d74:	003fbb06 	br	10007c64 <__alt_data_end+0xf8007c64>
10007d78:	21800515 	stw	r6,20(r4)
10007d7c:	21800415 	stw	r6,16(r4)
10007d80:	10c00054 	ori	r3,r2,1
10007d84:	31c00315 	stw	r7,12(r6)
10007d88:	31c00215 	stw	r7,8(r6)
10007d8c:	30c00115 	stw	r3,4(r6)
10007d90:	308d883a 	add	r6,r6,r2
10007d94:	30800015 	stw	r2,0(r6)
10007d98:	003f9506 	br	10007bf0 <__alt_data_end+0xf8007bf0>
10007d9c:	00c01504 	movi	r3,84
10007da0:	19400536 	bltu	r3,r5,10007db8 <_free_r+0x2b8>
10007da4:	100ad33a 	srli	r5,r2,12
10007da8:	28c01bc4 	addi	r3,r5,111
10007dac:	18c7883a 	add	r3,r3,r3
10007db0:	29401b84 	addi	r5,r5,110
10007db4:	003f9c06 	br	10007c28 <__alt_data_end+0xf8007c28>
10007db8:	00c05504 	movi	r3,340
10007dbc:	19400536 	bltu	r3,r5,10007dd4 <_free_r+0x2d4>
10007dc0:	100ad3fa 	srli	r5,r2,15
10007dc4:	28c01e04 	addi	r3,r5,120
10007dc8:	18c7883a 	add	r3,r3,r3
10007dcc:	29401dc4 	addi	r5,r5,119
10007dd0:	003f9506 	br	10007c28 <__alt_data_end+0xf8007c28>
10007dd4:	00c15504 	movi	r3,1364
10007dd8:	19400536 	bltu	r3,r5,10007df0 <_free_r+0x2f0>
10007ddc:	100ad4ba 	srli	r5,r2,18
10007de0:	28c01f44 	addi	r3,r5,125
10007de4:	18c7883a 	add	r3,r3,r3
10007de8:	29401f04 	addi	r5,r5,124
10007dec:	003f8e06 	br	10007c28 <__alt_data_end+0xf8007c28>
10007df0:	00c03f84 	movi	r3,254
10007df4:	01401f84 	movi	r5,126
10007df8:	003f8b06 	br	10007c28 <__alt_data_end+0xf8007c28>
10007dfc:	10c00054 	ori	r3,r2,1
10007e00:	30c00115 	stw	r3,4(r6)
10007e04:	308d883a 	add	r6,r6,r2
10007e08:	30800015 	stw	r2,0(r6)
10007e0c:	003f7806 	br	10007bf0 <__alt_data_end+0xf8007bf0>

10007e10 <__sfvwrite_r>:
10007e10:	30800217 	ldw	r2,8(r6)
10007e14:	10006726 	beq	r2,zero,10007fb4 <__sfvwrite_r+0x1a4>
10007e18:	28c0030b 	ldhu	r3,12(r5)
10007e1c:	defff404 	addi	sp,sp,-48
10007e20:	dd400715 	stw	r21,28(sp)
10007e24:	dd000615 	stw	r20,24(sp)
10007e28:	dc000215 	stw	r16,8(sp)
10007e2c:	dfc00b15 	stw	ra,44(sp)
10007e30:	df000a15 	stw	fp,40(sp)
10007e34:	ddc00915 	stw	r23,36(sp)
10007e38:	dd800815 	stw	r22,32(sp)
10007e3c:	dcc00515 	stw	r19,20(sp)
10007e40:	dc800415 	stw	r18,16(sp)
10007e44:	dc400315 	stw	r17,12(sp)
10007e48:	1880020c 	andi	r2,r3,8
10007e4c:	2821883a 	mov	r16,r5
10007e50:	202b883a 	mov	r21,r4
10007e54:	3029883a 	mov	r20,r6
10007e58:	10002726 	beq	r2,zero,10007ef8 <__sfvwrite_r+0xe8>
10007e5c:	28800417 	ldw	r2,16(r5)
10007e60:	10002526 	beq	r2,zero,10007ef8 <__sfvwrite_r+0xe8>
10007e64:	1880008c 	andi	r2,r3,2
10007e68:	a4400017 	ldw	r17,0(r20)
10007e6c:	10002a26 	beq	r2,zero,10007f18 <__sfvwrite_r+0x108>
10007e70:	05a00034 	movhi	r22,32768
10007e74:	0027883a 	mov	r19,zero
10007e78:	0025883a 	mov	r18,zero
10007e7c:	b5bf0004 	addi	r22,r22,-1024
10007e80:	980d883a 	mov	r6,r19
10007e84:	a809883a 	mov	r4,r21
10007e88:	90004626 	beq	r18,zero,10007fa4 <__sfvwrite_r+0x194>
10007e8c:	900f883a 	mov	r7,r18
10007e90:	b480022e 	bgeu	r22,r18,10007e9c <__sfvwrite_r+0x8c>
10007e94:	01e00034 	movhi	r7,32768
10007e98:	39ff0004 	addi	r7,r7,-1024
10007e9c:	80800917 	ldw	r2,36(r16)
10007ea0:	81400717 	ldw	r5,28(r16)
10007ea4:	103ee83a 	callr	r2
10007ea8:	00805a0e 	bge	zero,r2,10008014 <__sfvwrite_r+0x204>
10007eac:	a0c00217 	ldw	r3,8(r20)
10007eb0:	98a7883a 	add	r19,r19,r2
10007eb4:	90a5c83a 	sub	r18,r18,r2
10007eb8:	1885c83a 	sub	r2,r3,r2
10007ebc:	a0800215 	stw	r2,8(r20)
10007ec0:	103fef1e 	bne	r2,zero,10007e80 <__alt_data_end+0xf8007e80>
10007ec4:	0005883a 	mov	r2,zero
10007ec8:	dfc00b17 	ldw	ra,44(sp)
10007ecc:	df000a17 	ldw	fp,40(sp)
10007ed0:	ddc00917 	ldw	r23,36(sp)
10007ed4:	dd800817 	ldw	r22,32(sp)
10007ed8:	dd400717 	ldw	r21,28(sp)
10007edc:	dd000617 	ldw	r20,24(sp)
10007ee0:	dcc00517 	ldw	r19,20(sp)
10007ee4:	dc800417 	ldw	r18,16(sp)
10007ee8:	dc400317 	ldw	r17,12(sp)
10007eec:	dc000217 	ldw	r16,8(sp)
10007ef0:	dec00c04 	addi	sp,sp,48
10007ef4:	f800283a 	ret
10007ef8:	800b883a 	mov	r5,r16
10007efc:	a809883a 	mov	r4,r21
10007f00:	00059800 	call	10005980 <__swsetup_r>
10007f04:	1000ee1e 	bne	r2,zero,100082c0 <__sfvwrite_r+0x4b0>
10007f08:	80c0030b 	ldhu	r3,12(r16)
10007f0c:	a4400017 	ldw	r17,0(r20)
10007f10:	1880008c 	andi	r2,r3,2
10007f14:	103fd61e 	bne	r2,zero,10007e70 <__alt_data_end+0xf8007e70>
10007f18:	1880004c 	andi	r2,r3,1
10007f1c:	1000421e 	bne	r2,zero,10008028 <__sfvwrite_r+0x218>
10007f20:	0039883a 	mov	fp,zero
10007f24:	0025883a 	mov	r18,zero
10007f28:	90001a26 	beq	r18,zero,10007f94 <__sfvwrite_r+0x184>
10007f2c:	1880800c 	andi	r2,r3,512
10007f30:	84c00217 	ldw	r19,8(r16)
10007f34:	10002126 	beq	r2,zero,10007fbc <__sfvwrite_r+0x1ac>
10007f38:	982f883a 	mov	r23,r19
10007f3c:	94c09636 	bltu	r18,r19,10008198 <__sfvwrite_r+0x388>
10007f40:	1881200c 	andi	r2,r3,1152
10007f44:	1000a11e 	bne	r2,zero,100081cc <__sfvwrite_r+0x3bc>
10007f48:	81000017 	ldw	r4,0(r16)
10007f4c:	b80d883a 	mov	r6,r23
10007f50:	e00b883a 	mov	r5,fp
10007f54:	00091300 	call	10009130 <memmove>
10007f58:	80c00217 	ldw	r3,8(r16)
10007f5c:	81000017 	ldw	r4,0(r16)
10007f60:	9005883a 	mov	r2,r18
10007f64:	1ce7c83a 	sub	r19,r3,r19
10007f68:	25cf883a 	add	r7,r4,r23
10007f6c:	84c00215 	stw	r19,8(r16)
10007f70:	81c00015 	stw	r7,0(r16)
10007f74:	a0c00217 	ldw	r3,8(r20)
10007f78:	e0b9883a 	add	fp,fp,r2
10007f7c:	90a5c83a 	sub	r18,r18,r2
10007f80:	18a7c83a 	sub	r19,r3,r2
10007f84:	a4c00215 	stw	r19,8(r20)
10007f88:	983fce26 	beq	r19,zero,10007ec4 <__alt_data_end+0xf8007ec4>
10007f8c:	80c0030b 	ldhu	r3,12(r16)
10007f90:	903fe61e 	bne	r18,zero,10007f2c <__alt_data_end+0xf8007f2c>
10007f94:	8f000017 	ldw	fp,0(r17)
10007f98:	8c800117 	ldw	r18,4(r17)
10007f9c:	8c400204 	addi	r17,r17,8
10007fa0:	003fe106 	br	10007f28 <__alt_data_end+0xf8007f28>
10007fa4:	8cc00017 	ldw	r19,0(r17)
10007fa8:	8c800117 	ldw	r18,4(r17)
10007fac:	8c400204 	addi	r17,r17,8
10007fb0:	003fb306 	br	10007e80 <__alt_data_end+0xf8007e80>
10007fb4:	0005883a 	mov	r2,zero
10007fb8:	f800283a 	ret
10007fbc:	81000017 	ldw	r4,0(r16)
10007fc0:	80800417 	ldw	r2,16(r16)
10007fc4:	11005a36 	bltu	r2,r4,10008130 <__sfvwrite_r+0x320>
10007fc8:	85c00517 	ldw	r23,20(r16)
10007fcc:	95c05836 	bltu	r18,r23,10008130 <__sfvwrite_r+0x320>
10007fd0:	00a00034 	movhi	r2,32768
10007fd4:	10bfffc4 	addi	r2,r2,-1
10007fd8:	9009883a 	mov	r4,r18
10007fdc:	1480012e 	bgeu	r2,r18,10007fe4 <__sfvwrite_r+0x1d4>
10007fe0:	1009883a 	mov	r4,r2
10007fe4:	b80b883a 	mov	r5,r23
10007fe8:	0000e1c0 	call	10000e1c <__divsi3>
10007fec:	b80b883a 	mov	r5,r23
10007ff0:	1009883a 	mov	r4,r2
10007ff4:	0000fd00 	call	10000fd0 <__mulsi3>
10007ff8:	81400717 	ldw	r5,28(r16)
10007ffc:	80c00917 	ldw	r3,36(r16)
10008000:	100f883a 	mov	r7,r2
10008004:	e00d883a 	mov	r6,fp
10008008:	a809883a 	mov	r4,r21
1000800c:	183ee83a 	callr	r3
10008010:	00bfd816 	blt	zero,r2,10007f74 <__alt_data_end+0xf8007f74>
10008014:	8080030b 	ldhu	r2,12(r16)
10008018:	10801014 	ori	r2,r2,64
1000801c:	8080030d 	sth	r2,12(r16)
10008020:	00bfffc4 	movi	r2,-1
10008024:	003fa806 	br	10007ec8 <__alt_data_end+0xf8007ec8>
10008028:	0027883a 	mov	r19,zero
1000802c:	0011883a 	mov	r8,zero
10008030:	0039883a 	mov	fp,zero
10008034:	0025883a 	mov	r18,zero
10008038:	90001f26 	beq	r18,zero,100080b8 <__sfvwrite_r+0x2a8>
1000803c:	40005a26 	beq	r8,zero,100081a8 <__sfvwrite_r+0x398>
10008040:	982d883a 	mov	r22,r19
10008044:	94c0012e 	bgeu	r18,r19,1000804c <__sfvwrite_r+0x23c>
10008048:	902d883a 	mov	r22,r18
1000804c:	81000017 	ldw	r4,0(r16)
10008050:	80800417 	ldw	r2,16(r16)
10008054:	b02f883a 	mov	r23,r22
10008058:	81c00517 	ldw	r7,20(r16)
1000805c:	1100032e 	bgeu	r2,r4,1000806c <__sfvwrite_r+0x25c>
10008060:	80c00217 	ldw	r3,8(r16)
10008064:	38c7883a 	add	r3,r7,r3
10008068:	1d801816 	blt	r3,r22,100080cc <__sfvwrite_r+0x2bc>
1000806c:	b1c03e16 	blt	r22,r7,10008168 <__sfvwrite_r+0x358>
10008070:	80800917 	ldw	r2,36(r16)
10008074:	81400717 	ldw	r5,28(r16)
10008078:	e00d883a 	mov	r6,fp
1000807c:	da000115 	stw	r8,4(sp)
10008080:	a809883a 	mov	r4,r21
10008084:	103ee83a 	callr	r2
10008088:	102f883a 	mov	r23,r2
1000808c:	da000117 	ldw	r8,4(sp)
10008090:	00bfe00e 	bge	zero,r2,10008014 <__alt_data_end+0xf8008014>
10008094:	9de7c83a 	sub	r19,r19,r23
10008098:	98001f26 	beq	r19,zero,10008118 <__sfvwrite_r+0x308>
1000809c:	a0800217 	ldw	r2,8(r20)
100080a0:	e5f9883a 	add	fp,fp,r23
100080a4:	95e5c83a 	sub	r18,r18,r23
100080a8:	15efc83a 	sub	r23,r2,r23
100080ac:	a5c00215 	stw	r23,8(r20)
100080b0:	b83f8426 	beq	r23,zero,10007ec4 <__alt_data_end+0xf8007ec4>
100080b4:	903fe11e 	bne	r18,zero,1000803c <__alt_data_end+0xf800803c>
100080b8:	8f000017 	ldw	fp,0(r17)
100080bc:	8c800117 	ldw	r18,4(r17)
100080c0:	0011883a 	mov	r8,zero
100080c4:	8c400204 	addi	r17,r17,8
100080c8:	003fdb06 	br	10008038 <__alt_data_end+0xf8008038>
100080cc:	180d883a 	mov	r6,r3
100080d0:	e00b883a 	mov	r5,fp
100080d4:	da000115 	stw	r8,4(sp)
100080d8:	d8c00015 	stw	r3,0(sp)
100080dc:	00091300 	call	10009130 <memmove>
100080e0:	d8c00017 	ldw	r3,0(sp)
100080e4:	80800017 	ldw	r2,0(r16)
100080e8:	800b883a 	mov	r5,r16
100080ec:	a809883a 	mov	r4,r21
100080f0:	10c5883a 	add	r2,r2,r3
100080f4:	80800015 	stw	r2,0(r16)
100080f8:	d8c00015 	stw	r3,0(sp)
100080fc:	00075a00 	call	100075a0 <_fflush_r>
10008100:	d8c00017 	ldw	r3,0(sp)
10008104:	da000117 	ldw	r8,4(sp)
10008108:	103fc21e 	bne	r2,zero,10008014 <__alt_data_end+0xf8008014>
1000810c:	182f883a 	mov	r23,r3
10008110:	9de7c83a 	sub	r19,r19,r23
10008114:	983fe11e 	bne	r19,zero,1000809c <__alt_data_end+0xf800809c>
10008118:	800b883a 	mov	r5,r16
1000811c:	a809883a 	mov	r4,r21
10008120:	00075a00 	call	100075a0 <_fflush_r>
10008124:	103fbb1e 	bne	r2,zero,10008014 <__alt_data_end+0xf8008014>
10008128:	0011883a 	mov	r8,zero
1000812c:	003fdb06 	br	1000809c <__alt_data_end+0xf800809c>
10008130:	94c0012e 	bgeu	r18,r19,10008138 <__sfvwrite_r+0x328>
10008134:	9027883a 	mov	r19,r18
10008138:	980d883a 	mov	r6,r19
1000813c:	e00b883a 	mov	r5,fp
10008140:	00091300 	call	10009130 <memmove>
10008144:	80800217 	ldw	r2,8(r16)
10008148:	80c00017 	ldw	r3,0(r16)
1000814c:	14c5c83a 	sub	r2,r2,r19
10008150:	1cc7883a 	add	r3,r3,r19
10008154:	80800215 	stw	r2,8(r16)
10008158:	80c00015 	stw	r3,0(r16)
1000815c:	10004326 	beq	r2,zero,1000826c <__sfvwrite_r+0x45c>
10008160:	9805883a 	mov	r2,r19
10008164:	003f8306 	br	10007f74 <__alt_data_end+0xf8007f74>
10008168:	b00d883a 	mov	r6,r22
1000816c:	e00b883a 	mov	r5,fp
10008170:	da000115 	stw	r8,4(sp)
10008174:	00091300 	call	10009130 <memmove>
10008178:	80800217 	ldw	r2,8(r16)
1000817c:	80c00017 	ldw	r3,0(r16)
10008180:	da000117 	ldw	r8,4(sp)
10008184:	1585c83a 	sub	r2,r2,r22
10008188:	1dad883a 	add	r22,r3,r22
1000818c:	80800215 	stw	r2,8(r16)
10008190:	85800015 	stw	r22,0(r16)
10008194:	003fbf06 	br	10008094 <__alt_data_end+0xf8008094>
10008198:	81000017 	ldw	r4,0(r16)
1000819c:	9027883a 	mov	r19,r18
100081a0:	902f883a 	mov	r23,r18
100081a4:	003f6906 	br	10007f4c <__alt_data_end+0xf8007f4c>
100081a8:	900d883a 	mov	r6,r18
100081ac:	01400284 	movi	r5,10
100081b0:	e009883a 	mov	r4,fp
100081b4:	0008f040 	call	10008f04 <memchr>
100081b8:	10003e26 	beq	r2,zero,100082b4 <__sfvwrite_r+0x4a4>
100081bc:	10800044 	addi	r2,r2,1
100081c0:	1727c83a 	sub	r19,r2,fp
100081c4:	02000044 	movi	r8,1
100081c8:	003f9d06 	br	10008040 <__alt_data_end+0xf8008040>
100081cc:	80800517 	ldw	r2,20(r16)
100081d0:	81400417 	ldw	r5,16(r16)
100081d4:	81c00017 	ldw	r7,0(r16)
100081d8:	10a7883a 	add	r19,r2,r2
100081dc:	9885883a 	add	r2,r19,r2
100081e0:	1026d7fa 	srli	r19,r2,31
100081e4:	396dc83a 	sub	r22,r7,r5
100081e8:	b1000044 	addi	r4,r22,1
100081ec:	9885883a 	add	r2,r19,r2
100081f0:	1027d07a 	srai	r19,r2,1
100081f4:	2485883a 	add	r2,r4,r18
100081f8:	980d883a 	mov	r6,r19
100081fc:	9880022e 	bgeu	r19,r2,10008208 <__sfvwrite_r+0x3f8>
10008200:	1027883a 	mov	r19,r2
10008204:	100d883a 	mov	r6,r2
10008208:	18c1000c 	andi	r3,r3,1024
1000820c:	18001c26 	beq	r3,zero,10008280 <__sfvwrite_r+0x470>
10008210:	300b883a 	mov	r5,r6
10008214:	a809883a 	mov	r4,r21
10008218:	00086f80 	call	100086f8 <_malloc_r>
1000821c:	102f883a 	mov	r23,r2
10008220:	10002926 	beq	r2,zero,100082c8 <__sfvwrite_r+0x4b8>
10008224:	81400417 	ldw	r5,16(r16)
10008228:	b00d883a 	mov	r6,r22
1000822c:	1009883a 	mov	r4,r2
10008230:	0008fe80 	call	10008fe8 <memcpy>
10008234:	8080030b 	ldhu	r2,12(r16)
10008238:	00fedfc4 	movi	r3,-1153
1000823c:	10c4703a 	and	r2,r2,r3
10008240:	10802014 	ori	r2,r2,128
10008244:	8080030d 	sth	r2,12(r16)
10008248:	bd89883a 	add	r4,r23,r22
1000824c:	9d8fc83a 	sub	r7,r19,r22
10008250:	85c00415 	stw	r23,16(r16)
10008254:	84c00515 	stw	r19,20(r16)
10008258:	81000015 	stw	r4,0(r16)
1000825c:	9027883a 	mov	r19,r18
10008260:	81c00215 	stw	r7,8(r16)
10008264:	902f883a 	mov	r23,r18
10008268:	003f3806 	br	10007f4c <__alt_data_end+0xf8007f4c>
1000826c:	800b883a 	mov	r5,r16
10008270:	a809883a 	mov	r4,r21
10008274:	00075a00 	call	100075a0 <_fflush_r>
10008278:	103fb926 	beq	r2,zero,10008160 <__alt_data_end+0xf8008160>
1000827c:	003f6506 	br	10008014 <__alt_data_end+0xf8008014>
10008280:	a809883a 	mov	r4,r21
10008284:	000a46c0 	call	1000a46c <_realloc_r>
10008288:	102f883a 	mov	r23,r2
1000828c:	103fee1e 	bne	r2,zero,10008248 <__alt_data_end+0xf8008248>
10008290:	81400417 	ldw	r5,16(r16)
10008294:	a809883a 	mov	r4,r21
10008298:	0007b000 	call	10007b00 <_free_r>
1000829c:	8080030b 	ldhu	r2,12(r16)
100082a0:	00ffdfc4 	movi	r3,-129
100082a4:	1884703a 	and	r2,r3,r2
100082a8:	00c00304 	movi	r3,12
100082ac:	a8c00015 	stw	r3,0(r21)
100082b0:	003f5906 	br	10008018 <__alt_data_end+0xf8008018>
100082b4:	94c00044 	addi	r19,r18,1
100082b8:	02000044 	movi	r8,1
100082bc:	003f6006 	br	10008040 <__alt_data_end+0xf8008040>
100082c0:	00bfffc4 	movi	r2,-1
100082c4:	003f0006 	br	10007ec8 <__alt_data_end+0xf8007ec8>
100082c8:	00800304 	movi	r2,12
100082cc:	a8800015 	stw	r2,0(r21)
100082d0:	8080030b 	ldhu	r2,12(r16)
100082d4:	003f5006 	br	10008018 <__alt_data_end+0xf8008018>

100082d8 <_fwalk>:
100082d8:	defff704 	addi	sp,sp,-36
100082dc:	dd000415 	stw	r20,16(sp)
100082e0:	dfc00815 	stw	ra,32(sp)
100082e4:	ddc00715 	stw	r23,28(sp)
100082e8:	dd800615 	stw	r22,24(sp)
100082ec:	dd400515 	stw	r21,20(sp)
100082f0:	dcc00315 	stw	r19,12(sp)
100082f4:	dc800215 	stw	r18,8(sp)
100082f8:	dc400115 	stw	r17,4(sp)
100082fc:	dc000015 	stw	r16,0(sp)
10008300:	2500b804 	addi	r20,r4,736
10008304:	a0002326 	beq	r20,zero,10008394 <_fwalk+0xbc>
10008308:	282b883a 	mov	r21,r5
1000830c:	002f883a 	mov	r23,zero
10008310:	05800044 	movi	r22,1
10008314:	04ffffc4 	movi	r19,-1
10008318:	a4400117 	ldw	r17,4(r20)
1000831c:	a4800217 	ldw	r18,8(r20)
10008320:	8c7fffc4 	addi	r17,r17,-1
10008324:	88000d16 	blt	r17,zero,1000835c <_fwalk+0x84>
10008328:	94000304 	addi	r16,r18,12
1000832c:	94800384 	addi	r18,r18,14
10008330:	8080000b 	ldhu	r2,0(r16)
10008334:	8c7fffc4 	addi	r17,r17,-1
10008338:	813ffd04 	addi	r4,r16,-12
1000833c:	b080042e 	bgeu	r22,r2,10008350 <_fwalk+0x78>
10008340:	9080000f 	ldh	r2,0(r18)
10008344:	14c00226 	beq	r2,r19,10008350 <_fwalk+0x78>
10008348:	a83ee83a 	callr	r21
1000834c:	b8aeb03a 	or	r23,r23,r2
10008350:	84001a04 	addi	r16,r16,104
10008354:	94801a04 	addi	r18,r18,104
10008358:	8cfff51e 	bne	r17,r19,10008330 <__alt_data_end+0xf8008330>
1000835c:	a5000017 	ldw	r20,0(r20)
10008360:	a03fed1e 	bne	r20,zero,10008318 <__alt_data_end+0xf8008318>
10008364:	b805883a 	mov	r2,r23
10008368:	dfc00817 	ldw	ra,32(sp)
1000836c:	ddc00717 	ldw	r23,28(sp)
10008370:	dd800617 	ldw	r22,24(sp)
10008374:	dd400517 	ldw	r21,20(sp)
10008378:	dd000417 	ldw	r20,16(sp)
1000837c:	dcc00317 	ldw	r19,12(sp)
10008380:	dc800217 	ldw	r18,8(sp)
10008384:	dc400117 	ldw	r17,4(sp)
10008388:	dc000017 	ldw	r16,0(sp)
1000838c:	dec00904 	addi	sp,sp,36
10008390:	f800283a 	ret
10008394:	002f883a 	mov	r23,zero
10008398:	003ff206 	br	10008364 <__alt_data_end+0xf8008364>

1000839c <_fwalk_reent>:
1000839c:	defff704 	addi	sp,sp,-36
100083a0:	dd000415 	stw	r20,16(sp)
100083a4:	dfc00815 	stw	ra,32(sp)
100083a8:	ddc00715 	stw	r23,28(sp)
100083ac:	dd800615 	stw	r22,24(sp)
100083b0:	dd400515 	stw	r21,20(sp)
100083b4:	dcc00315 	stw	r19,12(sp)
100083b8:	dc800215 	stw	r18,8(sp)
100083bc:	dc400115 	stw	r17,4(sp)
100083c0:	dc000015 	stw	r16,0(sp)
100083c4:	2500b804 	addi	r20,r4,736
100083c8:	a0002326 	beq	r20,zero,10008458 <_fwalk_reent+0xbc>
100083cc:	282b883a 	mov	r21,r5
100083d0:	2027883a 	mov	r19,r4
100083d4:	002f883a 	mov	r23,zero
100083d8:	05800044 	movi	r22,1
100083dc:	04bfffc4 	movi	r18,-1
100083e0:	a4400117 	ldw	r17,4(r20)
100083e4:	a4000217 	ldw	r16,8(r20)
100083e8:	8c7fffc4 	addi	r17,r17,-1
100083ec:	88000c16 	blt	r17,zero,10008420 <_fwalk_reent+0x84>
100083f0:	84000304 	addi	r16,r16,12
100083f4:	8080000b 	ldhu	r2,0(r16)
100083f8:	8c7fffc4 	addi	r17,r17,-1
100083fc:	817ffd04 	addi	r5,r16,-12
10008400:	b080052e 	bgeu	r22,r2,10008418 <_fwalk_reent+0x7c>
10008404:	8080008f 	ldh	r2,2(r16)
10008408:	9809883a 	mov	r4,r19
1000840c:	14800226 	beq	r2,r18,10008418 <_fwalk_reent+0x7c>
10008410:	a83ee83a 	callr	r21
10008414:	b8aeb03a 	or	r23,r23,r2
10008418:	84001a04 	addi	r16,r16,104
1000841c:	8cbff51e 	bne	r17,r18,100083f4 <__alt_data_end+0xf80083f4>
10008420:	a5000017 	ldw	r20,0(r20)
10008424:	a03fee1e 	bne	r20,zero,100083e0 <__alt_data_end+0xf80083e0>
10008428:	b805883a 	mov	r2,r23
1000842c:	dfc00817 	ldw	ra,32(sp)
10008430:	ddc00717 	ldw	r23,28(sp)
10008434:	dd800617 	ldw	r22,24(sp)
10008438:	dd400517 	ldw	r21,20(sp)
1000843c:	dd000417 	ldw	r20,16(sp)
10008440:	dcc00317 	ldw	r19,12(sp)
10008444:	dc800217 	ldw	r18,8(sp)
10008448:	dc400117 	ldw	r17,4(sp)
1000844c:	dc000017 	ldw	r16,0(sp)
10008450:	dec00904 	addi	sp,sp,36
10008454:	f800283a 	ret
10008458:	002f883a 	mov	r23,zero
1000845c:	003ff206 	br	10008428 <__alt_data_end+0xf8008428>

10008460 <_setlocale_r>:
10008460:	30001b26 	beq	r6,zero,100084d0 <_setlocale_r+0x70>
10008464:	01440074 	movhi	r5,4097
10008468:	defffe04 	addi	sp,sp,-8
1000846c:	29506704 	addi	r5,r5,16796
10008470:	3009883a 	mov	r4,r6
10008474:	dc000015 	stw	r16,0(sp)
10008478:	dfc00115 	stw	ra,4(sp)
1000847c:	3021883a 	mov	r16,r6
10008480:	000abd40 	call	1000abd4 <strcmp>
10008484:	1000061e 	bne	r2,zero,100084a0 <_setlocale_r+0x40>
10008488:	00840074 	movhi	r2,4097
1000848c:	10906604 	addi	r2,r2,16792
10008490:	dfc00117 	ldw	ra,4(sp)
10008494:	dc000017 	ldw	r16,0(sp)
10008498:	dec00204 	addi	sp,sp,8
1000849c:	f800283a 	ret
100084a0:	01440074 	movhi	r5,4097
100084a4:	29506604 	addi	r5,r5,16792
100084a8:	8009883a 	mov	r4,r16
100084ac:	000abd40 	call	1000abd4 <strcmp>
100084b0:	103ff526 	beq	r2,zero,10008488 <__alt_data_end+0xf8008488>
100084b4:	01440074 	movhi	r5,4097
100084b8:	29504904 	addi	r5,r5,16676
100084bc:	8009883a 	mov	r4,r16
100084c0:	000abd40 	call	1000abd4 <strcmp>
100084c4:	103ff026 	beq	r2,zero,10008488 <__alt_data_end+0xf8008488>
100084c8:	0005883a 	mov	r2,zero
100084cc:	003ff006 	br	10008490 <__alt_data_end+0xf8008490>
100084d0:	00840074 	movhi	r2,4097
100084d4:	10906604 	addi	r2,r2,16792
100084d8:	f800283a 	ret

100084dc <__locale_charset>:
100084dc:	00840074 	movhi	r2,4097
100084e0:	1092d904 	addi	r2,r2,19300
100084e4:	f800283a 	ret

100084e8 <__locale_mb_cur_max>:
100084e8:	00840074 	movhi	r2,4097
100084ec:	10987704 	addi	r2,r2,25052
100084f0:	10800017 	ldw	r2,0(r2)
100084f4:	f800283a 	ret

100084f8 <__locale_msgcharset>:
100084f8:	00840074 	movhi	r2,4097
100084fc:	1092d104 	addi	r2,r2,19268
10008500:	f800283a 	ret

10008504 <__locale_cjk_lang>:
10008504:	0005883a 	mov	r2,zero
10008508:	f800283a 	ret

1000850c <_localeconv_r>:
1000850c:	00840074 	movhi	r2,4097
10008510:	1092e104 	addi	r2,r2,19332
10008514:	f800283a 	ret

10008518 <setlocale>:
10008518:	00840074 	movhi	r2,4097
1000851c:	10987604 	addi	r2,r2,25048
10008520:	280d883a 	mov	r6,r5
10008524:	200b883a 	mov	r5,r4
10008528:	11000017 	ldw	r4,0(r2)
1000852c:	00084601 	jmpi	10008460 <_setlocale_r>

10008530 <localeconv>:
10008530:	00840074 	movhi	r2,4097
10008534:	1092e104 	addi	r2,r2,19332
10008538:	f800283a 	ret

1000853c <__smakebuf_r>:
1000853c:	2880030b 	ldhu	r2,12(r5)
10008540:	10c0008c 	andi	r3,r2,2
10008544:	1800411e 	bne	r3,zero,1000864c <__smakebuf_r+0x110>
10008548:	deffec04 	addi	sp,sp,-80
1000854c:	dc000f15 	stw	r16,60(sp)
10008550:	2821883a 	mov	r16,r5
10008554:	2940038f 	ldh	r5,14(r5)
10008558:	dc401015 	stw	r17,64(sp)
1000855c:	dfc01315 	stw	ra,76(sp)
10008560:	dcc01215 	stw	r19,72(sp)
10008564:	dc801115 	stw	r18,68(sp)
10008568:	2023883a 	mov	r17,r4
1000856c:	28001c16 	blt	r5,zero,100085e0 <__smakebuf_r+0xa4>
10008570:	d80d883a 	mov	r6,sp
10008574:	000ddb40 	call	1000ddb4 <_fstat_r>
10008578:	10001816 	blt	r2,zero,100085dc <__smakebuf_r+0xa0>
1000857c:	d8800117 	ldw	r2,4(sp)
10008580:	00e00014 	movui	r3,32768
10008584:	10bc000c 	andi	r2,r2,61440
10008588:	14c80020 	cmpeqi	r19,r2,8192
1000858c:	10c03726 	beq	r2,r3,1000866c <__smakebuf_r+0x130>
10008590:	80c0030b 	ldhu	r3,12(r16)
10008594:	18c20014 	ori	r3,r3,2048
10008598:	80c0030d 	sth	r3,12(r16)
1000859c:	00c80004 	movi	r3,8192
100085a0:	10c0521e 	bne	r2,r3,100086ec <__smakebuf_r+0x1b0>
100085a4:	8140038f 	ldh	r5,14(r16)
100085a8:	8809883a 	mov	r4,r17
100085ac:	000de100 	call	1000de10 <_isatty_r>
100085b0:	10004c26 	beq	r2,zero,100086e4 <__smakebuf_r+0x1a8>
100085b4:	8080030b 	ldhu	r2,12(r16)
100085b8:	80c010c4 	addi	r3,r16,67
100085bc:	80c00015 	stw	r3,0(r16)
100085c0:	10800054 	ori	r2,r2,1
100085c4:	8080030d 	sth	r2,12(r16)
100085c8:	00800044 	movi	r2,1
100085cc:	80c00415 	stw	r3,16(r16)
100085d0:	80800515 	stw	r2,20(r16)
100085d4:	04810004 	movi	r18,1024
100085d8:	00000706 	br	100085f8 <__smakebuf_r+0xbc>
100085dc:	8080030b 	ldhu	r2,12(r16)
100085e0:	10c0200c 	andi	r3,r2,128
100085e4:	18001f1e 	bne	r3,zero,10008664 <__smakebuf_r+0x128>
100085e8:	04810004 	movi	r18,1024
100085ec:	10820014 	ori	r2,r2,2048
100085f0:	8080030d 	sth	r2,12(r16)
100085f4:	0027883a 	mov	r19,zero
100085f8:	900b883a 	mov	r5,r18
100085fc:	8809883a 	mov	r4,r17
10008600:	00086f80 	call	100086f8 <_malloc_r>
10008604:	10002c26 	beq	r2,zero,100086b8 <__smakebuf_r+0x17c>
10008608:	80c0030b 	ldhu	r3,12(r16)
1000860c:	01040034 	movhi	r4,4096
10008610:	211d8d04 	addi	r4,r4,30260
10008614:	89000f15 	stw	r4,60(r17)
10008618:	18c02014 	ori	r3,r3,128
1000861c:	80c0030d 	sth	r3,12(r16)
10008620:	80800015 	stw	r2,0(r16)
10008624:	80800415 	stw	r2,16(r16)
10008628:	84800515 	stw	r18,20(r16)
1000862c:	98001a1e 	bne	r19,zero,10008698 <__smakebuf_r+0x15c>
10008630:	dfc01317 	ldw	ra,76(sp)
10008634:	dcc01217 	ldw	r19,72(sp)
10008638:	dc801117 	ldw	r18,68(sp)
1000863c:	dc401017 	ldw	r17,64(sp)
10008640:	dc000f17 	ldw	r16,60(sp)
10008644:	dec01404 	addi	sp,sp,80
10008648:	f800283a 	ret
1000864c:	288010c4 	addi	r2,r5,67
10008650:	28800015 	stw	r2,0(r5)
10008654:	28800415 	stw	r2,16(r5)
10008658:	00800044 	movi	r2,1
1000865c:	28800515 	stw	r2,20(r5)
10008660:	f800283a 	ret
10008664:	04801004 	movi	r18,64
10008668:	003fe006 	br	100085ec <__alt_data_end+0xf80085ec>
1000866c:	81000a17 	ldw	r4,40(r16)
10008670:	00c40074 	movhi	r3,4097
10008674:	18eadc04 	addi	r3,r3,-21648
10008678:	20ffc51e 	bne	r4,r3,10008590 <__alt_data_end+0xf8008590>
1000867c:	8080030b 	ldhu	r2,12(r16)
10008680:	04810004 	movi	r18,1024
10008684:	84801315 	stw	r18,76(r16)
10008688:	1484b03a 	or	r2,r2,r18
1000868c:	8080030d 	sth	r2,12(r16)
10008690:	0027883a 	mov	r19,zero
10008694:	003fd806 	br	100085f8 <__alt_data_end+0xf80085f8>
10008698:	8140038f 	ldh	r5,14(r16)
1000869c:	8809883a 	mov	r4,r17
100086a0:	000de100 	call	1000de10 <_isatty_r>
100086a4:	103fe226 	beq	r2,zero,10008630 <__alt_data_end+0xf8008630>
100086a8:	8080030b 	ldhu	r2,12(r16)
100086ac:	10800054 	ori	r2,r2,1
100086b0:	8080030d 	sth	r2,12(r16)
100086b4:	003fde06 	br	10008630 <__alt_data_end+0xf8008630>
100086b8:	8080030b 	ldhu	r2,12(r16)
100086bc:	10c0800c 	andi	r3,r2,512
100086c0:	183fdb1e 	bne	r3,zero,10008630 <__alt_data_end+0xf8008630>
100086c4:	10800094 	ori	r2,r2,2
100086c8:	80c010c4 	addi	r3,r16,67
100086cc:	8080030d 	sth	r2,12(r16)
100086d0:	00800044 	movi	r2,1
100086d4:	80c00015 	stw	r3,0(r16)
100086d8:	80c00415 	stw	r3,16(r16)
100086dc:	80800515 	stw	r2,20(r16)
100086e0:	003fd306 	br	10008630 <__alt_data_end+0xf8008630>
100086e4:	04810004 	movi	r18,1024
100086e8:	003fc306 	br	100085f8 <__alt_data_end+0xf80085f8>
100086ec:	0027883a 	mov	r19,zero
100086f0:	04810004 	movi	r18,1024
100086f4:	003fc006 	br	100085f8 <__alt_data_end+0xf80085f8>

100086f8 <_malloc_r>:
100086f8:	defff504 	addi	sp,sp,-44
100086fc:	dc800315 	stw	r18,12(sp)
10008700:	dfc00a15 	stw	ra,40(sp)
10008704:	df000915 	stw	fp,36(sp)
10008708:	ddc00815 	stw	r23,32(sp)
1000870c:	dd800715 	stw	r22,28(sp)
10008710:	dd400615 	stw	r21,24(sp)
10008714:	dd000515 	stw	r20,20(sp)
10008718:	dcc00415 	stw	r19,16(sp)
1000871c:	dc400215 	stw	r17,8(sp)
10008720:	dc000115 	stw	r16,4(sp)
10008724:	288002c4 	addi	r2,r5,11
10008728:	00c00584 	movi	r3,22
1000872c:	2025883a 	mov	r18,r4
10008730:	18807f2e 	bgeu	r3,r2,10008930 <_malloc_r+0x238>
10008734:	047ffe04 	movi	r17,-8
10008738:	1462703a 	and	r17,r2,r17
1000873c:	8800a316 	blt	r17,zero,100089cc <_malloc_r+0x2d4>
10008740:	8940a236 	bltu	r17,r5,100089cc <_malloc_r+0x2d4>
10008744:	0011d700 	call	10011d70 <__malloc_lock>
10008748:	00807dc4 	movi	r2,503
1000874c:	1441e92e 	bgeu	r2,r17,10008ef4 <_malloc_r+0x7fc>
10008750:	8804d27a 	srli	r2,r17,9
10008754:	1000a126 	beq	r2,zero,100089dc <_malloc_r+0x2e4>
10008758:	00c00104 	movi	r3,4
1000875c:	18811e36 	bltu	r3,r2,10008bd8 <_malloc_r+0x4e0>
10008760:	8804d1ba 	srli	r2,r17,6
10008764:	12000e44 	addi	r8,r2,57
10008768:	11c00e04 	addi	r7,r2,56
1000876c:	4209883a 	add	r4,r8,r8
10008770:	04c40074 	movhi	r19,4097
10008774:	2109883a 	add	r4,r4,r4
10008778:	9cd2ef04 	addi	r19,r19,19388
1000877c:	2109883a 	add	r4,r4,r4
10008780:	9909883a 	add	r4,r19,r4
10008784:	24000117 	ldw	r16,4(r4)
10008788:	213ffe04 	addi	r4,r4,-8
1000878c:	24009726 	beq	r4,r16,100089ec <_malloc_r+0x2f4>
10008790:	80800117 	ldw	r2,4(r16)
10008794:	01bfff04 	movi	r6,-4
10008798:	014003c4 	movi	r5,15
1000879c:	1184703a 	and	r2,r2,r6
100087a0:	1447c83a 	sub	r3,r2,r17
100087a4:	28c00716 	blt	r5,r3,100087c4 <_malloc_r+0xcc>
100087a8:	1800920e 	bge	r3,zero,100089f4 <_malloc_r+0x2fc>
100087ac:	84000317 	ldw	r16,12(r16)
100087b0:	24008e26 	beq	r4,r16,100089ec <_malloc_r+0x2f4>
100087b4:	80800117 	ldw	r2,4(r16)
100087b8:	1184703a 	and	r2,r2,r6
100087bc:	1447c83a 	sub	r3,r2,r17
100087c0:	28fff90e 	bge	r5,r3,100087a8 <__alt_data_end+0xf80087a8>
100087c4:	3809883a 	mov	r4,r7
100087c8:	01840074 	movhi	r6,4097
100087cc:	9c000417 	ldw	r16,16(r19)
100087d0:	3192ef04 	addi	r6,r6,19388
100087d4:	32000204 	addi	r8,r6,8
100087d8:	82013426 	beq	r16,r8,10008cac <_malloc_r+0x5b4>
100087dc:	80c00117 	ldw	r3,4(r16)
100087e0:	00bfff04 	movi	r2,-4
100087e4:	188e703a 	and	r7,r3,r2
100087e8:	3c45c83a 	sub	r2,r7,r17
100087ec:	00c003c4 	movi	r3,15
100087f0:	18811f16 	blt	r3,r2,10008c70 <_malloc_r+0x578>
100087f4:	32000515 	stw	r8,20(r6)
100087f8:	32000415 	stw	r8,16(r6)
100087fc:	10007f0e 	bge	r2,zero,100089fc <_malloc_r+0x304>
10008800:	00807fc4 	movi	r2,511
10008804:	11c0fd36 	bltu	r2,r7,10008bfc <_malloc_r+0x504>
10008808:	3806d0fa 	srli	r3,r7,3
1000880c:	01c00044 	movi	r7,1
10008810:	30800117 	ldw	r2,4(r6)
10008814:	19400044 	addi	r5,r3,1
10008818:	294b883a 	add	r5,r5,r5
1000881c:	1807d0ba 	srai	r3,r3,2
10008820:	294b883a 	add	r5,r5,r5
10008824:	294b883a 	add	r5,r5,r5
10008828:	298b883a 	add	r5,r5,r6
1000882c:	38c6983a 	sll	r3,r7,r3
10008830:	29c00017 	ldw	r7,0(r5)
10008834:	2a7ffe04 	addi	r9,r5,-8
10008838:	1886b03a 	or	r3,r3,r2
1000883c:	82400315 	stw	r9,12(r16)
10008840:	81c00215 	stw	r7,8(r16)
10008844:	30c00115 	stw	r3,4(r6)
10008848:	2c000015 	stw	r16,0(r5)
1000884c:	3c000315 	stw	r16,12(r7)
10008850:	2005d0ba 	srai	r2,r4,2
10008854:	01400044 	movi	r5,1
10008858:	288a983a 	sll	r5,r5,r2
1000885c:	19406f36 	bltu	r3,r5,10008a1c <_malloc_r+0x324>
10008860:	28c4703a 	and	r2,r5,r3
10008864:	10000a1e 	bne	r2,zero,10008890 <_malloc_r+0x198>
10008868:	00bfff04 	movi	r2,-4
1000886c:	294b883a 	add	r5,r5,r5
10008870:	2088703a 	and	r4,r4,r2
10008874:	28c4703a 	and	r2,r5,r3
10008878:	21000104 	addi	r4,r4,4
1000887c:	1000041e 	bne	r2,zero,10008890 <_malloc_r+0x198>
10008880:	294b883a 	add	r5,r5,r5
10008884:	28c4703a 	and	r2,r5,r3
10008888:	21000104 	addi	r4,r4,4
1000888c:	103ffc26 	beq	r2,zero,10008880 <__alt_data_end+0xf8008880>
10008890:	02bfff04 	movi	r10,-4
10008894:	024003c4 	movi	r9,15
10008898:	21800044 	addi	r6,r4,1
1000889c:	318d883a 	add	r6,r6,r6
100088a0:	318d883a 	add	r6,r6,r6
100088a4:	318d883a 	add	r6,r6,r6
100088a8:	998d883a 	add	r6,r19,r6
100088ac:	333ffe04 	addi	r12,r6,-8
100088b0:	2017883a 	mov	r11,r4
100088b4:	31800104 	addi	r6,r6,4
100088b8:	34000017 	ldw	r16,0(r6)
100088bc:	31fffd04 	addi	r7,r6,-12
100088c0:	81c0041e 	bne	r16,r7,100088d4 <_malloc_r+0x1dc>
100088c4:	0000fb06 	br	10008cb4 <_malloc_r+0x5bc>
100088c8:	1801030e 	bge	r3,zero,10008cd8 <_malloc_r+0x5e0>
100088cc:	84000317 	ldw	r16,12(r16)
100088d0:	81c0f826 	beq	r16,r7,10008cb4 <_malloc_r+0x5bc>
100088d4:	80800117 	ldw	r2,4(r16)
100088d8:	1284703a 	and	r2,r2,r10
100088dc:	1447c83a 	sub	r3,r2,r17
100088e0:	48fff90e 	bge	r9,r3,100088c8 <__alt_data_end+0xf80088c8>
100088e4:	80800317 	ldw	r2,12(r16)
100088e8:	81000217 	ldw	r4,8(r16)
100088ec:	89400054 	ori	r5,r17,1
100088f0:	81400115 	stw	r5,4(r16)
100088f4:	20800315 	stw	r2,12(r4)
100088f8:	11000215 	stw	r4,8(r2)
100088fc:	8463883a 	add	r17,r16,r17
10008900:	9c400515 	stw	r17,20(r19)
10008904:	9c400415 	stw	r17,16(r19)
10008908:	18800054 	ori	r2,r3,1
1000890c:	88800115 	stw	r2,4(r17)
10008910:	8a000315 	stw	r8,12(r17)
10008914:	8a000215 	stw	r8,8(r17)
10008918:	88e3883a 	add	r17,r17,r3
1000891c:	88c00015 	stw	r3,0(r17)
10008920:	9009883a 	mov	r4,r18
10008924:	0011d940 	call	10011d94 <__malloc_unlock>
10008928:	80800204 	addi	r2,r16,8
1000892c:	00001b06 	br	1000899c <_malloc_r+0x2a4>
10008930:	04400404 	movi	r17,16
10008934:	89402536 	bltu	r17,r5,100089cc <_malloc_r+0x2d4>
10008938:	0011d700 	call	10011d70 <__malloc_lock>
1000893c:	00800184 	movi	r2,6
10008940:	01000084 	movi	r4,2
10008944:	04c40074 	movhi	r19,4097
10008948:	1085883a 	add	r2,r2,r2
1000894c:	9cd2ef04 	addi	r19,r19,19388
10008950:	1085883a 	add	r2,r2,r2
10008954:	9885883a 	add	r2,r19,r2
10008958:	14000117 	ldw	r16,4(r2)
1000895c:	10fffe04 	addi	r3,r2,-8
10008960:	80c0d926 	beq	r16,r3,10008cc8 <_malloc_r+0x5d0>
10008964:	80c00117 	ldw	r3,4(r16)
10008968:	81000317 	ldw	r4,12(r16)
1000896c:	00bfff04 	movi	r2,-4
10008970:	1884703a 	and	r2,r3,r2
10008974:	81400217 	ldw	r5,8(r16)
10008978:	8085883a 	add	r2,r16,r2
1000897c:	10c00117 	ldw	r3,4(r2)
10008980:	29000315 	stw	r4,12(r5)
10008984:	21400215 	stw	r5,8(r4)
10008988:	18c00054 	ori	r3,r3,1
1000898c:	10c00115 	stw	r3,4(r2)
10008990:	9009883a 	mov	r4,r18
10008994:	0011d940 	call	10011d94 <__malloc_unlock>
10008998:	80800204 	addi	r2,r16,8
1000899c:	dfc00a17 	ldw	ra,40(sp)
100089a0:	df000917 	ldw	fp,36(sp)
100089a4:	ddc00817 	ldw	r23,32(sp)
100089a8:	dd800717 	ldw	r22,28(sp)
100089ac:	dd400617 	ldw	r21,24(sp)
100089b0:	dd000517 	ldw	r20,20(sp)
100089b4:	dcc00417 	ldw	r19,16(sp)
100089b8:	dc800317 	ldw	r18,12(sp)
100089bc:	dc400217 	ldw	r17,8(sp)
100089c0:	dc000117 	ldw	r16,4(sp)
100089c4:	dec00b04 	addi	sp,sp,44
100089c8:	f800283a 	ret
100089cc:	00800304 	movi	r2,12
100089d0:	90800015 	stw	r2,0(r18)
100089d4:	0005883a 	mov	r2,zero
100089d8:	003ff006 	br	1000899c <__alt_data_end+0xf800899c>
100089dc:	01002004 	movi	r4,128
100089e0:	02001004 	movi	r8,64
100089e4:	01c00fc4 	movi	r7,63
100089e8:	003f6106 	br	10008770 <__alt_data_end+0xf8008770>
100089ec:	4009883a 	mov	r4,r8
100089f0:	003f7506 	br	100087c8 <__alt_data_end+0xf80087c8>
100089f4:	81000317 	ldw	r4,12(r16)
100089f8:	003fde06 	br	10008974 <__alt_data_end+0xf8008974>
100089fc:	81c5883a 	add	r2,r16,r7
10008a00:	11400117 	ldw	r5,4(r2)
10008a04:	9009883a 	mov	r4,r18
10008a08:	29400054 	ori	r5,r5,1
10008a0c:	11400115 	stw	r5,4(r2)
10008a10:	0011d940 	call	10011d94 <__malloc_unlock>
10008a14:	80800204 	addi	r2,r16,8
10008a18:	003fe006 	br	1000899c <__alt_data_end+0xf800899c>
10008a1c:	9c000217 	ldw	r16,8(r19)
10008a20:	00bfff04 	movi	r2,-4
10008a24:	85800117 	ldw	r22,4(r16)
10008a28:	b0ac703a 	and	r22,r22,r2
10008a2c:	b4400336 	bltu	r22,r17,10008a3c <_malloc_r+0x344>
10008a30:	b445c83a 	sub	r2,r22,r17
10008a34:	00c003c4 	movi	r3,15
10008a38:	18805d16 	blt	r3,r2,10008bb0 <_malloc_r+0x4b8>
10008a3c:	05c40074 	movhi	r23,4097
10008a40:	00840074 	movhi	r2,4097
10008a44:	109fff04 	addi	r2,r2,32764
10008a48:	bdd87804 	addi	r23,r23,25056
10008a4c:	15400017 	ldw	r21,0(r2)
10008a50:	b8c00017 	ldw	r3,0(r23)
10008a54:	00bfffc4 	movi	r2,-1
10008a58:	858d883a 	add	r6,r16,r22
10008a5c:	8d6b883a 	add	r21,r17,r21
10008a60:	1880ea26 	beq	r3,r2,10008e0c <_malloc_r+0x714>
10008a64:	ad4403c4 	addi	r21,r21,4111
10008a68:	00bc0004 	movi	r2,-4096
10008a6c:	a8aa703a 	and	r21,r21,r2
10008a70:	a80b883a 	mov	r5,r21
10008a74:	9009883a 	mov	r4,r18
10008a78:	d9800015 	stw	r6,0(sp)
10008a7c:	000aa440 	call	1000aa44 <_sbrk_r>
10008a80:	1029883a 	mov	r20,r2
10008a84:	00bfffc4 	movi	r2,-1
10008a88:	d9800017 	ldw	r6,0(sp)
10008a8c:	a080e826 	beq	r20,r2,10008e30 <_malloc_r+0x738>
10008a90:	a180a636 	bltu	r20,r6,10008d2c <_malloc_r+0x634>
10008a94:	070400b4 	movhi	fp,4098
10008a98:	e7200804 	addi	fp,fp,-32736
10008a9c:	e0800017 	ldw	r2,0(fp)
10008aa0:	a887883a 	add	r3,r21,r2
10008aa4:	e0c00015 	stw	r3,0(fp)
10008aa8:	3500e626 	beq	r6,r20,10008e44 <_malloc_r+0x74c>
10008aac:	b9000017 	ldw	r4,0(r23)
10008ab0:	00bfffc4 	movi	r2,-1
10008ab4:	2080ee26 	beq	r4,r2,10008e70 <_malloc_r+0x778>
10008ab8:	a185c83a 	sub	r2,r20,r6
10008abc:	10c5883a 	add	r2,r2,r3
10008ac0:	e0800015 	stw	r2,0(fp)
10008ac4:	a0c001cc 	andi	r3,r20,7
10008ac8:	1800bc26 	beq	r3,zero,10008dbc <_malloc_r+0x6c4>
10008acc:	a0e9c83a 	sub	r20,r20,r3
10008ad0:	00840204 	movi	r2,4104
10008ad4:	a5000204 	addi	r20,r20,8
10008ad8:	10c7c83a 	sub	r3,r2,r3
10008adc:	a545883a 	add	r2,r20,r21
10008ae0:	1083ffcc 	andi	r2,r2,4095
10008ae4:	18abc83a 	sub	r21,r3,r2
10008ae8:	a80b883a 	mov	r5,r21
10008aec:	9009883a 	mov	r4,r18
10008af0:	000aa440 	call	1000aa44 <_sbrk_r>
10008af4:	00ffffc4 	movi	r3,-1
10008af8:	10c0e126 	beq	r2,r3,10008e80 <_malloc_r+0x788>
10008afc:	1505c83a 	sub	r2,r2,r20
10008b00:	1545883a 	add	r2,r2,r21
10008b04:	10800054 	ori	r2,r2,1
10008b08:	e0c00017 	ldw	r3,0(fp)
10008b0c:	9d000215 	stw	r20,8(r19)
10008b10:	a0800115 	stw	r2,4(r20)
10008b14:	a8c7883a 	add	r3,r21,r3
10008b18:	e0c00015 	stw	r3,0(fp)
10008b1c:	84c00e26 	beq	r16,r19,10008b58 <_malloc_r+0x460>
10008b20:	018003c4 	movi	r6,15
10008b24:	3580a72e 	bgeu	r6,r22,10008dc4 <_malloc_r+0x6cc>
10008b28:	81400117 	ldw	r5,4(r16)
10008b2c:	013ffe04 	movi	r4,-8
10008b30:	b0bffd04 	addi	r2,r22,-12
10008b34:	1104703a 	and	r2,r2,r4
10008b38:	2900004c 	andi	r4,r5,1
10008b3c:	2088b03a 	or	r4,r4,r2
10008b40:	81000115 	stw	r4,4(r16)
10008b44:	01400144 	movi	r5,5
10008b48:	8089883a 	add	r4,r16,r2
10008b4c:	21400115 	stw	r5,4(r4)
10008b50:	21400215 	stw	r5,8(r4)
10008b54:	3080cd36 	bltu	r6,r2,10008e8c <_malloc_r+0x794>
10008b58:	00840074 	movhi	r2,4097
10008b5c:	109ffe04 	addi	r2,r2,32760
10008b60:	11000017 	ldw	r4,0(r2)
10008b64:	20c0012e 	bgeu	r4,r3,10008b6c <_malloc_r+0x474>
10008b68:	10c00015 	stw	r3,0(r2)
10008b6c:	00840074 	movhi	r2,4097
10008b70:	109ffd04 	addi	r2,r2,32756
10008b74:	11000017 	ldw	r4,0(r2)
10008b78:	9c000217 	ldw	r16,8(r19)
10008b7c:	20c0012e 	bgeu	r4,r3,10008b84 <_malloc_r+0x48c>
10008b80:	10c00015 	stw	r3,0(r2)
10008b84:	80c00117 	ldw	r3,4(r16)
10008b88:	00bfff04 	movi	r2,-4
10008b8c:	1886703a 	and	r3,r3,r2
10008b90:	1c45c83a 	sub	r2,r3,r17
10008b94:	1c400236 	bltu	r3,r17,10008ba0 <_malloc_r+0x4a8>
10008b98:	00c003c4 	movi	r3,15
10008b9c:	18800416 	blt	r3,r2,10008bb0 <_malloc_r+0x4b8>
10008ba0:	9009883a 	mov	r4,r18
10008ba4:	0011d940 	call	10011d94 <__malloc_unlock>
10008ba8:	0005883a 	mov	r2,zero
10008bac:	003f7b06 	br	1000899c <__alt_data_end+0xf800899c>
10008bb0:	88c00054 	ori	r3,r17,1
10008bb4:	80c00115 	stw	r3,4(r16)
10008bb8:	8463883a 	add	r17,r16,r17
10008bbc:	10800054 	ori	r2,r2,1
10008bc0:	9c400215 	stw	r17,8(r19)
10008bc4:	88800115 	stw	r2,4(r17)
10008bc8:	9009883a 	mov	r4,r18
10008bcc:	0011d940 	call	10011d94 <__malloc_unlock>
10008bd0:	80800204 	addi	r2,r16,8
10008bd4:	003f7106 	br	1000899c <__alt_data_end+0xf800899c>
10008bd8:	00c00504 	movi	r3,20
10008bdc:	18804a2e 	bgeu	r3,r2,10008d08 <_malloc_r+0x610>
10008be0:	00c01504 	movi	r3,84
10008be4:	18806e36 	bltu	r3,r2,10008da0 <_malloc_r+0x6a8>
10008be8:	8804d33a 	srli	r2,r17,12
10008bec:	12001bc4 	addi	r8,r2,111
10008bf0:	11c01b84 	addi	r7,r2,110
10008bf4:	4209883a 	add	r4,r8,r8
10008bf8:	003edd06 	br	10008770 <__alt_data_end+0xf8008770>
10008bfc:	3804d27a 	srli	r2,r7,9
10008c00:	00c00104 	movi	r3,4
10008c04:	1880442e 	bgeu	r3,r2,10008d18 <_malloc_r+0x620>
10008c08:	00c00504 	movi	r3,20
10008c0c:	18808136 	bltu	r3,r2,10008e14 <_malloc_r+0x71c>
10008c10:	11401704 	addi	r5,r2,92
10008c14:	10c016c4 	addi	r3,r2,91
10008c18:	294b883a 	add	r5,r5,r5
10008c1c:	294b883a 	add	r5,r5,r5
10008c20:	294b883a 	add	r5,r5,r5
10008c24:	994b883a 	add	r5,r19,r5
10008c28:	28800017 	ldw	r2,0(r5)
10008c2c:	01840074 	movhi	r6,4097
10008c30:	297ffe04 	addi	r5,r5,-8
10008c34:	3192ef04 	addi	r6,r6,19388
10008c38:	28806526 	beq	r5,r2,10008dd0 <_malloc_r+0x6d8>
10008c3c:	01bfff04 	movi	r6,-4
10008c40:	10c00117 	ldw	r3,4(r2)
10008c44:	1986703a 	and	r3,r3,r6
10008c48:	38c0022e 	bgeu	r7,r3,10008c54 <_malloc_r+0x55c>
10008c4c:	10800217 	ldw	r2,8(r2)
10008c50:	28bffb1e 	bne	r5,r2,10008c40 <__alt_data_end+0xf8008c40>
10008c54:	11400317 	ldw	r5,12(r2)
10008c58:	98c00117 	ldw	r3,4(r19)
10008c5c:	81400315 	stw	r5,12(r16)
10008c60:	80800215 	stw	r2,8(r16)
10008c64:	2c000215 	stw	r16,8(r5)
10008c68:	14000315 	stw	r16,12(r2)
10008c6c:	003ef806 	br	10008850 <__alt_data_end+0xf8008850>
10008c70:	88c00054 	ori	r3,r17,1
10008c74:	80c00115 	stw	r3,4(r16)
10008c78:	8463883a 	add	r17,r16,r17
10008c7c:	34400515 	stw	r17,20(r6)
10008c80:	34400415 	stw	r17,16(r6)
10008c84:	10c00054 	ori	r3,r2,1
10008c88:	8a000315 	stw	r8,12(r17)
10008c8c:	8a000215 	stw	r8,8(r17)
10008c90:	88c00115 	stw	r3,4(r17)
10008c94:	88a3883a 	add	r17,r17,r2
10008c98:	88800015 	stw	r2,0(r17)
10008c9c:	9009883a 	mov	r4,r18
10008ca0:	0011d940 	call	10011d94 <__malloc_unlock>
10008ca4:	80800204 	addi	r2,r16,8
10008ca8:	003f3c06 	br	1000899c <__alt_data_end+0xf800899c>
10008cac:	30c00117 	ldw	r3,4(r6)
10008cb0:	003ee706 	br	10008850 <__alt_data_end+0xf8008850>
10008cb4:	5ac00044 	addi	r11,r11,1
10008cb8:	588000cc 	andi	r2,r11,3
10008cbc:	31800204 	addi	r6,r6,8
10008cc0:	103efd1e 	bne	r2,zero,100088b8 <__alt_data_end+0xf80088b8>
10008cc4:	00002406 	br	10008d58 <_malloc_r+0x660>
10008cc8:	14000317 	ldw	r16,12(r2)
10008ccc:	143f251e 	bne	r2,r16,10008964 <__alt_data_end+0xf8008964>
10008cd0:	21000084 	addi	r4,r4,2
10008cd4:	003ebc06 	br	100087c8 <__alt_data_end+0xf80087c8>
10008cd8:	8085883a 	add	r2,r16,r2
10008cdc:	10c00117 	ldw	r3,4(r2)
10008ce0:	81000317 	ldw	r4,12(r16)
10008ce4:	81400217 	ldw	r5,8(r16)
10008ce8:	18c00054 	ori	r3,r3,1
10008cec:	10c00115 	stw	r3,4(r2)
10008cf0:	29000315 	stw	r4,12(r5)
10008cf4:	21400215 	stw	r5,8(r4)
10008cf8:	9009883a 	mov	r4,r18
10008cfc:	0011d940 	call	10011d94 <__malloc_unlock>
10008d00:	80800204 	addi	r2,r16,8
10008d04:	003f2506 	br	1000899c <__alt_data_end+0xf800899c>
10008d08:	12001704 	addi	r8,r2,92
10008d0c:	11c016c4 	addi	r7,r2,91
10008d10:	4209883a 	add	r4,r8,r8
10008d14:	003e9606 	br	10008770 <__alt_data_end+0xf8008770>
10008d18:	3804d1ba 	srli	r2,r7,6
10008d1c:	11400e44 	addi	r5,r2,57
10008d20:	10c00e04 	addi	r3,r2,56
10008d24:	294b883a 	add	r5,r5,r5
10008d28:	003fbc06 	br	10008c1c <__alt_data_end+0xf8008c1c>
10008d2c:	84ff5926 	beq	r16,r19,10008a94 <__alt_data_end+0xf8008a94>
10008d30:	00840074 	movhi	r2,4097
10008d34:	1092ef04 	addi	r2,r2,19388
10008d38:	14000217 	ldw	r16,8(r2)
10008d3c:	00bfff04 	movi	r2,-4
10008d40:	80c00117 	ldw	r3,4(r16)
10008d44:	1886703a 	and	r3,r3,r2
10008d48:	003f9106 	br	10008b90 <__alt_data_end+0xf8008b90>
10008d4c:	60800217 	ldw	r2,8(r12)
10008d50:	213fffc4 	addi	r4,r4,-1
10008d54:	1300651e 	bne	r2,r12,10008eec <_malloc_r+0x7f4>
10008d58:	208000cc 	andi	r2,r4,3
10008d5c:	633ffe04 	addi	r12,r12,-8
10008d60:	103ffa1e 	bne	r2,zero,10008d4c <__alt_data_end+0xf8008d4c>
10008d64:	98800117 	ldw	r2,4(r19)
10008d68:	0146303a 	nor	r3,zero,r5
10008d6c:	1884703a 	and	r2,r3,r2
10008d70:	98800115 	stw	r2,4(r19)
10008d74:	294b883a 	add	r5,r5,r5
10008d78:	117f2836 	bltu	r2,r5,10008a1c <__alt_data_end+0xf8008a1c>
10008d7c:	283f2726 	beq	r5,zero,10008a1c <__alt_data_end+0xf8008a1c>
10008d80:	2886703a 	and	r3,r5,r2
10008d84:	5809883a 	mov	r4,r11
10008d88:	183ec31e 	bne	r3,zero,10008898 <__alt_data_end+0xf8008898>
10008d8c:	294b883a 	add	r5,r5,r5
10008d90:	2886703a 	and	r3,r5,r2
10008d94:	21000104 	addi	r4,r4,4
10008d98:	183ffc26 	beq	r3,zero,10008d8c <__alt_data_end+0xf8008d8c>
10008d9c:	003ebe06 	br	10008898 <__alt_data_end+0xf8008898>
10008da0:	00c05504 	movi	r3,340
10008da4:	18801236 	bltu	r3,r2,10008df0 <_malloc_r+0x6f8>
10008da8:	8804d3fa 	srli	r2,r17,15
10008dac:	12001e04 	addi	r8,r2,120
10008db0:	11c01dc4 	addi	r7,r2,119
10008db4:	4209883a 	add	r4,r8,r8
10008db8:	003e6d06 	br	10008770 <__alt_data_end+0xf8008770>
10008dbc:	00c40004 	movi	r3,4096
10008dc0:	003f4606 	br	10008adc <__alt_data_end+0xf8008adc>
10008dc4:	00800044 	movi	r2,1
10008dc8:	a0800115 	stw	r2,4(r20)
10008dcc:	003f7406 	br	10008ba0 <__alt_data_end+0xf8008ba0>
10008dd0:	1805d0ba 	srai	r2,r3,2
10008dd4:	01c00044 	movi	r7,1
10008dd8:	30c00117 	ldw	r3,4(r6)
10008ddc:	388e983a 	sll	r7,r7,r2
10008de0:	2805883a 	mov	r2,r5
10008de4:	38c6b03a 	or	r3,r7,r3
10008de8:	30c00115 	stw	r3,4(r6)
10008dec:	003f9b06 	br	10008c5c <__alt_data_end+0xf8008c5c>
10008df0:	00c15504 	movi	r3,1364
10008df4:	18801a36 	bltu	r3,r2,10008e60 <_malloc_r+0x768>
10008df8:	8804d4ba 	srli	r2,r17,18
10008dfc:	12001f44 	addi	r8,r2,125
10008e00:	11c01f04 	addi	r7,r2,124
10008e04:	4209883a 	add	r4,r8,r8
10008e08:	003e5906 	br	10008770 <__alt_data_end+0xf8008770>
10008e0c:	ad400404 	addi	r21,r21,16
10008e10:	003f1706 	br	10008a70 <__alt_data_end+0xf8008a70>
10008e14:	00c01504 	movi	r3,84
10008e18:	18802336 	bltu	r3,r2,10008ea8 <_malloc_r+0x7b0>
10008e1c:	3804d33a 	srli	r2,r7,12
10008e20:	11401bc4 	addi	r5,r2,111
10008e24:	10c01b84 	addi	r3,r2,110
10008e28:	294b883a 	add	r5,r5,r5
10008e2c:	003f7b06 	br	10008c1c <__alt_data_end+0xf8008c1c>
10008e30:	9c000217 	ldw	r16,8(r19)
10008e34:	00bfff04 	movi	r2,-4
10008e38:	80c00117 	ldw	r3,4(r16)
10008e3c:	1886703a 	and	r3,r3,r2
10008e40:	003f5306 	br	10008b90 <__alt_data_end+0xf8008b90>
10008e44:	3083ffcc 	andi	r2,r6,4095
10008e48:	103f181e 	bne	r2,zero,10008aac <__alt_data_end+0xf8008aac>
10008e4c:	99000217 	ldw	r4,8(r19)
10008e50:	b545883a 	add	r2,r22,r21
10008e54:	10800054 	ori	r2,r2,1
10008e58:	20800115 	stw	r2,4(r4)
10008e5c:	003f3e06 	br	10008b58 <__alt_data_end+0xf8008b58>
10008e60:	01003f84 	movi	r4,254
10008e64:	02001fc4 	movi	r8,127
10008e68:	01c01f84 	movi	r7,126
10008e6c:	003e4006 	br	10008770 <__alt_data_end+0xf8008770>
10008e70:	00840074 	movhi	r2,4097
10008e74:	10987804 	addi	r2,r2,25056
10008e78:	15000015 	stw	r20,0(r2)
10008e7c:	003f1106 	br	10008ac4 <__alt_data_end+0xf8008ac4>
10008e80:	00800044 	movi	r2,1
10008e84:	002b883a 	mov	r21,zero
10008e88:	003f1f06 	br	10008b08 <__alt_data_end+0xf8008b08>
10008e8c:	81400204 	addi	r5,r16,8
10008e90:	9009883a 	mov	r4,r18
10008e94:	0007b000 	call	10007b00 <_free_r>
10008e98:	008400b4 	movhi	r2,4098
10008e9c:	10a00804 	addi	r2,r2,-32736
10008ea0:	10c00017 	ldw	r3,0(r2)
10008ea4:	003f2c06 	br	10008b58 <__alt_data_end+0xf8008b58>
10008ea8:	00c05504 	movi	r3,340
10008eac:	18800536 	bltu	r3,r2,10008ec4 <_malloc_r+0x7cc>
10008eb0:	3804d3fa 	srli	r2,r7,15
10008eb4:	11401e04 	addi	r5,r2,120
10008eb8:	10c01dc4 	addi	r3,r2,119
10008ebc:	294b883a 	add	r5,r5,r5
10008ec0:	003f5606 	br	10008c1c <__alt_data_end+0xf8008c1c>
10008ec4:	00c15504 	movi	r3,1364
10008ec8:	18800536 	bltu	r3,r2,10008ee0 <_malloc_r+0x7e8>
10008ecc:	3804d4ba 	srli	r2,r7,18
10008ed0:	11401f44 	addi	r5,r2,125
10008ed4:	10c01f04 	addi	r3,r2,124
10008ed8:	294b883a 	add	r5,r5,r5
10008edc:	003f4f06 	br	10008c1c <__alt_data_end+0xf8008c1c>
10008ee0:	01403f84 	movi	r5,254
10008ee4:	00c01f84 	movi	r3,126
10008ee8:	003f4c06 	br	10008c1c <__alt_data_end+0xf8008c1c>
10008eec:	98800117 	ldw	r2,4(r19)
10008ef0:	003fa006 	br	10008d74 <__alt_data_end+0xf8008d74>
10008ef4:	8808d0fa 	srli	r4,r17,3
10008ef8:	20800044 	addi	r2,r4,1
10008efc:	1085883a 	add	r2,r2,r2
10008f00:	003e9006 	br	10008944 <__alt_data_end+0xf8008944>

10008f04 <memchr>:
10008f04:	208000cc 	andi	r2,r4,3
10008f08:	280f883a 	mov	r7,r5
10008f0c:	10003426 	beq	r2,zero,10008fe0 <memchr+0xdc>
10008f10:	30bfffc4 	addi	r2,r6,-1
10008f14:	30001a26 	beq	r6,zero,10008f80 <memchr+0x7c>
10008f18:	20c00003 	ldbu	r3,0(r4)
10008f1c:	29803fcc 	andi	r6,r5,255
10008f20:	30c0051e 	bne	r6,r3,10008f38 <memchr+0x34>
10008f24:	00001806 	br	10008f88 <memchr+0x84>
10008f28:	10001526 	beq	r2,zero,10008f80 <memchr+0x7c>
10008f2c:	20c00003 	ldbu	r3,0(r4)
10008f30:	10bfffc4 	addi	r2,r2,-1
10008f34:	30c01426 	beq	r6,r3,10008f88 <memchr+0x84>
10008f38:	21000044 	addi	r4,r4,1
10008f3c:	20c000cc 	andi	r3,r4,3
10008f40:	183ff91e 	bne	r3,zero,10008f28 <__alt_data_end+0xf8008f28>
10008f44:	020000c4 	movi	r8,3
10008f48:	40801136 	bltu	r8,r2,10008f90 <memchr+0x8c>
10008f4c:	10000c26 	beq	r2,zero,10008f80 <memchr+0x7c>
10008f50:	20c00003 	ldbu	r3,0(r4)
10008f54:	29403fcc 	andi	r5,r5,255
10008f58:	28c00b26 	beq	r5,r3,10008f88 <memchr+0x84>
10008f5c:	20c00044 	addi	r3,r4,1
10008f60:	39803fcc 	andi	r6,r7,255
10008f64:	2089883a 	add	r4,r4,r2
10008f68:	00000306 	br	10008f78 <memchr+0x74>
10008f6c:	18c00044 	addi	r3,r3,1
10008f70:	197fffc3 	ldbu	r5,-1(r3)
10008f74:	31400526 	beq	r6,r5,10008f8c <memchr+0x88>
10008f78:	1805883a 	mov	r2,r3
10008f7c:	20fffb1e 	bne	r4,r3,10008f6c <__alt_data_end+0xf8008f6c>
10008f80:	0005883a 	mov	r2,zero
10008f84:	f800283a 	ret
10008f88:	2005883a 	mov	r2,r4
10008f8c:	f800283a 	ret
10008f90:	28c03fcc 	andi	r3,r5,255
10008f94:	1812923a 	slli	r9,r3,8
10008f98:	02ffbff4 	movhi	r11,65279
10008f9c:	02a02074 	movhi	r10,32897
10008fa0:	48d2b03a 	or	r9,r9,r3
10008fa4:	4806943a 	slli	r3,r9,16
10008fa8:	5affbfc4 	addi	r11,r11,-257
10008fac:	52a02004 	addi	r10,r10,-32640
10008fb0:	48d2b03a 	or	r9,r9,r3
10008fb4:	20c00017 	ldw	r3,0(r4)
10008fb8:	48c6f03a 	xor	r3,r9,r3
10008fbc:	1acd883a 	add	r6,r3,r11
10008fc0:	00c6303a 	nor	r3,zero,r3
10008fc4:	30c6703a 	and	r3,r6,r3
10008fc8:	1a86703a 	and	r3,r3,r10
10008fcc:	183fe01e 	bne	r3,zero,10008f50 <__alt_data_end+0xf8008f50>
10008fd0:	10bfff04 	addi	r2,r2,-4
10008fd4:	21000104 	addi	r4,r4,4
10008fd8:	40bff636 	bltu	r8,r2,10008fb4 <__alt_data_end+0xf8008fb4>
10008fdc:	003fdb06 	br	10008f4c <__alt_data_end+0xf8008f4c>
10008fe0:	3005883a 	mov	r2,r6
10008fe4:	003fd706 	br	10008f44 <__alt_data_end+0xf8008f44>

10008fe8 <memcpy>:
10008fe8:	defffd04 	addi	sp,sp,-12
10008fec:	dfc00215 	stw	ra,8(sp)
10008ff0:	dc400115 	stw	r17,4(sp)
10008ff4:	dc000015 	stw	r16,0(sp)
10008ff8:	00c003c4 	movi	r3,15
10008ffc:	2005883a 	mov	r2,r4
10009000:	1980452e 	bgeu	r3,r6,10009118 <memcpy+0x130>
10009004:	2906b03a 	or	r3,r5,r4
10009008:	18c000cc 	andi	r3,r3,3
1000900c:	1800441e 	bne	r3,zero,10009120 <memcpy+0x138>
10009010:	347ffc04 	addi	r17,r6,-16
10009014:	8822d13a 	srli	r17,r17,4
10009018:	28c00104 	addi	r3,r5,4
1000901c:	23400104 	addi	r13,r4,4
10009020:	8820913a 	slli	r16,r17,4
10009024:	2b000204 	addi	r12,r5,8
10009028:	22c00204 	addi	r11,r4,8
1000902c:	84000504 	addi	r16,r16,20
10009030:	2a800304 	addi	r10,r5,12
10009034:	22400304 	addi	r9,r4,12
10009038:	2c21883a 	add	r16,r5,r16
1000903c:	2811883a 	mov	r8,r5
10009040:	200f883a 	mov	r7,r4
10009044:	41000017 	ldw	r4,0(r8)
10009048:	1fc00017 	ldw	ra,0(r3)
1000904c:	63c00017 	ldw	r15,0(r12)
10009050:	39000015 	stw	r4,0(r7)
10009054:	53800017 	ldw	r14,0(r10)
10009058:	6fc00015 	stw	ra,0(r13)
1000905c:	5bc00015 	stw	r15,0(r11)
10009060:	4b800015 	stw	r14,0(r9)
10009064:	18c00404 	addi	r3,r3,16
10009068:	39c00404 	addi	r7,r7,16
1000906c:	42000404 	addi	r8,r8,16
10009070:	6b400404 	addi	r13,r13,16
10009074:	63000404 	addi	r12,r12,16
10009078:	5ac00404 	addi	r11,r11,16
1000907c:	52800404 	addi	r10,r10,16
10009080:	4a400404 	addi	r9,r9,16
10009084:	1c3fef1e 	bne	r3,r16,10009044 <__alt_data_end+0xf8009044>
10009088:	89c00044 	addi	r7,r17,1
1000908c:	380e913a 	slli	r7,r7,4
10009090:	310003cc 	andi	r4,r6,15
10009094:	02c000c4 	movi	r11,3
10009098:	11c7883a 	add	r3,r2,r7
1000909c:	29cb883a 	add	r5,r5,r7
100090a0:	5900212e 	bgeu	r11,r4,10009128 <memcpy+0x140>
100090a4:	1813883a 	mov	r9,r3
100090a8:	2811883a 	mov	r8,r5
100090ac:	200f883a 	mov	r7,r4
100090b0:	42800017 	ldw	r10,0(r8)
100090b4:	4a400104 	addi	r9,r9,4
100090b8:	39ffff04 	addi	r7,r7,-4
100090bc:	4abfff15 	stw	r10,-4(r9)
100090c0:	42000104 	addi	r8,r8,4
100090c4:	59fffa36 	bltu	r11,r7,100090b0 <__alt_data_end+0xf80090b0>
100090c8:	213fff04 	addi	r4,r4,-4
100090cc:	2008d0ba 	srli	r4,r4,2
100090d0:	318000cc 	andi	r6,r6,3
100090d4:	21000044 	addi	r4,r4,1
100090d8:	2109883a 	add	r4,r4,r4
100090dc:	2109883a 	add	r4,r4,r4
100090e0:	1907883a 	add	r3,r3,r4
100090e4:	290b883a 	add	r5,r5,r4
100090e8:	30000626 	beq	r6,zero,10009104 <memcpy+0x11c>
100090ec:	198d883a 	add	r6,r3,r6
100090f0:	29c00003 	ldbu	r7,0(r5)
100090f4:	18c00044 	addi	r3,r3,1
100090f8:	29400044 	addi	r5,r5,1
100090fc:	19ffffc5 	stb	r7,-1(r3)
10009100:	19bffb1e 	bne	r3,r6,100090f0 <__alt_data_end+0xf80090f0>
10009104:	dfc00217 	ldw	ra,8(sp)
10009108:	dc400117 	ldw	r17,4(sp)
1000910c:	dc000017 	ldw	r16,0(sp)
10009110:	dec00304 	addi	sp,sp,12
10009114:	f800283a 	ret
10009118:	2007883a 	mov	r3,r4
1000911c:	003ff206 	br	100090e8 <__alt_data_end+0xf80090e8>
10009120:	2007883a 	mov	r3,r4
10009124:	003ff106 	br	100090ec <__alt_data_end+0xf80090ec>
10009128:	200d883a 	mov	r6,r4
1000912c:	003fee06 	br	100090e8 <__alt_data_end+0xf80090e8>

10009130 <memmove>:
10009130:	2005883a 	mov	r2,r4
10009134:	29000b2e 	bgeu	r5,r4,10009164 <memmove+0x34>
10009138:	298f883a 	add	r7,r5,r6
1000913c:	21c0092e 	bgeu	r4,r7,10009164 <memmove+0x34>
10009140:	2187883a 	add	r3,r4,r6
10009144:	198bc83a 	sub	r5,r3,r6
10009148:	30004826 	beq	r6,zero,1000926c <memmove+0x13c>
1000914c:	39ffffc4 	addi	r7,r7,-1
10009150:	39000003 	ldbu	r4,0(r7)
10009154:	18ffffc4 	addi	r3,r3,-1
10009158:	19000005 	stb	r4,0(r3)
1000915c:	28fffb1e 	bne	r5,r3,1000914c <__alt_data_end+0xf800914c>
10009160:	f800283a 	ret
10009164:	00c003c4 	movi	r3,15
10009168:	1980412e 	bgeu	r3,r6,10009270 <memmove+0x140>
1000916c:	2886b03a 	or	r3,r5,r2
10009170:	18c000cc 	andi	r3,r3,3
10009174:	1800401e 	bne	r3,zero,10009278 <memmove+0x148>
10009178:	33fffc04 	addi	r15,r6,-16
1000917c:	781ed13a 	srli	r15,r15,4
10009180:	28c00104 	addi	r3,r5,4
10009184:	13400104 	addi	r13,r2,4
10009188:	781c913a 	slli	r14,r15,4
1000918c:	2b000204 	addi	r12,r5,8
10009190:	12c00204 	addi	r11,r2,8
10009194:	73800504 	addi	r14,r14,20
10009198:	2a800304 	addi	r10,r5,12
1000919c:	12400304 	addi	r9,r2,12
100091a0:	2b9d883a 	add	r14,r5,r14
100091a4:	2811883a 	mov	r8,r5
100091a8:	100f883a 	mov	r7,r2
100091ac:	41000017 	ldw	r4,0(r8)
100091b0:	39c00404 	addi	r7,r7,16
100091b4:	18c00404 	addi	r3,r3,16
100091b8:	393ffc15 	stw	r4,-16(r7)
100091bc:	193ffc17 	ldw	r4,-16(r3)
100091c0:	6b400404 	addi	r13,r13,16
100091c4:	5ac00404 	addi	r11,r11,16
100091c8:	693ffc15 	stw	r4,-16(r13)
100091cc:	61000017 	ldw	r4,0(r12)
100091d0:	4a400404 	addi	r9,r9,16
100091d4:	42000404 	addi	r8,r8,16
100091d8:	593ffc15 	stw	r4,-16(r11)
100091dc:	51000017 	ldw	r4,0(r10)
100091e0:	63000404 	addi	r12,r12,16
100091e4:	52800404 	addi	r10,r10,16
100091e8:	493ffc15 	stw	r4,-16(r9)
100091ec:	1bbfef1e 	bne	r3,r14,100091ac <__alt_data_end+0xf80091ac>
100091f0:	79000044 	addi	r4,r15,1
100091f4:	2008913a 	slli	r4,r4,4
100091f8:	328003cc 	andi	r10,r6,15
100091fc:	02c000c4 	movi	r11,3
10009200:	1107883a 	add	r3,r2,r4
10009204:	290b883a 	add	r5,r5,r4
10009208:	5a801e2e 	bgeu	r11,r10,10009284 <memmove+0x154>
1000920c:	1813883a 	mov	r9,r3
10009210:	2811883a 	mov	r8,r5
10009214:	500f883a 	mov	r7,r10
10009218:	41000017 	ldw	r4,0(r8)
1000921c:	4a400104 	addi	r9,r9,4
10009220:	39ffff04 	addi	r7,r7,-4
10009224:	493fff15 	stw	r4,-4(r9)
10009228:	42000104 	addi	r8,r8,4
1000922c:	59fffa36 	bltu	r11,r7,10009218 <__alt_data_end+0xf8009218>
10009230:	513fff04 	addi	r4,r10,-4
10009234:	2008d0ba 	srli	r4,r4,2
10009238:	318000cc 	andi	r6,r6,3
1000923c:	21000044 	addi	r4,r4,1
10009240:	2109883a 	add	r4,r4,r4
10009244:	2109883a 	add	r4,r4,r4
10009248:	1907883a 	add	r3,r3,r4
1000924c:	290b883a 	add	r5,r5,r4
10009250:	30000b26 	beq	r6,zero,10009280 <memmove+0x150>
10009254:	198d883a 	add	r6,r3,r6
10009258:	29c00003 	ldbu	r7,0(r5)
1000925c:	18c00044 	addi	r3,r3,1
10009260:	29400044 	addi	r5,r5,1
10009264:	19ffffc5 	stb	r7,-1(r3)
10009268:	19bffb1e 	bne	r3,r6,10009258 <__alt_data_end+0xf8009258>
1000926c:	f800283a 	ret
10009270:	1007883a 	mov	r3,r2
10009274:	003ff606 	br	10009250 <__alt_data_end+0xf8009250>
10009278:	1007883a 	mov	r3,r2
1000927c:	003ff506 	br	10009254 <__alt_data_end+0xf8009254>
10009280:	f800283a 	ret
10009284:	500d883a 	mov	r6,r10
10009288:	003ff106 	br	10009250 <__alt_data_end+0xf8009250>

1000928c <memset>:
1000928c:	20c000cc 	andi	r3,r4,3
10009290:	2005883a 	mov	r2,r4
10009294:	18004426 	beq	r3,zero,100093a8 <memset+0x11c>
10009298:	31ffffc4 	addi	r7,r6,-1
1000929c:	30004026 	beq	r6,zero,100093a0 <memset+0x114>
100092a0:	2813883a 	mov	r9,r5
100092a4:	200d883a 	mov	r6,r4
100092a8:	2007883a 	mov	r3,r4
100092ac:	00000406 	br	100092c0 <memset+0x34>
100092b0:	3a3fffc4 	addi	r8,r7,-1
100092b4:	31800044 	addi	r6,r6,1
100092b8:	38003926 	beq	r7,zero,100093a0 <memset+0x114>
100092bc:	400f883a 	mov	r7,r8
100092c0:	18c00044 	addi	r3,r3,1
100092c4:	32400005 	stb	r9,0(r6)
100092c8:	1a0000cc 	andi	r8,r3,3
100092cc:	403ff81e 	bne	r8,zero,100092b0 <__alt_data_end+0xf80092b0>
100092d0:	010000c4 	movi	r4,3
100092d4:	21c02d2e 	bgeu	r4,r7,1000938c <memset+0x100>
100092d8:	29003fcc 	andi	r4,r5,255
100092dc:	200c923a 	slli	r6,r4,8
100092e0:	3108b03a 	or	r4,r6,r4
100092e4:	200c943a 	slli	r6,r4,16
100092e8:	218cb03a 	or	r6,r4,r6
100092ec:	010003c4 	movi	r4,15
100092f0:	21c0182e 	bgeu	r4,r7,10009354 <memset+0xc8>
100092f4:	3b3ffc04 	addi	r12,r7,-16
100092f8:	6018d13a 	srli	r12,r12,4
100092fc:	1a000104 	addi	r8,r3,4
10009300:	1ac00204 	addi	r11,r3,8
10009304:	6008913a 	slli	r4,r12,4
10009308:	1a800304 	addi	r10,r3,12
1000930c:	1813883a 	mov	r9,r3
10009310:	21000504 	addi	r4,r4,20
10009314:	1909883a 	add	r4,r3,r4
10009318:	49800015 	stw	r6,0(r9)
1000931c:	41800015 	stw	r6,0(r8)
10009320:	59800015 	stw	r6,0(r11)
10009324:	51800015 	stw	r6,0(r10)
10009328:	42000404 	addi	r8,r8,16
1000932c:	4a400404 	addi	r9,r9,16
10009330:	5ac00404 	addi	r11,r11,16
10009334:	52800404 	addi	r10,r10,16
10009338:	413ff71e 	bne	r8,r4,10009318 <__alt_data_end+0xf8009318>
1000933c:	63000044 	addi	r12,r12,1
10009340:	6018913a 	slli	r12,r12,4
10009344:	39c003cc 	andi	r7,r7,15
10009348:	010000c4 	movi	r4,3
1000934c:	1b07883a 	add	r3,r3,r12
10009350:	21c00e2e 	bgeu	r4,r7,1000938c <memset+0x100>
10009354:	1813883a 	mov	r9,r3
10009358:	3811883a 	mov	r8,r7
1000935c:	010000c4 	movi	r4,3
10009360:	49800015 	stw	r6,0(r9)
10009364:	423fff04 	addi	r8,r8,-4
10009368:	4a400104 	addi	r9,r9,4
1000936c:	223ffc36 	bltu	r4,r8,10009360 <__alt_data_end+0xf8009360>
10009370:	393fff04 	addi	r4,r7,-4
10009374:	2008d0ba 	srli	r4,r4,2
10009378:	39c000cc 	andi	r7,r7,3
1000937c:	21000044 	addi	r4,r4,1
10009380:	2109883a 	add	r4,r4,r4
10009384:	2109883a 	add	r4,r4,r4
10009388:	1907883a 	add	r3,r3,r4
1000938c:	38000526 	beq	r7,zero,100093a4 <memset+0x118>
10009390:	19cf883a 	add	r7,r3,r7
10009394:	19400005 	stb	r5,0(r3)
10009398:	18c00044 	addi	r3,r3,1
1000939c:	38fffd1e 	bne	r7,r3,10009394 <__alt_data_end+0xf8009394>
100093a0:	f800283a 	ret
100093a4:	f800283a 	ret
100093a8:	2007883a 	mov	r3,r4
100093ac:	300f883a 	mov	r7,r6
100093b0:	003fc706 	br	100092d0 <__alt_data_end+0xf80092d0>

100093b4 <_Balloc>:
100093b4:	20801317 	ldw	r2,76(r4)
100093b8:	defffc04 	addi	sp,sp,-16
100093bc:	dc400115 	stw	r17,4(sp)
100093c0:	dc000015 	stw	r16,0(sp)
100093c4:	dfc00315 	stw	ra,12(sp)
100093c8:	dc800215 	stw	r18,8(sp)
100093cc:	2023883a 	mov	r17,r4
100093d0:	2821883a 	mov	r16,r5
100093d4:	10000f26 	beq	r2,zero,10009414 <_Balloc+0x60>
100093d8:	8407883a 	add	r3,r16,r16
100093dc:	18c7883a 	add	r3,r3,r3
100093e0:	10c7883a 	add	r3,r2,r3
100093e4:	18800017 	ldw	r2,0(r3)
100093e8:	10001126 	beq	r2,zero,10009430 <_Balloc+0x7c>
100093ec:	11000017 	ldw	r4,0(r2)
100093f0:	19000015 	stw	r4,0(r3)
100093f4:	10000415 	stw	zero,16(r2)
100093f8:	10000315 	stw	zero,12(r2)
100093fc:	dfc00317 	ldw	ra,12(sp)
10009400:	dc800217 	ldw	r18,8(sp)
10009404:	dc400117 	ldw	r17,4(sp)
10009408:	dc000017 	ldw	r16,0(sp)
1000940c:	dec00404 	addi	sp,sp,16
10009410:	f800283a 	ret
10009414:	01800844 	movi	r6,33
10009418:	01400104 	movi	r5,4
1000941c:	000d9cc0 	call	1000d9cc <_calloc_r>
10009420:	88801315 	stw	r2,76(r17)
10009424:	103fec1e 	bne	r2,zero,100093d8 <__alt_data_end+0xf80093d8>
10009428:	0005883a 	mov	r2,zero
1000942c:	003ff306 	br	100093fc <__alt_data_end+0xf80093fc>
10009430:	01400044 	movi	r5,1
10009434:	2c24983a 	sll	r18,r5,r16
10009438:	8809883a 	mov	r4,r17
1000943c:	91800144 	addi	r6,r18,5
10009440:	318d883a 	add	r6,r6,r6
10009444:	318d883a 	add	r6,r6,r6
10009448:	000d9cc0 	call	1000d9cc <_calloc_r>
1000944c:	103ff626 	beq	r2,zero,10009428 <__alt_data_end+0xf8009428>
10009450:	14000115 	stw	r16,4(r2)
10009454:	14800215 	stw	r18,8(r2)
10009458:	003fe606 	br	100093f4 <__alt_data_end+0xf80093f4>

1000945c <_Bfree>:
1000945c:	28000826 	beq	r5,zero,10009480 <_Bfree+0x24>
10009460:	28c00117 	ldw	r3,4(r5)
10009464:	20801317 	ldw	r2,76(r4)
10009468:	18c7883a 	add	r3,r3,r3
1000946c:	18c7883a 	add	r3,r3,r3
10009470:	10c5883a 	add	r2,r2,r3
10009474:	10c00017 	ldw	r3,0(r2)
10009478:	28c00015 	stw	r3,0(r5)
1000947c:	11400015 	stw	r5,0(r2)
10009480:	f800283a 	ret

10009484 <__multadd>:
10009484:	defff704 	addi	sp,sp,-36
10009488:	dc800215 	stw	r18,8(sp)
1000948c:	2c800417 	ldw	r18,16(r5)
10009490:	dd800615 	stw	r22,24(sp)
10009494:	dd400515 	stw	r21,20(sp)
10009498:	dd000415 	stw	r20,16(sp)
1000949c:	dcc00315 	stw	r19,12(sp)
100094a0:	dc400115 	stw	r17,4(sp)
100094a4:	dc000015 	stw	r16,0(sp)
100094a8:	dfc00815 	stw	ra,32(sp)
100094ac:	ddc00715 	stw	r23,28(sp)
100094b0:	2827883a 	mov	r19,r5
100094b4:	2029883a 	mov	r20,r4
100094b8:	3023883a 	mov	r17,r6
100094bc:	3821883a 	mov	r16,r7
100094c0:	2d400504 	addi	r21,r5,20
100094c4:	002d883a 	mov	r22,zero
100094c8:	adc00017 	ldw	r23,0(r21)
100094cc:	880b883a 	mov	r5,r17
100094d0:	ad400104 	addi	r21,r21,4
100094d4:	b93fffcc 	andi	r4,r23,65535
100094d8:	0000fd00 	call	10000fd0 <__mulsi3>
100094dc:	b808d43a 	srli	r4,r23,16
100094e0:	880b883a 	mov	r5,r17
100094e4:	1421883a 	add	r16,r2,r16
100094e8:	0000fd00 	call	10000fd0 <__mulsi3>
100094ec:	800ed43a 	srli	r7,r16,16
100094f0:	80ffffcc 	andi	r3,r16,65535
100094f4:	b5800044 	addi	r22,r22,1
100094f8:	11c5883a 	add	r2,r2,r7
100094fc:	100e943a 	slli	r7,r2,16
10009500:	1020d43a 	srli	r16,r2,16
10009504:	38c7883a 	add	r3,r7,r3
10009508:	a8ffff15 	stw	r3,-4(r21)
1000950c:	b4bfee16 	blt	r22,r18,100094c8 <__alt_data_end+0xf80094c8>
10009510:	80000926 	beq	r16,zero,10009538 <__multadd+0xb4>
10009514:	98800217 	ldw	r2,8(r19)
10009518:	9080130e 	bge	r18,r2,10009568 <__multadd+0xe4>
1000951c:	90800144 	addi	r2,r18,5
10009520:	1085883a 	add	r2,r2,r2
10009524:	1085883a 	add	r2,r2,r2
10009528:	9885883a 	add	r2,r19,r2
1000952c:	14000015 	stw	r16,0(r2)
10009530:	94800044 	addi	r18,r18,1
10009534:	9c800415 	stw	r18,16(r19)
10009538:	9805883a 	mov	r2,r19
1000953c:	dfc00817 	ldw	ra,32(sp)
10009540:	ddc00717 	ldw	r23,28(sp)
10009544:	dd800617 	ldw	r22,24(sp)
10009548:	dd400517 	ldw	r21,20(sp)
1000954c:	dd000417 	ldw	r20,16(sp)
10009550:	dcc00317 	ldw	r19,12(sp)
10009554:	dc800217 	ldw	r18,8(sp)
10009558:	dc400117 	ldw	r17,4(sp)
1000955c:	dc000017 	ldw	r16,0(sp)
10009560:	dec00904 	addi	sp,sp,36
10009564:	f800283a 	ret
10009568:	99400117 	ldw	r5,4(r19)
1000956c:	a009883a 	mov	r4,r20
10009570:	29400044 	addi	r5,r5,1
10009574:	00093b40 	call	100093b4 <_Balloc>
10009578:	99800417 	ldw	r6,16(r19)
1000957c:	99400304 	addi	r5,r19,12
10009580:	11000304 	addi	r4,r2,12
10009584:	31800084 	addi	r6,r6,2
10009588:	318d883a 	add	r6,r6,r6
1000958c:	318d883a 	add	r6,r6,r6
10009590:	1023883a 	mov	r17,r2
10009594:	0008fe80 	call	10008fe8 <memcpy>
10009598:	98000a26 	beq	r19,zero,100095c4 <__multadd+0x140>
1000959c:	98c00117 	ldw	r3,4(r19)
100095a0:	a0801317 	ldw	r2,76(r20)
100095a4:	18c7883a 	add	r3,r3,r3
100095a8:	18c7883a 	add	r3,r3,r3
100095ac:	10c5883a 	add	r2,r2,r3
100095b0:	10c00017 	ldw	r3,0(r2)
100095b4:	98c00015 	stw	r3,0(r19)
100095b8:	14c00015 	stw	r19,0(r2)
100095bc:	8827883a 	mov	r19,r17
100095c0:	003fd606 	br	1000951c <__alt_data_end+0xf800951c>
100095c4:	8827883a 	mov	r19,r17
100095c8:	003fd406 	br	1000951c <__alt_data_end+0xf800951c>

100095cc <__s2b>:
100095cc:	defff904 	addi	sp,sp,-28
100095d0:	dc400115 	stw	r17,4(sp)
100095d4:	dc000015 	stw	r16,0(sp)
100095d8:	2023883a 	mov	r17,r4
100095dc:	2821883a 	mov	r16,r5
100095e0:	39000204 	addi	r4,r7,8
100095e4:	01400244 	movi	r5,9
100095e8:	dcc00315 	stw	r19,12(sp)
100095ec:	dc800215 	stw	r18,8(sp)
100095f0:	dfc00615 	stw	ra,24(sp)
100095f4:	dd400515 	stw	r21,20(sp)
100095f8:	dd000415 	stw	r20,16(sp)
100095fc:	3825883a 	mov	r18,r7
10009600:	3027883a 	mov	r19,r6
10009604:	0000e1c0 	call	10000e1c <__divsi3>
10009608:	00c00044 	movi	r3,1
1000960c:	000b883a 	mov	r5,zero
10009610:	1880030e 	bge	r3,r2,10009620 <__s2b+0x54>
10009614:	18c7883a 	add	r3,r3,r3
10009618:	29400044 	addi	r5,r5,1
1000961c:	18bffd16 	blt	r3,r2,10009614 <__alt_data_end+0xf8009614>
10009620:	8809883a 	mov	r4,r17
10009624:	00093b40 	call	100093b4 <_Balloc>
10009628:	d8c00717 	ldw	r3,28(sp)
1000962c:	10c00515 	stw	r3,20(r2)
10009630:	00c00044 	movi	r3,1
10009634:	10c00415 	stw	r3,16(r2)
10009638:	00c00244 	movi	r3,9
1000963c:	1cc0210e 	bge	r3,r19,100096c4 <__s2b+0xf8>
10009640:	80eb883a 	add	r21,r16,r3
10009644:	a829883a 	mov	r20,r21
10009648:	84e1883a 	add	r16,r16,r19
1000964c:	a1c00007 	ldb	r7,0(r20)
10009650:	01800284 	movi	r6,10
10009654:	a5000044 	addi	r20,r20,1
10009658:	100b883a 	mov	r5,r2
1000965c:	39fff404 	addi	r7,r7,-48
10009660:	8809883a 	mov	r4,r17
10009664:	00094840 	call	10009484 <__multadd>
10009668:	a43ff81e 	bne	r20,r16,1000964c <__alt_data_end+0xf800964c>
1000966c:	ace1883a 	add	r16,r21,r19
10009670:	843ffe04 	addi	r16,r16,-8
10009674:	9c800a0e 	bge	r19,r18,100096a0 <__s2b+0xd4>
10009678:	94e5c83a 	sub	r18,r18,r19
1000967c:	84a5883a 	add	r18,r16,r18
10009680:	81c00007 	ldb	r7,0(r16)
10009684:	01800284 	movi	r6,10
10009688:	84000044 	addi	r16,r16,1
1000968c:	100b883a 	mov	r5,r2
10009690:	39fff404 	addi	r7,r7,-48
10009694:	8809883a 	mov	r4,r17
10009698:	00094840 	call	10009484 <__multadd>
1000969c:	84bff81e 	bne	r16,r18,10009680 <__alt_data_end+0xf8009680>
100096a0:	dfc00617 	ldw	ra,24(sp)
100096a4:	dd400517 	ldw	r21,20(sp)
100096a8:	dd000417 	ldw	r20,16(sp)
100096ac:	dcc00317 	ldw	r19,12(sp)
100096b0:	dc800217 	ldw	r18,8(sp)
100096b4:	dc400117 	ldw	r17,4(sp)
100096b8:	dc000017 	ldw	r16,0(sp)
100096bc:	dec00704 	addi	sp,sp,28
100096c0:	f800283a 	ret
100096c4:	84000284 	addi	r16,r16,10
100096c8:	1827883a 	mov	r19,r3
100096cc:	003fe906 	br	10009674 <__alt_data_end+0xf8009674>

100096d0 <__hi0bits>:
100096d0:	20bfffec 	andhi	r2,r4,65535
100096d4:	1000141e 	bne	r2,zero,10009728 <__hi0bits+0x58>
100096d8:	2008943a 	slli	r4,r4,16
100096dc:	00800404 	movi	r2,16
100096e0:	20ffc02c 	andhi	r3,r4,65280
100096e4:	1800021e 	bne	r3,zero,100096f0 <__hi0bits+0x20>
100096e8:	2008923a 	slli	r4,r4,8
100096ec:	10800204 	addi	r2,r2,8
100096f0:	20fc002c 	andhi	r3,r4,61440
100096f4:	1800021e 	bne	r3,zero,10009700 <__hi0bits+0x30>
100096f8:	2008913a 	slli	r4,r4,4
100096fc:	10800104 	addi	r2,r2,4
10009700:	20f0002c 	andhi	r3,r4,49152
10009704:	1800031e 	bne	r3,zero,10009714 <__hi0bits+0x44>
10009708:	2109883a 	add	r4,r4,r4
1000970c:	10800084 	addi	r2,r2,2
10009710:	2109883a 	add	r4,r4,r4
10009714:	20000316 	blt	r4,zero,10009724 <__hi0bits+0x54>
10009718:	2110002c 	andhi	r4,r4,16384
1000971c:	2000041e 	bne	r4,zero,10009730 <__hi0bits+0x60>
10009720:	00800804 	movi	r2,32
10009724:	f800283a 	ret
10009728:	0005883a 	mov	r2,zero
1000972c:	003fec06 	br	100096e0 <__alt_data_end+0xf80096e0>
10009730:	10800044 	addi	r2,r2,1
10009734:	f800283a 	ret

10009738 <__lo0bits>:
10009738:	20c00017 	ldw	r3,0(r4)
1000973c:	188001cc 	andi	r2,r3,7
10009740:	10000826 	beq	r2,zero,10009764 <__lo0bits+0x2c>
10009744:	1880004c 	andi	r2,r3,1
10009748:	1000211e 	bne	r2,zero,100097d0 <__lo0bits+0x98>
1000974c:	1880008c 	andi	r2,r3,2
10009750:	1000211e 	bne	r2,zero,100097d8 <__lo0bits+0xa0>
10009754:	1806d0ba 	srli	r3,r3,2
10009758:	00800084 	movi	r2,2
1000975c:	20c00015 	stw	r3,0(r4)
10009760:	f800283a 	ret
10009764:	18bfffcc 	andi	r2,r3,65535
10009768:	10001326 	beq	r2,zero,100097b8 <__lo0bits+0x80>
1000976c:	0005883a 	mov	r2,zero
10009770:	19403fcc 	andi	r5,r3,255
10009774:	2800021e 	bne	r5,zero,10009780 <__lo0bits+0x48>
10009778:	1806d23a 	srli	r3,r3,8
1000977c:	10800204 	addi	r2,r2,8
10009780:	194003cc 	andi	r5,r3,15
10009784:	2800021e 	bne	r5,zero,10009790 <__lo0bits+0x58>
10009788:	1806d13a 	srli	r3,r3,4
1000978c:	10800104 	addi	r2,r2,4
10009790:	194000cc 	andi	r5,r3,3
10009794:	2800021e 	bne	r5,zero,100097a0 <__lo0bits+0x68>
10009798:	1806d0ba 	srli	r3,r3,2
1000979c:	10800084 	addi	r2,r2,2
100097a0:	1940004c 	andi	r5,r3,1
100097a4:	2800081e 	bne	r5,zero,100097c8 <__lo0bits+0x90>
100097a8:	1806d07a 	srli	r3,r3,1
100097ac:	1800051e 	bne	r3,zero,100097c4 <__lo0bits+0x8c>
100097b0:	00800804 	movi	r2,32
100097b4:	f800283a 	ret
100097b8:	1806d43a 	srli	r3,r3,16
100097bc:	00800404 	movi	r2,16
100097c0:	003feb06 	br	10009770 <__alt_data_end+0xf8009770>
100097c4:	10800044 	addi	r2,r2,1
100097c8:	20c00015 	stw	r3,0(r4)
100097cc:	f800283a 	ret
100097d0:	0005883a 	mov	r2,zero
100097d4:	f800283a 	ret
100097d8:	1806d07a 	srli	r3,r3,1
100097dc:	00800044 	movi	r2,1
100097e0:	20c00015 	stw	r3,0(r4)
100097e4:	f800283a 	ret

100097e8 <__i2b>:
100097e8:	defffd04 	addi	sp,sp,-12
100097ec:	dc000015 	stw	r16,0(sp)
100097f0:	04000044 	movi	r16,1
100097f4:	dc400115 	stw	r17,4(sp)
100097f8:	2823883a 	mov	r17,r5
100097fc:	800b883a 	mov	r5,r16
10009800:	dfc00215 	stw	ra,8(sp)
10009804:	00093b40 	call	100093b4 <_Balloc>
10009808:	14400515 	stw	r17,20(r2)
1000980c:	14000415 	stw	r16,16(r2)
10009810:	dfc00217 	ldw	ra,8(sp)
10009814:	dc400117 	ldw	r17,4(sp)
10009818:	dc000017 	ldw	r16,0(sp)
1000981c:	dec00304 	addi	sp,sp,12
10009820:	f800283a 	ret

10009824 <__multiply>:
10009824:	deffef04 	addi	sp,sp,-68
10009828:	dc400815 	stw	r17,32(sp)
1000982c:	dc000715 	stw	r16,28(sp)
10009830:	34400417 	ldw	r17,16(r6)
10009834:	2c000417 	ldw	r16,16(r5)
10009838:	dd800d15 	stw	r22,52(sp)
1000983c:	dc800915 	stw	r18,36(sp)
10009840:	dfc01015 	stw	ra,64(sp)
10009844:	df000f15 	stw	fp,60(sp)
10009848:	ddc00e15 	stw	r23,56(sp)
1000984c:	dd400c15 	stw	r21,48(sp)
10009850:	dd000b15 	stw	r20,44(sp)
10009854:	dcc00a15 	stw	r19,40(sp)
10009858:	2825883a 	mov	r18,r5
1000985c:	302d883a 	mov	r22,r6
10009860:	8440050e 	bge	r16,r17,10009878 <__multiply+0x54>
10009864:	8007883a 	mov	r3,r16
10009868:	3025883a 	mov	r18,r6
1000986c:	8821883a 	mov	r16,r17
10009870:	282d883a 	mov	r22,r5
10009874:	1823883a 	mov	r17,r3
10009878:	90800217 	ldw	r2,8(r18)
1000987c:	8447883a 	add	r3,r16,r17
10009880:	d8c00215 	stw	r3,8(sp)
10009884:	91400117 	ldw	r5,4(r18)
10009888:	10c0010e 	bge	r2,r3,10009890 <__multiply+0x6c>
1000988c:	29400044 	addi	r5,r5,1
10009890:	00093b40 	call	100093b4 <_Balloc>
10009894:	d8c00217 	ldw	r3,8(sp)
10009898:	d8800615 	stw	r2,24(sp)
1000989c:	18eb883a 	add	r21,r3,r3
100098a0:	ad6b883a 	add	r21,r21,r21
100098a4:	10c00504 	addi	r3,r2,20
100098a8:	1d6b883a 	add	r21,r3,r21
100098ac:	d8c00115 	stw	r3,4(sp)
100098b0:	dd400315 	stw	r21,12(sp)
100098b4:	1805883a 	mov	r2,r3
100098b8:	1d40042e 	bgeu	r3,r21,100098cc <__multiply+0xa8>
100098bc:	d8c00317 	ldw	r3,12(sp)
100098c0:	10000015 	stw	zero,0(r2)
100098c4:	10800104 	addi	r2,r2,4
100098c8:	10fffc36 	bltu	r2,r3,100098bc <__alt_data_end+0xf80098bc>
100098cc:	8c63883a 	add	r17,r17,r17
100098d0:	b5800504 	addi	r22,r22,20
100098d4:	8c63883a 	add	r17,r17,r17
100098d8:	94800504 	addi	r18,r18,20
100098dc:	8421883a 	add	r16,r16,r16
100098e0:	b463883a 	add	r17,r22,r17
100098e4:	8421883a 	add	r16,r16,r16
100098e8:	dd800015 	stw	r22,0(sp)
100098ec:	dc800415 	stw	r18,16(sp)
100098f0:	dc400515 	stw	r17,20(sp)
100098f4:	9429883a 	add	r20,r18,r16
100098f8:	b4404f2e 	bgeu	r22,r17,10009a38 <__multiply+0x214>
100098fc:	d8c00017 	ldw	r3,0(sp)
10009900:	1c800017 	ldw	r18,0(r3)
10009904:	947fffcc 	andi	r17,r18,65535
10009908:	88001e26 	beq	r17,zero,10009984 <__multiply+0x160>
1000990c:	dd800117 	ldw	r22,4(sp)
10009910:	dd400417 	ldw	r21,16(sp)
10009914:	0027883a 	mov	r19,zero
10009918:	ac800017 	ldw	r18,0(r21)
1000991c:	b4000017 	ldw	r16,0(r22)
10009920:	880b883a 	mov	r5,r17
10009924:	913fffcc 	andi	r4,r18,65535
10009928:	0000fd00 	call	10000fd0 <__mulsi3>
1000992c:	9008d43a 	srli	r4,r18,16
10009930:	84bfffcc 	andi	r18,r16,65535
10009934:	1485883a 	add	r2,r2,r18
10009938:	14e5883a 	add	r18,r2,r19
1000993c:	8020d43a 	srli	r16,r16,16
10009940:	9026d43a 	srli	r19,r18,16
10009944:	880b883a 	mov	r5,r17
10009948:	0000fd00 	call	10000fd0 <__mulsi3>
1000994c:	1405883a 	add	r2,r2,r16
10009950:	14e1883a 	add	r16,r2,r19
10009954:	90ffffcc 	andi	r3,r18,65535
10009958:	8024943a 	slli	r18,r16,16
1000995c:	ad400104 	addi	r21,r21,4
10009960:	b005883a 	mov	r2,r22
10009964:	90c6b03a 	or	r3,r18,r3
10009968:	b0c00015 	stw	r3,0(r22)
1000996c:	8026d43a 	srli	r19,r16,16
10009970:	b5800104 	addi	r22,r22,4
10009974:	ad3fe836 	bltu	r21,r20,10009918 <__alt_data_end+0xf8009918>
10009978:	d8c00017 	ldw	r3,0(sp)
1000997c:	14c00115 	stw	r19,4(r2)
10009980:	1c800017 	ldw	r18,0(r3)
10009984:	9024d43a 	srli	r18,r18,16
10009988:	90002226 	beq	r18,zero,10009a14 <__multiply+0x1f0>
1000998c:	d8c00117 	ldw	r3,4(sp)
10009990:	dd800417 	ldw	r22,16(sp)
10009994:	002f883a 	mov	r23,zero
10009998:	1f000017 	ldw	fp,0(r3)
1000999c:	1823883a 	mov	r17,r3
100099a0:	182b883a 	mov	r21,r3
100099a4:	e021883a 	mov	r16,fp
100099a8:	00000106 	br	100099b0 <__multiply+0x18c>
100099ac:	982b883a 	mov	r21,r19
100099b0:	b100000b 	ldhu	r4,0(r22)
100099b4:	8020d43a 	srli	r16,r16,16
100099b8:	900b883a 	mov	r5,r18
100099bc:	0000fd00 	call	10000fd0 <__mulsi3>
100099c0:	1405883a 	add	r2,r2,r16
100099c4:	15ef883a 	add	r23,r2,r23
100099c8:	b804943a 	slli	r2,r23,16
100099cc:	e0ffffcc 	andi	r3,fp,65535
100099d0:	8c400104 	addi	r17,r17,4
100099d4:	10c6b03a 	or	r3,r2,r3
100099d8:	88ffff15 	stw	r3,-4(r17)
100099dc:	b5800104 	addi	r22,r22,4
100099e0:	b13fff17 	ldw	r4,-4(r22)
100099e4:	acc00104 	addi	r19,r21,4
100099e8:	900b883a 	mov	r5,r18
100099ec:	2008d43a 	srli	r4,r4,16
100099f0:	9c000017 	ldw	r16,0(r19)
100099f4:	0000fd00 	call	10000fd0 <__mulsi3>
100099f8:	b806d43a 	srli	r3,r23,16
100099fc:	813fffcc 	andi	r4,r16,65535
10009a00:	1105883a 	add	r2,r2,r4
10009a04:	10f9883a 	add	fp,r2,r3
10009a08:	e02ed43a 	srli	r23,fp,16
10009a0c:	b53fe736 	bltu	r22,r20,100099ac <__alt_data_end+0xf80099ac>
10009a10:	af000115 	stw	fp,4(r21)
10009a14:	d8c00017 	ldw	r3,0(sp)
10009a18:	d9000517 	ldw	r4,20(sp)
10009a1c:	18c00104 	addi	r3,r3,4
10009a20:	d8c00015 	stw	r3,0(sp)
10009a24:	d8c00117 	ldw	r3,4(sp)
10009a28:	18c00104 	addi	r3,r3,4
10009a2c:	d8c00115 	stw	r3,4(sp)
10009a30:	d8c00017 	ldw	r3,0(sp)
10009a34:	193fb136 	bltu	r3,r4,100098fc <__alt_data_end+0xf80098fc>
10009a38:	d8c00217 	ldw	r3,8(sp)
10009a3c:	00c00c0e 	bge	zero,r3,10009a70 <__multiply+0x24c>
10009a40:	d8c00317 	ldw	r3,12(sp)
10009a44:	18bfff17 	ldw	r2,-4(r3)
10009a48:	1d7fff04 	addi	r21,r3,-4
10009a4c:	10000326 	beq	r2,zero,10009a5c <__multiply+0x238>
10009a50:	00000706 	br	10009a70 <__multiply+0x24c>
10009a54:	a8800017 	ldw	r2,0(r21)
10009a58:	1000051e 	bne	r2,zero,10009a70 <__multiply+0x24c>
10009a5c:	d8c00217 	ldw	r3,8(sp)
10009a60:	ad7fff04 	addi	r21,r21,-4
10009a64:	18ffffc4 	addi	r3,r3,-1
10009a68:	d8c00215 	stw	r3,8(sp)
10009a6c:	183ff91e 	bne	r3,zero,10009a54 <__alt_data_end+0xf8009a54>
10009a70:	d8c00617 	ldw	r3,24(sp)
10009a74:	d9000217 	ldw	r4,8(sp)
10009a78:	1805883a 	mov	r2,r3
10009a7c:	19000415 	stw	r4,16(r3)
10009a80:	dfc01017 	ldw	ra,64(sp)
10009a84:	df000f17 	ldw	fp,60(sp)
10009a88:	ddc00e17 	ldw	r23,56(sp)
10009a8c:	dd800d17 	ldw	r22,52(sp)
10009a90:	dd400c17 	ldw	r21,48(sp)
10009a94:	dd000b17 	ldw	r20,44(sp)
10009a98:	dcc00a17 	ldw	r19,40(sp)
10009a9c:	dc800917 	ldw	r18,36(sp)
10009aa0:	dc400817 	ldw	r17,32(sp)
10009aa4:	dc000717 	ldw	r16,28(sp)
10009aa8:	dec01104 	addi	sp,sp,68
10009aac:	f800283a 	ret

10009ab0 <__pow5mult>:
10009ab0:	defffa04 	addi	sp,sp,-24
10009ab4:	dcc00315 	stw	r19,12(sp)
10009ab8:	dc000015 	stw	r16,0(sp)
10009abc:	dfc00515 	stw	ra,20(sp)
10009ac0:	dd000415 	stw	r20,16(sp)
10009ac4:	dc800215 	stw	r18,8(sp)
10009ac8:	dc400115 	stw	r17,4(sp)
10009acc:	308000cc 	andi	r2,r6,3
10009ad0:	3021883a 	mov	r16,r6
10009ad4:	2027883a 	mov	r19,r4
10009ad8:	10002f1e 	bne	r2,zero,10009b98 <__pow5mult+0xe8>
10009adc:	2825883a 	mov	r18,r5
10009ae0:	8021d0ba 	srai	r16,r16,2
10009ae4:	80001a26 	beq	r16,zero,10009b50 <__pow5mult+0xa0>
10009ae8:	9c401217 	ldw	r17,72(r19)
10009aec:	8800061e 	bne	r17,zero,10009b08 <__pow5mult+0x58>
10009af0:	00003406 	br	10009bc4 <__pow5mult+0x114>
10009af4:	8021d07a 	srai	r16,r16,1
10009af8:	80001526 	beq	r16,zero,10009b50 <__pow5mult+0xa0>
10009afc:	88800017 	ldw	r2,0(r17)
10009b00:	10001c26 	beq	r2,zero,10009b74 <__pow5mult+0xc4>
10009b04:	1023883a 	mov	r17,r2
10009b08:	8080004c 	andi	r2,r16,1
10009b0c:	103ff926 	beq	r2,zero,10009af4 <__alt_data_end+0xf8009af4>
10009b10:	880d883a 	mov	r6,r17
10009b14:	900b883a 	mov	r5,r18
10009b18:	9809883a 	mov	r4,r19
10009b1c:	00098240 	call	10009824 <__multiply>
10009b20:	90001b26 	beq	r18,zero,10009b90 <__pow5mult+0xe0>
10009b24:	91000117 	ldw	r4,4(r18)
10009b28:	98c01317 	ldw	r3,76(r19)
10009b2c:	8021d07a 	srai	r16,r16,1
10009b30:	2109883a 	add	r4,r4,r4
10009b34:	2109883a 	add	r4,r4,r4
10009b38:	1907883a 	add	r3,r3,r4
10009b3c:	19000017 	ldw	r4,0(r3)
10009b40:	91000015 	stw	r4,0(r18)
10009b44:	1c800015 	stw	r18,0(r3)
10009b48:	1025883a 	mov	r18,r2
10009b4c:	803feb1e 	bne	r16,zero,10009afc <__alt_data_end+0xf8009afc>
10009b50:	9005883a 	mov	r2,r18
10009b54:	dfc00517 	ldw	ra,20(sp)
10009b58:	dd000417 	ldw	r20,16(sp)
10009b5c:	dcc00317 	ldw	r19,12(sp)
10009b60:	dc800217 	ldw	r18,8(sp)
10009b64:	dc400117 	ldw	r17,4(sp)
10009b68:	dc000017 	ldw	r16,0(sp)
10009b6c:	dec00604 	addi	sp,sp,24
10009b70:	f800283a 	ret
10009b74:	880d883a 	mov	r6,r17
10009b78:	880b883a 	mov	r5,r17
10009b7c:	9809883a 	mov	r4,r19
10009b80:	00098240 	call	10009824 <__multiply>
10009b84:	88800015 	stw	r2,0(r17)
10009b88:	10000015 	stw	zero,0(r2)
10009b8c:	003fdd06 	br	10009b04 <__alt_data_end+0xf8009b04>
10009b90:	1025883a 	mov	r18,r2
10009b94:	003fd706 	br	10009af4 <__alt_data_end+0xf8009af4>
10009b98:	10bfffc4 	addi	r2,r2,-1
10009b9c:	1085883a 	add	r2,r2,r2
10009ba0:	00c40074 	movhi	r3,4097
10009ba4:	18d06a04 	addi	r3,r3,16808
10009ba8:	1085883a 	add	r2,r2,r2
10009bac:	1885883a 	add	r2,r3,r2
10009bb0:	11800017 	ldw	r6,0(r2)
10009bb4:	000f883a 	mov	r7,zero
10009bb8:	00094840 	call	10009484 <__multadd>
10009bbc:	1025883a 	mov	r18,r2
10009bc0:	003fc706 	br	10009ae0 <__alt_data_end+0xf8009ae0>
10009bc4:	05000044 	movi	r20,1
10009bc8:	a00b883a 	mov	r5,r20
10009bcc:	9809883a 	mov	r4,r19
10009bd0:	00093b40 	call	100093b4 <_Balloc>
10009bd4:	1023883a 	mov	r17,r2
10009bd8:	00809c44 	movi	r2,625
10009bdc:	88800515 	stw	r2,20(r17)
10009be0:	8d000415 	stw	r20,16(r17)
10009be4:	9c401215 	stw	r17,72(r19)
10009be8:	88000015 	stw	zero,0(r17)
10009bec:	003fc606 	br	10009b08 <__alt_data_end+0xf8009b08>

10009bf0 <__lshift>:
10009bf0:	defff904 	addi	sp,sp,-28
10009bf4:	dd400515 	stw	r21,20(sp)
10009bf8:	dcc00315 	stw	r19,12(sp)
10009bfc:	302bd17a 	srai	r21,r6,5
10009c00:	2cc00417 	ldw	r19,16(r5)
10009c04:	28800217 	ldw	r2,8(r5)
10009c08:	dd000415 	stw	r20,16(sp)
10009c0c:	ace7883a 	add	r19,r21,r19
10009c10:	dc800215 	stw	r18,8(sp)
10009c14:	dc400115 	stw	r17,4(sp)
10009c18:	dc000015 	stw	r16,0(sp)
10009c1c:	dfc00615 	stw	ra,24(sp)
10009c20:	9c000044 	addi	r16,r19,1
10009c24:	2823883a 	mov	r17,r5
10009c28:	3029883a 	mov	r20,r6
10009c2c:	2025883a 	mov	r18,r4
10009c30:	29400117 	ldw	r5,4(r5)
10009c34:	1400030e 	bge	r2,r16,10009c44 <__lshift+0x54>
10009c38:	1085883a 	add	r2,r2,r2
10009c3c:	29400044 	addi	r5,r5,1
10009c40:	143ffd16 	blt	r2,r16,10009c38 <__alt_data_end+0xf8009c38>
10009c44:	9009883a 	mov	r4,r18
10009c48:	00093b40 	call	100093b4 <_Balloc>
10009c4c:	10c00504 	addi	r3,r2,20
10009c50:	0540070e 	bge	zero,r21,10009c70 <__lshift+0x80>
10009c54:	ad6b883a 	add	r21,r21,r21
10009c58:	ad6b883a 	add	r21,r21,r21
10009c5c:	1809883a 	mov	r4,r3
10009c60:	1d47883a 	add	r3,r3,r21
10009c64:	20000015 	stw	zero,0(r4)
10009c68:	21000104 	addi	r4,r4,4
10009c6c:	193ffd1e 	bne	r3,r4,10009c64 <__alt_data_end+0xf8009c64>
10009c70:	8a000417 	ldw	r8,16(r17)
10009c74:	89000504 	addi	r4,r17,20
10009c78:	a18007cc 	andi	r6,r20,31
10009c7c:	4211883a 	add	r8,r8,r8
10009c80:	4211883a 	add	r8,r8,r8
10009c84:	2211883a 	add	r8,r4,r8
10009c88:	30002326 	beq	r6,zero,10009d18 <__lshift+0x128>
10009c8c:	02400804 	movi	r9,32
10009c90:	4993c83a 	sub	r9,r9,r6
10009c94:	000b883a 	mov	r5,zero
10009c98:	21c00017 	ldw	r7,0(r4)
10009c9c:	1815883a 	mov	r10,r3
10009ca0:	18c00104 	addi	r3,r3,4
10009ca4:	398e983a 	sll	r7,r7,r6
10009ca8:	21000104 	addi	r4,r4,4
10009cac:	394ab03a 	or	r5,r7,r5
10009cb0:	197fff15 	stw	r5,-4(r3)
10009cb4:	217fff17 	ldw	r5,-4(r4)
10009cb8:	2a4ad83a 	srl	r5,r5,r9
10009cbc:	223ff636 	bltu	r4,r8,10009c98 <__alt_data_end+0xf8009c98>
10009cc0:	51400115 	stw	r5,4(r10)
10009cc4:	28001a1e 	bne	r5,zero,10009d30 <__lshift+0x140>
10009cc8:	843fffc4 	addi	r16,r16,-1
10009ccc:	14000415 	stw	r16,16(r2)
10009cd0:	88000826 	beq	r17,zero,10009cf4 <__lshift+0x104>
10009cd4:	89000117 	ldw	r4,4(r17)
10009cd8:	90c01317 	ldw	r3,76(r18)
10009cdc:	2109883a 	add	r4,r4,r4
10009ce0:	2109883a 	add	r4,r4,r4
10009ce4:	1907883a 	add	r3,r3,r4
10009ce8:	19000017 	ldw	r4,0(r3)
10009cec:	89000015 	stw	r4,0(r17)
10009cf0:	1c400015 	stw	r17,0(r3)
10009cf4:	dfc00617 	ldw	ra,24(sp)
10009cf8:	dd400517 	ldw	r21,20(sp)
10009cfc:	dd000417 	ldw	r20,16(sp)
10009d00:	dcc00317 	ldw	r19,12(sp)
10009d04:	dc800217 	ldw	r18,8(sp)
10009d08:	dc400117 	ldw	r17,4(sp)
10009d0c:	dc000017 	ldw	r16,0(sp)
10009d10:	dec00704 	addi	sp,sp,28
10009d14:	f800283a 	ret
10009d18:	21400017 	ldw	r5,0(r4)
10009d1c:	18c00104 	addi	r3,r3,4
10009d20:	21000104 	addi	r4,r4,4
10009d24:	197fff15 	stw	r5,-4(r3)
10009d28:	223ffb36 	bltu	r4,r8,10009d18 <__alt_data_end+0xf8009d18>
10009d2c:	003fe606 	br	10009cc8 <__alt_data_end+0xf8009cc8>
10009d30:	9c000084 	addi	r16,r19,2
10009d34:	003fe406 	br	10009cc8 <__alt_data_end+0xf8009cc8>

10009d38 <__mcmp>:
10009d38:	20800417 	ldw	r2,16(r4)
10009d3c:	28c00417 	ldw	r3,16(r5)
10009d40:	10c5c83a 	sub	r2,r2,r3
10009d44:	1000111e 	bne	r2,zero,10009d8c <__mcmp+0x54>
10009d48:	18c7883a 	add	r3,r3,r3
10009d4c:	18c7883a 	add	r3,r3,r3
10009d50:	21000504 	addi	r4,r4,20
10009d54:	29400504 	addi	r5,r5,20
10009d58:	20c5883a 	add	r2,r4,r3
10009d5c:	28cb883a 	add	r5,r5,r3
10009d60:	00000106 	br	10009d68 <__mcmp+0x30>
10009d64:	20800a2e 	bgeu	r4,r2,10009d90 <__mcmp+0x58>
10009d68:	10bfff04 	addi	r2,r2,-4
10009d6c:	297fff04 	addi	r5,r5,-4
10009d70:	11800017 	ldw	r6,0(r2)
10009d74:	28c00017 	ldw	r3,0(r5)
10009d78:	30fffa26 	beq	r6,r3,10009d64 <__alt_data_end+0xf8009d64>
10009d7c:	30c00236 	bltu	r6,r3,10009d88 <__mcmp+0x50>
10009d80:	00800044 	movi	r2,1
10009d84:	f800283a 	ret
10009d88:	00bfffc4 	movi	r2,-1
10009d8c:	f800283a 	ret
10009d90:	0005883a 	mov	r2,zero
10009d94:	f800283a 	ret

10009d98 <__mdiff>:
10009d98:	28c00417 	ldw	r3,16(r5)
10009d9c:	30800417 	ldw	r2,16(r6)
10009da0:	defffa04 	addi	sp,sp,-24
10009da4:	dcc00315 	stw	r19,12(sp)
10009da8:	dc800215 	stw	r18,8(sp)
10009dac:	dfc00515 	stw	ra,20(sp)
10009db0:	dd000415 	stw	r20,16(sp)
10009db4:	dc400115 	stw	r17,4(sp)
10009db8:	dc000015 	stw	r16,0(sp)
10009dbc:	1887c83a 	sub	r3,r3,r2
10009dc0:	2825883a 	mov	r18,r5
10009dc4:	3027883a 	mov	r19,r6
10009dc8:	1800141e 	bne	r3,zero,10009e1c <__mdiff+0x84>
10009dcc:	1085883a 	add	r2,r2,r2
10009dd0:	1085883a 	add	r2,r2,r2
10009dd4:	2a000504 	addi	r8,r5,20
10009dd8:	34000504 	addi	r16,r6,20
10009ddc:	4087883a 	add	r3,r8,r2
10009de0:	8085883a 	add	r2,r16,r2
10009de4:	00000106 	br	10009dec <__mdiff+0x54>
10009de8:	40c0592e 	bgeu	r8,r3,10009f50 <__mdiff+0x1b8>
10009dec:	18ffff04 	addi	r3,r3,-4
10009df0:	10bfff04 	addi	r2,r2,-4
10009df4:	19c00017 	ldw	r7,0(r3)
10009df8:	11400017 	ldw	r5,0(r2)
10009dfc:	397ffa26 	beq	r7,r5,10009de8 <__alt_data_end+0xf8009de8>
10009e00:	3940592e 	bgeu	r7,r5,10009f68 <__mdiff+0x1d0>
10009e04:	9005883a 	mov	r2,r18
10009e08:	4023883a 	mov	r17,r8
10009e0c:	9825883a 	mov	r18,r19
10009e10:	05000044 	movi	r20,1
10009e14:	1027883a 	mov	r19,r2
10009e18:	00000406 	br	10009e2c <__mdiff+0x94>
10009e1c:	18005616 	blt	r3,zero,10009f78 <__mdiff+0x1e0>
10009e20:	34400504 	addi	r17,r6,20
10009e24:	2c000504 	addi	r16,r5,20
10009e28:	0029883a 	mov	r20,zero
10009e2c:	91400117 	ldw	r5,4(r18)
10009e30:	00093b40 	call	100093b4 <_Balloc>
10009e34:	92400417 	ldw	r9,16(r18)
10009e38:	9b000417 	ldw	r12,16(r19)
10009e3c:	12c00504 	addi	r11,r2,20
10009e40:	4a51883a 	add	r8,r9,r9
10009e44:	6319883a 	add	r12,r12,r12
10009e48:	4211883a 	add	r8,r8,r8
10009e4c:	6319883a 	add	r12,r12,r12
10009e50:	15000315 	stw	r20,12(r2)
10009e54:	8211883a 	add	r8,r16,r8
10009e58:	8b19883a 	add	r12,r17,r12
10009e5c:	0007883a 	mov	r3,zero
10009e60:	81400017 	ldw	r5,0(r16)
10009e64:	89c00017 	ldw	r7,0(r17)
10009e68:	59800104 	addi	r6,r11,4
10009e6c:	293fffcc 	andi	r4,r5,65535
10009e70:	20c7883a 	add	r3,r4,r3
10009e74:	393fffcc 	andi	r4,r7,65535
10009e78:	1909c83a 	sub	r4,r3,r4
10009e7c:	280ad43a 	srli	r5,r5,16
10009e80:	380ed43a 	srli	r7,r7,16
10009e84:	2007d43a 	srai	r3,r4,16
10009e88:	213fffcc 	andi	r4,r4,65535
10009e8c:	29cbc83a 	sub	r5,r5,r7
10009e90:	28c7883a 	add	r3,r5,r3
10009e94:	180a943a 	slli	r5,r3,16
10009e98:	8c400104 	addi	r17,r17,4
10009e9c:	84000104 	addi	r16,r16,4
10009ea0:	2908b03a 	or	r4,r5,r4
10009ea4:	59000015 	stw	r4,0(r11)
10009ea8:	1807d43a 	srai	r3,r3,16
10009eac:	3015883a 	mov	r10,r6
10009eb0:	3017883a 	mov	r11,r6
10009eb4:	8b3fea36 	bltu	r17,r12,10009e60 <__alt_data_end+0xf8009e60>
10009eb8:	8200162e 	bgeu	r16,r8,10009f14 <__mdiff+0x17c>
10009ebc:	8017883a 	mov	r11,r16
10009ec0:	59400017 	ldw	r5,0(r11)
10009ec4:	31800104 	addi	r6,r6,4
10009ec8:	5ac00104 	addi	r11,r11,4
10009ecc:	293fffcc 	andi	r4,r5,65535
10009ed0:	20c7883a 	add	r3,r4,r3
10009ed4:	280ed43a 	srli	r7,r5,16
10009ed8:	180bd43a 	srai	r5,r3,16
10009edc:	193fffcc 	andi	r4,r3,65535
10009ee0:	3947883a 	add	r3,r7,r5
10009ee4:	180a943a 	slli	r5,r3,16
10009ee8:	1807d43a 	srai	r3,r3,16
10009eec:	2908b03a 	or	r4,r5,r4
10009ef0:	313fff15 	stw	r4,-4(r6)
10009ef4:	5a3ff236 	bltu	r11,r8,10009ec0 <__alt_data_end+0xf8009ec0>
10009ef8:	0406303a 	nor	r3,zero,r16
10009efc:	1a07883a 	add	r3,r3,r8
10009f00:	1806d0ba 	srli	r3,r3,2
10009f04:	18c00044 	addi	r3,r3,1
10009f08:	18c7883a 	add	r3,r3,r3
10009f0c:	18c7883a 	add	r3,r3,r3
10009f10:	50d5883a 	add	r10,r10,r3
10009f14:	50ffff04 	addi	r3,r10,-4
10009f18:	2000041e 	bne	r4,zero,10009f2c <__mdiff+0x194>
10009f1c:	18ffff04 	addi	r3,r3,-4
10009f20:	19000017 	ldw	r4,0(r3)
10009f24:	4a7fffc4 	addi	r9,r9,-1
10009f28:	203ffc26 	beq	r4,zero,10009f1c <__alt_data_end+0xf8009f1c>
10009f2c:	12400415 	stw	r9,16(r2)
10009f30:	dfc00517 	ldw	ra,20(sp)
10009f34:	dd000417 	ldw	r20,16(sp)
10009f38:	dcc00317 	ldw	r19,12(sp)
10009f3c:	dc800217 	ldw	r18,8(sp)
10009f40:	dc400117 	ldw	r17,4(sp)
10009f44:	dc000017 	ldw	r16,0(sp)
10009f48:	dec00604 	addi	sp,sp,24
10009f4c:	f800283a 	ret
10009f50:	000b883a 	mov	r5,zero
10009f54:	00093b40 	call	100093b4 <_Balloc>
10009f58:	00c00044 	movi	r3,1
10009f5c:	10c00415 	stw	r3,16(r2)
10009f60:	10000515 	stw	zero,20(r2)
10009f64:	003ff206 	br	10009f30 <__alt_data_end+0xf8009f30>
10009f68:	8023883a 	mov	r17,r16
10009f6c:	0029883a 	mov	r20,zero
10009f70:	4021883a 	mov	r16,r8
10009f74:	003fad06 	br	10009e2c <__alt_data_end+0xf8009e2c>
10009f78:	9005883a 	mov	r2,r18
10009f7c:	94400504 	addi	r17,r18,20
10009f80:	9c000504 	addi	r16,r19,20
10009f84:	9825883a 	mov	r18,r19
10009f88:	05000044 	movi	r20,1
10009f8c:	1027883a 	mov	r19,r2
10009f90:	003fa606 	br	10009e2c <__alt_data_end+0xf8009e2c>

10009f94 <__ulp>:
10009f94:	295ffc2c 	andhi	r5,r5,32752
10009f98:	00bf3034 	movhi	r2,64704
10009f9c:	2887883a 	add	r3,r5,r2
10009fa0:	00c0020e 	bge	zero,r3,10009fac <__ulp+0x18>
10009fa4:	0005883a 	mov	r2,zero
10009fa8:	f800283a 	ret
10009fac:	00c7c83a 	sub	r3,zero,r3
10009fb0:	1807d53a 	srai	r3,r3,20
10009fb4:	008004c4 	movi	r2,19
10009fb8:	10c00b0e 	bge	r2,r3,10009fe8 <__ulp+0x54>
10009fbc:	18bffb04 	addi	r2,r3,-20
10009fc0:	01000784 	movi	r4,30
10009fc4:	0007883a 	mov	r3,zero
10009fc8:	20800516 	blt	r4,r2,10009fe0 <__ulp+0x4c>
10009fcc:	010007c4 	movi	r4,31
10009fd0:	2089c83a 	sub	r4,r4,r2
10009fd4:	00800044 	movi	r2,1
10009fd8:	1104983a 	sll	r2,r2,r4
10009fdc:	f800283a 	ret
10009fe0:	00800044 	movi	r2,1
10009fe4:	f800283a 	ret
10009fe8:	01400234 	movhi	r5,8
10009fec:	28c7d83a 	sra	r3,r5,r3
10009ff0:	0005883a 	mov	r2,zero
10009ff4:	f800283a 	ret

10009ff8 <__b2d>:
10009ff8:	defffa04 	addi	sp,sp,-24
10009ffc:	dc000015 	stw	r16,0(sp)
1000a000:	24000417 	ldw	r16,16(r4)
1000a004:	dc400115 	stw	r17,4(sp)
1000a008:	24400504 	addi	r17,r4,20
1000a00c:	8421883a 	add	r16,r16,r16
1000a010:	8421883a 	add	r16,r16,r16
1000a014:	8c21883a 	add	r16,r17,r16
1000a018:	dc800215 	stw	r18,8(sp)
1000a01c:	84bfff17 	ldw	r18,-4(r16)
1000a020:	dd000415 	stw	r20,16(sp)
1000a024:	dcc00315 	stw	r19,12(sp)
1000a028:	9009883a 	mov	r4,r18
1000a02c:	2829883a 	mov	r20,r5
1000a030:	dfc00515 	stw	ra,20(sp)
1000a034:	00096d00 	call	100096d0 <__hi0bits>
1000a038:	00c00804 	movi	r3,32
1000a03c:	1889c83a 	sub	r4,r3,r2
1000a040:	a1000015 	stw	r4,0(r20)
1000a044:	01000284 	movi	r4,10
1000a048:	84ffff04 	addi	r19,r16,-4
1000a04c:	20801216 	blt	r4,r2,1000a098 <__b2d+0xa0>
1000a050:	018002c4 	movi	r6,11
1000a054:	308dc83a 	sub	r6,r6,r2
1000a058:	9186d83a 	srl	r3,r18,r6
1000a05c:	18cffc34 	orhi	r3,r3,16368
1000a060:	8cc0212e 	bgeu	r17,r19,1000a0e8 <__b2d+0xf0>
1000a064:	813ffe17 	ldw	r4,-8(r16)
1000a068:	218cd83a 	srl	r6,r4,r6
1000a06c:	10800544 	addi	r2,r2,21
1000a070:	9084983a 	sll	r2,r18,r2
1000a074:	1184b03a 	or	r2,r2,r6
1000a078:	dfc00517 	ldw	ra,20(sp)
1000a07c:	dd000417 	ldw	r20,16(sp)
1000a080:	dcc00317 	ldw	r19,12(sp)
1000a084:	dc800217 	ldw	r18,8(sp)
1000a088:	dc400117 	ldw	r17,4(sp)
1000a08c:	dc000017 	ldw	r16,0(sp)
1000a090:	dec00604 	addi	sp,sp,24
1000a094:	f800283a 	ret
1000a098:	8cc00f2e 	bgeu	r17,r19,1000a0d8 <__b2d+0xe0>
1000a09c:	117ffd44 	addi	r5,r2,-11
1000a0a0:	80bffe17 	ldw	r2,-8(r16)
1000a0a4:	28000e26 	beq	r5,zero,1000a0e0 <__b2d+0xe8>
1000a0a8:	1949c83a 	sub	r4,r3,r5
1000a0ac:	9164983a 	sll	r18,r18,r5
1000a0b0:	1106d83a 	srl	r3,r2,r4
1000a0b4:	81bffe04 	addi	r6,r16,-8
1000a0b8:	948ffc34 	orhi	r18,r18,16368
1000a0bc:	90c6b03a 	or	r3,r18,r3
1000a0c0:	89800e2e 	bgeu	r17,r6,1000a0fc <__b2d+0x104>
1000a0c4:	81bffd17 	ldw	r6,-12(r16)
1000a0c8:	1144983a 	sll	r2,r2,r5
1000a0cc:	310ad83a 	srl	r5,r6,r4
1000a0d0:	2884b03a 	or	r2,r5,r2
1000a0d4:	003fe806 	br	1000a078 <__alt_data_end+0xf800a078>
1000a0d8:	10bffd44 	addi	r2,r2,-11
1000a0dc:	1000041e 	bne	r2,zero,1000a0f0 <__b2d+0xf8>
1000a0e0:	90cffc34 	orhi	r3,r18,16368
1000a0e4:	003fe406 	br	1000a078 <__alt_data_end+0xf800a078>
1000a0e8:	000d883a 	mov	r6,zero
1000a0ec:	003fdf06 	br	1000a06c <__alt_data_end+0xf800a06c>
1000a0f0:	90a4983a 	sll	r18,r18,r2
1000a0f4:	0005883a 	mov	r2,zero
1000a0f8:	003ff906 	br	1000a0e0 <__alt_data_end+0xf800a0e0>
1000a0fc:	1144983a 	sll	r2,r2,r5
1000a100:	003fdd06 	br	1000a078 <__alt_data_end+0xf800a078>

1000a104 <__d2b>:
1000a104:	defff804 	addi	sp,sp,-32
1000a108:	dc000215 	stw	r16,8(sp)
1000a10c:	3021883a 	mov	r16,r6
1000a110:	dc400315 	stw	r17,12(sp)
1000a114:	8022907a 	slli	r17,r16,1
1000a118:	dd000615 	stw	r20,24(sp)
1000a11c:	2829883a 	mov	r20,r5
1000a120:	01400044 	movi	r5,1
1000a124:	dcc00515 	stw	r19,20(sp)
1000a128:	dc800415 	stw	r18,16(sp)
1000a12c:	dfc00715 	stw	ra,28(sp)
1000a130:	3825883a 	mov	r18,r7
1000a134:	8822d57a 	srli	r17,r17,21
1000a138:	00093b40 	call	100093b4 <_Balloc>
1000a13c:	1027883a 	mov	r19,r2
1000a140:	00800434 	movhi	r2,16
1000a144:	10bfffc4 	addi	r2,r2,-1
1000a148:	808c703a 	and	r6,r16,r2
1000a14c:	88000126 	beq	r17,zero,1000a154 <__d2b+0x50>
1000a150:	31800434 	orhi	r6,r6,16
1000a154:	d9800015 	stw	r6,0(sp)
1000a158:	a0002426 	beq	r20,zero,1000a1ec <__d2b+0xe8>
1000a15c:	d9000104 	addi	r4,sp,4
1000a160:	dd000115 	stw	r20,4(sp)
1000a164:	00097380 	call	10009738 <__lo0bits>
1000a168:	d8c00017 	ldw	r3,0(sp)
1000a16c:	10002f1e 	bne	r2,zero,1000a22c <__d2b+0x128>
1000a170:	d9000117 	ldw	r4,4(sp)
1000a174:	99000515 	stw	r4,20(r19)
1000a178:	1821003a 	cmpeq	r16,r3,zero
1000a17c:	01000084 	movi	r4,2
1000a180:	2421c83a 	sub	r16,r4,r16
1000a184:	98c00615 	stw	r3,24(r19)
1000a188:	9c000415 	stw	r16,16(r19)
1000a18c:	88001f1e 	bne	r17,zero,1000a20c <__d2b+0x108>
1000a190:	10bef384 	addi	r2,r2,-1074
1000a194:	90800015 	stw	r2,0(r18)
1000a198:	00900034 	movhi	r2,16384
1000a19c:	10bfffc4 	addi	r2,r2,-1
1000a1a0:	8085883a 	add	r2,r16,r2
1000a1a4:	1085883a 	add	r2,r2,r2
1000a1a8:	1085883a 	add	r2,r2,r2
1000a1ac:	9885883a 	add	r2,r19,r2
1000a1b0:	11000517 	ldw	r4,20(r2)
1000a1b4:	8020917a 	slli	r16,r16,5
1000a1b8:	00096d00 	call	100096d0 <__hi0bits>
1000a1bc:	d8c00817 	ldw	r3,32(sp)
1000a1c0:	8085c83a 	sub	r2,r16,r2
1000a1c4:	18800015 	stw	r2,0(r3)
1000a1c8:	9805883a 	mov	r2,r19
1000a1cc:	dfc00717 	ldw	ra,28(sp)
1000a1d0:	dd000617 	ldw	r20,24(sp)
1000a1d4:	dcc00517 	ldw	r19,20(sp)
1000a1d8:	dc800417 	ldw	r18,16(sp)
1000a1dc:	dc400317 	ldw	r17,12(sp)
1000a1e0:	dc000217 	ldw	r16,8(sp)
1000a1e4:	dec00804 	addi	sp,sp,32
1000a1e8:	f800283a 	ret
1000a1ec:	d809883a 	mov	r4,sp
1000a1f0:	00097380 	call	10009738 <__lo0bits>
1000a1f4:	d8c00017 	ldw	r3,0(sp)
1000a1f8:	04000044 	movi	r16,1
1000a1fc:	9c000415 	stw	r16,16(r19)
1000a200:	98c00515 	stw	r3,20(r19)
1000a204:	10800804 	addi	r2,r2,32
1000a208:	883fe126 	beq	r17,zero,1000a190 <__alt_data_end+0xf800a190>
1000a20c:	00c00d44 	movi	r3,53
1000a210:	8c7ef344 	addi	r17,r17,-1075
1000a214:	88a3883a 	add	r17,r17,r2
1000a218:	1885c83a 	sub	r2,r3,r2
1000a21c:	d8c00817 	ldw	r3,32(sp)
1000a220:	94400015 	stw	r17,0(r18)
1000a224:	18800015 	stw	r2,0(r3)
1000a228:	003fe706 	br	1000a1c8 <__alt_data_end+0xf800a1c8>
1000a22c:	01000804 	movi	r4,32
1000a230:	2089c83a 	sub	r4,r4,r2
1000a234:	1908983a 	sll	r4,r3,r4
1000a238:	d9400117 	ldw	r5,4(sp)
1000a23c:	1886d83a 	srl	r3,r3,r2
1000a240:	2148b03a 	or	r4,r4,r5
1000a244:	99000515 	stw	r4,20(r19)
1000a248:	d8c00015 	stw	r3,0(sp)
1000a24c:	003fca06 	br	1000a178 <__alt_data_end+0xf800a178>

1000a250 <__ratio>:
1000a250:	defff904 	addi	sp,sp,-28
1000a254:	dc400315 	stw	r17,12(sp)
1000a258:	2823883a 	mov	r17,r5
1000a25c:	d9400104 	addi	r5,sp,4
1000a260:	dfc00615 	stw	ra,24(sp)
1000a264:	dcc00515 	stw	r19,20(sp)
1000a268:	dc800415 	stw	r18,16(sp)
1000a26c:	2027883a 	mov	r19,r4
1000a270:	dc000215 	stw	r16,8(sp)
1000a274:	0009ff80 	call	10009ff8 <__b2d>
1000a278:	d80b883a 	mov	r5,sp
1000a27c:	8809883a 	mov	r4,r17
1000a280:	1025883a 	mov	r18,r2
1000a284:	1821883a 	mov	r16,r3
1000a288:	0009ff80 	call	10009ff8 <__b2d>
1000a28c:	8a000417 	ldw	r8,16(r17)
1000a290:	99000417 	ldw	r4,16(r19)
1000a294:	d9400117 	ldw	r5,4(sp)
1000a298:	2209c83a 	sub	r4,r4,r8
1000a29c:	2010917a 	slli	r8,r4,5
1000a2a0:	d9000017 	ldw	r4,0(sp)
1000a2a4:	2909c83a 	sub	r4,r5,r4
1000a2a8:	4109883a 	add	r4,r8,r4
1000a2ac:	01000e0e 	bge	zero,r4,1000a2e8 <__ratio+0x98>
1000a2b0:	2008953a 	slli	r4,r4,20
1000a2b4:	2421883a 	add	r16,r4,r16
1000a2b8:	100d883a 	mov	r6,r2
1000a2bc:	180f883a 	mov	r7,r3
1000a2c0:	9009883a 	mov	r4,r18
1000a2c4:	800b883a 	mov	r5,r16
1000a2c8:	000f7dc0 	call	1000f7dc <__divdf3>
1000a2cc:	dfc00617 	ldw	ra,24(sp)
1000a2d0:	dcc00517 	ldw	r19,20(sp)
1000a2d4:	dc800417 	ldw	r18,16(sp)
1000a2d8:	dc400317 	ldw	r17,12(sp)
1000a2dc:	dc000217 	ldw	r16,8(sp)
1000a2e0:	dec00704 	addi	sp,sp,28
1000a2e4:	f800283a 	ret
1000a2e8:	2008953a 	slli	r4,r4,20
1000a2ec:	1907c83a 	sub	r3,r3,r4
1000a2f0:	003ff106 	br	1000a2b8 <__alt_data_end+0xf800a2b8>

1000a2f4 <_mprec_log10>:
1000a2f4:	defffe04 	addi	sp,sp,-8
1000a2f8:	dc000015 	stw	r16,0(sp)
1000a2fc:	dfc00115 	stw	ra,4(sp)
1000a300:	008005c4 	movi	r2,23
1000a304:	2021883a 	mov	r16,r4
1000a308:	11000d0e 	bge	r2,r4,1000a340 <_mprec_log10+0x4c>
1000a30c:	0005883a 	mov	r2,zero
1000a310:	00cffc34 	movhi	r3,16368
1000a314:	843fffc4 	addi	r16,r16,-1
1000a318:	000d883a 	mov	r6,zero
1000a31c:	01d00934 	movhi	r7,16420
1000a320:	1009883a 	mov	r4,r2
1000a324:	180b883a 	mov	r5,r3
1000a328:	00104040 	call	10010404 <__muldf3>
1000a32c:	803ff91e 	bne	r16,zero,1000a314 <__alt_data_end+0xf800a314>
1000a330:	dfc00117 	ldw	ra,4(sp)
1000a334:	dc000017 	ldw	r16,0(sp)
1000a338:	dec00204 	addi	sp,sp,8
1000a33c:	f800283a 	ret
1000a340:	202090fa 	slli	r16,r4,3
1000a344:	00840074 	movhi	r2,4097
1000a348:	10908104 	addi	r2,r2,16900
1000a34c:	1421883a 	add	r16,r2,r16
1000a350:	80800017 	ldw	r2,0(r16)
1000a354:	80c00117 	ldw	r3,4(r16)
1000a358:	dfc00117 	ldw	ra,4(sp)
1000a35c:	dc000017 	ldw	r16,0(sp)
1000a360:	dec00204 	addi	sp,sp,8
1000a364:	f800283a 	ret

1000a368 <__copybits>:
1000a368:	297fffc4 	addi	r5,r5,-1
1000a36c:	280fd17a 	srai	r7,r5,5
1000a370:	30c00417 	ldw	r3,16(r6)
1000a374:	30800504 	addi	r2,r6,20
1000a378:	39c00044 	addi	r7,r7,1
1000a37c:	18c7883a 	add	r3,r3,r3
1000a380:	39cf883a 	add	r7,r7,r7
1000a384:	18c7883a 	add	r3,r3,r3
1000a388:	39cf883a 	add	r7,r7,r7
1000a38c:	10c7883a 	add	r3,r2,r3
1000a390:	21cf883a 	add	r7,r4,r7
1000a394:	10c00d2e 	bgeu	r2,r3,1000a3cc <__copybits+0x64>
1000a398:	200b883a 	mov	r5,r4
1000a39c:	12000017 	ldw	r8,0(r2)
1000a3a0:	29400104 	addi	r5,r5,4
1000a3a4:	10800104 	addi	r2,r2,4
1000a3a8:	2a3fff15 	stw	r8,-4(r5)
1000a3ac:	10fffb36 	bltu	r2,r3,1000a39c <__alt_data_end+0xf800a39c>
1000a3b0:	1985c83a 	sub	r2,r3,r6
1000a3b4:	10bffac4 	addi	r2,r2,-21
1000a3b8:	1004d0ba 	srli	r2,r2,2
1000a3bc:	10800044 	addi	r2,r2,1
1000a3c0:	1085883a 	add	r2,r2,r2
1000a3c4:	1085883a 	add	r2,r2,r2
1000a3c8:	2089883a 	add	r4,r4,r2
1000a3cc:	21c0032e 	bgeu	r4,r7,1000a3dc <__copybits+0x74>
1000a3d0:	20000015 	stw	zero,0(r4)
1000a3d4:	21000104 	addi	r4,r4,4
1000a3d8:	21fffd36 	bltu	r4,r7,1000a3d0 <__alt_data_end+0xf800a3d0>
1000a3dc:	f800283a 	ret

1000a3e0 <__any_on>:
1000a3e0:	20c00417 	ldw	r3,16(r4)
1000a3e4:	2805d17a 	srai	r2,r5,5
1000a3e8:	21000504 	addi	r4,r4,20
1000a3ec:	18800d0e 	bge	r3,r2,1000a424 <__any_on+0x44>
1000a3f0:	18c7883a 	add	r3,r3,r3
1000a3f4:	18c7883a 	add	r3,r3,r3
1000a3f8:	20c7883a 	add	r3,r4,r3
1000a3fc:	20c0192e 	bgeu	r4,r3,1000a464 <__any_on+0x84>
1000a400:	18bfff17 	ldw	r2,-4(r3)
1000a404:	18ffff04 	addi	r3,r3,-4
1000a408:	1000041e 	bne	r2,zero,1000a41c <__any_on+0x3c>
1000a40c:	20c0142e 	bgeu	r4,r3,1000a460 <__any_on+0x80>
1000a410:	18ffff04 	addi	r3,r3,-4
1000a414:	19400017 	ldw	r5,0(r3)
1000a418:	283ffc26 	beq	r5,zero,1000a40c <__alt_data_end+0xf800a40c>
1000a41c:	00800044 	movi	r2,1
1000a420:	f800283a 	ret
1000a424:	10c00a0e 	bge	r2,r3,1000a450 <__any_on+0x70>
1000a428:	1085883a 	add	r2,r2,r2
1000a42c:	1085883a 	add	r2,r2,r2
1000a430:	294007cc 	andi	r5,r5,31
1000a434:	2087883a 	add	r3,r4,r2
1000a438:	283ff026 	beq	r5,zero,1000a3fc <__alt_data_end+0xf800a3fc>
1000a43c:	19800017 	ldw	r6,0(r3)
1000a440:	3144d83a 	srl	r2,r6,r5
1000a444:	114a983a 	sll	r5,r2,r5
1000a448:	317ff41e 	bne	r6,r5,1000a41c <__alt_data_end+0xf800a41c>
1000a44c:	003feb06 	br	1000a3fc <__alt_data_end+0xf800a3fc>
1000a450:	1085883a 	add	r2,r2,r2
1000a454:	1085883a 	add	r2,r2,r2
1000a458:	2087883a 	add	r3,r4,r2
1000a45c:	003fe706 	br	1000a3fc <__alt_data_end+0xf800a3fc>
1000a460:	f800283a 	ret
1000a464:	0005883a 	mov	r2,zero
1000a468:	f800283a 	ret

1000a46c <_realloc_r>:
1000a46c:	defff604 	addi	sp,sp,-40
1000a470:	dc800215 	stw	r18,8(sp)
1000a474:	dfc00915 	stw	ra,36(sp)
1000a478:	df000815 	stw	fp,32(sp)
1000a47c:	ddc00715 	stw	r23,28(sp)
1000a480:	dd800615 	stw	r22,24(sp)
1000a484:	dd400515 	stw	r21,20(sp)
1000a488:	dd000415 	stw	r20,16(sp)
1000a48c:	dcc00315 	stw	r19,12(sp)
1000a490:	dc400115 	stw	r17,4(sp)
1000a494:	dc000015 	stw	r16,0(sp)
1000a498:	3025883a 	mov	r18,r6
1000a49c:	2800b726 	beq	r5,zero,1000a77c <_realloc_r+0x310>
1000a4a0:	282b883a 	mov	r21,r5
1000a4a4:	2029883a 	mov	r20,r4
1000a4a8:	0011d700 	call	10011d70 <__malloc_lock>
1000a4ac:	a8bfff17 	ldw	r2,-4(r21)
1000a4b0:	043fff04 	movi	r16,-4
1000a4b4:	90c002c4 	addi	r3,r18,11
1000a4b8:	01000584 	movi	r4,22
1000a4bc:	acfffe04 	addi	r19,r21,-8
1000a4c0:	1420703a 	and	r16,r2,r16
1000a4c4:	20c0332e 	bgeu	r4,r3,1000a594 <_realloc_r+0x128>
1000a4c8:	047ffe04 	movi	r17,-8
1000a4cc:	1c62703a 	and	r17,r3,r17
1000a4d0:	8807883a 	mov	r3,r17
1000a4d4:	88005816 	blt	r17,zero,1000a638 <_realloc_r+0x1cc>
1000a4d8:	8c805736 	bltu	r17,r18,1000a638 <_realloc_r+0x1cc>
1000a4dc:	80c0300e 	bge	r16,r3,1000a5a0 <_realloc_r+0x134>
1000a4e0:	07040074 	movhi	fp,4097
1000a4e4:	e712ef04 	addi	fp,fp,19388
1000a4e8:	e1c00217 	ldw	r7,8(fp)
1000a4ec:	9c09883a 	add	r4,r19,r16
1000a4f0:	22000117 	ldw	r8,4(r4)
1000a4f4:	21c06326 	beq	r4,r7,1000a684 <_realloc_r+0x218>
1000a4f8:	017fff84 	movi	r5,-2
1000a4fc:	414a703a 	and	r5,r8,r5
1000a500:	214b883a 	add	r5,r4,r5
1000a504:	29800117 	ldw	r6,4(r5)
1000a508:	3180004c 	andi	r6,r6,1
1000a50c:	30003f26 	beq	r6,zero,1000a60c <_realloc_r+0x1a0>
1000a510:	1080004c 	andi	r2,r2,1
1000a514:	10008326 	beq	r2,zero,1000a724 <_realloc_r+0x2b8>
1000a518:	900b883a 	mov	r5,r18
1000a51c:	a009883a 	mov	r4,r20
1000a520:	00086f80 	call	100086f8 <_malloc_r>
1000a524:	1025883a 	mov	r18,r2
1000a528:	10011e26 	beq	r2,zero,1000a9a4 <_realloc_r+0x538>
1000a52c:	a93fff17 	ldw	r4,-4(r21)
1000a530:	10fffe04 	addi	r3,r2,-8
1000a534:	00bfff84 	movi	r2,-2
1000a538:	2084703a 	and	r2,r4,r2
1000a53c:	9885883a 	add	r2,r19,r2
1000a540:	1880ee26 	beq	r3,r2,1000a8fc <_realloc_r+0x490>
1000a544:	81bfff04 	addi	r6,r16,-4
1000a548:	00800904 	movi	r2,36
1000a54c:	1180b836 	bltu	r2,r6,1000a830 <_realloc_r+0x3c4>
1000a550:	00c004c4 	movi	r3,19
1000a554:	19809636 	bltu	r3,r6,1000a7b0 <_realloc_r+0x344>
1000a558:	9005883a 	mov	r2,r18
1000a55c:	a807883a 	mov	r3,r21
1000a560:	19000017 	ldw	r4,0(r3)
1000a564:	11000015 	stw	r4,0(r2)
1000a568:	19000117 	ldw	r4,4(r3)
1000a56c:	11000115 	stw	r4,4(r2)
1000a570:	18c00217 	ldw	r3,8(r3)
1000a574:	10c00215 	stw	r3,8(r2)
1000a578:	a80b883a 	mov	r5,r21
1000a57c:	a009883a 	mov	r4,r20
1000a580:	0007b000 	call	10007b00 <_free_r>
1000a584:	a009883a 	mov	r4,r20
1000a588:	0011d940 	call	10011d94 <__malloc_unlock>
1000a58c:	9005883a 	mov	r2,r18
1000a590:	00001206 	br	1000a5dc <_realloc_r+0x170>
1000a594:	00c00404 	movi	r3,16
1000a598:	1823883a 	mov	r17,r3
1000a59c:	003fce06 	br	1000a4d8 <__alt_data_end+0xf800a4d8>
1000a5a0:	a825883a 	mov	r18,r21
1000a5a4:	8445c83a 	sub	r2,r16,r17
1000a5a8:	00c003c4 	movi	r3,15
1000a5ac:	18802636 	bltu	r3,r2,1000a648 <_realloc_r+0x1dc>
1000a5b0:	99800117 	ldw	r6,4(r19)
1000a5b4:	9c07883a 	add	r3,r19,r16
1000a5b8:	3180004c 	andi	r6,r6,1
1000a5bc:	3420b03a 	or	r16,r6,r16
1000a5c0:	9c000115 	stw	r16,4(r19)
1000a5c4:	18800117 	ldw	r2,4(r3)
1000a5c8:	10800054 	ori	r2,r2,1
1000a5cc:	18800115 	stw	r2,4(r3)
1000a5d0:	a009883a 	mov	r4,r20
1000a5d4:	0011d940 	call	10011d94 <__malloc_unlock>
1000a5d8:	9005883a 	mov	r2,r18
1000a5dc:	dfc00917 	ldw	ra,36(sp)
1000a5e0:	df000817 	ldw	fp,32(sp)
1000a5e4:	ddc00717 	ldw	r23,28(sp)
1000a5e8:	dd800617 	ldw	r22,24(sp)
1000a5ec:	dd400517 	ldw	r21,20(sp)
1000a5f0:	dd000417 	ldw	r20,16(sp)
1000a5f4:	dcc00317 	ldw	r19,12(sp)
1000a5f8:	dc800217 	ldw	r18,8(sp)
1000a5fc:	dc400117 	ldw	r17,4(sp)
1000a600:	dc000017 	ldw	r16,0(sp)
1000a604:	dec00a04 	addi	sp,sp,40
1000a608:	f800283a 	ret
1000a60c:	017fff04 	movi	r5,-4
1000a610:	414a703a 	and	r5,r8,r5
1000a614:	814d883a 	add	r6,r16,r5
1000a618:	30c01f16 	blt	r6,r3,1000a698 <_realloc_r+0x22c>
1000a61c:	20800317 	ldw	r2,12(r4)
1000a620:	20c00217 	ldw	r3,8(r4)
1000a624:	a825883a 	mov	r18,r21
1000a628:	3021883a 	mov	r16,r6
1000a62c:	18800315 	stw	r2,12(r3)
1000a630:	10c00215 	stw	r3,8(r2)
1000a634:	003fdb06 	br	1000a5a4 <__alt_data_end+0xf800a5a4>
1000a638:	00800304 	movi	r2,12
1000a63c:	a0800015 	stw	r2,0(r20)
1000a640:	0005883a 	mov	r2,zero
1000a644:	003fe506 	br	1000a5dc <__alt_data_end+0xf800a5dc>
1000a648:	98c00117 	ldw	r3,4(r19)
1000a64c:	9c4b883a 	add	r5,r19,r17
1000a650:	11000054 	ori	r4,r2,1
1000a654:	18c0004c 	andi	r3,r3,1
1000a658:	1c62b03a 	or	r17,r3,r17
1000a65c:	9c400115 	stw	r17,4(r19)
1000a660:	29000115 	stw	r4,4(r5)
1000a664:	2885883a 	add	r2,r5,r2
1000a668:	10c00117 	ldw	r3,4(r2)
1000a66c:	29400204 	addi	r5,r5,8
1000a670:	a009883a 	mov	r4,r20
1000a674:	18c00054 	ori	r3,r3,1
1000a678:	10c00115 	stw	r3,4(r2)
1000a67c:	0007b000 	call	10007b00 <_free_r>
1000a680:	003fd306 	br	1000a5d0 <__alt_data_end+0xf800a5d0>
1000a684:	017fff04 	movi	r5,-4
1000a688:	414a703a 	and	r5,r8,r5
1000a68c:	89800404 	addi	r6,r17,16
1000a690:	8151883a 	add	r8,r16,r5
1000a694:	4180590e 	bge	r8,r6,1000a7fc <_realloc_r+0x390>
1000a698:	1080004c 	andi	r2,r2,1
1000a69c:	103f9e1e 	bne	r2,zero,1000a518 <__alt_data_end+0xf800a518>
1000a6a0:	adbffe17 	ldw	r22,-8(r21)
1000a6a4:	00bfff04 	movi	r2,-4
1000a6a8:	9dadc83a 	sub	r22,r19,r22
1000a6ac:	b1800117 	ldw	r6,4(r22)
1000a6b0:	3084703a 	and	r2,r6,r2
1000a6b4:	20002026 	beq	r4,zero,1000a738 <_realloc_r+0x2cc>
1000a6b8:	80af883a 	add	r23,r16,r2
1000a6bc:	b96f883a 	add	r23,r23,r5
1000a6c0:	21c05f26 	beq	r4,r7,1000a840 <_realloc_r+0x3d4>
1000a6c4:	b8c01c16 	blt	r23,r3,1000a738 <_realloc_r+0x2cc>
1000a6c8:	20800317 	ldw	r2,12(r4)
1000a6cc:	20c00217 	ldw	r3,8(r4)
1000a6d0:	81bfff04 	addi	r6,r16,-4
1000a6d4:	01000904 	movi	r4,36
1000a6d8:	18800315 	stw	r2,12(r3)
1000a6dc:	10c00215 	stw	r3,8(r2)
1000a6e0:	b0c00217 	ldw	r3,8(r22)
1000a6e4:	b0800317 	ldw	r2,12(r22)
1000a6e8:	b4800204 	addi	r18,r22,8
1000a6ec:	18800315 	stw	r2,12(r3)
1000a6f0:	10c00215 	stw	r3,8(r2)
1000a6f4:	21801b36 	bltu	r4,r6,1000a764 <_realloc_r+0x2f8>
1000a6f8:	008004c4 	movi	r2,19
1000a6fc:	1180352e 	bgeu	r2,r6,1000a7d4 <_realloc_r+0x368>
1000a700:	a8800017 	ldw	r2,0(r21)
1000a704:	b0800215 	stw	r2,8(r22)
1000a708:	a8800117 	ldw	r2,4(r21)
1000a70c:	b0800315 	stw	r2,12(r22)
1000a710:	008006c4 	movi	r2,27
1000a714:	11807f36 	bltu	r2,r6,1000a914 <_realloc_r+0x4a8>
1000a718:	b0800404 	addi	r2,r22,16
1000a71c:	ad400204 	addi	r21,r21,8
1000a720:	00002d06 	br	1000a7d8 <_realloc_r+0x36c>
1000a724:	adbffe17 	ldw	r22,-8(r21)
1000a728:	00bfff04 	movi	r2,-4
1000a72c:	9dadc83a 	sub	r22,r19,r22
1000a730:	b1000117 	ldw	r4,4(r22)
1000a734:	2084703a 	and	r2,r4,r2
1000a738:	b03f7726 	beq	r22,zero,1000a518 <__alt_data_end+0xf800a518>
1000a73c:	80af883a 	add	r23,r16,r2
1000a740:	b8ff7516 	blt	r23,r3,1000a518 <__alt_data_end+0xf800a518>
1000a744:	b0800317 	ldw	r2,12(r22)
1000a748:	b0c00217 	ldw	r3,8(r22)
1000a74c:	81bfff04 	addi	r6,r16,-4
1000a750:	01000904 	movi	r4,36
1000a754:	18800315 	stw	r2,12(r3)
1000a758:	10c00215 	stw	r3,8(r2)
1000a75c:	b4800204 	addi	r18,r22,8
1000a760:	21bfe52e 	bgeu	r4,r6,1000a6f8 <__alt_data_end+0xf800a6f8>
1000a764:	a80b883a 	mov	r5,r21
1000a768:	9009883a 	mov	r4,r18
1000a76c:	00091300 	call	10009130 <memmove>
1000a770:	b821883a 	mov	r16,r23
1000a774:	b027883a 	mov	r19,r22
1000a778:	003f8a06 	br	1000a5a4 <__alt_data_end+0xf800a5a4>
1000a77c:	300b883a 	mov	r5,r6
1000a780:	dfc00917 	ldw	ra,36(sp)
1000a784:	df000817 	ldw	fp,32(sp)
1000a788:	ddc00717 	ldw	r23,28(sp)
1000a78c:	dd800617 	ldw	r22,24(sp)
1000a790:	dd400517 	ldw	r21,20(sp)
1000a794:	dd000417 	ldw	r20,16(sp)
1000a798:	dcc00317 	ldw	r19,12(sp)
1000a79c:	dc800217 	ldw	r18,8(sp)
1000a7a0:	dc400117 	ldw	r17,4(sp)
1000a7a4:	dc000017 	ldw	r16,0(sp)
1000a7a8:	dec00a04 	addi	sp,sp,40
1000a7ac:	00086f81 	jmpi	100086f8 <_malloc_r>
1000a7b0:	a8c00017 	ldw	r3,0(r21)
1000a7b4:	90c00015 	stw	r3,0(r18)
1000a7b8:	a8c00117 	ldw	r3,4(r21)
1000a7bc:	90c00115 	stw	r3,4(r18)
1000a7c0:	00c006c4 	movi	r3,27
1000a7c4:	19804536 	bltu	r3,r6,1000a8dc <_realloc_r+0x470>
1000a7c8:	90800204 	addi	r2,r18,8
1000a7cc:	a8c00204 	addi	r3,r21,8
1000a7d0:	003f6306 	br	1000a560 <__alt_data_end+0xf800a560>
1000a7d4:	9005883a 	mov	r2,r18
1000a7d8:	a8c00017 	ldw	r3,0(r21)
1000a7dc:	b821883a 	mov	r16,r23
1000a7e0:	b027883a 	mov	r19,r22
1000a7e4:	10c00015 	stw	r3,0(r2)
1000a7e8:	a8c00117 	ldw	r3,4(r21)
1000a7ec:	10c00115 	stw	r3,4(r2)
1000a7f0:	a8c00217 	ldw	r3,8(r21)
1000a7f4:	10c00215 	stw	r3,8(r2)
1000a7f8:	003f6a06 	br	1000a5a4 <__alt_data_end+0xf800a5a4>
1000a7fc:	9c67883a 	add	r19,r19,r17
1000a800:	4445c83a 	sub	r2,r8,r17
1000a804:	e4c00215 	stw	r19,8(fp)
1000a808:	10800054 	ori	r2,r2,1
1000a80c:	98800115 	stw	r2,4(r19)
1000a810:	a8bfff17 	ldw	r2,-4(r21)
1000a814:	a009883a 	mov	r4,r20
1000a818:	1080004c 	andi	r2,r2,1
1000a81c:	1462b03a 	or	r17,r2,r17
1000a820:	ac7fff15 	stw	r17,-4(r21)
1000a824:	0011d940 	call	10011d94 <__malloc_unlock>
1000a828:	a805883a 	mov	r2,r21
1000a82c:	003f6b06 	br	1000a5dc <__alt_data_end+0xf800a5dc>
1000a830:	a80b883a 	mov	r5,r21
1000a834:	9009883a 	mov	r4,r18
1000a838:	00091300 	call	10009130 <memmove>
1000a83c:	003f4e06 	br	1000a578 <__alt_data_end+0xf800a578>
1000a840:	89000404 	addi	r4,r17,16
1000a844:	b93fbc16 	blt	r23,r4,1000a738 <__alt_data_end+0xf800a738>
1000a848:	b0800317 	ldw	r2,12(r22)
1000a84c:	b0c00217 	ldw	r3,8(r22)
1000a850:	81bfff04 	addi	r6,r16,-4
1000a854:	01000904 	movi	r4,36
1000a858:	18800315 	stw	r2,12(r3)
1000a85c:	10c00215 	stw	r3,8(r2)
1000a860:	b4800204 	addi	r18,r22,8
1000a864:	21804336 	bltu	r4,r6,1000a974 <_realloc_r+0x508>
1000a868:	008004c4 	movi	r2,19
1000a86c:	11803f2e 	bgeu	r2,r6,1000a96c <_realloc_r+0x500>
1000a870:	a8800017 	ldw	r2,0(r21)
1000a874:	b0800215 	stw	r2,8(r22)
1000a878:	a8800117 	ldw	r2,4(r21)
1000a87c:	b0800315 	stw	r2,12(r22)
1000a880:	008006c4 	movi	r2,27
1000a884:	11803f36 	bltu	r2,r6,1000a984 <_realloc_r+0x518>
1000a888:	b0800404 	addi	r2,r22,16
1000a88c:	ad400204 	addi	r21,r21,8
1000a890:	a8c00017 	ldw	r3,0(r21)
1000a894:	10c00015 	stw	r3,0(r2)
1000a898:	a8c00117 	ldw	r3,4(r21)
1000a89c:	10c00115 	stw	r3,4(r2)
1000a8a0:	a8c00217 	ldw	r3,8(r21)
1000a8a4:	10c00215 	stw	r3,8(r2)
1000a8a8:	b447883a 	add	r3,r22,r17
1000a8ac:	bc45c83a 	sub	r2,r23,r17
1000a8b0:	e0c00215 	stw	r3,8(fp)
1000a8b4:	10800054 	ori	r2,r2,1
1000a8b8:	18800115 	stw	r2,4(r3)
1000a8bc:	b0800117 	ldw	r2,4(r22)
1000a8c0:	a009883a 	mov	r4,r20
1000a8c4:	1080004c 	andi	r2,r2,1
1000a8c8:	1462b03a 	or	r17,r2,r17
1000a8cc:	b4400115 	stw	r17,4(r22)
1000a8d0:	0011d940 	call	10011d94 <__malloc_unlock>
1000a8d4:	9005883a 	mov	r2,r18
1000a8d8:	003f4006 	br	1000a5dc <__alt_data_end+0xf800a5dc>
1000a8dc:	a8c00217 	ldw	r3,8(r21)
1000a8e0:	90c00215 	stw	r3,8(r18)
1000a8e4:	a8c00317 	ldw	r3,12(r21)
1000a8e8:	90c00315 	stw	r3,12(r18)
1000a8ec:	30801126 	beq	r6,r2,1000a934 <_realloc_r+0x4c8>
1000a8f0:	90800404 	addi	r2,r18,16
1000a8f4:	a8c00404 	addi	r3,r21,16
1000a8f8:	003f1906 	br	1000a560 <__alt_data_end+0xf800a560>
1000a8fc:	90ffff17 	ldw	r3,-4(r18)
1000a900:	00bfff04 	movi	r2,-4
1000a904:	a825883a 	mov	r18,r21
1000a908:	1884703a 	and	r2,r3,r2
1000a90c:	80a1883a 	add	r16,r16,r2
1000a910:	003f2406 	br	1000a5a4 <__alt_data_end+0xf800a5a4>
1000a914:	a8800217 	ldw	r2,8(r21)
1000a918:	b0800415 	stw	r2,16(r22)
1000a91c:	a8800317 	ldw	r2,12(r21)
1000a920:	b0800515 	stw	r2,20(r22)
1000a924:	31000a26 	beq	r6,r4,1000a950 <_realloc_r+0x4e4>
1000a928:	b0800604 	addi	r2,r22,24
1000a92c:	ad400404 	addi	r21,r21,16
1000a930:	003fa906 	br	1000a7d8 <__alt_data_end+0xf800a7d8>
1000a934:	a9000417 	ldw	r4,16(r21)
1000a938:	90800604 	addi	r2,r18,24
1000a93c:	a8c00604 	addi	r3,r21,24
1000a940:	91000415 	stw	r4,16(r18)
1000a944:	a9000517 	ldw	r4,20(r21)
1000a948:	91000515 	stw	r4,20(r18)
1000a94c:	003f0406 	br	1000a560 <__alt_data_end+0xf800a560>
1000a950:	a8c00417 	ldw	r3,16(r21)
1000a954:	ad400604 	addi	r21,r21,24
1000a958:	b0800804 	addi	r2,r22,32
1000a95c:	b0c00615 	stw	r3,24(r22)
1000a960:	a8ffff17 	ldw	r3,-4(r21)
1000a964:	b0c00715 	stw	r3,28(r22)
1000a968:	003f9b06 	br	1000a7d8 <__alt_data_end+0xf800a7d8>
1000a96c:	9005883a 	mov	r2,r18
1000a970:	003fc706 	br	1000a890 <__alt_data_end+0xf800a890>
1000a974:	a80b883a 	mov	r5,r21
1000a978:	9009883a 	mov	r4,r18
1000a97c:	00091300 	call	10009130 <memmove>
1000a980:	003fc906 	br	1000a8a8 <__alt_data_end+0xf800a8a8>
1000a984:	a8800217 	ldw	r2,8(r21)
1000a988:	b0800415 	stw	r2,16(r22)
1000a98c:	a8800317 	ldw	r2,12(r21)
1000a990:	b0800515 	stw	r2,20(r22)
1000a994:	31000726 	beq	r6,r4,1000a9b4 <_realloc_r+0x548>
1000a998:	b0800604 	addi	r2,r22,24
1000a99c:	ad400404 	addi	r21,r21,16
1000a9a0:	003fbb06 	br	1000a890 <__alt_data_end+0xf800a890>
1000a9a4:	a009883a 	mov	r4,r20
1000a9a8:	0011d940 	call	10011d94 <__malloc_unlock>
1000a9ac:	0005883a 	mov	r2,zero
1000a9b0:	003f0a06 	br	1000a5dc <__alt_data_end+0xf800a5dc>
1000a9b4:	a8c00417 	ldw	r3,16(r21)
1000a9b8:	ad400604 	addi	r21,r21,24
1000a9bc:	b0800804 	addi	r2,r22,32
1000a9c0:	b0c00615 	stw	r3,24(r22)
1000a9c4:	a8ffff17 	ldw	r3,-4(r21)
1000a9c8:	b0c00715 	stw	r3,28(r22)
1000a9cc:	003fb006 	br	1000a890 <__alt_data_end+0xf800a890>

1000a9d0 <__fpclassifyd>:
1000a9d0:	00a00034 	movhi	r2,32768
1000a9d4:	10bfffc4 	addi	r2,r2,-1
1000a9d8:	2884703a 	and	r2,r5,r2
1000a9dc:	10000726 	beq	r2,zero,1000a9fc <__fpclassifyd+0x2c>
1000a9e0:	00fffc34 	movhi	r3,65520
1000a9e4:	019ff834 	movhi	r6,32736
1000a9e8:	28c7883a 	add	r3,r5,r3
1000a9ec:	31bfffc4 	addi	r6,r6,-1
1000a9f0:	30c00536 	bltu	r6,r3,1000aa08 <__fpclassifyd+0x38>
1000a9f4:	00800104 	movi	r2,4
1000a9f8:	f800283a 	ret
1000a9fc:	2000021e 	bne	r4,zero,1000aa08 <__fpclassifyd+0x38>
1000aa00:	00800084 	movi	r2,2
1000aa04:	f800283a 	ret
1000aa08:	00dffc34 	movhi	r3,32752
1000aa0c:	019ff834 	movhi	r6,32736
1000aa10:	28cb883a 	add	r5,r5,r3
1000aa14:	31bfffc4 	addi	r6,r6,-1
1000aa18:	317ff62e 	bgeu	r6,r5,1000a9f4 <__alt_data_end+0xf800a9f4>
1000aa1c:	01400434 	movhi	r5,16
1000aa20:	297fffc4 	addi	r5,r5,-1
1000aa24:	28800236 	bltu	r5,r2,1000aa30 <__fpclassifyd+0x60>
1000aa28:	008000c4 	movi	r2,3
1000aa2c:	f800283a 	ret
1000aa30:	10c00226 	beq	r2,r3,1000aa3c <__fpclassifyd+0x6c>
1000aa34:	0005883a 	mov	r2,zero
1000aa38:	f800283a 	ret
1000aa3c:	2005003a 	cmpeq	r2,r4,zero
1000aa40:	f800283a 	ret

1000aa44 <_sbrk_r>:
1000aa44:	defffd04 	addi	sp,sp,-12
1000aa48:	dc000015 	stw	r16,0(sp)
1000aa4c:	040400b4 	movhi	r16,4098
1000aa50:	dc400115 	stw	r17,4(sp)
1000aa54:	84200004 	addi	r16,r16,-32768
1000aa58:	2023883a 	mov	r17,r4
1000aa5c:	2809883a 	mov	r4,r5
1000aa60:	dfc00215 	stw	ra,8(sp)
1000aa64:	80000015 	stw	zero,0(r16)
1000aa68:	0011f7c0 	call	10011f7c <sbrk>
1000aa6c:	00ffffc4 	movi	r3,-1
1000aa70:	10c00526 	beq	r2,r3,1000aa88 <_sbrk_r+0x44>
1000aa74:	dfc00217 	ldw	ra,8(sp)
1000aa78:	dc400117 	ldw	r17,4(sp)
1000aa7c:	dc000017 	ldw	r16,0(sp)
1000aa80:	dec00304 	addi	sp,sp,12
1000aa84:	f800283a 	ret
1000aa88:	80c00017 	ldw	r3,0(r16)
1000aa8c:	183ff926 	beq	r3,zero,1000aa74 <__alt_data_end+0xf800aa74>
1000aa90:	88c00015 	stw	r3,0(r17)
1000aa94:	003ff706 	br	1000aa74 <__alt_data_end+0xf800aa74>

1000aa98 <__sread>:
1000aa98:	defffe04 	addi	sp,sp,-8
1000aa9c:	dc000015 	stw	r16,0(sp)
1000aaa0:	2821883a 	mov	r16,r5
1000aaa4:	2940038f 	ldh	r5,14(r5)
1000aaa8:	dfc00115 	stw	ra,4(sp)
1000aaac:	000dec40 	call	1000dec4 <_read_r>
1000aab0:	10000716 	blt	r2,zero,1000aad0 <__sread+0x38>
1000aab4:	80c01417 	ldw	r3,80(r16)
1000aab8:	1887883a 	add	r3,r3,r2
1000aabc:	80c01415 	stw	r3,80(r16)
1000aac0:	dfc00117 	ldw	ra,4(sp)
1000aac4:	dc000017 	ldw	r16,0(sp)
1000aac8:	dec00204 	addi	sp,sp,8
1000aacc:	f800283a 	ret
1000aad0:	80c0030b 	ldhu	r3,12(r16)
1000aad4:	18fbffcc 	andi	r3,r3,61439
1000aad8:	80c0030d 	sth	r3,12(r16)
1000aadc:	dfc00117 	ldw	ra,4(sp)
1000aae0:	dc000017 	ldw	r16,0(sp)
1000aae4:	dec00204 	addi	sp,sp,8
1000aae8:	f800283a 	ret

1000aaec <__seofread>:
1000aaec:	0005883a 	mov	r2,zero
1000aaf0:	f800283a 	ret

1000aaf4 <__swrite>:
1000aaf4:	2880030b 	ldhu	r2,12(r5)
1000aaf8:	defffb04 	addi	sp,sp,-20
1000aafc:	dcc00315 	stw	r19,12(sp)
1000ab00:	dc800215 	stw	r18,8(sp)
1000ab04:	dc400115 	stw	r17,4(sp)
1000ab08:	dc000015 	stw	r16,0(sp)
1000ab0c:	dfc00415 	stw	ra,16(sp)
1000ab10:	10c0400c 	andi	r3,r2,256
1000ab14:	2821883a 	mov	r16,r5
1000ab18:	2023883a 	mov	r17,r4
1000ab1c:	3025883a 	mov	r18,r6
1000ab20:	3827883a 	mov	r19,r7
1000ab24:	18000526 	beq	r3,zero,1000ab3c <__swrite+0x48>
1000ab28:	2940038f 	ldh	r5,14(r5)
1000ab2c:	01c00084 	movi	r7,2
1000ab30:	000d883a 	mov	r6,zero
1000ab34:	000de640 	call	1000de64 <_lseek_r>
1000ab38:	8080030b 	ldhu	r2,12(r16)
1000ab3c:	8140038f 	ldh	r5,14(r16)
1000ab40:	10bbffcc 	andi	r2,r2,61439
1000ab44:	980f883a 	mov	r7,r19
1000ab48:	900d883a 	mov	r6,r18
1000ab4c:	8809883a 	mov	r4,r17
1000ab50:	8080030d 	sth	r2,12(r16)
1000ab54:	dfc00417 	ldw	ra,16(sp)
1000ab58:	dcc00317 	ldw	r19,12(sp)
1000ab5c:	dc800217 	ldw	r18,8(sp)
1000ab60:	dc400117 	ldw	r17,4(sp)
1000ab64:	dc000017 	ldw	r16,0(sp)
1000ab68:	dec00504 	addi	sp,sp,20
1000ab6c:	000d9181 	jmpi	1000d918 <_write_r>

1000ab70 <__sseek>:
1000ab70:	defffe04 	addi	sp,sp,-8
1000ab74:	dc000015 	stw	r16,0(sp)
1000ab78:	2821883a 	mov	r16,r5
1000ab7c:	2940038f 	ldh	r5,14(r5)
1000ab80:	dfc00115 	stw	ra,4(sp)
1000ab84:	000de640 	call	1000de64 <_lseek_r>
1000ab88:	00ffffc4 	movi	r3,-1
1000ab8c:	10c00826 	beq	r2,r3,1000abb0 <__sseek+0x40>
1000ab90:	80c0030b 	ldhu	r3,12(r16)
1000ab94:	80801415 	stw	r2,80(r16)
1000ab98:	18c40014 	ori	r3,r3,4096
1000ab9c:	80c0030d 	sth	r3,12(r16)
1000aba0:	dfc00117 	ldw	ra,4(sp)
1000aba4:	dc000017 	ldw	r16,0(sp)
1000aba8:	dec00204 	addi	sp,sp,8
1000abac:	f800283a 	ret
1000abb0:	80c0030b 	ldhu	r3,12(r16)
1000abb4:	18fbffcc 	andi	r3,r3,61439
1000abb8:	80c0030d 	sth	r3,12(r16)
1000abbc:	dfc00117 	ldw	ra,4(sp)
1000abc0:	dc000017 	ldw	r16,0(sp)
1000abc4:	dec00204 	addi	sp,sp,8
1000abc8:	f800283a 	ret

1000abcc <__sclose>:
1000abcc:	2940038f 	ldh	r5,14(r5)
1000abd0:	000d9781 	jmpi	1000d978 <_close_r>

1000abd4 <strcmp>:
1000abd4:	2144b03a 	or	r2,r4,r5
1000abd8:	108000cc 	andi	r2,r2,3
1000abdc:	1000171e 	bne	r2,zero,1000ac3c <strcmp+0x68>
1000abe0:	20800017 	ldw	r2,0(r4)
1000abe4:	28c00017 	ldw	r3,0(r5)
1000abe8:	10c0141e 	bne	r2,r3,1000ac3c <strcmp+0x68>
1000abec:	027fbff4 	movhi	r9,65279
1000abf0:	4a7fbfc4 	addi	r9,r9,-257
1000abf4:	0086303a 	nor	r3,zero,r2
1000abf8:	02202074 	movhi	r8,32897
1000abfc:	1245883a 	add	r2,r2,r9
1000ac00:	42202004 	addi	r8,r8,-32640
1000ac04:	10c4703a 	and	r2,r2,r3
1000ac08:	1204703a 	and	r2,r2,r8
1000ac0c:	10000226 	beq	r2,zero,1000ac18 <strcmp+0x44>
1000ac10:	00002306 	br	1000aca0 <strcmp+0xcc>
1000ac14:	1000221e 	bne	r2,zero,1000aca0 <strcmp+0xcc>
1000ac18:	21000104 	addi	r4,r4,4
1000ac1c:	20c00017 	ldw	r3,0(r4)
1000ac20:	29400104 	addi	r5,r5,4
1000ac24:	29800017 	ldw	r6,0(r5)
1000ac28:	1a4f883a 	add	r7,r3,r9
1000ac2c:	00c4303a 	nor	r2,zero,r3
1000ac30:	3884703a 	and	r2,r7,r2
1000ac34:	1204703a 	and	r2,r2,r8
1000ac38:	19bff626 	beq	r3,r6,1000ac14 <__alt_data_end+0xf800ac14>
1000ac3c:	20800003 	ldbu	r2,0(r4)
1000ac40:	10c03fcc 	andi	r3,r2,255
1000ac44:	18c0201c 	xori	r3,r3,128
1000ac48:	18ffe004 	addi	r3,r3,-128
1000ac4c:	18000c26 	beq	r3,zero,1000ac80 <strcmp+0xac>
1000ac50:	29800007 	ldb	r6,0(r5)
1000ac54:	19800326 	beq	r3,r6,1000ac64 <strcmp+0x90>
1000ac58:	00001306 	br	1000aca8 <strcmp+0xd4>
1000ac5c:	29800007 	ldb	r6,0(r5)
1000ac60:	11800b1e 	bne	r2,r6,1000ac90 <strcmp+0xbc>
1000ac64:	21000044 	addi	r4,r4,1
1000ac68:	20c00003 	ldbu	r3,0(r4)
1000ac6c:	29400044 	addi	r5,r5,1
1000ac70:	18803fcc 	andi	r2,r3,255
1000ac74:	1080201c 	xori	r2,r2,128
1000ac78:	10bfe004 	addi	r2,r2,-128
1000ac7c:	103ff71e 	bne	r2,zero,1000ac5c <__alt_data_end+0xf800ac5c>
1000ac80:	0007883a 	mov	r3,zero
1000ac84:	28800003 	ldbu	r2,0(r5)
1000ac88:	1885c83a 	sub	r2,r3,r2
1000ac8c:	f800283a 	ret
1000ac90:	28800003 	ldbu	r2,0(r5)
1000ac94:	18c03fcc 	andi	r3,r3,255
1000ac98:	1885c83a 	sub	r2,r3,r2
1000ac9c:	f800283a 	ret
1000aca0:	0005883a 	mov	r2,zero
1000aca4:	f800283a 	ret
1000aca8:	10c03fcc 	andi	r3,r2,255
1000acac:	003ff506 	br	1000ac84 <__alt_data_end+0xf800ac84>

1000acb0 <__ssprint_r>:
1000acb0:	30800217 	ldw	r2,8(r6)
1000acb4:	defff604 	addi	sp,sp,-40
1000acb8:	dc800215 	stw	r18,8(sp)
1000acbc:	dfc00915 	stw	ra,36(sp)
1000acc0:	df000815 	stw	fp,32(sp)
1000acc4:	ddc00715 	stw	r23,28(sp)
1000acc8:	dd800615 	stw	r22,24(sp)
1000accc:	dd400515 	stw	r21,20(sp)
1000acd0:	dd000415 	stw	r20,16(sp)
1000acd4:	dcc00315 	stw	r19,12(sp)
1000acd8:	dc400115 	stw	r17,4(sp)
1000acdc:	dc000015 	stw	r16,0(sp)
1000ace0:	3025883a 	mov	r18,r6
1000ace4:	10005826 	beq	r2,zero,1000ae48 <__ssprint_r+0x198>
1000ace8:	2027883a 	mov	r19,r4
1000acec:	35c00017 	ldw	r23,0(r6)
1000acf0:	29000017 	ldw	r4,0(r5)
1000acf4:	28800217 	ldw	r2,8(r5)
1000acf8:	2823883a 	mov	r17,r5
1000acfc:	0039883a 	mov	fp,zero
1000ad00:	0021883a 	mov	r16,zero
1000ad04:	80003926 	beq	r16,zero,1000adec <__ssprint_r+0x13c>
1000ad08:	102b883a 	mov	r21,r2
1000ad0c:	102d883a 	mov	r22,r2
1000ad10:	80803a36 	bltu	r16,r2,1000adfc <__ssprint_r+0x14c>
1000ad14:	88c0030b 	ldhu	r3,12(r17)
1000ad18:	1881200c 	andi	r2,r3,1152
1000ad1c:	10002626 	beq	r2,zero,1000adb8 <__ssprint_r+0x108>
1000ad20:	88800517 	ldw	r2,20(r17)
1000ad24:	89400417 	ldw	r5,16(r17)
1000ad28:	81800044 	addi	r6,r16,1
1000ad2c:	108f883a 	add	r7,r2,r2
1000ad30:	3885883a 	add	r2,r7,r2
1000ad34:	100ed7fa 	srli	r7,r2,31
1000ad38:	216dc83a 	sub	r22,r4,r5
1000ad3c:	3589883a 	add	r4,r6,r22
1000ad40:	3885883a 	add	r2,r7,r2
1000ad44:	102bd07a 	srai	r21,r2,1
1000ad48:	a80d883a 	mov	r6,r21
1000ad4c:	a900022e 	bgeu	r21,r4,1000ad58 <__ssprint_r+0xa8>
1000ad50:	202b883a 	mov	r21,r4
1000ad54:	200d883a 	mov	r6,r4
1000ad58:	18c1000c 	andi	r3,r3,1024
1000ad5c:	18002a26 	beq	r3,zero,1000ae08 <__ssprint_r+0x158>
1000ad60:	300b883a 	mov	r5,r6
1000ad64:	9809883a 	mov	r4,r19
1000ad68:	00086f80 	call	100086f8 <_malloc_r>
1000ad6c:	1029883a 	mov	r20,r2
1000ad70:	10002c26 	beq	r2,zero,1000ae24 <__ssprint_r+0x174>
1000ad74:	89400417 	ldw	r5,16(r17)
1000ad78:	b00d883a 	mov	r6,r22
1000ad7c:	1009883a 	mov	r4,r2
1000ad80:	0008fe80 	call	10008fe8 <memcpy>
1000ad84:	8880030b 	ldhu	r2,12(r17)
1000ad88:	00fedfc4 	movi	r3,-1153
1000ad8c:	10c4703a 	and	r2,r2,r3
1000ad90:	10802014 	ori	r2,r2,128
1000ad94:	8880030d 	sth	r2,12(r17)
1000ad98:	a589883a 	add	r4,r20,r22
1000ad9c:	adadc83a 	sub	r22,r21,r22
1000ada0:	8d400515 	stw	r21,20(r17)
1000ada4:	8d800215 	stw	r22,8(r17)
1000ada8:	8d000415 	stw	r20,16(r17)
1000adac:	89000015 	stw	r4,0(r17)
1000adb0:	802b883a 	mov	r21,r16
1000adb4:	802d883a 	mov	r22,r16
1000adb8:	b00d883a 	mov	r6,r22
1000adbc:	e00b883a 	mov	r5,fp
1000adc0:	00091300 	call	10009130 <memmove>
1000adc4:	88800217 	ldw	r2,8(r17)
1000adc8:	89000017 	ldw	r4,0(r17)
1000adcc:	90c00217 	ldw	r3,8(r18)
1000add0:	1545c83a 	sub	r2,r2,r21
1000add4:	2589883a 	add	r4,r4,r22
1000add8:	88800215 	stw	r2,8(r17)
1000addc:	89000015 	stw	r4,0(r17)
1000ade0:	1c21c83a 	sub	r16,r3,r16
1000ade4:	94000215 	stw	r16,8(r18)
1000ade8:	80001726 	beq	r16,zero,1000ae48 <__ssprint_r+0x198>
1000adec:	bf000017 	ldw	fp,0(r23)
1000adf0:	bc000117 	ldw	r16,4(r23)
1000adf4:	bdc00204 	addi	r23,r23,8
1000adf8:	003fc206 	br	1000ad04 <__alt_data_end+0xf800ad04>
1000adfc:	802b883a 	mov	r21,r16
1000ae00:	802d883a 	mov	r22,r16
1000ae04:	003fec06 	br	1000adb8 <__alt_data_end+0xf800adb8>
1000ae08:	9809883a 	mov	r4,r19
1000ae0c:	000a46c0 	call	1000a46c <_realloc_r>
1000ae10:	1029883a 	mov	r20,r2
1000ae14:	103fe01e 	bne	r2,zero,1000ad98 <__alt_data_end+0xf800ad98>
1000ae18:	89400417 	ldw	r5,16(r17)
1000ae1c:	9809883a 	mov	r4,r19
1000ae20:	0007b000 	call	10007b00 <_free_r>
1000ae24:	88c0030b 	ldhu	r3,12(r17)
1000ae28:	00800304 	movi	r2,12
1000ae2c:	98800015 	stw	r2,0(r19)
1000ae30:	18c01014 	ori	r3,r3,64
1000ae34:	88c0030d 	sth	r3,12(r17)
1000ae38:	00bfffc4 	movi	r2,-1
1000ae3c:	90000215 	stw	zero,8(r18)
1000ae40:	90000115 	stw	zero,4(r18)
1000ae44:	00000206 	br	1000ae50 <__ssprint_r+0x1a0>
1000ae48:	90000115 	stw	zero,4(r18)
1000ae4c:	0005883a 	mov	r2,zero
1000ae50:	dfc00917 	ldw	ra,36(sp)
1000ae54:	df000817 	ldw	fp,32(sp)
1000ae58:	ddc00717 	ldw	r23,28(sp)
1000ae5c:	dd800617 	ldw	r22,24(sp)
1000ae60:	dd400517 	ldw	r21,20(sp)
1000ae64:	dd000417 	ldw	r20,16(sp)
1000ae68:	dcc00317 	ldw	r19,12(sp)
1000ae6c:	dc800217 	ldw	r18,8(sp)
1000ae70:	dc400117 	ldw	r17,4(sp)
1000ae74:	dc000017 	ldw	r16,0(sp)
1000ae78:	dec00a04 	addi	sp,sp,40
1000ae7c:	f800283a 	ret

1000ae80 <___svfiprintf_internal_r>:
1000ae80:	2880030b 	ldhu	r2,12(r5)
1000ae84:	deffc804 	addi	sp,sp,-224
1000ae88:	dcc03115 	stw	r19,196(sp)
1000ae8c:	dfc03715 	stw	ra,220(sp)
1000ae90:	df003615 	stw	fp,216(sp)
1000ae94:	ddc03515 	stw	r23,212(sp)
1000ae98:	dd803415 	stw	r22,208(sp)
1000ae9c:	dd403315 	stw	r21,204(sp)
1000aea0:	dd003215 	stw	r20,200(sp)
1000aea4:	dc803015 	stw	r18,192(sp)
1000aea8:	dc402f15 	stw	r17,188(sp)
1000aeac:	dc002e15 	stw	r16,184(sp)
1000aeb0:	d9402315 	stw	r5,140(sp)
1000aeb4:	d9002715 	stw	r4,156(sp)
1000aeb8:	1080200c 	andi	r2,r2,128
1000aebc:	d9c02415 	stw	r7,144(sp)
1000aec0:	3027883a 	mov	r19,r6
1000aec4:	10000226 	beq	r2,zero,1000aed0 <___svfiprintf_internal_r+0x50>
1000aec8:	28800417 	ldw	r2,16(r5)
1000aecc:	10046d26 	beq	r2,zero,1000c084 <___svfiprintf_internal_r+0x1204>
1000aed0:	d8801a04 	addi	r2,sp,104
1000aed4:	d8c019c4 	addi	r3,sp,103
1000aed8:	05840074 	movhi	r22,4097
1000aedc:	10c9c83a 	sub	r4,r2,r3
1000aee0:	b590b304 	addi	r22,r22,17100
1000aee4:	d8801e15 	stw	r2,120(sp)
1000aee8:	d8c01f15 	stw	r3,124(sp)
1000aeec:	dec01a15 	stw	sp,104(sp)
1000aef0:	d8001c15 	stw	zero,112(sp)
1000aef4:	d8001b15 	stw	zero,108(sp)
1000aef8:	d811883a 	mov	r8,sp
1000aefc:	d8002915 	stw	zero,164(sp)
1000af00:	d8002615 	stw	zero,152(sp)
1000af04:	d9002c15 	stw	r4,176(sp)
1000af08:	98800007 	ldb	r2,0(r19)
1000af0c:	10031426 	beq	r2,zero,1000bb60 <___svfiprintf_internal_r+0xce0>
1000af10:	00c00944 	movi	r3,37
1000af14:	9825883a 	mov	r18,r19
1000af18:	10c0021e 	bne	r2,r3,1000af24 <___svfiprintf_internal_r+0xa4>
1000af1c:	00001406 	br	1000af70 <___svfiprintf_internal_r+0xf0>
1000af20:	10c00326 	beq	r2,r3,1000af30 <___svfiprintf_internal_r+0xb0>
1000af24:	94800044 	addi	r18,r18,1
1000af28:	90800007 	ldb	r2,0(r18)
1000af2c:	103ffc1e 	bne	r2,zero,1000af20 <__alt_data_end+0xf800af20>
1000af30:	94e1c83a 	sub	r16,r18,r19
1000af34:	80000e26 	beq	r16,zero,1000af70 <___svfiprintf_internal_r+0xf0>
1000af38:	d8c01c17 	ldw	r3,112(sp)
1000af3c:	d8801b17 	ldw	r2,108(sp)
1000af40:	44c00015 	stw	r19,0(r8)
1000af44:	1c07883a 	add	r3,r3,r16
1000af48:	10800044 	addi	r2,r2,1
1000af4c:	d8c01c15 	stw	r3,112(sp)
1000af50:	44000115 	stw	r16,4(r8)
1000af54:	d8801b15 	stw	r2,108(sp)
1000af58:	00c001c4 	movi	r3,7
1000af5c:	18835c16 	blt	r3,r2,1000bcd0 <___svfiprintf_internal_r+0xe50>
1000af60:	42000204 	addi	r8,r8,8
1000af64:	d9402617 	ldw	r5,152(sp)
1000af68:	2c0b883a 	add	r5,r5,r16
1000af6c:	d9402615 	stw	r5,152(sp)
1000af70:	90800007 	ldb	r2,0(r18)
1000af74:	1002fc26 	beq	r2,zero,1000bb68 <___svfiprintf_internal_r+0xce8>
1000af78:	0023883a 	mov	r17,zero
1000af7c:	00bfffc4 	movi	r2,-1
1000af80:	0021883a 	mov	r16,zero
1000af84:	94c00044 	addi	r19,r18,1
1000af88:	90c00047 	ldb	r3,1(r18)
1000af8c:	dc402105 	stb	r17,132(sp)
1000af90:	d8001d85 	stb	zero,118(sp)
1000af94:	002b883a 	mov	r21,zero
1000af98:	d8802015 	stw	r2,128(sp)
1000af9c:	d8002515 	stw	zero,148(sp)
1000afa0:	04801604 	movi	r18,88
1000afa4:	05000244 	movi	r20,9
1000afa8:	402f883a 	mov	r23,r8
1000afac:	8023883a 	mov	r17,r16
1000afb0:	9cc00044 	addi	r19,r19,1
1000afb4:	18bff804 	addi	r2,r3,-32
1000afb8:	9081fb36 	bltu	r18,r2,1000b7a8 <___svfiprintf_internal_r+0x928>
1000afbc:	100490ba 	slli	r2,r2,2
1000afc0:	01040074 	movhi	r4,4097
1000afc4:	212bf504 	addi	r4,r4,-20524
1000afc8:	1105883a 	add	r2,r2,r4
1000afcc:	10800017 	ldw	r2,0(r2)
1000afd0:	1000683a 	jmp	r2
1000afd4:	1000b1d4 	ori	zero,r2,711
1000afd8:	1000b7a8 	cmpgeui	zero,r2,734
1000afdc:	1000b7a8 	cmpgeui	zero,r2,734
1000afe0:	1000b1c8 	cmpgei	zero,r2,711
1000afe4:	1000b7a8 	cmpgeui	zero,r2,734
1000afe8:	1000b7a8 	cmpgeui	zero,r2,734
1000afec:	1000b7a8 	cmpgeui	zero,r2,734
1000aff0:	1000b7a8 	cmpgeui	zero,r2,734
1000aff4:	1000b7a8 	cmpgeui	zero,r2,734
1000aff8:	1000b7a8 	cmpgeui	zero,r2,734
1000affc:	1000b138 	rdprs	zero,r2,708
1000b000:	1000b334 	orhi	zero,r2,716
1000b004:	1000b7a8 	cmpgeui	zero,r2,734
1000b008:	1000b160 	cmpeqi	zero,r2,709
1000b00c:	1000b7e4 	muli	zero,r2,735
1000b010:	1000b7a8 	cmpgeui	zero,r2,734
1000b014:	1000b7d8 	cmpnei	zero,r2,735
1000b018:	1000b76c 	andhi	zero,r2,733
1000b01c:	1000b76c 	andhi	zero,r2,733
1000b020:	1000b76c 	andhi	zero,r2,733
1000b024:	1000b76c 	andhi	zero,r2,733
1000b028:	1000b76c 	andhi	zero,r2,733
1000b02c:	1000b76c 	andhi	zero,r2,733
1000b030:	1000b76c 	andhi	zero,r2,733
1000b034:	1000b76c 	andhi	zero,r2,733
1000b038:	1000b76c 	andhi	zero,r2,733
1000b03c:	1000b7a8 	cmpgeui	zero,r2,734
1000b040:	1000b7a8 	cmpgeui	zero,r2,734
1000b044:	1000b7a8 	cmpgeui	zero,r2,734
1000b048:	1000b7a8 	cmpgeui	zero,r2,734
1000b04c:	1000b7a8 	cmpgeui	zero,r2,734
1000b050:	1000b7a8 	cmpgeui	zero,r2,734
1000b054:	1000b7a8 	cmpgeui	zero,r2,734
1000b058:	1000b7a8 	cmpgeui	zero,r2,734
1000b05c:	1000b7a8 	cmpgeui	zero,r2,734
1000b060:	1000b7a8 	cmpgeui	zero,r2,734
1000b064:	1000b6f0 	cmpltui	zero,r2,731
1000b068:	1000b7a8 	cmpgeui	zero,r2,734
1000b06c:	1000b7a8 	cmpgeui	zero,r2,734
1000b070:	1000b7a8 	cmpgeui	zero,r2,734
1000b074:	1000b7a8 	cmpgeui	zero,r2,734
1000b078:	1000b7a8 	cmpgeui	zero,r2,734
1000b07c:	1000b7a8 	cmpgeui	zero,r2,734
1000b080:	1000b7a8 	cmpgeui	zero,r2,734
1000b084:	1000b7a8 	cmpgeui	zero,r2,734
1000b088:	1000b7a8 	cmpgeui	zero,r2,734
1000b08c:	1000b7a8 	cmpgeui	zero,r2,734
1000b090:	1000b8a0 	cmpeqi	zero,r2,738
1000b094:	1000b7a8 	cmpgeui	zero,r2,734
1000b098:	1000b7a8 	cmpgeui	zero,r2,734
1000b09c:	1000b7a8 	cmpgeui	zero,r2,734
1000b0a0:	1000b7a8 	cmpgeui	zero,r2,734
1000b0a4:	1000b7a8 	cmpgeui	zero,r2,734
1000b0a8:	1000b82c 	andhi	zero,r2,736
1000b0ac:	1000b7a8 	cmpgeui	zero,r2,734
1000b0b0:	1000b7a8 	cmpgeui	zero,r2,734
1000b0b4:	1000b52c 	andhi	zero,r2,724
1000b0b8:	1000b7a8 	cmpgeui	zero,r2,734
1000b0bc:	1000b7a8 	cmpgeui	zero,r2,734
1000b0c0:	1000b7a8 	cmpgeui	zero,r2,734
1000b0c4:	1000b7a8 	cmpgeui	zero,r2,734
1000b0c8:	1000b7a8 	cmpgeui	zero,r2,734
1000b0cc:	1000b7a8 	cmpgeui	zero,r2,734
1000b0d0:	1000b7a8 	cmpgeui	zero,r2,734
1000b0d4:	1000b7a8 	cmpgeui	zero,r2,734
1000b0d8:	1000b7a8 	cmpgeui	zero,r2,734
1000b0dc:	1000b7a8 	cmpgeui	zero,r2,734
1000b0e0:	1000b3f8 	rdprs	zero,r2,719
1000b0e4:	1000b5dc 	xori	zero,r2,727
1000b0e8:	1000b7a8 	cmpgeui	zero,r2,734
1000b0ec:	1000b7a8 	cmpgeui	zero,r2,734
1000b0f0:	1000b7a8 	cmpgeui	zero,r2,734
1000b0f4:	1000b5d0 	cmplti	zero,r2,727
1000b0f8:	1000b5dc 	xori	zero,r2,727
1000b0fc:	1000b7a8 	cmpgeui	zero,r2,734
1000b100:	1000b7a8 	cmpgeui	zero,r2,734
1000b104:	1000b5bc 	xorhi	zero,r2,726
1000b108:	1000b7a8 	cmpgeui	zero,r2,734
1000b10c:	1000b57c 	xorhi	zero,r2,725
1000b110:	1000b348 	cmpgei	zero,r2,717
1000b114:	1000b16c 	andhi	zero,r2,709
1000b118:	1000b6e4 	muli	zero,r2,731
1000b11c:	1000b7a8 	cmpgeui	zero,r2,734
1000b120:	1000b690 	cmplti	zero,r2,730
1000b124:	1000b7a8 	cmpgeui	zero,r2,734
1000b128:	1000b2ac 	andhi	zero,r2,714
1000b12c:	1000b7a8 	cmpgeui	zero,r2,734
1000b130:	1000b7a8 	cmpgeui	zero,r2,734
1000b134:	1000b1f8 	rdprs	zero,r2,711
1000b138:	d9002417 	ldw	r4,144(sp)
1000b13c:	d9402417 	ldw	r5,144(sp)
1000b140:	21000017 	ldw	r4,0(r4)
1000b144:	28800104 	addi	r2,r5,4
1000b148:	d9002515 	stw	r4,148(sp)
1000b14c:	20032b0e 	bge	r4,zero,1000bdfc <___svfiprintf_internal_r+0xf7c>
1000b150:	d8c02517 	ldw	r3,148(sp)
1000b154:	d8802415 	stw	r2,144(sp)
1000b158:	00c7c83a 	sub	r3,zero,r3
1000b15c:	d8c02515 	stw	r3,148(sp)
1000b160:	8c400114 	ori	r17,r17,4
1000b164:	98c00007 	ldb	r3,0(r19)
1000b168:	003f9106 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b16c:	00800c04 	movi	r2,48
1000b170:	d9402417 	ldw	r5,144(sp)
1000b174:	d9002017 	ldw	r4,128(sp)
1000b178:	d8801d05 	stb	r2,116(sp)
1000b17c:	00801e04 	movi	r2,120
1000b180:	d8801d45 	stb	r2,117(sp)
1000b184:	d8001d85 	stb	zero,118(sp)
1000b188:	b811883a 	mov	r8,r23
1000b18c:	28c00104 	addi	r3,r5,4
1000b190:	2c800017 	ldw	r18,0(r5)
1000b194:	0029883a 	mov	r20,zero
1000b198:	88800094 	ori	r2,r17,2
1000b19c:	20036316 	blt	r4,zero,1000bf2c <___svfiprintf_internal_r+0x10ac>
1000b1a0:	00bfdfc4 	movi	r2,-129
1000b1a4:	88a0703a 	and	r16,r17,r2
1000b1a8:	d8c02415 	stw	r3,144(sp)
1000b1ac:	84000094 	ori	r16,r16,2
1000b1b0:	90031c26 	beq	r18,zero,1000be24 <___svfiprintf_internal_r+0xfa4>
1000b1b4:	01440074 	movhi	r5,4097
1000b1b8:	29504a04 	addi	r5,r5,16680
1000b1bc:	002b883a 	mov	r21,zero
1000b1c0:	d9402915 	stw	r5,164(sp)
1000b1c4:	00002906 	br	1000b26c <___svfiprintf_internal_r+0x3ec>
1000b1c8:	8c400054 	ori	r17,r17,1
1000b1cc:	98c00007 	ldb	r3,0(r19)
1000b1d0:	003f7706 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b1d4:	a8803fcc 	andi	r2,r21,255
1000b1d8:	1080201c 	xori	r2,r2,128
1000b1dc:	10bfe004 	addi	r2,r2,-128
1000b1e0:	10032a1e 	bne	r2,zero,1000be8c <___svfiprintf_internal_r+0x100c>
1000b1e4:	00c00044 	movi	r3,1
1000b1e8:	d8c02105 	stb	r3,132(sp)
1000b1ec:	05400804 	movi	r21,32
1000b1f0:	98c00007 	ldb	r3,0(r19)
1000b1f4:	003f6e06 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b1f8:	8821883a 	mov	r16,r17
1000b1fc:	dc402103 	ldbu	r17,132(sp)
1000b200:	b811883a 	mov	r8,r23
1000b204:	8c403fcc 	andi	r17,r17,255
1000b208:	8803f01e 	bne	r17,zero,1000c1cc <___svfiprintf_internal_r+0x134c>
1000b20c:	00840074 	movhi	r2,4097
1000b210:	10904a04 	addi	r2,r2,16680
1000b214:	d8802915 	stw	r2,164(sp)
1000b218:	8080080c 	andi	r2,r16,32
1000b21c:	1000cd26 	beq	r2,zero,1000b554 <___svfiprintf_internal_r+0x6d4>
1000b220:	d9002417 	ldw	r4,144(sp)
1000b224:	24800017 	ldw	r18,0(r4)
1000b228:	25000117 	ldw	r20,4(r4)
1000b22c:	21000204 	addi	r4,r4,8
1000b230:	d9002415 	stw	r4,144(sp)
1000b234:	8080004c 	andi	r2,r16,1
1000b238:	1002c726 	beq	r2,zero,1000bd58 <___svfiprintf_internal_r+0xed8>
1000b23c:	9504b03a 	or	r2,r18,r20
1000b240:	1003061e 	bne	r2,zero,1000be5c <___svfiprintf_internal_r+0xfdc>
1000b244:	d9002017 	ldw	r4,128(sp)
1000b248:	d8001d85 	stb	zero,118(sp)
1000b24c:	20033e16 	blt	r4,zero,1000bf48 <___svfiprintf_internal_r+0x10c8>
1000b250:	00bfdfc4 	movi	r2,-129
1000b254:	80a0703a 	and	r16,r16,r2
1000b258:	d9402017 	ldw	r5,128(sp)
1000b25c:	002b883a 	mov	r21,zero
1000b260:	28002826 	beq	r5,zero,1000b304 <___svfiprintf_internal_r+0x484>
1000b264:	0025883a 	mov	r18,zero
1000b268:	0029883a 	mov	r20,zero
1000b26c:	d9002917 	ldw	r4,164(sp)
1000b270:	dc401a04 	addi	r17,sp,104
1000b274:	908003cc 	andi	r2,r18,15
1000b278:	a006973a 	slli	r3,r20,28
1000b27c:	2085883a 	add	r2,r4,r2
1000b280:	9024d13a 	srli	r18,r18,4
1000b284:	10800003 	ldbu	r2,0(r2)
1000b288:	a028d13a 	srli	r20,r20,4
1000b28c:	8c7fffc4 	addi	r17,r17,-1
1000b290:	1ca4b03a 	or	r18,r3,r18
1000b294:	88800005 	stb	r2,0(r17)
1000b298:	9504b03a 	or	r2,r18,r20
1000b29c:	103ff51e 	bne	r2,zero,1000b274 <__alt_data_end+0xf800b274>
1000b2a0:	d8801e17 	ldw	r2,120(sp)
1000b2a4:	1469c83a 	sub	r20,r2,r17
1000b2a8:	00001906 	br	1000b310 <___svfiprintf_internal_r+0x490>
1000b2ac:	8821883a 	mov	r16,r17
1000b2b0:	dc402103 	ldbu	r17,132(sp)
1000b2b4:	b811883a 	mov	r8,r23
1000b2b8:	8c403fcc 	andi	r17,r17,255
1000b2bc:	8803d01e 	bne	r17,zero,1000c200 <___svfiprintf_internal_r+0x1380>
1000b2c0:	8080080c 	andi	r2,r16,32
1000b2c4:	10016126 	beq	r2,zero,1000b84c <___svfiprintf_internal_r+0x9cc>
1000b2c8:	d9002417 	ldw	r4,144(sp)
1000b2cc:	d9402017 	ldw	r5,128(sp)
1000b2d0:	d8001d85 	stb	zero,118(sp)
1000b2d4:	20c00204 	addi	r3,r4,8
1000b2d8:	24800017 	ldw	r18,0(r4)
1000b2dc:	25000117 	ldw	r20,4(r4)
1000b2e0:	28030f16 	blt	r5,zero,1000bf20 <___svfiprintf_internal_r+0x10a0>
1000b2e4:	013fdfc4 	movi	r4,-129
1000b2e8:	9504b03a 	or	r2,r18,r20
1000b2ec:	d8c02415 	stw	r3,144(sp)
1000b2f0:	8120703a 	and	r16,r16,r4
1000b2f4:	002b883a 	mov	r21,zero
1000b2f8:	1000cd1e 	bne	r2,zero,1000b630 <___svfiprintf_internal_r+0x7b0>
1000b2fc:	d8c02017 	ldw	r3,128(sp)
1000b300:	1803141e 	bne	r3,zero,1000bf54 <___svfiprintf_internal_r+0x10d4>
1000b304:	d8002015 	stw	zero,128(sp)
1000b308:	0029883a 	mov	r20,zero
1000b30c:	dc401a04 	addi	r17,sp,104
1000b310:	dc802017 	ldw	r18,128(sp)
1000b314:	9500010e 	bge	r18,r20,1000b31c <___svfiprintf_internal_r+0x49c>
1000b318:	a025883a 	mov	r18,r20
1000b31c:	ad403fcc 	andi	r21,r21,255
1000b320:	ad40201c 	xori	r21,r21,128
1000b324:	ad7fe004 	addi	r21,r21,-128
1000b328:	a8003f26 	beq	r21,zero,1000b428 <___svfiprintf_internal_r+0x5a8>
1000b32c:	94800044 	addi	r18,r18,1
1000b330:	00003d06 	br	1000b428 <___svfiprintf_internal_r+0x5a8>
1000b334:	00c00044 	movi	r3,1
1000b338:	d8c02105 	stb	r3,132(sp)
1000b33c:	05400ac4 	movi	r21,43
1000b340:	98c00007 	ldb	r3,0(r19)
1000b344:	003f1a06 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b348:	8821883a 	mov	r16,r17
1000b34c:	dc402103 	ldbu	r17,132(sp)
1000b350:	b811883a 	mov	r8,r23
1000b354:	8c403fcc 	andi	r17,r17,255
1000b358:	8803a71e 	bne	r17,zero,1000c1f8 <___svfiprintf_internal_r+0x1378>
1000b35c:	8080080c 	andi	r2,r16,32
1000b360:	10015726 	beq	r2,zero,1000b8c0 <___svfiprintf_internal_r+0xa40>
1000b364:	d8c02417 	ldw	r3,144(sp)
1000b368:	d9002017 	ldw	r4,128(sp)
1000b36c:	d8001d85 	stb	zero,118(sp)
1000b370:	18800204 	addi	r2,r3,8
1000b374:	1c800017 	ldw	r18,0(r3)
1000b378:	1d000117 	ldw	r20,4(r3)
1000b37c:	2002db16 	blt	r4,zero,1000beec <___svfiprintf_internal_r+0x106c>
1000b380:	013fdfc4 	movi	r4,-129
1000b384:	9506b03a 	or	r3,r18,r20
1000b388:	d8802415 	stw	r2,144(sp)
1000b38c:	8120703a 	and	r16,r16,r4
1000b390:	18015826 	beq	r3,zero,1000b8f4 <___svfiprintf_internal_r+0xa74>
1000b394:	002b883a 	mov	r21,zero
1000b398:	dc401a04 	addi	r17,sp,104
1000b39c:	9006d0fa 	srli	r3,r18,3
1000b3a0:	a008977a 	slli	r4,r20,29
1000b3a4:	a028d0fa 	srli	r20,r20,3
1000b3a8:	948001cc 	andi	r18,r18,7
1000b3ac:	90800c04 	addi	r2,r18,48
1000b3b0:	8c7fffc4 	addi	r17,r17,-1
1000b3b4:	20e4b03a 	or	r18,r4,r3
1000b3b8:	88800005 	stb	r2,0(r17)
1000b3bc:	9506b03a 	or	r3,r18,r20
1000b3c0:	183ff61e 	bne	r3,zero,1000b39c <__alt_data_end+0xf800b39c>
1000b3c4:	80c0004c 	andi	r3,r16,1
1000b3c8:	18028926 	beq	r3,zero,1000bdf0 <___svfiprintf_internal_r+0xf70>
1000b3cc:	10803fcc 	andi	r2,r2,255
1000b3d0:	1080201c 	xori	r2,r2,128
1000b3d4:	10bfe004 	addi	r2,r2,-128
1000b3d8:	00c00c04 	movi	r3,48
1000b3dc:	10ffb026 	beq	r2,r3,1000b2a0 <__alt_data_end+0xf800b2a0>
1000b3e0:	88ffffc5 	stb	r3,-1(r17)
1000b3e4:	d8c01e17 	ldw	r3,120(sp)
1000b3e8:	88bfffc4 	addi	r2,r17,-1
1000b3ec:	1023883a 	mov	r17,r2
1000b3f0:	18a9c83a 	sub	r20,r3,r2
1000b3f4:	003fc606 	br	1000b310 <__alt_data_end+0xf800b310>
1000b3f8:	d8c02417 	ldw	r3,144(sp)
1000b3fc:	04800044 	movi	r18,1
1000b400:	8821883a 	mov	r16,r17
1000b404:	18800017 	ldw	r2,0(r3)
1000b408:	18c00104 	addi	r3,r3,4
1000b40c:	b811883a 	mov	r8,r23
1000b410:	d8001d85 	stb	zero,118(sp)
1000b414:	d8801005 	stb	r2,64(sp)
1000b418:	d8c02415 	stw	r3,144(sp)
1000b41c:	9029883a 	mov	r20,r18
1000b420:	dc401004 	addi	r17,sp,64
1000b424:	d8002015 	stw	zero,128(sp)
1000b428:	80c0008c 	andi	r3,r16,2
1000b42c:	d8c02115 	stw	r3,132(sp)
1000b430:	18000126 	beq	r3,zero,1000b438 <___svfiprintf_internal_r+0x5b8>
1000b434:	94800084 	addi	r18,r18,2
1000b438:	80c0210c 	andi	r3,r16,132
1000b43c:	d8c02215 	stw	r3,136(sp)
1000b440:	1801321e 	bne	r3,zero,1000b90c <___svfiprintf_internal_r+0xa8c>
1000b444:	d9002517 	ldw	r4,148(sp)
1000b448:	24b9c83a 	sub	fp,r4,r18
1000b44c:	07012f0e 	bge	zero,fp,1000b90c <___svfiprintf_internal_r+0xa8c>
1000b450:	02400404 	movi	r9,16
1000b454:	d8c01c17 	ldw	r3,112(sp)
1000b458:	d8801b17 	ldw	r2,108(sp)
1000b45c:	4f03250e 	bge	r9,fp,1000c0f4 <___svfiprintf_internal_r+0x1274>
1000b460:	01040074 	movhi	r4,4097
1000b464:	2110b704 	addi	r4,r4,17116
1000b468:	dc002a15 	stw	r16,168(sp)
1000b46c:	dc402b15 	stw	r17,172(sp)
1000b470:	d9002815 	stw	r4,160(sp)
1000b474:	e023883a 	mov	r17,fp
1000b478:	482f883a 	mov	r23,r9
1000b47c:	9839883a 	mov	fp,r19
1000b480:	054001c4 	movi	r21,7
1000b484:	9027883a 	mov	r19,r18
1000b488:	dc002717 	ldw	r16,156(sp)
1000b48c:	dc802317 	ldw	r18,140(sp)
1000b490:	00000306 	br	1000b4a0 <___svfiprintf_internal_r+0x620>
1000b494:	8c7ffc04 	addi	r17,r17,-16
1000b498:	42000204 	addi	r8,r8,8
1000b49c:	bc40130e 	bge	r23,r17,1000b4ec <___svfiprintf_internal_r+0x66c>
1000b4a0:	01440074 	movhi	r5,4097
1000b4a4:	18c00404 	addi	r3,r3,16
1000b4a8:	10800044 	addi	r2,r2,1
1000b4ac:	2950b704 	addi	r5,r5,17116
1000b4b0:	41400015 	stw	r5,0(r8)
1000b4b4:	45c00115 	stw	r23,4(r8)
1000b4b8:	d8c01c15 	stw	r3,112(sp)
1000b4bc:	d8801b15 	stw	r2,108(sp)
1000b4c0:	a8bff40e 	bge	r21,r2,1000b494 <__alt_data_end+0xf800b494>
1000b4c4:	d9801a04 	addi	r6,sp,104
1000b4c8:	900b883a 	mov	r5,r18
1000b4cc:	8009883a 	mov	r4,r16
1000b4d0:	000acb00 	call	1000acb0 <__ssprint_r>
1000b4d4:	1001aa1e 	bne	r2,zero,1000bb80 <___svfiprintf_internal_r+0xd00>
1000b4d8:	8c7ffc04 	addi	r17,r17,-16
1000b4dc:	d8c01c17 	ldw	r3,112(sp)
1000b4e0:	d8801b17 	ldw	r2,108(sp)
1000b4e4:	d811883a 	mov	r8,sp
1000b4e8:	bc7fed16 	blt	r23,r17,1000b4a0 <__alt_data_end+0xf800b4a0>
1000b4ec:	9825883a 	mov	r18,r19
1000b4f0:	dc002a17 	ldw	r16,168(sp)
1000b4f4:	e027883a 	mov	r19,fp
1000b4f8:	8839883a 	mov	fp,r17
1000b4fc:	dc402b17 	ldw	r17,172(sp)
1000b500:	d9002817 	ldw	r4,160(sp)
1000b504:	e0c7883a 	add	r3,fp,r3
1000b508:	10800044 	addi	r2,r2,1
1000b50c:	41000015 	stw	r4,0(r8)
1000b510:	47000115 	stw	fp,4(r8)
1000b514:	d8c01c15 	stw	r3,112(sp)
1000b518:	d8801b15 	stw	r2,108(sp)
1000b51c:	010001c4 	movi	r4,7
1000b520:	20821616 	blt	r4,r2,1000bd7c <___svfiprintf_internal_r+0xefc>
1000b524:	42000204 	addi	r8,r8,8
1000b528:	0000fa06 	br	1000b914 <___svfiprintf_internal_r+0xa94>
1000b52c:	8821883a 	mov	r16,r17
1000b530:	dc402103 	ldbu	r17,132(sp)
1000b534:	b811883a 	mov	r8,r23
1000b538:	8c403fcc 	andi	r17,r17,255
1000b53c:	8803361e 	bne	r17,zero,1000c218 <___svfiprintf_internal_r+0x1398>
1000b540:	01440074 	movhi	r5,4097
1000b544:	29504504 	addi	r5,r5,16660
1000b548:	d9402915 	stw	r5,164(sp)
1000b54c:	8080080c 	andi	r2,r16,32
1000b550:	103f331e 	bne	r2,zero,1000b220 <__alt_data_end+0xf800b220>
1000b554:	8080040c 	andi	r2,r16,16
1000b558:	1002551e 	bne	r2,zero,1000beb0 <___svfiprintf_internal_r+0x1030>
1000b55c:	8080100c 	andi	r2,r16,64
1000b560:	1002a626 	beq	r2,zero,1000bffc <___svfiprintf_internal_r+0x117c>
1000b564:	d8802417 	ldw	r2,144(sp)
1000b568:	0029883a 	mov	r20,zero
1000b56c:	1480000b 	ldhu	r18,0(r2)
1000b570:	10800104 	addi	r2,r2,4
1000b574:	d8802415 	stw	r2,144(sp)
1000b578:	003f2e06 	br	1000b234 <__alt_data_end+0xf800b234>
1000b57c:	8821883a 	mov	r16,r17
1000b580:	dc402103 	ldbu	r17,132(sp)
1000b584:	b811883a 	mov	r8,r23
1000b588:	8c403fcc 	andi	r17,r17,255
1000b58c:	88030b1e 	bne	r17,zero,1000c1bc <___svfiprintf_internal_r+0x133c>
1000b590:	8080080c 	andi	r2,r16,32
1000b594:	1002271e 	bne	r2,zero,1000be34 <___svfiprintf_internal_r+0xfb4>
1000b598:	8080040c 	andi	r2,r16,16
1000b59c:	10028e26 	beq	r2,zero,1000bfd8 <___svfiprintf_internal_r+0x1158>
1000b5a0:	d8c02417 	ldw	r3,144(sp)
1000b5a4:	d9002617 	ldw	r4,152(sp)
1000b5a8:	18800017 	ldw	r2,0(r3)
1000b5ac:	18c00104 	addi	r3,r3,4
1000b5b0:	d8c02415 	stw	r3,144(sp)
1000b5b4:	11000015 	stw	r4,0(r2)
1000b5b8:	003e5306 	br	1000af08 <__alt_data_end+0xf800af08>
1000b5bc:	98c00007 	ldb	r3,0(r19)
1000b5c0:	01401b04 	movi	r5,108
1000b5c4:	19424f26 	beq	r3,r5,1000bf04 <___svfiprintf_internal_r+0x1084>
1000b5c8:	8c400414 	ori	r17,r17,16
1000b5cc:	003e7806 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b5d0:	8c401014 	ori	r17,r17,64
1000b5d4:	98c00007 	ldb	r3,0(r19)
1000b5d8:	003e7506 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b5dc:	8821883a 	mov	r16,r17
1000b5e0:	dc402103 	ldbu	r17,132(sp)
1000b5e4:	b811883a 	mov	r8,r23
1000b5e8:	8c403fcc 	andi	r17,r17,255
1000b5ec:	8802fe1e 	bne	r17,zero,1000c1e8 <___svfiprintf_internal_r+0x1368>
1000b5f0:	8080080c 	andi	r2,r16,32
1000b5f4:	10004626 	beq	r2,zero,1000b710 <___svfiprintf_internal_r+0x890>
1000b5f8:	d9002417 	ldw	r4,144(sp)
1000b5fc:	20800117 	ldw	r2,4(r4)
1000b600:	24800017 	ldw	r18,0(r4)
1000b604:	21000204 	addi	r4,r4,8
1000b608:	d9002415 	stw	r4,144(sp)
1000b60c:	1029883a 	mov	r20,r2
1000b610:	10004a16 	blt	r2,zero,1000b73c <___svfiprintf_internal_r+0x8bc>
1000b614:	d9002017 	ldw	r4,128(sp)
1000b618:	dd401d83 	ldbu	r21,118(sp)
1000b61c:	2001eb16 	blt	r4,zero,1000bdcc <___svfiprintf_internal_r+0xf4c>
1000b620:	00ffdfc4 	movi	r3,-129
1000b624:	9504b03a 	or	r2,r18,r20
1000b628:	80e0703a 	and	r16,r16,r3
1000b62c:	103f3326 	beq	r2,zero,1000b2fc <__alt_data_end+0xf800b2fc>
1000b630:	a0009426 	beq	r20,zero,1000b884 <___svfiprintf_internal_r+0xa04>
1000b634:	dc401a04 	addi	r17,sp,104
1000b638:	402f883a 	mov	r23,r8
1000b63c:	9009883a 	mov	r4,r18
1000b640:	a00b883a 	mov	r5,r20
1000b644:	01800284 	movi	r6,10
1000b648:	000f883a 	mov	r7,zero
1000b64c:	000e96c0 	call	1000e96c <__umoddi3>
1000b650:	10800c04 	addi	r2,r2,48
1000b654:	8c7fffc4 	addi	r17,r17,-1
1000b658:	9009883a 	mov	r4,r18
1000b65c:	a00b883a 	mov	r5,r20
1000b660:	88800005 	stb	r2,0(r17)
1000b664:	01800284 	movi	r6,10
1000b668:	000f883a 	mov	r7,zero
1000b66c:	000e3700 	call	1000e370 <__udivdi3>
1000b670:	1025883a 	mov	r18,r2
1000b674:	10c4b03a 	or	r2,r2,r3
1000b678:	1829883a 	mov	r20,r3
1000b67c:	103fef1e 	bne	r2,zero,1000b63c <__alt_data_end+0xf800b63c>
1000b680:	d9001e17 	ldw	r4,120(sp)
1000b684:	b811883a 	mov	r8,r23
1000b688:	2469c83a 	sub	r20,r4,r17
1000b68c:	003f2006 	br	1000b310 <__alt_data_end+0xf800b310>
1000b690:	d8802417 	ldw	r2,144(sp)
1000b694:	8821883a 	mov	r16,r17
1000b698:	d8001d85 	stb	zero,118(sp)
1000b69c:	14400017 	ldw	r17,0(r2)
1000b6a0:	b811883a 	mov	r8,r23
1000b6a4:	15c00104 	addi	r23,r2,4
1000b6a8:	88026c26 	beq	r17,zero,1000c05c <___svfiprintf_internal_r+0x11dc>
1000b6ac:	d8c02017 	ldw	r3,128(sp)
1000b6b0:	18025f16 	blt	r3,zero,1000c030 <___svfiprintf_internal_r+0x11b0>
1000b6b4:	180d883a 	mov	r6,r3
1000b6b8:	000b883a 	mov	r5,zero
1000b6bc:	8809883a 	mov	r4,r17
1000b6c0:	da002d15 	stw	r8,180(sp)
1000b6c4:	0008f040 	call	10008f04 <memchr>
1000b6c8:	da002d17 	ldw	r8,180(sp)
1000b6cc:	1002a526 	beq	r2,zero,1000c164 <___svfiprintf_internal_r+0x12e4>
1000b6d0:	1469c83a 	sub	r20,r2,r17
1000b6d4:	dd401d83 	ldbu	r21,118(sp)
1000b6d8:	ddc02415 	stw	r23,144(sp)
1000b6dc:	d8002015 	stw	zero,128(sp)
1000b6e0:	003f0b06 	br	1000b310 <__alt_data_end+0xf800b310>
1000b6e4:	8c400814 	ori	r17,r17,32
1000b6e8:	98c00007 	ldb	r3,0(r19)
1000b6ec:	003e3006 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b6f0:	8821883a 	mov	r16,r17
1000b6f4:	dc402103 	ldbu	r17,132(sp)
1000b6f8:	b811883a 	mov	r8,r23
1000b6fc:	8c403fcc 	andi	r17,r17,255
1000b700:	8802b01e 	bne	r17,zero,1000c1c4 <___svfiprintf_internal_r+0x1344>
1000b704:	84000414 	ori	r16,r16,16
1000b708:	8080080c 	andi	r2,r16,32
1000b70c:	103fba1e 	bne	r2,zero,1000b5f8 <__alt_data_end+0xf800b5f8>
1000b710:	8080040c 	andi	r2,r16,16
1000b714:	1001df1e 	bne	r2,zero,1000be94 <___svfiprintf_internal_r+0x1014>
1000b718:	8080100c 	andi	r2,r16,64
1000b71c:	10023d26 	beq	r2,zero,1000c014 <___svfiprintf_internal_r+0x1194>
1000b720:	d8802417 	ldw	r2,144(sp)
1000b724:	1480000f 	ldh	r18,0(r2)
1000b728:	10800104 	addi	r2,r2,4
1000b72c:	d8802415 	stw	r2,144(sp)
1000b730:	9029d7fa 	srai	r20,r18,31
1000b734:	a005883a 	mov	r2,r20
1000b738:	103fb60e 	bge	r2,zero,1000b614 <__alt_data_end+0xf800b614>
1000b73c:	d9402017 	ldw	r5,128(sp)
1000b740:	04a5c83a 	sub	r18,zero,r18
1000b744:	05400b44 	movi	r21,45
1000b748:	9004c03a 	cmpne	r2,r18,zero
1000b74c:	0529c83a 	sub	r20,zero,r20
1000b750:	dd401d85 	stb	r21,118(sp)
1000b754:	a0a9c83a 	sub	r20,r20,r2
1000b758:	28026c16 	blt	r5,zero,1000c10c <___svfiprintf_internal_r+0x128c>
1000b75c:	00bfdfc4 	movi	r2,-129
1000b760:	80a0703a 	and	r16,r16,r2
1000b764:	a03fb31e 	bne	r20,zero,1000b634 <__alt_data_end+0xf800b634>
1000b768:	00004606 	br	1000b884 <___svfiprintf_internal_r+0xa04>
1000b76c:	9839883a 	mov	fp,r19
1000b770:	d8002515 	stw	zero,148(sp)
1000b774:	1c3ff404 	addi	r16,r3,-48
1000b778:	0009883a 	mov	r4,zero
1000b77c:	01400284 	movi	r5,10
1000b780:	0000fd00 	call	10000fd0 <__mulsi3>
1000b784:	e0c00007 	ldb	r3,0(fp)
1000b788:	8089883a 	add	r4,r16,r2
1000b78c:	9cc00044 	addi	r19,r19,1
1000b790:	1c3ff404 	addi	r16,r3,-48
1000b794:	9839883a 	mov	fp,r19
1000b798:	a43ff82e 	bgeu	r20,r16,1000b77c <__alt_data_end+0xf800b77c>
1000b79c:	d9002515 	stw	r4,148(sp)
1000b7a0:	18bff804 	addi	r2,r3,-32
1000b7a4:	90be052e 	bgeu	r18,r2,1000afbc <__alt_data_end+0xf800afbc>
1000b7a8:	8821883a 	mov	r16,r17
1000b7ac:	dc402103 	ldbu	r17,132(sp)
1000b7b0:	b811883a 	mov	r8,r23
1000b7b4:	8c403fcc 	andi	r17,r17,255
1000b7b8:	88028d1e 	bne	r17,zero,1000c1f0 <___svfiprintf_internal_r+0x1370>
1000b7bc:	1800ea26 	beq	r3,zero,1000bb68 <___svfiprintf_internal_r+0xce8>
1000b7c0:	04800044 	movi	r18,1
1000b7c4:	d8c01005 	stb	r3,64(sp)
1000b7c8:	d8001d85 	stb	zero,118(sp)
1000b7cc:	9029883a 	mov	r20,r18
1000b7d0:	dc401004 	addi	r17,sp,64
1000b7d4:	003f1306 	br	1000b424 <__alt_data_end+0xf800b424>
1000b7d8:	8c402014 	ori	r17,r17,128
1000b7dc:	98c00007 	ldb	r3,0(r19)
1000b7e0:	003df306 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000b7e4:	98c00007 	ldb	r3,0(r19)
1000b7e8:	01000a84 	movi	r4,42
1000b7ec:	9f000044 	addi	fp,r19,1
1000b7f0:	19026326 	beq	r3,r4,1000c180 <___svfiprintf_internal_r+0x1300>
1000b7f4:	1c3ff404 	addi	r16,r3,-48
1000b7f8:	0009883a 	mov	r4,zero
1000b7fc:	a4025636 	bltu	r20,r16,1000c158 <___svfiprintf_internal_r+0x12d8>
1000b800:	01400284 	movi	r5,10
1000b804:	0000fd00 	call	10000fd0 <__mulsi3>
1000b808:	e0c00007 	ldb	r3,0(fp)
1000b80c:	1409883a 	add	r4,r2,r16
1000b810:	e4c00044 	addi	r19,fp,1
1000b814:	1c3ff404 	addi	r16,r3,-48
1000b818:	9839883a 	mov	fp,r19
1000b81c:	a43ff82e 	bgeu	r20,r16,1000b800 <__alt_data_end+0xf800b800>
1000b820:	20020c16 	blt	r4,zero,1000c054 <___svfiprintf_internal_r+0x11d4>
1000b824:	d9002015 	stw	r4,128(sp)
1000b828:	003de206 	br	1000afb4 <__alt_data_end+0xf800afb4>
1000b82c:	8821883a 	mov	r16,r17
1000b830:	dc402103 	ldbu	r17,132(sp)
1000b834:	b811883a 	mov	r8,r23
1000b838:	8c403fcc 	andi	r17,r17,255
1000b83c:	8802721e 	bne	r17,zero,1000c208 <___svfiprintf_internal_r+0x1388>
1000b840:	84000414 	ori	r16,r16,16
1000b844:	8080080c 	andi	r2,r16,32
1000b848:	103e9f1e 	bne	r2,zero,1000b2c8 <__alt_data_end+0xf800b2c8>
1000b84c:	8080040c 	andi	r2,r16,16
1000b850:	10015326 	beq	r2,zero,1000bda0 <___svfiprintf_internal_r+0xf20>
1000b854:	d8c02417 	ldw	r3,144(sp)
1000b858:	d9002017 	ldw	r4,128(sp)
1000b85c:	d8001d85 	stb	zero,118(sp)
1000b860:	18800104 	addi	r2,r3,4
1000b864:	1c800017 	ldw	r18,0(r3)
1000b868:	0029883a 	mov	r20,zero
1000b86c:	20015516 	blt	r4,zero,1000bdc4 <___svfiprintf_internal_r+0xf44>
1000b870:	00ffdfc4 	movi	r3,-129
1000b874:	d8802415 	stw	r2,144(sp)
1000b878:	80e0703a 	and	r16,r16,r3
1000b87c:	002b883a 	mov	r21,zero
1000b880:	903e9e26 	beq	r18,zero,1000b2fc <__alt_data_end+0xf800b2fc>
1000b884:	00800244 	movi	r2,9
1000b888:	14bf6a36 	bltu	r2,r18,1000b634 <__alt_data_end+0xf800b634>
1000b88c:	94800c04 	addi	r18,r18,48
1000b890:	dc8019c5 	stb	r18,103(sp)
1000b894:	dd002c17 	ldw	r20,176(sp)
1000b898:	dc4019c4 	addi	r17,sp,103
1000b89c:	003e9c06 	br	1000b310 <__alt_data_end+0xf800b310>
1000b8a0:	8821883a 	mov	r16,r17
1000b8a4:	dc402103 	ldbu	r17,132(sp)
1000b8a8:	b811883a 	mov	r8,r23
1000b8ac:	8c403fcc 	andi	r17,r17,255
1000b8b0:	8802571e 	bne	r17,zero,1000c210 <___svfiprintf_internal_r+0x1390>
1000b8b4:	84000414 	ori	r16,r16,16
1000b8b8:	8080080c 	andi	r2,r16,32
1000b8bc:	103ea91e 	bne	r2,zero,1000b364 <__alt_data_end+0xf800b364>
1000b8c0:	8080040c 	andi	r2,r16,16
1000b8c4:	10018026 	beq	r2,zero,1000bec8 <___svfiprintf_internal_r+0x1048>
1000b8c8:	d9402417 	ldw	r5,144(sp)
1000b8cc:	d8c02017 	ldw	r3,128(sp)
1000b8d0:	d8001d85 	stb	zero,118(sp)
1000b8d4:	28800104 	addi	r2,r5,4
1000b8d8:	2c800017 	ldw	r18,0(r5)
1000b8dc:	0029883a 	mov	r20,zero
1000b8e0:	18018216 	blt	r3,zero,1000beec <___svfiprintf_internal_r+0x106c>
1000b8e4:	00ffdfc4 	movi	r3,-129
1000b8e8:	d8802415 	stw	r2,144(sp)
1000b8ec:	80e0703a 	and	r16,r16,r3
1000b8f0:	903ea81e 	bne	r18,zero,1000b394 <__alt_data_end+0xf800b394>
1000b8f4:	d8802017 	ldw	r2,128(sp)
1000b8f8:	002b883a 	mov	r21,zero
1000b8fc:	1001f226 	beq	r2,zero,1000c0c8 <___svfiprintf_internal_r+0x1248>
1000b900:	0025883a 	mov	r18,zero
1000b904:	0029883a 	mov	r20,zero
1000b908:	003ea306 	br	1000b398 <__alt_data_end+0xf800b398>
1000b90c:	d8c01c17 	ldw	r3,112(sp)
1000b910:	d8801b17 	ldw	r2,108(sp)
1000b914:	d9001d87 	ldb	r4,118(sp)
1000b918:	20000b26 	beq	r4,zero,1000b948 <___svfiprintf_internal_r+0xac8>
1000b91c:	d9001d84 	addi	r4,sp,118
1000b920:	18c00044 	addi	r3,r3,1
1000b924:	10800044 	addi	r2,r2,1
1000b928:	41000015 	stw	r4,0(r8)
1000b92c:	01000044 	movi	r4,1
1000b930:	41000115 	stw	r4,4(r8)
1000b934:	d8c01c15 	stw	r3,112(sp)
1000b938:	d8801b15 	stw	r2,108(sp)
1000b93c:	010001c4 	movi	r4,7
1000b940:	2080f316 	blt	r4,r2,1000bd10 <___svfiprintf_internal_r+0xe90>
1000b944:	42000204 	addi	r8,r8,8
1000b948:	d9402117 	ldw	r5,132(sp)
1000b94c:	28000b26 	beq	r5,zero,1000b97c <___svfiprintf_internal_r+0xafc>
1000b950:	d9001d04 	addi	r4,sp,116
1000b954:	18c00084 	addi	r3,r3,2
1000b958:	10800044 	addi	r2,r2,1
1000b95c:	41000015 	stw	r4,0(r8)
1000b960:	01000084 	movi	r4,2
1000b964:	41000115 	stw	r4,4(r8)
1000b968:	d8c01c15 	stw	r3,112(sp)
1000b96c:	d8801b15 	stw	r2,108(sp)
1000b970:	010001c4 	movi	r4,7
1000b974:	2080ef16 	blt	r4,r2,1000bd34 <___svfiprintf_internal_r+0xeb4>
1000b978:	42000204 	addi	r8,r8,8
1000b97c:	d9402217 	ldw	r5,136(sp)
1000b980:	01002004 	movi	r4,128
1000b984:	29008f26 	beq	r5,r4,1000bbc4 <___svfiprintf_internal_r+0xd44>
1000b988:	d9002017 	ldw	r4,128(sp)
1000b98c:	252fc83a 	sub	r23,r4,r20
1000b990:	05c0310e 	bge	zero,r23,1000ba58 <___svfiprintf_internal_r+0xbd8>
1000b994:	07000404 	movi	fp,16
1000b998:	e5c17d0e 	bge	fp,r23,1000bf90 <___svfiprintf_internal_r+0x1110>
1000b99c:	01040074 	movhi	r4,4097
1000b9a0:	2110b304 	addi	r4,r4,17100
1000b9a4:	dc002015 	stw	r16,128(sp)
1000b9a8:	dc402215 	stw	r17,136(sp)
1000b9ac:	d9002115 	stw	r4,132(sp)
1000b9b0:	b823883a 	mov	r17,r23
1000b9b4:	054001c4 	movi	r21,7
1000b9b8:	982f883a 	mov	r23,r19
1000b9bc:	dc002717 	ldw	r16,156(sp)
1000b9c0:	9027883a 	mov	r19,r18
1000b9c4:	dc802317 	ldw	r18,140(sp)
1000b9c8:	00000306 	br	1000b9d8 <___svfiprintf_internal_r+0xb58>
1000b9cc:	8c7ffc04 	addi	r17,r17,-16
1000b9d0:	42000204 	addi	r8,r8,8
1000b9d4:	e440110e 	bge	fp,r17,1000ba1c <___svfiprintf_internal_r+0xb9c>
1000b9d8:	18c00404 	addi	r3,r3,16
1000b9dc:	10800044 	addi	r2,r2,1
1000b9e0:	45800015 	stw	r22,0(r8)
1000b9e4:	47000115 	stw	fp,4(r8)
1000b9e8:	d8c01c15 	stw	r3,112(sp)
1000b9ec:	d8801b15 	stw	r2,108(sp)
1000b9f0:	a8bff60e 	bge	r21,r2,1000b9cc <__alt_data_end+0xf800b9cc>
1000b9f4:	d9801a04 	addi	r6,sp,104
1000b9f8:	900b883a 	mov	r5,r18
1000b9fc:	8009883a 	mov	r4,r16
1000ba00:	000acb00 	call	1000acb0 <__ssprint_r>
1000ba04:	10005e1e 	bne	r2,zero,1000bb80 <___svfiprintf_internal_r+0xd00>
1000ba08:	8c7ffc04 	addi	r17,r17,-16
1000ba0c:	d8c01c17 	ldw	r3,112(sp)
1000ba10:	d8801b17 	ldw	r2,108(sp)
1000ba14:	d811883a 	mov	r8,sp
1000ba18:	e47fef16 	blt	fp,r17,1000b9d8 <__alt_data_end+0xf800b9d8>
1000ba1c:	9825883a 	mov	r18,r19
1000ba20:	dc002017 	ldw	r16,128(sp)
1000ba24:	b827883a 	mov	r19,r23
1000ba28:	882f883a 	mov	r23,r17
1000ba2c:	dc402217 	ldw	r17,136(sp)
1000ba30:	d9402117 	ldw	r5,132(sp)
1000ba34:	1dc7883a 	add	r3,r3,r23
1000ba38:	10800044 	addi	r2,r2,1
1000ba3c:	41400015 	stw	r5,0(r8)
1000ba40:	45c00115 	stw	r23,4(r8)
1000ba44:	d8c01c15 	stw	r3,112(sp)
1000ba48:	d8801b15 	stw	r2,108(sp)
1000ba4c:	010001c4 	movi	r4,7
1000ba50:	2080a616 	blt	r4,r2,1000bcec <___svfiprintf_internal_r+0xe6c>
1000ba54:	42000204 	addi	r8,r8,8
1000ba58:	a0c7883a 	add	r3,r20,r3
1000ba5c:	10800044 	addi	r2,r2,1
1000ba60:	44400015 	stw	r17,0(r8)
1000ba64:	45000115 	stw	r20,4(r8)
1000ba68:	d8c01c15 	stw	r3,112(sp)
1000ba6c:	d8801b15 	stw	r2,108(sp)
1000ba70:	010001c4 	movi	r4,7
1000ba74:	20808816 	blt	r4,r2,1000bc98 <___svfiprintf_internal_r+0xe18>
1000ba78:	42000204 	addi	r8,r8,8
1000ba7c:	8400010c 	andi	r16,r16,4
1000ba80:	80002c26 	beq	r16,zero,1000bb34 <___svfiprintf_internal_r+0xcb4>
1000ba84:	d8802517 	ldw	r2,148(sp)
1000ba88:	14a1c83a 	sub	r16,r2,r18
1000ba8c:	0400290e 	bge	zero,r16,1000bb34 <___svfiprintf_internal_r+0xcb4>
1000ba90:	04400404 	movi	r17,16
1000ba94:	d8801b17 	ldw	r2,108(sp)
1000ba98:	8c01a70e 	bge	r17,r16,1000c138 <___svfiprintf_internal_r+0x12b8>
1000ba9c:	01440074 	movhi	r5,4097
1000baa0:	2950b704 	addi	r5,r5,17116
1000baa4:	d9402815 	stw	r5,160(sp)
1000baa8:	050001c4 	movi	r20,7
1000baac:	dd402717 	ldw	r21,156(sp)
1000bab0:	ddc02317 	ldw	r23,140(sp)
1000bab4:	00000306 	br	1000bac4 <___svfiprintf_internal_r+0xc44>
1000bab8:	843ffc04 	addi	r16,r16,-16
1000babc:	42000204 	addi	r8,r8,8
1000bac0:	8c00130e 	bge	r17,r16,1000bb10 <___svfiprintf_internal_r+0xc90>
1000bac4:	01040074 	movhi	r4,4097
1000bac8:	18c00404 	addi	r3,r3,16
1000bacc:	10800044 	addi	r2,r2,1
1000bad0:	2110b704 	addi	r4,r4,17116
1000bad4:	41000015 	stw	r4,0(r8)
1000bad8:	44400115 	stw	r17,4(r8)
1000badc:	d8c01c15 	stw	r3,112(sp)
1000bae0:	d8801b15 	stw	r2,108(sp)
1000bae4:	a0bff40e 	bge	r20,r2,1000bab8 <__alt_data_end+0xf800bab8>
1000bae8:	d9801a04 	addi	r6,sp,104
1000baec:	b80b883a 	mov	r5,r23
1000baf0:	a809883a 	mov	r4,r21
1000baf4:	000acb00 	call	1000acb0 <__ssprint_r>
1000baf8:	1000211e 	bne	r2,zero,1000bb80 <___svfiprintf_internal_r+0xd00>
1000bafc:	843ffc04 	addi	r16,r16,-16
1000bb00:	d8c01c17 	ldw	r3,112(sp)
1000bb04:	d8801b17 	ldw	r2,108(sp)
1000bb08:	d811883a 	mov	r8,sp
1000bb0c:	8c3fed16 	blt	r17,r16,1000bac4 <__alt_data_end+0xf800bac4>
1000bb10:	d9402817 	ldw	r5,160(sp)
1000bb14:	1c07883a 	add	r3,r3,r16
1000bb18:	10800044 	addi	r2,r2,1
1000bb1c:	41400015 	stw	r5,0(r8)
1000bb20:	44000115 	stw	r16,4(r8)
1000bb24:	d8c01c15 	stw	r3,112(sp)
1000bb28:	d8801b15 	stw	r2,108(sp)
1000bb2c:	010001c4 	movi	r4,7
1000bb30:	2080b516 	blt	r4,r2,1000be08 <___svfiprintf_internal_r+0xf88>
1000bb34:	d8802517 	ldw	r2,148(sp)
1000bb38:	1480010e 	bge	r2,r18,1000bb40 <___svfiprintf_internal_r+0xcc0>
1000bb3c:	9005883a 	mov	r2,r18
1000bb40:	d9002617 	ldw	r4,152(sp)
1000bb44:	2089883a 	add	r4,r4,r2
1000bb48:	d9002615 	stw	r4,152(sp)
1000bb4c:	18005a1e 	bne	r3,zero,1000bcb8 <___svfiprintf_internal_r+0xe38>
1000bb50:	98800007 	ldb	r2,0(r19)
1000bb54:	d8001b15 	stw	zero,108(sp)
1000bb58:	d811883a 	mov	r8,sp
1000bb5c:	103cec1e 	bne	r2,zero,1000af10 <__alt_data_end+0xf800af10>
1000bb60:	9825883a 	mov	r18,r19
1000bb64:	003d0206 	br	1000af70 <__alt_data_end+0xf800af70>
1000bb68:	d8801c17 	ldw	r2,112(sp)
1000bb6c:	10000426 	beq	r2,zero,1000bb80 <___svfiprintf_internal_r+0xd00>
1000bb70:	d9402317 	ldw	r5,140(sp)
1000bb74:	d9002717 	ldw	r4,156(sp)
1000bb78:	d9801a04 	addi	r6,sp,104
1000bb7c:	000acb00 	call	1000acb0 <__ssprint_r>
1000bb80:	d9402317 	ldw	r5,140(sp)
1000bb84:	d8802617 	ldw	r2,152(sp)
1000bb88:	28c0030b 	ldhu	r3,12(r5)
1000bb8c:	18c0100c 	andi	r3,r3,64
1000bb90:	18015c1e 	bne	r3,zero,1000c104 <___svfiprintf_internal_r+0x1284>
1000bb94:	dfc03717 	ldw	ra,220(sp)
1000bb98:	df003617 	ldw	fp,216(sp)
1000bb9c:	ddc03517 	ldw	r23,212(sp)
1000bba0:	dd803417 	ldw	r22,208(sp)
1000bba4:	dd403317 	ldw	r21,204(sp)
1000bba8:	dd003217 	ldw	r20,200(sp)
1000bbac:	dcc03117 	ldw	r19,196(sp)
1000bbb0:	dc803017 	ldw	r18,192(sp)
1000bbb4:	dc402f17 	ldw	r17,188(sp)
1000bbb8:	dc002e17 	ldw	r16,184(sp)
1000bbbc:	dec03804 	addi	sp,sp,224
1000bbc0:	f800283a 	ret
1000bbc4:	d9002517 	ldw	r4,148(sp)
1000bbc8:	24afc83a 	sub	r23,r4,r18
1000bbcc:	05ff6e0e 	bge	zero,r23,1000b988 <__alt_data_end+0xf800b988>
1000bbd0:	07000404 	movi	fp,16
1000bbd4:	e5c15c0e 	bge	fp,r23,1000c148 <___svfiprintf_internal_r+0x12c8>
1000bbd8:	01040074 	movhi	r4,4097
1000bbdc:	2110b304 	addi	r4,r4,17100
1000bbe0:	dc002215 	stw	r16,136(sp)
1000bbe4:	dc402815 	stw	r17,160(sp)
1000bbe8:	d9002115 	stw	r4,132(sp)
1000bbec:	b823883a 	mov	r17,r23
1000bbf0:	054001c4 	movi	r21,7
1000bbf4:	982f883a 	mov	r23,r19
1000bbf8:	dc002717 	ldw	r16,156(sp)
1000bbfc:	9027883a 	mov	r19,r18
1000bc00:	dc802317 	ldw	r18,140(sp)
1000bc04:	00000306 	br	1000bc14 <___svfiprintf_internal_r+0xd94>
1000bc08:	8c7ffc04 	addi	r17,r17,-16
1000bc0c:	42000204 	addi	r8,r8,8
1000bc10:	e440110e 	bge	fp,r17,1000bc58 <___svfiprintf_internal_r+0xdd8>
1000bc14:	18c00404 	addi	r3,r3,16
1000bc18:	10800044 	addi	r2,r2,1
1000bc1c:	45800015 	stw	r22,0(r8)
1000bc20:	47000115 	stw	fp,4(r8)
1000bc24:	d8c01c15 	stw	r3,112(sp)
1000bc28:	d8801b15 	stw	r2,108(sp)
1000bc2c:	a8bff60e 	bge	r21,r2,1000bc08 <__alt_data_end+0xf800bc08>
1000bc30:	d9801a04 	addi	r6,sp,104
1000bc34:	900b883a 	mov	r5,r18
1000bc38:	8009883a 	mov	r4,r16
1000bc3c:	000acb00 	call	1000acb0 <__ssprint_r>
1000bc40:	103fcf1e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bc44:	8c7ffc04 	addi	r17,r17,-16
1000bc48:	d8c01c17 	ldw	r3,112(sp)
1000bc4c:	d8801b17 	ldw	r2,108(sp)
1000bc50:	d811883a 	mov	r8,sp
1000bc54:	e47fef16 	blt	fp,r17,1000bc14 <__alt_data_end+0xf800bc14>
1000bc58:	9825883a 	mov	r18,r19
1000bc5c:	dc002217 	ldw	r16,136(sp)
1000bc60:	b827883a 	mov	r19,r23
1000bc64:	882f883a 	mov	r23,r17
1000bc68:	dc402817 	ldw	r17,160(sp)
1000bc6c:	d9402117 	ldw	r5,132(sp)
1000bc70:	1dc7883a 	add	r3,r3,r23
1000bc74:	10800044 	addi	r2,r2,1
1000bc78:	41400015 	stw	r5,0(r8)
1000bc7c:	45c00115 	stw	r23,4(r8)
1000bc80:	d8c01c15 	stw	r3,112(sp)
1000bc84:	d8801b15 	stw	r2,108(sp)
1000bc88:	010001c4 	movi	r4,7
1000bc8c:	2080b716 	blt	r4,r2,1000bf6c <___svfiprintf_internal_r+0x10ec>
1000bc90:	42000204 	addi	r8,r8,8
1000bc94:	003f3c06 	br	1000b988 <__alt_data_end+0xf800b988>
1000bc98:	d9402317 	ldw	r5,140(sp)
1000bc9c:	d9002717 	ldw	r4,156(sp)
1000bca0:	d9801a04 	addi	r6,sp,104
1000bca4:	000acb00 	call	1000acb0 <__ssprint_r>
1000bca8:	103fb51e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bcac:	d8c01c17 	ldw	r3,112(sp)
1000bcb0:	d811883a 	mov	r8,sp
1000bcb4:	003f7106 	br	1000ba7c <__alt_data_end+0xf800ba7c>
1000bcb8:	d9402317 	ldw	r5,140(sp)
1000bcbc:	d9002717 	ldw	r4,156(sp)
1000bcc0:	d9801a04 	addi	r6,sp,104
1000bcc4:	000acb00 	call	1000acb0 <__ssprint_r>
1000bcc8:	103fa126 	beq	r2,zero,1000bb50 <__alt_data_end+0xf800bb50>
1000bccc:	003fac06 	br	1000bb80 <__alt_data_end+0xf800bb80>
1000bcd0:	d9402317 	ldw	r5,140(sp)
1000bcd4:	d9002717 	ldw	r4,156(sp)
1000bcd8:	d9801a04 	addi	r6,sp,104
1000bcdc:	000acb00 	call	1000acb0 <__ssprint_r>
1000bce0:	103fa71e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bce4:	d811883a 	mov	r8,sp
1000bce8:	003c9e06 	br	1000af64 <__alt_data_end+0xf800af64>
1000bcec:	d9402317 	ldw	r5,140(sp)
1000bcf0:	d9002717 	ldw	r4,156(sp)
1000bcf4:	d9801a04 	addi	r6,sp,104
1000bcf8:	000acb00 	call	1000acb0 <__ssprint_r>
1000bcfc:	103fa01e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bd00:	d8c01c17 	ldw	r3,112(sp)
1000bd04:	d8801b17 	ldw	r2,108(sp)
1000bd08:	d811883a 	mov	r8,sp
1000bd0c:	003f5206 	br	1000ba58 <__alt_data_end+0xf800ba58>
1000bd10:	d9402317 	ldw	r5,140(sp)
1000bd14:	d9002717 	ldw	r4,156(sp)
1000bd18:	d9801a04 	addi	r6,sp,104
1000bd1c:	000acb00 	call	1000acb0 <__ssprint_r>
1000bd20:	103f971e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bd24:	d8c01c17 	ldw	r3,112(sp)
1000bd28:	d8801b17 	ldw	r2,108(sp)
1000bd2c:	d811883a 	mov	r8,sp
1000bd30:	003f0506 	br	1000b948 <__alt_data_end+0xf800b948>
1000bd34:	d9402317 	ldw	r5,140(sp)
1000bd38:	d9002717 	ldw	r4,156(sp)
1000bd3c:	d9801a04 	addi	r6,sp,104
1000bd40:	000acb00 	call	1000acb0 <__ssprint_r>
1000bd44:	103f8e1e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bd48:	d8c01c17 	ldw	r3,112(sp)
1000bd4c:	d8801b17 	ldw	r2,108(sp)
1000bd50:	d811883a 	mov	r8,sp
1000bd54:	003f0906 	br	1000b97c <__alt_data_end+0xf800b97c>
1000bd58:	d9402017 	ldw	r5,128(sp)
1000bd5c:	d8001d85 	stb	zero,118(sp)
1000bd60:	28007716 	blt	r5,zero,1000bf40 <___svfiprintf_internal_r+0x10c0>
1000bd64:	00ffdfc4 	movi	r3,-129
1000bd68:	9504b03a 	or	r2,r18,r20
1000bd6c:	80e0703a 	and	r16,r16,r3
1000bd70:	103d3926 	beq	r2,zero,1000b258 <__alt_data_end+0xf800b258>
1000bd74:	002b883a 	mov	r21,zero
1000bd78:	003d3c06 	br	1000b26c <__alt_data_end+0xf800b26c>
1000bd7c:	d9402317 	ldw	r5,140(sp)
1000bd80:	d9002717 	ldw	r4,156(sp)
1000bd84:	d9801a04 	addi	r6,sp,104
1000bd88:	000acb00 	call	1000acb0 <__ssprint_r>
1000bd8c:	103f7c1e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bd90:	d8c01c17 	ldw	r3,112(sp)
1000bd94:	d8801b17 	ldw	r2,108(sp)
1000bd98:	d811883a 	mov	r8,sp
1000bd9c:	003edd06 	br	1000b914 <__alt_data_end+0xf800b914>
1000bda0:	8080100c 	andi	r2,r16,64
1000bda4:	d8001d85 	stb	zero,118(sp)
1000bda8:	10008426 	beq	r2,zero,1000bfbc <___svfiprintf_internal_r+0x113c>
1000bdac:	d9402417 	ldw	r5,144(sp)
1000bdb0:	d8c02017 	ldw	r3,128(sp)
1000bdb4:	0029883a 	mov	r20,zero
1000bdb8:	28800104 	addi	r2,r5,4
1000bdbc:	2c80000b 	ldhu	r18,0(r5)
1000bdc0:	183eab0e 	bge	r3,zero,1000b870 <__alt_data_end+0xf800b870>
1000bdc4:	d8802415 	stw	r2,144(sp)
1000bdc8:	002b883a 	mov	r21,zero
1000bdcc:	9504b03a 	or	r2,r18,r20
1000bdd0:	103e171e 	bne	r2,zero,1000b630 <__alt_data_end+0xf800b630>
1000bdd4:	00800044 	movi	r2,1
1000bdd8:	10803fcc 	andi	r2,r2,255
1000bddc:	00c00044 	movi	r3,1
1000bde0:	10c05c26 	beq	r2,r3,1000bf54 <___svfiprintf_internal_r+0x10d4>
1000bde4:	00c00084 	movi	r3,2
1000bde8:	10fd1e26 	beq	r2,r3,1000b264 <__alt_data_end+0xf800b264>
1000bdec:	003ec406 	br	1000b900 <__alt_data_end+0xf800b900>
1000bdf0:	d9401e17 	ldw	r5,120(sp)
1000bdf4:	2c69c83a 	sub	r20,r5,r17
1000bdf8:	003d4506 	br	1000b310 <__alt_data_end+0xf800b310>
1000bdfc:	d8802415 	stw	r2,144(sp)
1000be00:	98c00007 	ldb	r3,0(r19)
1000be04:	003c6a06 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000be08:	d9402317 	ldw	r5,140(sp)
1000be0c:	d9002717 	ldw	r4,156(sp)
1000be10:	d9801a04 	addi	r6,sp,104
1000be14:	000acb00 	call	1000acb0 <__ssprint_r>
1000be18:	103f591e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000be1c:	d8c01c17 	ldw	r3,112(sp)
1000be20:	003f4406 	br	1000bb34 <__alt_data_end+0xf800bb34>
1000be24:	01440074 	movhi	r5,4097
1000be28:	29504a04 	addi	r5,r5,16680
1000be2c:	d9402915 	stw	r5,164(sp)
1000be30:	003d0906 	br	1000b258 <__alt_data_end+0xf800b258>
1000be34:	d8c02417 	ldw	r3,144(sp)
1000be38:	d9002617 	ldw	r4,152(sp)
1000be3c:	d9402417 	ldw	r5,144(sp)
1000be40:	18800017 	ldw	r2,0(r3)
1000be44:	2007d7fa 	srai	r3,r4,31
1000be48:	29400104 	addi	r5,r5,4
1000be4c:	d9402415 	stw	r5,144(sp)
1000be50:	11000015 	stw	r4,0(r2)
1000be54:	10c00115 	stw	r3,4(r2)
1000be58:	003c2b06 	br	1000af08 <__alt_data_end+0xf800af08>
1000be5c:	d8c01d45 	stb	r3,117(sp)
1000be60:	d8c02017 	ldw	r3,128(sp)
1000be64:	00800c04 	movi	r2,48
1000be68:	d8801d05 	stb	r2,116(sp)
1000be6c:	d8001d85 	stb	zero,118(sp)
1000be70:	80800094 	ori	r2,r16,2
1000be74:	1800ac16 	blt	r3,zero,1000c128 <___svfiprintf_internal_r+0x12a8>
1000be78:	00bfdfc4 	movi	r2,-129
1000be7c:	80a0703a 	and	r16,r16,r2
1000be80:	84000094 	ori	r16,r16,2
1000be84:	002b883a 	mov	r21,zero
1000be88:	003cf806 	br	1000b26c <__alt_data_end+0xf800b26c>
1000be8c:	98c00007 	ldb	r3,0(r19)
1000be90:	003c4706 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000be94:	d9402417 	ldw	r5,144(sp)
1000be98:	2c800017 	ldw	r18,0(r5)
1000be9c:	29400104 	addi	r5,r5,4
1000bea0:	d9402415 	stw	r5,144(sp)
1000bea4:	9029d7fa 	srai	r20,r18,31
1000bea8:	a005883a 	mov	r2,r20
1000beac:	003dd806 	br	1000b610 <__alt_data_end+0xf800b610>
1000beb0:	d9402417 	ldw	r5,144(sp)
1000beb4:	0029883a 	mov	r20,zero
1000beb8:	2c800017 	ldw	r18,0(r5)
1000bebc:	29400104 	addi	r5,r5,4
1000bec0:	d9402415 	stw	r5,144(sp)
1000bec4:	003cdb06 	br	1000b234 <__alt_data_end+0xf800b234>
1000bec8:	8080100c 	andi	r2,r16,64
1000becc:	d8001d85 	stb	zero,118(sp)
1000bed0:	10003326 	beq	r2,zero,1000bfa0 <___svfiprintf_internal_r+0x1120>
1000bed4:	d9002417 	ldw	r4,144(sp)
1000bed8:	d9402017 	ldw	r5,128(sp)
1000bedc:	0029883a 	mov	r20,zero
1000bee0:	20800104 	addi	r2,r4,4
1000bee4:	2480000b 	ldhu	r18,0(r4)
1000bee8:	283e7e0e 	bge	r5,zero,1000b8e4 <__alt_data_end+0xf800b8e4>
1000beec:	9506b03a 	or	r3,r18,r20
1000bef0:	d8802415 	stw	r2,144(sp)
1000bef4:	183d271e 	bne	r3,zero,1000b394 <__alt_data_end+0xf800b394>
1000bef8:	002b883a 	mov	r21,zero
1000befc:	0005883a 	mov	r2,zero
1000bf00:	003fb506 	br	1000bdd8 <__alt_data_end+0xf800bdd8>
1000bf04:	98c00043 	ldbu	r3,1(r19)
1000bf08:	8c400814 	ori	r17,r17,32
1000bf0c:	9cc00044 	addi	r19,r19,1
1000bf10:	18c03fcc 	andi	r3,r3,255
1000bf14:	18c0201c 	xori	r3,r3,128
1000bf18:	18ffe004 	addi	r3,r3,-128
1000bf1c:	003c2406 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000bf20:	d8c02415 	stw	r3,144(sp)
1000bf24:	002b883a 	mov	r21,zero
1000bf28:	003fa806 	br	1000bdcc <__alt_data_end+0xf800bdcc>
1000bf2c:	01040074 	movhi	r4,4097
1000bf30:	21104a04 	addi	r4,r4,16680
1000bf34:	d9002915 	stw	r4,164(sp)
1000bf38:	d8c02415 	stw	r3,144(sp)
1000bf3c:	1021883a 	mov	r16,r2
1000bf40:	9504b03a 	or	r2,r18,r20
1000bf44:	103f8b1e 	bne	r2,zero,1000bd74 <__alt_data_end+0xf800bd74>
1000bf48:	002b883a 	mov	r21,zero
1000bf4c:	00800084 	movi	r2,2
1000bf50:	003fa106 	br	1000bdd8 <__alt_data_end+0xf800bdd8>
1000bf54:	0025883a 	mov	r18,zero
1000bf58:	94800c04 	addi	r18,r18,48
1000bf5c:	dc8019c5 	stb	r18,103(sp)
1000bf60:	dd002c17 	ldw	r20,176(sp)
1000bf64:	dc4019c4 	addi	r17,sp,103
1000bf68:	003ce906 	br	1000b310 <__alt_data_end+0xf800b310>
1000bf6c:	d9402317 	ldw	r5,140(sp)
1000bf70:	d9002717 	ldw	r4,156(sp)
1000bf74:	d9801a04 	addi	r6,sp,104
1000bf78:	000acb00 	call	1000acb0 <__ssprint_r>
1000bf7c:	103f001e 	bne	r2,zero,1000bb80 <__alt_data_end+0xf800bb80>
1000bf80:	d8c01c17 	ldw	r3,112(sp)
1000bf84:	d8801b17 	ldw	r2,108(sp)
1000bf88:	d811883a 	mov	r8,sp
1000bf8c:	003e7e06 	br	1000b988 <__alt_data_end+0xf800b988>
1000bf90:	01440074 	movhi	r5,4097
1000bf94:	2950b304 	addi	r5,r5,17100
1000bf98:	d9402115 	stw	r5,132(sp)
1000bf9c:	003ea406 	br	1000ba30 <__alt_data_end+0xf800ba30>
1000bfa0:	d8c02417 	ldw	r3,144(sp)
1000bfa4:	d9002017 	ldw	r4,128(sp)
1000bfa8:	0029883a 	mov	r20,zero
1000bfac:	18800104 	addi	r2,r3,4
1000bfb0:	1c800017 	ldw	r18,0(r3)
1000bfb4:	203e4b0e 	bge	r4,zero,1000b8e4 <__alt_data_end+0xf800b8e4>
1000bfb8:	003fcc06 	br	1000beec <__alt_data_end+0xf800beec>
1000bfbc:	d9002417 	ldw	r4,144(sp)
1000bfc0:	d9402017 	ldw	r5,128(sp)
1000bfc4:	0029883a 	mov	r20,zero
1000bfc8:	20800104 	addi	r2,r4,4
1000bfcc:	24800017 	ldw	r18,0(r4)
1000bfd0:	283e270e 	bge	r5,zero,1000b870 <__alt_data_end+0xf800b870>
1000bfd4:	003f7b06 	br	1000bdc4 <__alt_data_end+0xf800bdc4>
1000bfd8:	8400100c 	andi	r16,r16,64
1000bfdc:	80003326 	beq	r16,zero,1000c0ac <___svfiprintf_internal_r+0x122c>
1000bfe0:	d9402417 	ldw	r5,144(sp)
1000bfe4:	d8c02617 	ldw	r3,152(sp)
1000bfe8:	28800017 	ldw	r2,0(r5)
1000bfec:	29400104 	addi	r5,r5,4
1000bff0:	d9402415 	stw	r5,144(sp)
1000bff4:	10c0000d 	sth	r3,0(r2)
1000bff8:	003bc306 	br	1000af08 <__alt_data_end+0xf800af08>
1000bffc:	d9002417 	ldw	r4,144(sp)
1000c000:	0029883a 	mov	r20,zero
1000c004:	24800017 	ldw	r18,0(r4)
1000c008:	21000104 	addi	r4,r4,4
1000c00c:	d9002415 	stw	r4,144(sp)
1000c010:	003c8806 	br	1000b234 <__alt_data_end+0xf800b234>
1000c014:	d8c02417 	ldw	r3,144(sp)
1000c018:	1c800017 	ldw	r18,0(r3)
1000c01c:	18c00104 	addi	r3,r3,4
1000c020:	d8c02415 	stw	r3,144(sp)
1000c024:	9029d7fa 	srai	r20,r18,31
1000c028:	a005883a 	mov	r2,r20
1000c02c:	003d7806 	br	1000b610 <__alt_data_end+0xf800b610>
1000c030:	8809883a 	mov	r4,r17
1000c034:	da002d15 	stw	r8,180(sp)
1000c038:	00012780 	call	10001278 <strlen>
1000c03c:	1029883a 	mov	r20,r2
1000c040:	dd401d83 	ldbu	r21,118(sp)
1000c044:	ddc02415 	stw	r23,144(sp)
1000c048:	d8002015 	stw	zero,128(sp)
1000c04c:	da002d17 	ldw	r8,180(sp)
1000c050:	003caf06 	br	1000b310 <__alt_data_end+0xf800b310>
1000c054:	013fffc4 	movi	r4,-1
1000c058:	003df206 	br	1000b824 <__alt_data_end+0xf800b824>
1000c05c:	dd002017 	ldw	r20,128(sp)
1000c060:	00800184 	movi	r2,6
1000c064:	1500012e 	bgeu	r2,r20,1000c06c <___svfiprintf_internal_r+0x11ec>
1000c068:	1029883a 	mov	r20,r2
1000c06c:	a025883a 	mov	r18,r20
1000c070:	a0004116 	blt	r20,zero,1000c178 <___svfiprintf_internal_r+0x12f8>
1000c074:	04440074 	movhi	r17,4097
1000c078:	ddc02415 	stw	r23,144(sp)
1000c07c:	8c504f04 	addi	r17,r17,16700
1000c080:	003ce806 	br	1000b424 <__alt_data_end+0xf800b424>
1000c084:	04001004 	movi	r16,64
1000c088:	800b883a 	mov	r5,r16
1000c08c:	00086f80 	call	100086f8 <_malloc_r>
1000c090:	d8c02317 	ldw	r3,140(sp)
1000c094:	18800015 	stw	r2,0(r3)
1000c098:	18800415 	stw	r2,16(r3)
1000c09c:	10004d26 	beq	r2,zero,1000c1d4 <___svfiprintf_internal_r+0x1354>
1000c0a0:	d9402317 	ldw	r5,140(sp)
1000c0a4:	2c000515 	stw	r16,20(r5)
1000c0a8:	003b8906 	br	1000aed0 <__alt_data_end+0xf800aed0>
1000c0ac:	d9002417 	ldw	r4,144(sp)
1000c0b0:	d9402617 	ldw	r5,152(sp)
1000c0b4:	20800017 	ldw	r2,0(r4)
1000c0b8:	21000104 	addi	r4,r4,4
1000c0bc:	d9002415 	stw	r4,144(sp)
1000c0c0:	11400015 	stw	r5,0(r2)
1000c0c4:	003b9006 	br	1000af08 <__alt_data_end+0xf800af08>
1000c0c8:	8080004c 	andi	r2,r16,1
1000c0cc:	002b883a 	mov	r21,zero
1000c0d0:	10000526 	beq	r2,zero,1000c0e8 <___svfiprintf_internal_r+0x1268>
1000c0d4:	00800c04 	movi	r2,48
1000c0d8:	d88019c5 	stb	r2,103(sp)
1000c0dc:	dd002c17 	ldw	r20,176(sp)
1000c0e0:	dc4019c4 	addi	r17,sp,103
1000c0e4:	003c8a06 	br	1000b310 <__alt_data_end+0xf800b310>
1000c0e8:	0029883a 	mov	r20,zero
1000c0ec:	dc401a04 	addi	r17,sp,104
1000c0f0:	003c8706 	br	1000b310 <__alt_data_end+0xf800b310>
1000c0f4:	01440074 	movhi	r5,4097
1000c0f8:	2950b704 	addi	r5,r5,17116
1000c0fc:	d9402815 	stw	r5,160(sp)
1000c100:	003cff06 	br	1000b500 <__alt_data_end+0xf800b500>
1000c104:	00bfffc4 	movi	r2,-1
1000c108:	003ea206 	br	1000bb94 <__alt_data_end+0xf800bb94>
1000c10c:	00800044 	movi	r2,1
1000c110:	10803fcc 	andi	r2,r2,255
1000c114:	00c00044 	movi	r3,1
1000c118:	10fd4526 	beq	r2,r3,1000b630 <__alt_data_end+0xf800b630>
1000c11c:	00c00084 	movi	r3,2
1000c120:	10fc5226 	beq	r2,r3,1000b26c <__alt_data_end+0xf800b26c>
1000c124:	003c9c06 	br	1000b398 <__alt_data_end+0xf800b398>
1000c128:	1021883a 	mov	r16,r2
1000c12c:	002b883a 	mov	r21,zero
1000c130:	00800084 	movi	r2,2
1000c134:	003ff606 	br	1000c110 <__alt_data_end+0xf800c110>
1000c138:	01040074 	movhi	r4,4097
1000c13c:	2110b704 	addi	r4,r4,17116
1000c140:	d9002815 	stw	r4,160(sp)
1000c144:	003e7206 	br	1000bb10 <__alt_data_end+0xf800bb10>
1000c148:	01440074 	movhi	r5,4097
1000c14c:	2950b304 	addi	r5,r5,17100
1000c150:	d9402115 	stw	r5,132(sp)
1000c154:	003ec506 	br	1000bc6c <__alt_data_end+0xf800bc6c>
1000c158:	e027883a 	mov	r19,fp
1000c15c:	d8002015 	stw	zero,128(sp)
1000c160:	003b9406 	br	1000afb4 <__alt_data_end+0xf800afb4>
1000c164:	dd002017 	ldw	r20,128(sp)
1000c168:	dd401d83 	ldbu	r21,118(sp)
1000c16c:	ddc02415 	stw	r23,144(sp)
1000c170:	d8002015 	stw	zero,128(sp)
1000c174:	003c6606 	br	1000b310 <__alt_data_end+0xf800b310>
1000c178:	0025883a 	mov	r18,zero
1000c17c:	003fbd06 	br	1000c074 <__alt_data_end+0xf800c074>
1000c180:	d9402417 	ldw	r5,144(sp)
1000c184:	d8c02417 	ldw	r3,144(sp)
1000c188:	29400017 	ldw	r5,0(r5)
1000c18c:	19000104 	addi	r4,r3,4
1000c190:	d9002415 	stw	r4,144(sp)
1000c194:	d9402015 	stw	r5,128(sp)
1000c198:	98c00043 	ldbu	r3,1(r19)
1000c19c:	e027883a 	mov	r19,fp
1000c1a0:	283f5b0e 	bge	r5,zero,1000bf10 <__alt_data_end+0xf800bf10>
1000c1a4:	18c03fcc 	andi	r3,r3,255
1000c1a8:	013fffc4 	movi	r4,-1
1000c1ac:	18c0201c 	xori	r3,r3,128
1000c1b0:	d9002015 	stw	r4,128(sp)
1000c1b4:	18ffe004 	addi	r3,r3,-128
1000c1b8:	003b7d06 	br	1000afb0 <__alt_data_end+0xf800afb0>
1000c1bc:	dd401d85 	stb	r21,118(sp)
1000c1c0:	003cf306 	br	1000b590 <__alt_data_end+0xf800b590>
1000c1c4:	dd401d85 	stb	r21,118(sp)
1000c1c8:	003d4e06 	br	1000b704 <__alt_data_end+0xf800b704>
1000c1cc:	dd401d85 	stb	r21,118(sp)
1000c1d0:	003c0e06 	br	1000b20c <__alt_data_end+0xf800b20c>
1000c1d4:	d9002717 	ldw	r4,156(sp)
1000c1d8:	00800304 	movi	r2,12
1000c1dc:	20800015 	stw	r2,0(r4)
1000c1e0:	00bfffc4 	movi	r2,-1
1000c1e4:	003e6b06 	br	1000bb94 <__alt_data_end+0xf800bb94>
1000c1e8:	dd401d85 	stb	r21,118(sp)
1000c1ec:	003d0006 	br	1000b5f0 <__alt_data_end+0xf800b5f0>
1000c1f0:	dd401d85 	stb	r21,118(sp)
1000c1f4:	003d7106 	br	1000b7bc <__alt_data_end+0xf800b7bc>
1000c1f8:	dd401d85 	stb	r21,118(sp)
1000c1fc:	003c5706 	br	1000b35c <__alt_data_end+0xf800b35c>
1000c200:	dd401d85 	stb	r21,118(sp)
1000c204:	003c2e06 	br	1000b2c0 <__alt_data_end+0xf800b2c0>
1000c208:	dd401d85 	stb	r21,118(sp)
1000c20c:	003d8c06 	br	1000b840 <__alt_data_end+0xf800b840>
1000c210:	dd401d85 	stb	r21,118(sp)
1000c214:	003da706 	br	1000b8b4 <__alt_data_end+0xf800b8b4>
1000c218:	dd401d85 	stb	r21,118(sp)
1000c21c:	003cc806 	br	1000b540 <__alt_data_end+0xf800b540>

1000c220 <__sprint_r.part.0>:
1000c220:	28801917 	ldw	r2,100(r5)
1000c224:	defff604 	addi	sp,sp,-40
1000c228:	dd400515 	stw	r21,20(sp)
1000c22c:	dfc00915 	stw	ra,36(sp)
1000c230:	df000815 	stw	fp,32(sp)
1000c234:	ddc00715 	stw	r23,28(sp)
1000c238:	dd800615 	stw	r22,24(sp)
1000c23c:	dd000415 	stw	r20,16(sp)
1000c240:	dcc00315 	stw	r19,12(sp)
1000c244:	dc800215 	stw	r18,8(sp)
1000c248:	dc400115 	stw	r17,4(sp)
1000c24c:	dc000015 	stw	r16,0(sp)
1000c250:	1088000c 	andi	r2,r2,8192
1000c254:	302b883a 	mov	r21,r6
1000c258:	10002e26 	beq	r2,zero,1000c314 <__sprint_r.part.0+0xf4>
1000c25c:	30800217 	ldw	r2,8(r6)
1000c260:	35800017 	ldw	r22,0(r6)
1000c264:	10002926 	beq	r2,zero,1000c30c <__sprint_r.part.0+0xec>
1000c268:	2827883a 	mov	r19,r5
1000c26c:	2029883a 	mov	r20,r4
1000c270:	b5c00104 	addi	r23,r22,4
1000c274:	04bfffc4 	movi	r18,-1
1000c278:	bc400017 	ldw	r17,0(r23)
1000c27c:	b4000017 	ldw	r16,0(r22)
1000c280:	0039883a 	mov	fp,zero
1000c284:	8822d0ba 	srli	r17,r17,2
1000c288:	8800031e 	bne	r17,zero,1000c298 <__sprint_r.part.0+0x78>
1000c28c:	00001806 	br	1000c2f0 <__sprint_r.part.0+0xd0>
1000c290:	84000104 	addi	r16,r16,4
1000c294:	8f001526 	beq	r17,fp,1000c2ec <__sprint_r.part.0+0xcc>
1000c298:	81400017 	ldw	r5,0(r16)
1000c29c:	980d883a 	mov	r6,r19
1000c2a0:	a009883a 	mov	r4,r20
1000c2a4:	000dd100 	call	1000dd10 <_fputwc_r>
1000c2a8:	e7000044 	addi	fp,fp,1
1000c2ac:	14bff81e 	bne	r2,r18,1000c290 <__alt_data_end+0xf800c290>
1000c2b0:	9005883a 	mov	r2,r18
1000c2b4:	a8000215 	stw	zero,8(r21)
1000c2b8:	a8000115 	stw	zero,4(r21)
1000c2bc:	dfc00917 	ldw	ra,36(sp)
1000c2c0:	df000817 	ldw	fp,32(sp)
1000c2c4:	ddc00717 	ldw	r23,28(sp)
1000c2c8:	dd800617 	ldw	r22,24(sp)
1000c2cc:	dd400517 	ldw	r21,20(sp)
1000c2d0:	dd000417 	ldw	r20,16(sp)
1000c2d4:	dcc00317 	ldw	r19,12(sp)
1000c2d8:	dc800217 	ldw	r18,8(sp)
1000c2dc:	dc400117 	ldw	r17,4(sp)
1000c2e0:	dc000017 	ldw	r16,0(sp)
1000c2e4:	dec00a04 	addi	sp,sp,40
1000c2e8:	f800283a 	ret
1000c2ec:	a8800217 	ldw	r2,8(r21)
1000c2f0:	8c63883a 	add	r17,r17,r17
1000c2f4:	8c63883a 	add	r17,r17,r17
1000c2f8:	1445c83a 	sub	r2,r2,r17
1000c2fc:	a8800215 	stw	r2,8(r21)
1000c300:	b5800204 	addi	r22,r22,8
1000c304:	bdc00204 	addi	r23,r23,8
1000c308:	103fdb1e 	bne	r2,zero,1000c278 <__alt_data_end+0xf800c278>
1000c30c:	0005883a 	mov	r2,zero
1000c310:	003fe806 	br	1000c2b4 <__alt_data_end+0xf800c2b4>
1000c314:	0007e100 	call	10007e10 <__sfvwrite_r>
1000c318:	003fe606 	br	1000c2b4 <__alt_data_end+0xf800c2b4>

1000c31c <__sprint_r>:
1000c31c:	30c00217 	ldw	r3,8(r6)
1000c320:	18000126 	beq	r3,zero,1000c328 <__sprint_r+0xc>
1000c324:	000c2201 	jmpi	1000c220 <__sprint_r.part.0>
1000c328:	30000115 	stw	zero,4(r6)
1000c32c:	0005883a 	mov	r2,zero
1000c330:	f800283a 	ret

1000c334 <___vfiprintf_internal_r>:
1000c334:	deffca04 	addi	sp,sp,-216
1000c338:	dd403115 	stw	r21,196(sp)
1000c33c:	dfc03515 	stw	ra,212(sp)
1000c340:	df003415 	stw	fp,208(sp)
1000c344:	ddc03315 	stw	r23,204(sp)
1000c348:	dd803215 	stw	r22,200(sp)
1000c34c:	dd003015 	stw	r20,192(sp)
1000c350:	dcc02f15 	stw	r19,188(sp)
1000c354:	dc802e15 	stw	r18,184(sp)
1000c358:	dc402d15 	stw	r17,180(sp)
1000c35c:	dc002c15 	stw	r16,176(sp)
1000c360:	d9002115 	stw	r4,132(sp)
1000c364:	d9402015 	stw	r5,128(sp)
1000c368:	d9c02215 	stw	r7,136(sp)
1000c36c:	302b883a 	mov	r21,r6
1000c370:	20000226 	beq	r4,zero,1000c37c <___vfiprintf_internal_r+0x48>
1000c374:	20800e17 	ldw	r2,56(r4)
1000c378:	1000cf26 	beq	r2,zero,1000c6b8 <___vfiprintf_internal_r+0x384>
1000c37c:	d8c02017 	ldw	r3,128(sp)
1000c380:	1880030b 	ldhu	r2,12(r3)
1000c384:	10c8000c 	andi	r3,r2,8192
1000c388:	1800071e 	bne	r3,zero,1000c3a8 <___vfiprintf_internal_r+0x74>
1000c38c:	d9402017 	ldw	r5,128(sp)
1000c390:	00f7ffc4 	movi	r3,-8193
1000c394:	10880014 	ori	r2,r2,8192
1000c398:	29001917 	ldw	r4,100(r5)
1000c39c:	2880030d 	sth	r2,12(r5)
1000c3a0:	20c6703a 	and	r3,r4,r3
1000c3a4:	28c01915 	stw	r3,100(r5)
1000c3a8:	10c0020c 	andi	r3,r2,8
1000c3ac:	1800a526 	beq	r3,zero,1000c644 <___vfiprintf_internal_r+0x310>
1000c3b0:	d9002017 	ldw	r4,128(sp)
1000c3b4:	20c00417 	ldw	r3,16(r4)
1000c3b8:	1800a226 	beq	r3,zero,1000c644 <___vfiprintf_internal_r+0x310>
1000c3bc:	1080068c 	andi	r2,r2,26
1000c3c0:	00c00284 	movi	r3,10
1000c3c4:	10c0a826 	beq	r2,r3,1000c668 <___vfiprintf_internal_r+0x334>
1000c3c8:	d9001a04 	addi	r4,sp,104
1000c3cc:	d94019c4 	addi	r5,sp,103
1000c3d0:	04840074 	movhi	r18,4097
1000c3d4:	2145c83a 	sub	r2,r4,r5
1000c3d8:	9490bb04 	addi	r18,r18,17132
1000c3dc:	d9001e15 	stw	r4,120(sp)
1000c3e0:	d9401f15 	stw	r5,124(sp)
1000c3e4:	dec01a15 	stw	sp,104(sp)
1000c3e8:	d8001c15 	stw	zero,112(sp)
1000c3ec:	d8001b15 	stw	zero,108(sp)
1000c3f0:	d811883a 	mov	r8,sp
1000c3f4:	d8002615 	stw	zero,152(sp)
1000c3f8:	d8002415 	stw	zero,144(sp)
1000c3fc:	d8802815 	stw	r2,160(sp)
1000c400:	a82d883a 	mov	r22,r21
1000c404:	b0800007 	ldb	r2,0(r22)
1000c408:	10040d26 	beq	r2,zero,1000d440 <___vfiprintf_internal_r+0x110c>
1000c40c:	00c00944 	movi	r3,37
1000c410:	b029883a 	mov	r20,r22
1000c414:	10c0021e 	bne	r2,r3,1000c420 <___vfiprintf_internal_r+0xec>
1000c418:	00001606 	br	1000c474 <___vfiprintf_internal_r+0x140>
1000c41c:	10c00326 	beq	r2,r3,1000c42c <___vfiprintf_internal_r+0xf8>
1000c420:	a5000044 	addi	r20,r20,1
1000c424:	a0800007 	ldb	r2,0(r20)
1000c428:	103ffc1e 	bne	r2,zero,1000c41c <__alt_data_end+0xf800c41c>
1000c42c:	a5a1c83a 	sub	r16,r20,r22
1000c430:	80001026 	beq	r16,zero,1000c474 <___vfiprintf_internal_r+0x140>
1000c434:	d8c01c17 	ldw	r3,112(sp)
1000c438:	d8801b17 	ldw	r2,108(sp)
1000c43c:	45800015 	stw	r22,0(r8)
1000c440:	80c7883a 	add	r3,r16,r3
1000c444:	10800044 	addi	r2,r2,1
1000c448:	44000115 	stw	r16,4(r8)
1000c44c:	d8c01c15 	stw	r3,112(sp)
1000c450:	d8801b15 	stw	r2,108(sp)
1000c454:	010001c4 	movi	r4,7
1000c458:	2080750e 	bge	r4,r2,1000c630 <___vfiprintf_internal_r+0x2fc>
1000c45c:	1803951e 	bne	r3,zero,1000d2b4 <___vfiprintf_internal_r+0xf80>
1000c460:	d8c02417 	ldw	r3,144(sp)
1000c464:	d8001b15 	stw	zero,108(sp)
1000c468:	d811883a 	mov	r8,sp
1000c46c:	1c07883a 	add	r3,r3,r16
1000c470:	d8c02415 	stw	r3,144(sp)
1000c474:	a0800007 	ldb	r2,0(r20)
1000c478:	1002e026 	beq	r2,zero,1000cffc <___vfiprintf_internal_r+0xcc8>
1000c47c:	a5800044 	addi	r22,r20,1
1000c480:	a0c00047 	ldb	r3,1(r20)
1000c484:	d8001d85 	stb	zero,118(sp)
1000c488:	0027883a 	mov	r19,zero
1000c48c:	d8002305 	stb	zero,140(sp)
1000c490:	043fffc4 	movi	r16,-1
1000c494:	d8002515 	stw	zero,148(sp)
1000c498:	0023883a 	mov	r17,zero
1000c49c:	05001604 	movi	r20,88
1000c4a0:	05400244 	movi	r21,9
1000c4a4:	402f883a 	mov	r23,r8
1000c4a8:	b5800044 	addi	r22,r22,1
1000c4ac:	18bff804 	addi	r2,r3,-32
1000c4b0:	a0827736 	bltu	r20,r2,1000ce90 <___vfiprintf_internal_r+0xb5c>
1000c4b4:	100490ba 	slli	r2,r2,2
1000c4b8:	01040074 	movhi	r4,4097
1000c4bc:	21313304 	addi	r4,r4,-15156
1000c4c0:	1105883a 	add	r2,r2,r4
1000c4c4:	10800017 	ldw	r2,0(r2)
1000c4c8:	1000683a 	jmp	r2
1000c4cc:	1000cb90 	cmplti	zero,r2,814
1000c4d0:	1000ce90 	cmplti	zero,r2,826
1000c4d4:	1000ce90 	cmplti	zero,r2,826
1000c4d8:	1000cbac 	andhi	zero,r2,814
1000c4dc:	1000ce90 	cmplti	zero,r2,826
1000c4e0:	1000ce90 	cmplti	zero,r2,826
1000c4e4:	1000ce90 	cmplti	zero,r2,826
1000c4e8:	1000ce90 	cmplti	zero,r2,826
1000c4ec:	1000ce90 	cmplti	zero,r2,826
1000c4f0:	1000ce90 	cmplti	zero,r2,826
1000c4f4:	1000cdb4 	orhi	zero,r2,822
1000c4f8:	1000cdd8 	cmpnei	zero,r2,823
1000c4fc:	1000ce90 	cmplti	zero,r2,826
1000c500:	1000c6d0 	cmplti	zero,r2,795
1000c504:	1000cdec 	andhi	zero,r2,823
1000c508:	1000ce90 	cmplti	zero,r2,826
1000c50c:	1000cbb8 	rdprs	zero,r2,814
1000c510:	1000cbc4 	addi	zero,r2,815
1000c514:	1000cbc4 	addi	zero,r2,815
1000c518:	1000cbc4 	addi	zero,r2,815
1000c51c:	1000cbc4 	addi	zero,r2,815
1000c520:	1000cbc4 	addi	zero,r2,815
1000c524:	1000cbc4 	addi	zero,r2,815
1000c528:	1000cbc4 	addi	zero,r2,815
1000c52c:	1000cbc4 	addi	zero,r2,815
1000c530:	1000cbc4 	addi	zero,r2,815
1000c534:	1000ce90 	cmplti	zero,r2,826
1000c538:	1000ce90 	cmplti	zero,r2,826
1000c53c:	1000ce90 	cmplti	zero,r2,826
1000c540:	1000ce90 	cmplti	zero,r2,826
1000c544:	1000ce90 	cmplti	zero,r2,826
1000c548:	1000ce90 	cmplti	zero,r2,826
1000c54c:	1000ce90 	cmplti	zero,r2,826
1000c550:	1000ce90 	cmplti	zero,r2,826
1000c554:	1000ce90 	cmplti	zero,r2,826
1000c558:	1000ce90 	cmplti	zero,r2,826
1000c55c:	1000cc04 	addi	zero,r2,816
1000c560:	1000ce90 	cmplti	zero,r2,826
1000c564:	1000ce90 	cmplti	zero,r2,826
1000c568:	1000ce90 	cmplti	zero,r2,826
1000c56c:	1000ce90 	cmplti	zero,r2,826
1000c570:	1000ce90 	cmplti	zero,r2,826
1000c574:	1000ce90 	cmplti	zero,r2,826
1000c578:	1000ce90 	cmplti	zero,r2,826
1000c57c:	1000ce90 	cmplti	zero,r2,826
1000c580:	1000ce90 	cmplti	zero,r2,826
1000c584:	1000ce90 	cmplti	zero,r2,826
1000c588:	1000cc40 	call	11000cc4 <_gp+0xfe2af8>
1000c58c:	1000ce90 	cmplti	zero,r2,826
1000c590:	1000ce90 	cmplti	zero,r2,826
1000c594:	1000ce90 	cmplti	zero,r2,826
1000c598:	1000ce90 	cmplti	zero,r2,826
1000c59c:	1000ce90 	cmplti	zero,r2,826
1000c5a0:	1000cc9c 	xori	zero,r2,818
1000c5a4:	1000ce90 	cmplti	zero,r2,826
1000c5a8:	1000ce90 	cmplti	zero,r2,826
1000c5ac:	1000cd10 	cmplti	zero,r2,820
1000c5b0:	1000ce90 	cmplti	zero,r2,826
1000c5b4:	1000ce90 	cmplti	zero,r2,826
1000c5b8:	1000ce90 	cmplti	zero,r2,826
1000c5bc:	1000ce90 	cmplti	zero,r2,826
1000c5c0:	1000ce90 	cmplti	zero,r2,826
1000c5c4:	1000ce90 	cmplti	zero,r2,826
1000c5c8:	1000ce90 	cmplti	zero,r2,826
1000c5cc:	1000ce90 	cmplti	zero,r2,826
1000c5d0:	1000ce90 	cmplti	zero,r2,826
1000c5d4:	1000ce90 	cmplti	zero,r2,826
1000c5d8:	1000cab8 	rdprs	zero,r2,810
1000c5dc:	1000cae8 	cmpgeui	zero,r2,811
1000c5e0:	1000ce90 	cmplti	zero,r2,826
1000c5e4:	1000ce90 	cmplti	zero,r2,826
1000c5e8:	1000ce90 	cmplti	zero,r2,826
1000c5ec:	1000ce38 	rdprs	zero,r2,824
1000c5f0:	1000cae8 	cmpgeui	zero,r2,811
1000c5f4:	1000ce90 	cmplti	zero,r2,826
1000c5f8:	1000ce90 	cmplti	zero,r2,826
1000c5fc:	1000c990 	cmplti	zero,r2,806
1000c600:	1000ce90 	cmplti	zero,r2,826
1000c604:	1000c9a4 	muli	zero,r2,806
1000c608:	1000c9dc 	xori	zero,r2,807
1000c60c:	1000c6dc 	xori	zero,r2,795
1000c610:	1000c984 	addi	zero,r2,806
1000c614:	1000ce90 	cmplti	zero,r2,826
1000c618:	1000cd50 	cmplti	zero,r2,821
1000c61c:	1000ce90 	cmplti	zero,r2,826
1000c620:	1000cd9c 	xori	zero,r2,822
1000c624:	1000ce90 	cmplti	zero,r2,826
1000c628:	1000ce90 	cmplti	zero,r2,826
1000c62c:	1000ca60 	cmpeqi	zero,r2,809
1000c630:	42000204 	addi	r8,r8,8
1000c634:	d8c02417 	ldw	r3,144(sp)
1000c638:	1c07883a 	add	r3,r3,r16
1000c63c:	d8c02415 	stw	r3,144(sp)
1000c640:	003f8c06 	br	1000c474 <__alt_data_end+0xf800c474>
1000c644:	d9402017 	ldw	r5,128(sp)
1000c648:	d9002117 	ldw	r4,132(sp)
1000c64c:	00059800 	call	10005980 <__swsetup_r>
1000c650:	1003c11e 	bne	r2,zero,1000d558 <___vfiprintf_internal_r+0x1224>
1000c654:	d9402017 	ldw	r5,128(sp)
1000c658:	00c00284 	movi	r3,10
1000c65c:	2880030b 	ldhu	r2,12(r5)
1000c660:	1080068c 	andi	r2,r2,26
1000c664:	10ff581e 	bne	r2,r3,1000c3c8 <__alt_data_end+0xf800c3c8>
1000c668:	d8c02017 	ldw	r3,128(sp)
1000c66c:	1880038f 	ldh	r2,14(r3)
1000c670:	103f5516 	blt	r2,zero,1000c3c8 <__alt_data_end+0xf800c3c8>
1000c674:	d9c02217 	ldw	r7,136(sp)
1000c678:	d9002117 	ldw	r4,132(sp)
1000c67c:	a80d883a 	mov	r6,r21
1000c680:	180b883a 	mov	r5,r3
1000c684:	000d85c0 	call	1000d85c <__sbprintf>
1000c688:	dfc03517 	ldw	ra,212(sp)
1000c68c:	df003417 	ldw	fp,208(sp)
1000c690:	ddc03317 	ldw	r23,204(sp)
1000c694:	dd803217 	ldw	r22,200(sp)
1000c698:	dd403117 	ldw	r21,196(sp)
1000c69c:	dd003017 	ldw	r20,192(sp)
1000c6a0:	dcc02f17 	ldw	r19,188(sp)
1000c6a4:	dc802e17 	ldw	r18,184(sp)
1000c6a8:	dc402d17 	ldw	r17,180(sp)
1000c6ac:	dc002c17 	ldw	r16,176(sp)
1000c6b0:	dec03604 	addi	sp,sp,216
1000c6b4:	f800283a 	ret
1000c6b8:	000798c0 	call	1000798c <__sinit>
1000c6bc:	003f2f06 	br	1000c37c <__alt_data_end+0xf800c37c>
1000c6c0:	d8c02517 	ldw	r3,148(sp)
1000c6c4:	d8802215 	stw	r2,136(sp)
1000c6c8:	00c7c83a 	sub	r3,zero,r3
1000c6cc:	d8c02515 	stw	r3,148(sp)
1000c6d0:	8c400114 	ori	r17,r17,4
1000c6d4:	b0c00007 	ldb	r3,0(r22)
1000c6d8:	003f7306 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000c6dc:	00800c04 	movi	r2,48
1000c6e0:	d9402217 	ldw	r5,136(sp)
1000c6e4:	d8801d05 	stb	r2,116(sp)
1000c6e8:	00801e04 	movi	r2,120
1000c6ec:	d8801d45 	stb	r2,117(sp)
1000c6f0:	d8001d85 	stb	zero,118(sp)
1000c6f4:	b811883a 	mov	r8,r23
1000c6f8:	28c00104 	addi	r3,r5,4
1000c6fc:	2cc00017 	ldw	r19,0(r5)
1000c700:	0029883a 	mov	r20,zero
1000c704:	88800094 	ori	r2,r17,2
1000c708:	80032516 	blt	r16,zero,1000d3a0 <___vfiprintf_internal_r+0x106c>
1000c70c:	00bfdfc4 	movi	r2,-129
1000c710:	88a2703a 	and	r17,r17,r2
1000c714:	d8c02215 	stw	r3,136(sp)
1000c718:	8c400094 	ori	r17,r17,2
1000c71c:	98032a1e 	bne	r19,zero,1000d3c8 <___vfiprintf_internal_r+0x1094>
1000c720:	00840074 	movhi	r2,4097
1000c724:	10904a04 	addi	r2,r2,16680
1000c728:	d8802615 	stw	r2,152(sp)
1000c72c:	002b883a 	mov	r21,zero
1000c730:	8001741e 	bne	r16,zero,1000cd04 <___vfiprintf_internal_r+0x9d0>
1000c734:	0021883a 	mov	r16,zero
1000c738:	0029883a 	mov	r20,zero
1000c73c:	ddc01a04 	addi	r23,sp,104
1000c740:	8027883a 	mov	r19,r16
1000c744:	8500010e 	bge	r16,r20,1000c74c <___vfiprintf_internal_r+0x418>
1000c748:	a027883a 	mov	r19,r20
1000c74c:	ad403fcc 	andi	r21,r21,255
1000c750:	ad40201c 	xori	r21,r21,128
1000c754:	ad7fe004 	addi	r21,r21,-128
1000c758:	a8000126 	beq	r21,zero,1000c760 <___vfiprintf_internal_r+0x42c>
1000c75c:	9cc00044 	addi	r19,r19,1
1000c760:	89c0008c 	andi	r7,r17,2
1000c764:	38000126 	beq	r7,zero,1000c76c <___vfiprintf_internal_r+0x438>
1000c768:	9cc00084 	addi	r19,r19,2
1000c76c:	88c0210c 	andi	r3,r17,132
1000c770:	1801dd1e 	bne	r3,zero,1000cee8 <___vfiprintf_internal_r+0xbb4>
1000c774:	d9402517 	ldw	r5,148(sp)
1000c778:	2cebc83a 	sub	r21,r5,r19
1000c77c:	0541da0e 	bge	zero,r21,1000cee8 <___vfiprintf_internal_r+0xbb4>
1000c780:	07000404 	movi	fp,16
1000c784:	d8801c17 	ldw	r2,112(sp)
1000c788:	e543be0e 	bge	fp,r21,1000d684 <___vfiprintf_internal_r+0x1350>
1000c78c:	01440074 	movhi	r5,4097
1000c790:	2950bf04 	addi	r5,r5,17148
1000c794:	dc002715 	stw	r16,156(sp)
1000c798:	d9801b17 	ldw	r6,108(sp)
1000c79c:	a821883a 	mov	r16,r21
1000c7a0:	d9402315 	stw	r5,140(sp)
1000c7a4:	028001c4 	movi	r10,7
1000c7a8:	d9c02915 	stw	r7,164(sp)
1000c7ac:	182b883a 	mov	r21,r3
1000c7b0:	00000506 	br	1000c7c8 <___vfiprintf_internal_r+0x494>
1000c7b4:	31000084 	addi	r4,r6,2
1000c7b8:	42000204 	addi	r8,r8,8
1000c7bc:	180d883a 	mov	r6,r3
1000c7c0:	843ffc04 	addi	r16,r16,-16
1000c7c4:	e4000f0e 	bge	fp,r16,1000c804 <___vfiprintf_internal_r+0x4d0>
1000c7c8:	01040074 	movhi	r4,4097
1000c7cc:	10800404 	addi	r2,r2,16
1000c7d0:	30c00044 	addi	r3,r6,1
1000c7d4:	2110bf04 	addi	r4,r4,17148
1000c7d8:	41000015 	stw	r4,0(r8)
1000c7dc:	47000115 	stw	fp,4(r8)
1000c7e0:	d8801c15 	stw	r2,112(sp)
1000c7e4:	d8c01b15 	stw	r3,108(sp)
1000c7e8:	50fff20e 	bge	r10,r3,1000c7b4 <__alt_data_end+0xf800c7b4>
1000c7ec:	1001b21e 	bne	r2,zero,1000ceb8 <___vfiprintf_internal_r+0xb84>
1000c7f0:	843ffc04 	addi	r16,r16,-16
1000c7f4:	000d883a 	mov	r6,zero
1000c7f8:	01000044 	movi	r4,1
1000c7fc:	d811883a 	mov	r8,sp
1000c800:	e43ff116 	blt	fp,r16,1000c7c8 <__alt_data_end+0xf800c7c8>
1000c804:	a807883a 	mov	r3,r21
1000c808:	d9c02917 	ldw	r7,164(sp)
1000c80c:	802b883a 	mov	r21,r16
1000c810:	dc002717 	ldw	r16,156(sp)
1000c814:	d9402317 	ldw	r5,140(sp)
1000c818:	a885883a 	add	r2,r21,r2
1000c81c:	45400115 	stw	r21,4(r8)
1000c820:	41400015 	stw	r5,0(r8)
1000c824:	d8801c15 	stw	r2,112(sp)
1000c828:	d9001b15 	stw	r4,108(sp)
1000c82c:	014001c4 	movi	r5,7
1000c830:	29026216 	blt	r5,r4,1000d1bc <___vfiprintf_internal_r+0xe88>
1000c834:	d9801d87 	ldb	r6,118(sp)
1000c838:	42000204 	addi	r8,r8,8
1000c83c:	21400044 	addi	r5,r4,1
1000c840:	3001ae1e 	bne	r6,zero,1000cefc <___vfiprintf_internal_r+0xbc8>
1000c844:	3801bb26 	beq	r7,zero,1000cf34 <___vfiprintf_internal_r+0xc00>
1000c848:	d9001d04 	addi	r4,sp,116
1000c84c:	10800084 	addi	r2,r2,2
1000c850:	41000015 	stw	r4,0(r8)
1000c854:	01000084 	movi	r4,2
1000c858:	41000115 	stw	r4,4(r8)
1000c85c:	d8801c15 	stw	r2,112(sp)
1000c860:	d9401b15 	stw	r5,108(sp)
1000c864:	010001c4 	movi	r4,7
1000c868:	2142680e 	bge	r4,r5,1000d20c <___vfiprintf_internal_r+0xed8>
1000c86c:	1002b11e 	bne	r2,zero,1000d334 <___vfiprintf_internal_r+0x1000>
1000c870:	01802004 	movi	r6,128
1000c874:	01400044 	movi	r5,1
1000c878:	0009883a 	mov	r4,zero
1000c87c:	d811883a 	mov	r8,sp
1000c880:	1981ae1e 	bne	r3,r6,1000cf3c <___vfiprintf_internal_r+0xc08>
1000c884:	d8c02517 	ldw	r3,148(sp)
1000c888:	1cf9c83a 	sub	fp,r3,r19
1000c88c:	0701ab0e 	bge	zero,fp,1000cf3c <___vfiprintf_internal_r+0xc08>
1000c890:	05400404 	movi	r21,16
1000c894:	af03a90e 	bge	r21,fp,1000d73c <___vfiprintf_internal_r+0x1408>
1000c898:	01440074 	movhi	r5,4097
1000c89c:	2950bb04 	addi	r5,r5,17132
1000c8a0:	d9402315 	stw	r5,140(sp)
1000c8a4:	01c001c4 	movi	r7,7
1000c8a8:	00000506 	br	1000c8c0 <___vfiprintf_internal_r+0x58c>
1000c8ac:	21800084 	addi	r6,r4,2
1000c8b0:	42000204 	addi	r8,r8,8
1000c8b4:	1809883a 	mov	r4,r3
1000c8b8:	e73ffc04 	addi	fp,fp,-16
1000c8bc:	af000d0e 	bge	r21,fp,1000c8f4 <___vfiprintf_internal_r+0x5c0>
1000c8c0:	10800404 	addi	r2,r2,16
1000c8c4:	20c00044 	addi	r3,r4,1
1000c8c8:	44800015 	stw	r18,0(r8)
1000c8cc:	45400115 	stw	r21,4(r8)
1000c8d0:	d8801c15 	stw	r2,112(sp)
1000c8d4:	d8c01b15 	stw	r3,108(sp)
1000c8d8:	38fff40e 	bge	r7,r3,1000c8ac <__alt_data_end+0xf800c8ac>
1000c8dc:	10022b1e 	bne	r2,zero,1000d18c <___vfiprintf_internal_r+0xe58>
1000c8e0:	e73ffc04 	addi	fp,fp,-16
1000c8e4:	01800044 	movi	r6,1
1000c8e8:	0009883a 	mov	r4,zero
1000c8ec:	d811883a 	mov	r8,sp
1000c8f0:	af3ff316 	blt	r21,fp,1000c8c0 <__alt_data_end+0xf800c8c0>
1000c8f4:	d8c02317 	ldw	r3,140(sp)
1000c8f8:	1705883a 	add	r2,r2,fp
1000c8fc:	47000115 	stw	fp,4(r8)
1000c900:	40c00015 	stw	r3,0(r8)
1000c904:	d8801c15 	stw	r2,112(sp)
1000c908:	d9801b15 	stw	r6,108(sp)
1000c90c:	00c001c4 	movi	r3,7
1000c910:	19829416 	blt	r3,r6,1000d364 <___vfiprintf_internal_r+0x1030>
1000c914:	8521c83a 	sub	r16,r16,r20
1000c918:	42000204 	addi	r8,r8,8
1000c91c:	31400044 	addi	r5,r6,1
1000c920:	3009883a 	mov	r4,r6
1000c924:	04018716 	blt	zero,r16,1000cf44 <___vfiprintf_internal_r+0xc10>
1000c928:	a085883a 	add	r2,r20,r2
1000c92c:	45c00015 	stw	r23,0(r8)
1000c930:	45000115 	stw	r20,4(r8)
1000c934:	d8801c15 	stw	r2,112(sp)
1000c938:	d9401b15 	stw	r5,108(sp)
1000c93c:	00c001c4 	movi	r3,7
1000c940:	1941c20e 	bge	r3,r5,1000d04c <___vfiprintf_internal_r+0xd18>
1000c944:	1002531e 	bne	r2,zero,1000d294 <___vfiprintf_internal_r+0xf60>
1000c948:	d8001b15 	stw	zero,108(sp)
1000c94c:	8c40010c 	andi	r17,r17,4
1000c950:	88023226 	beq	r17,zero,1000d21c <___vfiprintf_internal_r+0xee8>
1000c954:	d9002517 	ldw	r4,148(sp)
1000c958:	24e3c83a 	sub	r17,r4,r19
1000c95c:	04432916 	blt	zero,r17,1000d604 <___vfiprintf_internal_r+0x12d0>
1000c960:	d8802517 	ldw	r2,148(sp)
1000c964:	14c0010e 	bge	r2,r19,1000c96c <___vfiprintf_internal_r+0x638>
1000c968:	9805883a 	mov	r2,r19
1000c96c:	d8c02417 	ldw	r3,144(sp)
1000c970:	1887883a 	add	r3,r3,r2
1000c974:	d8c02415 	stw	r3,144(sp)
1000c978:	d8001b15 	stw	zero,108(sp)
1000c97c:	d811883a 	mov	r8,sp
1000c980:	003ea006 	br	1000c404 <__alt_data_end+0xf800c404>
1000c984:	8c400814 	ori	r17,r17,32
1000c988:	b0c00007 	ldb	r3,0(r22)
1000c98c:	003ec606 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000c990:	b0c00007 	ldb	r3,0(r22)
1000c994:	00801b04 	movi	r2,108
1000c998:	18832026 	beq	r3,r2,1000d61c <___vfiprintf_internal_r+0x12e8>
1000c99c:	8c400414 	ori	r17,r17,16
1000c9a0:	003ec106 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000c9a4:	9cc03fcc 	andi	r19,r19,255
1000c9a8:	b811883a 	mov	r8,r23
1000c9ac:	9803981e 	bne	r19,zero,1000d810 <___vfiprintf_internal_r+0x14dc>
1000c9b0:	8880080c 	andi	r2,r17,32
1000c9b4:	1002be26 	beq	r2,zero,1000d4b0 <___vfiprintf_internal_r+0x117c>
1000c9b8:	d9002217 	ldw	r4,136(sp)
1000c9bc:	d9402417 	ldw	r5,144(sp)
1000c9c0:	20800017 	ldw	r2,0(r4)
1000c9c4:	2807d7fa 	srai	r3,r5,31
1000c9c8:	21000104 	addi	r4,r4,4
1000c9cc:	d9002215 	stw	r4,136(sp)
1000c9d0:	11400015 	stw	r5,0(r2)
1000c9d4:	10c00115 	stw	r3,4(r2)
1000c9d8:	003e8a06 	br	1000c404 <__alt_data_end+0xf800c404>
1000c9dc:	9cc03fcc 	andi	r19,r19,255
1000c9e0:	b811883a 	mov	r8,r23
1000c9e4:	9803871e 	bne	r19,zero,1000d804 <___vfiprintf_internal_r+0x14d0>
1000c9e8:	8880080c 	andi	r2,r17,32
1000c9ec:	10009a26 	beq	r2,zero,1000cc58 <___vfiprintf_internal_r+0x924>
1000c9f0:	d9002217 	ldw	r4,136(sp)
1000c9f4:	d8001d85 	stb	zero,118(sp)
1000c9f8:	20800204 	addi	r2,r4,8
1000c9fc:	24c00017 	ldw	r19,0(r4)
1000ca00:	25000117 	ldw	r20,4(r4)
1000ca04:	8002a416 	blt	r16,zero,1000d498 <___vfiprintf_internal_r+0x1164>
1000ca08:	013fdfc4 	movi	r4,-129
1000ca0c:	9d06b03a 	or	r3,r19,r20
1000ca10:	d8802215 	stw	r2,136(sp)
1000ca14:	8922703a 	and	r17,r17,r4
1000ca18:	18009b26 	beq	r3,zero,1000cc88 <___vfiprintf_internal_r+0x954>
1000ca1c:	002b883a 	mov	r21,zero
1000ca20:	ddc01a04 	addi	r23,sp,104
1000ca24:	9806d0fa 	srli	r3,r19,3
1000ca28:	a008977a 	slli	r4,r20,29
1000ca2c:	a028d0fa 	srli	r20,r20,3
1000ca30:	9cc001cc 	andi	r19,r19,7
1000ca34:	98800c04 	addi	r2,r19,48
1000ca38:	bdffffc4 	addi	r23,r23,-1
1000ca3c:	20e6b03a 	or	r19,r4,r3
1000ca40:	b8800005 	stb	r2,0(r23)
1000ca44:	9d06b03a 	or	r3,r19,r20
1000ca48:	183ff61e 	bne	r3,zero,1000ca24 <__alt_data_end+0xf800ca24>
1000ca4c:	88c0004c 	andi	r3,r17,1
1000ca50:	18021f1e 	bne	r3,zero,1000d2d0 <___vfiprintf_internal_r+0xf9c>
1000ca54:	d9401e17 	ldw	r5,120(sp)
1000ca58:	2de9c83a 	sub	r20,r5,r23
1000ca5c:	003f3806 	br	1000c740 <__alt_data_end+0xf800c740>
1000ca60:	9cc03fcc 	andi	r19,r19,255
1000ca64:	b811883a 	mov	r8,r23
1000ca68:	98034f1e 	bne	r19,zero,1000d7a8 <___vfiprintf_internal_r+0x1474>
1000ca6c:	00840074 	movhi	r2,4097
1000ca70:	10904a04 	addi	r2,r2,16680
1000ca74:	d8802615 	stw	r2,152(sp)
1000ca78:	8880080c 	andi	r2,r17,32
1000ca7c:	1000ac26 	beq	r2,zero,1000cd30 <___vfiprintf_internal_r+0x9fc>
1000ca80:	d9002217 	ldw	r4,136(sp)
1000ca84:	24c00017 	ldw	r19,0(r4)
1000ca88:	25000117 	ldw	r20,4(r4)
1000ca8c:	21000204 	addi	r4,r4,8
1000ca90:	d9002215 	stw	r4,136(sp)
1000ca94:	8880004c 	andi	r2,r17,1
1000ca98:	1001e726 	beq	r2,zero,1000d238 <___vfiprintf_internal_r+0xf04>
1000ca9c:	9d04b03a 	or	r2,r19,r20
1000caa0:	10025c1e 	bne	r2,zero,1000d414 <___vfiprintf_internal_r+0x10e0>
1000caa4:	d8001d85 	stb	zero,118(sp)
1000caa8:	80024416 	blt	r16,zero,1000d3bc <___vfiprintf_internal_r+0x1088>
1000caac:	00bfdfc4 	movi	r2,-129
1000cab0:	88a2703a 	and	r17,r17,r2
1000cab4:	003f1d06 	br	1000c72c <__alt_data_end+0xf800c72c>
1000cab8:	d8c02217 	ldw	r3,136(sp)
1000cabc:	04c00044 	movi	r19,1
1000cac0:	b811883a 	mov	r8,r23
1000cac4:	18800017 	ldw	r2,0(r3)
1000cac8:	18c00104 	addi	r3,r3,4
1000cacc:	d8001d85 	stb	zero,118(sp)
1000cad0:	d8801005 	stb	r2,64(sp)
1000cad4:	d8c02215 	stw	r3,136(sp)
1000cad8:	9829883a 	mov	r20,r19
1000cadc:	ddc01004 	addi	r23,sp,64
1000cae0:	0021883a 	mov	r16,zero
1000cae4:	003f1e06 	br	1000c760 <__alt_data_end+0xf800c760>
1000cae8:	9cc03fcc 	andi	r19,r19,255
1000caec:	b811883a 	mov	r8,r23
1000caf0:	9803331e 	bne	r19,zero,1000d7c0 <___vfiprintf_internal_r+0x148c>
1000caf4:	8880080c 	andi	r2,r17,32
1000caf8:	10004826 	beq	r2,zero,1000cc1c <___vfiprintf_internal_r+0x8e8>
1000cafc:	d9002217 	ldw	r4,136(sp)
1000cb00:	20800117 	ldw	r2,4(r4)
1000cb04:	24c00017 	ldw	r19,0(r4)
1000cb08:	21000204 	addi	r4,r4,8
1000cb0c:	d9002215 	stw	r4,136(sp)
1000cb10:	1029883a 	mov	r20,r2
1000cb14:	10024c16 	blt	r2,zero,1000d448 <___vfiprintf_internal_r+0x1114>
1000cb18:	dd401d83 	ldbu	r21,118(sp)
1000cb1c:	80007116 	blt	r16,zero,1000cce4 <___vfiprintf_internal_r+0x9b0>
1000cb20:	00ffdfc4 	movi	r3,-129
1000cb24:	9d04b03a 	or	r2,r19,r20
1000cb28:	88e2703a 	and	r17,r17,r3
1000cb2c:	1000d126 	beq	r2,zero,1000ce74 <___vfiprintf_internal_r+0xb40>
1000cb30:	a0023526 	beq	r20,zero,1000d408 <___vfiprintf_internal_r+0x10d4>
1000cb34:	ddc01a04 	addi	r23,sp,104
1000cb38:	4039883a 	mov	fp,r8
1000cb3c:	9809883a 	mov	r4,r19
1000cb40:	a00b883a 	mov	r5,r20
1000cb44:	01800284 	movi	r6,10
1000cb48:	000f883a 	mov	r7,zero
1000cb4c:	000e96c0 	call	1000e96c <__umoddi3>
1000cb50:	10800c04 	addi	r2,r2,48
1000cb54:	bdffffc4 	addi	r23,r23,-1
1000cb58:	9809883a 	mov	r4,r19
1000cb5c:	a00b883a 	mov	r5,r20
1000cb60:	b8800005 	stb	r2,0(r23)
1000cb64:	01800284 	movi	r6,10
1000cb68:	000f883a 	mov	r7,zero
1000cb6c:	000e3700 	call	1000e370 <__udivdi3>
1000cb70:	1027883a 	mov	r19,r2
1000cb74:	10c4b03a 	or	r2,r2,r3
1000cb78:	1829883a 	mov	r20,r3
1000cb7c:	103fef1e 	bne	r2,zero,1000cb3c <__alt_data_end+0xf800cb3c>
1000cb80:	d9001e17 	ldw	r4,120(sp)
1000cb84:	e011883a 	mov	r8,fp
1000cb88:	25e9c83a 	sub	r20,r4,r23
1000cb8c:	003eec06 	br	1000c740 <__alt_data_end+0xf800c740>
1000cb90:	d8802307 	ldb	r2,140(sp)
1000cb94:	1002361e 	bne	r2,zero,1000d470 <___vfiprintf_internal_r+0x113c>
1000cb98:	00c00804 	movi	r3,32
1000cb9c:	d8c02305 	stb	r3,140(sp)
1000cba0:	04c00044 	movi	r19,1
1000cba4:	b0c00007 	ldb	r3,0(r22)
1000cba8:	003e3f06 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000cbac:	8c400054 	ori	r17,r17,1
1000cbb0:	b0c00007 	ldb	r3,0(r22)
1000cbb4:	003e3c06 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000cbb8:	8c402014 	ori	r17,r17,128
1000cbbc:	b0c00007 	ldb	r3,0(r22)
1000cbc0:	003e3906 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000cbc4:	dc002715 	stw	r16,156(sp)
1000cbc8:	d8002515 	stw	zero,148(sp)
1000cbcc:	1f3ff404 	addi	fp,r3,-48
1000cbd0:	0009883a 	mov	r4,zero
1000cbd4:	b021883a 	mov	r16,r22
1000cbd8:	01400284 	movi	r5,10
1000cbdc:	0000fd00 	call	10000fd0 <__mulsi3>
1000cbe0:	80c00007 	ldb	r3,0(r16)
1000cbe4:	e089883a 	add	r4,fp,r2
1000cbe8:	b5800044 	addi	r22,r22,1
1000cbec:	1f3ff404 	addi	fp,r3,-48
1000cbf0:	b021883a 	mov	r16,r22
1000cbf4:	af3ff82e 	bgeu	r21,fp,1000cbd8 <__alt_data_end+0xf800cbd8>
1000cbf8:	d9002515 	stw	r4,148(sp)
1000cbfc:	dc002717 	ldw	r16,156(sp)
1000cc00:	003e2a06 	br	1000c4ac <__alt_data_end+0xf800c4ac>
1000cc04:	9cc03fcc 	andi	r19,r19,255
1000cc08:	b811883a 	mov	r8,r23
1000cc0c:	9802e91e 	bne	r19,zero,1000d7b4 <___vfiprintf_internal_r+0x1480>
1000cc10:	8c400414 	ori	r17,r17,16
1000cc14:	8880080c 	andi	r2,r17,32
1000cc18:	103fb81e 	bne	r2,zero,1000cafc <__alt_data_end+0xf800cafc>
1000cc1c:	8880040c 	andi	r2,r17,16
1000cc20:	10022e26 	beq	r2,zero,1000d4dc <___vfiprintf_internal_r+0x11a8>
1000cc24:	d9402217 	ldw	r5,136(sp)
1000cc28:	2cc00017 	ldw	r19,0(r5)
1000cc2c:	29400104 	addi	r5,r5,4
1000cc30:	d9402215 	stw	r5,136(sp)
1000cc34:	9829d7fa 	srai	r20,r19,31
1000cc38:	a005883a 	mov	r2,r20
1000cc3c:	003fb506 	br	1000cb14 <__alt_data_end+0xf800cb14>
1000cc40:	9cc03fcc 	andi	r19,r19,255
1000cc44:	b811883a 	mov	r8,r23
1000cc48:	9802fa1e 	bne	r19,zero,1000d834 <___vfiprintf_internal_r+0x1500>
1000cc4c:	8c400414 	ori	r17,r17,16
1000cc50:	8880080c 	andi	r2,r17,32
1000cc54:	103f661e 	bne	r2,zero,1000c9f0 <__alt_data_end+0xf800c9f0>
1000cc58:	8880040c 	andi	r2,r17,16
1000cc5c:	10020626 	beq	r2,zero,1000d478 <___vfiprintf_internal_r+0x1144>
1000cc60:	d9402217 	ldw	r5,136(sp)
1000cc64:	d8001d85 	stb	zero,118(sp)
1000cc68:	0029883a 	mov	r20,zero
1000cc6c:	28800104 	addi	r2,r5,4
1000cc70:	2cc00017 	ldw	r19,0(r5)
1000cc74:	80020816 	blt	r16,zero,1000d498 <___vfiprintf_internal_r+0x1164>
1000cc78:	00ffdfc4 	movi	r3,-129
1000cc7c:	d8802215 	stw	r2,136(sp)
1000cc80:	88e2703a 	and	r17,r17,r3
1000cc84:	983f651e 	bne	r19,zero,1000ca1c <__alt_data_end+0xf800ca1c>
1000cc88:	002b883a 	mov	r21,zero
1000cc8c:	8002cf26 	beq	r16,zero,1000d7cc <___vfiprintf_internal_r+0x1498>
1000cc90:	0027883a 	mov	r19,zero
1000cc94:	0029883a 	mov	r20,zero
1000cc98:	003f6106 	br	1000ca20 <__alt_data_end+0xf800ca20>
1000cc9c:	9cc03fcc 	andi	r19,r19,255
1000cca0:	b811883a 	mov	r8,r23
1000cca4:	9802e01e 	bne	r19,zero,1000d828 <___vfiprintf_internal_r+0x14f4>
1000cca8:	8c400414 	ori	r17,r17,16
1000ccac:	8880080c 	andi	r2,r17,32
1000ccb0:	1000641e 	bne	r2,zero,1000ce44 <___vfiprintf_internal_r+0xb10>
1000ccb4:	8880040c 	andi	r2,r17,16
1000ccb8:	1001c81e 	bne	r2,zero,1000d3dc <___vfiprintf_internal_r+0x10a8>
1000ccbc:	8880100c 	andi	r2,r17,64
1000ccc0:	d8001d85 	stb	zero,118(sp)
1000ccc4:	1002281e 	bne	r2,zero,1000d568 <___vfiprintf_internal_r+0x1234>
1000ccc8:	d9002217 	ldw	r4,136(sp)
1000cccc:	0029883a 	mov	r20,zero
1000ccd0:	20800104 	addi	r2,r4,4
1000ccd4:	24c00017 	ldw	r19,0(r4)
1000ccd8:	8001c60e 	bge	r16,zero,1000d3f4 <___vfiprintf_internal_r+0x10c0>
1000ccdc:	d8802215 	stw	r2,136(sp)
1000cce0:	002b883a 	mov	r21,zero
1000cce4:	9d04b03a 	or	r2,r19,r20
1000cce8:	103f911e 	bne	r2,zero,1000cb30 <__alt_data_end+0xf800cb30>
1000ccec:	00800044 	movi	r2,1
1000ccf0:	10803fcc 	andi	r2,r2,255
1000ccf4:	00c00044 	movi	r3,1
1000ccf8:	10c05f26 	beq	r2,r3,1000ce78 <___vfiprintf_internal_r+0xb44>
1000ccfc:	00c00084 	movi	r3,2
1000cd00:	10ffe31e 	bne	r2,r3,1000cc90 <__alt_data_end+0xf800cc90>
1000cd04:	0027883a 	mov	r19,zero
1000cd08:	0029883a 	mov	r20,zero
1000cd0c:	00015106 	br	1000d254 <___vfiprintf_internal_r+0xf20>
1000cd10:	9cc03fcc 	andi	r19,r19,255
1000cd14:	b811883a 	mov	r8,r23
1000cd18:	9802c01e 	bne	r19,zero,1000d81c <___vfiprintf_internal_r+0x14e8>
1000cd1c:	01440074 	movhi	r5,4097
1000cd20:	29504504 	addi	r5,r5,16660
1000cd24:	d9402615 	stw	r5,152(sp)
1000cd28:	8880080c 	andi	r2,r17,32
1000cd2c:	103f541e 	bne	r2,zero,1000ca80 <__alt_data_end+0xf800ca80>
1000cd30:	8880040c 	andi	r2,r17,16
1000cd34:	1001f226 	beq	r2,zero,1000d500 <___vfiprintf_internal_r+0x11cc>
1000cd38:	d9402217 	ldw	r5,136(sp)
1000cd3c:	0029883a 	mov	r20,zero
1000cd40:	2cc00017 	ldw	r19,0(r5)
1000cd44:	29400104 	addi	r5,r5,4
1000cd48:	d9402215 	stw	r5,136(sp)
1000cd4c:	003f5106 	br	1000ca94 <__alt_data_end+0xf800ca94>
1000cd50:	d8c02217 	ldw	r3,136(sp)
1000cd54:	b811883a 	mov	r8,r23
1000cd58:	d8001d85 	stb	zero,118(sp)
1000cd5c:	1dc00017 	ldw	r23,0(r3)
1000cd60:	1f000104 	addi	fp,r3,4
1000cd64:	b8025926 	beq	r23,zero,1000d6cc <___vfiprintf_internal_r+0x1398>
1000cd68:	80023316 	blt	r16,zero,1000d638 <___vfiprintf_internal_r+0x1304>
1000cd6c:	800d883a 	mov	r6,r16
1000cd70:	000b883a 	mov	r5,zero
1000cd74:	b809883a 	mov	r4,r23
1000cd78:	da002a15 	stw	r8,168(sp)
1000cd7c:	0008f040 	call	10008f04 <memchr>
1000cd80:	da002a17 	ldw	r8,168(sp)
1000cd84:	10026826 	beq	r2,zero,1000d728 <___vfiprintf_internal_r+0x13f4>
1000cd88:	15e9c83a 	sub	r20,r2,r23
1000cd8c:	dd401d83 	ldbu	r21,118(sp)
1000cd90:	df002215 	stw	fp,136(sp)
1000cd94:	0021883a 	mov	r16,zero
1000cd98:	003e6906 	br	1000c740 <__alt_data_end+0xf800c740>
1000cd9c:	9cc03fcc 	andi	r19,r19,255
1000cda0:	b811883a 	mov	r8,r23
1000cda4:	983fc126 	beq	r19,zero,1000ccac <__alt_data_end+0xf800ccac>
1000cda8:	d8c02303 	ldbu	r3,140(sp)
1000cdac:	d8c01d85 	stb	r3,118(sp)
1000cdb0:	003fbe06 	br	1000ccac <__alt_data_end+0xf800ccac>
1000cdb4:	d9002217 	ldw	r4,136(sp)
1000cdb8:	d9402217 	ldw	r5,136(sp)
1000cdbc:	21000017 	ldw	r4,0(r4)
1000cdc0:	28800104 	addi	r2,r5,4
1000cdc4:	d9002515 	stw	r4,148(sp)
1000cdc8:	203e3d16 	blt	r4,zero,1000c6c0 <__alt_data_end+0xf800c6c0>
1000cdcc:	d8802215 	stw	r2,136(sp)
1000cdd0:	b0c00007 	ldb	r3,0(r22)
1000cdd4:	003db406 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000cdd8:	00c00ac4 	movi	r3,43
1000cddc:	d8c02305 	stb	r3,140(sp)
1000cde0:	04c00044 	movi	r19,1
1000cde4:	b0c00007 	ldb	r3,0(r22)
1000cde8:	003daf06 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000cdec:	b0c00007 	ldb	r3,0(r22)
1000cdf0:	01000a84 	movi	r4,42
1000cdf4:	b4000044 	addi	r16,r22,1
1000cdf8:	19025e26 	beq	r3,r4,1000d774 <___vfiprintf_internal_r+0x1440>
1000cdfc:	1f3ff404 	addi	fp,r3,-48
1000ce00:	0009883a 	mov	r4,zero
1000ce04:	af025236 	bltu	r21,fp,1000d750 <___vfiprintf_internal_r+0x141c>
1000ce08:	01400284 	movi	r5,10
1000ce0c:	0000fd00 	call	10000fd0 <__mulsi3>
1000ce10:	80c00007 	ldb	r3,0(r16)
1000ce14:	1709883a 	add	r4,r2,fp
1000ce18:	85800044 	addi	r22,r16,1
1000ce1c:	1f3ff404 	addi	fp,r3,-48
1000ce20:	b021883a 	mov	r16,r22
1000ce24:	af3ff82e 	bgeu	r21,fp,1000ce08 <__alt_data_end+0xf800ce08>
1000ce28:	2021883a 	mov	r16,r4
1000ce2c:	203d9f0e 	bge	r4,zero,1000c4ac <__alt_data_end+0xf800c4ac>
1000ce30:	043fffc4 	movi	r16,-1
1000ce34:	003d9d06 	br	1000c4ac <__alt_data_end+0xf800c4ac>
1000ce38:	8c401014 	ori	r17,r17,64
1000ce3c:	b0c00007 	ldb	r3,0(r22)
1000ce40:	003d9906 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000ce44:	d9002217 	ldw	r4,136(sp)
1000ce48:	d8001d85 	stb	zero,118(sp)
1000ce4c:	20c00204 	addi	r3,r4,8
1000ce50:	24c00017 	ldw	r19,0(r4)
1000ce54:	25000117 	ldw	r20,4(r4)
1000ce58:	8001e716 	blt	r16,zero,1000d5f8 <___vfiprintf_internal_r+0x12c4>
1000ce5c:	013fdfc4 	movi	r4,-129
1000ce60:	9d04b03a 	or	r2,r19,r20
1000ce64:	d8c02215 	stw	r3,136(sp)
1000ce68:	8922703a 	and	r17,r17,r4
1000ce6c:	002b883a 	mov	r21,zero
1000ce70:	103f2f1e 	bne	r2,zero,1000cb30 <__alt_data_end+0xf800cb30>
1000ce74:	803e2f26 	beq	r16,zero,1000c734 <__alt_data_end+0xf800c734>
1000ce78:	0027883a 	mov	r19,zero
1000ce7c:	9cc00c04 	addi	r19,r19,48
1000ce80:	dcc019c5 	stb	r19,103(sp)
1000ce84:	dd002817 	ldw	r20,160(sp)
1000ce88:	ddc019c4 	addi	r23,sp,103
1000ce8c:	003e2c06 	br	1000c740 <__alt_data_end+0xf800c740>
1000ce90:	9cc03fcc 	andi	r19,r19,255
1000ce94:	b811883a 	mov	r8,r23
1000ce98:	9802571e 	bne	r19,zero,1000d7f8 <___vfiprintf_internal_r+0x14c4>
1000ce9c:	18005726 	beq	r3,zero,1000cffc <___vfiprintf_internal_r+0xcc8>
1000cea0:	04c00044 	movi	r19,1
1000cea4:	d8c01005 	stb	r3,64(sp)
1000cea8:	d8001d85 	stb	zero,118(sp)
1000ceac:	9829883a 	mov	r20,r19
1000ceb0:	ddc01004 	addi	r23,sp,64
1000ceb4:	003f0a06 	br	1000cae0 <__alt_data_end+0xf800cae0>
1000ceb8:	d9402017 	ldw	r5,128(sp)
1000cebc:	d9002117 	ldw	r4,132(sp)
1000cec0:	d9801a04 	addi	r6,sp,104
1000cec4:	da802a15 	stw	r10,168(sp)
1000cec8:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000cecc:	da802a17 	ldw	r10,168(sp)
1000ced0:	1000501e 	bne	r2,zero,1000d014 <___vfiprintf_internal_r+0xce0>
1000ced4:	d9801b17 	ldw	r6,108(sp)
1000ced8:	d8801c17 	ldw	r2,112(sp)
1000cedc:	d811883a 	mov	r8,sp
1000cee0:	31000044 	addi	r4,r6,1
1000cee4:	003e3606 	br	1000c7c0 <__alt_data_end+0xf800c7c0>
1000cee8:	d9001b17 	ldw	r4,108(sp)
1000ceec:	d8801c17 	ldw	r2,112(sp)
1000cef0:	21400044 	addi	r5,r4,1
1000cef4:	d9801d87 	ldb	r6,118(sp)
1000cef8:	303e5226 	beq	r6,zero,1000c844 <__alt_data_end+0xf800c844>
1000cefc:	01800044 	movi	r6,1
1000cf00:	d9001d84 	addi	r4,sp,118
1000cf04:	1185883a 	add	r2,r2,r6
1000cf08:	41000015 	stw	r4,0(r8)
1000cf0c:	41800115 	stw	r6,4(r8)
1000cf10:	d8801c15 	stw	r2,112(sp)
1000cf14:	d9401b15 	stw	r5,108(sp)
1000cf18:	010001c4 	movi	r4,7
1000cf1c:	2140b00e 	bge	r4,r5,1000d1e0 <___vfiprintf_internal_r+0xeac>
1000cf20:	1000f61e 	bne	r2,zero,1000d2fc <___vfiprintf_internal_r+0xfc8>
1000cf24:	3800b31e 	bne	r7,zero,1000d1f4 <___vfiprintf_internal_r+0xec0>
1000cf28:	0009883a 	mov	r4,zero
1000cf2c:	300b883a 	mov	r5,r6
1000cf30:	d811883a 	mov	r8,sp
1000cf34:	01802004 	movi	r6,128
1000cf38:	19be5226 	beq	r3,r6,1000c884 <__alt_data_end+0xf800c884>
1000cf3c:	8521c83a 	sub	r16,r16,r20
1000cf40:	043e790e 	bge	zero,r16,1000c928 <__alt_data_end+0xf800c928>
1000cf44:	05400404 	movi	r21,16
1000cf48:	ac01b00e 	bge	r21,r16,1000d60c <___vfiprintf_internal_r+0x12d8>
1000cf4c:	01440074 	movhi	r5,4097
1000cf50:	2950bb04 	addi	r5,r5,17132
1000cf54:	d9402315 	stw	r5,140(sp)
1000cf58:	070001c4 	movi	fp,7
1000cf5c:	00000506 	br	1000cf74 <___vfiprintf_internal_r+0xc40>
1000cf60:	21400084 	addi	r5,r4,2
1000cf64:	42000204 	addi	r8,r8,8
1000cf68:	1809883a 	mov	r4,r3
1000cf6c:	843ffc04 	addi	r16,r16,-16
1000cf70:	ac000d0e 	bge	r21,r16,1000cfa8 <___vfiprintf_internal_r+0xc74>
1000cf74:	10800404 	addi	r2,r2,16
1000cf78:	20c00044 	addi	r3,r4,1
1000cf7c:	44800015 	stw	r18,0(r8)
1000cf80:	45400115 	stw	r21,4(r8)
1000cf84:	d8801c15 	stw	r2,112(sp)
1000cf88:	d8c01b15 	stw	r3,108(sp)
1000cf8c:	e0fff40e 	bge	fp,r3,1000cf60 <__alt_data_end+0xf800cf60>
1000cf90:	1000101e 	bne	r2,zero,1000cfd4 <___vfiprintf_internal_r+0xca0>
1000cf94:	843ffc04 	addi	r16,r16,-16
1000cf98:	01400044 	movi	r5,1
1000cf9c:	0009883a 	mov	r4,zero
1000cfa0:	d811883a 	mov	r8,sp
1000cfa4:	ac3ff316 	blt	r21,r16,1000cf74 <__alt_data_end+0xf800cf74>
1000cfa8:	d8c02317 	ldw	r3,140(sp)
1000cfac:	1405883a 	add	r2,r2,r16
1000cfb0:	44000115 	stw	r16,4(r8)
1000cfb4:	40c00015 	stw	r3,0(r8)
1000cfb8:	d8801c15 	stw	r2,112(sp)
1000cfbc:	d9401b15 	stw	r5,108(sp)
1000cfc0:	00c001c4 	movi	r3,7
1000cfc4:	19401916 	blt	r3,r5,1000d02c <___vfiprintf_internal_r+0xcf8>
1000cfc8:	42000204 	addi	r8,r8,8
1000cfcc:	29400044 	addi	r5,r5,1
1000cfd0:	003e5506 	br	1000c928 <__alt_data_end+0xf800c928>
1000cfd4:	d9402017 	ldw	r5,128(sp)
1000cfd8:	d9002117 	ldw	r4,132(sp)
1000cfdc:	d9801a04 	addi	r6,sp,104
1000cfe0:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000cfe4:	10000b1e 	bne	r2,zero,1000d014 <___vfiprintf_internal_r+0xce0>
1000cfe8:	d9001b17 	ldw	r4,108(sp)
1000cfec:	d8801c17 	ldw	r2,112(sp)
1000cff0:	d811883a 	mov	r8,sp
1000cff4:	21400044 	addi	r5,r4,1
1000cff8:	003fdc06 	br	1000cf6c <__alt_data_end+0xf800cf6c>
1000cffc:	d8801c17 	ldw	r2,112(sp)
1000d000:	10000426 	beq	r2,zero,1000d014 <___vfiprintf_internal_r+0xce0>
1000d004:	d9402017 	ldw	r5,128(sp)
1000d008:	d9002117 	ldw	r4,132(sp)
1000d00c:	d9801a04 	addi	r6,sp,104
1000d010:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d014:	d9402017 	ldw	r5,128(sp)
1000d018:	2880030b 	ldhu	r2,12(r5)
1000d01c:	1080100c 	andi	r2,r2,64
1000d020:	10014d1e 	bne	r2,zero,1000d558 <___vfiprintf_internal_r+0x1224>
1000d024:	d8802417 	ldw	r2,144(sp)
1000d028:	003d9706 	br	1000c688 <__alt_data_end+0xf800c688>
1000d02c:	1000d21e 	bne	r2,zero,1000d378 <___vfiprintf_internal_r+0x1044>
1000d030:	00c00044 	movi	r3,1
1000d034:	a005883a 	mov	r2,r20
1000d038:	ddc00015 	stw	r23,0(sp)
1000d03c:	dd000115 	stw	r20,4(sp)
1000d040:	dd001c15 	stw	r20,112(sp)
1000d044:	d8c01b15 	stw	r3,108(sp)
1000d048:	d811883a 	mov	r8,sp
1000d04c:	42000204 	addi	r8,r8,8
1000d050:	8c40010c 	andi	r17,r17,4
1000d054:	88004026 	beq	r17,zero,1000d158 <___vfiprintf_internal_r+0xe24>
1000d058:	d9002517 	ldw	r4,148(sp)
1000d05c:	24e3c83a 	sub	r17,r4,r19
1000d060:	04403d0e 	bge	zero,r17,1000d158 <___vfiprintf_internal_r+0xe24>
1000d064:	04000404 	movi	r16,16
1000d068:	8441a90e 	bge	r16,r17,1000d710 <___vfiprintf_internal_r+0x13dc>
1000d06c:	00c40074 	movhi	r3,4097
1000d070:	18d0bf04 	addi	r3,r3,17148
1000d074:	d9001b17 	ldw	r4,108(sp)
1000d078:	d8c02315 	stw	r3,140(sp)
1000d07c:	050001c4 	movi	r20,7
1000d080:	dd402117 	ldw	r21,132(sp)
1000d084:	ddc02017 	ldw	r23,128(sp)
1000d088:	00000506 	br	1000d0a0 <___vfiprintf_internal_r+0xd6c>
1000d08c:	21400084 	addi	r5,r4,2
1000d090:	42000204 	addi	r8,r8,8
1000d094:	1809883a 	mov	r4,r3
1000d098:	8c7ffc04 	addi	r17,r17,-16
1000d09c:	84400f0e 	bge	r16,r17,1000d0dc <___vfiprintf_internal_r+0xda8>
1000d0a0:	01440074 	movhi	r5,4097
1000d0a4:	10800404 	addi	r2,r2,16
1000d0a8:	20c00044 	addi	r3,r4,1
1000d0ac:	2950bf04 	addi	r5,r5,17148
1000d0b0:	41400015 	stw	r5,0(r8)
1000d0b4:	44000115 	stw	r16,4(r8)
1000d0b8:	d8801c15 	stw	r2,112(sp)
1000d0bc:	d8c01b15 	stw	r3,108(sp)
1000d0c0:	a0fff20e 	bge	r20,r3,1000d08c <__alt_data_end+0xf800d08c>
1000d0c4:	1000141e 	bne	r2,zero,1000d118 <___vfiprintf_internal_r+0xde4>
1000d0c8:	8c7ffc04 	addi	r17,r17,-16
1000d0cc:	01400044 	movi	r5,1
1000d0d0:	0009883a 	mov	r4,zero
1000d0d4:	d811883a 	mov	r8,sp
1000d0d8:	847ff116 	blt	r16,r17,1000d0a0 <__alt_data_end+0xf800d0a0>
1000d0dc:	d8c02317 	ldw	r3,140(sp)
1000d0e0:	1445883a 	add	r2,r2,r17
1000d0e4:	44400115 	stw	r17,4(r8)
1000d0e8:	40c00015 	stw	r3,0(r8)
1000d0ec:	d8801c15 	stw	r2,112(sp)
1000d0f0:	d9401b15 	stw	r5,108(sp)
1000d0f4:	00c001c4 	movi	r3,7
1000d0f8:	1940170e 	bge	r3,r5,1000d158 <___vfiprintf_internal_r+0xe24>
1000d0fc:	1000101e 	bne	r2,zero,1000d140 <___vfiprintf_internal_r+0xe0c>
1000d100:	d8802517 	ldw	r2,148(sp)
1000d104:	14c11616 	blt	r2,r19,1000d560 <___vfiprintf_internal_r+0x122c>
1000d108:	d9002417 	ldw	r4,144(sp)
1000d10c:	2089883a 	add	r4,r4,r2
1000d110:	d9002415 	stw	r4,144(sp)
1000d114:	003e1806 	br	1000c978 <__alt_data_end+0xf800c978>
1000d118:	d9801a04 	addi	r6,sp,104
1000d11c:	b80b883a 	mov	r5,r23
1000d120:	a809883a 	mov	r4,r21
1000d124:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d128:	103fba1e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d12c:	d9001b17 	ldw	r4,108(sp)
1000d130:	d8801c17 	ldw	r2,112(sp)
1000d134:	d811883a 	mov	r8,sp
1000d138:	21400044 	addi	r5,r4,1
1000d13c:	003fd606 	br	1000d098 <__alt_data_end+0xf800d098>
1000d140:	d9402017 	ldw	r5,128(sp)
1000d144:	d9002117 	ldw	r4,132(sp)
1000d148:	d9801a04 	addi	r6,sp,104
1000d14c:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d150:	103fb01e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d154:	d8801c17 	ldw	r2,112(sp)
1000d158:	d8c02517 	ldw	r3,148(sp)
1000d15c:	1cc0010e 	bge	r3,r19,1000d164 <___vfiprintf_internal_r+0xe30>
1000d160:	9807883a 	mov	r3,r19
1000d164:	d9002417 	ldw	r4,144(sp)
1000d168:	20c9883a 	add	r4,r4,r3
1000d16c:	d9002415 	stw	r4,144(sp)
1000d170:	103e0126 	beq	r2,zero,1000c978 <__alt_data_end+0xf800c978>
1000d174:	d9402017 	ldw	r5,128(sp)
1000d178:	d9002117 	ldw	r4,132(sp)
1000d17c:	d9801a04 	addi	r6,sp,104
1000d180:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d184:	103dfc26 	beq	r2,zero,1000c978 <__alt_data_end+0xf800c978>
1000d188:	003fa206 	br	1000d014 <__alt_data_end+0xf800d014>
1000d18c:	d9402017 	ldw	r5,128(sp)
1000d190:	d9002117 	ldw	r4,132(sp)
1000d194:	d9801a04 	addi	r6,sp,104
1000d198:	d9c02b15 	stw	r7,172(sp)
1000d19c:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d1a0:	d9c02b17 	ldw	r7,172(sp)
1000d1a4:	103f9b1e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d1a8:	d9001b17 	ldw	r4,108(sp)
1000d1ac:	d8801c17 	ldw	r2,112(sp)
1000d1b0:	d811883a 	mov	r8,sp
1000d1b4:	21800044 	addi	r6,r4,1
1000d1b8:	003dbf06 	br	1000c8b8 <__alt_data_end+0xf800c8b8>
1000d1bc:	1000d81e 	bne	r2,zero,1000d520 <___vfiprintf_internal_r+0x11ec>
1000d1c0:	d9001d87 	ldb	r4,118(sp)
1000d1c4:	20000a26 	beq	r4,zero,1000d1f0 <___vfiprintf_internal_r+0xebc>
1000d1c8:	00800044 	movi	r2,1
1000d1cc:	d9001d84 	addi	r4,sp,118
1000d1d0:	100b883a 	mov	r5,r2
1000d1d4:	d9000015 	stw	r4,0(sp)
1000d1d8:	d8800115 	stw	r2,4(sp)
1000d1dc:	d811883a 	mov	r8,sp
1000d1e0:	2809883a 	mov	r4,r5
1000d1e4:	42000204 	addi	r8,r8,8
1000d1e8:	29400044 	addi	r5,r5,1
1000d1ec:	003d9506 	br	1000c844 <__alt_data_end+0xf800c844>
1000d1f0:	3800fd26 	beq	r7,zero,1000d5e8 <___vfiprintf_internal_r+0x12b4>
1000d1f4:	00800084 	movi	r2,2
1000d1f8:	d9001d04 	addi	r4,sp,116
1000d1fc:	d9000015 	stw	r4,0(sp)
1000d200:	d8800115 	stw	r2,4(sp)
1000d204:	01400044 	movi	r5,1
1000d208:	d811883a 	mov	r8,sp
1000d20c:	2809883a 	mov	r4,r5
1000d210:	42000204 	addi	r8,r8,8
1000d214:	29400044 	addi	r5,r5,1
1000d218:	003f4606 	br	1000cf34 <__alt_data_end+0xf800cf34>
1000d21c:	d8802517 	ldw	r2,148(sp)
1000d220:	14c0010e 	bge	r2,r19,1000d228 <___vfiprintf_internal_r+0xef4>
1000d224:	9805883a 	mov	r2,r19
1000d228:	d9402417 	ldw	r5,144(sp)
1000d22c:	288b883a 	add	r5,r5,r2
1000d230:	d9402415 	stw	r5,144(sp)
1000d234:	003dd006 	br	1000c978 <__alt_data_end+0xf800c978>
1000d238:	d8001d85 	stb	zero,118(sp)
1000d23c:	80005d16 	blt	r16,zero,1000d3b4 <___vfiprintf_internal_r+0x1080>
1000d240:	00ffdfc4 	movi	r3,-129
1000d244:	9d04b03a 	or	r2,r19,r20
1000d248:	88e2703a 	and	r17,r17,r3
1000d24c:	103d3726 	beq	r2,zero,1000c72c <__alt_data_end+0xf800c72c>
1000d250:	002b883a 	mov	r21,zero
1000d254:	d9002617 	ldw	r4,152(sp)
1000d258:	ddc01a04 	addi	r23,sp,104
1000d25c:	988003cc 	andi	r2,r19,15
1000d260:	a006973a 	slli	r3,r20,28
1000d264:	2085883a 	add	r2,r4,r2
1000d268:	9826d13a 	srli	r19,r19,4
1000d26c:	10800003 	ldbu	r2,0(r2)
1000d270:	a028d13a 	srli	r20,r20,4
1000d274:	bdffffc4 	addi	r23,r23,-1
1000d278:	1ce6b03a 	or	r19,r3,r19
1000d27c:	b8800005 	stb	r2,0(r23)
1000d280:	9d04b03a 	or	r2,r19,r20
1000d284:	103ff51e 	bne	r2,zero,1000d25c <__alt_data_end+0xf800d25c>
1000d288:	d8801e17 	ldw	r2,120(sp)
1000d28c:	15e9c83a 	sub	r20,r2,r23
1000d290:	003d2b06 	br	1000c740 <__alt_data_end+0xf800c740>
1000d294:	d9402017 	ldw	r5,128(sp)
1000d298:	d9002117 	ldw	r4,132(sp)
1000d29c:	d9801a04 	addi	r6,sp,104
1000d2a0:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d2a4:	103f5b1e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d2a8:	d8801c17 	ldw	r2,112(sp)
1000d2ac:	d811883a 	mov	r8,sp
1000d2b0:	003f6706 	br	1000d050 <__alt_data_end+0xf800d050>
1000d2b4:	d9402017 	ldw	r5,128(sp)
1000d2b8:	d9002117 	ldw	r4,132(sp)
1000d2bc:	d9801a04 	addi	r6,sp,104
1000d2c0:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d2c4:	103f531e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d2c8:	d811883a 	mov	r8,sp
1000d2cc:	003cd906 	br	1000c634 <__alt_data_end+0xf800c634>
1000d2d0:	10803fcc 	andi	r2,r2,255
1000d2d4:	1080201c 	xori	r2,r2,128
1000d2d8:	10bfe004 	addi	r2,r2,-128
1000d2dc:	00c00c04 	movi	r3,48
1000d2e0:	10ffe926 	beq	r2,r3,1000d288 <__alt_data_end+0xf800d288>
1000d2e4:	b8ffffc5 	stb	r3,-1(r23)
1000d2e8:	d8c01e17 	ldw	r3,120(sp)
1000d2ec:	b8bfffc4 	addi	r2,r23,-1
1000d2f0:	102f883a 	mov	r23,r2
1000d2f4:	18a9c83a 	sub	r20,r3,r2
1000d2f8:	003d1106 	br	1000c740 <__alt_data_end+0xf800c740>
1000d2fc:	d9402017 	ldw	r5,128(sp)
1000d300:	d9002117 	ldw	r4,132(sp)
1000d304:	d9801a04 	addi	r6,sp,104
1000d308:	d8c02a15 	stw	r3,168(sp)
1000d30c:	d9c02b15 	stw	r7,172(sp)
1000d310:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d314:	d8c02a17 	ldw	r3,168(sp)
1000d318:	d9c02b17 	ldw	r7,172(sp)
1000d31c:	103f3d1e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d320:	d9001b17 	ldw	r4,108(sp)
1000d324:	d8801c17 	ldw	r2,112(sp)
1000d328:	d811883a 	mov	r8,sp
1000d32c:	21400044 	addi	r5,r4,1
1000d330:	003d4406 	br	1000c844 <__alt_data_end+0xf800c844>
1000d334:	d9402017 	ldw	r5,128(sp)
1000d338:	d9002117 	ldw	r4,132(sp)
1000d33c:	d9801a04 	addi	r6,sp,104
1000d340:	d8c02a15 	stw	r3,168(sp)
1000d344:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d348:	d8c02a17 	ldw	r3,168(sp)
1000d34c:	103f311e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d350:	d9001b17 	ldw	r4,108(sp)
1000d354:	d8801c17 	ldw	r2,112(sp)
1000d358:	d811883a 	mov	r8,sp
1000d35c:	21400044 	addi	r5,r4,1
1000d360:	003ef406 	br	1000cf34 <__alt_data_end+0xf800cf34>
1000d364:	1000bd1e 	bne	r2,zero,1000d65c <___vfiprintf_internal_r+0x1328>
1000d368:	01400044 	movi	r5,1
1000d36c:	0009883a 	mov	r4,zero
1000d370:	d811883a 	mov	r8,sp
1000d374:	003ef106 	br	1000cf3c <__alt_data_end+0xf800cf3c>
1000d378:	d9402017 	ldw	r5,128(sp)
1000d37c:	d9002117 	ldw	r4,132(sp)
1000d380:	d9801a04 	addi	r6,sp,104
1000d384:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d388:	103f221e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d38c:	d9401b17 	ldw	r5,108(sp)
1000d390:	d8801c17 	ldw	r2,112(sp)
1000d394:	d811883a 	mov	r8,sp
1000d398:	29400044 	addi	r5,r5,1
1000d39c:	003d6206 	br	1000c928 <__alt_data_end+0xf800c928>
1000d3a0:	01440074 	movhi	r5,4097
1000d3a4:	29504a04 	addi	r5,r5,16680
1000d3a8:	d9402615 	stw	r5,152(sp)
1000d3ac:	d8c02215 	stw	r3,136(sp)
1000d3b0:	1023883a 	mov	r17,r2
1000d3b4:	9d04b03a 	or	r2,r19,r20
1000d3b8:	103fa51e 	bne	r2,zero,1000d250 <__alt_data_end+0xf800d250>
1000d3bc:	002b883a 	mov	r21,zero
1000d3c0:	00800084 	movi	r2,2
1000d3c4:	003e4a06 	br	1000ccf0 <__alt_data_end+0xf800ccf0>
1000d3c8:	01440074 	movhi	r5,4097
1000d3cc:	29504a04 	addi	r5,r5,16680
1000d3d0:	002b883a 	mov	r21,zero
1000d3d4:	d9402615 	stw	r5,152(sp)
1000d3d8:	003f9e06 	br	1000d254 <__alt_data_end+0xf800d254>
1000d3dc:	d9402217 	ldw	r5,136(sp)
1000d3e0:	d8001d85 	stb	zero,118(sp)
1000d3e4:	0029883a 	mov	r20,zero
1000d3e8:	28800104 	addi	r2,r5,4
1000d3ec:	2cc00017 	ldw	r19,0(r5)
1000d3f0:	803e3a16 	blt	r16,zero,1000ccdc <__alt_data_end+0xf800ccdc>
1000d3f4:	00ffdfc4 	movi	r3,-129
1000d3f8:	d8802215 	stw	r2,136(sp)
1000d3fc:	88e2703a 	and	r17,r17,r3
1000d400:	002b883a 	mov	r21,zero
1000d404:	983e9b26 	beq	r19,zero,1000ce74 <__alt_data_end+0xf800ce74>
1000d408:	00800244 	movi	r2,9
1000d40c:	14fdc936 	bltu	r2,r19,1000cb34 <__alt_data_end+0xf800cb34>
1000d410:	003e9a06 	br	1000ce7c <__alt_data_end+0xf800ce7c>
1000d414:	00800c04 	movi	r2,48
1000d418:	d8c01d45 	stb	r3,117(sp)
1000d41c:	d8801d05 	stb	r2,116(sp)
1000d420:	d8001d85 	stb	zero,118(sp)
1000d424:	88c00094 	ori	r3,r17,2
1000d428:	80009c16 	blt	r16,zero,1000d69c <___vfiprintf_internal_r+0x1368>
1000d42c:	00bfdfc4 	movi	r2,-129
1000d430:	88a2703a 	and	r17,r17,r2
1000d434:	8c400094 	ori	r17,r17,2
1000d438:	002b883a 	mov	r21,zero
1000d43c:	003f8506 	br	1000d254 <__alt_data_end+0xf800d254>
1000d440:	b029883a 	mov	r20,r22
1000d444:	003c0b06 	br	1000c474 <__alt_data_end+0xf800c474>
1000d448:	04e7c83a 	sub	r19,zero,r19
1000d44c:	05400b44 	movi	r21,45
1000d450:	9804c03a 	cmpne	r2,r19,zero
1000d454:	0529c83a 	sub	r20,zero,r20
1000d458:	dd401d85 	stb	r21,118(sp)
1000d45c:	a0a9c83a 	sub	r20,r20,r2
1000d460:	80009716 	blt	r16,zero,1000d6c0 <___vfiprintf_internal_r+0x138c>
1000d464:	00bfdfc4 	movi	r2,-129
1000d468:	88a2703a 	and	r17,r17,r2
1000d46c:	003db006 	br	1000cb30 <__alt_data_end+0xf800cb30>
1000d470:	b0c00007 	ldb	r3,0(r22)
1000d474:	003c0c06 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000d478:	8880100c 	andi	r2,r17,64
1000d47c:	d8001d85 	stb	zero,118(sp)
1000d480:	1000461e 	bne	r2,zero,1000d59c <___vfiprintf_internal_r+0x1268>
1000d484:	d9002217 	ldw	r4,136(sp)
1000d488:	0029883a 	mov	r20,zero
1000d48c:	20800104 	addi	r2,r4,4
1000d490:	24c00017 	ldw	r19,0(r4)
1000d494:	803df80e 	bge	r16,zero,1000cc78 <__alt_data_end+0xf800cc78>
1000d498:	9d06b03a 	or	r3,r19,r20
1000d49c:	d8802215 	stw	r2,136(sp)
1000d4a0:	183d5e1e 	bne	r3,zero,1000ca1c <__alt_data_end+0xf800ca1c>
1000d4a4:	002b883a 	mov	r21,zero
1000d4a8:	0005883a 	mov	r2,zero
1000d4ac:	003e1006 	br	1000ccf0 <__alt_data_end+0xf800ccf0>
1000d4b0:	8880040c 	andi	r2,r17,16
1000d4b4:	1000321e 	bne	r2,zero,1000d580 <___vfiprintf_internal_r+0x124c>
1000d4b8:	8c40100c 	andi	r17,r17,64
1000d4bc:	88008d26 	beq	r17,zero,1000d6f4 <___vfiprintf_internal_r+0x13c0>
1000d4c0:	d9402217 	ldw	r5,136(sp)
1000d4c4:	d8c02417 	ldw	r3,144(sp)
1000d4c8:	28800017 	ldw	r2,0(r5)
1000d4cc:	29400104 	addi	r5,r5,4
1000d4d0:	d9402215 	stw	r5,136(sp)
1000d4d4:	10c0000d 	sth	r3,0(r2)
1000d4d8:	003bca06 	br	1000c404 <__alt_data_end+0xf800c404>
1000d4dc:	8880100c 	andi	r2,r17,64
1000d4e0:	10003a26 	beq	r2,zero,1000d5cc <___vfiprintf_internal_r+0x1298>
1000d4e4:	d8802217 	ldw	r2,136(sp)
1000d4e8:	14c0000f 	ldh	r19,0(r2)
1000d4ec:	10800104 	addi	r2,r2,4
1000d4f0:	d8802215 	stw	r2,136(sp)
1000d4f4:	9829d7fa 	srai	r20,r19,31
1000d4f8:	a005883a 	mov	r2,r20
1000d4fc:	003d8506 	br	1000cb14 <__alt_data_end+0xf800cb14>
1000d500:	8880100c 	andi	r2,r17,64
1000d504:	10002b26 	beq	r2,zero,1000d5b4 <___vfiprintf_internal_r+0x1280>
1000d508:	d8802217 	ldw	r2,136(sp)
1000d50c:	0029883a 	mov	r20,zero
1000d510:	14c0000b 	ldhu	r19,0(r2)
1000d514:	10800104 	addi	r2,r2,4
1000d518:	d8802215 	stw	r2,136(sp)
1000d51c:	003d5d06 	br	1000ca94 <__alt_data_end+0xf800ca94>
1000d520:	d9402017 	ldw	r5,128(sp)
1000d524:	d9002117 	ldw	r4,132(sp)
1000d528:	d9801a04 	addi	r6,sp,104
1000d52c:	d8c02a15 	stw	r3,168(sp)
1000d530:	d9c02b15 	stw	r7,172(sp)
1000d534:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d538:	d8c02a17 	ldw	r3,168(sp)
1000d53c:	d9c02b17 	ldw	r7,172(sp)
1000d540:	103eb41e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d544:	d9001b17 	ldw	r4,108(sp)
1000d548:	d8801c17 	ldw	r2,112(sp)
1000d54c:	d811883a 	mov	r8,sp
1000d550:	21400044 	addi	r5,r4,1
1000d554:	003e6706 	br	1000cef4 <__alt_data_end+0xf800cef4>
1000d558:	00bfffc4 	movi	r2,-1
1000d55c:	003c4a06 	br	1000c688 <__alt_data_end+0xf800c688>
1000d560:	9805883a 	mov	r2,r19
1000d564:	003ee806 	br	1000d108 <__alt_data_end+0xf800d108>
1000d568:	d8c02217 	ldw	r3,136(sp)
1000d56c:	0029883a 	mov	r20,zero
1000d570:	18800104 	addi	r2,r3,4
1000d574:	1cc0000b 	ldhu	r19,0(r3)
1000d578:	803f9e0e 	bge	r16,zero,1000d3f4 <__alt_data_end+0xf800d3f4>
1000d57c:	003dd706 	br	1000ccdc <__alt_data_end+0xf800ccdc>
1000d580:	d8c02217 	ldw	r3,136(sp)
1000d584:	d9002417 	ldw	r4,144(sp)
1000d588:	18800017 	ldw	r2,0(r3)
1000d58c:	18c00104 	addi	r3,r3,4
1000d590:	d8c02215 	stw	r3,136(sp)
1000d594:	11000015 	stw	r4,0(r2)
1000d598:	003b9a06 	br	1000c404 <__alt_data_end+0xf800c404>
1000d59c:	d8c02217 	ldw	r3,136(sp)
1000d5a0:	0029883a 	mov	r20,zero
1000d5a4:	18800104 	addi	r2,r3,4
1000d5a8:	1cc0000b 	ldhu	r19,0(r3)
1000d5ac:	803db20e 	bge	r16,zero,1000cc78 <__alt_data_end+0xf800cc78>
1000d5b0:	003fb906 	br	1000d498 <__alt_data_end+0xf800d498>
1000d5b4:	d9002217 	ldw	r4,136(sp)
1000d5b8:	0029883a 	mov	r20,zero
1000d5bc:	24c00017 	ldw	r19,0(r4)
1000d5c0:	21000104 	addi	r4,r4,4
1000d5c4:	d9002215 	stw	r4,136(sp)
1000d5c8:	003d3206 	br	1000ca94 <__alt_data_end+0xf800ca94>
1000d5cc:	d8c02217 	ldw	r3,136(sp)
1000d5d0:	1cc00017 	ldw	r19,0(r3)
1000d5d4:	18c00104 	addi	r3,r3,4
1000d5d8:	d8c02215 	stw	r3,136(sp)
1000d5dc:	9829d7fa 	srai	r20,r19,31
1000d5e0:	a005883a 	mov	r2,r20
1000d5e4:	003d4b06 	br	1000cb14 <__alt_data_end+0xf800cb14>
1000d5e8:	0009883a 	mov	r4,zero
1000d5ec:	01400044 	movi	r5,1
1000d5f0:	d811883a 	mov	r8,sp
1000d5f4:	003e4f06 	br	1000cf34 <__alt_data_end+0xf800cf34>
1000d5f8:	d8c02215 	stw	r3,136(sp)
1000d5fc:	002b883a 	mov	r21,zero
1000d600:	003db806 	br	1000cce4 <__alt_data_end+0xf800cce4>
1000d604:	d811883a 	mov	r8,sp
1000d608:	003e9606 	br	1000d064 <__alt_data_end+0xf800d064>
1000d60c:	01040074 	movhi	r4,4097
1000d610:	2110bb04 	addi	r4,r4,17132
1000d614:	d9002315 	stw	r4,140(sp)
1000d618:	003e6306 	br	1000cfa8 <__alt_data_end+0xf800cfa8>
1000d61c:	b0c00043 	ldbu	r3,1(r22)
1000d620:	8c400814 	ori	r17,r17,32
1000d624:	b5800044 	addi	r22,r22,1
1000d628:	18c03fcc 	andi	r3,r3,255
1000d62c:	18c0201c 	xori	r3,r3,128
1000d630:	18ffe004 	addi	r3,r3,-128
1000d634:	003b9c06 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000d638:	b809883a 	mov	r4,r23
1000d63c:	da002a15 	stw	r8,168(sp)
1000d640:	00012780 	call	10001278 <strlen>
1000d644:	1029883a 	mov	r20,r2
1000d648:	dd401d83 	ldbu	r21,118(sp)
1000d64c:	df002215 	stw	fp,136(sp)
1000d650:	0021883a 	mov	r16,zero
1000d654:	da002a17 	ldw	r8,168(sp)
1000d658:	003c3906 	br	1000c740 <__alt_data_end+0xf800c740>
1000d65c:	d9402017 	ldw	r5,128(sp)
1000d660:	d9002117 	ldw	r4,132(sp)
1000d664:	d9801a04 	addi	r6,sp,104
1000d668:	000c2200 	call	1000c220 <__sprint_r.part.0>
1000d66c:	103e691e 	bne	r2,zero,1000d014 <__alt_data_end+0xf800d014>
1000d670:	d9001b17 	ldw	r4,108(sp)
1000d674:	d8801c17 	ldw	r2,112(sp)
1000d678:	d811883a 	mov	r8,sp
1000d67c:	21400044 	addi	r5,r4,1
1000d680:	003e2e06 	br	1000cf3c <__alt_data_end+0xf800cf3c>
1000d684:	01040074 	movhi	r4,4097
1000d688:	2110bf04 	addi	r4,r4,17148
1000d68c:	d9002315 	stw	r4,140(sp)
1000d690:	d9001b17 	ldw	r4,108(sp)
1000d694:	21000044 	addi	r4,r4,1
1000d698:	003c5e06 	br	1000c814 <__alt_data_end+0xf800c814>
1000d69c:	002b883a 	mov	r21,zero
1000d6a0:	00800084 	movi	r2,2
1000d6a4:	10803fcc 	andi	r2,r2,255
1000d6a8:	01000044 	movi	r4,1
1000d6ac:	11002b26 	beq	r2,r4,1000d75c <___vfiprintf_internal_r+0x1428>
1000d6b0:	01000084 	movi	r4,2
1000d6b4:	11002b1e 	bne	r2,r4,1000d764 <___vfiprintf_internal_r+0x1430>
1000d6b8:	1823883a 	mov	r17,r3
1000d6bc:	003ee506 	br	1000d254 <__alt_data_end+0xf800d254>
1000d6c0:	8807883a 	mov	r3,r17
1000d6c4:	00800044 	movi	r2,1
1000d6c8:	003ff606 	br	1000d6a4 <__alt_data_end+0xf800d6a4>
1000d6cc:	00800184 	movi	r2,6
1000d6d0:	1400012e 	bgeu	r2,r16,1000d6d8 <___vfiprintf_internal_r+0x13a4>
1000d6d4:	1021883a 	mov	r16,r2
1000d6d8:	8029883a 	mov	r20,r16
1000d6dc:	8027883a 	mov	r19,r16
1000d6e0:	80002216 	blt	r16,zero,1000d76c <___vfiprintf_internal_r+0x1438>
1000d6e4:	05c40074 	movhi	r23,4097
1000d6e8:	df002215 	stw	fp,136(sp)
1000d6ec:	bdd04f04 	addi	r23,r23,16700
1000d6f0:	003cfb06 	br	1000cae0 <__alt_data_end+0xf800cae0>
1000d6f4:	d9002217 	ldw	r4,136(sp)
1000d6f8:	d9402417 	ldw	r5,144(sp)
1000d6fc:	20800017 	ldw	r2,0(r4)
1000d700:	21000104 	addi	r4,r4,4
1000d704:	d9002215 	stw	r4,136(sp)
1000d708:	11400015 	stw	r5,0(r2)
1000d70c:	003b3d06 	br	1000c404 <__alt_data_end+0xf800c404>
1000d710:	01440074 	movhi	r5,4097
1000d714:	2950bf04 	addi	r5,r5,17148
1000d718:	d9402315 	stw	r5,140(sp)
1000d71c:	d9401b17 	ldw	r5,108(sp)
1000d720:	29400044 	addi	r5,r5,1
1000d724:	003e6d06 	br	1000d0dc <__alt_data_end+0xf800d0dc>
1000d728:	8029883a 	mov	r20,r16
1000d72c:	dd401d83 	ldbu	r21,118(sp)
1000d730:	df002215 	stw	fp,136(sp)
1000d734:	0021883a 	mov	r16,zero
1000d738:	003c0106 	br	1000c740 <__alt_data_end+0xf800c740>
1000d73c:	00c40074 	movhi	r3,4097
1000d740:	18d0bb04 	addi	r3,r3,17132
1000d744:	d8c02315 	stw	r3,140(sp)
1000d748:	280d883a 	mov	r6,r5
1000d74c:	003c6906 	br	1000c8f4 <__alt_data_end+0xf800c8f4>
1000d750:	802d883a 	mov	r22,r16
1000d754:	0021883a 	mov	r16,zero
1000d758:	003b5406 	br	1000c4ac <__alt_data_end+0xf800c4ac>
1000d75c:	1823883a 	mov	r17,r3
1000d760:	003cf306 	br	1000cb30 <__alt_data_end+0xf800cb30>
1000d764:	1823883a 	mov	r17,r3
1000d768:	003cad06 	br	1000ca20 <__alt_data_end+0xf800ca20>
1000d76c:	0027883a 	mov	r19,zero
1000d770:	003fdc06 	br	1000d6e4 <__alt_data_end+0xf800d6e4>
1000d774:	d9402217 	ldw	r5,136(sp)
1000d778:	8005883a 	mov	r2,r16
1000d77c:	b0c00043 	ldbu	r3,1(r22)
1000d780:	2c000017 	ldw	r16,0(r5)
1000d784:	29000104 	addi	r4,r5,4
1000d788:	d9002215 	stw	r4,136(sp)
1000d78c:	102d883a 	mov	r22,r2
1000d790:	803fa50e 	bge	r16,zero,1000d628 <__alt_data_end+0xf800d628>
1000d794:	18c03fcc 	andi	r3,r3,255
1000d798:	18c0201c 	xori	r3,r3,128
1000d79c:	043fffc4 	movi	r16,-1
1000d7a0:	18ffe004 	addi	r3,r3,-128
1000d7a4:	003b4006 	br	1000c4a8 <__alt_data_end+0xf800c4a8>
1000d7a8:	d9402303 	ldbu	r5,140(sp)
1000d7ac:	d9401d85 	stb	r5,118(sp)
1000d7b0:	003cae06 	br	1000ca6c <__alt_data_end+0xf800ca6c>
1000d7b4:	d8c02303 	ldbu	r3,140(sp)
1000d7b8:	d8c01d85 	stb	r3,118(sp)
1000d7bc:	003d1406 	br	1000cc10 <__alt_data_end+0xf800cc10>
1000d7c0:	d8c02303 	ldbu	r3,140(sp)
1000d7c4:	d8c01d85 	stb	r3,118(sp)
1000d7c8:	003cca06 	br	1000caf4 <__alt_data_end+0xf800caf4>
1000d7cc:	8880004c 	andi	r2,r17,1
1000d7d0:	002b883a 	mov	r21,zero
1000d7d4:	10000526 	beq	r2,zero,1000d7ec <___vfiprintf_internal_r+0x14b8>
1000d7d8:	00800c04 	movi	r2,48
1000d7dc:	d88019c5 	stb	r2,103(sp)
1000d7e0:	dd002817 	ldw	r20,160(sp)
1000d7e4:	ddc019c4 	addi	r23,sp,103
1000d7e8:	003bd506 	br	1000c740 <__alt_data_end+0xf800c740>
1000d7ec:	0029883a 	mov	r20,zero
1000d7f0:	ddc01a04 	addi	r23,sp,104
1000d7f4:	003bd206 	br	1000c740 <__alt_data_end+0xf800c740>
1000d7f8:	d9002303 	ldbu	r4,140(sp)
1000d7fc:	d9001d85 	stb	r4,118(sp)
1000d800:	003da606 	br	1000ce9c <__alt_data_end+0xf800ce9c>
1000d804:	d8c02303 	ldbu	r3,140(sp)
1000d808:	d8c01d85 	stb	r3,118(sp)
1000d80c:	003c7606 	br	1000c9e8 <__alt_data_end+0xf800c9e8>
1000d810:	d8c02303 	ldbu	r3,140(sp)
1000d814:	d8c01d85 	stb	r3,118(sp)
1000d818:	003c6506 	br	1000c9b0 <__alt_data_end+0xf800c9b0>
1000d81c:	d9002303 	ldbu	r4,140(sp)
1000d820:	d9001d85 	stb	r4,118(sp)
1000d824:	003d3d06 	br	1000cd1c <__alt_data_end+0xf800cd1c>
1000d828:	d8c02303 	ldbu	r3,140(sp)
1000d82c:	d8c01d85 	stb	r3,118(sp)
1000d830:	003d1d06 	br	1000cca8 <__alt_data_end+0xf800cca8>
1000d834:	d8c02303 	ldbu	r3,140(sp)
1000d838:	d8c01d85 	stb	r3,118(sp)
1000d83c:	003d0306 	br	1000cc4c <__alt_data_end+0xf800cc4c>

1000d840 <__vfiprintf_internal>:
1000d840:	00840074 	movhi	r2,4097
1000d844:	10987604 	addi	r2,r2,25048
1000d848:	300f883a 	mov	r7,r6
1000d84c:	280d883a 	mov	r6,r5
1000d850:	200b883a 	mov	r5,r4
1000d854:	11000017 	ldw	r4,0(r2)
1000d858:	000c3341 	jmpi	1000c334 <___vfiprintf_internal_r>

1000d85c <__sbprintf>:
1000d85c:	2880030b 	ldhu	r2,12(r5)
1000d860:	2ac01917 	ldw	r11,100(r5)
1000d864:	2a80038b 	ldhu	r10,14(r5)
1000d868:	2a400717 	ldw	r9,28(r5)
1000d86c:	2a000917 	ldw	r8,36(r5)
1000d870:	defee204 	addi	sp,sp,-1144
1000d874:	00c10004 	movi	r3,1024
1000d878:	dc011a15 	stw	r16,1128(sp)
1000d87c:	10bfff4c 	andi	r2,r2,65533
1000d880:	2821883a 	mov	r16,r5
1000d884:	d8cb883a 	add	r5,sp,r3
1000d888:	dc811c15 	stw	r18,1136(sp)
1000d88c:	dc411b15 	stw	r17,1132(sp)
1000d890:	dfc11d15 	stw	ra,1140(sp)
1000d894:	2025883a 	mov	r18,r4
1000d898:	d881030d 	sth	r2,1036(sp)
1000d89c:	dac11915 	stw	r11,1124(sp)
1000d8a0:	da81038d 	sth	r10,1038(sp)
1000d8a4:	da410715 	stw	r9,1052(sp)
1000d8a8:	da010915 	stw	r8,1060(sp)
1000d8ac:	dec10015 	stw	sp,1024(sp)
1000d8b0:	dec10415 	stw	sp,1040(sp)
1000d8b4:	d8c10215 	stw	r3,1032(sp)
1000d8b8:	d8c10515 	stw	r3,1044(sp)
1000d8bc:	d8010615 	stw	zero,1048(sp)
1000d8c0:	000c3340 	call	1000c334 <___vfiprintf_internal_r>
1000d8c4:	1023883a 	mov	r17,r2
1000d8c8:	10000416 	blt	r2,zero,1000d8dc <__sbprintf+0x80>
1000d8cc:	d9410004 	addi	r5,sp,1024
1000d8d0:	9009883a 	mov	r4,r18
1000d8d4:	00075a00 	call	100075a0 <_fflush_r>
1000d8d8:	10000d1e 	bne	r2,zero,1000d910 <__sbprintf+0xb4>
1000d8dc:	d881030b 	ldhu	r2,1036(sp)
1000d8e0:	1080100c 	andi	r2,r2,64
1000d8e4:	10000326 	beq	r2,zero,1000d8f4 <__sbprintf+0x98>
1000d8e8:	8080030b 	ldhu	r2,12(r16)
1000d8ec:	10801014 	ori	r2,r2,64
1000d8f0:	8080030d 	sth	r2,12(r16)
1000d8f4:	8805883a 	mov	r2,r17
1000d8f8:	dfc11d17 	ldw	ra,1140(sp)
1000d8fc:	dc811c17 	ldw	r18,1136(sp)
1000d900:	dc411b17 	ldw	r17,1132(sp)
1000d904:	dc011a17 	ldw	r16,1128(sp)
1000d908:	dec11e04 	addi	sp,sp,1144
1000d90c:	f800283a 	ret
1000d910:	047fffc4 	movi	r17,-1
1000d914:	003ff106 	br	1000d8dc <__alt_data_end+0xf800d8dc>

1000d918 <_write_r>:
1000d918:	defffd04 	addi	sp,sp,-12
1000d91c:	2805883a 	mov	r2,r5
1000d920:	dc000015 	stw	r16,0(sp)
1000d924:	040400b4 	movhi	r16,4098
1000d928:	dc400115 	stw	r17,4(sp)
1000d92c:	300b883a 	mov	r5,r6
1000d930:	84200004 	addi	r16,r16,-32768
1000d934:	2023883a 	mov	r17,r4
1000d938:	380d883a 	mov	r6,r7
1000d93c:	1009883a 	mov	r4,r2
1000d940:	dfc00215 	stw	ra,8(sp)
1000d944:	80000015 	stw	zero,0(r16)
1000d948:	00120980 	call	10012098 <write>
1000d94c:	00ffffc4 	movi	r3,-1
1000d950:	10c00526 	beq	r2,r3,1000d968 <_write_r+0x50>
1000d954:	dfc00217 	ldw	ra,8(sp)
1000d958:	dc400117 	ldw	r17,4(sp)
1000d95c:	dc000017 	ldw	r16,0(sp)
1000d960:	dec00304 	addi	sp,sp,12
1000d964:	f800283a 	ret
1000d968:	80c00017 	ldw	r3,0(r16)
1000d96c:	183ff926 	beq	r3,zero,1000d954 <__alt_data_end+0xf800d954>
1000d970:	88c00015 	stw	r3,0(r17)
1000d974:	003ff706 	br	1000d954 <__alt_data_end+0xf800d954>

1000d978 <_close_r>:
1000d978:	defffd04 	addi	sp,sp,-12
1000d97c:	dc000015 	stw	r16,0(sp)
1000d980:	040400b4 	movhi	r16,4098
1000d984:	dc400115 	stw	r17,4(sp)
1000d988:	84200004 	addi	r16,r16,-32768
1000d98c:	2023883a 	mov	r17,r4
1000d990:	2809883a 	mov	r4,r5
1000d994:	dfc00215 	stw	ra,8(sp)
1000d998:	80000015 	stw	zero,0(r16)
1000d99c:	00118100 	call	10011810 <close>
1000d9a0:	00ffffc4 	movi	r3,-1
1000d9a4:	10c00526 	beq	r2,r3,1000d9bc <_close_r+0x44>
1000d9a8:	dfc00217 	ldw	ra,8(sp)
1000d9ac:	dc400117 	ldw	r17,4(sp)
1000d9b0:	dc000017 	ldw	r16,0(sp)
1000d9b4:	dec00304 	addi	sp,sp,12
1000d9b8:	f800283a 	ret
1000d9bc:	80c00017 	ldw	r3,0(r16)
1000d9c0:	183ff926 	beq	r3,zero,1000d9a8 <__alt_data_end+0xf800d9a8>
1000d9c4:	88c00015 	stw	r3,0(r17)
1000d9c8:	003ff706 	br	1000d9a8 <__alt_data_end+0xf800d9a8>

1000d9cc <_calloc_r>:
1000d9cc:	defffe04 	addi	sp,sp,-8
1000d9d0:	2805883a 	mov	r2,r5
1000d9d4:	dc000015 	stw	r16,0(sp)
1000d9d8:	300b883a 	mov	r5,r6
1000d9dc:	2021883a 	mov	r16,r4
1000d9e0:	1009883a 	mov	r4,r2
1000d9e4:	dfc00115 	stw	ra,4(sp)
1000d9e8:	0000fd00 	call	10000fd0 <__mulsi3>
1000d9ec:	100b883a 	mov	r5,r2
1000d9f0:	8009883a 	mov	r4,r16
1000d9f4:	00086f80 	call	100086f8 <_malloc_r>
1000d9f8:	10002926 	beq	r2,zero,1000daa0 <_calloc_r+0xd4>
1000d9fc:	11bfff17 	ldw	r6,-4(r2)
1000da00:	1021883a 	mov	r16,r2
1000da04:	00bfff04 	movi	r2,-4
1000da08:	308c703a 	and	r6,r6,r2
1000da0c:	00c00904 	movi	r3,36
1000da10:	308d883a 	add	r6,r6,r2
1000da14:	19801636 	bltu	r3,r6,1000da70 <_calloc_r+0xa4>
1000da18:	008004c4 	movi	r2,19
1000da1c:	11800b2e 	bgeu	r2,r6,1000da4c <_calloc_r+0x80>
1000da20:	80000015 	stw	zero,0(r16)
1000da24:	80000115 	stw	zero,4(r16)
1000da28:	008006c4 	movi	r2,27
1000da2c:	11801a2e 	bgeu	r2,r6,1000da98 <_calloc_r+0xcc>
1000da30:	80000215 	stw	zero,8(r16)
1000da34:	80000315 	stw	zero,12(r16)
1000da38:	30c0151e 	bne	r6,r3,1000da90 <_calloc_r+0xc4>
1000da3c:	80000415 	stw	zero,16(r16)
1000da40:	80800604 	addi	r2,r16,24
1000da44:	80000515 	stw	zero,20(r16)
1000da48:	00000106 	br	1000da50 <_calloc_r+0x84>
1000da4c:	8005883a 	mov	r2,r16
1000da50:	10000015 	stw	zero,0(r2)
1000da54:	10000115 	stw	zero,4(r2)
1000da58:	10000215 	stw	zero,8(r2)
1000da5c:	8005883a 	mov	r2,r16
1000da60:	dfc00117 	ldw	ra,4(sp)
1000da64:	dc000017 	ldw	r16,0(sp)
1000da68:	dec00204 	addi	sp,sp,8
1000da6c:	f800283a 	ret
1000da70:	000b883a 	mov	r5,zero
1000da74:	8009883a 	mov	r4,r16
1000da78:	000928c0 	call	1000928c <memset>
1000da7c:	8005883a 	mov	r2,r16
1000da80:	dfc00117 	ldw	ra,4(sp)
1000da84:	dc000017 	ldw	r16,0(sp)
1000da88:	dec00204 	addi	sp,sp,8
1000da8c:	f800283a 	ret
1000da90:	80800404 	addi	r2,r16,16
1000da94:	003fee06 	br	1000da50 <__alt_data_end+0xf800da50>
1000da98:	80800204 	addi	r2,r16,8
1000da9c:	003fec06 	br	1000da50 <__alt_data_end+0xf800da50>
1000daa0:	0005883a 	mov	r2,zero
1000daa4:	003fee06 	br	1000da60 <__alt_data_end+0xf800da60>

1000daa8 <_fclose_r>:
1000daa8:	28003926 	beq	r5,zero,1000db90 <_fclose_r+0xe8>
1000daac:	defffc04 	addi	sp,sp,-16
1000dab0:	dc400115 	stw	r17,4(sp)
1000dab4:	dc000015 	stw	r16,0(sp)
1000dab8:	dfc00315 	stw	ra,12(sp)
1000dabc:	dc800215 	stw	r18,8(sp)
1000dac0:	2023883a 	mov	r17,r4
1000dac4:	2821883a 	mov	r16,r5
1000dac8:	20000226 	beq	r4,zero,1000dad4 <_fclose_r+0x2c>
1000dacc:	20800e17 	ldw	r2,56(r4)
1000dad0:	10002726 	beq	r2,zero,1000db70 <_fclose_r+0xc8>
1000dad4:	8080030f 	ldh	r2,12(r16)
1000dad8:	1000071e 	bne	r2,zero,1000daf8 <_fclose_r+0x50>
1000dadc:	0005883a 	mov	r2,zero
1000dae0:	dfc00317 	ldw	ra,12(sp)
1000dae4:	dc800217 	ldw	r18,8(sp)
1000dae8:	dc400117 	ldw	r17,4(sp)
1000daec:	dc000017 	ldw	r16,0(sp)
1000daf0:	dec00404 	addi	sp,sp,16
1000daf4:	f800283a 	ret
1000daf8:	800b883a 	mov	r5,r16
1000dafc:	8809883a 	mov	r4,r17
1000db00:	00073840 	call	10007384 <__sflush_r>
1000db04:	1025883a 	mov	r18,r2
1000db08:	80800b17 	ldw	r2,44(r16)
1000db0c:	10000426 	beq	r2,zero,1000db20 <_fclose_r+0x78>
1000db10:	81400717 	ldw	r5,28(r16)
1000db14:	8809883a 	mov	r4,r17
1000db18:	103ee83a 	callr	r2
1000db1c:	10001616 	blt	r2,zero,1000db78 <_fclose_r+0xd0>
1000db20:	8080030b 	ldhu	r2,12(r16)
1000db24:	1080200c 	andi	r2,r2,128
1000db28:	1000151e 	bne	r2,zero,1000db80 <_fclose_r+0xd8>
1000db2c:	81400c17 	ldw	r5,48(r16)
1000db30:	28000526 	beq	r5,zero,1000db48 <_fclose_r+0xa0>
1000db34:	80801004 	addi	r2,r16,64
1000db38:	28800226 	beq	r5,r2,1000db44 <_fclose_r+0x9c>
1000db3c:	8809883a 	mov	r4,r17
1000db40:	0007b000 	call	10007b00 <_free_r>
1000db44:	80000c15 	stw	zero,48(r16)
1000db48:	81401117 	ldw	r5,68(r16)
1000db4c:	28000326 	beq	r5,zero,1000db5c <_fclose_r+0xb4>
1000db50:	8809883a 	mov	r4,r17
1000db54:	0007b000 	call	10007b00 <_free_r>
1000db58:	80001115 	stw	zero,68(r16)
1000db5c:	000799c0 	call	1000799c <__sfp_lock_acquire>
1000db60:	8000030d 	sth	zero,12(r16)
1000db64:	00079a00 	call	100079a0 <__sfp_lock_release>
1000db68:	9005883a 	mov	r2,r18
1000db6c:	003fdc06 	br	1000dae0 <__alt_data_end+0xf800dae0>
1000db70:	000798c0 	call	1000798c <__sinit>
1000db74:	003fd706 	br	1000dad4 <__alt_data_end+0xf800dad4>
1000db78:	04bfffc4 	movi	r18,-1
1000db7c:	003fe806 	br	1000db20 <__alt_data_end+0xf800db20>
1000db80:	81400417 	ldw	r5,16(r16)
1000db84:	8809883a 	mov	r4,r17
1000db88:	0007b000 	call	10007b00 <_free_r>
1000db8c:	003fe706 	br	1000db2c <__alt_data_end+0xf800db2c>
1000db90:	0005883a 	mov	r2,zero
1000db94:	f800283a 	ret

1000db98 <fclose>:
1000db98:	00840074 	movhi	r2,4097
1000db9c:	10987604 	addi	r2,r2,25048
1000dba0:	200b883a 	mov	r5,r4
1000dba4:	11000017 	ldw	r4,0(r2)
1000dba8:	000daa81 	jmpi	1000daa8 <_fclose_r>

1000dbac <__fputwc>:
1000dbac:	defff804 	addi	sp,sp,-32
1000dbb0:	dcc00415 	stw	r19,16(sp)
1000dbb4:	dc800315 	stw	r18,12(sp)
1000dbb8:	dc000115 	stw	r16,4(sp)
1000dbbc:	dfc00715 	stw	ra,28(sp)
1000dbc0:	dd400615 	stw	r21,24(sp)
1000dbc4:	dd000515 	stw	r20,20(sp)
1000dbc8:	dc400215 	stw	r17,8(sp)
1000dbcc:	2027883a 	mov	r19,r4
1000dbd0:	2825883a 	mov	r18,r5
1000dbd4:	3021883a 	mov	r16,r6
1000dbd8:	00084e80 	call	100084e8 <__locale_mb_cur_max>
1000dbdc:	00c00044 	movi	r3,1
1000dbe0:	10c03e26 	beq	r2,r3,1000dcdc <__fputwc+0x130>
1000dbe4:	81c01704 	addi	r7,r16,92
1000dbe8:	900d883a 	mov	r6,r18
1000dbec:	d80b883a 	mov	r5,sp
1000dbf0:	9809883a 	mov	r4,r19
1000dbf4:	000e07c0 	call	1000e07c <_wcrtomb_r>
1000dbf8:	1029883a 	mov	r20,r2
1000dbfc:	00bfffc4 	movi	r2,-1
1000dc00:	a0802026 	beq	r20,r2,1000dc84 <__fputwc+0xd8>
1000dc04:	d9400003 	ldbu	r5,0(sp)
1000dc08:	a0001c26 	beq	r20,zero,1000dc7c <__fputwc+0xd0>
1000dc0c:	0023883a 	mov	r17,zero
1000dc10:	05400284 	movi	r21,10
1000dc14:	00000906 	br	1000dc3c <__fputwc+0x90>
1000dc18:	80800017 	ldw	r2,0(r16)
1000dc1c:	11400005 	stb	r5,0(r2)
1000dc20:	80c00017 	ldw	r3,0(r16)
1000dc24:	18c00044 	addi	r3,r3,1
1000dc28:	80c00015 	stw	r3,0(r16)
1000dc2c:	8c400044 	addi	r17,r17,1
1000dc30:	dc45883a 	add	r2,sp,r17
1000dc34:	8d00112e 	bgeu	r17,r20,1000dc7c <__fputwc+0xd0>
1000dc38:	11400003 	ldbu	r5,0(r2)
1000dc3c:	80c00217 	ldw	r3,8(r16)
1000dc40:	18ffffc4 	addi	r3,r3,-1
1000dc44:	80c00215 	stw	r3,8(r16)
1000dc48:	183ff30e 	bge	r3,zero,1000dc18 <__alt_data_end+0xf800dc18>
1000dc4c:	80800617 	ldw	r2,24(r16)
1000dc50:	18801916 	blt	r3,r2,1000dcb8 <__fputwc+0x10c>
1000dc54:	80800017 	ldw	r2,0(r16)
1000dc58:	11400005 	stb	r5,0(r2)
1000dc5c:	80800017 	ldw	r2,0(r16)
1000dc60:	10c00003 	ldbu	r3,0(r2)
1000dc64:	10800044 	addi	r2,r2,1
1000dc68:	1d402326 	beq	r3,r21,1000dcf8 <__fputwc+0x14c>
1000dc6c:	80800015 	stw	r2,0(r16)
1000dc70:	8c400044 	addi	r17,r17,1
1000dc74:	dc45883a 	add	r2,sp,r17
1000dc78:	8d3fef36 	bltu	r17,r20,1000dc38 <__alt_data_end+0xf800dc38>
1000dc7c:	9005883a 	mov	r2,r18
1000dc80:	00000406 	br	1000dc94 <__fputwc+0xe8>
1000dc84:	80c0030b 	ldhu	r3,12(r16)
1000dc88:	a005883a 	mov	r2,r20
1000dc8c:	18c01014 	ori	r3,r3,64
1000dc90:	80c0030d 	sth	r3,12(r16)
1000dc94:	dfc00717 	ldw	ra,28(sp)
1000dc98:	dd400617 	ldw	r21,24(sp)
1000dc9c:	dd000517 	ldw	r20,20(sp)
1000dca0:	dcc00417 	ldw	r19,16(sp)
1000dca4:	dc800317 	ldw	r18,12(sp)
1000dca8:	dc400217 	ldw	r17,8(sp)
1000dcac:	dc000117 	ldw	r16,4(sp)
1000dcb0:	dec00804 	addi	sp,sp,32
1000dcb4:	f800283a 	ret
1000dcb8:	800d883a 	mov	r6,r16
1000dcbc:	29403fcc 	andi	r5,r5,255
1000dcc0:	9809883a 	mov	r4,r19
1000dcc4:	000df240 	call	1000df24 <__swbuf_r>
1000dcc8:	10bfffe0 	cmpeqi	r2,r2,-1
1000dccc:	10803fcc 	andi	r2,r2,255
1000dcd0:	103fd626 	beq	r2,zero,1000dc2c <__alt_data_end+0xf800dc2c>
1000dcd4:	00bfffc4 	movi	r2,-1
1000dcd8:	003fee06 	br	1000dc94 <__alt_data_end+0xf800dc94>
1000dcdc:	90ffffc4 	addi	r3,r18,-1
1000dce0:	01003f84 	movi	r4,254
1000dce4:	20ffbf36 	bltu	r4,r3,1000dbe4 <__alt_data_end+0xf800dbe4>
1000dce8:	900b883a 	mov	r5,r18
1000dcec:	dc800005 	stb	r18,0(sp)
1000dcf0:	1029883a 	mov	r20,r2
1000dcf4:	003fc506 	br	1000dc0c <__alt_data_end+0xf800dc0c>
1000dcf8:	800d883a 	mov	r6,r16
1000dcfc:	a80b883a 	mov	r5,r21
1000dd00:	9809883a 	mov	r4,r19
1000dd04:	000df240 	call	1000df24 <__swbuf_r>
1000dd08:	10bfffe0 	cmpeqi	r2,r2,-1
1000dd0c:	003fef06 	br	1000dccc <__alt_data_end+0xf800dccc>

1000dd10 <_fputwc_r>:
1000dd10:	3080030b 	ldhu	r2,12(r6)
1000dd14:	10c8000c 	andi	r3,r2,8192
1000dd18:	1800051e 	bne	r3,zero,1000dd30 <_fputwc_r+0x20>
1000dd1c:	30c01917 	ldw	r3,100(r6)
1000dd20:	10880014 	ori	r2,r2,8192
1000dd24:	3080030d 	sth	r2,12(r6)
1000dd28:	18880014 	ori	r2,r3,8192
1000dd2c:	30801915 	stw	r2,100(r6)
1000dd30:	000dbac1 	jmpi	1000dbac <__fputwc>

1000dd34 <fputwc>:
1000dd34:	00840074 	movhi	r2,4097
1000dd38:	defffc04 	addi	sp,sp,-16
1000dd3c:	10987604 	addi	r2,r2,25048
1000dd40:	dc000115 	stw	r16,4(sp)
1000dd44:	14000017 	ldw	r16,0(r2)
1000dd48:	dc400215 	stw	r17,8(sp)
1000dd4c:	dfc00315 	stw	ra,12(sp)
1000dd50:	2023883a 	mov	r17,r4
1000dd54:	80000226 	beq	r16,zero,1000dd60 <fputwc+0x2c>
1000dd58:	80800e17 	ldw	r2,56(r16)
1000dd5c:	10001026 	beq	r2,zero,1000dda0 <fputwc+0x6c>
1000dd60:	2880030b 	ldhu	r2,12(r5)
1000dd64:	10c8000c 	andi	r3,r2,8192
1000dd68:	1800051e 	bne	r3,zero,1000dd80 <fputwc+0x4c>
1000dd6c:	28c01917 	ldw	r3,100(r5)
1000dd70:	10880014 	ori	r2,r2,8192
1000dd74:	2880030d 	sth	r2,12(r5)
1000dd78:	18880014 	ori	r2,r3,8192
1000dd7c:	28801915 	stw	r2,100(r5)
1000dd80:	280d883a 	mov	r6,r5
1000dd84:	8009883a 	mov	r4,r16
1000dd88:	880b883a 	mov	r5,r17
1000dd8c:	dfc00317 	ldw	ra,12(sp)
1000dd90:	dc400217 	ldw	r17,8(sp)
1000dd94:	dc000117 	ldw	r16,4(sp)
1000dd98:	dec00404 	addi	sp,sp,16
1000dd9c:	000dbac1 	jmpi	1000dbac <__fputwc>
1000dda0:	8009883a 	mov	r4,r16
1000dda4:	d9400015 	stw	r5,0(sp)
1000dda8:	000798c0 	call	1000798c <__sinit>
1000ddac:	d9400017 	ldw	r5,0(sp)
1000ddb0:	003feb06 	br	1000dd60 <__alt_data_end+0xf800dd60>

1000ddb4 <_fstat_r>:
1000ddb4:	defffd04 	addi	sp,sp,-12
1000ddb8:	2805883a 	mov	r2,r5
1000ddbc:	dc000015 	stw	r16,0(sp)
1000ddc0:	040400b4 	movhi	r16,4098
1000ddc4:	dc400115 	stw	r17,4(sp)
1000ddc8:	84200004 	addi	r16,r16,-32768
1000ddcc:	2023883a 	mov	r17,r4
1000ddd0:	300b883a 	mov	r5,r6
1000ddd4:	1009883a 	mov	r4,r2
1000ddd8:	dfc00215 	stw	ra,8(sp)
1000dddc:	80000015 	stw	zero,0(r16)
1000dde0:	00119500 	call	10011950 <fstat>
1000dde4:	00ffffc4 	movi	r3,-1
1000dde8:	10c00526 	beq	r2,r3,1000de00 <_fstat_r+0x4c>
1000ddec:	dfc00217 	ldw	ra,8(sp)
1000ddf0:	dc400117 	ldw	r17,4(sp)
1000ddf4:	dc000017 	ldw	r16,0(sp)
1000ddf8:	dec00304 	addi	sp,sp,12
1000ddfc:	f800283a 	ret
1000de00:	80c00017 	ldw	r3,0(r16)
1000de04:	183ff926 	beq	r3,zero,1000ddec <__alt_data_end+0xf800ddec>
1000de08:	88c00015 	stw	r3,0(r17)
1000de0c:	003ff706 	br	1000ddec <__alt_data_end+0xf800ddec>

1000de10 <_isatty_r>:
1000de10:	defffd04 	addi	sp,sp,-12
1000de14:	dc000015 	stw	r16,0(sp)
1000de18:	040400b4 	movhi	r16,4098
1000de1c:	dc400115 	stw	r17,4(sp)
1000de20:	84200004 	addi	r16,r16,-32768
1000de24:	2023883a 	mov	r17,r4
1000de28:	2809883a 	mov	r4,r5
1000de2c:	dfc00215 	stw	ra,8(sp)
1000de30:	80000015 	stw	zero,0(r16)
1000de34:	0011a440 	call	10011a44 <isatty>
1000de38:	00ffffc4 	movi	r3,-1
1000de3c:	10c00526 	beq	r2,r3,1000de54 <_isatty_r+0x44>
1000de40:	dfc00217 	ldw	ra,8(sp)
1000de44:	dc400117 	ldw	r17,4(sp)
1000de48:	dc000017 	ldw	r16,0(sp)
1000de4c:	dec00304 	addi	sp,sp,12
1000de50:	f800283a 	ret
1000de54:	80c00017 	ldw	r3,0(r16)
1000de58:	183ff926 	beq	r3,zero,1000de40 <__alt_data_end+0xf800de40>
1000de5c:	88c00015 	stw	r3,0(r17)
1000de60:	003ff706 	br	1000de40 <__alt_data_end+0xf800de40>

1000de64 <_lseek_r>:
1000de64:	defffd04 	addi	sp,sp,-12
1000de68:	2805883a 	mov	r2,r5
1000de6c:	dc000015 	stw	r16,0(sp)
1000de70:	040400b4 	movhi	r16,4098
1000de74:	dc400115 	stw	r17,4(sp)
1000de78:	300b883a 	mov	r5,r6
1000de7c:	84200004 	addi	r16,r16,-32768
1000de80:	2023883a 	mov	r17,r4
1000de84:	380d883a 	mov	r6,r7
1000de88:	1009883a 	mov	r4,r2
1000de8c:	dfc00215 	stw	ra,8(sp)
1000de90:	80000015 	stw	zero,0(r16)
1000de94:	0011c180 	call	10011c18 <lseek>
1000de98:	00ffffc4 	movi	r3,-1
1000de9c:	10c00526 	beq	r2,r3,1000deb4 <_lseek_r+0x50>
1000dea0:	dfc00217 	ldw	ra,8(sp)
1000dea4:	dc400117 	ldw	r17,4(sp)
1000dea8:	dc000017 	ldw	r16,0(sp)
1000deac:	dec00304 	addi	sp,sp,12
1000deb0:	f800283a 	ret
1000deb4:	80c00017 	ldw	r3,0(r16)
1000deb8:	183ff926 	beq	r3,zero,1000dea0 <__alt_data_end+0xf800dea0>
1000debc:	88c00015 	stw	r3,0(r17)
1000dec0:	003ff706 	br	1000dea0 <__alt_data_end+0xf800dea0>

1000dec4 <_read_r>:
1000dec4:	defffd04 	addi	sp,sp,-12
1000dec8:	2805883a 	mov	r2,r5
1000decc:	dc000015 	stw	r16,0(sp)
1000ded0:	040400b4 	movhi	r16,4098
1000ded4:	dc400115 	stw	r17,4(sp)
1000ded8:	300b883a 	mov	r5,r6
1000dedc:	84200004 	addi	r16,r16,-32768
1000dee0:	2023883a 	mov	r17,r4
1000dee4:	380d883a 	mov	r6,r7
1000dee8:	1009883a 	mov	r4,r2
1000deec:	dfc00215 	stw	ra,8(sp)
1000def0:	80000015 	stw	zero,0(r16)
1000def4:	0011df40 	call	10011df4 <read>
1000def8:	00ffffc4 	movi	r3,-1
1000defc:	10c00526 	beq	r2,r3,1000df14 <_read_r+0x50>
1000df00:	dfc00217 	ldw	ra,8(sp)
1000df04:	dc400117 	ldw	r17,4(sp)
1000df08:	dc000017 	ldw	r16,0(sp)
1000df0c:	dec00304 	addi	sp,sp,12
1000df10:	f800283a 	ret
1000df14:	80c00017 	ldw	r3,0(r16)
1000df18:	183ff926 	beq	r3,zero,1000df00 <__alt_data_end+0xf800df00>
1000df1c:	88c00015 	stw	r3,0(r17)
1000df20:	003ff706 	br	1000df00 <__alt_data_end+0xf800df00>

1000df24 <__swbuf_r>:
1000df24:	defffb04 	addi	sp,sp,-20
1000df28:	dcc00315 	stw	r19,12(sp)
1000df2c:	dc800215 	stw	r18,8(sp)
1000df30:	dc000015 	stw	r16,0(sp)
1000df34:	dfc00415 	stw	ra,16(sp)
1000df38:	dc400115 	stw	r17,4(sp)
1000df3c:	2025883a 	mov	r18,r4
1000df40:	2827883a 	mov	r19,r5
1000df44:	3021883a 	mov	r16,r6
1000df48:	20000226 	beq	r4,zero,1000df54 <__swbuf_r+0x30>
1000df4c:	20800e17 	ldw	r2,56(r4)
1000df50:	10004226 	beq	r2,zero,1000e05c <__swbuf_r+0x138>
1000df54:	80800617 	ldw	r2,24(r16)
1000df58:	8100030b 	ldhu	r4,12(r16)
1000df5c:	80800215 	stw	r2,8(r16)
1000df60:	2080020c 	andi	r2,r4,8
1000df64:	10003626 	beq	r2,zero,1000e040 <__swbuf_r+0x11c>
1000df68:	80c00417 	ldw	r3,16(r16)
1000df6c:	18003426 	beq	r3,zero,1000e040 <__swbuf_r+0x11c>
1000df70:	2088000c 	andi	r2,r4,8192
1000df74:	9c403fcc 	andi	r17,r19,255
1000df78:	10001a26 	beq	r2,zero,1000dfe4 <__swbuf_r+0xc0>
1000df7c:	80800017 	ldw	r2,0(r16)
1000df80:	81000517 	ldw	r4,20(r16)
1000df84:	10c7c83a 	sub	r3,r2,r3
1000df88:	1900200e 	bge	r3,r4,1000e00c <__swbuf_r+0xe8>
1000df8c:	18c00044 	addi	r3,r3,1
1000df90:	81000217 	ldw	r4,8(r16)
1000df94:	11400044 	addi	r5,r2,1
1000df98:	81400015 	stw	r5,0(r16)
1000df9c:	213fffc4 	addi	r4,r4,-1
1000dfa0:	81000215 	stw	r4,8(r16)
1000dfa4:	14c00005 	stb	r19,0(r2)
1000dfa8:	80800517 	ldw	r2,20(r16)
1000dfac:	10c01e26 	beq	r2,r3,1000e028 <__swbuf_r+0x104>
1000dfb0:	8080030b 	ldhu	r2,12(r16)
1000dfb4:	1080004c 	andi	r2,r2,1
1000dfb8:	10000226 	beq	r2,zero,1000dfc4 <__swbuf_r+0xa0>
1000dfbc:	00800284 	movi	r2,10
1000dfc0:	88801926 	beq	r17,r2,1000e028 <__swbuf_r+0x104>
1000dfc4:	8805883a 	mov	r2,r17
1000dfc8:	dfc00417 	ldw	ra,16(sp)
1000dfcc:	dcc00317 	ldw	r19,12(sp)
1000dfd0:	dc800217 	ldw	r18,8(sp)
1000dfd4:	dc400117 	ldw	r17,4(sp)
1000dfd8:	dc000017 	ldw	r16,0(sp)
1000dfdc:	dec00504 	addi	sp,sp,20
1000dfe0:	f800283a 	ret
1000dfe4:	81401917 	ldw	r5,100(r16)
1000dfe8:	00b7ffc4 	movi	r2,-8193
1000dfec:	21080014 	ori	r4,r4,8192
1000dff0:	2884703a 	and	r2,r5,r2
1000dff4:	80801915 	stw	r2,100(r16)
1000dff8:	80800017 	ldw	r2,0(r16)
1000dffc:	8100030d 	sth	r4,12(r16)
1000e000:	81000517 	ldw	r4,20(r16)
1000e004:	10c7c83a 	sub	r3,r2,r3
1000e008:	193fe016 	blt	r3,r4,1000df8c <__alt_data_end+0xf800df8c>
1000e00c:	800b883a 	mov	r5,r16
1000e010:	9009883a 	mov	r4,r18
1000e014:	00075a00 	call	100075a0 <_fflush_r>
1000e018:	1000071e 	bne	r2,zero,1000e038 <__swbuf_r+0x114>
1000e01c:	80800017 	ldw	r2,0(r16)
1000e020:	00c00044 	movi	r3,1
1000e024:	003fda06 	br	1000df90 <__alt_data_end+0xf800df90>
1000e028:	800b883a 	mov	r5,r16
1000e02c:	9009883a 	mov	r4,r18
1000e030:	00075a00 	call	100075a0 <_fflush_r>
1000e034:	103fe326 	beq	r2,zero,1000dfc4 <__alt_data_end+0xf800dfc4>
1000e038:	00bfffc4 	movi	r2,-1
1000e03c:	003fe206 	br	1000dfc8 <__alt_data_end+0xf800dfc8>
1000e040:	800b883a 	mov	r5,r16
1000e044:	9009883a 	mov	r4,r18
1000e048:	00059800 	call	10005980 <__swsetup_r>
1000e04c:	103ffa1e 	bne	r2,zero,1000e038 <__alt_data_end+0xf800e038>
1000e050:	8100030b 	ldhu	r4,12(r16)
1000e054:	80c00417 	ldw	r3,16(r16)
1000e058:	003fc506 	br	1000df70 <__alt_data_end+0xf800df70>
1000e05c:	000798c0 	call	1000798c <__sinit>
1000e060:	003fbc06 	br	1000df54 <__alt_data_end+0xf800df54>

1000e064 <__swbuf>:
1000e064:	00840074 	movhi	r2,4097
1000e068:	10987604 	addi	r2,r2,25048
1000e06c:	280d883a 	mov	r6,r5
1000e070:	200b883a 	mov	r5,r4
1000e074:	11000017 	ldw	r4,0(r2)
1000e078:	000df241 	jmpi	1000df24 <__swbuf_r>

1000e07c <_wcrtomb_r>:
1000e07c:	defff604 	addi	sp,sp,-40
1000e080:	00840074 	movhi	r2,4097
1000e084:	dc800815 	stw	r18,32(sp)
1000e088:	dc400715 	stw	r17,28(sp)
1000e08c:	dc000615 	stw	r16,24(sp)
1000e090:	10987a04 	addi	r2,r2,25064
1000e094:	dfc00915 	stw	ra,36(sp)
1000e098:	2021883a 	mov	r16,r4
1000e09c:	3823883a 	mov	r17,r7
1000e0a0:	14800017 	ldw	r18,0(r2)
1000e0a4:	28001426 	beq	r5,zero,1000e0f8 <_wcrtomb_r+0x7c>
1000e0a8:	d9400415 	stw	r5,16(sp)
1000e0ac:	d9800515 	stw	r6,20(sp)
1000e0b0:	00084dc0 	call	100084dc <__locale_charset>
1000e0b4:	d9800517 	ldw	r6,20(sp)
1000e0b8:	d9400417 	ldw	r5,16(sp)
1000e0bc:	100f883a 	mov	r7,r2
1000e0c0:	dc400015 	stw	r17,0(sp)
1000e0c4:	8009883a 	mov	r4,r16
1000e0c8:	903ee83a 	callr	r18
1000e0cc:	00ffffc4 	movi	r3,-1
1000e0d0:	10c0031e 	bne	r2,r3,1000e0e0 <_wcrtomb_r+0x64>
1000e0d4:	88000015 	stw	zero,0(r17)
1000e0d8:	00c02284 	movi	r3,138
1000e0dc:	80c00015 	stw	r3,0(r16)
1000e0e0:	dfc00917 	ldw	ra,36(sp)
1000e0e4:	dc800817 	ldw	r18,32(sp)
1000e0e8:	dc400717 	ldw	r17,28(sp)
1000e0ec:	dc000617 	ldw	r16,24(sp)
1000e0f0:	dec00a04 	addi	sp,sp,40
1000e0f4:	f800283a 	ret
1000e0f8:	00084dc0 	call	100084dc <__locale_charset>
1000e0fc:	100f883a 	mov	r7,r2
1000e100:	dc400015 	stw	r17,0(sp)
1000e104:	000d883a 	mov	r6,zero
1000e108:	d9400104 	addi	r5,sp,4
1000e10c:	8009883a 	mov	r4,r16
1000e110:	903ee83a 	callr	r18
1000e114:	003fed06 	br	1000e0cc <__alt_data_end+0xf800e0cc>

1000e118 <wcrtomb>:
1000e118:	defff604 	addi	sp,sp,-40
1000e11c:	00840074 	movhi	r2,4097
1000e120:	dc800615 	stw	r18,24(sp)
1000e124:	dc400515 	stw	r17,20(sp)
1000e128:	10987604 	addi	r2,r2,25048
1000e12c:	dfc00915 	stw	ra,36(sp)
1000e130:	dd000815 	stw	r20,32(sp)
1000e134:	dcc00715 	stw	r19,28(sp)
1000e138:	dc000415 	stw	r16,16(sp)
1000e13c:	3025883a 	mov	r18,r6
1000e140:	14400017 	ldw	r17,0(r2)
1000e144:	20001926 	beq	r4,zero,1000e1ac <wcrtomb+0x94>
1000e148:	00840074 	movhi	r2,4097
1000e14c:	10987a04 	addi	r2,r2,25064
1000e150:	15000017 	ldw	r20,0(r2)
1000e154:	2021883a 	mov	r16,r4
1000e158:	2827883a 	mov	r19,r5
1000e15c:	00084dc0 	call	100084dc <__locale_charset>
1000e160:	100f883a 	mov	r7,r2
1000e164:	dc800015 	stw	r18,0(sp)
1000e168:	980d883a 	mov	r6,r19
1000e16c:	800b883a 	mov	r5,r16
1000e170:	8809883a 	mov	r4,r17
1000e174:	a03ee83a 	callr	r20
1000e178:	00ffffc4 	movi	r3,-1
1000e17c:	10c0031e 	bne	r2,r3,1000e18c <wcrtomb+0x74>
1000e180:	90000015 	stw	zero,0(r18)
1000e184:	00c02284 	movi	r3,138
1000e188:	88c00015 	stw	r3,0(r17)
1000e18c:	dfc00917 	ldw	ra,36(sp)
1000e190:	dd000817 	ldw	r20,32(sp)
1000e194:	dcc00717 	ldw	r19,28(sp)
1000e198:	dc800617 	ldw	r18,24(sp)
1000e19c:	dc400517 	ldw	r17,20(sp)
1000e1a0:	dc000417 	ldw	r16,16(sp)
1000e1a4:	dec00a04 	addi	sp,sp,40
1000e1a8:	f800283a 	ret
1000e1ac:	00840074 	movhi	r2,4097
1000e1b0:	10987a04 	addi	r2,r2,25064
1000e1b4:	14000017 	ldw	r16,0(r2)
1000e1b8:	00084dc0 	call	100084dc <__locale_charset>
1000e1bc:	100f883a 	mov	r7,r2
1000e1c0:	dc800015 	stw	r18,0(sp)
1000e1c4:	000d883a 	mov	r6,zero
1000e1c8:	d9400104 	addi	r5,sp,4
1000e1cc:	8809883a 	mov	r4,r17
1000e1d0:	803ee83a 	callr	r16
1000e1d4:	003fe806 	br	1000e178 <__alt_data_end+0xf800e178>

1000e1d8 <__ascii_wctomb>:
1000e1d8:	28000526 	beq	r5,zero,1000e1f0 <__ascii_wctomb+0x18>
1000e1dc:	00803fc4 	movi	r2,255
1000e1e0:	11800536 	bltu	r2,r6,1000e1f8 <__ascii_wctomb+0x20>
1000e1e4:	29800005 	stb	r6,0(r5)
1000e1e8:	00800044 	movi	r2,1
1000e1ec:	f800283a 	ret
1000e1f0:	0005883a 	mov	r2,zero
1000e1f4:	f800283a 	ret
1000e1f8:	00802284 	movi	r2,138
1000e1fc:	20800015 	stw	r2,0(r4)
1000e200:	00bfffc4 	movi	r2,-1
1000e204:	f800283a 	ret

1000e208 <_wctomb_r>:
1000e208:	00840074 	movhi	r2,4097
1000e20c:	defff904 	addi	sp,sp,-28
1000e210:	10987a04 	addi	r2,r2,25064
1000e214:	dfc00615 	stw	ra,24(sp)
1000e218:	dc400515 	stw	r17,20(sp)
1000e21c:	dc000415 	stw	r16,16(sp)
1000e220:	3823883a 	mov	r17,r7
1000e224:	14000017 	ldw	r16,0(r2)
1000e228:	d9000115 	stw	r4,4(sp)
1000e22c:	d9400215 	stw	r5,8(sp)
1000e230:	d9800315 	stw	r6,12(sp)
1000e234:	00084dc0 	call	100084dc <__locale_charset>
1000e238:	d9800317 	ldw	r6,12(sp)
1000e23c:	d9400217 	ldw	r5,8(sp)
1000e240:	d9000117 	ldw	r4,4(sp)
1000e244:	100f883a 	mov	r7,r2
1000e248:	dc400015 	stw	r17,0(sp)
1000e24c:	803ee83a 	callr	r16
1000e250:	dfc00617 	ldw	ra,24(sp)
1000e254:	dc400517 	ldw	r17,20(sp)
1000e258:	dc000417 	ldw	r16,16(sp)
1000e25c:	dec00704 	addi	sp,sp,28
1000e260:	f800283a 	ret

1000e264 <__muldi3>:
1000e264:	defff604 	addi	sp,sp,-40
1000e268:	dd800615 	stw	r22,24(sp)
1000e26c:	dd400515 	stw	r21,20(sp)
1000e270:	dc400115 	stw	r17,4(sp)
1000e274:	357fffcc 	andi	r21,r6,65535
1000e278:	2022d43a 	srli	r17,r4,16
1000e27c:	25bfffcc 	andi	r22,r4,65535
1000e280:	dcc00315 	stw	r19,12(sp)
1000e284:	dc800215 	stw	r18,8(sp)
1000e288:	2027883a 	mov	r19,r4
1000e28c:	2825883a 	mov	r18,r5
1000e290:	b009883a 	mov	r4,r22
1000e294:	a80b883a 	mov	r5,r21
1000e298:	dfc00915 	stw	ra,36(sp)
1000e29c:	df000815 	stw	fp,32(sp)
1000e2a0:	ddc00715 	stw	r23,28(sp)
1000e2a4:	3839883a 	mov	fp,r7
1000e2a8:	302ed43a 	srli	r23,r6,16
1000e2ac:	dd000415 	stw	r20,16(sp)
1000e2b0:	dc000015 	stw	r16,0(sp)
1000e2b4:	3029883a 	mov	r20,r6
1000e2b8:	0000fd00 	call	10000fd0 <__mulsi3>
1000e2bc:	a80b883a 	mov	r5,r21
1000e2c0:	8809883a 	mov	r4,r17
1000e2c4:	1021883a 	mov	r16,r2
1000e2c8:	0000fd00 	call	10000fd0 <__mulsi3>
1000e2cc:	8809883a 	mov	r4,r17
1000e2d0:	b80b883a 	mov	r5,r23
1000e2d4:	102b883a 	mov	r21,r2
1000e2d8:	0000fd00 	call	10000fd0 <__mulsi3>
1000e2dc:	b80b883a 	mov	r5,r23
1000e2e0:	b009883a 	mov	r4,r22
1000e2e4:	1023883a 	mov	r17,r2
1000e2e8:	0000fd00 	call	10000fd0 <__mulsi3>
1000e2ec:	8006d43a 	srli	r3,r16,16
1000e2f0:	1545883a 	add	r2,r2,r21
1000e2f4:	1885883a 	add	r2,r3,r2
1000e2f8:	1540022e 	bgeu	r2,r21,1000e304 <__muldi3+0xa0>
1000e2fc:	00c00074 	movhi	r3,1
1000e300:	88e3883a 	add	r17,r17,r3
1000e304:	1006d43a 	srli	r3,r2,16
1000e308:	1004943a 	slli	r2,r2,16
1000e30c:	e00b883a 	mov	r5,fp
1000e310:	9809883a 	mov	r4,r19
1000e314:	843fffcc 	andi	r16,r16,65535
1000e318:	1c63883a 	add	r17,r3,r17
1000e31c:	1421883a 	add	r16,r2,r16
1000e320:	0000fd00 	call	10000fd0 <__mulsi3>
1000e324:	900b883a 	mov	r5,r18
1000e328:	a009883a 	mov	r4,r20
1000e32c:	1027883a 	mov	r19,r2
1000e330:	0000fd00 	call	10000fd0 <__mulsi3>
1000e334:	9885883a 	add	r2,r19,r2
1000e338:	1447883a 	add	r3,r2,r17
1000e33c:	8005883a 	mov	r2,r16
1000e340:	dfc00917 	ldw	ra,36(sp)
1000e344:	df000817 	ldw	fp,32(sp)
1000e348:	ddc00717 	ldw	r23,28(sp)
1000e34c:	dd800617 	ldw	r22,24(sp)
1000e350:	dd400517 	ldw	r21,20(sp)
1000e354:	dd000417 	ldw	r20,16(sp)
1000e358:	dcc00317 	ldw	r19,12(sp)
1000e35c:	dc800217 	ldw	r18,8(sp)
1000e360:	dc400117 	ldw	r17,4(sp)
1000e364:	dc000017 	ldw	r16,0(sp)
1000e368:	dec00a04 	addi	sp,sp,40
1000e36c:	f800283a 	ret

1000e370 <__udivdi3>:
1000e370:	defff404 	addi	sp,sp,-48
1000e374:	dcc00515 	stw	r19,20(sp)
1000e378:	dc000215 	stw	r16,8(sp)
1000e37c:	dfc00b15 	stw	ra,44(sp)
1000e380:	df000a15 	stw	fp,40(sp)
1000e384:	ddc00915 	stw	r23,36(sp)
1000e388:	dd800815 	stw	r22,32(sp)
1000e38c:	dd400715 	stw	r21,28(sp)
1000e390:	dd000615 	stw	r20,24(sp)
1000e394:	dc800415 	stw	r18,16(sp)
1000e398:	dc400315 	stw	r17,12(sp)
1000e39c:	2027883a 	mov	r19,r4
1000e3a0:	2821883a 	mov	r16,r5
1000e3a4:	3800461e 	bne	r7,zero,1000e4c0 <__udivdi3+0x150>
1000e3a8:	3023883a 	mov	r17,r6
1000e3ac:	2025883a 	mov	r18,r4
1000e3b0:	2980572e 	bgeu	r5,r6,1000e510 <__udivdi3+0x1a0>
1000e3b4:	00bfffd4 	movui	r2,65535
1000e3b8:	282d883a 	mov	r22,r5
1000e3bc:	1180b236 	bltu	r2,r6,1000e688 <__udivdi3+0x318>
1000e3c0:	00803fc4 	movi	r2,255
1000e3c4:	1185803a 	cmpltu	r2,r2,r6
1000e3c8:	100490fa 	slli	r2,r2,3
1000e3cc:	3086d83a 	srl	r3,r6,r2
1000e3d0:	01040074 	movhi	r4,4097
1000e3d4:	2110c304 	addi	r4,r4,17164
1000e3d8:	20c7883a 	add	r3,r4,r3
1000e3dc:	18c00003 	ldbu	r3,0(r3)
1000e3e0:	1885883a 	add	r2,r3,r2
1000e3e4:	00c00804 	movi	r3,32
1000e3e8:	1887c83a 	sub	r3,r3,r2
1000e3ec:	18000526 	beq	r3,zero,1000e404 <__udivdi3+0x94>
1000e3f0:	80e0983a 	sll	r16,r16,r3
1000e3f4:	9884d83a 	srl	r2,r19,r2
1000e3f8:	30e2983a 	sll	r17,r6,r3
1000e3fc:	98e4983a 	sll	r18,r19,r3
1000e400:	142cb03a 	or	r22,r2,r16
1000e404:	882ad43a 	srli	r21,r17,16
1000e408:	b009883a 	mov	r4,r22
1000e40c:	8d3fffcc 	andi	r20,r17,65535
1000e410:	a80b883a 	mov	r5,r21
1000e414:	0000f780 	call	10000f78 <__umodsi3>
1000e418:	b009883a 	mov	r4,r22
1000e41c:	a80b883a 	mov	r5,r21
1000e420:	1027883a 	mov	r19,r2
1000e424:	0000f140 	call	10000f14 <__udivsi3>
1000e428:	100b883a 	mov	r5,r2
1000e42c:	a009883a 	mov	r4,r20
1000e430:	102d883a 	mov	r22,r2
1000e434:	0000fd00 	call	10000fd0 <__mulsi3>
1000e438:	9826943a 	slli	r19,r19,16
1000e43c:	9006d43a 	srli	r3,r18,16
1000e440:	1cc6b03a 	or	r3,r3,r19
1000e444:	1880052e 	bgeu	r3,r2,1000e45c <__udivdi3+0xec>
1000e448:	1c47883a 	add	r3,r3,r17
1000e44c:	b13fffc4 	addi	r4,r22,-1
1000e450:	1c400136 	bltu	r3,r17,1000e458 <__udivdi3+0xe8>
1000e454:	18814236 	bltu	r3,r2,1000e960 <__udivdi3+0x5f0>
1000e458:	202d883a 	mov	r22,r4
1000e45c:	18a1c83a 	sub	r16,r3,r2
1000e460:	8009883a 	mov	r4,r16
1000e464:	a80b883a 	mov	r5,r21
1000e468:	0000f780 	call	10000f78 <__umodsi3>
1000e46c:	1027883a 	mov	r19,r2
1000e470:	8009883a 	mov	r4,r16
1000e474:	a80b883a 	mov	r5,r21
1000e478:	9826943a 	slli	r19,r19,16
1000e47c:	0000f140 	call	10000f14 <__udivsi3>
1000e480:	100b883a 	mov	r5,r2
1000e484:	a009883a 	mov	r4,r20
1000e488:	94bfffcc 	andi	r18,r18,65535
1000e48c:	1021883a 	mov	r16,r2
1000e490:	94e4b03a 	or	r18,r18,r19
1000e494:	0000fd00 	call	10000fd0 <__mulsi3>
1000e498:	9080052e 	bgeu	r18,r2,1000e4b0 <__udivdi3+0x140>
1000e49c:	8ca5883a 	add	r18,r17,r18
1000e4a0:	80ffffc4 	addi	r3,r16,-1
1000e4a4:	94410c36 	bltu	r18,r17,1000e8d8 <__udivdi3+0x568>
1000e4a8:	90810b2e 	bgeu	r18,r2,1000e8d8 <__udivdi3+0x568>
1000e4ac:	843fff84 	addi	r16,r16,-2
1000e4b0:	b004943a 	slli	r2,r22,16
1000e4b4:	0007883a 	mov	r3,zero
1000e4b8:	1404b03a 	or	r2,r2,r16
1000e4bc:	00005e06 	br	1000e638 <__udivdi3+0x2c8>
1000e4c0:	29c05b36 	bltu	r5,r7,1000e630 <__udivdi3+0x2c0>
1000e4c4:	00bfffd4 	movui	r2,65535
1000e4c8:	11c0672e 	bgeu	r2,r7,1000e668 <__udivdi3+0x2f8>
1000e4cc:	00804034 	movhi	r2,256
1000e4d0:	10bfffc4 	addi	r2,r2,-1
1000e4d4:	11c10a36 	bltu	r2,r7,1000e900 <__udivdi3+0x590>
1000e4d8:	00800404 	movi	r2,16
1000e4dc:	3886d83a 	srl	r3,r7,r2
1000e4e0:	01040074 	movhi	r4,4097
1000e4e4:	2110c304 	addi	r4,r4,17164
1000e4e8:	20c7883a 	add	r3,r4,r3
1000e4ec:	18c00003 	ldbu	r3,0(r3)
1000e4f0:	05c00804 	movi	r23,32
1000e4f4:	1885883a 	add	r2,r3,r2
1000e4f8:	b8afc83a 	sub	r23,r23,r2
1000e4fc:	b800671e 	bne	r23,zero,1000e69c <__udivdi3+0x32c>
1000e500:	3c010536 	bltu	r7,r16,1000e918 <__udivdi3+0x5a8>
1000e504:	9985403a 	cmpgeu	r2,r19,r6
1000e508:	0007883a 	mov	r3,zero
1000e50c:	00004a06 	br	1000e638 <__udivdi3+0x2c8>
1000e510:	3000041e 	bne	r6,zero,1000e524 <__udivdi3+0x1b4>
1000e514:	000b883a 	mov	r5,zero
1000e518:	01000044 	movi	r4,1
1000e51c:	0000f140 	call	10000f14 <__udivsi3>
1000e520:	1023883a 	mov	r17,r2
1000e524:	00bfffd4 	movui	r2,65535
1000e528:	1440532e 	bgeu	r2,r17,1000e678 <__udivdi3+0x308>
1000e52c:	00804034 	movhi	r2,256
1000e530:	10bfffc4 	addi	r2,r2,-1
1000e534:	1440f436 	bltu	r2,r17,1000e908 <__udivdi3+0x598>
1000e538:	00800404 	movi	r2,16
1000e53c:	8886d83a 	srl	r3,r17,r2
1000e540:	01040074 	movhi	r4,4097
1000e544:	2110c304 	addi	r4,r4,17164
1000e548:	20c7883a 	add	r3,r4,r3
1000e54c:	18c00003 	ldbu	r3,0(r3)
1000e550:	1885883a 	add	r2,r3,r2
1000e554:	00c00804 	movi	r3,32
1000e558:	1887c83a 	sub	r3,r3,r2
1000e55c:	1800a51e 	bne	r3,zero,1000e7f4 <__udivdi3+0x484>
1000e560:	882ad43a 	srli	r21,r17,16
1000e564:	8461c83a 	sub	r16,r16,r17
1000e568:	8d3fffcc 	andi	r20,r17,65535
1000e56c:	00c00044 	movi	r3,1
1000e570:	a80b883a 	mov	r5,r21
1000e574:	8009883a 	mov	r4,r16
1000e578:	d8c00115 	stw	r3,4(sp)
1000e57c:	0000f780 	call	10000f78 <__umodsi3>
1000e580:	a80b883a 	mov	r5,r21
1000e584:	8009883a 	mov	r4,r16
1000e588:	1027883a 	mov	r19,r2
1000e58c:	0000f140 	call	10000f14 <__udivsi3>
1000e590:	a00b883a 	mov	r5,r20
1000e594:	1009883a 	mov	r4,r2
1000e598:	102d883a 	mov	r22,r2
1000e59c:	0000fd00 	call	10000fd0 <__mulsi3>
1000e5a0:	9826943a 	slli	r19,r19,16
1000e5a4:	900ed43a 	srli	r7,r18,16
1000e5a8:	d8c00117 	ldw	r3,4(sp)
1000e5ac:	3cceb03a 	or	r7,r7,r19
1000e5b0:	3880052e 	bgeu	r7,r2,1000e5c8 <__udivdi3+0x258>
1000e5b4:	3c4f883a 	add	r7,r7,r17
1000e5b8:	b13fffc4 	addi	r4,r22,-1
1000e5bc:	3c400136 	bltu	r7,r17,1000e5c4 <__udivdi3+0x254>
1000e5c0:	3880e436 	bltu	r7,r2,1000e954 <__udivdi3+0x5e4>
1000e5c4:	202d883a 	mov	r22,r4
1000e5c8:	38a1c83a 	sub	r16,r7,r2
1000e5cc:	8009883a 	mov	r4,r16
1000e5d0:	a80b883a 	mov	r5,r21
1000e5d4:	d8c00115 	stw	r3,4(sp)
1000e5d8:	0000f780 	call	10000f78 <__umodsi3>
1000e5dc:	1027883a 	mov	r19,r2
1000e5e0:	8009883a 	mov	r4,r16
1000e5e4:	a80b883a 	mov	r5,r21
1000e5e8:	9826943a 	slli	r19,r19,16
1000e5ec:	0000f140 	call	10000f14 <__udivsi3>
1000e5f0:	a00b883a 	mov	r5,r20
1000e5f4:	1009883a 	mov	r4,r2
1000e5f8:	94bfffcc 	andi	r18,r18,65535
1000e5fc:	1021883a 	mov	r16,r2
1000e600:	94e4b03a 	or	r18,r18,r19
1000e604:	0000fd00 	call	10000fd0 <__mulsi3>
1000e608:	d8c00117 	ldw	r3,4(sp)
1000e60c:	9080052e 	bgeu	r18,r2,1000e624 <__udivdi3+0x2b4>
1000e610:	8ca5883a 	add	r18,r17,r18
1000e614:	813fffc4 	addi	r4,r16,-1
1000e618:	9440ad36 	bltu	r18,r17,1000e8d0 <__udivdi3+0x560>
1000e61c:	9080ac2e 	bgeu	r18,r2,1000e8d0 <__udivdi3+0x560>
1000e620:	843fff84 	addi	r16,r16,-2
1000e624:	b004943a 	slli	r2,r22,16
1000e628:	1404b03a 	or	r2,r2,r16
1000e62c:	00000206 	br	1000e638 <__udivdi3+0x2c8>
1000e630:	0007883a 	mov	r3,zero
1000e634:	0005883a 	mov	r2,zero
1000e638:	dfc00b17 	ldw	ra,44(sp)
1000e63c:	df000a17 	ldw	fp,40(sp)
1000e640:	ddc00917 	ldw	r23,36(sp)
1000e644:	dd800817 	ldw	r22,32(sp)
1000e648:	dd400717 	ldw	r21,28(sp)
1000e64c:	dd000617 	ldw	r20,24(sp)
1000e650:	dcc00517 	ldw	r19,20(sp)
1000e654:	dc800417 	ldw	r18,16(sp)
1000e658:	dc400317 	ldw	r17,12(sp)
1000e65c:	dc000217 	ldw	r16,8(sp)
1000e660:	dec00c04 	addi	sp,sp,48
1000e664:	f800283a 	ret
1000e668:	00803fc4 	movi	r2,255
1000e66c:	11c5803a 	cmpltu	r2,r2,r7
1000e670:	100490fa 	slli	r2,r2,3
1000e674:	003f9906 	br	1000e4dc <__alt_data_end+0xf800e4dc>
1000e678:	00803fc4 	movi	r2,255
1000e67c:	1445803a 	cmpltu	r2,r2,r17
1000e680:	100490fa 	slli	r2,r2,3
1000e684:	003fad06 	br	1000e53c <__alt_data_end+0xf800e53c>
1000e688:	00804034 	movhi	r2,256
1000e68c:	10bfffc4 	addi	r2,r2,-1
1000e690:	11809f36 	bltu	r2,r6,1000e910 <__udivdi3+0x5a0>
1000e694:	00800404 	movi	r2,16
1000e698:	003f4c06 	br	1000e3cc <__alt_data_end+0xf800e3cc>
1000e69c:	3dce983a 	sll	r7,r7,r23
1000e6a0:	30b8d83a 	srl	fp,r6,r2
1000e6a4:	80a2d83a 	srl	r17,r16,r2
1000e6a8:	35cc983a 	sll	r6,r6,r23
1000e6ac:	3f38b03a 	or	fp,r7,fp
1000e6b0:	e024d43a 	srli	r18,fp,16
1000e6b4:	9884d83a 	srl	r2,r19,r2
1000e6b8:	85e0983a 	sll	r16,r16,r23
1000e6bc:	8809883a 	mov	r4,r17
1000e6c0:	900b883a 	mov	r5,r18
1000e6c4:	d9800015 	stw	r6,0(sp)
1000e6c8:	1420b03a 	or	r16,r2,r16
1000e6cc:	0000f780 	call	10000f78 <__umodsi3>
1000e6d0:	900b883a 	mov	r5,r18
1000e6d4:	8809883a 	mov	r4,r17
1000e6d8:	1029883a 	mov	r20,r2
1000e6dc:	e5bfffcc 	andi	r22,fp,65535
1000e6e0:	0000f140 	call	10000f14 <__udivsi3>
1000e6e4:	100b883a 	mov	r5,r2
1000e6e8:	b009883a 	mov	r4,r22
1000e6ec:	102b883a 	mov	r21,r2
1000e6f0:	0000fd00 	call	10000fd0 <__mulsi3>
1000e6f4:	a028943a 	slli	r20,r20,16
1000e6f8:	8006d43a 	srli	r3,r16,16
1000e6fc:	1d06b03a 	or	r3,r3,r20
1000e700:	1880042e 	bgeu	r3,r2,1000e714 <__udivdi3+0x3a4>
1000e704:	1f07883a 	add	r3,r3,fp
1000e708:	a93fffc4 	addi	r4,r21,-1
1000e70c:	1f00892e 	bgeu	r3,fp,1000e934 <__udivdi3+0x5c4>
1000e710:	202b883a 	mov	r21,r4
1000e714:	18a3c83a 	sub	r17,r3,r2
1000e718:	8809883a 	mov	r4,r17
1000e71c:	900b883a 	mov	r5,r18
1000e720:	0000f780 	call	10000f78 <__umodsi3>
1000e724:	1029883a 	mov	r20,r2
1000e728:	8809883a 	mov	r4,r17
1000e72c:	900b883a 	mov	r5,r18
1000e730:	a028943a 	slli	r20,r20,16
1000e734:	0000f140 	call	10000f14 <__udivsi3>
1000e738:	100b883a 	mov	r5,r2
1000e73c:	b009883a 	mov	r4,r22
1000e740:	843fffcc 	andi	r16,r16,65535
1000e744:	1023883a 	mov	r17,r2
1000e748:	8520b03a 	or	r16,r16,r20
1000e74c:	0000fd00 	call	10000fd0 <__mulsi3>
1000e750:	8080042e 	bgeu	r16,r2,1000e764 <__udivdi3+0x3f4>
1000e754:	8721883a 	add	r16,r16,fp
1000e758:	88ffffc4 	addi	r3,r17,-1
1000e75c:	8700712e 	bgeu	r16,fp,1000e924 <__udivdi3+0x5b4>
1000e760:	1823883a 	mov	r17,r3
1000e764:	a80e943a 	slli	r7,r21,16
1000e768:	d8c00017 	ldw	r3,0(sp)
1000e76c:	80a1c83a 	sub	r16,r16,r2
1000e770:	3c64b03a 	or	r18,r7,r17
1000e774:	1d3fffcc 	andi	r20,r3,65535
1000e778:	9022d43a 	srli	r17,r18,16
1000e77c:	95bfffcc 	andi	r22,r18,65535
1000e780:	a00b883a 	mov	r5,r20
1000e784:	b009883a 	mov	r4,r22
1000e788:	182ad43a 	srli	r21,r3,16
1000e78c:	0000fd00 	call	10000fd0 <__mulsi3>
1000e790:	a00b883a 	mov	r5,r20
1000e794:	8809883a 	mov	r4,r17
1000e798:	1039883a 	mov	fp,r2
1000e79c:	0000fd00 	call	10000fd0 <__mulsi3>
1000e7a0:	8809883a 	mov	r4,r17
1000e7a4:	a80b883a 	mov	r5,r21
1000e7a8:	1029883a 	mov	r20,r2
1000e7ac:	0000fd00 	call	10000fd0 <__mulsi3>
1000e7b0:	a80b883a 	mov	r5,r21
1000e7b4:	b009883a 	mov	r4,r22
1000e7b8:	1023883a 	mov	r17,r2
1000e7bc:	0000fd00 	call	10000fd0 <__mulsi3>
1000e7c0:	e006d43a 	srli	r3,fp,16
1000e7c4:	1505883a 	add	r2,r2,r20
1000e7c8:	1887883a 	add	r3,r3,r2
1000e7cc:	1d00022e 	bgeu	r3,r20,1000e7d8 <__udivdi3+0x468>
1000e7d0:	00800074 	movhi	r2,1
1000e7d4:	88a3883a 	add	r17,r17,r2
1000e7d8:	1804d43a 	srli	r2,r3,16
1000e7dc:	1463883a 	add	r17,r2,r17
1000e7e0:	84404436 	bltu	r16,r17,1000e8f4 <__udivdi3+0x584>
1000e7e4:	84403e26 	beq	r16,r17,1000e8e0 <__udivdi3+0x570>
1000e7e8:	9005883a 	mov	r2,r18
1000e7ec:	0007883a 	mov	r3,zero
1000e7f0:	003f9106 	br	1000e638 <__alt_data_end+0xf800e638>
1000e7f4:	88e2983a 	sll	r17,r17,r3
1000e7f8:	80aed83a 	srl	r23,r16,r2
1000e7fc:	80e0983a 	sll	r16,r16,r3
1000e800:	882ad43a 	srli	r21,r17,16
1000e804:	9884d83a 	srl	r2,r19,r2
1000e808:	b809883a 	mov	r4,r23
1000e80c:	a80b883a 	mov	r5,r21
1000e810:	98e4983a 	sll	r18,r19,r3
1000e814:	142cb03a 	or	r22,r2,r16
1000e818:	0000f780 	call	10000f78 <__umodsi3>
1000e81c:	b809883a 	mov	r4,r23
1000e820:	a80b883a 	mov	r5,r21
1000e824:	1027883a 	mov	r19,r2
1000e828:	8d3fffcc 	andi	r20,r17,65535
1000e82c:	0000f140 	call	10000f14 <__udivsi3>
1000e830:	a009883a 	mov	r4,r20
1000e834:	100b883a 	mov	r5,r2
1000e838:	102f883a 	mov	r23,r2
1000e83c:	0000fd00 	call	10000fd0 <__mulsi3>
1000e840:	9826943a 	slli	r19,r19,16
1000e844:	b008d43a 	srli	r4,r22,16
1000e848:	24c8b03a 	or	r4,r4,r19
1000e84c:	2080062e 	bgeu	r4,r2,1000e868 <__udivdi3+0x4f8>
1000e850:	2449883a 	add	r4,r4,r17
1000e854:	b8ffffc4 	addi	r3,r23,-1
1000e858:	24403c36 	bltu	r4,r17,1000e94c <__udivdi3+0x5dc>
1000e85c:	20803b2e 	bgeu	r4,r2,1000e94c <__udivdi3+0x5dc>
1000e860:	bdffff84 	addi	r23,r23,-2
1000e864:	2449883a 	add	r4,r4,r17
1000e868:	20a1c83a 	sub	r16,r4,r2
1000e86c:	a80b883a 	mov	r5,r21
1000e870:	8009883a 	mov	r4,r16
1000e874:	0000f780 	call	10000f78 <__umodsi3>
1000e878:	a80b883a 	mov	r5,r21
1000e87c:	8009883a 	mov	r4,r16
1000e880:	1027883a 	mov	r19,r2
1000e884:	0000f140 	call	10000f14 <__udivsi3>
1000e888:	a009883a 	mov	r4,r20
1000e88c:	100b883a 	mov	r5,r2
1000e890:	9826943a 	slli	r19,r19,16
1000e894:	1039883a 	mov	fp,r2
1000e898:	0000fd00 	call	10000fd0 <__mulsi3>
1000e89c:	b13fffcc 	andi	r4,r22,65535
1000e8a0:	24c8b03a 	or	r4,r4,r19
1000e8a4:	2080062e 	bgeu	r4,r2,1000e8c0 <__udivdi3+0x550>
1000e8a8:	2449883a 	add	r4,r4,r17
1000e8ac:	e0ffffc4 	addi	r3,fp,-1
1000e8b0:	24402436 	bltu	r4,r17,1000e944 <__udivdi3+0x5d4>
1000e8b4:	2080232e 	bgeu	r4,r2,1000e944 <__udivdi3+0x5d4>
1000e8b8:	e73fff84 	addi	fp,fp,-2
1000e8bc:	2449883a 	add	r4,r4,r17
1000e8c0:	b82e943a 	slli	r23,r23,16
1000e8c4:	20a1c83a 	sub	r16,r4,r2
1000e8c8:	bf06b03a 	or	r3,r23,fp
1000e8cc:	003f2806 	br	1000e570 <__alt_data_end+0xf800e570>
1000e8d0:	2021883a 	mov	r16,r4
1000e8d4:	003f5306 	br	1000e624 <__alt_data_end+0xf800e624>
1000e8d8:	1821883a 	mov	r16,r3
1000e8dc:	003ef406 	br	1000e4b0 <__alt_data_end+0xf800e4b0>
1000e8e0:	1806943a 	slli	r3,r3,16
1000e8e4:	9de6983a 	sll	r19,r19,r23
1000e8e8:	e73fffcc 	andi	fp,fp,65535
1000e8ec:	1f07883a 	add	r3,r3,fp
1000e8f0:	98ffbd2e 	bgeu	r19,r3,1000e7e8 <__alt_data_end+0xf800e7e8>
1000e8f4:	90bfffc4 	addi	r2,r18,-1
1000e8f8:	0007883a 	mov	r3,zero
1000e8fc:	003f4e06 	br	1000e638 <__alt_data_end+0xf800e638>
1000e900:	00800604 	movi	r2,24
1000e904:	003ef506 	br	1000e4dc <__alt_data_end+0xf800e4dc>
1000e908:	00800604 	movi	r2,24
1000e90c:	003f0b06 	br	1000e53c <__alt_data_end+0xf800e53c>
1000e910:	00800604 	movi	r2,24
1000e914:	003ead06 	br	1000e3cc <__alt_data_end+0xf800e3cc>
1000e918:	0007883a 	mov	r3,zero
1000e91c:	00800044 	movi	r2,1
1000e920:	003f4506 	br	1000e638 <__alt_data_end+0xf800e638>
1000e924:	80bf8e2e 	bgeu	r16,r2,1000e760 <__alt_data_end+0xf800e760>
1000e928:	8c7fff84 	addi	r17,r17,-2
1000e92c:	8721883a 	add	r16,r16,fp
1000e930:	003f8c06 	br	1000e764 <__alt_data_end+0xf800e764>
1000e934:	18bf762e 	bgeu	r3,r2,1000e710 <__alt_data_end+0xf800e710>
1000e938:	ad7fff84 	addi	r21,r21,-2
1000e93c:	1f07883a 	add	r3,r3,fp
1000e940:	003f7406 	br	1000e714 <__alt_data_end+0xf800e714>
1000e944:	1839883a 	mov	fp,r3
1000e948:	003fdd06 	br	1000e8c0 <__alt_data_end+0xf800e8c0>
1000e94c:	182f883a 	mov	r23,r3
1000e950:	003fc506 	br	1000e868 <__alt_data_end+0xf800e868>
1000e954:	b5bfff84 	addi	r22,r22,-2
1000e958:	3c4f883a 	add	r7,r7,r17
1000e95c:	003f1a06 	br	1000e5c8 <__alt_data_end+0xf800e5c8>
1000e960:	b5bfff84 	addi	r22,r22,-2
1000e964:	1c47883a 	add	r3,r3,r17
1000e968:	003ebc06 	br	1000e45c <__alt_data_end+0xf800e45c>

1000e96c <__umoddi3>:
1000e96c:	defff304 	addi	sp,sp,-52
1000e970:	df000b15 	stw	fp,44(sp)
1000e974:	dc400415 	stw	r17,16(sp)
1000e978:	dc000315 	stw	r16,12(sp)
1000e97c:	dfc00c15 	stw	ra,48(sp)
1000e980:	ddc00a15 	stw	r23,40(sp)
1000e984:	dd800915 	stw	r22,36(sp)
1000e988:	dd400815 	stw	r21,32(sp)
1000e98c:	dd000715 	stw	r20,28(sp)
1000e990:	dcc00615 	stw	r19,24(sp)
1000e994:	dc800515 	stw	r18,20(sp)
1000e998:	2021883a 	mov	r16,r4
1000e99c:	2823883a 	mov	r17,r5
1000e9a0:	2839883a 	mov	fp,r5
1000e9a4:	3800401e 	bne	r7,zero,1000eaa8 <__umoddi3+0x13c>
1000e9a8:	3027883a 	mov	r19,r6
1000e9ac:	2029883a 	mov	r20,r4
1000e9b0:	2980552e 	bgeu	r5,r6,1000eb08 <__umoddi3+0x19c>
1000e9b4:	00bfffd4 	movui	r2,65535
1000e9b8:	1180a236 	bltu	r2,r6,1000ec44 <__umoddi3+0x2d8>
1000e9bc:	01003fc4 	movi	r4,255
1000e9c0:	2189803a 	cmpltu	r4,r4,r6
1000e9c4:	200890fa 	slli	r4,r4,3
1000e9c8:	3104d83a 	srl	r2,r6,r4
1000e9cc:	00c40074 	movhi	r3,4097
1000e9d0:	18d0c304 	addi	r3,r3,17164
1000e9d4:	1885883a 	add	r2,r3,r2
1000e9d8:	10c00003 	ldbu	r3,0(r2)
1000e9dc:	00800804 	movi	r2,32
1000e9e0:	1909883a 	add	r4,r3,r4
1000e9e4:	1125c83a 	sub	r18,r2,r4
1000e9e8:	90000526 	beq	r18,zero,1000ea00 <__umoddi3+0x94>
1000e9ec:	8ca2983a 	sll	r17,r17,r18
1000e9f0:	8108d83a 	srl	r4,r16,r4
1000e9f4:	34a6983a 	sll	r19,r6,r18
1000e9f8:	84a8983a 	sll	r20,r16,r18
1000e9fc:	2478b03a 	or	fp,r4,r17
1000ea00:	982cd43a 	srli	r22,r19,16
1000ea04:	e009883a 	mov	r4,fp
1000ea08:	9dffffcc 	andi	r23,r19,65535
1000ea0c:	b00b883a 	mov	r5,r22
1000ea10:	0000f780 	call	10000f78 <__umodsi3>
1000ea14:	b00b883a 	mov	r5,r22
1000ea18:	e009883a 	mov	r4,fp
1000ea1c:	102b883a 	mov	r21,r2
1000ea20:	0000f140 	call	10000f14 <__udivsi3>
1000ea24:	100b883a 	mov	r5,r2
1000ea28:	b809883a 	mov	r4,r23
1000ea2c:	0000fd00 	call	10000fd0 <__mulsi3>
1000ea30:	a82a943a 	slli	r21,r21,16
1000ea34:	a006d43a 	srli	r3,r20,16
1000ea38:	1d46b03a 	or	r3,r3,r21
1000ea3c:	1880032e 	bgeu	r3,r2,1000ea4c <__umoddi3+0xe0>
1000ea40:	1cc7883a 	add	r3,r3,r19
1000ea44:	1cc00136 	bltu	r3,r19,1000ea4c <__umoddi3+0xe0>
1000ea48:	18813136 	bltu	r3,r2,1000ef10 <__umoddi3+0x5a4>
1000ea4c:	18a1c83a 	sub	r16,r3,r2
1000ea50:	b00b883a 	mov	r5,r22
1000ea54:	8009883a 	mov	r4,r16
1000ea58:	0000f780 	call	10000f78 <__umodsi3>
1000ea5c:	b00b883a 	mov	r5,r22
1000ea60:	8009883a 	mov	r4,r16
1000ea64:	1023883a 	mov	r17,r2
1000ea68:	0000f140 	call	10000f14 <__udivsi3>
1000ea6c:	100b883a 	mov	r5,r2
1000ea70:	b809883a 	mov	r4,r23
1000ea74:	8822943a 	slli	r17,r17,16
1000ea78:	0000fd00 	call	10000fd0 <__mulsi3>
1000ea7c:	a0ffffcc 	andi	r3,r20,65535
1000ea80:	1c46b03a 	or	r3,r3,r17
1000ea84:	1880042e 	bgeu	r3,r2,1000ea98 <__umoddi3+0x12c>
1000ea88:	1cc7883a 	add	r3,r3,r19
1000ea8c:	1cc00236 	bltu	r3,r19,1000ea98 <__umoddi3+0x12c>
1000ea90:	1880012e 	bgeu	r3,r2,1000ea98 <__umoddi3+0x12c>
1000ea94:	1cc7883a 	add	r3,r3,r19
1000ea98:	1885c83a 	sub	r2,r3,r2
1000ea9c:	1484d83a 	srl	r2,r2,r18
1000eaa0:	0007883a 	mov	r3,zero
1000eaa4:	00005306 	br	1000ebf4 <__umoddi3+0x288>
1000eaa8:	29c05036 	bltu	r5,r7,1000ebec <__umoddi3+0x280>
1000eaac:	00bfffd4 	movui	r2,65535
1000eab0:	11c05c2e 	bgeu	r2,r7,1000ec24 <__umoddi3+0x2b8>
1000eab4:	00804034 	movhi	r2,256
1000eab8:	10bfffc4 	addi	r2,r2,-1
1000eabc:	11c10636 	bltu	r2,r7,1000eed8 <__umoddi3+0x56c>
1000eac0:	01000404 	movi	r4,16
1000eac4:	3904d83a 	srl	r2,r7,r4
1000eac8:	00c40074 	movhi	r3,4097
1000eacc:	18d0c304 	addi	r3,r3,17164
1000ead0:	1885883a 	add	r2,r3,r2
1000ead4:	14c00003 	ldbu	r19,0(r2)
1000ead8:	00c00804 	movi	r3,32
1000eadc:	9927883a 	add	r19,r19,r4
1000eae0:	1ce9c83a 	sub	r20,r3,r19
1000eae4:	a0005c1e 	bne	r20,zero,1000ec58 <__umoddi3+0x2ec>
1000eae8:	3c400136 	bltu	r7,r17,1000eaf0 <__umoddi3+0x184>
1000eaec:	81810a36 	bltu	r16,r6,1000ef18 <__umoddi3+0x5ac>
1000eaf0:	8185c83a 	sub	r2,r16,r6
1000eaf4:	89e3c83a 	sub	r17,r17,r7
1000eaf8:	8089803a 	cmpltu	r4,r16,r2
1000eafc:	8939c83a 	sub	fp,r17,r4
1000eb00:	e007883a 	mov	r3,fp
1000eb04:	00003b06 	br	1000ebf4 <__umoddi3+0x288>
1000eb08:	3000041e 	bne	r6,zero,1000eb1c <__umoddi3+0x1b0>
1000eb0c:	000b883a 	mov	r5,zero
1000eb10:	01000044 	movi	r4,1
1000eb14:	0000f140 	call	10000f14 <__udivsi3>
1000eb18:	1027883a 	mov	r19,r2
1000eb1c:	00bfffd4 	movui	r2,65535
1000eb20:	14c0442e 	bgeu	r2,r19,1000ec34 <__umoddi3+0x2c8>
1000eb24:	00804034 	movhi	r2,256
1000eb28:	10bfffc4 	addi	r2,r2,-1
1000eb2c:	14c0ec36 	bltu	r2,r19,1000eee0 <__umoddi3+0x574>
1000eb30:	00800404 	movi	r2,16
1000eb34:	9886d83a 	srl	r3,r19,r2
1000eb38:	01040074 	movhi	r4,4097
1000eb3c:	2110c304 	addi	r4,r4,17164
1000eb40:	20c7883a 	add	r3,r4,r3
1000eb44:	18c00003 	ldbu	r3,0(r3)
1000eb48:	1887883a 	add	r3,r3,r2
1000eb4c:	00800804 	movi	r2,32
1000eb50:	10e5c83a 	sub	r18,r2,r3
1000eb54:	9000ab1e 	bne	r18,zero,1000ee04 <__umoddi3+0x498>
1000eb58:	982cd43a 	srli	r22,r19,16
1000eb5c:	8ce3c83a 	sub	r17,r17,r19
1000eb60:	9dffffcc 	andi	r23,r19,65535
1000eb64:	b00b883a 	mov	r5,r22
1000eb68:	8809883a 	mov	r4,r17
1000eb6c:	0000f780 	call	10000f78 <__umodsi3>
1000eb70:	b00b883a 	mov	r5,r22
1000eb74:	8809883a 	mov	r4,r17
1000eb78:	102b883a 	mov	r21,r2
1000eb7c:	0000f140 	call	10000f14 <__udivsi3>
1000eb80:	b80b883a 	mov	r5,r23
1000eb84:	1009883a 	mov	r4,r2
1000eb88:	0000fd00 	call	10000fd0 <__mulsi3>
1000eb8c:	a82a943a 	slli	r21,r21,16
1000eb90:	a006d43a 	srli	r3,r20,16
1000eb94:	1d46b03a 	or	r3,r3,r21
1000eb98:	1880042e 	bgeu	r3,r2,1000ebac <__umoddi3+0x240>
1000eb9c:	1cc7883a 	add	r3,r3,r19
1000eba0:	1cc00236 	bltu	r3,r19,1000ebac <__umoddi3+0x240>
1000eba4:	1880012e 	bgeu	r3,r2,1000ebac <__umoddi3+0x240>
1000eba8:	1cc7883a 	add	r3,r3,r19
1000ebac:	18a1c83a 	sub	r16,r3,r2
1000ebb0:	b00b883a 	mov	r5,r22
1000ebb4:	8009883a 	mov	r4,r16
1000ebb8:	0000f780 	call	10000f78 <__umodsi3>
1000ebbc:	1023883a 	mov	r17,r2
1000ebc0:	b00b883a 	mov	r5,r22
1000ebc4:	8009883a 	mov	r4,r16
1000ebc8:	0000f140 	call	10000f14 <__udivsi3>
1000ebcc:	8822943a 	slli	r17,r17,16
1000ebd0:	b80b883a 	mov	r5,r23
1000ebd4:	1009883a 	mov	r4,r2
1000ebd8:	0000fd00 	call	10000fd0 <__mulsi3>
1000ebdc:	a53fffcc 	andi	r20,r20,65535
1000ebe0:	a446b03a 	or	r3,r20,r17
1000ebe4:	18bfac2e 	bgeu	r3,r2,1000ea98 <__alt_data_end+0xf800ea98>
1000ebe8:	003fa706 	br	1000ea88 <__alt_data_end+0xf800ea88>
1000ebec:	2005883a 	mov	r2,r4
1000ebf0:	2807883a 	mov	r3,r5
1000ebf4:	dfc00c17 	ldw	ra,48(sp)
1000ebf8:	df000b17 	ldw	fp,44(sp)
1000ebfc:	ddc00a17 	ldw	r23,40(sp)
1000ec00:	dd800917 	ldw	r22,36(sp)
1000ec04:	dd400817 	ldw	r21,32(sp)
1000ec08:	dd000717 	ldw	r20,28(sp)
1000ec0c:	dcc00617 	ldw	r19,24(sp)
1000ec10:	dc800517 	ldw	r18,20(sp)
1000ec14:	dc400417 	ldw	r17,16(sp)
1000ec18:	dc000317 	ldw	r16,12(sp)
1000ec1c:	dec00d04 	addi	sp,sp,52
1000ec20:	f800283a 	ret
1000ec24:	04c03fc4 	movi	r19,255
1000ec28:	99c9803a 	cmpltu	r4,r19,r7
1000ec2c:	200890fa 	slli	r4,r4,3
1000ec30:	003fa406 	br	1000eac4 <__alt_data_end+0xf800eac4>
1000ec34:	00803fc4 	movi	r2,255
1000ec38:	14c5803a 	cmpltu	r2,r2,r19
1000ec3c:	100490fa 	slli	r2,r2,3
1000ec40:	003fbc06 	br	1000eb34 <__alt_data_end+0xf800eb34>
1000ec44:	00804034 	movhi	r2,256
1000ec48:	10bfffc4 	addi	r2,r2,-1
1000ec4c:	1180a636 	bltu	r2,r6,1000eee8 <__umoddi3+0x57c>
1000ec50:	01000404 	movi	r4,16
1000ec54:	003f5c06 	br	1000e9c8 <__alt_data_end+0xf800e9c8>
1000ec58:	3d0e983a 	sll	r7,r7,r20
1000ec5c:	34ead83a 	srl	r21,r6,r19
1000ec60:	8cc6d83a 	srl	r3,r17,r19
1000ec64:	8d10983a 	sll	r8,r17,r20
1000ec68:	3d6ab03a 	or	r21,r7,r21
1000ec6c:	a82cd43a 	srli	r22,r21,16
1000ec70:	84e2d83a 	srl	r17,r16,r19
1000ec74:	1809883a 	mov	r4,r3
1000ec78:	b00b883a 	mov	r5,r22
1000ec7c:	8a22b03a 	or	r17,r17,r8
1000ec80:	3524983a 	sll	r18,r6,r20
1000ec84:	dc400015 	stw	r17,0(sp)
1000ec88:	d8c00115 	stw	r3,4(sp)
1000ec8c:	0000f780 	call	10000f78 <__umodsi3>
1000ec90:	d8c00117 	ldw	r3,4(sp)
1000ec94:	b00b883a 	mov	r5,r22
1000ec98:	1039883a 	mov	fp,r2
1000ec9c:	1809883a 	mov	r4,r3
1000eca0:	0000f140 	call	10000f14 <__udivsi3>
1000eca4:	adffffcc 	andi	r23,r21,65535
1000eca8:	100b883a 	mov	r5,r2
1000ecac:	b809883a 	mov	r4,r23
1000ecb0:	1023883a 	mov	r17,r2
1000ecb4:	0000fd00 	call	10000fd0 <__mulsi3>
1000ecb8:	d9400017 	ldw	r5,0(sp)
1000ecbc:	e008943a 	slli	r4,fp,16
1000ecc0:	8520983a 	sll	r16,r16,r20
1000ecc4:	2806d43a 	srli	r3,r5,16
1000ecc8:	1906b03a 	or	r3,r3,r4
1000eccc:	1880042e 	bgeu	r3,r2,1000ece0 <__umoddi3+0x374>
1000ecd0:	1d47883a 	add	r3,r3,r21
1000ecd4:	893fffc4 	addi	r4,r17,-1
1000ecd8:	1d40892e 	bgeu	r3,r21,1000ef00 <__umoddi3+0x594>
1000ecdc:	2023883a 	mov	r17,r4
1000ece0:	18b9c83a 	sub	fp,r3,r2
1000ece4:	b00b883a 	mov	r5,r22
1000ece8:	e009883a 	mov	r4,fp
1000ecec:	0000f780 	call	10000f78 <__umodsi3>
1000ecf0:	b00b883a 	mov	r5,r22
1000ecf4:	e009883a 	mov	r4,fp
1000ecf8:	d8800215 	stw	r2,8(sp)
1000ecfc:	0000f140 	call	10000f14 <__udivsi3>
1000ed00:	100b883a 	mov	r5,r2
1000ed04:	b809883a 	mov	r4,r23
1000ed08:	102d883a 	mov	r22,r2
1000ed0c:	0000fd00 	call	10000fd0 <__mulsi3>
1000ed10:	d9800217 	ldw	r6,8(sp)
1000ed14:	d8c00017 	ldw	r3,0(sp)
1000ed18:	300c943a 	slli	r6,r6,16
1000ed1c:	1a3fffcc 	andi	r8,r3,65535
1000ed20:	4190b03a 	or	r8,r8,r6
1000ed24:	4080042e 	bgeu	r8,r2,1000ed38 <__umoddi3+0x3cc>
1000ed28:	4551883a 	add	r8,r8,r21
1000ed2c:	b0ffffc4 	addi	r3,r22,-1
1000ed30:	45406f2e 	bgeu	r8,r21,1000eef0 <__umoddi3+0x584>
1000ed34:	182d883a 	mov	r22,r3
1000ed38:	880e943a 	slli	r7,r17,16
1000ed3c:	9006d43a 	srli	r3,r18,16
1000ed40:	91bfffcc 	andi	r6,r18,65535
1000ed44:	3dacb03a 	or	r22,r7,r22
1000ed48:	b02ed43a 	srli	r23,r22,16
1000ed4c:	b5bfffcc 	andi	r22,r22,65535
1000ed50:	300b883a 	mov	r5,r6
1000ed54:	b009883a 	mov	r4,r22
1000ed58:	40a3c83a 	sub	r17,r8,r2
1000ed5c:	d8c00115 	stw	r3,4(sp)
1000ed60:	d9800215 	stw	r6,8(sp)
1000ed64:	0000fd00 	call	10000fd0 <__mulsi3>
1000ed68:	d9800217 	ldw	r6,8(sp)
1000ed6c:	b809883a 	mov	r4,r23
1000ed70:	1039883a 	mov	fp,r2
1000ed74:	300b883a 	mov	r5,r6
1000ed78:	0000fd00 	call	10000fd0 <__mulsi3>
1000ed7c:	d8c00117 	ldw	r3,4(sp)
1000ed80:	b809883a 	mov	r4,r23
1000ed84:	d8800215 	stw	r2,8(sp)
1000ed88:	180b883a 	mov	r5,r3
1000ed8c:	0000fd00 	call	10000fd0 <__mulsi3>
1000ed90:	d8c00117 	ldw	r3,4(sp)
1000ed94:	b009883a 	mov	r4,r22
1000ed98:	102f883a 	mov	r23,r2
1000ed9c:	180b883a 	mov	r5,r3
1000eda0:	0000fd00 	call	10000fd0 <__mulsi3>
1000eda4:	d9800217 	ldw	r6,8(sp)
1000eda8:	e006d43a 	srli	r3,fp,16
1000edac:	1185883a 	add	r2,r2,r6
1000edb0:	1885883a 	add	r2,r3,r2
1000edb4:	1180022e 	bgeu	r2,r6,1000edc0 <__umoddi3+0x454>
1000edb8:	00c00074 	movhi	r3,1
1000edbc:	b8ef883a 	add	r23,r23,r3
1000edc0:	1006d43a 	srli	r3,r2,16
1000edc4:	1004943a 	slli	r2,r2,16
1000edc8:	e73fffcc 	andi	fp,fp,65535
1000edcc:	1dc7883a 	add	r3,r3,r23
1000edd0:	1739883a 	add	fp,r2,fp
1000edd4:	88c03a36 	bltu	r17,r3,1000eec0 <__umoddi3+0x554>
1000edd8:	88c05126 	beq	r17,r3,1000ef20 <__umoddi3+0x5b4>
1000eddc:	88c9c83a 	sub	r4,r17,r3
1000ede0:	e00f883a 	mov	r7,fp
1000ede4:	81cfc83a 	sub	r7,r16,r7
1000ede8:	81c7803a 	cmpltu	r3,r16,r7
1000edec:	20c7c83a 	sub	r3,r4,r3
1000edf0:	1cc4983a 	sll	r2,r3,r19
1000edf4:	3d0ed83a 	srl	r7,r7,r20
1000edf8:	1d06d83a 	srl	r3,r3,r20
1000edfc:	11c4b03a 	or	r2,r2,r7
1000ee00:	003f7c06 	br	1000ebf4 <__alt_data_end+0xf800ebf4>
1000ee04:	9ca6983a 	sll	r19,r19,r18
1000ee08:	88f8d83a 	srl	fp,r17,r3
1000ee0c:	80c4d83a 	srl	r2,r16,r3
1000ee10:	982cd43a 	srli	r22,r19,16
1000ee14:	8ca2983a 	sll	r17,r17,r18
1000ee18:	e009883a 	mov	r4,fp
1000ee1c:	b00b883a 	mov	r5,r22
1000ee20:	146ab03a 	or	r21,r2,r17
1000ee24:	0000f780 	call	10000f78 <__umodsi3>
1000ee28:	b00b883a 	mov	r5,r22
1000ee2c:	e009883a 	mov	r4,fp
1000ee30:	1029883a 	mov	r20,r2
1000ee34:	9dffffcc 	andi	r23,r19,65535
1000ee38:	0000f140 	call	10000f14 <__udivsi3>
1000ee3c:	b809883a 	mov	r4,r23
1000ee40:	100b883a 	mov	r5,r2
1000ee44:	0000fd00 	call	10000fd0 <__mulsi3>
1000ee48:	a008943a 	slli	r4,r20,16
1000ee4c:	a806d43a 	srli	r3,r21,16
1000ee50:	84a8983a 	sll	r20,r16,r18
1000ee54:	1906b03a 	or	r3,r3,r4
1000ee58:	1880042e 	bgeu	r3,r2,1000ee6c <__umoddi3+0x500>
1000ee5c:	1cc7883a 	add	r3,r3,r19
1000ee60:	1cc00236 	bltu	r3,r19,1000ee6c <__umoddi3+0x500>
1000ee64:	1880012e 	bgeu	r3,r2,1000ee6c <__umoddi3+0x500>
1000ee68:	1cc7883a 	add	r3,r3,r19
1000ee6c:	18a3c83a 	sub	r17,r3,r2
1000ee70:	b00b883a 	mov	r5,r22
1000ee74:	8809883a 	mov	r4,r17
1000ee78:	0000f780 	call	10000f78 <__umodsi3>
1000ee7c:	b00b883a 	mov	r5,r22
1000ee80:	8809883a 	mov	r4,r17
1000ee84:	1021883a 	mov	r16,r2
1000ee88:	0000f140 	call	10000f14 <__udivsi3>
1000ee8c:	100b883a 	mov	r5,r2
1000ee90:	b809883a 	mov	r4,r23
1000ee94:	8020943a 	slli	r16,r16,16
1000ee98:	0000fd00 	call	10000fd0 <__mulsi3>
1000ee9c:	a8ffffcc 	andi	r3,r21,65535
1000eea0:	1c06b03a 	or	r3,r3,r16
1000eea4:	1880042e 	bgeu	r3,r2,1000eeb8 <__umoddi3+0x54c>
1000eea8:	1cc7883a 	add	r3,r3,r19
1000eeac:	1cc00236 	bltu	r3,r19,1000eeb8 <__umoddi3+0x54c>
1000eeb0:	1880012e 	bgeu	r3,r2,1000eeb8 <__umoddi3+0x54c>
1000eeb4:	1cc7883a 	add	r3,r3,r19
1000eeb8:	18a3c83a 	sub	r17,r3,r2
1000eebc:	003f2906 	br	1000eb64 <__alt_data_end+0xf800eb64>
1000eec0:	e48fc83a 	sub	r7,fp,r18
1000eec4:	1d49c83a 	sub	r4,r3,r21
1000eec8:	e1f9803a 	cmpltu	fp,fp,r7
1000eecc:	2739c83a 	sub	fp,r4,fp
1000eed0:	8f09c83a 	sub	r4,r17,fp
1000eed4:	003fc306 	br	1000ede4 <__alt_data_end+0xf800ede4>
1000eed8:	01000604 	movi	r4,24
1000eedc:	003ef906 	br	1000eac4 <__alt_data_end+0xf800eac4>
1000eee0:	00800604 	movi	r2,24
1000eee4:	003f1306 	br	1000eb34 <__alt_data_end+0xf800eb34>
1000eee8:	01000604 	movi	r4,24
1000eeec:	003eb606 	br	1000e9c8 <__alt_data_end+0xf800e9c8>
1000eef0:	40bf902e 	bgeu	r8,r2,1000ed34 <__alt_data_end+0xf800ed34>
1000eef4:	b5bfff84 	addi	r22,r22,-2
1000eef8:	4551883a 	add	r8,r8,r21
1000eefc:	003f8e06 	br	1000ed38 <__alt_data_end+0xf800ed38>
1000ef00:	18bf762e 	bgeu	r3,r2,1000ecdc <__alt_data_end+0xf800ecdc>
1000ef04:	8c7fff84 	addi	r17,r17,-2
1000ef08:	1d47883a 	add	r3,r3,r21
1000ef0c:	003f7406 	br	1000ece0 <__alt_data_end+0xf800ece0>
1000ef10:	1cc7883a 	add	r3,r3,r19
1000ef14:	003ecd06 	br	1000ea4c <__alt_data_end+0xf800ea4c>
1000ef18:	8005883a 	mov	r2,r16
1000ef1c:	003ef806 	br	1000eb00 <__alt_data_end+0xf800eb00>
1000ef20:	873fe736 	bltu	r16,fp,1000eec0 <__alt_data_end+0xf800eec0>
1000ef24:	e00f883a 	mov	r7,fp
1000ef28:	0009883a 	mov	r4,zero
1000ef2c:	003fad06 	br	1000ede4 <__alt_data_end+0xf800ede4>

1000ef30 <__adddf3>:
1000ef30:	02c00434 	movhi	r11,16
1000ef34:	5affffc4 	addi	r11,r11,-1
1000ef38:	2806d7fa 	srli	r3,r5,31
1000ef3c:	2ad4703a 	and	r10,r5,r11
1000ef40:	3ad2703a 	and	r9,r7,r11
1000ef44:	3804d53a 	srli	r2,r7,20
1000ef48:	3018d77a 	srli	r12,r6,29
1000ef4c:	280ad53a 	srli	r5,r5,20
1000ef50:	501490fa 	slli	r10,r10,3
1000ef54:	2010d77a 	srli	r8,r4,29
1000ef58:	481290fa 	slli	r9,r9,3
1000ef5c:	380ed7fa 	srli	r7,r7,31
1000ef60:	defffb04 	addi	sp,sp,-20
1000ef64:	dc800215 	stw	r18,8(sp)
1000ef68:	dc400115 	stw	r17,4(sp)
1000ef6c:	dc000015 	stw	r16,0(sp)
1000ef70:	dfc00415 	stw	ra,16(sp)
1000ef74:	dcc00315 	stw	r19,12(sp)
1000ef78:	1c803fcc 	andi	r18,r3,255
1000ef7c:	2c01ffcc 	andi	r16,r5,2047
1000ef80:	5210b03a 	or	r8,r10,r8
1000ef84:	202290fa 	slli	r17,r4,3
1000ef88:	1081ffcc 	andi	r2,r2,2047
1000ef8c:	4b12b03a 	or	r9,r9,r12
1000ef90:	300c90fa 	slli	r6,r6,3
1000ef94:	91c07526 	beq	r18,r7,1000f16c <__adddf3+0x23c>
1000ef98:	8087c83a 	sub	r3,r16,r2
1000ef9c:	00c0ab0e 	bge	zero,r3,1000f24c <__adddf3+0x31c>
1000efa0:	10002a1e 	bne	r2,zero,1000f04c <__adddf3+0x11c>
1000efa4:	4984b03a 	or	r2,r9,r6
1000efa8:	1000961e 	bne	r2,zero,1000f204 <__adddf3+0x2d4>
1000efac:	888001cc 	andi	r2,r17,7
1000efb0:	10000726 	beq	r2,zero,1000efd0 <__adddf3+0xa0>
1000efb4:	888003cc 	andi	r2,r17,15
1000efb8:	00c00104 	movi	r3,4
1000efbc:	10c00426 	beq	r2,r3,1000efd0 <__adddf3+0xa0>
1000efc0:	88c7883a 	add	r3,r17,r3
1000efc4:	1c63803a 	cmpltu	r17,r3,r17
1000efc8:	4451883a 	add	r8,r8,r17
1000efcc:	1823883a 	mov	r17,r3
1000efd0:	4080202c 	andhi	r2,r8,128
1000efd4:	10005926 	beq	r2,zero,1000f13c <__adddf3+0x20c>
1000efd8:	84000044 	addi	r16,r16,1
1000efdc:	0081ffc4 	movi	r2,2047
1000efe0:	8080ba26 	beq	r16,r2,1000f2cc <__adddf3+0x39c>
1000efe4:	00bfe034 	movhi	r2,65408
1000efe8:	10bfffc4 	addi	r2,r2,-1
1000efec:	4090703a 	and	r8,r8,r2
1000eff0:	4004977a 	slli	r2,r8,29
1000eff4:	4010927a 	slli	r8,r8,9
1000eff8:	8822d0fa 	srli	r17,r17,3
1000effc:	8401ffcc 	andi	r16,r16,2047
1000f000:	4010d33a 	srli	r8,r8,12
1000f004:	9007883a 	mov	r3,r18
1000f008:	1444b03a 	or	r2,r2,r17
1000f00c:	8401ffcc 	andi	r16,r16,2047
1000f010:	8020953a 	slli	r16,r16,20
1000f014:	18c03fcc 	andi	r3,r3,255
1000f018:	01000434 	movhi	r4,16
1000f01c:	213fffc4 	addi	r4,r4,-1
1000f020:	180697fa 	slli	r3,r3,31
1000f024:	4110703a 	and	r8,r8,r4
1000f028:	4410b03a 	or	r8,r8,r16
1000f02c:	40c6b03a 	or	r3,r8,r3
1000f030:	dfc00417 	ldw	ra,16(sp)
1000f034:	dcc00317 	ldw	r19,12(sp)
1000f038:	dc800217 	ldw	r18,8(sp)
1000f03c:	dc400117 	ldw	r17,4(sp)
1000f040:	dc000017 	ldw	r16,0(sp)
1000f044:	dec00504 	addi	sp,sp,20
1000f048:	f800283a 	ret
1000f04c:	0081ffc4 	movi	r2,2047
1000f050:	80bfd626 	beq	r16,r2,1000efac <__alt_data_end+0xf800efac>
1000f054:	4a402034 	orhi	r9,r9,128
1000f058:	00800e04 	movi	r2,56
1000f05c:	10c09f16 	blt	r2,r3,1000f2dc <__adddf3+0x3ac>
1000f060:	008007c4 	movi	r2,31
1000f064:	10c0c216 	blt	r2,r3,1000f370 <__adddf3+0x440>
1000f068:	00800804 	movi	r2,32
1000f06c:	10c5c83a 	sub	r2,r2,r3
1000f070:	488a983a 	sll	r5,r9,r2
1000f074:	30c8d83a 	srl	r4,r6,r3
1000f078:	3084983a 	sll	r2,r6,r2
1000f07c:	48c6d83a 	srl	r3,r9,r3
1000f080:	290cb03a 	or	r6,r5,r4
1000f084:	1004c03a 	cmpne	r2,r2,zero
1000f088:	308cb03a 	or	r6,r6,r2
1000f08c:	898dc83a 	sub	r6,r17,r6
1000f090:	89a3803a 	cmpltu	r17,r17,r6
1000f094:	40d1c83a 	sub	r8,r8,r3
1000f098:	4451c83a 	sub	r8,r8,r17
1000f09c:	3023883a 	mov	r17,r6
1000f0a0:	4080202c 	andhi	r2,r8,128
1000f0a4:	10002326 	beq	r2,zero,1000f134 <__adddf3+0x204>
1000f0a8:	04c02034 	movhi	r19,128
1000f0ac:	9cffffc4 	addi	r19,r19,-1
1000f0b0:	44e6703a 	and	r19,r8,r19
1000f0b4:	98007626 	beq	r19,zero,1000f290 <__adddf3+0x360>
1000f0b8:	9809883a 	mov	r4,r19
1000f0bc:	00117700 	call	10011770 <__clzsi2>
1000f0c0:	10fffe04 	addi	r3,r2,-8
1000f0c4:	010007c4 	movi	r4,31
1000f0c8:	20c07716 	blt	r4,r3,1000f2a8 <__adddf3+0x378>
1000f0cc:	00800804 	movi	r2,32
1000f0d0:	10c5c83a 	sub	r2,r2,r3
1000f0d4:	8884d83a 	srl	r2,r17,r2
1000f0d8:	98d0983a 	sll	r8,r19,r3
1000f0dc:	88e2983a 	sll	r17,r17,r3
1000f0e0:	1204b03a 	or	r2,r2,r8
1000f0e4:	1c007416 	blt	r3,r16,1000f2b8 <__adddf3+0x388>
1000f0e8:	1c21c83a 	sub	r16,r3,r16
1000f0ec:	82000044 	addi	r8,r16,1
1000f0f0:	00c007c4 	movi	r3,31
1000f0f4:	1a009116 	blt	r3,r8,1000f33c <__adddf3+0x40c>
1000f0f8:	00c00804 	movi	r3,32
1000f0fc:	1a07c83a 	sub	r3,r3,r8
1000f100:	8a08d83a 	srl	r4,r17,r8
1000f104:	88e2983a 	sll	r17,r17,r3
1000f108:	10c6983a 	sll	r3,r2,r3
1000f10c:	1210d83a 	srl	r8,r2,r8
1000f110:	8804c03a 	cmpne	r2,r17,zero
1000f114:	1906b03a 	or	r3,r3,r4
1000f118:	18a2b03a 	or	r17,r3,r2
1000f11c:	0021883a 	mov	r16,zero
1000f120:	003fa206 	br	1000efac <__alt_data_end+0xf800efac>
1000f124:	1890b03a 	or	r8,r3,r2
1000f128:	40017d26 	beq	r8,zero,1000f720 <__adddf3+0x7f0>
1000f12c:	1011883a 	mov	r8,r2
1000f130:	1823883a 	mov	r17,r3
1000f134:	888001cc 	andi	r2,r17,7
1000f138:	103f9e1e 	bne	r2,zero,1000efb4 <__alt_data_end+0xf800efb4>
1000f13c:	4004977a 	slli	r2,r8,29
1000f140:	8822d0fa 	srli	r17,r17,3
1000f144:	4010d0fa 	srli	r8,r8,3
1000f148:	9007883a 	mov	r3,r18
1000f14c:	1444b03a 	or	r2,r2,r17
1000f150:	0101ffc4 	movi	r4,2047
1000f154:	81002426 	beq	r16,r4,1000f1e8 <__adddf3+0x2b8>
1000f158:	8120703a 	and	r16,r16,r4
1000f15c:	01000434 	movhi	r4,16
1000f160:	213fffc4 	addi	r4,r4,-1
1000f164:	4110703a 	and	r8,r8,r4
1000f168:	003fa806 	br	1000f00c <__alt_data_end+0xf800f00c>
1000f16c:	8089c83a 	sub	r4,r16,r2
1000f170:	01005e0e 	bge	zero,r4,1000f2ec <__adddf3+0x3bc>
1000f174:	10002b26 	beq	r2,zero,1000f224 <__adddf3+0x2f4>
1000f178:	0081ffc4 	movi	r2,2047
1000f17c:	80bf8b26 	beq	r16,r2,1000efac <__alt_data_end+0xf800efac>
1000f180:	4a402034 	orhi	r9,r9,128
1000f184:	00800e04 	movi	r2,56
1000f188:	1100a40e 	bge	r2,r4,1000f41c <__adddf3+0x4ec>
1000f18c:	498cb03a 	or	r6,r9,r6
1000f190:	300ac03a 	cmpne	r5,r6,zero
1000f194:	0013883a 	mov	r9,zero
1000f198:	2c4b883a 	add	r5,r5,r17
1000f19c:	2c63803a 	cmpltu	r17,r5,r17
1000f1a0:	4a11883a 	add	r8,r9,r8
1000f1a4:	8a11883a 	add	r8,r17,r8
1000f1a8:	2823883a 	mov	r17,r5
1000f1ac:	4080202c 	andhi	r2,r8,128
1000f1b0:	103fe026 	beq	r2,zero,1000f134 <__alt_data_end+0xf800f134>
1000f1b4:	84000044 	addi	r16,r16,1
1000f1b8:	0081ffc4 	movi	r2,2047
1000f1bc:	8080d226 	beq	r16,r2,1000f508 <__adddf3+0x5d8>
1000f1c0:	00bfe034 	movhi	r2,65408
1000f1c4:	10bfffc4 	addi	r2,r2,-1
1000f1c8:	4090703a 	and	r8,r8,r2
1000f1cc:	880ad07a 	srli	r5,r17,1
1000f1d0:	400897fa 	slli	r4,r8,31
1000f1d4:	88c0004c 	andi	r3,r17,1
1000f1d8:	28e2b03a 	or	r17,r5,r3
1000f1dc:	4010d07a 	srli	r8,r8,1
1000f1e0:	2462b03a 	or	r17,r4,r17
1000f1e4:	003f7106 	br	1000efac <__alt_data_end+0xf800efac>
1000f1e8:	4088b03a 	or	r4,r8,r2
1000f1ec:	20014526 	beq	r4,zero,1000f704 <__adddf3+0x7d4>
1000f1f0:	01000434 	movhi	r4,16
1000f1f4:	42000234 	orhi	r8,r8,8
1000f1f8:	213fffc4 	addi	r4,r4,-1
1000f1fc:	4110703a 	and	r8,r8,r4
1000f200:	003f8206 	br	1000f00c <__alt_data_end+0xf800f00c>
1000f204:	18ffffc4 	addi	r3,r3,-1
1000f208:	1800491e 	bne	r3,zero,1000f330 <__adddf3+0x400>
1000f20c:	898bc83a 	sub	r5,r17,r6
1000f210:	8963803a 	cmpltu	r17,r17,r5
1000f214:	4251c83a 	sub	r8,r8,r9
1000f218:	4451c83a 	sub	r8,r8,r17
1000f21c:	2823883a 	mov	r17,r5
1000f220:	003f9f06 	br	1000f0a0 <__alt_data_end+0xf800f0a0>
1000f224:	4984b03a 	or	r2,r9,r6
1000f228:	103f6026 	beq	r2,zero,1000efac <__alt_data_end+0xf800efac>
1000f22c:	213fffc4 	addi	r4,r4,-1
1000f230:	2000931e 	bne	r4,zero,1000f480 <__adddf3+0x550>
1000f234:	898d883a 	add	r6,r17,r6
1000f238:	3463803a 	cmpltu	r17,r6,r17
1000f23c:	4251883a 	add	r8,r8,r9
1000f240:	8a11883a 	add	r8,r17,r8
1000f244:	3023883a 	mov	r17,r6
1000f248:	003fd806 	br	1000f1ac <__alt_data_end+0xf800f1ac>
1000f24c:	1800541e 	bne	r3,zero,1000f3a0 <__adddf3+0x470>
1000f250:	80800044 	addi	r2,r16,1
1000f254:	1081ffcc 	andi	r2,r2,2047
1000f258:	00c00044 	movi	r3,1
1000f25c:	1880a00e 	bge	r3,r2,1000f4e0 <__adddf3+0x5b0>
1000f260:	8989c83a 	sub	r4,r17,r6
1000f264:	8905803a 	cmpltu	r2,r17,r4
1000f268:	4267c83a 	sub	r19,r8,r9
1000f26c:	98a7c83a 	sub	r19,r19,r2
1000f270:	9880202c 	andhi	r2,r19,128
1000f274:	10006326 	beq	r2,zero,1000f404 <__adddf3+0x4d4>
1000f278:	3463c83a 	sub	r17,r6,r17
1000f27c:	4a07c83a 	sub	r3,r9,r8
1000f280:	344d803a 	cmpltu	r6,r6,r17
1000f284:	19a7c83a 	sub	r19,r3,r6
1000f288:	3825883a 	mov	r18,r7
1000f28c:	983f8a1e 	bne	r19,zero,1000f0b8 <__alt_data_end+0xf800f0b8>
1000f290:	8809883a 	mov	r4,r17
1000f294:	00117700 	call	10011770 <__clzsi2>
1000f298:	10800804 	addi	r2,r2,32
1000f29c:	10fffe04 	addi	r3,r2,-8
1000f2a0:	010007c4 	movi	r4,31
1000f2a4:	20ff890e 	bge	r4,r3,1000f0cc <__alt_data_end+0xf800f0cc>
1000f2a8:	10bff604 	addi	r2,r2,-40
1000f2ac:	8884983a 	sll	r2,r17,r2
1000f2b0:	0023883a 	mov	r17,zero
1000f2b4:	1c3f8c0e 	bge	r3,r16,1000f0e8 <__alt_data_end+0xf800f0e8>
1000f2b8:	023fe034 	movhi	r8,65408
1000f2bc:	423fffc4 	addi	r8,r8,-1
1000f2c0:	80e1c83a 	sub	r16,r16,r3
1000f2c4:	1210703a 	and	r8,r2,r8
1000f2c8:	003f3806 	br	1000efac <__alt_data_end+0xf800efac>
1000f2cc:	9007883a 	mov	r3,r18
1000f2d0:	0011883a 	mov	r8,zero
1000f2d4:	0005883a 	mov	r2,zero
1000f2d8:	003f4c06 	br	1000f00c <__alt_data_end+0xf800f00c>
1000f2dc:	498cb03a 	or	r6,r9,r6
1000f2e0:	300cc03a 	cmpne	r6,r6,zero
1000f2e4:	0007883a 	mov	r3,zero
1000f2e8:	003f6806 	br	1000f08c <__alt_data_end+0xf800f08c>
1000f2ec:	20009c1e 	bne	r4,zero,1000f560 <__adddf3+0x630>
1000f2f0:	80800044 	addi	r2,r16,1
1000f2f4:	1141ffcc 	andi	r5,r2,2047
1000f2f8:	01000044 	movi	r4,1
1000f2fc:	2140670e 	bge	r4,r5,1000f49c <__adddf3+0x56c>
1000f300:	0101ffc4 	movi	r4,2047
1000f304:	11007f26 	beq	r2,r4,1000f504 <__adddf3+0x5d4>
1000f308:	898d883a 	add	r6,r17,r6
1000f30c:	4247883a 	add	r3,r8,r9
1000f310:	3451803a 	cmpltu	r8,r6,r17
1000f314:	40d1883a 	add	r8,r8,r3
1000f318:	402297fa 	slli	r17,r8,31
1000f31c:	300cd07a 	srli	r6,r6,1
1000f320:	4010d07a 	srli	r8,r8,1
1000f324:	1021883a 	mov	r16,r2
1000f328:	89a2b03a 	or	r17,r17,r6
1000f32c:	003f1f06 	br	1000efac <__alt_data_end+0xf800efac>
1000f330:	0081ffc4 	movi	r2,2047
1000f334:	80bf481e 	bne	r16,r2,1000f058 <__alt_data_end+0xf800f058>
1000f338:	003f1c06 	br	1000efac <__alt_data_end+0xf800efac>
1000f33c:	843ff844 	addi	r16,r16,-31
1000f340:	01000804 	movi	r4,32
1000f344:	1406d83a 	srl	r3,r2,r16
1000f348:	41005026 	beq	r8,r4,1000f48c <__adddf3+0x55c>
1000f34c:	01001004 	movi	r4,64
1000f350:	2211c83a 	sub	r8,r4,r8
1000f354:	1204983a 	sll	r2,r2,r8
1000f358:	88a2b03a 	or	r17,r17,r2
1000f35c:	8822c03a 	cmpne	r17,r17,zero
1000f360:	1c62b03a 	or	r17,r3,r17
1000f364:	0011883a 	mov	r8,zero
1000f368:	0021883a 	mov	r16,zero
1000f36c:	003f7106 	br	1000f134 <__alt_data_end+0xf800f134>
1000f370:	193ff804 	addi	r4,r3,-32
1000f374:	00800804 	movi	r2,32
1000f378:	4908d83a 	srl	r4,r9,r4
1000f37c:	18804526 	beq	r3,r2,1000f494 <__adddf3+0x564>
1000f380:	00801004 	movi	r2,64
1000f384:	10c5c83a 	sub	r2,r2,r3
1000f388:	4886983a 	sll	r3,r9,r2
1000f38c:	198cb03a 	or	r6,r3,r6
1000f390:	300cc03a 	cmpne	r6,r6,zero
1000f394:	218cb03a 	or	r6,r4,r6
1000f398:	0007883a 	mov	r3,zero
1000f39c:	003f3b06 	br	1000f08c <__alt_data_end+0xf800f08c>
1000f3a0:	80002a26 	beq	r16,zero,1000f44c <__adddf3+0x51c>
1000f3a4:	0101ffc4 	movi	r4,2047
1000f3a8:	11006826 	beq	r2,r4,1000f54c <__adddf3+0x61c>
1000f3ac:	00c7c83a 	sub	r3,zero,r3
1000f3b0:	42002034 	orhi	r8,r8,128
1000f3b4:	01000e04 	movi	r4,56
1000f3b8:	20c07c16 	blt	r4,r3,1000f5ac <__adddf3+0x67c>
1000f3bc:	010007c4 	movi	r4,31
1000f3c0:	20c0da16 	blt	r4,r3,1000f72c <__adddf3+0x7fc>
1000f3c4:	01000804 	movi	r4,32
1000f3c8:	20c9c83a 	sub	r4,r4,r3
1000f3cc:	4114983a 	sll	r10,r8,r4
1000f3d0:	88cad83a 	srl	r5,r17,r3
1000f3d4:	8908983a 	sll	r4,r17,r4
1000f3d8:	40c6d83a 	srl	r3,r8,r3
1000f3dc:	5162b03a 	or	r17,r10,r5
1000f3e0:	2008c03a 	cmpne	r4,r4,zero
1000f3e4:	8922b03a 	or	r17,r17,r4
1000f3e8:	3463c83a 	sub	r17,r6,r17
1000f3ec:	48c7c83a 	sub	r3,r9,r3
1000f3f0:	344d803a 	cmpltu	r6,r6,r17
1000f3f4:	1991c83a 	sub	r8,r3,r6
1000f3f8:	1021883a 	mov	r16,r2
1000f3fc:	3825883a 	mov	r18,r7
1000f400:	003f2706 	br	1000f0a0 <__alt_data_end+0xf800f0a0>
1000f404:	24d0b03a 	or	r8,r4,r19
1000f408:	40001b1e 	bne	r8,zero,1000f478 <__adddf3+0x548>
1000f40c:	0005883a 	mov	r2,zero
1000f410:	0007883a 	mov	r3,zero
1000f414:	0021883a 	mov	r16,zero
1000f418:	003f4d06 	br	1000f150 <__alt_data_end+0xf800f150>
1000f41c:	008007c4 	movi	r2,31
1000f420:	11003c16 	blt	r2,r4,1000f514 <__adddf3+0x5e4>
1000f424:	00800804 	movi	r2,32
1000f428:	1105c83a 	sub	r2,r2,r4
1000f42c:	488e983a 	sll	r7,r9,r2
1000f430:	310ad83a 	srl	r5,r6,r4
1000f434:	3084983a 	sll	r2,r6,r2
1000f438:	4912d83a 	srl	r9,r9,r4
1000f43c:	394ab03a 	or	r5,r7,r5
1000f440:	1004c03a 	cmpne	r2,r2,zero
1000f444:	288ab03a 	or	r5,r5,r2
1000f448:	003f5306 	br	1000f198 <__alt_data_end+0xf800f198>
1000f44c:	4448b03a 	or	r4,r8,r17
1000f450:	20003e26 	beq	r4,zero,1000f54c <__adddf3+0x61c>
1000f454:	00c6303a 	nor	r3,zero,r3
1000f458:	18003a1e 	bne	r3,zero,1000f544 <__adddf3+0x614>
1000f45c:	3463c83a 	sub	r17,r6,r17
1000f460:	4a07c83a 	sub	r3,r9,r8
1000f464:	344d803a 	cmpltu	r6,r6,r17
1000f468:	1991c83a 	sub	r8,r3,r6
1000f46c:	1021883a 	mov	r16,r2
1000f470:	3825883a 	mov	r18,r7
1000f474:	003f0a06 	br	1000f0a0 <__alt_data_end+0xf800f0a0>
1000f478:	2023883a 	mov	r17,r4
1000f47c:	003f0d06 	br	1000f0b4 <__alt_data_end+0xf800f0b4>
1000f480:	0081ffc4 	movi	r2,2047
1000f484:	80bf3f1e 	bne	r16,r2,1000f184 <__alt_data_end+0xf800f184>
1000f488:	003ec806 	br	1000efac <__alt_data_end+0xf800efac>
1000f48c:	0005883a 	mov	r2,zero
1000f490:	003fb106 	br	1000f358 <__alt_data_end+0xf800f358>
1000f494:	0007883a 	mov	r3,zero
1000f498:	003fbc06 	br	1000f38c <__alt_data_end+0xf800f38c>
1000f49c:	4444b03a 	or	r2,r8,r17
1000f4a0:	8000871e 	bne	r16,zero,1000f6c0 <__adddf3+0x790>
1000f4a4:	1000ba26 	beq	r2,zero,1000f790 <__adddf3+0x860>
1000f4a8:	4984b03a 	or	r2,r9,r6
1000f4ac:	103ebf26 	beq	r2,zero,1000efac <__alt_data_end+0xf800efac>
1000f4b0:	8985883a 	add	r2,r17,r6
1000f4b4:	4247883a 	add	r3,r8,r9
1000f4b8:	1451803a 	cmpltu	r8,r2,r17
1000f4bc:	40d1883a 	add	r8,r8,r3
1000f4c0:	40c0202c 	andhi	r3,r8,128
1000f4c4:	1023883a 	mov	r17,r2
1000f4c8:	183f1a26 	beq	r3,zero,1000f134 <__alt_data_end+0xf800f134>
1000f4cc:	00bfe034 	movhi	r2,65408
1000f4d0:	10bfffc4 	addi	r2,r2,-1
1000f4d4:	2021883a 	mov	r16,r4
1000f4d8:	4090703a 	and	r8,r8,r2
1000f4dc:	003eb306 	br	1000efac <__alt_data_end+0xf800efac>
1000f4e0:	4444b03a 	or	r2,r8,r17
1000f4e4:	8000291e 	bne	r16,zero,1000f58c <__adddf3+0x65c>
1000f4e8:	10004b1e 	bne	r2,zero,1000f618 <__adddf3+0x6e8>
1000f4ec:	4990b03a 	or	r8,r9,r6
1000f4f0:	40008b26 	beq	r8,zero,1000f720 <__adddf3+0x7f0>
1000f4f4:	4811883a 	mov	r8,r9
1000f4f8:	3023883a 	mov	r17,r6
1000f4fc:	3825883a 	mov	r18,r7
1000f500:	003eaa06 	br	1000efac <__alt_data_end+0xf800efac>
1000f504:	1021883a 	mov	r16,r2
1000f508:	0011883a 	mov	r8,zero
1000f50c:	0005883a 	mov	r2,zero
1000f510:	003f0f06 	br	1000f150 <__alt_data_end+0xf800f150>
1000f514:	217ff804 	addi	r5,r4,-32
1000f518:	00800804 	movi	r2,32
1000f51c:	494ad83a 	srl	r5,r9,r5
1000f520:	20807d26 	beq	r4,r2,1000f718 <__adddf3+0x7e8>
1000f524:	00801004 	movi	r2,64
1000f528:	1109c83a 	sub	r4,r2,r4
1000f52c:	4912983a 	sll	r9,r9,r4
1000f530:	498cb03a 	or	r6,r9,r6
1000f534:	300cc03a 	cmpne	r6,r6,zero
1000f538:	298ab03a 	or	r5,r5,r6
1000f53c:	0013883a 	mov	r9,zero
1000f540:	003f1506 	br	1000f198 <__alt_data_end+0xf800f198>
1000f544:	0101ffc4 	movi	r4,2047
1000f548:	113f9a1e 	bne	r2,r4,1000f3b4 <__alt_data_end+0xf800f3b4>
1000f54c:	4811883a 	mov	r8,r9
1000f550:	3023883a 	mov	r17,r6
1000f554:	1021883a 	mov	r16,r2
1000f558:	3825883a 	mov	r18,r7
1000f55c:	003e9306 	br	1000efac <__alt_data_end+0xf800efac>
1000f560:	8000161e 	bne	r16,zero,1000f5bc <__adddf3+0x68c>
1000f564:	444ab03a 	or	r5,r8,r17
1000f568:	28005126 	beq	r5,zero,1000f6b0 <__adddf3+0x780>
1000f56c:	0108303a 	nor	r4,zero,r4
1000f570:	20004d1e 	bne	r4,zero,1000f6a8 <__adddf3+0x778>
1000f574:	89a3883a 	add	r17,r17,r6
1000f578:	4253883a 	add	r9,r8,r9
1000f57c:	898d803a 	cmpltu	r6,r17,r6
1000f580:	3251883a 	add	r8,r6,r9
1000f584:	1021883a 	mov	r16,r2
1000f588:	003f0806 	br	1000f1ac <__alt_data_end+0xf800f1ac>
1000f58c:	1000301e 	bne	r2,zero,1000f650 <__adddf3+0x720>
1000f590:	4984b03a 	or	r2,r9,r6
1000f594:	10007126 	beq	r2,zero,1000f75c <__adddf3+0x82c>
1000f598:	4811883a 	mov	r8,r9
1000f59c:	3023883a 	mov	r17,r6
1000f5a0:	3825883a 	mov	r18,r7
1000f5a4:	0401ffc4 	movi	r16,2047
1000f5a8:	003e8006 	br	1000efac <__alt_data_end+0xf800efac>
1000f5ac:	4462b03a 	or	r17,r8,r17
1000f5b0:	8822c03a 	cmpne	r17,r17,zero
1000f5b4:	0007883a 	mov	r3,zero
1000f5b8:	003f8b06 	br	1000f3e8 <__alt_data_end+0xf800f3e8>
1000f5bc:	0141ffc4 	movi	r5,2047
1000f5c0:	11403b26 	beq	r2,r5,1000f6b0 <__adddf3+0x780>
1000f5c4:	0109c83a 	sub	r4,zero,r4
1000f5c8:	42002034 	orhi	r8,r8,128
1000f5cc:	01400e04 	movi	r5,56
1000f5d0:	29006716 	blt	r5,r4,1000f770 <__adddf3+0x840>
1000f5d4:	014007c4 	movi	r5,31
1000f5d8:	29007016 	blt	r5,r4,1000f79c <__adddf3+0x86c>
1000f5dc:	01400804 	movi	r5,32
1000f5e0:	290bc83a 	sub	r5,r5,r4
1000f5e4:	4154983a 	sll	r10,r8,r5
1000f5e8:	890ed83a 	srl	r7,r17,r4
1000f5ec:	894a983a 	sll	r5,r17,r5
1000f5f0:	4108d83a 	srl	r4,r8,r4
1000f5f4:	51e2b03a 	or	r17,r10,r7
1000f5f8:	280ac03a 	cmpne	r5,r5,zero
1000f5fc:	8962b03a 	or	r17,r17,r5
1000f600:	89a3883a 	add	r17,r17,r6
1000f604:	2253883a 	add	r9,r4,r9
1000f608:	898d803a 	cmpltu	r6,r17,r6
1000f60c:	3251883a 	add	r8,r6,r9
1000f610:	1021883a 	mov	r16,r2
1000f614:	003ee506 	br	1000f1ac <__alt_data_end+0xf800f1ac>
1000f618:	4984b03a 	or	r2,r9,r6
1000f61c:	103e6326 	beq	r2,zero,1000efac <__alt_data_end+0xf800efac>
1000f620:	8987c83a 	sub	r3,r17,r6
1000f624:	88c9803a 	cmpltu	r4,r17,r3
1000f628:	4245c83a 	sub	r2,r8,r9
1000f62c:	1105c83a 	sub	r2,r2,r4
1000f630:	1100202c 	andhi	r4,r2,128
1000f634:	203ebb26 	beq	r4,zero,1000f124 <__alt_data_end+0xf800f124>
1000f638:	3463c83a 	sub	r17,r6,r17
1000f63c:	4a07c83a 	sub	r3,r9,r8
1000f640:	344d803a 	cmpltu	r6,r6,r17
1000f644:	1991c83a 	sub	r8,r3,r6
1000f648:	3825883a 	mov	r18,r7
1000f64c:	003e5706 	br	1000efac <__alt_data_end+0xf800efac>
1000f650:	4984b03a 	or	r2,r9,r6
1000f654:	10002e26 	beq	r2,zero,1000f710 <__adddf3+0x7e0>
1000f658:	4004d0fa 	srli	r2,r8,3
1000f65c:	8822d0fa 	srli	r17,r17,3
1000f660:	4010977a 	slli	r8,r8,29
1000f664:	10c0022c 	andhi	r3,r2,8
1000f668:	4462b03a 	or	r17,r8,r17
1000f66c:	18000826 	beq	r3,zero,1000f690 <__adddf3+0x760>
1000f670:	4808d0fa 	srli	r4,r9,3
1000f674:	20c0022c 	andhi	r3,r4,8
1000f678:	1800051e 	bne	r3,zero,1000f690 <__adddf3+0x760>
1000f67c:	300cd0fa 	srli	r6,r6,3
1000f680:	4806977a 	slli	r3,r9,29
1000f684:	2005883a 	mov	r2,r4
1000f688:	3825883a 	mov	r18,r7
1000f68c:	19a2b03a 	or	r17,r3,r6
1000f690:	8810d77a 	srli	r8,r17,29
1000f694:	100490fa 	slli	r2,r2,3
1000f698:	882290fa 	slli	r17,r17,3
1000f69c:	0401ffc4 	movi	r16,2047
1000f6a0:	4090b03a 	or	r8,r8,r2
1000f6a4:	003e4106 	br	1000efac <__alt_data_end+0xf800efac>
1000f6a8:	0141ffc4 	movi	r5,2047
1000f6ac:	117fc71e 	bne	r2,r5,1000f5cc <__alt_data_end+0xf800f5cc>
1000f6b0:	4811883a 	mov	r8,r9
1000f6b4:	3023883a 	mov	r17,r6
1000f6b8:	1021883a 	mov	r16,r2
1000f6bc:	003e3b06 	br	1000efac <__alt_data_end+0xf800efac>
1000f6c0:	10002f26 	beq	r2,zero,1000f780 <__adddf3+0x850>
1000f6c4:	4984b03a 	or	r2,r9,r6
1000f6c8:	10001126 	beq	r2,zero,1000f710 <__adddf3+0x7e0>
1000f6cc:	4004d0fa 	srli	r2,r8,3
1000f6d0:	8822d0fa 	srli	r17,r17,3
1000f6d4:	4010977a 	slli	r8,r8,29
1000f6d8:	10c0022c 	andhi	r3,r2,8
1000f6dc:	4462b03a 	or	r17,r8,r17
1000f6e0:	183feb26 	beq	r3,zero,1000f690 <__alt_data_end+0xf800f690>
1000f6e4:	4808d0fa 	srli	r4,r9,3
1000f6e8:	20c0022c 	andhi	r3,r4,8
1000f6ec:	183fe81e 	bne	r3,zero,1000f690 <__alt_data_end+0xf800f690>
1000f6f0:	300cd0fa 	srli	r6,r6,3
1000f6f4:	4806977a 	slli	r3,r9,29
1000f6f8:	2005883a 	mov	r2,r4
1000f6fc:	19a2b03a 	or	r17,r3,r6
1000f700:	003fe306 	br	1000f690 <__alt_data_end+0xf800f690>
1000f704:	0011883a 	mov	r8,zero
1000f708:	0005883a 	mov	r2,zero
1000f70c:	003e3f06 	br	1000f00c <__alt_data_end+0xf800f00c>
1000f710:	0401ffc4 	movi	r16,2047
1000f714:	003e2506 	br	1000efac <__alt_data_end+0xf800efac>
1000f718:	0013883a 	mov	r9,zero
1000f71c:	003f8406 	br	1000f530 <__alt_data_end+0xf800f530>
1000f720:	0005883a 	mov	r2,zero
1000f724:	0007883a 	mov	r3,zero
1000f728:	003e8906 	br	1000f150 <__alt_data_end+0xf800f150>
1000f72c:	197ff804 	addi	r5,r3,-32
1000f730:	01000804 	movi	r4,32
1000f734:	414ad83a 	srl	r5,r8,r5
1000f738:	19002426 	beq	r3,r4,1000f7cc <__adddf3+0x89c>
1000f73c:	01001004 	movi	r4,64
1000f740:	20c7c83a 	sub	r3,r4,r3
1000f744:	40c6983a 	sll	r3,r8,r3
1000f748:	1c46b03a 	or	r3,r3,r17
1000f74c:	1806c03a 	cmpne	r3,r3,zero
1000f750:	28e2b03a 	or	r17,r5,r3
1000f754:	0007883a 	mov	r3,zero
1000f758:	003f2306 	br	1000f3e8 <__alt_data_end+0xf800f3e8>
1000f75c:	0007883a 	mov	r3,zero
1000f760:	5811883a 	mov	r8,r11
1000f764:	00bfffc4 	movi	r2,-1
1000f768:	0401ffc4 	movi	r16,2047
1000f76c:	003e7806 	br	1000f150 <__alt_data_end+0xf800f150>
1000f770:	4462b03a 	or	r17,r8,r17
1000f774:	8822c03a 	cmpne	r17,r17,zero
1000f778:	0009883a 	mov	r4,zero
1000f77c:	003fa006 	br	1000f600 <__alt_data_end+0xf800f600>
1000f780:	4811883a 	mov	r8,r9
1000f784:	3023883a 	mov	r17,r6
1000f788:	0401ffc4 	movi	r16,2047
1000f78c:	003e0706 	br	1000efac <__alt_data_end+0xf800efac>
1000f790:	4811883a 	mov	r8,r9
1000f794:	3023883a 	mov	r17,r6
1000f798:	003e0406 	br	1000efac <__alt_data_end+0xf800efac>
1000f79c:	21fff804 	addi	r7,r4,-32
1000f7a0:	01400804 	movi	r5,32
1000f7a4:	41ced83a 	srl	r7,r8,r7
1000f7a8:	21400a26 	beq	r4,r5,1000f7d4 <__adddf3+0x8a4>
1000f7ac:	01401004 	movi	r5,64
1000f7b0:	2909c83a 	sub	r4,r5,r4
1000f7b4:	4108983a 	sll	r4,r8,r4
1000f7b8:	2448b03a 	or	r4,r4,r17
1000f7bc:	2008c03a 	cmpne	r4,r4,zero
1000f7c0:	3922b03a 	or	r17,r7,r4
1000f7c4:	0009883a 	mov	r4,zero
1000f7c8:	003f8d06 	br	1000f600 <__alt_data_end+0xf800f600>
1000f7cc:	0007883a 	mov	r3,zero
1000f7d0:	003fdd06 	br	1000f748 <__alt_data_end+0xf800f748>
1000f7d4:	0009883a 	mov	r4,zero
1000f7d8:	003ff706 	br	1000f7b8 <__alt_data_end+0xf800f7b8>

1000f7dc <__divdf3>:
1000f7dc:	defff004 	addi	sp,sp,-64
1000f7e0:	dc800815 	stw	r18,32(sp)
1000f7e4:	2824d53a 	srli	r18,r5,20
1000f7e8:	dd800c15 	stw	r22,48(sp)
1000f7ec:	282cd7fa 	srli	r22,r5,31
1000f7f0:	dc000615 	stw	r16,24(sp)
1000f7f4:	04000434 	movhi	r16,16
1000f7f8:	843fffc4 	addi	r16,r16,-1
1000f7fc:	dfc00f15 	stw	ra,60(sp)
1000f800:	df000e15 	stw	fp,56(sp)
1000f804:	ddc00d15 	stw	r23,52(sp)
1000f808:	dd400b15 	stw	r21,44(sp)
1000f80c:	dd000a15 	stw	r20,40(sp)
1000f810:	dcc00915 	stw	r19,36(sp)
1000f814:	dc400715 	stw	r17,28(sp)
1000f818:	9481ffcc 	andi	r18,r18,2047
1000f81c:	2c20703a 	and	r16,r5,r16
1000f820:	b2003fcc 	andi	r8,r22,255
1000f824:	90006126 	beq	r18,zero,1000f9ac <__divdf3+0x1d0>
1000f828:	0081ffc4 	movi	r2,2047
1000f82c:	202b883a 	mov	r21,r4
1000f830:	90803726 	beq	r18,r2,1000f910 <__divdf3+0x134>
1000f834:	80800434 	orhi	r2,r16,16
1000f838:	100490fa 	slli	r2,r2,3
1000f83c:	2020d77a 	srli	r16,r4,29
1000f840:	202a90fa 	slli	r21,r4,3
1000f844:	94bf0044 	addi	r18,r18,-1023
1000f848:	80a0b03a 	or	r16,r16,r2
1000f84c:	0013883a 	mov	r9,zero
1000f850:	000b883a 	mov	r5,zero
1000f854:	3806d53a 	srli	r3,r7,20
1000f858:	382ed7fa 	srli	r23,r7,31
1000f85c:	04400434 	movhi	r17,16
1000f860:	8c7fffc4 	addi	r17,r17,-1
1000f864:	18c1ffcc 	andi	r3,r3,2047
1000f868:	3029883a 	mov	r20,r6
1000f86c:	3c62703a 	and	r17,r7,r17
1000f870:	bf003fcc 	andi	fp,r23,255
1000f874:	18006e26 	beq	r3,zero,1000fa30 <__divdf3+0x254>
1000f878:	0081ffc4 	movi	r2,2047
1000f87c:	18806626 	beq	r3,r2,1000fa18 <__divdf3+0x23c>
1000f880:	88800434 	orhi	r2,r17,16
1000f884:	100490fa 	slli	r2,r2,3
1000f888:	3022d77a 	srli	r17,r6,29
1000f88c:	302890fa 	slli	r20,r6,3
1000f890:	18ff0044 	addi	r3,r3,-1023
1000f894:	88a2b03a 	or	r17,r17,r2
1000f898:	000f883a 	mov	r7,zero
1000f89c:	b5e6f03a 	xor	r19,r22,r23
1000f8a0:	3a4cb03a 	or	r6,r7,r9
1000f8a4:	008003c4 	movi	r2,15
1000f8a8:	9809883a 	mov	r4,r19
1000f8ac:	90c7c83a 	sub	r3,r18,r3
1000f8b0:	9cc03fcc 	andi	r19,r19,255
1000f8b4:	11809636 	bltu	r2,r6,1000fb10 <__divdf3+0x334>
1000f8b8:	300c90ba 	slli	r6,r6,2
1000f8bc:	00840074 	movhi	r2,4097
1000f8c0:	10be3404 	addi	r2,r2,-1840
1000f8c4:	308d883a 	add	r6,r6,r2
1000f8c8:	30800017 	ldw	r2,0(r6)
1000f8cc:	1000683a 	jmp	r2
1000f8d0:	1000fb10 	cmplti	zero,r2,1004
1000f8d4:	1000f948 	cmpgei	zero,r2,997
1000f8d8:	1000fb00 	call	11000fb0 <_gp+0xfe2de4>
1000f8dc:	1000f93c 	xorhi	zero,r2,996
1000f8e0:	1000fb00 	call	11000fb0 <_gp+0xfe2de4>
1000f8e4:	1000fad4 	ori	zero,r2,1003
1000f8e8:	1000fb00 	call	11000fb0 <_gp+0xfe2de4>
1000f8ec:	1000f93c 	xorhi	zero,r2,996
1000f8f0:	1000f948 	cmpgei	zero,r2,997
1000f8f4:	1000f948 	cmpgei	zero,r2,997
1000f8f8:	1000fad4 	ori	zero,r2,1003
1000f8fc:	1000f93c 	xorhi	zero,r2,996
1000f900:	1000f92c 	andhi	zero,r2,996
1000f904:	1000f92c 	andhi	zero,r2,996
1000f908:	1000f92c 	andhi	zero,r2,996
1000f90c:	1000fe98 	cmpnei	zero,r2,1018
1000f910:	2404b03a 	or	r2,r4,r16
1000f914:	10006c1e 	bne	r2,zero,1000fac8 <__divdf3+0x2ec>
1000f918:	02400204 	movi	r9,8
1000f91c:	0021883a 	mov	r16,zero
1000f920:	002b883a 	mov	r21,zero
1000f924:	01400084 	movi	r5,2
1000f928:	003fca06 	br	1000f854 <__alt_data_end+0xf800f854>
1000f92c:	8023883a 	mov	r17,r16
1000f930:	a829883a 	mov	r20,r21
1000f934:	4039883a 	mov	fp,r8
1000f938:	280f883a 	mov	r7,r5
1000f93c:	00800084 	movi	r2,2
1000f940:	3881601e 	bne	r7,r2,1000fec4 <__divdf3+0x6e8>
1000f944:	e027883a 	mov	r19,fp
1000f948:	9900004c 	andi	r4,r19,1
1000f94c:	0081ffc4 	movi	r2,2047
1000f950:	0021883a 	mov	r16,zero
1000f954:	002b883a 	mov	r21,zero
1000f958:	1004953a 	slli	r2,r2,20
1000f95c:	20c03fcc 	andi	r3,r4,255
1000f960:	01400434 	movhi	r5,16
1000f964:	297fffc4 	addi	r5,r5,-1
1000f968:	180697fa 	slli	r3,r3,31
1000f96c:	8160703a 	and	r16,r16,r5
1000f970:	80a0b03a 	or	r16,r16,r2
1000f974:	80c6b03a 	or	r3,r16,r3
1000f978:	a805883a 	mov	r2,r21
1000f97c:	dfc00f17 	ldw	ra,60(sp)
1000f980:	df000e17 	ldw	fp,56(sp)
1000f984:	ddc00d17 	ldw	r23,52(sp)
1000f988:	dd800c17 	ldw	r22,48(sp)
1000f98c:	dd400b17 	ldw	r21,44(sp)
1000f990:	dd000a17 	ldw	r20,40(sp)
1000f994:	dcc00917 	ldw	r19,36(sp)
1000f998:	dc800817 	ldw	r18,32(sp)
1000f99c:	dc400717 	ldw	r17,28(sp)
1000f9a0:	dc000617 	ldw	r16,24(sp)
1000f9a4:	dec01004 	addi	sp,sp,64
1000f9a8:	f800283a 	ret
1000f9ac:	2404b03a 	or	r2,r4,r16
1000f9b0:	2023883a 	mov	r17,r4
1000f9b4:	10003f26 	beq	r2,zero,1000fab4 <__divdf3+0x2d8>
1000f9b8:	80015e26 	beq	r16,zero,1000ff34 <__divdf3+0x758>
1000f9bc:	8009883a 	mov	r4,r16
1000f9c0:	d9800215 	stw	r6,8(sp)
1000f9c4:	d9c00515 	stw	r7,20(sp)
1000f9c8:	da000415 	stw	r8,16(sp)
1000f9cc:	00117700 	call	10011770 <__clzsi2>
1000f9d0:	d9800217 	ldw	r6,8(sp)
1000f9d4:	d9c00517 	ldw	r7,20(sp)
1000f9d8:	da000417 	ldw	r8,16(sp)
1000f9dc:	113ffd44 	addi	r4,r2,-11
1000f9e0:	00c00704 	movi	r3,28
1000f9e4:	19014f16 	blt	r3,r4,1000ff24 <__divdf3+0x748>
1000f9e8:	00c00744 	movi	r3,29
1000f9ec:	157ffe04 	addi	r21,r2,-8
1000f9f0:	1907c83a 	sub	r3,r3,r4
1000f9f4:	8560983a 	sll	r16,r16,r21
1000f9f8:	88c6d83a 	srl	r3,r17,r3
1000f9fc:	8d6a983a 	sll	r21,r17,r21
1000fa00:	1c20b03a 	or	r16,r3,r16
1000fa04:	1080fcc4 	addi	r2,r2,1011
1000fa08:	00a5c83a 	sub	r18,zero,r2
1000fa0c:	0013883a 	mov	r9,zero
1000fa10:	000b883a 	mov	r5,zero
1000fa14:	003f8f06 	br	1000f854 <__alt_data_end+0xf800f854>
1000fa18:	3444b03a 	or	r2,r6,r17
1000fa1c:	1000231e 	bne	r2,zero,1000faac <__divdf3+0x2d0>
1000fa20:	0023883a 	mov	r17,zero
1000fa24:	0029883a 	mov	r20,zero
1000fa28:	01c00084 	movi	r7,2
1000fa2c:	003f9b06 	br	1000f89c <__alt_data_end+0xf800f89c>
1000fa30:	3444b03a 	or	r2,r6,r17
1000fa34:	10001926 	beq	r2,zero,1000fa9c <__divdf3+0x2c0>
1000fa38:	88014b26 	beq	r17,zero,1000ff68 <__divdf3+0x78c>
1000fa3c:	8809883a 	mov	r4,r17
1000fa40:	d9400115 	stw	r5,4(sp)
1000fa44:	d9800215 	stw	r6,8(sp)
1000fa48:	da000415 	stw	r8,16(sp)
1000fa4c:	da400315 	stw	r9,12(sp)
1000fa50:	00117700 	call	10011770 <__clzsi2>
1000fa54:	d9400117 	ldw	r5,4(sp)
1000fa58:	d9800217 	ldw	r6,8(sp)
1000fa5c:	da000417 	ldw	r8,16(sp)
1000fa60:	da400317 	ldw	r9,12(sp)
1000fa64:	113ffd44 	addi	r4,r2,-11
1000fa68:	00c00704 	movi	r3,28
1000fa6c:	19013a16 	blt	r3,r4,1000ff58 <__divdf3+0x77c>
1000fa70:	00c00744 	movi	r3,29
1000fa74:	153ffe04 	addi	r20,r2,-8
1000fa78:	1907c83a 	sub	r3,r3,r4
1000fa7c:	8d22983a 	sll	r17,r17,r20
1000fa80:	30c6d83a 	srl	r3,r6,r3
1000fa84:	3528983a 	sll	r20,r6,r20
1000fa88:	1c62b03a 	or	r17,r3,r17
1000fa8c:	1080fcc4 	addi	r2,r2,1011
1000fa90:	0087c83a 	sub	r3,zero,r2
1000fa94:	000f883a 	mov	r7,zero
1000fa98:	003f8006 	br	1000f89c <__alt_data_end+0xf800f89c>
1000fa9c:	0023883a 	mov	r17,zero
1000faa0:	0029883a 	mov	r20,zero
1000faa4:	01c00044 	movi	r7,1
1000faa8:	003f7c06 	br	1000f89c <__alt_data_end+0xf800f89c>
1000faac:	01c000c4 	movi	r7,3
1000fab0:	003f7a06 	br	1000f89c <__alt_data_end+0xf800f89c>
1000fab4:	02400104 	movi	r9,4
1000fab8:	0021883a 	mov	r16,zero
1000fabc:	002b883a 	mov	r21,zero
1000fac0:	01400044 	movi	r5,1
1000fac4:	003f6306 	br	1000f854 <__alt_data_end+0xf800f854>
1000fac8:	02400304 	movi	r9,12
1000facc:	014000c4 	movi	r5,3
1000fad0:	003f6006 	br	1000f854 <__alt_data_end+0xf800f854>
1000fad4:	04000434 	movhi	r16,16
1000fad8:	0009883a 	mov	r4,zero
1000fadc:	843fffc4 	addi	r16,r16,-1
1000fae0:	057fffc4 	movi	r21,-1
1000fae4:	0081ffc4 	movi	r2,2047
1000fae8:	003f9b06 	br	1000f958 <__alt_data_end+0xf800f958>
1000faec:	00c00044 	movi	r3,1
1000faf0:	1887c83a 	sub	r3,r3,r2
1000faf4:	01000e04 	movi	r4,56
1000faf8:	20c1530e 	bge	r4,r3,10010048 <__divdf3+0x86c>
1000fafc:	9900004c 	andi	r4,r19,1
1000fb00:	0005883a 	mov	r2,zero
1000fb04:	0021883a 	mov	r16,zero
1000fb08:	002b883a 	mov	r21,zero
1000fb0c:	003f9206 	br	1000f958 <__alt_data_end+0xf800f958>
1000fb10:	8c012e36 	bltu	r17,r16,1000ffcc <__divdf3+0x7f0>
1000fb14:	84412c26 	beq	r16,r17,1000ffc8 <__divdf3+0x7ec>
1000fb18:	a82f883a 	mov	r23,r21
1000fb1c:	18ffffc4 	addi	r3,r3,-1
1000fb20:	002b883a 	mov	r21,zero
1000fb24:	a004d63a 	srli	r2,r20,24
1000fb28:	8822923a 	slli	r17,r17,8
1000fb2c:	a028923a 	slli	r20,r20,8
1000fb30:	8009883a 	mov	r4,r16
1000fb34:	88acb03a 	or	r22,r17,r2
1000fb38:	dd000015 	stw	r20,0(sp)
1000fb3c:	b028d43a 	srli	r20,r22,16
1000fb40:	d8c00215 	stw	r3,8(sp)
1000fb44:	b4bfffcc 	andi	r18,r22,65535
1000fb48:	a00b883a 	mov	r5,r20
1000fb4c:	0000f140 	call	10000f14 <__udivsi3>
1000fb50:	100b883a 	mov	r5,r2
1000fb54:	9009883a 	mov	r4,r18
1000fb58:	1023883a 	mov	r17,r2
1000fb5c:	0000fd00 	call	10000fd0 <__mulsi3>
1000fb60:	8009883a 	mov	r4,r16
1000fb64:	a00b883a 	mov	r5,r20
1000fb68:	1039883a 	mov	fp,r2
1000fb6c:	0000f780 	call	10000f78 <__umodsi3>
1000fb70:	1004943a 	slli	r2,r2,16
1000fb74:	b808d43a 	srli	r4,r23,16
1000fb78:	d8c00217 	ldw	r3,8(sp)
1000fb7c:	2084b03a 	or	r2,r4,r2
1000fb80:	1700062e 	bgeu	r2,fp,1000fb9c <__divdf3+0x3c0>
1000fb84:	1585883a 	add	r2,r2,r22
1000fb88:	893fffc4 	addi	r4,r17,-1
1000fb8c:	15811d36 	bltu	r2,r22,10010004 <__divdf3+0x828>
1000fb90:	17011c2e 	bgeu	r2,fp,10010004 <__divdf3+0x828>
1000fb94:	8c7fff84 	addi	r17,r17,-2
1000fb98:	1585883a 	add	r2,r2,r22
1000fb9c:	1739c83a 	sub	fp,r2,fp
1000fba0:	a00b883a 	mov	r5,r20
1000fba4:	e009883a 	mov	r4,fp
1000fba8:	d8c00215 	stw	r3,8(sp)
1000fbac:	0000f140 	call	10000f14 <__udivsi3>
1000fbb0:	100b883a 	mov	r5,r2
1000fbb4:	9009883a 	mov	r4,r18
1000fbb8:	1021883a 	mov	r16,r2
1000fbbc:	0000fd00 	call	10000fd0 <__mulsi3>
1000fbc0:	a00b883a 	mov	r5,r20
1000fbc4:	e009883a 	mov	r4,fp
1000fbc8:	d8800415 	stw	r2,16(sp)
1000fbcc:	0000f780 	call	10000f78 <__umodsi3>
1000fbd0:	1004943a 	slli	r2,r2,16
1000fbd4:	da000417 	ldw	r8,16(sp)
1000fbd8:	bdffffcc 	andi	r23,r23,65535
1000fbdc:	b884b03a 	or	r2,r23,r2
1000fbe0:	d8c00217 	ldw	r3,8(sp)
1000fbe4:	1200062e 	bgeu	r2,r8,1000fc00 <__divdf3+0x424>
1000fbe8:	1585883a 	add	r2,r2,r22
1000fbec:	813fffc4 	addi	r4,r16,-1
1000fbf0:	15810236 	bltu	r2,r22,1000fffc <__divdf3+0x820>
1000fbf4:	1201012e 	bgeu	r2,r8,1000fffc <__divdf3+0x820>
1000fbf8:	843fff84 	addi	r16,r16,-2
1000fbfc:	1585883a 	add	r2,r2,r22
1000fc00:	8822943a 	slli	r17,r17,16
1000fc04:	d9800017 	ldw	r6,0(sp)
1000fc08:	1211c83a 	sub	r8,r2,r8
1000fc0c:	8c22b03a 	or	r17,r17,r16
1000fc10:	373fffcc 	andi	fp,r6,65535
1000fc14:	8abfffcc 	andi	r10,r17,65535
1000fc18:	8820d43a 	srli	r16,r17,16
1000fc1c:	5009883a 	mov	r4,r10
1000fc20:	e00b883a 	mov	r5,fp
1000fc24:	302ed43a 	srli	r23,r6,16
1000fc28:	d8c00215 	stw	r3,8(sp)
1000fc2c:	da000415 	stw	r8,16(sp)
1000fc30:	da800115 	stw	r10,4(sp)
1000fc34:	0000fd00 	call	10000fd0 <__mulsi3>
1000fc38:	800b883a 	mov	r5,r16
1000fc3c:	e009883a 	mov	r4,fp
1000fc40:	d8800515 	stw	r2,20(sp)
1000fc44:	0000fd00 	call	10000fd0 <__mulsi3>
1000fc48:	8009883a 	mov	r4,r16
1000fc4c:	b80b883a 	mov	r5,r23
1000fc50:	d8800315 	stw	r2,12(sp)
1000fc54:	0000fd00 	call	10000fd0 <__mulsi3>
1000fc58:	da800117 	ldw	r10,4(sp)
1000fc5c:	b80b883a 	mov	r5,r23
1000fc60:	1021883a 	mov	r16,r2
1000fc64:	5009883a 	mov	r4,r10
1000fc68:	0000fd00 	call	10000fd0 <__mulsi3>
1000fc6c:	d9c00517 	ldw	r7,20(sp)
1000fc70:	da400317 	ldw	r9,12(sp)
1000fc74:	d8c00217 	ldw	r3,8(sp)
1000fc78:	3808d43a 	srli	r4,r7,16
1000fc7c:	1245883a 	add	r2,r2,r9
1000fc80:	da000417 	ldw	r8,16(sp)
1000fc84:	2085883a 	add	r2,r4,r2
1000fc88:	1240022e 	bgeu	r2,r9,1000fc94 <__divdf3+0x4b8>
1000fc8c:	01000074 	movhi	r4,1
1000fc90:	8121883a 	add	r16,r16,r4
1000fc94:	1008d43a 	srli	r4,r2,16
1000fc98:	1004943a 	slli	r2,r2,16
1000fc9c:	39ffffcc 	andi	r7,r7,65535
1000fca0:	2409883a 	add	r4,r4,r16
1000fca4:	11c5883a 	add	r2,r2,r7
1000fca8:	4100bb36 	bltu	r8,r4,1000ff98 <__divdf3+0x7bc>
1000fcac:	4100d726 	beq	r8,r4,1001000c <__divdf3+0x830>
1000fcb0:	4109c83a 	sub	r4,r8,r4
1000fcb4:	a8a1c83a 	sub	r16,r21,r2
1000fcb8:	ac2b803a 	cmpltu	r21,r21,r16
1000fcbc:	256bc83a 	sub	r21,r4,r21
1000fcc0:	b540d926 	beq	r22,r21,10010028 <__divdf3+0x84c>
1000fcc4:	a00b883a 	mov	r5,r20
1000fcc8:	a809883a 	mov	r4,r21
1000fccc:	d8c00215 	stw	r3,8(sp)
1000fcd0:	0000f140 	call	10000f14 <__udivsi3>
1000fcd4:	100b883a 	mov	r5,r2
1000fcd8:	9009883a 	mov	r4,r18
1000fcdc:	d8800515 	stw	r2,20(sp)
1000fce0:	0000fd00 	call	10000fd0 <__mulsi3>
1000fce4:	a809883a 	mov	r4,r21
1000fce8:	a00b883a 	mov	r5,r20
1000fcec:	d8800415 	stw	r2,16(sp)
1000fcf0:	0000f780 	call	10000f78 <__umodsi3>
1000fcf4:	1004943a 	slli	r2,r2,16
1000fcf8:	8008d43a 	srli	r4,r16,16
1000fcfc:	da000417 	ldw	r8,16(sp)
1000fd00:	d8c00217 	ldw	r3,8(sp)
1000fd04:	2084b03a 	or	r2,r4,r2
1000fd08:	d9c00517 	ldw	r7,20(sp)
1000fd0c:	1200062e 	bgeu	r2,r8,1000fd28 <__divdf3+0x54c>
1000fd10:	1585883a 	add	r2,r2,r22
1000fd14:	393fffc4 	addi	r4,r7,-1
1000fd18:	1580c536 	bltu	r2,r22,10010030 <__divdf3+0x854>
1000fd1c:	1200c42e 	bgeu	r2,r8,10010030 <__divdf3+0x854>
1000fd20:	39ffff84 	addi	r7,r7,-2
1000fd24:	1585883a 	add	r2,r2,r22
1000fd28:	122bc83a 	sub	r21,r2,r8
1000fd2c:	a00b883a 	mov	r5,r20
1000fd30:	a809883a 	mov	r4,r21
1000fd34:	d8c00215 	stw	r3,8(sp)
1000fd38:	d9c00515 	stw	r7,20(sp)
1000fd3c:	0000f140 	call	10000f14 <__udivsi3>
1000fd40:	9009883a 	mov	r4,r18
1000fd44:	100b883a 	mov	r5,r2
1000fd48:	d8800415 	stw	r2,16(sp)
1000fd4c:	0000fd00 	call	10000fd0 <__mulsi3>
1000fd50:	a809883a 	mov	r4,r21
1000fd54:	a00b883a 	mov	r5,r20
1000fd58:	1025883a 	mov	r18,r2
1000fd5c:	0000f780 	call	10000f78 <__umodsi3>
1000fd60:	1004943a 	slli	r2,r2,16
1000fd64:	813fffcc 	andi	r4,r16,65535
1000fd68:	d8c00217 	ldw	r3,8(sp)
1000fd6c:	20a0b03a 	or	r16,r4,r2
1000fd70:	d9c00517 	ldw	r7,20(sp)
1000fd74:	da000417 	ldw	r8,16(sp)
1000fd78:	8480062e 	bgeu	r16,r18,1000fd94 <__divdf3+0x5b8>
1000fd7c:	85a1883a 	add	r16,r16,r22
1000fd80:	40bfffc4 	addi	r2,r8,-1
1000fd84:	8580ac36 	bltu	r16,r22,10010038 <__divdf3+0x85c>
1000fd88:	8480ab2e 	bgeu	r16,r18,10010038 <__divdf3+0x85c>
1000fd8c:	423fff84 	addi	r8,r8,-2
1000fd90:	85a1883a 	add	r16,r16,r22
1000fd94:	3804943a 	slli	r2,r7,16
1000fd98:	84a1c83a 	sub	r16,r16,r18
1000fd9c:	e009883a 	mov	r4,fp
1000fda0:	1228b03a 	or	r20,r2,r8
1000fda4:	a1ffffcc 	andi	r7,r20,65535
1000fda8:	a024d43a 	srli	r18,r20,16
1000fdac:	380b883a 	mov	r5,r7
1000fdb0:	d8c00215 	stw	r3,8(sp)
1000fdb4:	d9c00515 	stw	r7,20(sp)
1000fdb8:	0000fd00 	call	10000fd0 <__mulsi3>
1000fdbc:	900b883a 	mov	r5,r18
1000fdc0:	e009883a 	mov	r4,fp
1000fdc4:	102b883a 	mov	r21,r2
1000fdc8:	0000fd00 	call	10000fd0 <__mulsi3>
1000fdcc:	900b883a 	mov	r5,r18
1000fdd0:	b809883a 	mov	r4,r23
1000fdd4:	1039883a 	mov	fp,r2
1000fdd8:	0000fd00 	call	10000fd0 <__mulsi3>
1000fddc:	d9c00517 	ldw	r7,20(sp)
1000fde0:	b80b883a 	mov	r5,r23
1000fde4:	1025883a 	mov	r18,r2
1000fde8:	3809883a 	mov	r4,r7
1000fdec:	0000fd00 	call	10000fd0 <__mulsi3>
1000fdf0:	a808d43a 	srli	r4,r21,16
1000fdf4:	1705883a 	add	r2,r2,fp
1000fdf8:	d8c00217 	ldw	r3,8(sp)
1000fdfc:	2085883a 	add	r2,r4,r2
1000fe00:	1700022e 	bgeu	r2,fp,1000fe0c <__divdf3+0x630>
1000fe04:	01000074 	movhi	r4,1
1000fe08:	9125883a 	add	r18,r18,r4
1000fe0c:	1008d43a 	srli	r4,r2,16
1000fe10:	1004943a 	slli	r2,r2,16
1000fe14:	ad7fffcc 	andi	r21,r21,65535
1000fe18:	2489883a 	add	r4,r4,r18
1000fe1c:	1545883a 	add	r2,r2,r21
1000fe20:	81003836 	bltu	r16,r4,1000ff04 <__divdf3+0x728>
1000fe24:	81003626 	beq	r16,r4,1000ff00 <__divdf3+0x724>
1000fe28:	a5000054 	ori	r20,r20,1
1000fe2c:	1880ffc4 	addi	r2,r3,1023
1000fe30:	00bf2e0e 	bge	zero,r2,1000faec <__alt_data_end+0xf800faec>
1000fe34:	a10001cc 	andi	r4,r20,7
1000fe38:	20000726 	beq	r4,zero,1000fe58 <__divdf3+0x67c>
1000fe3c:	a10003cc 	andi	r4,r20,15
1000fe40:	01400104 	movi	r5,4
1000fe44:	21400426 	beq	r4,r5,1000fe58 <__divdf3+0x67c>
1000fe48:	a149883a 	add	r4,r20,r5
1000fe4c:	2529803a 	cmpltu	r20,r4,r20
1000fe50:	8d23883a 	add	r17,r17,r20
1000fe54:	2029883a 	mov	r20,r4
1000fe58:	8900402c 	andhi	r4,r17,256
1000fe5c:	20000426 	beq	r4,zero,1000fe70 <__divdf3+0x694>
1000fe60:	18810004 	addi	r2,r3,1024
1000fe64:	00ffc034 	movhi	r3,65280
1000fe68:	18ffffc4 	addi	r3,r3,-1
1000fe6c:	88e2703a 	and	r17,r17,r3
1000fe70:	00c1ff84 	movi	r3,2046
1000fe74:	18beb416 	blt	r3,r2,1000f948 <__alt_data_end+0xf800f948>
1000fe78:	a028d0fa 	srli	r20,r20,3
1000fe7c:	882a977a 	slli	r21,r17,29
1000fe80:	8820927a 	slli	r16,r17,9
1000fe84:	1081ffcc 	andi	r2,r2,2047
1000fe88:	ad2ab03a 	or	r21,r21,r20
1000fe8c:	8020d33a 	srli	r16,r16,12
1000fe90:	9900004c 	andi	r4,r19,1
1000fe94:	003eb006 	br	1000f958 <__alt_data_end+0xf800f958>
1000fe98:	8080022c 	andhi	r2,r16,8
1000fe9c:	10001226 	beq	r2,zero,1000fee8 <__divdf3+0x70c>
1000fea0:	8880022c 	andhi	r2,r17,8
1000fea4:	1000101e 	bne	r2,zero,1000fee8 <__divdf3+0x70c>
1000fea8:	00800434 	movhi	r2,16
1000feac:	8c000234 	orhi	r16,r17,8
1000feb0:	10bfffc4 	addi	r2,r2,-1
1000feb4:	b809883a 	mov	r4,r23
1000feb8:	80a0703a 	and	r16,r16,r2
1000febc:	a02b883a 	mov	r21,r20
1000fec0:	003f0806 	br	1000fae4 <__alt_data_end+0xf800fae4>
1000fec4:	008000c4 	movi	r2,3
1000fec8:	3880b126 	beq	r7,r2,10010190 <__divdf3+0x9b4>
1000fecc:	00800044 	movi	r2,1
1000fed0:	38805b1e 	bne	r7,r2,10010040 <__divdf3+0x864>
1000fed4:	e009883a 	mov	r4,fp
1000fed8:	0005883a 	mov	r2,zero
1000fedc:	0021883a 	mov	r16,zero
1000fee0:	002b883a 	mov	r21,zero
1000fee4:	003e9c06 	br	1000f958 <__alt_data_end+0xf800f958>
1000fee8:	00800434 	movhi	r2,16
1000feec:	84000234 	orhi	r16,r16,8
1000fef0:	10bfffc4 	addi	r2,r2,-1
1000fef4:	b009883a 	mov	r4,r22
1000fef8:	80a0703a 	and	r16,r16,r2
1000fefc:	003ef906 	br	1000fae4 <__alt_data_end+0xf800fae4>
1000ff00:	103fca26 	beq	r2,zero,1000fe2c <__alt_data_end+0xf800fe2c>
1000ff04:	b421883a 	add	r16,r22,r16
1000ff08:	a17fffc4 	addi	r5,r20,-1
1000ff0c:	8580422e 	bgeu	r16,r22,10010018 <__divdf3+0x83c>
1000ff10:	2829883a 	mov	r20,r5
1000ff14:	813fc41e 	bne	r16,r4,1000fe28 <__alt_data_end+0xf800fe28>
1000ff18:	d9800017 	ldw	r6,0(sp)
1000ff1c:	30bfc21e 	bne	r6,r2,1000fe28 <__alt_data_end+0xf800fe28>
1000ff20:	003fc206 	br	1000fe2c <__alt_data_end+0xf800fe2c>
1000ff24:	143ff604 	addi	r16,r2,-40
1000ff28:	8c20983a 	sll	r16,r17,r16
1000ff2c:	002b883a 	mov	r21,zero
1000ff30:	003eb406 	br	1000fa04 <__alt_data_end+0xf800fa04>
1000ff34:	d9800215 	stw	r6,8(sp)
1000ff38:	d9c00515 	stw	r7,20(sp)
1000ff3c:	da000415 	stw	r8,16(sp)
1000ff40:	00117700 	call	10011770 <__clzsi2>
1000ff44:	10800804 	addi	r2,r2,32
1000ff48:	da000417 	ldw	r8,16(sp)
1000ff4c:	d9c00517 	ldw	r7,20(sp)
1000ff50:	d9800217 	ldw	r6,8(sp)
1000ff54:	003ea106 	br	1000f9dc <__alt_data_end+0xf800f9dc>
1000ff58:	147ff604 	addi	r17,r2,-40
1000ff5c:	3462983a 	sll	r17,r6,r17
1000ff60:	0029883a 	mov	r20,zero
1000ff64:	003ec906 	br	1000fa8c <__alt_data_end+0xf800fa8c>
1000ff68:	3009883a 	mov	r4,r6
1000ff6c:	d9400115 	stw	r5,4(sp)
1000ff70:	d9800215 	stw	r6,8(sp)
1000ff74:	da000415 	stw	r8,16(sp)
1000ff78:	da400315 	stw	r9,12(sp)
1000ff7c:	00117700 	call	10011770 <__clzsi2>
1000ff80:	10800804 	addi	r2,r2,32
1000ff84:	da400317 	ldw	r9,12(sp)
1000ff88:	da000417 	ldw	r8,16(sp)
1000ff8c:	d9800217 	ldw	r6,8(sp)
1000ff90:	d9400117 	ldw	r5,4(sp)
1000ff94:	003eb306 	br	1000fa64 <__alt_data_end+0xf800fa64>
1000ff98:	d9800017 	ldw	r6,0(sp)
1000ff9c:	a9ab883a 	add	r21,r21,r6
1000ffa0:	a98b803a 	cmpltu	r5,r21,r6
1000ffa4:	2d8b883a 	add	r5,r5,r22
1000ffa8:	2a11883a 	add	r8,r5,r8
1000ffac:	897fffc4 	addi	r5,r17,-1
1000ffb0:	b2000c2e 	bgeu	r22,r8,1000ffe4 <__divdf3+0x808>
1000ffb4:	41003f36 	bltu	r8,r4,100100b4 <__divdf3+0x8d8>
1000ffb8:	22006c26 	beq	r4,r8,1001016c <__divdf3+0x990>
1000ffbc:	4109c83a 	sub	r4,r8,r4
1000ffc0:	2823883a 	mov	r17,r5
1000ffc4:	003f3b06 	br	1000fcb4 <__alt_data_end+0xf800fcb4>
1000ffc8:	ad3ed336 	bltu	r21,r20,1000fb18 <__alt_data_end+0xf800fb18>
1000ffcc:	a804d07a 	srli	r2,r21,1
1000ffd0:	802e97fa 	slli	r23,r16,31
1000ffd4:	a82a97fa 	slli	r21,r21,31
1000ffd8:	8020d07a 	srli	r16,r16,1
1000ffdc:	b8aeb03a 	or	r23,r23,r2
1000ffe0:	003ed006 	br	1000fb24 <__alt_data_end+0xf800fb24>
1000ffe4:	b23ff51e 	bne	r22,r8,1000ffbc <__alt_data_end+0xf800ffbc>
1000ffe8:	d9800017 	ldw	r6,0(sp)
1000ffec:	a9bff12e 	bgeu	r21,r6,1000ffb4 <__alt_data_end+0xf800ffb4>
1000fff0:	b109c83a 	sub	r4,r22,r4
1000fff4:	2823883a 	mov	r17,r5
1000fff8:	003f2e06 	br	1000fcb4 <__alt_data_end+0xf800fcb4>
1000fffc:	2021883a 	mov	r16,r4
10010000:	003eff06 	br	1000fc00 <__alt_data_end+0xf800fc00>
10010004:	2023883a 	mov	r17,r4
10010008:	003ee406 	br	1000fb9c <__alt_data_end+0xf800fb9c>
1001000c:	a8bfe236 	bltu	r21,r2,1000ff98 <__alt_data_end+0xf800ff98>
10010010:	0009883a 	mov	r4,zero
10010014:	003f2706 	br	1000fcb4 <__alt_data_end+0xf800fcb4>
10010018:	81002d36 	bltu	r16,r4,100100d0 <__divdf3+0x8f4>
1001001c:	24005626 	beq	r4,r16,10010178 <__divdf3+0x99c>
10010020:	2829883a 	mov	r20,r5
10010024:	003f8006 	br	1000fe28 <__alt_data_end+0xf800fe28>
10010028:	053fffc4 	movi	r20,-1
1001002c:	003f7f06 	br	1000fe2c <__alt_data_end+0xf800fe2c>
10010030:	200f883a 	mov	r7,r4
10010034:	003f3c06 	br	1000fd28 <__alt_data_end+0xf800fd28>
10010038:	1011883a 	mov	r8,r2
1001003c:	003f5506 	br	1000fd94 <__alt_data_end+0xf800fd94>
10010040:	e027883a 	mov	r19,fp
10010044:	003f7906 	br	1000fe2c <__alt_data_end+0xf800fe2c>
10010048:	010007c4 	movi	r4,31
1001004c:	20c02816 	blt	r4,r3,100100f0 <__divdf3+0x914>
10010050:	00800804 	movi	r2,32
10010054:	10c5c83a 	sub	r2,r2,r3
10010058:	888a983a 	sll	r5,r17,r2
1001005c:	a0c8d83a 	srl	r4,r20,r3
10010060:	a084983a 	sll	r2,r20,r2
10010064:	88e2d83a 	srl	r17,r17,r3
10010068:	2906b03a 	or	r3,r5,r4
1001006c:	1004c03a 	cmpne	r2,r2,zero
10010070:	1886b03a 	or	r3,r3,r2
10010074:	188001cc 	andi	r2,r3,7
10010078:	10000726 	beq	r2,zero,10010098 <__divdf3+0x8bc>
1001007c:	188003cc 	andi	r2,r3,15
10010080:	01000104 	movi	r4,4
10010084:	11000426 	beq	r2,r4,10010098 <__divdf3+0x8bc>
10010088:	1805883a 	mov	r2,r3
1001008c:	10c00104 	addi	r3,r2,4
10010090:	1885803a 	cmpltu	r2,r3,r2
10010094:	88a3883a 	add	r17,r17,r2
10010098:	8880202c 	andhi	r2,r17,128
1001009c:	10002926 	beq	r2,zero,10010144 <__divdf3+0x968>
100100a0:	9900004c 	andi	r4,r19,1
100100a4:	00800044 	movi	r2,1
100100a8:	0021883a 	mov	r16,zero
100100ac:	002b883a 	mov	r21,zero
100100b0:	003e2906 	br	1000f958 <__alt_data_end+0xf800f958>
100100b4:	d9800017 	ldw	r6,0(sp)
100100b8:	8c7fff84 	addi	r17,r17,-2
100100bc:	a9ab883a 	add	r21,r21,r6
100100c0:	a98b803a 	cmpltu	r5,r21,r6
100100c4:	2d8b883a 	add	r5,r5,r22
100100c8:	2a11883a 	add	r8,r5,r8
100100cc:	003ef806 	br	1000fcb0 <__alt_data_end+0xf800fcb0>
100100d0:	d9800017 	ldw	r6,0(sp)
100100d4:	318f883a 	add	r7,r6,r6
100100d8:	398b803a 	cmpltu	r5,r7,r6
100100dc:	2d8d883a 	add	r6,r5,r22
100100e0:	81a1883a 	add	r16,r16,r6
100100e4:	a17fff84 	addi	r5,r20,-2
100100e8:	d9c00015 	stw	r7,0(sp)
100100ec:	003f8806 	br	1000ff10 <__alt_data_end+0xf800ff10>
100100f0:	013ff844 	movi	r4,-31
100100f4:	2085c83a 	sub	r2,r4,r2
100100f8:	8888d83a 	srl	r4,r17,r2
100100fc:	00800804 	movi	r2,32
10010100:	18802126 	beq	r3,r2,10010188 <__divdf3+0x9ac>
10010104:	04001004 	movi	r16,64
10010108:	80c7c83a 	sub	r3,r16,r3
1001010c:	88e0983a 	sll	r16,r17,r3
10010110:	8504b03a 	or	r2,r16,r20
10010114:	1004c03a 	cmpne	r2,r2,zero
10010118:	2084b03a 	or	r2,r4,r2
1001011c:	144001cc 	andi	r17,r2,7
10010120:	88000d1e 	bne	r17,zero,10010158 <__divdf3+0x97c>
10010124:	0021883a 	mov	r16,zero
10010128:	102ad0fa 	srli	r21,r2,3
1001012c:	9900004c 	andi	r4,r19,1
10010130:	0005883a 	mov	r2,zero
10010134:	ac6ab03a 	or	r21,r21,r17
10010138:	003e0706 	br	1000f958 <__alt_data_end+0xf800f958>
1001013c:	1007883a 	mov	r3,r2
10010140:	0023883a 	mov	r17,zero
10010144:	8820927a 	slli	r16,r17,9
10010148:	1805883a 	mov	r2,r3
1001014c:	8822977a 	slli	r17,r17,29
10010150:	8020d33a 	srli	r16,r16,12
10010154:	003ff406 	br	10010128 <__alt_data_end+0xf8010128>
10010158:	10c003cc 	andi	r3,r2,15
1001015c:	01000104 	movi	r4,4
10010160:	193ff626 	beq	r3,r4,1001013c <__alt_data_end+0xf801013c>
10010164:	0023883a 	mov	r17,zero
10010168:	003fc806 	br	1001008c <__alt_data_end+0xf801008c>
1001016c:	a8bfd136 	bltu	r21,r2,100100b4 <__alt_data_end+0xf80100b4>
10010170:	2823883a 	mov	r17,r5
10010174:	003fa606 	br	10010010 <__alt_data_end+0xf8010010>
10010178:	d9800017 	ldw	r6,0(sp)
1001017c:	30bfd436 	bltu	r6,r2,100100d0 <__alt_data_end+0xf80100d0>
10010180:	2829883a 	mov	r20,r5
10010184:	003f6406 	br	1000ff18 <__alt_data_end+0xf800ff18>
10010188:	0021883a 	mov	r16,zero
1001018c:	003fe006 	br	10010110 <__alt_data_end+0xf8010110>
10010190:	00800434 	movhi	r2,16
10010194:	8c000234 	orhi	r16,r17,8
10010198:	10bfffc4 	addi	r2,r2,-1
1001019c:	e009883a 	mov	r4,fp
100101a0:	80a0703a 	and	r16,r16,r2
100101a4:	a02b883a 	mov	r21,r20
100101a8:	003e4e06 	br	1000fae4 <__alt_data_end+0xf800fae4>

100101ac <__eqdf2>:
100101ac:	2804d53a 	srli	r2,r5,20
100101b0:	3806d53a 	srli	r3,r7,20
100101b4:	02000434 	movhi	r8,16
100101b8:	423fffc4 	addi	r8,r8,-1
100101bc:	1081ffcc 	andi	r2,r2,2047
100101c0:	0281ffc4 	movi	r10,2047
100101c4:	2a12703a 	and	r9,r5,r8
100101c8:	18c1ffcc 	andi	r3,r3,2047
100101cc:	3a10703a 	and	r8,r7,r8
100101d0:	280ad7fa 	srli	r5,r5,31
100101d4:	380ed7fa 	srli	r7,r7,31
100101d8:	12801026 	beq	r2,r10,1001021c <__eqdf2+0x70>
100101dc:	0281ffc4 	movi	r10,2047
100101e0:	1a800a26 	beq	r3,r10,1001020c <__eqdf2+0x60>
100101e4:	10c00226 	beq	r2,r3,100101f0 <__eqdf2+0x44>
100101e8:	00800044 	movi	r2,1
100101ec:	f800283a 	ret
100101f0:	4a3ffd1e 	bne	r9,r8,100101e8 <__alt_data_end+0xf80101e8>
100101f4:	21bffc1e 	bne	r4,r6,100101e8 <__alt_data_end+0xf80101e8>
100101f8:	29c00c26 	beq	r5,r7,1001022c <__eqdf2+0x80>
100101fc:	103ffa1e 	bne	r2,zero,100101e8 <__alt_data_end+0xf80101e8>
10010200:	2244b03a 	or	r2,r4,r9
10010204:	1004c03a 	cmpne	r2,r2,zero
10010208:	f800283a 	ret
1001020c:	3214b03a 	or	r10,r6,r8
10010210:	503ff426 	beq	r10,zero,100101e4 <__alt_data_end+0xf80101e4>
10010214:	00800044 	movi	r2,1
10010218:	f800283a 	ret
1001021c:	2254b03a 	or	r10,r4,r9
10010220:	503fee26 	beq	r10,zero,100101dc <__alt_data_end+0xf80101dc>
10010224:	00800044 	movi	r2,1
10010228:	f800283a 	ret
1001022c:	0005883a 	mov	r2,zero
10010230:	f800283a 	ret

10010234 <__gedf2>:
10010234:	2804d53a 	srli	r2,r5,20
10010238:	3806d53a 	srli	r3,r7,20
1001023c:	02000434 	movhi	r8,16
10010240:	423fffc4 	addi	r8,r8,-1
10010244:	1081ffcc 	andi	r2,r2,2047
10010248:	0241ffc4 	movi	r9,2047
1001024c:	2a14703a 	and	r10,r5,r8
10010250:	18c1ffcc 	andi	r3,r3,2047
10010254:	3a10703a 	and	r8,r7,r8
10010258:	280ad7fa 	srli	r5,r5,31
1001025c:	380ed7fa 	srli	r7,r7,31
10010260:	12401d26 	beq	r2,r9,100102d8 <__gedf2+0xa4>
10010264:	0241ffc4 	movi	r9,2047
10010268:	1a401226 	beq	r3,r9,100102b4 <__gedf2+0x80>
1001026c:	1000081e 	bne	r2,zero,10010290 <__gedf2+0x5c>
10010270:	2296b03a 	or	r11,r4,r10
10010274:	5813003a 	cmpeq	r9,r11,zero
10010278:	1800091e 	bne	r3,zero,100102a0 <__gedf2+0x6c>
1001027c:	3218b03a 	or	r12,r6,r8
10010280:	6000071e 	bne	r12,zero,100102a0 <__gedf2+0x6c>
10010284:	0005883a 	mov	r2,zero
10010288:	5800101e 	bne	r11,zero,100102cc <__gedf2+0x98>
1001028c:	f800283a 	ret
10010290:	18000c1e 	bne	r3,zero,100102c4 <__gedf2+0x90>
10010294:	3212b03a 	or	r9,r6,r8
10010298:	48000c26 	beq	r9,zero,100102cc <__gedf2+0x98>
1001029c:	0013883a 	mov	r9,zero
100102a0:	39c03fcc 	andi	r7,r7,255
100102a4:	48000826 	beq	r9,zero,100102c8 <__gedf2+0x94>
100102a8:	38000926 	beq	r7,zero,100102d0 <__gedf2+0x9c>
100102ac:	00800044 	movi	r2,1
100102b0:	f800283a 	ret
100102b4:	3212b03a 	or	r9,r6,r8
100102b8:	483fec26 	beq	r9,zero,1001026c <__alt_data_end+0xf801026c>
100102bc:	00bfff84 	movi	r2,-2
100102c0:	f800283a 	ret
100102c4:	39c03fcc 	andi	r7,r7,255
100102c8:	29c00626 	beq	r5,r7,100102e4 <__gedf2+0xb0>
100102cc:	283ff726 	beq	r5,zero,100102ac <__alt_data_end+0xf80102ac>
100102d0:	00bfffc4 	movi	r2,-1
100102d4:	f800283a 	ret
100102d8:	2292b03a 	or	r9,r4,r10
100102dc:	483fe126 	beq	r9,zero,10010264 <__alt_data_end+0xf8010264>
100102e0:	003ff606 	br	100102bc <__alt_data_end+0xf80102bc>
100102e4:	18bff916 	blt	r3,r2,100102cc <__alt_data_end+0xf80102cc>
100102e8:	10c00316 	blt	r2,r3,100102f8 <__gedf2+0xc4>
100102ec:	42bff736 	bltu	r8,r10,100102cc <__alt_data_end+0xf80102cc>
100102f0:	52000326 	beq	r10,r8,10010300 <__gedf2+0xcc>
100102f4:	5200042e 	bgeu	r10,r8,10010308 <__gedf2+0xd4>
100102f8:	283fec1e 	bne	r5,zero,100102ac <__alt_data_end+0xf80102ac>
100102fc:	003ff406 	br	100102d0 <__alt_data_end+0xf80102d0>
10010300:	313ff236 	bltu	r6,r4,100102cc <__alt_data_end+0xf80102cc>
10010304:	21bffc36 	bltu	r4,r6,100102f8 <__alt_data_end+0xf80102f8>
10010308:	0005883a 	mov	r2,zero
1001030c:	f800283a 	ret

10010310 <__ledf2>:
10010310:	2804d53a 	srli	r2,r5,20
10010314:	3810d53a 	srli	r8,r7,20
10010318:	00c00434 	movhi	r3,16
1001031c:	18ffffc4 	addi	r3,r3,-1
10010320:	1081ffcc 	andi	r2,r2,2047
10010324:	0241ffc4 	movi	r9,2047
10010328:	28d4703a 	and	r10,r5,r3
1001032c:	4201ffcc 	andi	r8,r8,2047
10010330:	38c6703a 	and	r3,r7,r3
10010334:	280ad7fa 	srli	r5,r5,31
10010338:	380ed7fa 	srli	r7,r7,31
1001033c:	12401f26 	beq	r2,r9,100103bc <__ledf2+0xac>
10010340:	0241ffc4 	movi	r9,2047
10010344:	42401426 	beq	r8,r9,10010398 <__ledf2+0x88>
10010348:	1000091e 	bne	r2,zero,10010370 <__ledf2+0x60>
1001034c:	2296b03a 	or	r11,r4,r10
10010350:	5813003a 	cmpeq	r9,r11,zero
10010354:	29403fcc 	andi	r5,r5,255
10010358:	40000a1e 	bne	r8,zero,10010384 <__ledf2+0x74>
1001035c:	30d8b03a 	or	r12,r6,r3
10010360:	6000081e 	bne	r12,zero,10010384 <__ledf2+0x74>
10010364:	0005883a 	mov	r2,zero
10010368:	5800111e 	bne	r11,zero,100103b0 <__ledf2+0xa0>
1001036c:	f800283a 	ret
10010370:	29403fcc 	andi	r5,r5,255
10010374:	40000c1e 	bne	r8,zero,100103a8 <__ledf2+0x98>
10010378:	30d2b03a 	or	r9,r6,r3
1001037c:	48000c26 	beq	r9,zero,100103b0 <__ledf2+0xa0>
10010380:	0013883a 	mov	r9,zero
10010384:	39c03fcc 	andi	r7,r7,255
10010388:	48000826 	beq	r9,zero,100103ac <__ledf2+0x9c>
1001038c:	38001126 	beq	r7,zero,100103d4 <__ledf2+0xc4>
10010390:	00800044 	movi	r2,1
10010394:	f800283a 	ret
10010398:	30d2b03a 	or	r9,r6,r3
1001039c:	483fea26 	beq	r9,zero,10010348 <__alt_data_end+0xf8010348>
100103a0:	00800084 	movi	r2,2
100103a4:	f800283a 	ret
100103a8:	39c03fcc 	andi	r7,r7,255
100103ac:	39400726 	beq	r7,r5,100103cc <__ledf2+0xbc>
100103b0:	2800081e 	bne	r5,zero,100103d4 <__ledf2+0xc4>
100103b4:	00800044 	movi	r2,1
100103b8:	f800283a 	ret
100103bc:	2292b03a 	or	r9,r4,r10
100103c0:	483fdf26 	beq	r9,zero,10010340 <__alt_data_end+0xf8010340>
100103c4:	00800084 	movi	r2,2
100103c8:	f800283a 	ret
100103cc:	4080030e 	bge	r8,r2,100103dc <__ledf2+0xcc>
100103d0:	383fef26 	beq	r7,zero,10010390 <__alt_data_end+0xf8010390>
100103d4:	00bfffc4 	movi	r2,-1
100103d8:	f800283a 	ret
100103dc:	123feb16 	blt	r2,r8,1001038c <__alt_data_end+0xf801038c>
100103e0:	1abff336 	bltu	r3,r10,100103b0 <__alt_data_end+0xf80103b0>
100103e4:	50c00326 	beq	r10,r3,100103f4 <__ledf2+0xe4>
100103e8:	50c0042e 	bgeu	r10,r3,100103fc <__ledf2+0xec>
100103ec:	283fe81e 	bne	r5,zero,10010390 <__alt_data_end+0xf8010390>
100103f0:	003ff806 	br	100103d4 <__alt_data_end+0xf80103d4>
100103f4:	313fee36 	bltu	r6,r4,100103b0 <__alt_data_end+0xf80103b0>
100103f8:	21bffc36 	bltu	r4,r6,100103ec <__alt_data_end+0xf80103ec>
100103fc:	0005883a 	mov	r2,zero
10010400:	f800283a 	ret

10010404 <__muldf3>:
10010404:	deffee04 	addi	sp,sp,-72
10010408:	dd000c15 	stw	r20,48(sp)
1001040c:	2828d53a 	srli	r20,r5,20
10010410:	ddc00f15 	stw	r23,60(sp)
10010414:	282ed7fa 	srli	r23,r5,31
10010418:	dc000815 	stw	r16,32(sp)
1001041c:	04000434 	movhi	r16,16
10010420:	dcc00b15 	stw	r19,44(sp)
10010424:	843fffc4 	addi	r16,r16,-1
10010428:	dfc01115 	stw	ra,68(sp)
1001042c:	df001015 	stw	fp,64(sp)
10010430:	dd800e15 	stw	r22,56(sp)
10010434:	dd400d15 	stw	r21,52(sp)
10010438:	dc800a15 	stw	r18,40(sp)
1001043c:	dc400915 	stw	r17,36(sp)
10010440:	a501ffcc 	andi	r20,r20,2047
10010444:	2c20703a 	and	r16,r5,r16
10010448:	b827883a 	mov	r19,r23
1001044c:	ba403fcc 	andi	r9,r23,255
10010450:	a0006026 	beq	r20,zero,100105d4 <__muldf3+0x1d0>
10010454:	0081ffc4 	movi	r2,2047
10010458:	202d883a 	mov	r22,r4
1001045c:	a0803626 	beq	r20,r2,10010538 <__muldf3+0x134>
10010460:	84000434 	orhi	r16,r16,16
10010464:	200ad77a 	srli	r5,r4,29
10010468:	800490fa 	slli	r2,r16,3
1001046c:	202c90fa 	slli	r22,r4,3
10010470:	a53f0044 	addi	r20,r20,-1023
10010474:	28a0b03a 	or	r16,r5,r2
10010478:	002b883a 	mov	r21,zero
1001047c:	000b883a 	mov	r5,zero
10010480:	3804d53a 	srli	r2,r7,20
10010484:	3838d7fa 	srli	fp,r7,31
10010488:	04400434 	movhi	r17,16
1001048c:	8c7fffc4 	addi	r17,r17,-1
10010490:	1081ffcc 	andi	r2,r2,2047
10010494:	3025883a 	mov	r18,r6
10010498:	3c62703a 	and	r17,r7,r17
1001049c:	e2803fcc 	andi	r10,fp,255
100104a0:	10006d26 	beq	r2,zero,10010658 <__muldf3+0x254>
100104a4:	00c1ffc4 	movi	r3,2047
100104a8:	10c06526 	beq	r2,r3,10010640 <__muldf3+0x23c>
100104ac:	8c400434 	orhi	r17,r17,16
100104b0:	300ed77a 	srli	r7,r6,29
100104b4:	880690fa 	slli	r3,r17,3
100104b8:	302490fa 	slli	r18,r6,3
100104bc:	10bf0044 	addi	r2,r2,-1023
100104c0:	38e2b03a 	or	r17,r7,r3
100104c4:	000f883a 	mov	r7,zero
100104c8:	a087883a 	add	r3,r20,r2
100104cc:	010003c4 	movi	r4,15
100104d0:	3d44b03a 	or	r2,r7,r21
100104d4:	e5ccf03a 	xor	r6,fp,r23
100104d8:	1a000044 	addi	r8,r3,1
100104dc:	20809b36 	bltu	r4,r2,1001074c <__muldf3+0x348>
100104e0:	100490ba 	slli	r2,r2,2
100104e4:	01040074 	movhi	r4,4097
100104e8:	21013e04 	addi	r4,r4,1272
100104ec:	1105883a 	add	r2,r2,r4
100104f0:	10800017 	ldw	r2,0(r2)
100104f4:	1000683a 	jmp	r2
100104f8:	1001074c 	andi	zero,r2,1053
100104fc:	10010558 	cmpnei	zero,r2,1045
10010500:	10010558 	cmpnei	zero,r2,1045
10010504:	10010554 	ori	zero,r2,1045
10010508:	10010728 	cmpgeui	zero,r2,1052
1001050c:	10010728 	cmpgeui	zero,r2,1052
10010510:	10010710 	cmplti	zero,r2,1052
10010514:	10010554 	ori	zero,r2,1045
10010518:	10010728 	cmpgeui	zero,r2,1052
1001051c:	10010710 	cmplti	zero,r2,1052
10010520:	10010728 	cmpgeui	zero,r2,1052
10010524:	10010554 	ori	zero,r2,1045
10010528:	10010738 	rdprs	zero,r2,1052
1001052c:	10010738 	rdprs	zero,r2,1052
10010530:	10010738 	rdprs	zero,r2,1052
10010534:	10010a98 	cmpnei	zero,r2,1066
10010538:	2404b03a 	or	r2,r4,r16
1001053c:	1000711e 	bne	r2,zero,10010704 <__muldf3+0x300>
10010540:	05400204 	movi	r21,8
10010544:	0021883a 	mov	r16,zero
10010548:	002d883a 	mov	r22,zero
1001054c:	01400084 	movi	r5,2
10010550:	003fcb06 	br	10010480 <__alt_data_end+0xf8010480>
10010554:	500d883a 	mov	r6,r10
10010558:	00800084 	movi	r2,2
1001055c:	38805926 	beq	r7,r2,100106c4 <__muldf3+0x2c0>
10010560:	008000c4 	movi	r2,3
10010564:	3881bb26 	beq	r7,r2,10010c54 <__muldf3+0x850>
10010568:	00800044 	movi	r2,1
1001056c:	3881961e 	bne	r7,r2,10010bc8 <__muldf3+0x7c4>
10010570:	3027883a 	mov	r19,r6
10010574:	0005883a 	mov	r2,zero
10010578:	0021883a 	mov	r16,zero
1001057c:	002d883a 	mov	r22,zero
10010580:	1004953a 	slli	r2,r2,20
10010584:	98c03fcc 	andi	r3,r19,255
10010588:	04400434 	movhi	r17,16
1001058c:	8c7fffc4 	addi	r17,r17,-1
10010590:	180697fa 	slli	r3,r3,31
10010594:	8460703a 	and	r16,r16,r17
10010598:	80a0b03a 	or	r16,r16,r2
1001059c:	80c6b03a 	or	r3,r16,r3
100105a0:	b005883a 	mov	r2,r22
100105a4:	dfc01117 	ldw	ra,68(sp)
100105a8:	df001017 	ldw	fp,64(sp)
100105ac:	ddc00f17 	ldw	r23,60(sp)
100105b0:	dd800e17 	ldw	r22,56(sp)
100105b4:	dd400d17 	ldw	r21,52(sp)
100105b8:	dd000c17 	ldw	r20,48(sp)
100105bc:	dcc00b17 	ldw	r19,44(sp)
100105c0:	dc800a17 	ldw	r18,40(sp)
100105c4:	dc400917 	ldw	r17,36(sp)
100105c8:	dc000817 	ldw	r16,32(sp)
100105cc:	dec01204 	addi	sp,sp,72
100105d0:	f800283a 	ret
100105d4:	2404b03a 	or	r2,r4,r16
100105d8:	202b883a 	mov	r21,r4
100105dc:	10004426 	beq	r2,zero,100106f0 <__muldf3+0x2ec>
100105e0:	80015126 	beq	r16,zero,10010b28 <__muldf3+0x724>
100105e4:	8009883a 	mov	r4,r16
100105e8:	d9800715 	stw	r6,28(sp)
100105ec:	d9c00215 	stw	r7,8(sp)
100105f0:	da400415 	stw	r9,16(sp)
100105f4:	00117700 	call	10011770 <__clzsi2>
100105f8:	d9800717 	ldw	r6,28(sp)
100105fc:	d9c00217 	ldw	r7,8(sp)
10010600:	da400417 	ldw	r9,16(sp)
10010604:	113ffd44 	addi	r4,r2,-11
10010608:	00c00704 	movi	r3,28
1001060c:	19014216 	blt	r3,r4,10010b18 <__muldf3+0x714>
10010610:	00c00744 	movi	r3,29
10010614:	15bffe04 	addi	r22,r2,-8
10010618:	1907c83a 	sub	r3,r3,r4
1001061c:	85a0983a 	sll	r16,r16,r22
10010620:	a8c6d83a 	srl	r3,r21,r3
10010624:	adac983a 	sll	r22,r21,r22
10010628:	1c20b03a 	or	r16,r3,r16
1001062c:	1080fcc4 	addi	r2,r2,1011
10010630:	00a9c83a 	sub	r20,zero,r2
10010634:	002b883a 	mov	r21,zero
10010638:	000b883a 	mov	r5,zero
1001063c:	003f9006 	br	10010480 <__alt_data_end+0xf8010480>
10010640:	3446b03a 	or	r3,r6,r17
10010644:	1800281e 	bne	r3,zero,100106e8 <__muldf3+0x2e4>
10010648:	0023883a 	mov	r17,zero
1001064c:	0025883a 	mov	r18,zero
10010650:	01c00084 	movi	r7,2
10010654:	003f9c06 	br	100104c8 <__alt_data_end+0xf80104c8>
10010658:	3446b03a 	or	r3,r6,r17
1001065c:	18001e26 	beq	r3,zero,100106d8 <__muldf3+0x2d4>
10010660:	88012126 	beq	r17,zero,10010ae8 <__muldf3+0x6e4>
10010664:	8809883a 	mov	r4,r17
10010668:	d9400215 	stw	r5,8(sp)
1001066c:	d9800715 	stw	r6,28(sp)
10010670:	da400415 	stw	r9,16(sp)
10010674:	da800315 	stw	r10,12(sp)
10010678:	00117700 	call	10011770 <__clzsi2>
1001067c:	d9400217 	ldw	r5,8(sp)
10010680:	d9800717 	ldw	r6,28(sp)
10010684:	da400417 	ldw	r9,16(sp)
10010688:	da800317 	ldw	r10,12(sp)
1001068c:	113ffd44 	addi	r4,r2,-11
10010690:	00c00704 	movi	r3,28
10010694:	19011016 	blt	r3,r4,10010ad8 <__muldf3+0x6d4>
10010698:	00c00744 	movi	r3,29
1001069c:	14bffe04 	addi	r18,r2,-8
100106a0:	1907c83a 	sub	r3,r3,r4
100106a4:	8ca2983a 	sll	r17,r17,r18
100106a8:	30c6d83a 	srl	r3,r6,r3
100106ac:	34a4983a 	sll	r18,r6,r18
100106b0:	1c62b03a 	or	r17,r3,r17
100106b4:	1080fcc4 	addi	r2,r2,1011
100106b8:	0085c83a 	sub	r2,zero,r2
100106bc:	000f883a 	mov	r7,zero
100106c0:	003f8106 	br	100104c8 <__alt_data_end+0xf80104c8>
100106c4:	3027883a 	mov	r19,r6
100106c8:	0081ffc4 	movi	r2,2047
100106cc:	0021883a 	mov	r16,zero
100106d0:	002d883a 	mov	r22,zero
100106d4:	003faa06 	br	10010580 <__alt_data_end+0xf8010580>
100106d8:	0023883a 	mov	r17,zero
100106dc:	0025883a 	mov	r18,zero
100106e0:	01c00044 	movi	r7,1
100106e4:	003f7806 	br	100104c8 <__alt_data_end+0xf80104c8>
100106e8:	01c000c4 	movi	r7,3
100106ec:	003f7606 	br	100104c8 <__alt_data_end+0xf80104c8>
100106f0:	05400104 	movi	r21,4
100106f4:	0021883a 	mov	r16,zero
100106f8:	002d883a 	mov	r22,zero
100106fc:	01400044 	movi	r5,1
10010700:	003f5f06 	br	10010480 <__alt_data_end+0xf8010480>
10010704:	05400304 	movi	r21,12
10010708:	014000c4 	movi	r5,3
1001070c:	003f5c06 	br	10010480 <__alt_data_end+0xf8010480>
10010710:	04000434 	movhi	r16,16
10010714:	0027883a 	mov	r19,zero
10010718:	843fffc4 	addi	r16,r16,-1
1001071c:	05bfffc4 	movi	r22,-1
10010720:	0081ffc4 	movi	r2,2047
10010724:	003f9606 	br	10010580 <__alt_data_end+0xf8010580>
10010728:	8023883a 	mov	r17,r16
1001072c:	b025883a 	mov	r18,r22
10010730:	280f883a 	mov	r7,r5
10010734:	003f8806 	br	10010558 <__alt_data_end+0xf8010558>
10010738:	8023883a 	mov	r17,r16
1001073c:	b025883a 	mov	r18,r22
10010740:	480d883a 	mov	r6,r9
10010744:	280f883a 	mov	r7,r5
10010748:	003f8306 	br	10010558 <__alt_data_end+0xf8010558>
1001074c:	b026d43a 	srli	r19,r22,16
10010750:	902ed43a 	srli	r23,r18,16
10010754:	b5bfffcc 	andi	r22,r22,65535
10010758:	94bfffcc 	andi	r18,r18,65535
1001075c:	b00b883a 	mov	r5,r22
10010760:	9009883a 	mov	r4,r18
10010764:	d8c00515 	stw	r3,20(sp)
10010768:	d9800715 	stw	r6,28(sp)
1001076c:	da000615 	stw	r8,24(sp)
10010770:	0000fd00 	call	10000fd0 <__mulsi3>
10010774:	980b883a 	mov	r5,r19
10010778:	9009883a 	mov	r4,r18
1001077c:	1029883a 	mov	r20,r2
10010780:	0000fd00 	call	10000fd0 <__mulsi3>
10010784:	b80b883a 	mov	r5,r23
10010788:	9809883a 	mov	r4,r19
1001078c:	102b883a 	mov	r21,r2
10010790:	0000fd00 	call	10000fd0 <__mulsi3>
10010794:	b809883a 	mov	r4,r23
10010798:	b00b883a 	mov	r5,r22
1001079c:	1039883a 	mov	fp,r2
100107a0:	0000fd00 	call	10000fd0 <__mulsi3>
100107a4:	a008d43a 	srli	r4,r20,16
100107a8:	1545883a 	add	r2,r2,r21
100107ac:	d8c00517 	ldw	r3,20(sp)
100107b0:	2085883a 	add	r2,r4,r2
100107b4:	d9800717 	ldw	r6,28(sp)
100107b8:	da000617 	ldw	r8,24(sp)
100107bc:	1540022e 	bgeu	r2,r21,100107c8 <__muldf3+0x3c4>
100107c0:	01000074 	movhi	r4,1
100107c4:	e139883a 	add	fp,fp,r4
100107c8:	100e943a 	slli	r7,r2,16
100107cc:	1004d43a 	srli	r2,r2,16
100107d0:	882ad43a 	srli	r21,r17,16
100107d4:	a53fffcc 	andi	r20,r20,65535
100107d8:	8c7fffcc 	andi	r17,r17,65535
100107dc:	3d29883a 	add	r20,r7,r20
100107e0:	b00b883a 	mov	r5,r22
100107e4:	8809883a 	mov	r4,r17
100107e8:	d8c00515 	stw	r3,20(sp)
100107ec:	d9800715 	stw	r6,28(sp)
100107f0:	da000615 	stw	r8,24(sp)
100107f4:	dd000115 	stw	r20,4(sp)
100107f8:	d8800015 	stw	r2,0(sp)
100107fc:	0000fd00 	call	10000fd0 <__mulsi3>
10010800:	980b883a 	mov	r5,r19
10010804:	8809883a 	mov	r4,r17
10010808:	d8800215 	stw	r2,8(sp)
1001080c:	0000fd00 	call	10000fd0 <__mulsi3>
10010810:	9809883a 	mov	r4,r19
10010814:	a80b883a 	mov	r5,r21
10010818:	1029883a 	mov	r20,r2
1001081c:	0000fd00 	call	10000fd0 <__mulsi3>
10010820:	b00b883a 	mov	r5,r22
10010824:	a809883a 	mov	r4,r21
10010828:	d8800415 	stw	r2,16(sp)
1001082c:	0000fd00 	call	10000fd0 <__mulsi3>
10010830:	d9c00217 	ldw	r7,8(sp)
10010834:	1505883a 	add	r2,r2,r20
10010838:	d8c00517 	ldw	r3,20(sp)
1001083c:	3826d43a 	srli	r19,r7,16
10010840:	d9800717 	ldw	r6,28(sp)
10010844:	da000617 	ldw	r8,24(sp)
10010848:	9885883a 	add	r2,r19,r2
1001084c:	da400417 	ldw	r9,16(sp)
10010850:	1500022e 	bgeu	r2,r20,1001085c <__muldf3+0x458>
10010854:	01000074 	movhi	r4,1
10010858:	4913883a 	add	r9,r9,r4
1001085c:	1028d43a 	srli	r20,r2,16
10010860:	1004943a 	slli	r2,r2,16
10010864:	802cd43a 	srli	r22,r16,16
10010868:	843fffcc 	andi	r16,r16,65535
1001086c:	3cffffcc 	andi	r19,r7,65535
10010870:	9009883a 	mov	r4,r18
10010874:	800b883a 	mov	r5,r16
10010878:	a269883a 	add	r20,r20,r9
1001087c:	d8c00515 	stw	r3,20(sp)
10010880:	d9800715 	stw	r6,28(sp)
10010884:	da000615 	stw	r8,24(sp)
10010888:	14e7883a 	add	r19,r2,r19
1001088c:	0000fd00 	call	10000fd0 <__mulsi3>
10010890:	9009883a 	mov	r4,r18
10010894:	b00b883a 	mov	r5,r22
10010898:	d8800315 	stw	r2,12(sp)
1001089c:	0000fd00 	call	10000fd0 <__mulsi3>
100108a0:	b809883a 	mov	r4,r23
100108a4:	b00b883a 	mov	r5,r22
100108a8:	d8800215 	stw	r2,8(sp)
100108ac:	0000fd00 	call	10000fd0 <__mulsi3>
100108b0:	b80b883a 	mov	r5,r23
100108b4:	8009883a 	mov	r4,r16
100108b8:	d8800415 	stw	r2,16(sp)
100108bc:	0000fd00 	call	10000fd0 <__mulsi3>
100108c0:	da800317 	ldw	r10,12(sp)
100108c4:	d9c00217 	ldw	r7,8(sp)
100108c8:	d9000017 	ldw	r4,0(sp)
100108cc:	502ed43a 	srli	r23,r10,16
100108d0:	11c5883a 	add	r2,r2,r7
100108d4:	24e5883a 	add	r18,r4,r19
100108d8:	b885883a 	add	r2,r23,r2
100108dc:	d8c00517 	ldw	r3,20(sp)
100108e0:	d9800717 	ldw	r6,28(sp)
100108e4:	da000617 	ldw	r8,24(sp)
100108e8:	da400417 	ldw	r9,16(sp)
100108ec:	11c0022e 	bgeu	r2,r7,100108f8 <__muldf3+0x4f4>
100108f0:	01000074 	movhi	r4,1
100108f4:	4913883a 	add	r9,r9,r4
100108f8:	100ed43a 	srli	r7,r2,16
100108fc:	1004943a 	slli	r2,r2,16
10010900:	55ffffcc 	andi	r23,r10,65535
10010904:	3a53883a 	add	r9,r7,r9
10010908:	8809883a 	mov	r4,r17
1001090c:	800b883a 	mov	r5,r16
10010910:	d8c00515 	stw	r3,20(sp)
10010914:	d9800715 	stw	r6,28(sp)
10010918:	da000615 	stw	r8,24(sp)
1001091c:	da400415 	stw	r9,16(sp)
10010920:	15ef883a 	add	r23,r2,r23
10010924:	0000fd00 	call	10000fd0 <__mulsi3>
10010928:	8809883a 	mov	r4,r17
1001092c:	b00b883a 	mov	r5,r22
10010930:	d8800215 	stw	r2,8(sp)
10010934:	0000fd00 	call	10000fd0 <__mulsi3>
10010938:	b00b883a 	mov	r5,r22
1001093c:	a809883a 	mov	r4,r21
10010940:	d8800315 	stw	r2,12(sp)
10010944:	0000fd00 	call	10000fd0 <__mulsi3>
10010948:	8009883a 	mov	r4,r16
1001094c:	a80b883a 	mov	r5,r21
10010950:	1023883a 	mov	r17,r2
10010954:	0000fd00 	call	10000fd0 <__mulsi3>
10010958:	d9c00217 	ldw	r7,8(sp)
1001095c:	da800317 	ldw	r10,12(sp)
10010960:	d8c00517 	ldw	r3,20(sp)
10010964:	3808d43a 	srli	r4,r7,16
10010968:	1285883a 	add	r2,r2,r10
1001096c:	d9800717 	ldw	r6,28(sp)
10010970:	2085883a 	add	r2,r4,r2
10010974:	da000617 	ldw	r8,24(sp)
10010978:	da400417 	ldw	r9,16(sp)
1001097c:	1280022e 	bgeu	r2,r10,10010988 <__muldf3+0x584>
10010980:	01000074 	movhi	r4,1
10010984:	8923883a 	add	r17,r17,r4
10010988:	1008943a 	slli	r4,r2,16
1001098c:	39ffffcc 	andi	r7,r7,65535
10010990:	e4b9883a 	add	fp,fp,r18
10010994:	21cf883a 	add	r7,r4,r7
10010998:	e4e7803a 	cmpltu	r19,fp,r19
1001099c:	3d0f883a 	add	r7,r7,r20
100109a0:	bf39883a 	add	fp,r23,fp
100109a4:	99c9883a 	add	r4,r19,r7
100109a8:	e5ef803a 	cmpltu	r23,fp,r23
100109ac:	490b883a 	add	r5,r9,r4
100109b0:	1004d43a 	srli	r2,r2,16
100109b4:	b965883a 	add	r18,r23,r5
100109b8:	24c9803a 	cmpltu	r4,r4,r19
100109bc:	3d29803a 	cmpltu	r20,r7,r20
100109c0:	a128b03a 	or	r20,r20,r4
100109c4:	95ef803a 	cmpltu	r23,r18,r23
100109c8:	2a53803a 	cmpltu	r9,r5,r9
100109cc:	a0a9883a 	add	r20,r20,r2
100109d0:	4deeb03a 	or	r23,r9,r23
100109d4:	a5ef883a 	add	r23,r20,r23
100109d8:	bc63883a 	add	r17,r23,r17
100109dc:	e004927a 	slli	r2,fp,9
100109e0:	d9000117 	ldw	r4,4(sp)
100109e4:	882e927a 	slli	r23,r17,9
100109e8:	9022d5fa 	srli	r17,r18,23
100109ec:	e038d5fa 	srli	fp,fp,23
100109f0:	1104b03a 	or	r2,r2,r4
100109f4:	9024927a 	slli	r18,r18,9
100109f8:	1004c03a 	cmpne	r2,r2,zero
100109fc:	bc62b03a 	or	r17,r23,r17
10010a00:	1738b03a 	or	fp,r2,fp
10010a04:	8880402c 	andhi	r2,r17,256
10010a08:	e4a4b03a 	or	r18,fp,r18
10010a0c:	10000726 	beq	r2,zero,10010a2c <__muldf3+0x628>
10010a10:	9006d07a 	srli	r3,r18,1
10010a14:	880497fa 	slli	r2,r17,31
10010a18:	9480004c 	andi	r18,r18,1
10010a1c:	8822d07a 	srli	r17,r17,1
10010a20:	1ca4b03a 	or	r18,r3,r18
10010a24:	14a4b03a 	or	r18,r2,r18
10010a28:	4007883a 	mov	r3,r8
10010a2c:	1880ffc4 	addi	r2,r3,1023
10010a30:	0080460e 	bge	zero,r2,10010b4c <__muldf3+0x748>
10010a34:	910001cc 	andi	r4,r18,7
10010a38:	20000726 	beq	r4,zero,10010a58 <__muldf3+0x654>
10010a3c:	910003cc 	andi	r4,r18,15
10010a40:	01400104 	movi	r5,4
10010a44:	21400426 	beq	r4,r5,10010a58 <__muldf3+0x654>
10010a48:	9149883a 	add	r4,r18,r5
10010a4c:	24a5803a 	cmpltu	r18,r4,r18
10010a50:	8ca3883a 	add	r17,r17,r18
10010a54:	2025883a 	mov	r18,r4
10010a58:	8900402c 	andhi	r4,r17,256
10010a5c:	20000426 	beq	r4,zero,10010a70 <__muldf3+0x66c>
10010a60:	18810004 	addi	r2,r3,1024
10010a64:	00ffc034 	movhi	r3,65280
10010a68:	18ffffc4 	addi	r3,r3,-1
10010a6c:	88e2703a 	and	r17,r17,r3
10010a70:	00c1ff84 	movi	r3,2046
10010a74:	18bf1316 	blt	r3,r2,100106c4 <__alt_data_end+0xf80106c4>
10010a78:	882c977a 	slli	r22,r17,29
10010a7c:	9024d0fa 	srli	r18,r18,3
10010a80:	8822927a 	slli	r17,r17,9
10010a84:	1081ffcc 	andi	r2,r2,2047
10010a88:	b4acb03a 	or	r22,r22,r18
10010a8c:	8820d33a 	srli	r16,r17,12
10010a90:	3027883a 	mov	r19,r6
10010a94:	003eba06 	br	10010580 <__alt_data_end+0xf8010580>
10010a98:	8080022c 	andhi	r2,r16,8
10010a9c:	10000926 	beq	r2,zero,10010ac4 <__muldf3+0x6c0>
10010aa0:	8880022c 	andhi	r2,r17,8
10010aa4:	1000071e 	bne	r2,zero,10010ac4 <__muldf3+0x6c0>
10010aa8:	00800434 	movhi	r2,16
10010aac:	8c000234 	orhi	r16,r17,8
10010ab0:	10bfffc4 	addi	r2,r2,-1
10010ab4:	e027883a 	mov	r19,fp
10010ab8:	80a0703a 	and	r16,r16,r2
10010abc:	902d883a 	mov	r22,r18
10010ac0:	003f1706 	br	10010720 <__alt_data_end+0xf8010720>
10010ac4:	00800434 	movhi	r2,16
10010ac8:	84000234 	orhi	r16,r16,8
10010acc:	10bfffc4 	addi	r2,r2,-1
10010ad0:	80a0703a 	and	r16,r16,r2
10010ad4:	003f1206 	br	10010720 <__alt_data_end+0xf8010720>
10010ad8:	147ff604 	addi	r17,r2,-40
10010adc:	3462983a 	sll	r17,r6,r17
10010ae0:	0025883a 	mov	r18,zero
10010ae4:	003ef306 	br	100106b4 <__alt_data_end+0xf80106b4>
10010ae8:	3009883a 	mov	r4,r6
10010aec:	d9400215 	stw	r5,8(sp)
10010af0:	d9800715 	stw	r6,28(sp)
10010af4:	da400415 	stw	r9,16(sp)
10010af8:	da800315 	stw	r10,12(sp)
10010afc:	00117700 	call	10011770 <__clzsi2>
10010b00:	10800804 	addi	r2,r2,32
10010b04:	da800317 	ldw	r10,12(sp)
10010b08:	da400417 	ldw	r9,16(sp)
10010b0c:	d9800717 	ldw	r6,28(sp)
10010b10:	d9400217 	ldw	r5,8(sp)
10010b14:	003edd06 	br	1001068c <__alt_data_end+0xf801068c>
10010b18:	143ff604 	addi	r16,r2,-40
10010b1c:	ac20983a 	sll	r16,r21,r16
10010b20:	002d883a 	mov	r22,zero
10010b24:	003ec106 	br	1001062c <__alt_data_end+0xf801062c>
10010b28:	d9800715 	stw	r6,28(sp)
10010b2c:	d9c00215 	stw	r7,8(sp)
10010b30:	da400415 	stw	r9,16(sp)
10010b34:	00117700 	call	10011770 <__clzsi2>
10010b38:	10800804 	addi	r2,r2,32
10010b3c:	da400417 	ldw	r9,16(sp)
10010b40:	d9c00217 	ldw	r7,8(sp)
10010b44:	d9800717 	ldw	r6,28(sp)
10010b48:	003eae06 	br	10010604 <__alt_data_end+0xf8010604>
10010b4c:	00c00044 	movi	r3,1
10010b50:	1887c83a 	sub	r3,r3,r2
10010b54:	01000e04 	movi	r4,56
10010b58:	20fe8516 	blt	r4,r3,10010570 <__alt_data_end+0xf8010570>
10010b5c:	010007c4 	movi	r4,31
10010b60:	20c01b16 	blt	r4,r3,10010bd0 <__muldf3+0x7cc>
10010b64:	00800804 	movi	r2,32
10010b68:	10c5c83a 	sub	r2,r2,r3
10010b6c:	888a983a 	sll	r5,r17,r2
10010b70:	90c8d83a 	srl	r4,r18,r3
10010b74:	9084983a 	sll	r2,r18,r2
10010b78:	88e2d83a 	srl	r17,r17,r3
10010b7c:	2906b03a 	or	r3,r5,r4
10010b80:	1004c03a 	cmpne	r2,r2,zero
10010b84:	1886b03a 	or	r3,r3,r2
10010b88:	188001cc 	andi	r2,r3,7
10010b8c:	10000726 	beq	r2,zero,10010bac <__muldf3+0x7a8>
10010b90:	188003cc 	andi	r2,r3,15
10010b94:	01000104 	movi	r4,4
10010b98:	11000426 	beq	r2,r4,10010bac <__muldf3+0x7a8>
10010b9c:	1805883a 	mov	r2,r3
10010ba0:	10c00104 	addi	r3,r2,4
10010ba4:	1885803a 	cmpltu	r2,r3,r2
10010ba8:	88a3883a 	add	r17,r17,r2
10010bac:	8880202c 	andhi	r2,r17,128
10010bb0:	10001c26 	beq	r2,zero,10010c24 <__muldf3+0x820>
10010bb4:	3027883a 	mov	r19,r6
10010bb8:	00800044 	movi	r2,1
10010bbc:	0021883a 	mov	r16,zero
10010bc0:	002d883a 	mov	r22,zero
10010bc4:	003e6e06 	br	10010580 <__alt_data_end+0xf8010580>
10010bc8:	4007883a 	mov	r3,r8
10010bcc:	003f9706 	br	10010a2c <__alt_data_end+0xf8010a2c>
10010bd0:	017ff844 	movi	r5,-31
10010bd4:	2885c83a 	sub	r2,r5,r2
10010bd8:	888ad83a 	srl	r5,r17,r2
10010bdc:	00800804 	movi	r2,32
10010be0:	18801a26 	beq	r3,r2,10010c4c <__muldf3+0x848>
10010be4:	01001004 	movi	r4,64
10010be8:	20c7c83a 	sub	r3,r4,r3
10010bec:	88e2983a 	sll	r17,r17,r3
10010bf0:	8ca4b03a 	or	r18,r17,r18
10010bf4:	9004c03a 	cmpne	r2,r18,zero
10010bf8:	2884b03a 	or	r2,r5,r2
10010bfc:	144001cc 	andi	r17,r2,7
10010c00:	88000d1e 	bne	r17,zero,10010c38 <__muldf3+0x834>
10010c04:	0021883a 	mov	r16,zero
10010c08:	102cd0fa 	srli	r22,r2,3
10010c0c:	3027883a 	mov	r19,r6
10010c10:	0005883a 	mov	r2,zero
10010c14:	b46cb03a 	or	r22,r22,r17
10010c18:	003e5906 	br	10010580 <__alt_data_end+0xf8010580>
10010c1c:	1007883a 	mov	r3,r2
10010c20:	0023883a 	mov	r17,zero
10010c24:	8820927a 	slli	r16,r17,9
10010c28:	1805883a 	mov	r2,r3
10010c2c:	8822977a 	slli	r17,r17,29
10010c30:	8020d33a 	srli	r16,r16,12
10010c34:	003ff406 	br	10010c08 <__alt_data_end+0xf8010c08>
10010c38:	10c003cc 	andi	r3,r2,15
10010c3c:	01000104 	movi	r4,4
10010c40:	193ff626 	beq	r3,r4,10010c1c <__alt_data_end+0xf8010c1c>
10010c44:	0023883a 	mov	r17,zero
10010c48:	003fd506 	br	10010ba0 <__alt_data_end+0xf8010ba0>
10010c4c:	0023883a 	mov	r17,zero
10010c50:	003fe706 	br	10010bf0 <__alt_data_end+0xf8010bf0>
10010c54:	00800434 	movhi	r2,16
10010c58:	8c000234 	orhi	r16,r17,8
10010c5c:	10bfffc4 	addi	r2,r2,-1
10010c60:	3027883a 	mov	r19,r6
10010c64:	80a0703a 	and	r16,r16,r2
10010c68:	902d883a 	mov	r22,r18
10010c6c:	003eac06 	br	10010720 <__alt_data_end+0xf8010720>

10010c70 <__subdf3>:
10010c70:	02000434 	movhi	r8,16
10010c74:	423fffc4 	addi	r8,r8,-1
10010c78:	defffb04 	addi	sp,sp,-20
10010c7c:	2a14703a 	and	r10,r5,r8
10010c80:	3812d53a 	srli	r9,r7,20
10010c84:	3a10703a 	and	r8,r7,r8
10010c88:	2006d77a 	srli	r3,r4,29
10010c8c:	3004d77a 	srli	r2,r6,29
10010c90:	dc000015 	stw	r16,0(sp)
10010c94:	501490fa 	slli	r10,r10,3
10010c98:	2820d53a 	srli	r16,r5,20
10010c9c:	401090fa 	slli	r8,r8,3
10010ca0:	dc800215 	stw	r18,8(sp)
10010ca4:	dc400115 	stw	r17,4(sp)
10010ca8:	dfc00415 	stw	ra,16(sp)
10010cac:	202290fa 	slli	r17,r4,3
10010cb0:	dcc00315 	stw	r19,12(sp)
10010cb4:	4a41ffcc 	andi	r9,r9,2047
10010cb8:	0101ffc4 	movi	r4,2047
10010cbc:	2824d7fa 	srli	r18,r5,31
10010cc0:	8401ffcc 	andi	r16,r16,2047
10010cc4:	50c6b03a 	or	r3,r10,r3
10010cc8:	380ed7fa 	srli	r7,r7,31
10010ccc:	408ab03a 	or	r5,r8,r2
10010cd0:	300c90fa 	slli	r6,r6,3
10010cd4:	49009626 	beq	r9,r4,10010f30 <__subdf3+0x2c0>
10010cd8:	39c0005c 	xori	r7,r7,1
10010cdc:	8245c83a 	sub	r2,r16,r9
10010ce0:	3c807426 	beq	r7,r18,10010eb4 <__subdf3+0x244>
10010ce4:	0080af0e 	bge	zero,r2,10010fa4 <__subdf3+0x334>
10010ce8:	48002a1e 	bne	r9,zero,10010d94 <__subdf3+0x124>
10010cec:	2988b03a 	or	r4,r5,r6
10010cf0:	20009a1e 	bne	r4,zero,10010f5c <__subdf3+0x2ec>
10010cf4:	888001cc 	andi	r2,r17,7
10010cf8:	10000726 	beq	r2,zero,10010d18 <__subdf3+0xa8>
10010cfc:	888003cc 	andi	r2,r17,15
10010d00:	01000104 	movi	r4,4
10010d04:	11000426 	beq	r2,r4,10010d18 <__subdf3+0xa8>
10010d08:	890b883a 	add	r5,r17,r4
10010d0c:	2c63803a 	cmpltu	r17,r5,r17
10010d10:	1c47883a 	add	r3,r3,r17
10010d14:	2823883a 	mov	r17,r5
10010d18:	1880202c 	andhi	r2,r3,128
10010d1c:	10005926 	beq	r2,zero,10010e84 <__subdf3+0x214>
10010d20:	84000044 	addi	r16,r16,1
10010d24:	0081ffc4 	movi	r2,2047
10010d28:	8080be26 	beq	r16,r2,10011024 <__subdf3+0x3b4>
10010d2c:	017fe034 	movhi	r5,65408
10010d30:	297fffc4 	addi	r5,r5,-1
10010d34:	1946703a 	and	r3,r3,r5
10010d38:	1804977a 	slli	r2,r3,29
10010d3c:	1806927a 	slli	r3,r3,9
10010d40:	8822d0fa 	srli	r17,r17,3
10010d44:	8401ffcc 	andi	r16,r16,2047
10010d48:	180ad33a 	srli	r5,r3,12
10010d4c:	9100004c 	andi	r4,r18,1
10010d50:	1444b03a 	or	r2,r2,r17
10010d54:	80c1ffcc 	andi	r3,r16,2047
10010d58:	1820953a 	slli	r16,r3,20
10010d5c:	20c03fcc 	andi	r3,r4,255
10010d60:	180897fa 	slli	r4,r3,31
10010d64:	00c00434 	movhi	r3,16
10010d68:	18ffffc4 	addi	r3,r3,-1
10010d6c:	28c6703a 	and	r3,r5,r3
10010d70:	1c06b03a 	or	r3,r3,r16
10010d74:	1906b03a 	or	r3,r3,r4
10010d78:	dfc00417 	ldw	ra,16(sp)
10010d7c:	dcc00317 	ldw	r19,12(sp)
10010d80:	dc800217 	ldw	r18,8(sp)
10010d84:	dc400117 	ldw	r17,4(sp)
10010d88:	dc000017 	ldw	r16,0(sp)
10010d8c:	dec00504 	addi	sp,sp,20
10010d90:	f800283a 	ret
10010d94:	0101ffc4 	movi	r4,2047
10010d98:	813fd626 	beq	r16,r4,10010cf4 <__alt_data_end+0xf8010cf4>
10010d9c:	29402034 	orhi	r5,r5,128
10010da0:	01000e04 	movi	r4,56
10010da4:	2080a316 	blt	r4,r2,10011034 <__subdf3+0x3c4>
10010da8:	010007c4 	movi	r4,31
10010dac:	2080c616 	blt	r4,r2,100110c8 <__subdf3+0x458>
10010db0:	01000804 	movi	r4,32
10010db4:	2089c83a 	sub	r4,r4,r2
10010db8:	2910983a 	sll	r8,r5,r4
10010dbc:	308ed83a 	srl	r7,r6,r2
10010dc0:	3108983a 	sll	r4,r6,r4
10010dc4:	2884d83a 	srl	r2,r5,r2
10010dc8:	41ccb03a 	or	r6,r8,r7
10010dcc:	2008c03a 	cmpne	r4,r4,zero
10010dd0:	310cb03a 	or	r6,r6,r4
10010dd4:	898dc83a 	sub	r6,r17,r6
10010dd8:	89a3803a 	cmpltu	r17,r17,r6
10010ddc:	1887c83a 	sub	r3,r3,r2
10010de0:	1c47c83a 	sub	r3,r3,r17
10010de4:	3023883a 	mov	r17,r6
10010de8:	1880202c 	andhi	r2,r3,128
10010dec:	10002326 	beq	r2,zero,10010e7c <__subdf3+0x20c>
10010df0:	04c02034 	movhi	r19,128
10010df4:	9cffffc4 	addi	r19,r19,-1
10010df8:	1ce6703a 	and	r19,r3,r19
10010dfc:	98007a26 	beq	r19,zero,10010fe8 <__subdf3+0x378>
10010e00:	9809883a 	mov	r4,r19
10010e04:	00117700 	call	10011770 <__clzsi2>
10010e08:	113ffe04 	addi	r4,r2,-8
10010e0c:	00c007c4 	movi	r3,31
10010e10:	19007b16 	blt	r3,r4,10011000 <__subdf3+0x390>
10010e14:	00800804 	movi	r2,32
10010e18:	1105c83a 	sub	r2,r2,r4
10010e1c:	8884d83a 	srl	r2,r17,r2
10010e20:	9906983a 	sll	r3,r19,r4
10010e24:	8922983a 	sll	r17,r17,r4
10010e28:	10c4b03a 	or	r2,r2,r3
10010e2c:	24007816 	blt	r4,r16,10011010 <__subdf3+0x3a0>
10010e30:	2421c83a 	sub	r16,r4,r16
10010e34:	80c00044 	addi	r3,r16,1
10010e38:	010007c4 	movi	r4,31
10010e3c:	20c09516 	blt	r4,r3,10011094 <__subdf3+0x424>
10010e40:	01400804 	movi	r5,32
10010e44:	28cbc83a 	sub	r5,r5,r3
10010e48:	88c8d83a 	srl	r4,r17,r3
10010e4c:	8962983a 	sll	r17,r17,r5
10010e50:	114a983a 	sll	r5,r2,r5
10010e54:	10c6d83a 	srl	r3,r2,r3
10010e58:	8804c03a 	cmpne	r2,r17,zero
10010e5c:	290ab03a 	or	r5,r5,r4
10010e60:	28a2b03a 	or	r17,r5,r2
10010e64:	0021883a 	mov	r16,zero
10010e68:	003fa206 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10010e6c:	2090b03a 	or	r8,r4,r2
10010e70:	40018e26 	beq	r8,zero,100114ac <__subdf3+0x83c>
10010e74:	1007883a 	mov	r3,r2
10010e78:	2023883a 	mov	r17,r4
10010e7c:	888001cc 	andi	r2,r17,7
10010e80:	103f9e1e 	bne	r2,zero,10010cfc <__alt_data_end+0xf8010cfc>
10010e84:	1804977a 	slli	r2,r3,29
10010e88:	8822d0fa 	srli	r17,r17,3
10010e8c:	1810d0fa 	srli	r8,r3,3
10010e90:	9100004c 	andi	r4,r18,1
10010e94:	1444b03a 	or	r2,r2,r17
10010e98:	00c1ffc4 	movi	r3,2047
10010e9c:	80c02826 	beq	r16,r3,10010f40 <__subdf3+0x2d0>
10010ea0:	01400434 	movhi	r5,16
10010ea4:	297fffc4 	addi	r5,r5,-1
10010ea8:	80e0703a 	and	r16,r16,r3
10010eac:	414a703a 	and	r5,r8,r5
10010eb0:	003fa806 	br	10010d54 <__alt_data_end+0xf8010d54>
10010eb4:	0080630e 	bge	zero,r2,10011044 <__subdf3+0x3d4>
10010eb8:	48003026 	beq	r9,zero,10010f7c <__subdf3+0x30c>
10010ebc:	0101ffc4 	movi	r4,2047
10010ec0:	813f8c26 	beq	r16,r4,10010cf4 <__alt_data_end+0xf8010cf4>
10010ec4:	29402034 	orhi	r5,r5,128
10010ec8:	01000e04 	movi	r4,56
10010ecc:	2080a90e 	bge	r4,r2,10011174 <__subdf3+0x504>
10010ed0:	298cb03a 	or	r6,r5,r6
10010ed4:	3012c03a 	cmpne	r9,r6,zero
10010ed8:	0005883a 	mov	r2,zero
10010edc:	4c53883a 	add	r9,r9,r17
10010ee0:	4c63803a 	cmpltu	r17,r9,r17
10010ee4:	10c7883a 	add	r3,r2,r3
10010ee8:	88c7883a 	add	r3,r17,r3
10010eec:	4823883a 	mov	r17,r9
10010ef0:	1880202c 	andhi	r2,r3,128
10010ef4:	1000d026 	beq	r2,zero,10011238 <__subdf3+0x5c8>
10010ef8:	84000044 	addi	r16,r16,1
10010efc:	0081ffc4 	movi	r2,2047
10010f00:	8080fe26 	beq	r16,r2,100112fc <__subdf3+0x68c>
10010f04:	00bfe034 	movhi	r2,65408
10010f08:	10bfffc4 	addi	r2,r2,-1
10010f0c:	1886703a 	and	r3,r3,r2
10010f10:	880ad07a 	srli	r5,r17,1
10010f14:	180497fa 	slli	r2,r3,31
10010f18:	8900004c 	andi	r4,r17,1
10010f1c:	2922b03a 	or	r17,r5,r4
10010f20:	1806d07a 	srli	r3,r3,1
10010f24:	1462b03a 	or	r17,r2,r17
10010f28:	3825883a 	mov	r18,r7
10010f2c:	003f7106 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10010f30:	2984b03a 	or	r2,r5,r6
10010f34:	103f6826 	beq	r2,zero,10010cd8 <__alt_data_end+0xf8010cd8>
10010f38:	39c03fcc 	andi	r7,r7,255
10010f3c:	003f6706 	br	10010cdc <__alt_data_end+0xf8010cdc>
10010f40:	4086b03a 	or	r3,r8,r2
10010f44:	18015226 	beq	r3,zero,10011490 <__subdf3+0x820>
10010f48:	00c00434 	movhi	r3,16
10010f4c:	41400234 	orhi	r5,r8,8
10010f50:	18ffffc4 	addi	r3,r3,-1
10010f54:	28ca703a 	and	r5,r5,r3
10010f58:	003f7e06 	br	10010d54 <__alt_data_end+0xf8010d54>
10010f5c:	10bfffc4 	addi	r2,r2,-1
10010f60:	1000491e 	bne	r2,zero,10011088 <__subdf3+0x418>
10010f64:	898fc83a 	sub	r7,r17,r6
10010f68:	89e3803a 	cmpltu	r17,r17,r7
10010f6c:	1947c83a 	sub	r3,r3,r5
10010f70:	1c47c83a 	sub	r3,r3,r17
10010f74:	3823883a 	mov	r17,r7
10010f78:	003f9b06 	br	10010de8 <__alt_data_end+0xf8010de8>
10010f7c:	2988b03a 	or	r4,r5,r6
10010f80:	203f5c26 	beq	r4,zero,10010cf4 <__alt_data_end+0xf8010cf4>
10010f84:	10bfffc4 	addi	r2,r2,-1
10010f88:	1000931e 	bne	r2,zero,100111d8 <__subdf3+0x568>
10010f8c:	898d883a 	add	r6,r17,r6
10010f90:	3463803a 	cmpltu	r17,r6,r17
10010f94:	1947883a 	add	r3,r3,r5
10010f98:	88c7883a 	add	r3,r17,r3
10010f9c:	3023883a 	mov	r17,r6
10010fa0:	003fd306 	br	10010ef0 <__alt_data_end+0xf8010ef0>
10010fa4:	1000541e 	bne	r2,zero,100110f8 <__subdf3+0x488>
10010fa8:	80800044 	addi	r2,r16,1
10010fac:	1081ffcc 	andi	r2,r2,2047
10010fb0:	01000044 	movi	r4,1
10010fb4:	2080a20e 	bge	r4,r2,10011240 <__subdf3+0x5d0>
10010fb8:	8989c83a 	sub	r4,r17,r6
10010fbc:	8905803a 	cmpltu	r2,r17,r4
10010fc0:	1967c83a 	sub	r19,r3,r5
10010fc4:	98a7c83a 	sub	r19,r19,r2
10010fc8:	9880202c 	andhi	r2,r19,128
10010fcc:	10006326 	beq	r2,zero,1001115c <__subdf3+0x4ec>
10010fd0:	3463c83a 	sub	r17,r6,r17
10010fd4:	28c7c83a 	sub	r3,r5,r3
10010fd8:	344d803a 	cmpltu	r6,r6,r17
10010fdc:	19a7c83a 	sub	r19,r3,r6
10010fe0:	3825883a 	mov	r18,r7
10010fe4:	983f861e 	bne	r19,zero,10010e00 <__alt_data_end+0xf8010e00>
10010fe8:	8809883a 	mov	r4,r17
10010fec:	00117700 	call	10011770 <__clzsi2>
10010ff0:	10800804 	addi	r2,r2,32
10010ff4:	113ffe04 	addi	r4,r2,-8
10010ff8:	00c007c4 	movi	r3,31
10010ffc:	193f850e 	bge	r3,r4,10010e14 <__alt_data_end+0xf8010e14>
10011000:	10bff604 	addi	r2,r2,-40
10011004:	8884983a 	sll	r2,r17,r2
10011008:	0023883a 	mov	r17,zero
1001100c:	243f880e 	bge	r4,r16,10010e30 <__alt_data_end+0xf8010e30>
10011010:	00ffe034 	movhi	r3,65408
10011014:	18ffffc4 	addi	r3,r3,-1
10011018:	8121c83a 	sub	r16,r16,r4
1001101c:	10c6703a 	and	r3,r2,r3
10011020:	003f3406 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011024:	9100004c 	andi	r4,r18,1
10011028:	000b883a 	mov	r5,zero
1001102c:	0005883a 	mov	r2,zero
10011030:	003f4806 	br	10010d54 <__alt_data_end+0xf8010d54>
10011034:	298cb03a 	or	r6,r5,r6
10011038:	300cc03a 	cmpne	r6,r6,zero
1001103c:	0005883a 	mov	r2,zero
10011040:	003f6406 	br	10010dd4 <__alt_data_end+0xf8010dd4>
10011044:	10009a1e 	bne	r2,zero,100112b0 <__subdf3+0x640>
10011048:	82400044 	addi	r9,r16,1
1001104c:	4881ffcc 	andi	r2,r9,2047
10011050:	02800044 	movi	r10,1
10011054:	5080670e 	bge	r10,r2,100111f4 <__subdf3+0x584>
10011058:	0081ffc4 	movi	r2,2047
1001105c:	4880af26 	beq	r9,r2,1001131c <__subdf3+0x6ac>
10011060:	898d883a 	add	r6,r17,r6
10011064:	1945883a 	add	r2,r3,r5
10011068:	3447803a 	cmpltu	r3,r6,r17
1001106c:	1887883a 	add	r3,r3,r2
10011070:	182297fa 	slli	r17,r3,31
10011074:	300cd07a 	srli	r6,r6,1
10011078:	1806d07a 	srli	r3,r3,1
1001107c:	4821883a 	mov	r16,r9
10011080:	89a2b03a 	or	r17,r17,r6
10011084:	003f1b06 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011088:	0101ffc4 	movi	r4,2047
1001108c:	813f441e 	bne	r16,r4,10010da0 <__alt_data_end+0xf8010da0>
10011090:	003f1806 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011094:	843ff844 	addi	r16,r16,-31
10011098:	01400804 	movi	r5,32
1001109c:	1408d83a 	srl	r4,r2,r16
100110a0:	19405026 	beq	r3,r5,100111e4 <__subdf3+0x574>
100110a4:	01401004 	movi	r5,64
100110a8:	28c7c83a 	sub	r3,r5,r3
100110ac:	10c4983a 	sll	r2,r2,r3
100110b0:	88a2b03a 	or	r17,r17,r2
100110b4:	8822c03a 	cmpne	r17,r17,zero
100110b8:	2462b03a 	or	r17,r4,r17
100110bc:	0007883a 	mov	r3,zero
100110c0:	0021883a 	mov	r16,zero
100110c4:	003f6d06 	br	10010e7c <__alt_data_end+0xf8010e7c>
100110c8:	11fff804 	addi	r7,r2,-32
100110cc:	01000804 	movi	r4,32
100110d0:	29ced83a 	srl	r7,r5,r7
100110d4:	11004526 	beq	r2,r4,100111ec <__subdf3+0x57c>
100110d8:	01001004 	movi	r4,64
100110dc:	2089c83a 	sub	r4,r4,r2
100110e0:	2904983a 	sll	r2,r5,r4
100110e4:	118cb03a 	or	r6,r2,r6
100110e8:	300cc03a 	cmpne	r6,r6,zero
100110ec:	398cb03a 	or	r6,r7,r6
100110f0:	0005883a 	mov	r2,zero
100110f4:	003f3706 	br	10010dd4 <__alt_data_end+0xf8010dd4>
100110f8:	80002a26 	beq	r16,zero,100111a4 <__subdf3+0x534>
100110fc:	0101ffc4 	movi	r4,2047
10011100:	49006626 	beq	r9,r4,1001129c <__subdf3+0x62c>
10011104:	0085c83a 	sub	r2,zero,r2
10011108:	18c02034 	orhi	r3,r3,128
1001110c:	01000e04 	movi	r4,56
10011110:	20807e16 	blt	r4,r2,1001130c <__subdf3+0x69c>
10011114:	010007c4 	movi	r4,31
10011118:	2080e716 	blt	r4,r2,100114b8 <__subdf3+0x848>
1001111c:	01000804 	movi	r4,32
10011120:	2089c83a 	sub	r4,r4,r2
10011124:	1914983a 	sll	r10,r3,r4
10011128:	8890d83a 	srl	r8,r17,r2
1001112c:	8908983a 	sll	r4,r17,r4
10011130:	1884d83a 	srl	r2,r3,r2
10011134:	5222b03a 	or	r17,r10,r8
10011138:	2006c03a 	cmpne	r3,r4,zero
1001113c:	88e2b03a 	or	r17,r17,r3
10011140:	3463c83a 	sub	r17,r6,r17
10011144:	2885c83a 	sub	r2,r5,r2
10011148:	344d803a 	cmpltu	r6,r6,r17
1001114c:	1187c83a 	sub	r3,r2,r6
10011150:	4821883a 	mov	r16,r9
10011154:	3825883a 	mov	r18,r7
10011158:	003f2306 	br	10010de8 <__alt_data_end+0xf8010de8>
1001115c:	24d0b03a 	or	r8,r4,r19
10011160:	40001b1e 	bne	r8,zero,100111d0 <__subdf3+0x560>
10011164:	0005883a 	mov	r2,zero
10011168:	0009883a 	mov	r4,zero
1001116c:	0021883a 	mov	r16,zero
10011170:	003f4906 	br	10010e98 <__alt_data_end+0xf8010e98>
10011174:	010007c4 	movi	r4,31
10011178:	20803a16 	blt	r4,r2,10011264 <__subdf3+0x5f4>
1001117c:	01000804 	movi	r4,32
10011180:	2089c83a 	sub	r4,r4,r2
10011184:	2912983a 	sll	r9,r5,r4
10011188:	3090d83a 	srl	r8,r6,r2
1001118c:	3108983a 	sll	r4,r6,r4
10011190:	2884d83a 	srl	r2,r5,r2
10011194:	4a12b03a 	or	r9,r9,r8
10011198:	2008c03a 	cmpne	r4,r4,zero
1001119c:	4912b03a 	or	r9,r9,r4
100111a0:	003f4e06 	br	10010edc <__alt_data_end+0xf8010edc>
100111a4:	1c48b03a 	or	r4,r3,r17
100111a8:	20003c26 	beq	r4,zero,1001129c <__subdf3+0x62c>
100111ac:	0084303a 	nor	r2,zero,r2
100111b0:	1000381e 	bne	r2,zero,10011294 <__subdf3+0x624>
100111b4:	3463c83a 	sub	r17,r6,r17
100111b8:	28c5c83a 	sub	r2,r5,r3
100111bc:	344d803a 	cmpltu	r6,r6,r17
100111c0:	1187c83a 	sub	r3,r2,r6
100111c4:	4821883a 	mov	r16,r9
100111c8:	3825883a 	mov	r18,r7
100111cc:	003f0606 	br	10010de8 <__alt_data_end+0xf8010de8>
100111d0:	2023883a 	mov	r17,r4
100111d4:	003f0906 	br	10010dfc <__alt_data_end+0xf8010dfc>
100111d8:	0101ffc4 	movi	r4,2047
100111dc:	813f3a1e 	bne	r16,r4,10010ec8 <__alt_data_end+0xf8010ec8>
100111e0:	003ec406 	br	10010cf4 <__alt_data_end+0xf8010cf4>
100111e4:	0005883a 	mov	r2,zero
100111e8:	003fb106 	br	100110b0 <__alt_data_end+0xf80110b0>
100111ec:	0005883a 	mov	r2,zero
100111f0:	003fbc06 	br	100110e4 <__alt_data_end+0xf80110e4>
100111f4:	1c44b03a 	or	r2,r3,r17
100111f8:	80008e1e 	bne	r16,zero,10011434 <__subdf3+0x7c4>
100111fc:	1000c826 	beq	r2,zero,10011520 <__subdf3+0x8b0>
10011200:	2984b03a 	or	r2,r5,r6
10011204:	103ebb26 	beq	r2,zero,10010cf4 <__alt_data_end+0xf8010cf4>
10011208:	8989883a 	add	r4,r17,r6
1001120c:	1945883a 	add	r2,r3,r5
10011210:	2447803a 	cmpltu	r3,r4,r17
10011214:	1887883a 	add	r3,r3,r2
10011218:	1880202c 	andhi	r2,r3,128
1001121c:	2023883a 	mov	r17,r4
10011220:	103f1626 	beq	r2,zero,10010e7c <__alt_data_end+0xf8010e7c>
10011224:	00bfe034 	movhi	r2,65408
10011228:	10bfffc4 	addi	r2,r2,-1
1001122c:	5021883a 	mov	r16,r10
10011230:	1886703a 	and	r3,r3,r2
10011234:	003eaf06 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011238:	3825883a 	mov	r18,r7
1001123c:	003f0f06 	br	10010e7c <__alt_data_end+0xf8010e7c>
10011240:	1c44b03a 	or	r2,r3,r17
10011244:	8000251e 	bne	r16,zero,100112dc <__subdf3+0x66c>
10011248:	1000661e 	bne	r2,zero,100113e4 <__subdf3+0x774>
1001124c:	2990b03a 	or	r8,r5,r6
10011250:	40009626 	beq	r8,zero,100114ac <__subdf3+0x83c>
10011254:	2807883a 	mov	r3,r5
10011258:	3023883a 	mov	r17,r6
1001125c:	3825883a 	mov	r18,r7
10011260:	003ea406 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011264:	127ff804 	addi	r9,r2,-32
10011268:	01000804 	movi	r4,32
1001126c:	2a52d83a 	srl	r9,r5,r9
10011270:	11008c26 	beq	r2,r4,100114a4 <__subdf3+0x834>
10011274:	01001004 	movi	r4,64
10011278:	2085c83a 	sub	r2,r4,r2
1001127c:	2884983a 	sll	r2,r5,r2
10011280:	118cb03a 	or	r6,r2,r6
10011284:	300cc03a 	cmpne	r6,r6,zero
10011288:	4992b03a 	or	r9,r9,r6
1001128c:	0005883a 	mov	r2,zero
10011290:	003f1206 	br	10010edc <__alt_data_end+0xf8010edc>
10011294:	0101ffc4 	movi	r4,2047
10011298:	493f9c1e 	bne	r9,r4,1001110c <__alt_data_end+0xf801110c>
1001129c:	2807883a 	mov	r3,r5
100112a0:	3023883a 	mov	r17,r6
100112a4:	4821883a 	mov	r16,r9
100112a8:	3825883a 	mov	r18,r7
100112ac:	003e9106 	br	10010cf4 <__alt_data_end+0xf8010cf4>
100112b0:	80001f1e 	bne	r16,zero,10011330 <__subdf3+0x6c0>
100112b4:	1c48b03a 	or	r4,r3,r17
100112b8:	20005a26 	beq	r4,zero,10011424 <__subdf3+0x7b4>
100112bc:	0084303a 	nor	r2,zero,r2
100112c0:	1000561e 	bne	r2,zero,1001141c <__subdf3+0x7ac>
100112c4:	89a3883a 	add	r17,r17,r6
100112c8:	1945883a 	add	r2,r3,r5
100112cc:	898d803a 	cmpltu	r6,r17,r6
100112d0:	3087883a 	add	r3,r6,r2
100112d4:	4821883a 	mov	r16,r9
100112d8:	003f0506 	br	10010ef0 <__alt_data_end+0xf8010ef0>
100112dc:	10002b1e 	bne	r2,zero,1001138c <__subdf3+0x71c>
100112e0:	2984b03a 	or	r2,r5,r6
100112e4:	10008026 	beq	r2,zero,100114e8 <__subdf3+0x878>
100112e8:	2807883a 	mov	r3,r5
100112ec:	3023883a 	mov	r17,r6
100112f0:	3825883a 	mov	r18,r7
100112f4:	0401ffc4 	movi	r16,2047
100112f8:	003e7e06 	br	10010cf4 <__alt_data_end+0xf8010cf4>
100112fc:	3809883a 	mov	r4,r7
10011300:	0011883a 	mov	r8,zero
10011304:	0005883a 	mov	r2,zero
10011308:	003ee306 	br	10010e98 <__alt_data_end+0xf8010e98>
1001130c:	1c62b03a 	or	r17,r3,r17
10011310:	8822c03a 	cmpne	r17,r17,zero
10011314:	0005883a 	mov	r2,zero
10011318:	003f8906 	br	10011140 <__alt_data_end+0xf8011140>
1001131c:	3809883a 	mov	r4,r7
10011320:	4821883a 	mov	r16,r9
10011324:	0011883a 	mov	r8,zero
10011328:	0005883a 	mov	r2,zero
1001132c:	003eda06 	br	10010e98 <__alt_data_end+0xf8010e98>
10011330:	0101ffc4 	movi	r4,2047
10011334:	49003b26 	beq	r9,r4,10011424 <__subdf3+0x7b4>
10011338:	0085c83a 	sub	r2,zero,r2
1001133c:	18c02034 	orhi	r3,r3,128
10011340:	01000e04 	movi	r4,56
10011344:	20806e16 	blt	r4,r2,10011500 <__subdf3+0x890>
10011348:	010007c4 	movi	r4,31
1001134c:	20807716 	blt	r4,r2,1001152c <__subdf3+0x8bc>
10011350:	01000804 	movi	r4,32
10011354:	2089c83a 	sub	r4,r4,r2
10011358:	1914983a 	sll	r10,r3,r4
1001135c:	8890d83a 	srl	r8,r17,r2
10011360:	8908983a 	sll	r4,r17,r4
10011364:	1884d83a 	srl	r2,r3,r2
10011368:	5222b03a 	or	r17,r10,r8
1001136c:	2006c03a 	cmpne	r3,r4,zero
10011370:	88e2b03a 	or	r17,r17,r3
10011374:	89a3883a 	add	r17,r17,r6
10011378:	1145883a 	add	r2,r2,r5
1001137c:	898d803a 	cmpltu	r6,r17,r6
10011380:	3087883a 	add	r3,r6,r2
10011384:	4821883a 	mov	r16,r9
10011388:	003ed906 	br	10010ef0 <__alt_data_end+0xf8010ef0>
1001138c:	2984b03a 	or	r2,r5,r6
10011390:	10004226 	beq	r2,zero,1001149c <__subdf3+0x82c>
10011394:	1808d0fa 	srli	r4,r3,3
10011398:	8822d0fa 	srli	r17,r17,3
1001139c:	1806977a 	slli	r3,r3,29
100113a0:	2080022c 	andhi	r2,r4,8
100113a4:	1c62b03a 	or	r17,r3,r17
100113a8:	10000826 	beq	r2,zero,100113cc <__subdf3+0x75c>
100113ac:	2812d0fa 	srli	r9,r5,3
100113b0:	4880022c 	andhi	r2,r9,8
100113b4:	1000051e 	bne	r2,zero,100113cc <__subdf3+0x75c>
100113b8:	300cd0fa 	srli	r6,r6,3
100113bc:	2804977a 	slli	r2,r5,29
100113c0:	4809883a 	mov	r4,r9
100113c4:	3825883a 	mov	r18,r7
100113c8:	11a2b03a 	or	r17,r2,r6
100113cc:	8806d77a 	srli	r3,r17,29
100113d0:	200890fa 	slli	r4,r4,3
100113d4:	882290fa 	slli	r17,r17,3
100113d8:	0401ffc4 	movi	r16,2047
100113dc:	1906b03a 	or	r3,r3,r4
100113e0:	003e4406 	br	10010cf4 <__alt_data_end+0xf8010cf4>
100113e4:	2984b03a 	or	r2,r5,r6
100113e8:	103e4226 	beq	r2,zero,10010cf4 <__alt_data_end+0xf8010cf4>
100113ec:	8989c83a 	sub	r4,r17,r6
100113f0:	8911803a 	cmpltu	r8,r17,r4
100113f4:	1945c83a 	sub	r2,r3,r5
100113f8:	1205c83a 	sub	r2,r2,r8
100113fc:	1200202c 	andhi	r8,r2,128
10011400:	403e9a26 	beq	r8,zero,10010e6c <__alt_data_end+0xf8010e6c>
10011404:	3463c83a 	sub	r17,r6,r17
10011408:	28c5c83a 	sub	r2,r5,r3
1001140c:	344d803a 	cmpltu	r6,r6,r17
10011410:	1187c83a 	sub	r3,r2,r6
10011414:	3825883a 	mov	r18,r7
10011418:	003e3606 	br	10010cf4 <__alt_data_end+0xf8010cf4>
1001141c:	0101ffc4 	movi	r4,2047
10011420:	493fc71e 	bne	r9,r4,10011340 <__alt_data_end+0xf8011340>
10011424:	2807883a 	mov	r3,r5
10011428:	3023883a 	mov	r17,r6
1001142c:	4821883a 	mov	r16,r9
10011430:	003e3006 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011434:	10003626 	beq	r2,zero,10011510 <__subdf3+0x8a0>
10011438:	2984b03a 	or	r2,r5,r6
1001143c:	10001726 	beq	r2,zero,1001149c <__subdf3+0x82c>
10011440:	1808d0fa 	srli	r4,r3,3
10011444:	8822d0fa 	srli	r17,r17,3
10011448:	1806977a 	slli	r3,r3,29
1001144c:	2080022c 	andhi	r2,r4,8
10011450:	1c62b03a 	or	r17,r3,r17
10011454:	10000726 	beq	r2,zero,10011474 <__subdf3+0x804>
10011458:	2812d0fa 	srli	r9,r5,3
1001145c:	4880022c 	andhi	r2,r9,8
10011460:	1000041e 	bne	r2,zero,10011474 <__subdf3+0x804>
10011464:	300cd0fa 	srli	r6,r6,3
10011468:	2804977a 	slli	r2,r5,29
1001146c:	4809883a 	mov	r4,r9
10011470:	11a2b03a 	or	r17,r2,r6
10011474:	8806d77a 	srli	r3,r17,29
10011478:	200890fa 	slli	r4,r4,3
1001147c:	882290fa 	slli	r17,r17,3
10011480:	3825883a 	mov	r18,r7
10011484:	1906b03a 	or	r3,r3,r4
10011488:	0401ffc4 	movi	r16,2047
1001148c:	003e1906 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011490:	000b883a 	mov	r5,zero
10011494:	0005883a 	mov	r2,zero
10011498:	003e2e06 	br	10010d54 <__alt_data_end+0xf8010d54>
1001149c:	0401ffc4 	movi	r16,2047
100114a0:	003e1406 	br	10010cf4 <__alt_data_end+0xf8010cf4>
100114a4:	0005883a 	mov	r2,zero
100114a8:	003f7506 	br	10011280 <__alt_data_end+0xf8011280>
100114ac:	0005883a 	mov	r2,zero
100114b0:	0009883a 	mov	r4,zero
100114b4:	003e7806 	br	10010e98 <__alt_data_end+0xf8010e98>
100114b8:	123ff804 	addi	r8,r2,-32
100114bc:	01000804 	movi	r4,32
100114c0:	1a10d83a 	srl	r8,r3,r8
100114c4:	11002526 	beq	r2,r4,1001155c <__subdf3+0x8ec>
100114c8:	01001004 	movi	r4,64
100114cc:	2085c83a 	sub	r2,r4,r2
100114d0:	1884983a 	sll	r2,r3,r2
100114d4:	1444b03a 	or	r2,r2,r17
100114d8:	1004c03a 	cmpne	r2,r2,zero
100114dc:	40a2b03a 	or	r17,r8,r2
100114e0:	0005883a 	mov	r2,zero
100114e4:	003f1606 	br	10011140 <__alt_data_end+0xf8011140>
100114e8:	02000434 	movhi	r8,16
100114ec:	0009883a 	mov	r4,zero
100114f0:	423fffc4 	addi	r8,r8,-1
100114f4:	00bfffc4 	movi	r2,-1
100114f8:	0401ffc4 	movi	r16,2047
100114fc:	003e6606 	br	10010e98 <__alt_data_end+0xf8010e98>
10011500:	1c62b03a 	or	r17,r3,r17
10011504:	8822c03a 	cmpne	r17,r17,zero
10011508:	0005883a 	mov	r2,zero
1001150c:	003f9906 	br	10011374 <__alt_data_end+0xf8011374>
10011510:	2807883a 	mov	r3,r5
10011514:	3023883a 	mov	r17,r6
10011518:	0401ffc4 	movi	r16,2047
1001151c:	003df506 	br	10010cf4 <__alt_data_end+0xf8010cf4>
10011520:	2807883a 	mov	r3,r5
10011524:	3023883a 	mov	r17,r6
10011528:	003df206 	br	10010cf4 <__alt_data_end+0xf8010cf4>
1001152c:	123ff804 	addi	r8,r2,-32
10011530:	01000804 	movi	r4,32
10011534:	1a10d83a 	srl	r8,r3,r8
10011538:	11000a26 	beq	r2,r4,10011564 <__subdf3+0x8f4>
1001153c:	01001004 	movi	r4,64
10011540:	2085c83a 	sub	r2,r4,r2
10011544:	1884983a 	sll	r2,r3,r2
10011548:	1444b03a 	or	r2,r2,r17
1001154c:	1004c03a 	cmpne	r2,r2,zero
10011550:	40a2b03a 	or	r17,r8,r2
10011554:	0005883a 	mov	r2,zero
10011558:	003f8606 	br	10011374 <__alt_data_end+0xf8011374>
1001155c:	0005883a 	mov	r2,zero
10011560:	003fdc06 	br	100114d4 <__alt_data_end+0xf80114d4>
10011564:	0005883a 	mov	r2,zero
10011568:	003ff706 	br	10011548 <__alt_data_end+0xf8011548>

1001156c <__fixdfsi>:
1001156c:	280cd53a 	srli	r6,r5,20
10011570:	00c00434 	movhi	r3,16
10011574:	18ffffc4 	addi	r3,r3,-1
10011578:	3181ffcc 	andi	r6,r6,2047
1001157c:	01c0ff84 	movi	r7,1022
10011580:	28c6703a 	and	r3,r5,r3
10011584:	280ad7fa 	srli	r5,r5,31
10011588:	3980120e 	bge	r7,r6,100115d4 <__fixdfsi+0x68>
1001158c:	00810744 	movi	r2,1053
10011590:	11800c16 	blt	r2,r6,100115c4 <__fixdfsi+0x58>
10011594:	00810cc4 	movi	r2,1075
10011598:	1185c83a 	sub	r2,r2,r6
1001159c:	01c007c4 	movi	r7,31
100115a0:	18c00434 	orhi	r3,r3,16
100115a4:	38800d16 	blt	r7,r2,100115dc <__fixdfsi+0x70>
100115a8:	31befb44 	addi	r6,r6,-1043
100115ac:	2084d83a 	srl	r2,r4,r2
100115b0:	1986983a 	sll	r3,r3,r6
100115b4:	1884b03a 	or	r2,r3,r2
100115b8:	28000726 	beq	r5,zero,100115d8 <__fixdfsi+0x6c>
100115bc:	0085c83a 	sub	r2,zero,r2
100115c0:	f800283a 	ret
100115c4:	00a00034 	movhi	r2,32768
100115c8:	10bfffc4 	addi	r2,r2,-1
100115cc:	2885883a 	add	r2,r5,r2
100115d0:	f800283a 	ret
100115d4:	0005883a 	mov	r2,zero
100115d8:	f800283a 	ret
100115dc:	008104c4 	movi	r2,1043
100115e0:	1185c83a 	sub	r2,r2,r6
100115e4:	1884d83a 	srl	r2,r3,r2
100115e8:	003ff306 	br	100115b8 <__alt_data_end+0xf80115b8>

100115ec <__floatsidf>:
100115ec:	defffd04 	addi	sp,sp,-12
100115f0:	dfc00215 	stw	ra,8(sp)
100115f4:	dc400115 	stw	r17,4(sp)
100115f8:	dc000015 	stw	r16,0(sp)
100115fc:	20002b26 	beq	r4,zero,100116ac <__floatsidf+0xc0>
10011600:	2023883a 	mov	r17,r4
10011604:	2020d7fa 	srli	r16,r4,31
10011608:	20002d16 	blt	r4,zero,100116c0 <__floatsidf+0xd4>
1001160c:	8809883a 	mov	r4,r17
10011610:	00117700 	call	10011770 <__clzsi2>
10011614:	01410784 	movi	r5,1054
10011618:	288bc83a 	sub	r5,r5,r2
1001161c:	01010cc4 	movi	r4,1075
10011620:	2149c83a 	sub	r4,r4,r5
10011624:	00c007c4 	movi	r3,31
10011628:	1900160e 	bge	r3,r4,10011684 <__floatsidf+0x98>
1001162c:	00c104c4 	movi	r3,1043
10011630:	1947c83a 	sub	r3,r3,r5
10011634:	88c6983a 	sll	r3,r17,r3
10011638:	00800434 	movhi	r2,16
1001163c:	10bfffc4 	addi	r2,r2,-1
10011640:	1886703a 	and	r3,r3,r2
10011644:	2941ffcc 	andi	r5,r5,2047
10011648:	800d883a 	mov	r6,r16
1001164c:	0005883a 	mov	r2,zero
10011650:	280a953a 	slli	r5,r5,20
10011654:	31803fcc 	andi	r6,r6,255
10011658:	01000434 	movhi	r4,16
1001165c:	300c97fa 	slli	r6,r6,31
10011660:	213fffc4 	addi	r4,r4,-1
10011664:	1906703a 	and	r3,r3,r4
10011668:	1946b03a 	or	r3,r3,r5
1001166c:	1986b03a 	or	r3,r3,r6
10011670:	dfc00217 	ldw	ra,8(sp)
10011674:	dc400117 	ldw	r17,4(sp)
10011678:	dc000017 	ldw	r16,0(sp)
1001167c:	dec00304 	addi	sp,sp,12
10011680:	f800283a 	ret
10011684:	00c002c4 	movi	r3,11
10011688:	1887c83a 	sub	r3,r3,r2
1001168c:	88c6d83a 	srl	r3,r17,r3
10011690:	8904983a 	sll	r2,r17,r4
10011694:	01000434 	movhi	r4,16
10011698:	213fffc4 	addi	r4,r4,-1
1001169c:	2941ffcc 	andi	r5,r5,2047
100116a0:	1906703a 	and	r3,r3,r4
100116a4:	800d883a 	mov	r6,r16
100116a8:	003fe906 	br	10011650 <__alt_data_end+0xf8011650>
100116ac:	000d883a 	mov	r6,zero
100116b0:	000b883a 	mov	r5,zero
100116b4:	0007883a 	mov	r3,zero
100116b8:	0005883a 	mov	r2,zero
100116bc:	003fe406 	br	10011650 <__alt_data_end+0xf8011650>
100116c0:	0123c83a 	sub	r17,zero,r4
100116c4:	003fd106 	br	1001160c <__alt_data_end+0xf801160c>

100116c8 <__floatunsidf>:
100116c8:	defffe04 	addi	sp,sp,-8
100116cc:	dc000015 	stw	r16,0(sp)
100116d0:	dfc00115 	stw	ra,4(sp)
100116d4:	2021883a 	mov	r16,r4
100116d8:	20002226 	beq	r4,zero,10011764 <__floatunsidf+0x9c>
100116dc:	00117700 	call	10011770 <__clzsi2>
100116e0:	01010784 	movi	r4,1054
100116e4:	2089c83a 	sub	r4,r4,r2
100116e8:	01810cc4 	movi	r6,1075
100116ec:	310dc83a 	sub	r6,r6,r4
100116f0:	00c007c4 	movi	r3,31
100116f4:	1980120e 	bge	r3,r6,10011740 <__floatunsidf+0x78>
100116f8:	00c104c4 	movi	r3,1043
100116fc:	1907c83a 	sub	r3,r3,r4
10011700:	80ca983a 	sll	r5,r16,r3
10011704:	00800434 	movhi	r2,16
10011708:	10bfffc4 	addi	r2,r2,-1
1001170c:	2101ffcc 	andi	r4,r4,2047
10011710:	0021883a 	mov	r16,zero
10011714:	288a703a 	and	r5,r5,r2
10011718:	2008953a 	slli	r4,r4,20
1001171c:	00c00434 	movhi	r3,16
10011720:	18ffffc4 	addi	r3,r3,-1
10011724:	28c6703a 	and	r3,r5,r3
10011728:	8005883a 	mov	r2,r16
1001172c:	1906b03a 	or	r3,r3,r4
10011730:	dfc00117 	ldw	ra,4(sp)
10011734:	dc000017 	ldw	r16,0(sp)
10011738:	dec00204 	addi	sp,sp,8
1001173c:	f800283a 	ret
10011740:	00c002c4 	movi	r3,11
10011744:	188bc83a 	sub	r5,r3,r2
10011748:	814ad83a 	srl	r5,r16,r5
1001174c:	00c00434 	movhi	r3,16
10011750:	18ffffc4 	addi	r3,r3,-1
10011754:	81a0983a 	sll	r16,r16,r6
10011758:	2101ffcc 	andi	r4,r4,2047
1001175c:	28ca703a 	and	r5,r5,r3
10011760:	003fed06 	br	10011718 <__alt_data_end+0xf8011718>
10011764:	0009883a 	mov	r4,zero
10011768:	000b883a 	mov	r5,zero
1001176c:	003fea06 	br	10011718 <__alt_data_end+0xf8011718>

10011770 <__clzsi2>:
10011770:	00bfffd4 	movui	r2,65535
10011774:	11000536 	bltu	r2,r4,1001178c <__clzsi2+0x1c>
10011778:	00803fc4 	movi	r2,255
1001177c:	11000f36 	bltu	r2,r4,100117bc <__clzsi2+0x4c>
10011780:	00800804 	movi	r2,32
10011784:	0007883a 	mov	r3,zero
10011788:	00000506 	br	100117a0 <__clzsi2+0x30>
1001178c:	00804034 	movhi	r2,256
10011790:	10bfffc4 	addi	r2,r2,-1
10011794:	11000c2e 	bgeu	r2,r4,100117c8 <__clzsi2+0x58>
10011798:	00800204 	movi	r2,8
1001179c:	00c00604 	movi	r3,24
100117a0:	20c8d83a 	srl	r4,r4,r3
100117a4:	00c40074 	movhi	r3,4097
100117a8:	18d0c304 	addi	r3,r3,17164
100117ac:	1909883a 	add	r4,r3,r4
100117b0:	20c00003 	ldbu	r3,0(r4)
100117b4:	10c5c83a 	sub	r2,r2,r3
100117b8:	f800283a 	ret
100117bc:	00800604 	movi	r2,24
100117c0:	00c00204 	movi	r3,8
100117c4:	003ff606 	br	100117a0 <__alt_data_end+0xf80117a0>
100117c8:	00800404 	movi	r2,16
100117cc:	1007883a 	mov	r3,r2
100117d0:	003ff306 	br	100117a0 <__alt_data_end+0xf80117a0>

100117d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
100117d4:	defffe04 	addi	sp,sp,-8
100117d8:	dfc00115 	stw	ra,4(sp)
100117dc:	df000015 	stw	fp,0(sp)
100117e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100117e4:	d0a00d17 	ldw	r2,-32716(gp)
100117e8:	10000326 	beq	r2,zero,100117f8 <alt_get_errno+0x24>
100117ec:	d0a00d17 	ldw	r2,-32716(gp)
100117f0:	103ee83a 	callr	r2
100117f4:	00000106 	br	100117fc <alt_get_errno+0x28>
100117f8:	d0a78d04 	addi	r2,gp,-25036
}
100117fc:	e037883a 	mov	sp,fp
10011800:	dfc00117 	ldw	ra,4(sp)
10011804:	df000017 	ldw	fp,0(sp)
10011808:	dec00204 	addi	sp,sp,8
1001180c:	f800283a 	ret

10011810 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
10011810:	defffb04 	addi	sp,sp,-20
10011814:	dfc00415 	stw	ra,16(sp)
10011818:	df000315 	stw	fp,12(sp)
1001181c:	df000304 	addi	fp,sp,12
10011820:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
10011824:	e0bfff17 	ldw	r2,-4(fp)
10011828:	10000816 	blt	r2,zero,1001184c <close+0x3c>
1001182c:	01400304 	movi	r5,12
10011830:	e13fff17 	ldw	r4,-4(fp)
10011834:	0000fd00 	call	10000fd0 <__mulsi3>
10011838:	1007883a 	mov	r3,r2
1001183c:	00840074 	movhi	r2,4097
10011840:	1093fb04 	addi	r2,r2,20460
10011844:	1885883a 	add	r2,r3,r2
10011848:	00000106 	br	10011850 <close+0x40>
1001184c:	0005883a 	mov	r2,zero
10011850:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
10011854:	e0bffd17 	ldw	r2,-12(fp)
10011858:	10001926 	beq	r2,zero,100118c0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1001185c:	e0bffd17 	ldw	r2,-12(fp)
10011860:	10800017 	ldw	r2,0(r2)
10011864:	10800417 	ldw	r2,16(r2)
10011868:	10000626 	beq	r2,zero,10011884 <close+0x74>
1001186c:	e0bffd17 	ldw	r2,-12(fp)
10011870:	10800017 	ldw	r2,0(r2)
10011874:	10800417 	ldw	r2,16(r2)
10011878:	e13ffd17 	ldw	r4,-12(fp)
1001187c:	103ee83a 	callr	r2
10011880:	00000106 	br	10011888 <close+0x78>
10011884:	0005883a 	mov	r2,zero
10011888:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1001188c:	e13fff17 	ldw	r4,-4(fp)
10011890:	0011ef80 	call	10011ef8 <alt_release_fd>
    if (rval < 0)
10011894:	e0bffe17 	ldw	r2,-8(fp)
10011898:	1000070e 	bge	r2,zero,100118b8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1001189c:	00117d40 	call	100117d4 <alt_get_errno>
100118a0:	1007883a 	mov	r3,r2
100118a4:	e0bffe17 	ldw	r2,-8(fp)
100118a8:	0085c83a 	sub	r2,zero,r2
100118ac:	18800015 	stw	r2,0(r3)
      return -1;
100118b0:	00bfffc4 	movi	r2,-1
100118b4:	00000706 	br	100118d4 <close+0xc4>
    }
    return 0;
100118b8:	0005883a 	mov	r2,zero
100118bc:	00000506 	br	100118d4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
100118c0:	00117d40 	call	100117d4 <alt_get_errno>
100118c4:	1007883a 	mov	r3,r2
100118c8:	00801444 	movi	r2,81
100118cc:	18800015 	stw	r2,0(r3)
    return -1;
100118d0:	00bfffc4 	movi	r2,-1
  }
}
100118d4:	e037883a 	mov	sp,fp
100118d8:	dfc00117 	ldw	ra,4(sp)
100118dc:	df000017 	ldw	fp,0(sp)
100118e0:	dec00204 	addi	sp,sp,8
100118e4:	f800283a 	ret

100118e8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
100118e8:	defffc04 	addi	sp,sp,-16
100118ec:	df000315 	stw	fp,12(sp)
100118f0:	df000304 	addi	fp,sp,12
100118f4:	e13ffd15 	stw	r4,-12(fp)
100118f8:	e17ffe15 	stw	r5,-8(fp)
100118fc:	e1bfff15 	stw	r6,-4(fp)
  return len;
10011900:	e0bfff17 	ldw	r2,-4(fp)
}
10011904:	e037883a 	mov	sp,fp
10011908:	df000017 	ldw	fp,0(sp)
1001190c:	dec00104 	addi	sp,sp,4
10011910:	f800283a 	ret

10011914 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011914:	defffe04 	addi	sp,sp,-8
10011918:	dfc00115 	stw	ra,4(sp)
1001191c:	df000015 	stw	fp,0(sp)
10011920:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011924:	d0a00d17 	ldw	r2,-32716(gp)
10011928:	10000326 	beq	r2,zero,10011938 <alt_get_errno+0x24>
1001192c:	d0a00d17 	ldw	r2,-32716(gp)
10011930:	103ee83a 	callr	r2
10011934:	00000106 	br	1001193c <alt_get_errno+0x28>
10011938:	d0a78d04 	addi	r2,gp,-25036
}
1001193c:	e037883a 	mov	sp,fp
10011940:	dfc00117 	ldw	ra,4(sp)
10011944:	df000017 	ldw	fp,0(sp)
10011948:	dec00204 	addi	sp,sp,8
1001194c:	f800283a 	ret

10011950 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
10011950:	defffb04 	addi	sp,sp,-20
10011954:	dfc00415 	stw	ra,16(sp)
10011958:	df000315 	stw	fp,12(sp)
1001195c:	df000304 	addi	fp,sp,12
10011960:	e13ffe15 	stw	r4,-8(fp)
10011964:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011968:	e0bffe17 	ldw	r2,-8(fp)
1001196c:	10000816 	blt	r2,zero,10011990 <fstat+0x40>
10011970:	01400304 	movi	r5,12
10011974:	e13ffe17 	ldw	r4,-8(fp)
10011978:	0000fd00 	call	10000fd0 <__mulsi3>
1001197c:	1007883a 	mov	r3,r2
10011980:	00840074 	movhi	r2,4097
10011984:	1093fb04 	addi	r2,r2,20460
10011988:	1885883a 	add	r2,r3,r2
1001198c:	00000106 	br	10011994 <fstat+0x44>
10011990:	0005883a 	mov	r2,zero
10011994:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
10011998:	e0bffd17 	ldw	r2,-12(fp)
1001199c:	10001026 	beq	r2,zero,100119e0 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
100119a0:	e0bffd17 	ldw	r2,-12(fp)
100119a4:	10800017 	ldw	r2,0(r2)
100119a8:	10800817 	ldw	r2,32(r2)
100119ac:	10000726 	beq	r2,zero,100119cc <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
100119b0:	e0bffd17 	ldw	r2,-12(fp)
100119b4:	10800017 	ldw	r2,0(r2)
100119b8:	10800817 	ldw	r2,32(r2)
100119bc:	e17fff17 	ldw	r5,-4(fp)
100119c0:	e13ffd17 	ldw	r4,-12(fp)
100119c4:	103ee83a 	callr	r2
100119c8:	00000a06 	br	100119f4 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
100119cc:	e0bfff17 	ldw	r2,-4(fp)
100119d0:	00c80004 	movi	r3,8192
100119d4:	10c00115 	stw	r3,4(r2)
      return 0;
100119d8:	0005883a 	mov	r2,zero
100119dc:	00000506 	br	100119f4 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
100119e0:	00119140 	call	10011914 <alt_get_errno>
100119e4:	1007883a 	mov	r3,r2
100119e8:	00801444 	movi	r2,81
100119ec:	18800015 	stw	r2,0(r3)
    return -1;
100119f0:	00bfffc4 	movi	r2,-1
  }
}
100119f4:	e037883a 	mov	sp,fp
100119f8:	dfc00117 	ldw	ra,4(sp)
100119fc:	df000017 	ldw	fp,0(sp)
10011a00:	dec00204 	addi	sp,sp,8
10011a04:	f800283a 	ret

10011a08 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011a08:	defffe04 	addi	sp,sp,-8
10011a0c:	dfc00115 	stw	ra,4(sp)
10011a10:	df000015 	stw	fp,0(sp)
10011a14:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011a18:	d0a00d17 	ldw	r2,-32716(gp)
10011a1c:	10000326 	beq	r2,zero,10011a2c <alt_get_errno+0x24>
10011a20:	d0a00d17 	ldw	r2,-32716(gp)
10011a24:	103ee83a 	callr	r2
10011a28:	00000106 	br	10011a30 <alt_get_errno+0x28>
10011a2c:	d0a78d04 	addi	r2,gp,-25036
}
10011a30:	e037883a 	mov	sp,fp
10011a34:	dfc00117 	ldw	ra,4(sp)
10011a38:	df000017 	ldw	fp,0(sp)
10011a3c:	dec00204 	addi	sp,sp,8
10011a40:	f800283a 	ret

10011a44 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
10011a44:	deffed04 	addi	sp,sp,-76
10011a48:	dfc01215 	stw	ra,72(sp)
10011a4c:	df001115 	stw	fp,68(sp)
10011a50:	df001104 	addi	fp,sp,68
10011a54:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011a58:	e0bfff17 	ldw	r2,-4(fp)
10011a5c:	10000816 	blt	r2,zero,10011a80 <isatty+0x3c>
10011a60:	01400304 	movi	r5,12
10011a64:	e13fff17 	ldw	r4,-4(fp)
10011a68:	0000fd00 	call	10000fd0 <__mulsi3>
10011a6c:	1007883a 	mov	r3,r2
10011a70:	00840074 	movhi	r2,4097
10011a74:	1093fb04 	addi	r2,r2,20460
10011a78:	1885883a 	add	r2,r3,r2
10011a7c:	00000106 	br	10011a84 <isatty+0x40>
10011a80:	0005883a 	mov	r2,zero
10011a84:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
10011a88:	e0bfef17 	ldw	r2,-68(fp)
10011a8c:	10000e26 	beq	r2,zero,10011ac8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
10011a90:	e0bfef17 	ldw	r2,-68(fp)
10011a94:	10800017 	ldw	r2,0(r2)
10011a98:	10800817 	ldw	r2,32(r2)
10011a9c:	1000021e 	bne	r2,zero,10011aa8 <isatty+0x64>
    {
      return 1;
10011aa0:	00800044 	movi	r2,1
10011aa4:	00000d06 	br	10011adc <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
10011aa8:	e0bff004 	addi	r2,fp,-64
10011aac:	100b883a 	mov	r5,r2
10011ab0:	e13fff17 	ldw	r4,-4(fp)
10011ab4:	00119500 	call	10011950 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
10011ab8:	e0bff117 	ldw	r2,-60(fp)
10011abc:	10880020 	cmpeqi	r2,r2,8192
10011ac0:	10803fcc 	andi	r2,r2,255
10011ac4:	00000506 	br	10011adc <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10011ac8:	0011a080 	call	10011a08 <alt_get_errno>
10011acc:	1007883a 	mov	r3,r2
10011ad0:	00801444 	movi	r2,81
10011ad4:	18800015 	stw	r2,0(r3)
    return 0;
10011ad8:	0005883a 	mov	r2,zero
  }
}
10011adc:	e037883a 	mov	sp,fp
10011ae0:	dfc00117 	ldw	ra,4(sp)
10011ae4:	df000017 	ldw	fp,0(sp)
10011ae8:	dec00204 	addi	sp,sp,8
10011aec:	f800283a 	ret

10011af0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
10011af0:	defffc04 	addi	sp,sp,-16
10011af4:	df000315 	stw	fp,12(sp)
10011af8:	df000304 	addi	fp,sp,12
10011afc:	e13ffd15 	stw	r4,-12(fp)
10011b00:	e17ffe15 	stw	r5,-8(fp)
10011b04:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
10011b08:	e0fffe17 	ldw	r3,-8(fp)
10011b0c:	e0bffd17 	ldw	r2,-12(fp)
10011b10:	18800c26 	beq	r3,r2,10011b44 <alt_load_section+0x54>
  {
    while( to != end )
10011b14:	00000806 	br	10011b38 <alt_load_section+0x48>
    {
      *to++ = *from++;
10011b18:	e0bffe17 	ldw	r2,-8(fp)
10011b1c:	10c00104 	addi	r3,r2,4
10011b20:	e0fffe15 	stw	r3,-8(fp)
10011b24:	e0fffd17 	ldw	r3,-12(fp)
10011b28:	19000104 	addi	r4,r3,4
10011b2c:	e13ffd15 	stw	r4,-12(fp)
10011b30:	18c00017 	ldw	r3,0(r3)
10011b34:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
10011b38:	e0fffe17 	ldw	r3,-8(fp)
10011b3c:	e0bfff17 	ldw	r2,-4(fp)
10011b40:	18bff51e 	bne	r3,r2,10011b18 <__alt_data_end+0xf8011b18>
    {
      *to++ = *from++;
    }
  }
}
10011b44:	0001883a 	nop
10011b48:	e037883a 	mov	sp,fp
10011b4c:	df000017 	ldw	fp,0(sp)
10011b50:	dec00104 	addi	sp,sp,4
10011b54:	f800283a 	ret

10011b58 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
10011b58:	defffe04 	addi	sp,sp,-8
10011b5c:	dfc00115 	stw	ra,4(sp)
10011b60:	df000015 	stw	fp,0(sp)
10011b64:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
10011b68:	01840074 	movhi	r6,4097
10011b6c:	31988504 	addi	r6,r6,25108
10011b70:	01440074 	movhi	r5,4097
10011b74:	29511004 	addi	r5,r5,17472
10011b78:	01040074 	movhi	r4,4097
10011b7c:	21188504 	addi	r4,r4,25108
10011b80:	0011af00 	call	10011af0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
10011b84:	01840034 	movhi	r6,4096
10011b88:	31808c04 	addi	r6,r6,560
10011b8c:	01440034 	movhi	r5,4096
10011b90:	29400804 	addi	r5,r5,32
10011b94:	01040034 	movhi	r4,4096
10011b98:	21000804 	addi	r4,r4,32
10011b9c:	0011af00 	call	10011af0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
10011ba0:	01840074 	movhi	r6,4097
10011ba4:	31911004 	addi	r6,r6,17472
10011ba8:	01440074 	movhi	r5,4097
10011bac:	294ffd04 	addi	r5,r5,16372
10011bb0:	01040074 	movhi	r4,4097
10011bb4:	210ffd04 	addi	r4,r4,16372
10011bb8:	0011af00 	call	10011af0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
10011bbc:	0012f3c0 	call	10012f3c <alt_dcache_flush_all>
  alt_icache_flush_all();
10011bc0:	00130fc0 	call	100130fc <alt_icache_flush_all>
}
10011bc4:	0001883a 	nop
10011bc8:	e037883a 	mov	sp,fp
10011bcc:	dfc00117 	ldw	ra,4(sp)
10011bd0:	df000017 	ldw	fp,0(sp)
10011bd4:	dec00204 	addi	sp,sp,8
10011bd8:	f800283a 	ret

10011bdc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011bdc:	defffe04 	addi	sp,sp,-8
10011be0:	dfc00115 	stw	ra,4(sp)
10011be4:	df000015 	stw	fp,0(sp)
10011be8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011bec:	d0a00d17 	ldw	r2,-32716(gp)
10011bf0:	10000326 	beq	r2,zero,10011c00 <alt_get_errno+0x24>
10011bf4:	d0a00d17 	ldw	r2,-32716(gp)
10011bf8:	103ee83a 	callr	r2
10011bfc:	00000106 	br	10011c04 <alt_get_errno+0x28>
10011c00:	d0a78d04 	addi	r2,gp,-25036
}
10011c04:	e037883a 	mov	sp,fp
10011c08:	dfc00117 	ldw	ra,4(sp)
10011c0c:	df000017 	ldw	fp,0(sp)
10011c10:	dec00204 	addi	sp,sp,8
10011c14:	f800283a 	ret

10011c18 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
10011c18:	defff904 	addi	sp,sp,-28
10011c1c:	dfc00615 	stw	ra,24(sp)
10011c20:	df000515 	stw	fp,20(sp)
10011c24:	df000504 	addi	fp,sp,20
10011c28:	e13ffd15 	stw	r4,-12(fp)
10011c2c:	e17ffe15 	stw	r5,-8(fp)
10011c30:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
10011c34:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011c38:	e0bffd17 	ldw	r2,-12(fp)
10011c3c:	10000816 	blt	r2,zero,10011c60 <lseek+0x48>
10011c40:	01400304 	movi	r5,12
10011c44:	e13ffd17 	ldw	r4,-12(fp)
10011c48:	0000fd00 	call	10000fd0 <__mulsi3>
10011c4c:	1007883a 	mov	r3,r2
10011c50:	00840074 	movhi	r2,4097
10011c54:	1093fb04 	addi	r2,r2,20460
10011c58:	1885883a 	add	r2,r3,r2
10011c5c:	00000106 	br	10011c64 <lseek+0x4c>
10011c60:	0005883a 	mov	r2,zero
10011c64:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
10011c68:	e0bffc17 	ldw	r2,-16(fp)
10011c6c:	10001026 	beq	r2,zero,10011cb0 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10011c70:	e0bffc17 	ldw	r2,-16(fp)
10011c74:	10800017 	ldw	r2,0(r2)
10011c78:	10800717 	ldw	r2,28(r2)
10011c7c:	10000926 	beq	r2,zero,10011ca4 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10011c80:	e0bffc17 	ldw	r2,-16(fp)
10011c84:	10800017 	ldw	r2,0(r2)
10011c88:	10800717 	ldw	r2,28(r2)
10011c8c:	e1bfff17 	ldw	r6,-4(fp)
10011c90:	e17ffe17 	ldw	r5,-8(fp)
10011c94:	e13ffc17 	ldw	r4,-16(fp)
10011c98:	103ee83a 	callr	r2
10011c9c:	e0bffb15 	stw	r2,-20(fp)
10011ca0:	00000506 	br	10011cb8 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
10011ca4:	00bfde84 	movi	r2,-134
10011ca8:	e0bffb15 	stw	r2,-20(fp)
10011cac:	00000206 	br	10011cb8 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
10011cb0:	00bfebc4 	movi	r2,-81
10011cb4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
10011cb8:	e0bffb17 	ldw	r2,-20(fp)
10011cbc:	1000070e 	bge	r2,zero,10011cdc <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
10011cc0:	0011bdc0 	call	10011bdc <alt_get_errno>
10011cc4:	1007883a 	mov	r3,r2
10011cc8:	e0bffb17 	ldw	r2,-20(fp)
10011ccc:	0085c83a 	sub	r2,zero,r2
10011cd0:	18800015 	stw	r2,0(r3)
    rc = -1;
10011cd4:	00bfffc4 	movi	r2,-1
10011cd8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
10011cdc:	e0bffb17 	ldw	r2,-20(fp)
}
10011ce0:	e037883a 	mov	sp,fp
10011ce4:	dfc00117 	ldw	ra,4(sp)
10011ce8:	df000017 	ldw	fp,0(sp)
10011cec:	dec00204 	addi	sp,sp,8
10011cf0:	f800283a 	ret

10011cf4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
10011cf4:	defffd04 	addi	sp,sp,-12
10011cf8:	dfc00215 	stw	ra,8(sp)
10011cfc:	df000115 	stw	fp,4(sp)
10011d00:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
10011d04:	0009883a 	mov	r4,zero
10011d08:	00121cc0 	call	100121cc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
10011d0c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
10011d10:	00122040 	call	10012204 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
10011d14:	01840074 	movhi	r6,4097
10011d18:	31910604 	addi	r6,r6,17432
10011d1c:	01440074 	movhi	r5,4097
10011d20:	29510604 	addi	r5,r5,17432
10011d24:	01040074 	movhi	r4,4097
10011d28:	21110604 	addi	r4,r4,17432
10011d2c:	00134a00 	call	100134a0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
10011d30:	001303c0 	call	1001303c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
10011d34:	01040074 	movhi	r4,4097
10011d38:	210c2704 	addi	r4,r4,12444
10011d3c:	0013c600 	call	10013c60 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
10011d40:	d0a78e17 	ldw	r2,-25032(gp)
10011d44:	d0e78f17 	ldw	r3,-25028(gp)
10011d48:	d1279017 	ldw	r4,-25024(gp)
10011d4c:	200d883a 	mov	r6,r4
10011d50:	180b883a 	mov	r5,r3
10011d54:	1009883a 	mov	r4,r2
10011d58:	0000de40 	call	10000de4 <main>
10011d5c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10011d60:	01000044 	movi	r4,1
10011d64:	00118100 	call	10011810 <close>
  exit (result);
10011d68:	e13fff17 	ldw	r4,-4(fp)
10011d6c:	0013c740 	call	10013c74 <exit>

10011d70 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10011d70:	defffe04 	addi	sp,sp,-8
10011d74:	df000115 	stw	fp,4(sp)
10011d78:	df000104 	addi	fp,sp,4
10011d7c:	e13fff15 	stw	r4,-4(fp)
}
10011d80:	0001883a 	nop
10011d84:	e037883a 	mov	sp,fp
10011d88:	df000017 	ldw	fp,0(sp)
10011d8c:	dec00104 	addi	sp,sp,4
10011d90:	f800283a 	ret

10011d94 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
10011d94:	defffe04 	addi	sp,sp,-8
10011d98:	df000115 	stw	fp,4(sp)
10011d9c:	df000104 	addi	fp,sp,4
10011da0:	e13fff15 	stw	r4,-4(fp)
}
10011da4:	0001883a 	nop
10011da8:	e037883a 	mov	sp,fp
10011dac:	df000017 	ldw	fp,0(sp)
10011db0:	dec00104 	addi	sp,sp,4
10011db4:	f800283a 	ret

10011db8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011db8:	defffe04 	addi	sp,sp,-8
10011dbc:	dfc00115 	stw	ra,4(sp)
10011dc0:	df000015 	stw	fp,0(sp)
10011dc4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011dc8:	d0a00d17 	ldw	r2,-32716(gp)
10011dcc:	10000326 	beq	r2,zero,10011ddc <alt_get_errno+0x24>
10011dd0:	d0a00d17 	ldw	r2,-32716(gp)
10011dd4:	103ee83a 	callr	r2
10011dd8:	00000106 	br	10011de0 <alt_get_errno+0x28>
10011ddc:	d0a78d04 	addi	r2,gp,-25036
}
10011de0:	e037883a 	mov	sp,fp
10011de4:	dfc00117 	ldw	ra,4(sp)
10011de8:	df000017 	ldw	fp,0(sp)
10011dec:	dec00204 	addi	sp,sp,8
10011df0:	f800283a 	ret

10011df4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
10011df4:	defff904 	addi	sp,sp,-28
10011df8:	dfc00615 	stw	ra,24(sp)
10011dfc:	df000515 	stw	fp,20(sp)
10011e00:	df000504 	addi	fp,sp,20
10011e04:	e13ffd15 	stw	r4,-12(fp)
10011e08:	e17ffe15 	stw	r5,-8(fp)
10011e0c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011e10:	e0bffd17 	ldw	r2,-12(fp)
10011e14:	10000816 	blt	r2,zero,10011e38 <read+0x44>
10011e18:	01400304 	movi	r5,12
10011e1c:	e13ffd17 	ldw	r4,-12(fp)
10011e20:	0000fd00 	call	10000fd0 <__mulsi3>
10011e24:	1007883a 	mov	r3,r2
10011e28:	00840074 	movhi	r2,4097
10011e2c:	1093fb04 	addi	r2,r2,20460
10011e30:	1885883a 	add	r2,r3,r2
10011e34:	00000106 	br	10011e3c <read+0x48>
10011e38:	0005883a 	mov	r2,zero
10011e3c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10011e40:	e0bffb17 	ldw	r2,-20(fp)
10011e44:	10002226 	beq	r2,zero,10011ed0 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10011e48:	e0bffb17 	ldw	r2,-20(fp)
10011e4c:	10800217 	ldw	r2,8(r2)
10011e50:	108000cc 	andi	r2,r2,3
10011e54:	10800060 	cmpeqi	r2,r2,1
10011e58:	1000181e 	bne	r2,zero,10011ebc <read+0xc8>
        (fd->dev->read))
10011e5c:	e0bffb17 	ldw	r2,-20(fp)
10011e60:	10800017 	ldw	r2,0(r2)
10011e64:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10011e68:	10001426 	beq	r2,zero,10011ebc <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
10011e6c:	e0bffb17 	ldw	r2,-20(fp)
10011e70:	10800017 	ldw	r2,0(r2)
10011e74:	10800517 	ldw	r2,20(r2)
10011e78:	e0ffff17 	ldw	r3,-4(fp)
10011e7c:	180d883a 	mov	r6,r3
10011e80:	e17ffe17 	ldw	r5,-8(fp)
10011e84:	e13ffb17 	ldw	r4,-20(fp)
10011e88:	103ee83a 	callr	r2
10011e8c:	e0bffc15 	stw	r2,-16(fp)
10011e90:	e0bffc17 	ldw	r2,-16(fp)
10011e94:	1000070e 	bge	r2,zero,10011eb4 <read+0xc0>
        {
          ALT_ERRNO = -rval;
10011e98:	0011db80 	call	10011db8 <alt_get_errno>
10011e9c:	1007883a 	mov	r3,r2
10011ea0:	e0bffc17 	ldw	r2,-16(fp)
10011ea4:	0085c83a 	sub	r2,zero,r2
10011ea8:	18800015 	stw	r2,0(r3)
          return -1;
10011eac:	00bfffc4 	movi	r2,-1
10011eb0:	00000c06 	br	10011ee4 <read+0xf0>
        }
        return rval;
10011eb4:	e0bffc17 	ldw	r2,-16(fp)
10011eb8:	00000a06 	br	10011ee4 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
10011ebc:	0011db80 	call	10011db8 <alt_get_errno>
10011ec0:	1007883a 	mov	r3,r2
10011ec4:	00800344 	movi	r2,13
10011ec8:	18800015 	stw	r2,0(r3)
10011ecc:	00000406 	br	10011ee0 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
10011ed0:	0011db80 	call	10011db8 <alt_get_errno>
10011ed4:	1007883a 	mov	r3,r2
10011ed8:	00801444 	movi	r2,81
10011edc:	18800015 	stw	r2,0(r3)
  }
  return -1;
10011ee0:	00bfffc4 	movi	r2,-1
}
10011ee4:	e037883a 	mov	sp,fp
10011ee8:	dfc00117 	ldw	ra,4(sp)
10011eec:	df000017 	ldw	fp,0(sp)
10011ef0:	dec00204 	addi	sp,sp,8
10011ef4:	f800283a 	ret

10011ef8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
10011ef8:	defffc04 	addi	sp,sp,-16
10011efc:	dfc00315 	stw	ra,12(sp)
10011f00:	df000215 	stw	fp,8(sp)
10011f04:	dc000115 	stw	r16,4(sp)
10011f08:	df000204 	addi	fp,sp,8
10011f0c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
10011f10:	e0bffe17 	ldw	r2,-8(fp)
10011f14:	108000d0 	cmplti	r2,r2,3
10011f18:	1000111e 	bne	r2,zero,10011f60 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
10011f1c:	04040074 	movhi	r16,4097
10011f20:	8413fb04 	addi	r16,r16,20460
10011f24:	e0bffe17 	ldw	r2,-8(fp)
10011f28:	01400304 	movi	r5,12
10011f2c:	1009883a 	mov	r4,r2
10011f30:	0000fd00 	call	10000fd0 <__mulsi3>
10011f34:	8085883a 	add	r2,r16,r2
10011f38:	10800204 	addi	r2,r2,8
10011f3c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
10011f40:	04040074 	movhi	r16,4097
10011f44:	8413fb04 	addi	r16,r16,20460
10011f48:	e0bffe17 	ldw	r2,-8(fp)
10011f4c:	01400304 	movi	r5,12
10011f50:	1009883a 	mov	r4,r2
10011f54:	0000fd00 	call	10000fd0 <__mulsi3>
10011f58:	8085883a 	add	r2,r16,r2
10011f5c:	10000015 	stw	zero,0(r2)
  }
}
10011f60:	0001883a 	nop
10011f64:	e6ffff04 	addi	sp,fp,-4
10011f68:	dfc00217 	ldw	ra,8(sp)
10011f6c:	df000117 	ldw	fp,4(sp)
10011f70:	dc000017 	ldw	r16,0(sp)
10011f74:	dec00304 	addi	sp,sp,12
10011f78:	f800283a 	ret

10011f7c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
10011f7c:	defff904 	addi	sp,sp,-28
10011f80:	df000615 	stw	fp,24(sp)
10011f84:	df000604 	addi	fp,sp,24
10011f88:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10011f8c:	0005303a 	rdctl	r2,status
10011f90:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10011f94:	e0fffe17 	ldw	r3,-8(fp)
10011f98:	00bfff84 	movi	r2,-2
10011f9c:	1884703a 	and	r2,r3,r2
10011fa0:	1001703a 	wrctl	status,r2
  
  return context;
10011fa4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
10011fa8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
10011fac:	d0a00e17 	ldw	r2,-32712(gp)
10011fb0:	10c000c4 	addi	r3,r2,3
10011fb4:	00bfff04 	movi	r2,-4
10011fb8:	1884703a 	and	r2,r3,r2
10011fbc:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
10011fc0:	d0e00e17 	ldw	r3,-32712(gp)
10011fc4:	e0bfff17 	ldw	r2,-4(fp)
10011fc8:	1887883a 	add	r3,r3,r2
10011fcc:	00860034 	movhi	r2,6144
10011fd0:	10800004 	addi	r2,r2,0
10011fd4:	10c0062e 	bgeu	r2,r3,10011ff0 <sbrk+0x74>
10011fd8:	e0bffb17 	ldw	r2,-20(fp)
10011fdc:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10011fe0:	e0bffa17 	ldw	r2,-24(fp)
10011fe4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
10011fe8:	00bfffc4 	movi	r2,-1
10011fec:	00000b06 	br	1001201c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
10011ff0:	d0a00e17 	ldw	r2,-32712(gp)
10011ff4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
10011ff8:	d0e00e17 	ldw	r3,-32712(gp)
10011ffc:	e0bfff17 	ldw	r2,-4(fp)
10012000:	1885883a 	add	r2,r3,r2
10012004:	d0a00e15 	stw	r2,-32712(gp)
10012008:	e0bffb17 	ldw	r2,-20(fp)
1001200c:	e0bffc15 	stw	r2,-16(fp)
10012010:	e0bffc17 	ldw	r2,-16(fp)
10012014:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
10012018:	e0bffd17 	ldw	r2,-12(fp)
} 
1001201c:	e037883a 	mov	sp,fp
10012020:	df000017 	ldw	fp,0(sp)
10012024:	dec00104 	addi	sp,sp,4
10012028:	f800283a 	ret

1001202c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
1001202c:	defffd04 	addi	sp,sp,-12
10012030:	dfc00215 	stw	ra,8(sp)
10012034:	df000115 	stw	fp,4(sp)
10012038:	df000104 	addi	fp,sp,4
1001203c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
10012040:	e13fff17 	ldw	r4,-4(fp)
10012044:	0012de40 	call	10012de4 <alt_busy_sleep>
}
10012048:	e037883a 	mov	sp,fp
1001204c:	dfc00117 	ldw	ra,4(sp)
10012050:	df000017 	ldw	fp,0(sp)
10012054:	dec00204 	addi	sp,sp,8
10012058:	f800283a 	ret

1001205c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1001205c:	defffe04 	addi	sp,sp,-8
10012060:	dfc00115 	stw	ra,4(sp)
10012064:	df000015 	stw	fp,0(sp)
10012068:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1001206c:	d0a00d17 	ldw	r2,-32716(gp)
10012070:	10000326 	beq	r2,zero,10012080 <alt_get_errno+0x24>
10012074:	d0a00d17 	ldw	r2,-32716(gp)
10012078:	103ee83a 	callr	r2
1001207c:	00000106 	br	10012084 <alt_get_errno+0x28>
10012080:	d0a78d04 	addi	r2,gp,-25036
}
10012084:	e037883a 	mov	sp,fp
10012088:	dfc00117 	ldw	ra,4(sp)
1001208c:	df000017 	ldw	fp,0(sp)
10012090:	dec00204 	addi	sp,sp,8
10012094:	f800283a 	ret

10012098 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
10012098:	defff904 	addi	sp,sp,-28
1001209c:	dfc00615 	stw	ra,24(sp)
100120a0:	df000515 	stw	fp,20(sp)
100120a4:	df000504 	addi	fp,sp,20
100120a8:	e13ffd15 	stw	r4,-12(fp)
100120ac:	e17ffe15 	stw	r5,-8(fp)
100120b0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
100120b4:	e0bffd17 	ldw	r2,-12(fp)
100120b8:	10000816 	blt	r2,zero,100120dc <write+0x44>
100120bc:	01400304 	movi	r5,12
100120c0:	e13ffd17 	ldw	r4,-12(fp)
100120c4:	0000fd00 	call	10000fd0 <__mulsi3>
100120c8:	1007883a 	mov	r3,r2
100120cc:	00840074 	movhi	r2,4097
100120d0:	1093fb04 	addi	r2,r2,20460
100120d4:	1885883a 	add	r2,r3,r2
100120d8:	00000106 	br	100120e0 <write+0x48>
100120dc:	0005883a 	mov	r2,zero
100120e0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
100120e4:	e0bffb17 	ldw	r2,-20(fp)
100120e8:	10002126 	beq	r2,zero,10012170 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
100120ec:	e0bffb17 	ldw	r2,-20(fp)
100120f0:	10800217 	ldw	r2,8(r2)
100120f4:	108000cc 	andi	r2,r2,3
100120f8:	10001826 	beq	r2,zero,1001215c <write+0xc4>
100120fc:	e0bffb17 	ldw	r2,-20(fp)
10012100:	10800017 	ldw	r2,0(r2)
10012104:	10800617 	ldw	r2,24(r2)
10012108:	10001426 	beq	r2,zero,1001215c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1001210c:	e0bffb17 	ldw	r2,-20(fp)
10012110:	10800017 	ldw	r2,0(r2)
10012114:	10800617 	ldw	r2,24(r2)
10012118:	e0ffff17 	ldw	r3,-4(fp)
1001211c:	180d883a 	mov	r6,r3
10012120:	e17ffe17 	ldw	r5,-8(fp)
10012124:	e13ffb17 	ldw	r4,-20(fp)
10012128:	103ee83a 	callr	r2
1001212c:	e0bffc15 	stw	r2,-16(fp)
10012130:	e0bffc17 	ldw	r2,-16(fp)
10012134:	1000070e 	bge	r2,zero,10012154 <write+0xbc>
      {
        ALT_ERRNO = -rval;
10012138:	001205c0 	call	1001205c <alt_get_errno>
1001213c:	1007883a 	mov	r3,r2
10012140:	e0bffc17 	ldw	r2,-16(fp)
10012144:	0085c83a 	sub	r2,zero,r2
10012148:	18800015 	stw	r2,0(r3)
        return -1;
1001214c:	00bfffc4 	movi	r2,-1
10012150:	00000c06 	br	10012184 <write+0xec>
      }
      return rval;
10012154:	e0bffc17 	ldw	r2,-16(fp)
10012158:	00000a06 	br	10012184 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
1001215c:	001205c0 	call	1001205c <alt_get_errno>
10012160:	1007883a 	mov	r3,r2
10012164:	00800344 	movi	r2,13
10012168:	18800015 	stw	r2,0(r3)
1001216c:	00000406 	br	10012180 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
10012170:	001205c0 	call	1001205c <alt_get_errno>
10012174:	1007883a 	mov	r3,r2
10012178:	00801444 	movi	r2,81
1001217c:	18800015 	stw	r2,0(r3)
  }
  return -1;
10012180:	00bfffc4 	movi	r2,-1
}
10012184:	e037883a 	mov	sp,fp
10012188:	dfc00117 	ldw	ra,4(sp)
1001218c:	df000017 	ldw	fp,0(sp)
10012190:	dec00204 	addi	sp,sp,8
10012194:	f800283a 	ret

10012198 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
10012198:	defffd04 	addi	sp,sp,-12
1001219c:	dfc00215 	stw	ra,8(sp)
100121a0:	df000115 	stw	fp,4(sp)
100121a4:	df000104 	addi	fp,sp,4
100121a8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
100121ac:	d1600a04 	addi	r5,gp,-32728
100121b0:	e13fff17 	ldw	r4,-4(fp)
100121b4:	0012f980 	call	10012f98 <alt_dev_llist_insert>
}
100121b8:	e037883a 	mov	sp,fp
100121bc:	dfc00117 	ldw	ra,4(sp)
100121c0:	df000017 	ldw	fp,0(sp)
100121c4:	dec00204 	addi	sp,sp,8
100121c8:	f800283a 	ret

100121cc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
100121cc:	defffd04 	addi	sp,sp,-12
100121d0:	dfc00215 	stw	ra,8(sp)
100121d4:	df000115 	stw	fp,4(sp)
100121d8:	df000104 	addi	fp,sp,4
100121dc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
100121e0:	00139440 	call	10013944 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
100121e4:	00800044 	movi	r2,1
100121e8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
100121ec:	0001883a 	nop
100121f0:	e037883a 	mov	sp,fp
100121f4:	dfc00117 	ldw	ra,4(sp)
100121f8:	df000017 	ldw	fp,0(sp)
100121fc:	dec00204 	addi	sp,sp,8
10012200:	f800283a 	ret

10012204 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
10012204:	defffe04 	addi	sp,sp,-8
10012208:	dfc00115 	stw	ra,4(sp)
1001220c:	df000015 	stw	fp,0(sp)
10012210:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
10012214:	01800144 	movi	r6,5
10012218:	000b883a 	mov	r5,zero
1001221c:	01040074 	movhi	r4,4097
10012220:	21146504 	addi	r4,r4,20884
10012224:	00123b40 	call	100123b4 <altera_avalon_jtag_uart_init>
10012228:	01040074 	movhi	r4,4097
1001222c:	21145b04 	addi	r4,r4,20844
10012230:	00121980 	call	10012198 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
10012234:	0001883a 	nop
}
10012238:	0001883a 	nop
1001223c:	e037883a 	mov	sp,fp
10012240:	dfc00117 	ldw	ra,4(sp)
10012244:	df000017 	ldw	fp,0(sp)
10012248:	dec00204 	addi	sp,sp,8
1001224c:	f800283a 	ret

10012250 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
10012250:	defffa04 	addi	sp,sp,-24
10012254:	dfc00515 	stw	ra,20(sp)
10012258:	df000415 	stw	fp,16(sp)
1001225c:	df000404 	addi	fp,sp,16
10012260:	e13ffd15 	stw	r4,-12(fp)
10012264:	e17ffe15 	stw	r5,-8(fp)
10012268:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001226c:	e0bffd17 	ldw	r2,-12(fp)
10012270:	10800017 	ldw	r2,0(r2)
10012274:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
10012278:	e0bffc17 	ldw	r2,-16(fp)
1001227c:	10c00a04 	addi	r3,r2,40
10012280:	e0bffd17 	ldw	r2,-12(fp)
10012284:	10800217 	ldw	r2,8(r2)
10012288:	100f883a 	mov	r7,r2
1001228c:	e1bfff17 	ldw	r6,-4(fp)
10012290:	e17ffe17 	ldw	r5,-8(fp)
10012294:	1809883a 	mov	r4,r3
10012298:	00128780 	call	10012878 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1001229c:	e037883a 	mov	sp,fp
100122a0:	dfc00117 	ldw	ra,4(sp)
100122a4:	df000017 	ldw	fp,0(sp)
100122a8:	dec00204 	addi	sp,sp,8
100122ac:	f800283a 	ret

100122b0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
100122b0:	defffa04 	addi	sp,sp,-24
100122b4:	dfc00515 	stw	ra,20(sp)
100122b8:	df000415 	stw	fp,16(sp)
100122bc:	df000404 	addi	fp,sp,16
100122c0:	e13ffd15 	stw	r4,-12(fp)
100122c4:	e17ffe15 	stw	r5,-8(fp)
100122c8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
100122cc:	e0bffd17 	ldw	r2,-12(fp)
100122d0:	10800017 	ldw	r2,0(r2)
100122d4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
100122d8:	e0bffc17 	ldw	r2,-16(fp)
100122dc:	10c00a04 	addi	r3,r2,40
100122e0:	e0bffd17 	ldw	r2,-12(fp)
100122e4:	10800217 	ldw	r2,8(r2)
100122e8:	100f883a 	mov	r7,r2
100122ec:	e1bfff17 	ldw	r6,-4(fp)
100122f0:	e17ffe17 	ldw	r5,-8(fp)
100122f4:	1809883a 	mov	r4,r3
100122f8:	0012a940 	call	10012a94 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
100122fc:	e037883a 	mov	sp,fp
10012300:	dfc00117 	ldw	ra,4(sp)
10012304:	df000017 	ldw	fp,0(sp)
10012308:	dec00204 	addi	sp,sp,8
1001230c:	f800283a 	ret

10012310 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
10012310:	defffc04 	addi	sp,sp,-16
10012314:	dfc00315 	stw	ra,12(sp)
10012318:	df000215 	stw	fp,8(sp)
1001231c:	df000204 	addi	fp,sp,8
10012320:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10012324:	e0bfff17 	ldw	r2,-4(fp)
10012328:	10800017 	ldw	r2,0(r2)
1001232c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
10012330:	e0bffe17 	ldw	r2,-8(fp)
10012334:	10c00a04 	addi	r3,r2,40
10012338:	e0bfff17 	ldw	r2,-4(fp)
1001233c:	10800217 	ldw	r2,8(r2)
10012340:	100b883a 	mov	r5,r2
10012344:	1809883a 	mov	r4,r3
10012348:	00127200 	call	10012720 <altera_avalon_jtag_uart_close>
}
1001234c:	e037883a 	mov	sp,fp
10012350:	dfc00117 	ldw	ra,4(sp)
10012354:	df000017 	ldw	fp,0(sp)
10012358:	dec00204 	addi	sp,sp,8
1001235c:	f800283a 	ret

10012360 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
10012360:	defffa04 	addi	sp,sp,-24
10012364:	dfc00515 	stw	ra,20(sp)
10012368:	df000415 	stw	fp,16(sp)
1001236c:	df000404 	addi	fp,sp,16
10012370:	e13ffd15 	stw	r4,-12(fp)
10012374:	e17ffe15 	stw	r5,-8(fp)
10012378:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1001237c:	e0bffd17 	ldw	r2,-12(fp)
10012380:	10800017 	ldw	r2,0(r2)
10012384:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
10012388:	e0bffc17 	ldw	r2,-16(fp)
1001238c:	10800a04 	addi	r2,r2,40
10012390:	e1bfff17 	ldw	r6,-4(fp)
10012394:	e17ffe17 	ldw	r5,-8(fp)
10012398:	1009883a 	mov	r4,r2
1001239c:	00127880 	call	10012788 <altera_avalon_jtag_uart_ioctl>
}
100123a0:	e037883a 	mov	sp,fp
100123a4:	dfc00117 	ldw	ra,4(sp)
100123a8:	df000017 	ldw	fp,0(sp)
100123ac:	dec00204 	addi	sp,sp,8
100123b0:	f800283a 	ret

100123b4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
100123b4:	defffa04 	addi	sp,sp,-24
100123b8:	dfc00515 	stw	ra,20(sp)
100123bc:	df000415 	stw	fp,16(sp)
100123c0:	df000404 	addi	fp,sp,16
100123c4:	e13ffd15 	stw	r4,-12(fp)
100123c8:	e17ffe15 	stw	r5,-8(fp)
100123cc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
100123d0:	e0bffd17 	ldw	r2,-12(fp)
100123d4:	00c00044 	movi	r3,1
100123d8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
100123dc:	e0bffd17 	ldw	r2,-12(fp)
100123e0:	10800017 	ldw	r2,0(r2)
100123e4:	10800104 	addi	r2,r2,4
100123e8:	1007883a 	mov	r3,r2
100123ec:	e0bffd17 	ldw	r2,-12(fp)
100123f0:	10800817 	ldw	r2,32(r2)
100123f4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
100123f8:	e0bffe17 	ldw	r2,-8(fp)
100123fc:	e0ffff17 	ldw	r3,-4(fp)
10012400:	d8000015 	stw	zero,0(sp)
10012404:	e1fffd17 	ldw	r7,-12(fp)
10012408:	01840074 	movhi	r6,4097
1001240c:	31891d04 	addi	r6,r6,9332
10012410:	180b883a 	mov	r5,r3
10012414:	1009883a 	mov	r4,r2
10012418:	001311c0 	call	1001311c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1001241c:	e0bffd17 	ldw	r2,-12(fp)
10012420:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
10012424:	e0bffd17 	ldw	r2,-12(fp)
10012428:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1001242c:	d0e79217 	ldw	r3,-25016(gp)
10012430:	e1fffd17 	ldw	r7,-12(fp)
10012434:	01840074 	movhi	r6,4097
10012438:	3189a004 	addi	r6,r6,9856
1001243c:	180b883a 	mov	r5,r3
10012440:	1009883a 	mov	r4,r2
10012444:	0012cb80 	call	10012cb8 <alt_alarm_start>
10012448:	1000040e 	bge	r2,zero,1001245c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1001244c:	e0fffd17 	ldw	r3,-12(fp)
10012450:	00a00034 	movhi	r2,32768
10012454:	10bfffc4 	addi	r2,r2,-1
10012458:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1001245c:	0001883a 	nop
10012460:	e037883a 	mov	sp,fp
10012464:	dfc00117 	ldw	ra,4(sp)
10012468:	df000017 	ldw	fp,0(sp)
1001246c:	dec00204 	addi	sp,sp,8
10012470:	f800283a 	ret

10012474 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
10012474:	defff804 	addi	sp,sp,-32
10012478:	df000715 	stw	fp,28(sp)
1001247c:	df000704 	addi	fp,sp,28
10012480:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
10012484:	e0bfff17 	ldw	r2,-4(fp)
10012488:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1001248c:	e0bffb17 	ldw	r2,-20(fp)
10012490:	10800017 	ldw	r2,0(r2)
10012494:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10012498:	e0bffc17 	ldw	r2,-16(fp)
1001249c:	10800104 	addi	r2,r2,4
100124a0:	10800037 	ldwio	r2,0(r2)
100124a4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
100124a8:	e0bffd17 	ldw	r2,-12(fp)
100124ac:	1080c00c 	andi	r2,r2,768
100124b0:	10006d26 	beq	r2,zero,10012668 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
100124b4:	e0bffd17 	ldw	r2,-12(fp)
100124b8:	1080400c 	andi	r2,r2,256
100124bc:	10003526 	beq	r2,zero,10012594 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
100124c0:	00800074 	movhi	r2,1
100124c4:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100124c8:	e0bffb17 	ldw	r2,-20(fp)
100124cc:	10800a17 	ldw	r2,40(r2)
100124d0:	10800044 	addi	r2,r2,1
100124d4:	1081ffcc 	andi	r2,r2,2047
100124d8:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
100124dc:	e0bffb17 	ldw	r2,-20(fp)
100124e0:	10c00b17 	ldw	r3,44(r2)
100124e4:	e0bffe17 	ldw	r2,-8(fp)
100124e8:	18801526 	beq	r3,r2,10012540 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
100124ec:	e0bffc17 	ldw	r2,-16(fp)
100124f0:	10800037 	ldwio	r2,0(r2)
100124f4:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
100124f8:	e0bff917 	ldw	r2,-28(fp)
100124fc:	10a0000c 	andi	r2,r2,32768
10012500:	10001126 	beq	r2,zero,10012548 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
10012504:	e0bffb17 	ldw	r2,-20(fp)
10012508:	10800a17 	ldw	r2,40(r2)
1001250c:	e0fff917 	ldw	r3,-28(fp)
10012510:	1809883a 	mov	r4,r3
10012514:	e0fffb17 	ldw	r3,-20(fp)
10012518:	1885883a 	add	r2,r3,r2
1001251c:	10800e04 	addi	r2,r2,56
10012520:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10012524:	e0bffb17 	ldw	r2,-20(fp)
10012528:	10800a17 	ldw	r2,40(r2)
1001252c:	10800044 	addi	r2,r2,1
10012530:	10c1ffcc 	andi	r3,r2,2047
10012534:	e0bffb17 	ldw	r2,-20(fp)
10012538:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1001253c:	003fe206 	br	100124c8 <__alt_data_end+0xf80124c8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
10012540:	0001883a 	nop
10012544:	00000106 	br	1001254c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
10012548:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1001254c:	e0bff917 	ldw	r2,-28(fp)
10012550:	10bfffec 	andhi	r2,r2,65535
10012554:	10000f26 	beq	r2,zero,10012594 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10012558:	e0bffb17 	ldw	r2,-20(fp)
1001255c:	10c00817 	ldw	r3,32(r2)
10012560:	00bfff84 	movi	r2,-2
10012564:	1886703a 	and	r3,r3,r2
10012568:	e0bffb17 	ldw	r2,-20(fp)
1001256c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
10012570:	e0bffc17 	ldw	r2,-16(fp)
10012574:	10800104 	addi	r2,r2,4
10012578:	1007883a 	mov	r3,r2
1001257c:	e0bffb17 	ldw	r2,-20(fp)
10012580:	10800817 	ldw	r2,32(r2)
10012584:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10012588:	e0bffc17 	ldw	r2,-16(fp)
1001258c:	10800104 	addi	r2,r2,4
10012590:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
10012594:	e0bffd17 	ldw	r2,-12(fp)
10012598:	1080800c 	andi	r2,r2,512
1001259c:	103fbe26 	beq	r2,zero,10012498 <__alt_data_end+0xf8012498>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
100125a0:	e0bffd17 	ldw	r2,-12(fp)
100125a4:	1004d43a 	srli	r2,r2,16
100125a8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
100125ac:	00001406 	br	10012600 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
100125b0:	e0bffc17 	ldw	r2,-16(fp)
100125b4:	e0fffb17 	ldw	r3,-20(fp)
100125b8:	18c00d17 	ldw	r3,52(r3)
100125bc:	e13ffb17 	ldw	r4,-20(fp)
100125c0:	20c7883a 	add	r3,r4,r3
100125c4:	18c20e04 	addi	r3,r3,2104
100125c8:	18c00003 	ldbu	r3,0(r3)
100125cc:	18c03fcc 	andi	r3,r3,255
100125d0:	18c0201c 	xori	r3,r3,128
100125d4:	18ffe004 	addi	r3,r3,-128
100125d8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100125dc:	e0bffb17 	ldw	r2,-20(fp)
100125e0:	10800d17 	ldw	r2,52(r2)
100125e4:	10800044 	addi	r2,r2,1
100125e8:	10c1ffcc 	andi	r3,r2,2047
100125ec:	e0bffb17 	ldw	r2,-20(fp)
100125f0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
100125f4:	e0bffa17 	ldw	r2,-24(fp)
100125f8:	10bfffc4 	addi	r2,r2,-1
100125fc:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
10012600:	e0bffa17 	ldw	r2,-24(fp)
10012604:	10000526 	beq	r2,zero,1001261c <altera_avalon_jtag_uart_irq+0x1a8>
10012608:	e0bffb17 	ldw	r2,-20(fp)
1001260c:	10c00d17 	ldw	r3,52(r2)
10012610:	e0bffb17 	ldw	r2,-20(fp)
10012614:	10800c17 	ldw	r2,48(r2)
10012618:	18bfe51e 	bne	r3,r2,100125b0 <__alt_data_end+0xf80125b0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1001261c:	e0bffa17 	ldw	r2,-24(fp)
10012620:	103f9d26 	beq	r2,zero,10012498 <__alt_data_end+0xf8012498>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10012624:	e0bffb17 	ldw	r2,-20(fp)
10012628:	10c00817 	ldw	r3,32(r2)
1001262c:	00bfff44 	movi	r2,-3
10012630:	1886703a 	and	r3,r3,r2
10012634:	e0bffb17 	ldw	r2,-20(fp)
10012638:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1001263c:	e0bffb17 	ldw	r2,-20(fp)
10012640:	10800017 	ldw	r2,0(r2)
10012644:	10800104 	addi	r2,r2,4
10012648:	1007883a 	mov	r3,r2
1001264c:	e0bffb17 	ldw	r2,-20(fp)
10012650:	10800817 	ldw	r2,32(r2)
10012654:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10012658:	e0bffc17 	ldw	r2,-16(fp)
1001265c:	10800104 	addi	r2,r2,4
10012660:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
10012664:	003f8c06 	br	10012498 <__alt_data_end+0xf8012498>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
10012668:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1001266c:	0001883a 	nop
10012670:	e037883a 	mov	sp,fp
10012674:	df000017 	ldw	fp,0(sp)
10012678:	dec00104 	addi	sp,sp,4
1001267c:	f800283a 	ret

10012680 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
10012680:	defff804 	addi	sp,sp,-32
10012684:	df000715 	stw	fp,28(sp)
10012688:	df000704 	addi	fp,sp,28
1001268c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
10012690:	e0bffb17 	ldw	r2,-20(fp)
10012694:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
10012698:	e0bff917 	ldw	r2,-28(fp)
1001269c:	10800017 	ldw	r2,0(r2)
100126a0:	10800104 	addi	r2,r2,4
100126a4:	10800037 	ldwio	r2,0(r2)
100126a8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
100126ac:	e0bffa17 	ldw	r2,-24(fp)
100126b0:	1081000c 	andi	r2,r2,1024
100126b4:	10000b26 	beq	r2,zero,100126e4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
100126b8:	e0bff917 	ldw	r2,-28(fp)
100126bc:	10800017 	ldw	r2,0(r2)
100126c0:	10800104 	addi	r2,r2,4
100126c4:	1007883a 	mov	r3,r2
100126c8:	e0bff917 	ldw	r2,-28(fp)
100126cc:	10800817 	ldw	r2,32(r2)
100126d0:	10810014 	ori	r2,r2,1024
100126d4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
100126d8:	e0bff917 	ldw	r2,-28(fp)
100126dc:	10000915 	stw	zero,36(r2)
100126e0:	00000a06 	br	1001270c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
100126e4:	e0bff917 	ldw	r2,-28(fp)
100126e8:	10c00917 	ldw	r3,36(r2)
100126ec:	00a00034 	movhi	r2,32768
100126f0:	10bfff04 	addi	r2,r2,-4
100126f4:	10c00536 	bltu	r2,r3,1001270c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
100126f8:	e0bff917 	ldw	r2,-28(fp)
100126fc:	10800917 	ldw	r2,36(r2)
10012700:	10c00044 	addi	r3,r2,1
10012704:	e0bff917 	ldw	r2,-28(fp)
10012708:	10c00915 	stw	r3,36(r2)
1001270c:	d0a79217 	ldw	r2,-25016(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
10012710:	e037883a 	mov	sp,fp
10012714:	df000017 	ldw	fp,0(sp)
10012718:	dec00104 	addi	sp,sp,4
1001271c:	f800283a 	ret

10012720 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
10012720:	defffd04 	addi	sp,sp,-12
10012724:	df000215 	stw	fp,8(sp)
10012728:	df000204 	addi	fp,sp,8
1001272c:	e13ffe15 	stw	r4,-8(fp)
10012730:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10012734:	00000506 	br	1001274c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
10012738:	e0bfff17 	ldw	r2,-4(fp)
1001273c:	1090000c 	andi	r2,r2,16384
10012740:	10000226 	beq	r2,zero,1001274c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
10012744:	00bffd44 	movi	r2,-11
10012748:	00000b06 	br	10012778 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1001274c:	e0bffe17 	ldw	r2,-8(fp)
10012750:	10c00d17 	ldw	r3,52(r2)
10012754:	e0bffe17 	ldw	r2,-8(fp)
10012758:	10800c17 	ldw	r2,48(r2)
1001275c:	18800526 	beq	r3,r2,10012774 <altera_avalon_jtag_uart_close+0x54>
10012760:	e0bffe17 	ldw	r2,-8(fp)
10012764:	10c00917 	ldw	r3,36(r2)
10012768:	e0bffe17 	ldw	r2,-8(fp)
1001276c:	10800117 	ldw	r2,4(r2)
10012770:	18bff136 	bltu	r3,r2,10012738 <__alt_data_end+0xf8012738>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
10012774:	0005883a 	mov	r2,zero
}
10012778:	e037883a 	mov	sp,fp
1001277c:	df000017 	ldw	fp,0(sp)
10012780:	dec00104 	addi	sp,sp,4
10012784:	f800283a 	ret

10012788 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
10012788:	defffa04 	addi	sp,sp,-24
1001278c:	df000515 	stw	fp,20(sp)
10012790:	df000504 	addi	fp,sp,20
10012794:	e13ffd15 	stw	r4,-12(fp)
10012798:	e17ffe15 	stw	r5,-8(fp)
1001279c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
100127a0:	00bff9c4 	movi	r2,-25
100127a4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
100127a8:	e0bffe17 	ldw	r2,-8(fp)
100127ac:	10da8060 	cmpeqi	r3,r2,27137
100127b0:	1800031e 	bne	r3,zero,100127c0 <altera_avalon_jtag_uart_ioctl+0x38>
100127b4:	109a80a0 	cmpeqi	r2,r2,27138
100127b8:	1000181e 	bne	r2,zero,1001281c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
100127bc:	00002906 	br	10012864 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
100127c0:	e0bffd17 	ldw	r2,-12(fp)
100127c4:	10c00117 	ldw	r3,4(r2)
100127c8:	00a00034 	movhi	r2,32768
100127cc:	10bfffc4 	addi	r2,r2,-1
100127d0:	18802126 	beq	r3,r2,10012858 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
100127d4:	e0bfff17 	ldw	r2,-4(fp)
100127d8:	10800017 	ldw	r2,0(r2)
100127dc:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
100127e0:	e0bffc17 	ldw	r2,-16(fp)
100127e4:	10800090 	cmplti	r2,r2,2
100127e8:	1000061e 	bne	r2,zero,10012804 <altera_avalon_jtag_uart_ioctl+0x7c>
100127ec:	e0fffc17 	ldw	r3,-16(fp)
100127f0:	00a00034 	movhi	r2,32768
100127f4:	10bfffc4 	addi	r2,r2,-1
100127f8:	18800226 	beq	r3,r2,10012804 <altera_avalon_jtag_uart_ioctl+0x7c>
100127fc:	e0bffc17 	ldw	r2,-16(fp)
10012800:	00000206 	br	1001280c <altera_avalon_jtag_uart_ioctl+0x84>
10012804:	00a00034 	movhi	r2,32768
10012808:	10bfff84 	addi	r2,r2,-2
1001280c:	e0fffd17 	ldw	r3,-12(fp)
10012810:	18800115 	stw	r2,4(r3)
      rc = 0;
10012814:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
10012818:	00000f06 	br	10012858 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1001281c:	e0bffd17 	ldw	r2,-12(fp)
10012820:	10c00117 	ldw	r3,4(r2)
10012824:	00a00034 	movhi	r2,32768
10012828:	10bfffc4 	addi	r2,r2,-1
1001282c:	18800c26 	beq	r3,r2,10012860 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
10012830:	e0bffd17 	ldw	r2,-12(fp)
10012834:	10c00917 	ldw	r3,36(r2)
10012838:	e0bffd17 	ldw	r2,-12(fp)
1001283c:	10800117 	ldw	r2,4(r2)
10012840:	1885803a 	cmpltu	r2,r3,r2
10012844:	10c03fcc 	andi	r3,r2,255
10012848:	e0bfff17 	ldw	r2,-4(fp)
1001284c:	10c00015 	stw	r3,0(r2)
      rc = 0;
10012850:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
10012854:	00000206 	br	10012860 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
10012858:	0001883a 	nop
1001285c:	00000106 	br	10012864 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
10012860:	0001883a 	nop

  default:
    break;
  }

  return rc;
10012864:	e0bffb17 	ldw	r2,-20(fp)
}
10012868:	e037883a 	mov	sp,fp
1001286c:	df000017 	ldw	fp,0(sp)
10012870:	dec00104 	addi	sp,sp,4
10012874:	f800283a 	ret

10012878 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
10012878:	defff304 	addi	sp,sp,-52
1001287c:	dfc00c15 	stw	ra,48(sp)
10012880:	df000b15 	stw	fp,44(sp)
10012884:	df000b04 	addi	fp,sp,44
10012888:	e13ffc15 	stw	r4,-16(fp)
1001288c:	e17ffd15 	stw	r5,-12(fp)
10012890:	e1bffe15 	stw	r6,-8(fp)
10012894:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
10012898:	e0bffd17 	ldw	r2,-12(fp)
1001289c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
100128a0:	00004706 	br	100129c0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
100128a4:	e0bffc17 	ldw	r2,-16(fp)
100128a8:	10800a17 	ldw	r2,40(r2)
100128ac:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
100128b0:	e0bffc17 	ldw	r2,-16(fp)
100128b4:	10800b17 	ldw	r2,44(r2)
100128b8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
100128bc:	e0fff717 	ldw	r3,-36(fp)
100128c0:	e0bff817 	ldw	r2,-32(fp)
100128c4:	18800536 	bltu	r3,r2,100128dc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
100128c8:	e0fff717 	ldw	r3,-36(fp)
100128cc:	e0bff817 	ldw	r2,-32(fp)
100128d0:	1885c83a 	sub	r2,r3,r2
100128d4:	e0bff615 	stw	r2,-40(fp)
100128d8:	00000406 	br	100128ec <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
100128dc:	00c20004 	movi	r3,2048
100128e0:	e0bff817 	ldw	r2,-32(fp)
100128e4:	1885c83a 	sub	r2,r3,r2
100128e8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
100128ec:	e0bff617 	ldw	r2,-40(fp)
100128f0:	10001e26 	beq	r2,zero,1001296c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
100128f4:	e0fffe17 	ldw	r3,-8(fp)
100128f8:	e0bff617 	ldw	r2,-40(fp)
100128fc:	1880022e 	bgeu	r3,r2,10012908 <altera_avalon_jtag_uart_read+0x90>
        n = space;
10012900:	e0bffe17 	ldw	r2,-8(fp)
10012904:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
10012908:	e0bffc17 	ldw	r2,-16(fp)
1001290c:	10c00e04 	addi	r3,r2,56
10012910:	e0bff817 	ldw	r2,-32(fp)
10012914:	1885883a 	add	r2,r3,r2
10012918:	e1bff617 	ldw	r6,-40(fp)
1001291c:	100b883a 	mov	r5,r2
10012920:	e13ff517 	ldw	r4,-44(fp)
10012924:	0008fe80 	call	10008fe8 <memcpy>
      ptr   += n;
10012928:	e0fff517 	ldw	r3,-44(fp)
1001292c:	e0bff617 	ldw	r2,-40(fp)
10012930:	1885883a 	add	r2,r3,r2
10012934:	e0bff515 	stw	r2,-44(fp)
      space -= n;
10012938:	e0fffe17 	ldw	r3,-8(fp)
1001293c:	e0bff617 	ldw	r2,-40(fp)
10012940:	1885c83a 	sub	r2,r3,r2
10012944:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10012948:	e0fff817 	ldw	r3,-32(fp)
1001294c:	e0bff617 	ldw	r2,-40(fp)
10012950:	1885883a 	add	r2,r3,r2
10012954:	10c1ffcc 	andi	r3,r2,2047
10012958:	e0bffc17 	ldw	r2,-16(fp)
1001295c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
10012960:	e0bffe17 	ldw	r2,-8(fp)
10012964:	00bfcf16 	blt	zero,r2,100128a4 <__alt_data_end+0xf80128a4>
10012968:	00000106 	br	10012970 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1001296c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
10012970:	e0fff517 	ldw	r3,-44(fp)
10012974:	e0bffd17 	ldw	r2,-12(fp)
10012978:	1880141e 	bne	r3,r2,100129cc <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1001297c:	e0bfff17 	ldw	r2,-4(fp)
10012980:	1090000c 	andi	r2,r2,16384
10012984:	1000131e 	bne	r2,zero,100129d4 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
10012988:	0001883a 	nop
1001298c:	e0bffc17 	ldw	r2,-16(fp)
10012990:	10c00a17 	ldw	r3,40(r2)
10012994:	e0bff717 	ldw	r2,-36(fp)
10012998:	1880051e 	bne	r3,r2,100129b0 <altera_avalon_jtag_uart_read+0x138>
1001299c:	e0bffc17 	ldw	r2,-16(fp)
100129a0:	10c00917 	ldw	r3,36(r2)
100129a4:	e0bffc17 	ldw	r2,-16(fp)
100129a8:	10800117 	ldw	r2,4(r2)
100129ac:	18bff736 	bltu	r3,r2,1001298c <__alt_data_end+0xf801298c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
100129b0:	e0bffc17 	ldw	r2,-16(fp)
100129b4:	10c00a17 	ldw	r3,40(r2)
100129b8:	e0bff717 	ldw	r2,-36(fp)
100129bc:	18800726 	beq	r3,r2,100129dc <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
100129c0:	e0bffe17 	ldw	r2,-8(fp)
100129c4:	00bfb716 	blt	zero,r2,100128a4 <__alt_data_end+0xf80128a4>
100129c8:	00000506 	br	100129e0 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
100129cc:	0001883a 	nop
100129d0:	00000306 	br	100129e0 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
100129d4:	0001883a 	nop
100129d8:	00000106 	br	100129e0 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
100129dc:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
100129e0:	e0fff517 	ldw	r3,-44(fp)
100129e4:	e0bffd17 	ldw	r2,-12(fp)
100129e8:	18801826 	beq	r3,r2,10012a4c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
100129ec:	0005303a 	rdctl	r2,status
100129f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100129f4:	e0fffb17 	ldw	r3,-20(fp)
100129f8:	00bfff84 	movi	r2,-2
100129fc:	1884703a 	and	r2,r3,r2
10012a00:	1001703a 	wrctl	status,r2
  
  return context;
10012a04:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
10012a08:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10012a0c:	e0bffc17 	ldw	r2,-16(fp)
10012a10:	10800817 	ldw	r2,32(r2)
10012a14:	10c00054 	ori	r3,r2,1
10012a18:	e0bffc17 	ldw	r2,-16(fp)
10012a1c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10012a20:	e0bffc17 	ldw	r2,-16(fp)
10012a24:	10800017 	ldw	r2,0(r2)
10012a28:	10800104 	addi	r2,r2,4
10012a2c:	1007883a 	mov	r3,r2
10012a30:	e0bffc17 	ldw	r2,-16(fp)
10012a34:	10800817 	ldw	r2,32(r2)
10012a38:	18800035 	stwio	r2,0(r3)
10012a3c:	e0bffa17 	ldw	r2,-24(fp)
10012a40:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012a44:	e0bff917 	ldw	r2,-28(fp)
10012a48:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
10012a4c:	e0fff517 	ldw	r3,-44(fp)
10012a50:	e0bffd17 	ldw	r2,-12(fp)
10012a54:	18800426 	beq	r3,r2,10012a68 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
10012a58:	e0fff517 	ldw	r3,-44(fp)
10012a5c:	e0bffd17 	ldw	r2,-12(fp)
10012a60:	1885c83a 	sub	r2,r3,r2
10012a64:	00000606 	br	10012a80 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
10012a68:	e0bfff17 	ldw	r2,-4(fp)
10012a6c:	1090000c 	andi	r2,r2,16384
10012a70:	10000226 	beq	r2,zero,10012a7c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
10012a74:	00bffd44 	movi	r2,-11
10012a78:	00000106 	br	10012a80 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
10012a7c:	00bffec4 	movi	r2,-5
}
10012a80:	e037883a 	mov	sp,fp
10012a84:	dfc00117 	ldw	ra,4(sp)
10012a88:	df000017 	ldw	fp,0(sp)
10012a8c:	dec00204 	addi	sp,sp,8
10012a90:	f800283a 	ret

10012a94 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
10012a94:	defff304 	addi	sp,sp,-52
10012a98:	dfc00c15 	stw	ra,48(sp)
10012a9c:	df000b15 	stw	fp,44(sp)
10012aa0:	df000b04 	addi	fp,sp,44
10012aa4:	e13ffc15 	stw	r4,-16(fp)
10012aa8:	e17ffd15 	stw	r5,-12(fp)
10012aac:	e1bffe15 	stw	r6,-8(fp)
10012ab0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
10012ab4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
10012ab8:	e0bffd17 	ldw	r2,-12(fp)
10012abc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
10012ac0:	00003706 	br	10012ba0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
10012ac4:	e0bffc17 	ldw	r2,-16(fp)
10012ac8:	10800c17 	ldw	r2,48(r2)
10012acc:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
10012ad0:	e0bffc17 	ldw	r2,-16(fp)
10012ad4:	10800d17 	ldw	r2,52(r2)
10012ad8:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
10012adc:	e0fff917 	ldw	r3,-28(fp)
10012ae0:	e0bff517 	ldw	r2,-44(fp)
10012ae4:	1880062e 	bgeu	r3,r2,10012b00 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
10012ae8:	e0fff517 	ldw	r3,-44(fp)
10012aec:	e0bff917 	ldw	r2,-28(fp)
10012af0:	1885c83a 	sub	r2,r3,r2
10012af4:	10bfffc4 	addi	r2,r2,-1
10012af8:	e0bff615 	stw	r2,-40(fp)
10012afc:	00000b06 	br	10012b2c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
10012b00:	e0bff517 	ldw	r2,-44(fp)
10012b04:	10000526 	beq	r2,zero,10012b1c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
10012b08:	00c20004 	movi	r3,2048
10012b0c:	e0bff917 	ldw	r2,-28(fp)
10012b10:	1885c83a 	sub	r2,r3,r2
10012b14:	e0bff615 	stw	r2,-40(fp)
10012b18:	00000406 	br	10012b2c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
10012b1c:	00c1ffc4 	movi	r3,2047
10012b20:	e0bff917 	ldw	r2,-28(fp)
10012b24:	1885c83a 	sub	r2,r3,r2
10012b28:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
10012b2c:	e0bff617 	ldw	r2,-40(fp)
10012b30:	10001e26 	beq	r2,zero,10012bac <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
10012b34:	e0fffe17 	ldw	r3,-8(fp)
10012b38:	e0bff617 	ldw	r2,-40(fp)
10012b3c:	1880022e 	bgeu	r3,r2,10012b48 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
10012b40:	e0bffe17 	ldw	r2,-8(fp)
10012b44:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
10012b48:	e0bffc17 	ldw	r2,-16(fp)
10012b4c:	10c20e04 	addi	r3,r2,2104
10012b50:	e0bff917 	ldw	r2,-28(fp)
10012b54:	1885883a 	add	r2,r3,r2
10012b58:	e1bff617 	ldw	r6,-40(fp)
10012b5c:	e17ffd17 	ldw	r5,-12(fp)
10012b60:	1009883a 	mov	r4,r2
10012b64:	0008fe80 	call	10008fe8 <memcpy>
      ptr   += n;
10012b68:	e0fffd17 	ldw	r3,-12(fp)
10012b6c:	e0bff617 	ldw	r2,-40(fp)
10012b70:	1885883a 	add	r2,r3,r2
10012b74:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
10012b78:	e0fffe17 	ldw	r3,-8(fp)
10012b7c:	e0bff617 	ldw	r2,-40(fp)
10012b80:	1885c83a 	sub	r2,r3,r2
10012b84:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10012b88:	e0fff917 	ldw	r3,-28(fp)
10012b8c:	e0bff617 	ldw	r2,-40(fp)
10012b90:	1885883a 	add	r2,r3,r2
10012b94:	10c1ffcc 	andi	r3,r2,2047
10012b98:	e0bffc17 	ldw	r2,-16(fp)
10012b9c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
10012ba0:	e0bffe17 	ldw	r2,-8(fp)
10012ba4:	00bfc716 	blt	zero,r2,10012ac4 <__alt_data_end+0xf8012ac4>
10012ba8:	00000106 	br	10012bb0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
10012bac:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10012bb0:	0005303a 	rdctl	r2,status
10012bb4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10012bb8:	e0fffb17 	ldw	r3,-20(fp)
10012bbc:	00bfff84 	movi	r2,-2
10012bc0:	1884703a 	and	r2,r3,r2
10012bc4:	1001703a 	wrctl	status,r2
  
  return context;
10012bc8:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
10012bcc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10012bd0:	e0bffc17 	ldw	r2,-16(fp)
10012bd4:	10800817 	ldw	r2,32(r2)
10012bd8:	10c00094 	ori	r3,r2,2
10012bdc:	e0bffc17 	ldw	r2,-16(fp)
10012be0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10012be4:	e0bffc17 	ldw	r2,-16(fp)
10012be8:	10800017 	ldw	r2,0(r2)
10012bec:	10800104 	addi	r2,r2,4
10012bf0:	1007883a 	mov	r3,r2
10012bf4:	e0bffc17 	ldw	r2,-16(fp)
10012bf8:	10800817 	ldw	r2,32(r2)
10012bfc:	18800035 	stwio	r2,0(r3)
10012c00:	e0bffa17 	ldw	r2,-24(fp)
10012c04:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012c08:	e0bff817 	ldw	r2,-32(fp)
10012c0c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
10012c10:	e0bffe17 	ldw	r2,-8(fp)
10012c14:	0080100e 	bge	zero,r2,10012c58 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
10012c18:	e0bfff17 	ldw	r2,-4(fp)
10012c1c:	1090000c 	andi	r2,r2,16384
10012c20:	1000101e 	bne	r2,zero,10012c64 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
10012c24:	0001883a 	nop
10012c28:	e0bffc17 	ldw	r2,-16(fp)
10012c2c:	10c00d17 	ldw	r3,52(r2)
10012c30:	e0bff517 	ldw	r2,-44(fp)
10012c34:	1880051e 	bne	r3,r2,10012c4c <altera_avalon_jtag_uart_write+0x1b8>
10012c38:	e0bffc17 	ldw	r2,-16(fp)
10012c3c:	10c00917 	ldw	r3,36(r2)
10012c40:	e0bffc17 	ldw	r2,-16(fp)
10012c44:	10800117 	ldw	r2,4(r2)
10012c48:	18bff736 	bltu	r3,r2,10012c28 <__alt_data_end+0xf8012c28>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
10012c4c:	e0bffc17 	ldw	r2,-16(fp)
10012c50:	10800917 	ldw	r2,36(r2)
10012c54:	1000051e 	bne	r2,zero,10012c6c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
10012c58:	e0bffe17 	ldw	r2,-8(fp)
10012c5c:	00bfd016 	blt	zero,r2,10012ba0 <__alt_data_end+0xf8012ba0>
10012c60:	00000306 	br	10012c70 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
10012c64:	0001883a 	nop
10012c68:	00000106 	br	10012c70 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
10012c6c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
10012c70:	e0fffd17 	ldw	r3,-12(fp)
10012c74:	e0bff717 	ldw	r2,-36(fp)
10012c78:	18800426 	beq	r3,r2,10012c8c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
10012c7c:	e0fffd17 	ldw	r3,-12(fp)
10012c80:	e0bff717 	ldw	r2,-36(fp)
10012c84:	1885c83a 	sub	r2,r3,r2
10012c88:	00000606 	br	10012ca4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
10012c8c:	e0bfff17 	ldw	r2,-4(fp)
10012c90:	1090000c 	andi	r2,r2,16384
10012c94:	10000226 	beq	r2,zero,10012ca0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
10012c98:	00bffd44 	movi	r2,-11
10012c9c:	00000106 	br	10012ca4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
10012ca0:	00bffec4 	movi	r2,-5
}
10012ca4:	e037883a 	mov	sp,fp
10012ca8:	dfc00117 	ldw	ra,4(sp)
10012cac:	df000017 	ldw	fp,0(sp)
10012cb0:	dec00204 	addi	sp,sp,8
10012cb4:	f800283a 	ret

10012cb8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
10012cb8:	defff504 	addi	sp,sp,-44
10012cbc:	df000a15 	stw	fp,40(sp)
10012cc0:	df000a04 	addi	fp,sp,40
10012cc4:	e13ffc15 	stw	r4,-16(fp)
10012cc8:	e17ffd15 	stw	r5,-12(fp)
10012ccc:	e1bffe15 	stw	r6,-8(fp)
10012cd0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
10012cd4:	e03ff615 	stw	zero,-40(fp)
10012cd8:	d0a79217 	ldw	r2,-25016(gp)
  
  if (alt_ticks_per_second ())
10012cdc:	10003c26 	beq	r2,zero,10012dd0 <alt_alarm_start+0x118>
  {
    if (alarm)
10012ce0:	e0bffc17 	ldw	r2,-16(fp)
10012ce4:	10003826 	beq	r2,zero,10012dc8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
10012ce8:	e0bffc17 	ldw	r2,-16(fp)
10012cec:	e0fffe17 	ldw	r3,-8(fp)
10012cf0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
10012cf4:	e0bffc17 	ldw	r2,-16(fp)
10012cf8:	e0ffff17 	ldw	r3,-4(fp)
10012cfc:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10012d00:	0005303a 	rdctl	r2,status
10012d04:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10012d08:	e0fff917 	ldw	r3,-28(fp)
10012d0c:	00bfff84 	movi	r2,-2
10012d10:	1884703a 	and	r2,r3,r2
10012d14:	1001703a 	wrctl	status,r2
  
  return context;
10012d18:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
10012d1c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
10012d20:	d0a79317 	ldw	r2,-25012(gp)
      
      current_nticks = alt_nticks();
10012d24:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
10012d28:	e0fffd17 	ldw	r3,-12(fp)
10012d2c:	e0bff617 	ldw	r2,-40(fp)
10012d30:	1885883a 	add	r2,r3,r2
10012d34:	10c00044 	addi	r3,r2,1
10012d38:	e0bffc17 	ldw	r2,-16(fp)
10012d3c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
10012d40:	e0bffc17 	ldw	r2,-16(fp)
10012d44:	10c00217 	ldw	r3,8(r2)
10012d48:	e0bff617 	ldw	r2,-40(fp)
10012d4c:	1880042e 	bgeu	r3,r2,10012d60 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
10012d50:	e0bffc17 	ldw	r2,-16(fp)
10012d54:	00c00044 	movi	r3,1
10012d58:	10c00405 	stb	r3,16(r2)
10012d5c:	00000206 	br	10012d68 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
10012d60:	e0bffc17 	ldw	r2,-16(fp)
10012d64:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
10012d68:	e0bffc17 	ldw	r2,-16(fp)
10012d6c:	d0e01004 	addi	r3,gp,-32704
10012d70:	e0fffa15 	stw	r3,-24(fp)
10012d74:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10012d78:	e0bffb17 	ldw	r2,-20(fp)
10012d7c:	e0fffa17 	ldw	r3,-24(fp)
10012d80:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10012d84:	e0bffa17 	ldw	r2,-24(fp)
10012d88:	10c00017 	ldw	r3,0(r2)
10012d8c:	e0bffb17 	ldw	r2,-20(fp)
10012d90:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10012d94:	e0bffa17 	ldw	r2,-24(fp)
10012d98:	10800017 	ldw	r2,0(r2)
10012d9c:	e0fffb17 	ldw	r3,-20(fp)
10012da0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10012da4:	e0bffa17 	ldw	r2,-24(fp)
10012da8:	e0fffb17 	ldw	r3,-20(fp)
10012dac:	10c00015 	stw	r3,0(r2)
10012db0:	e0bff817 	ldw	r2,-32(fp)
10012db4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012db8:	e0bff717 	ldw	r2,-36(fp)
10012dbc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
10012dc0:	0005883a 	mov	r2,zero
10012dc4:	00000306 	br	10012dd4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
10012dc8:	00bffa84 	movi	r2,-22
10012dcc:	00000106 	br	10012dd4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
10012dd0:	00bfde84 	movi	r2,-134
  }
}
10012dd4:	e037883a 	mov	sp,fp
10012dd8:	df000017 	ldw	fp,0(sp)
10012ddc:	dec00104 	addi	sp,sp,4
10012de0:	f800283a 	ret

10012de4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
10012de4:	defffa04 	addi	sp,sp,-24
10012de8:	dfc00515 	stw	ra,20(sp)
10012dec:	df000415 	stw	fp,16(sp)
10012df0:	df000404 	addi	fp,sp,16
10012df4:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
10012df8:	00800244 	movi	r2,9
10012dfc:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
10012e00:	014003f4 	movhi	r5,15
10012e04:	29509004 	addi	r5,r5,16960
10012e08:	e13ffd17 	ldw	r4,-12(fp)
10012e0c:	0000fd00 	call	10000fd0 <__mulsi3>
10012e10:	100b883a 	mov	r5,r2
10012e14:	0100bef4 	movhi	r4,763
10012e18:	213c2004 	addi	r4,r4,-3968
10012e1c:	0000f140 	call	10000f14 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
10012e20:	100b883a 	mov	r5,r2
10012e24:	01200034 	movhi	r4,32768
10012e28:	213fffc4 	addi	r4,r4,-1
10012e2c:	0000f140 	call	10000f14 <__udivsi3>
10012e30:	100b883a 	mov	r5,r2
10012e34:	e13fff17 	ldw	r4,-4(fp)
10012e38:	0000f140 	call	10000f14 <__udivsi3>
10012e3c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
10012e40:	e0bffe17 	ldw	r2,-8(fp)
10012e44:	10002a26 	beq	r2,zero,10012ef0 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
10012e48:	e03ffc15 	stw	zero,-16(fp)
10012e4c:	00001706 	br	10012eac <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
10012e50:	00a00034 	movhi	r2,32768
10012e54:	10bfffc4 	addi	r2,r2,-1
10012e58:	10bfffc4 	addi	r2,r2,-1
10012e5c:	103ffe1e 	bne	r2,zero,10012e58 <__alt_data_end+0xf8012e58>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
10012e60:	014003f4 	movhi	r5,15
10012e64:	29509004 	addi	r5,r5,16960
10012e68:	e13ffd17 	ldw	r4,-12(fp)
10012e6c:	0000fd00 	call	10000fd0 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
10012e70:	100b883a 	mov	r5,r2
10012e74:	0100bef4 	movhi	r4,763
10012e78:	213c2004 	addi	r4,r4,-3968
10012e7c:	0000f140 	call	10000f14 <__udivsi3>
10012e80:	100b883a 	mov	r5,r2
10012e84:	01200034 	movhi	r4,32768
10012e88:	213fffc4 	addi	r4,r4,-1
10012e8c:	0000f140 	call	10000f14 <__udivsi3>
10012e90:	1007883a 	mov	r3,r2
10012e94:	e0bfff17 	ldw	r2,-4(fp)
10012e98:	10c5c83a 	sub	r2,r2,r3
10012e9c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
10012ea0:	e0bffc17 	ldw	r2,-16(fp)
10012ea4:	10800044 	addi	r2,r2,1
10012ea8:	e0bffc15 	stw	r2,-16(fp)
10012eac:	e0fffc17 	ldw	r3,-16(fp)
10012eb0:	e0bffe17 	ldw	r2,-8(fp)
10012eb4:	18bfe616 	blt	r3,r2,10012e50 <__alt_data_end+0xf8012e50>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
10012eb8:	014003f4 	movhi	r5,15
10012ebc:	29509004 	addi	r5,r5,16960
10012ec0:	e13ffd17 	ldw	r4,-12(fp)
10012ec4:	0000fd00 	call	10000fd0 <__mulsi3>
10012ec8:	100b883a 	mov	r5,r2
10012ecc:	0100bef4 	movhi	r4,763
10012ed0:	213c2004 	addi	r4,r4,-3968
10012ed4:	0000f140 	call	10000f14 <__udivsi3>
10012ed8:	e17fff17 	ldw	r5,-4(fp)
10012edc:	1009883a 	mov	r4,r2
10012ee0:	0000fd00 	call	10000fd0 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
10012ee4:	10bfffc4 	addi	r2,r2,-1
10012ee8:	103ffe1e 	bne	r2,zero,10012ee4 <__alt_data_end+0xf8012ee4>
10012eec:	00000d06 	br	10012f24 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
10012ef0:	014003f4 	movhi	r5,15
10012ef4:	29509004 	addi	r5,r5,16960
10012ef8:	e13ffd17 	ldw	r4,-12(fp)
10012efc:	0000fd00 	call	10000fd0 <__mulsi3>
10012f00:	100b883a 	mov	r5,r2
10012f04:	0100bef4 	movhi	r4,763
10012f08:	213c2004 	addi	r4,r4,-3968
10012f0c:	0000f140 	call	10000f14 <__udivsi3>
10012f10:	e17fff17 	ldw	r5,-4(fp)
10012f14:	1009883a 	mov	r4,r2
10012f18:	0000fd00 	call	10000fd0 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
10012f1c:	10bfffc4 	addi	r2,r2,-1
10012f20:	00bffe16 	blt	zero,r2,10012f1c <__alt_data_end+0xf8012f1c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
10012f24:	0005883a 	mov	r2,zero
}
10012f28:	e037883a 	mov	sp,fp
10012f2c:	dfc00117 	ldw	ra,4(sp)
10012f30:	df000017 	ldw	fp,0(sp)
10012f34:	dec00204 	addi	sp,sp,8
10012f38:	f800283a 	ret

10012f3c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
10012f3c:	deffff04 	addi	sp,sp,-4
10012f40:	df000015 	stw	fp,0(sp)
10012f44:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
10012f48:	0001883a 	nop
10012f4c:	e037883a 	mov	sp,fp
10012f50:	df000017 	ldw	fp,0(sp)
10012f54:	dec00104 	addi	sp,sp,4
10012f58:	f800283a 	ret

10012f5c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10012f5c:	defffe04 	addi	sp,sp,-8
10012f60:	dfc00115 	stw	ra,4(sp)
10012f64:	df000015 	stw	fp,0(sp)
10012f68:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10012f6c:	d0a00d17 	ldw	r2,-32716(gp)
10012f70:	10000326 	beq	r2,zero,10012f80 <alt_get_errno+0x24>
10012f74:	d0a00d17 	ldw	r2,-32716(gp)
10012f78:	103ee83a 	callr	r2
10012f7c:	00000106 	br	10012f84 <alt_get_errno+0x28>
10012f80:	d0a78d04 	addi	r2,gp,-25036
}
10012f84:	e037883a 	mov	sp,fp
10012f88:	dfc00117 	ldw	ra,4(sp)
10012f8c:	df000017 	ldw	fp,0(sp)
10012f90:	dec00204 	addi	sp,sp,8
10012f94:	f800283a 	ret

10012f98 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
10012f98:	defffa04 	addi	sp,sp,-24
10012f9c:	dfc00515 	stw	ra,20(sp)
10012fa0:	df000415 	stw	fp,16(sp)
10012fa4:	df000404 	addi	fp,sp,16
10012fa8:	e13ffe15 	stw	r4,-8(fp)
10012fac:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
10012fb0:	e0bffe17 	ldw	r2,-8(fp)
10012fb4:	10000326 	beq	r2,zero,10012fc4 <alt_dev_llist_insert+0x2c>
10012fb8:	e0bffe17 	ldw	r2,-8(fp)
10012fbc:	10800217 	ldw	r2,8(r2)
10012fc0:	1000061e 	bne	r2,zero,10012fdc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
10012fc4:	0012f5c0 	call	10012f5c <alt_get_errno>
10012fc8:	1007883a 	mov	r3,r2
10012fcc:	00800584 	movi	r2,22
10012fd0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
10012fd4:	00bffa84 	movi	r2,-22
10012fd8:	00001306 	br	10013028 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
10012fdc:	e0bffe17 	ldw	r2,-8(fp)
10012fe0:	e0ffff17 	ldw	r3,-4(fp)
10012fe4:	e0fffc15 	stw	r3,-16(fp)
10012fe8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10012fec:	e0bffd17 	ldw	r2,-12(fp)
10012ff0:	e0fffc17 	ldw	r3,-16(fp)
10012ff4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10012ff8:	e0bffc17 	ldw	r2,-16(fp)
10012ffc:	10c00017 	ldw	r3,0(r2)
10013000:	e0bffd17 	ldw	r2,-12(fp)
10013004:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10013008:	e0bffc17 	ldw	r2,-16(fp)
1001300c:	10800017 	ldw	r2,0(r2)
10013010:	e0fffd17 	ldw	r3,-12(fp)
10013014:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10013018:	e0bffc17 	ldw	r2,-16(fp)
1001301c:	e0fffd17 	ldw	r3,-12(fp)
10013020:	10c00015 	stw	r3,0(r2)

  return 0;  
10013024:	0005883a 	mov	r2,zero
}
10013028:	e037883a 	mov	sp,fp
1001302c:	dfc00117 	ldw	ra,4(sp)
10013030:	df000017 	ldw	fp,0(sp)
10013034:	dec00204 	addi	sp,sp,8
10013038:	f800283a 	ret

1001303c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1001303c:	defffd04 	addi	sp,sp,-12
10013040:	dfc00215 	stw	ra,8(sp)
10013044:	df000115 	stw	fp,4(sp)
10013048:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1001304c:	00840074 	movhi	r2,4097
10013050:	108ffc04 	addi	r2,r2,16368
10013054:	e0bfff15 	stw	r2,-4(fp)
10013058:	00000606 	br	10013074 <_do_ctors+0x38>
        (*ctor) (); 
1001305c:	e0bfff17 	ldw	r2,-4(fp)
10013060:	10800017 	ldw	r2,0(r2)
10013064:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10013068:	e0bfff17 	ldw	r2,-4(fp)
1001306c:	10bfff04 	addi	r2,r2,-4
10013070:	e0bfff15 	stw	r2,-4(fp)
10013074:	e0ffff17 	ldw	r3,-4(fp)
10013078:	00840074 	movhi	r2,4097
1001307c:	108ffd04 	addi	r2,r2,16372
10013080:	18bff62e 	bgeu	r3,r2,1001305c <__alt_data_end+0xf801305c>
        (*ctor) (); 
}
10013084:	0001883a 	nop
10013088:	e037883a 	mov	sp,fp
1001308c:	dfc00117 	ldw	ra,4(sp)
10013090:	df000017 	ldw	fp,0(sp)
10013094:	dec00204 	addi	sp,sp,8
10013098:	f800283a 	ret

1001309c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1001309c:	defffd04 	addi	sp,sp,-12
100130a0:	dfc00215 	stw	ra,8(sp)
100130a4:	df000115 	stw	fp,4(sp)
100130a8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100130ac:	00840074 	movhi	r2,4097
100130b0:	108ffc04 	addi	r2,r2,16368
100130b4:	e0bfff15 	stw	r2,-4(fp)
100130b8:	00000606 	br	100130d4 <_do_dtors+0x38>
        (*dtor) (); 
100130bc:	e0bfff17 	ldw	r2,-4(fp)
100130c0:	10800017 	ldw	r2,0(r2)
100130c4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100130c8:	e0bfff17 	ldw	r2,-4(fp)
100130cc:	10bfff04 	addi	r2,r2,-4
100130d0:	e0bfff15 	stw	r2,-4(fp)
100130d4:	e0ffff17 	ldw	r3,-4(fp)
100130d8:	00840074 	movhi	r2,4097
100130dc:	108ffd04 	addi	r2,r2,16372
100130e0:	18bff62e 	bgeu	r3,r2,100130bc <__alt_data_end+0xf80130bc>
        (*dtor) (); 
}
100130e4:	0001883a 	nop
100130e8:	e037883a 	mov	sp,fp
100130ec:	dfc00117 	ldw	ra,4(sp)
100130f0:	df000017 	ldw	fp,0(sp)
100130f4:	dec00204 	addi	sp,sp,8
100130f8:	f800283a 	ret

100130fc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
100130fc:	deffff04 	addi	sp,sp,-4
10013100:	df000015 	stw	fp,0(sp)
10013104:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
10013108:	0001883a 	nop
1001310c:	e037883a 	mov	sp,fp
10013110:	df000017 	ldw	fp,0(sp)
10013114:	dec00104 	addi	sp,sp,4
10013118:	f800283a 	ret

1001311c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1001311c:	defff904 	addi	sp,sp,-28
10013120:	dfc00615 	stw	ra,24(sp)
10013124:	df000515 	stw	fp,20(sp)
10013128:	df000504 	addi	fp,sp,20
1001312c:	e13ffc15 	stw	r4,-16(fp)
10013130:	e17ffd15 	stw	r5,-12(fp)
10013134:	e1bffe15 	stw	r6,-8(fp)
10013138:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1001313c:	e0800217 	ldw	r2,8(fp)
10013140:	d8800015 	stw	r2,0(sp)
10013144:	e1ffff17 	ldw	r7,-4(fp)
10013148:	e1bffe17 	ldw	r6,-8(fp)
1001314c:	e17ffd17 	ldw	r5,-12(fp)
10013150:	e13ffc17 	ldw	r4,-16(fp)
10013154:	00132cc0 	call	100132cc <alt_iic_isr_register>
}  
10013158:	e037883a 	mov	sp,fp
1001315c:	dfc00117 	ldw	ra,4(sp)
10013160:	df000017 	ldw	fp,0(sp)
10013164:	dec00204 	addi	sp,sp,8
10013168:	f800283a 	ret

1001316c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1001316c:	defff904 	addi	sp,sp,-28
10013170:	df000615 	stw	fp,24(sp)
10013174:	df000604 	addi	fp,sp,24
10013178:	e13ffe15 	stw	r4,-8(fp)
1001317c:	e17fff15 	stw	r5,-4(fp)
10013180:	e0bfff17 	ldw	r2,-4(fp)
10013184:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013188:	0005303a 	rdctl	r2,status
1001318c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013190:	e0fffb17 	ldw	r3,-20(fp)
10013194:	00bfff84 	movi	r2,-2
10013198:	1884703a 	and	r2,r3,r2
1001319c:	1001703a 	wrctl	status,r2
  
  return context;
100131a0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
100131a4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
100131a8:	00c00044 	movi	r3,1
100131ac:	e0bffa17 	ldw	r2,-24(fp)
100131b0:	1884983a 	sll	r2,r3,r2
100131b4:	1007883a 	mov	r3,r2
100131b8:	d0a79117 	ldw	r2,-25020(gp)
100131bc:	1884b03a 	or	r2,r3,r2
100131c0:	d0a79115 	stw	r2,-25020(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
100131c4:	d0a79117 	ldw	r2,-25020(gp)
100131c8:	100170fa 	wrctl	ienable,r2
100131cc:	e0bffc17 	ldw	r2,-16(fp)
100131d0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
100131d4:	e0bffd17 	ldw	r2,-12(fp)
100131d8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
100131dc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
100131e0:	0001883a 	nop
}
100131e4:	e037883a 	mov	sp,fp
100131e8:	df000017 	ldw	fp,0(sp)
100131ec:	dec00104 	addi	sp,sp,4
100131f0:	f800283a 	ret

100131f4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
100131f4:	defff904 	addi	sp,sp,-28
100131f8:	df000615 	stw	fp,24(sp)
100131fc:	df000604 	addi	fp,sp,24
10013200:	e13ffe15 	stw	r4,-8(fp)
10013204:	e17fff15 	stw	r5,-4(fp)
10013208:	e0bfff17 	ldw	r2,-4(fp)
1001320c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013210:	0005303a 	rdctl	r2,status
10013214:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013218:	e0fffb17 	ldw	r3,-20(fp)
1001321c:	00bfff84 	movi	r2,-2
10013220:	1884703a 	and	r2,r3,r2
10013224:	1001703a 	wrctl	status,r2
  
  return context;
10013228:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1001322c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
10013230:	00c00044 	movi	r3,1
10013234:	e0bffa17 	ldw	r2,-24(fp)
10013238:	1884983a 	sll	r2,r3,r2
1001323c:	0084303a 	nor	r2,zero,r2
10013240:	1007883a 	mov	r3,r2
10013244:	d0a79117 	ldw	r2,-25020(gp)
10013248:	1884703a 	and	r2,r3,r2
1001324c:	d0a79115 	stw	r2,-25020(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10013250:	d0a79117 	ldw	r2,-25020(gp)
10013254:	100170fa 	wrctl	ienable,r2
10013258:	e0bffc17 	ldw	r2,-16(fp)
1001325c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10013260:	e0bffd17 	ldw	r2,-12(fp)
10013264:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
10013268:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1001326c:	0001883a 	nop
}
10013270:	e037883a 	mov	sp,fp
10013274:	df000017 	ldw	fp,0(sp)
10013278:	dec00104 	addi	sp,sp,4
1001327c:	f800283a 	ret

10013280 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
10013280:	defffc04 	addi	sp,sp,-16
10013284:	df000315 	stw	fp,12(sp)
10013288:	df000304 	addi	fp,sp,12
1001328c:	e13ffe15 	stw	r4,-8(fp)
10013290:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
10013294:	000530fa 	rdctl	r2,ienable
10013298:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1001329c:	00c00044 	movi	r3,1
100132a0:	e0bfff17 	ldw	r2,-4(fp)
100132a4:	1884983a 	sll	r2,r3,r2
100132a8:	1007883a 	mov	r3,r2
100132ac:	e0bffd17 	ldw	r2,-12(fp)
100132b0:	1884703a 	and	r2,r3,r2
100132b4:	1004c03a 	cmpne	r2,r2,zero
100132b8:	10803fcc 	andi	r2,r2,255
}
100132bc:	e037883a 	mov	sp,fp
100132c0:	df000017 	ldw	fp,0(sp)
100132c4:	dec00104 	addi	sp,sp,4
100132c8:	f800283a 	ret

100132cc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
100132cc:	defff504 	addi	sp,sp,-44
100132d0:	dfc00a15 	stw	ra,40(sp)
100132d4:	df000915 	stw	fp,36(sp)
100132d8:	df000904 	addi	fp,sp,36
100132dc:	e13ffc15 	stw	r4,-16(fp)
100132e0:	e17ffd15 	stw	r5,-12(fp)
100132e4:	e1bffe15 	stw	r6,-8(fp)
100132e8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
100132ec:	00bffa84 	movi	r2,-22
100132f0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
100132f4:	e0bffd17 	ldw	r2,-12(fp)
100132f8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
100132fc:	e0bff817 	ldw	r2,-32(fp)
10013300:	10800808 	cmpgei	r2,r2,32
10013304:	1000271e 	bne	r2,zero,100133a4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013308:	0005303a 	rdctl	r2,status
1001330c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013310:	e0fffb17 	ldw	r3,-20(fp)
10013314:	00bfff84 	movi	r2,-2
10013318:	1884703a 	and	r2,r3,r2
1001331c:	1001703a 	wrctl	status,r2
  
  return context;
10013320:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
10013324:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
10013328:	008400b4 	movhi	r2,4098
1001332c:	10a01204 	addi	r2,r2,-32696
10013330:	e0fff817 	ldw	r3,-32(fp)
10013334:	180690fa 	slli	r3,r3,3
10013338:	10c5883a 	add	r2,r2,r3
1001333c:	e0fffe17 	ldw	r3,-8(fp)
10013340:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
10013344:	008400b4 	movhi	r2,4098
10013348:	10a01204 	addi	r2,r2,-32696
1001334c:	e0fff817 	ldw	r3,-32(fp)
10013350:	180690fa 	slli	r3,r3,3
10013354:	10c5883a 	add	r2,r2,r3
10013358:	10800104 	addi	r2,r2,4
1001335c:	e0ffff17 	ldw	r3,-4(fp)
10013360:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
10013364:	e0bffe17 	ldw	r2,-8(fp)
10013368:	10000526 	beq	r2,zero,10013380 <alt_iic_isr_register+0xb4>
1001336c:	e0bff817 	ldw	r2,-32(fp)
10013370:	100b883a 	mov	r5,r2
10013374:	e13ffc17 	ldw	r4,-16(fp)
10013378:	001316c0 	call	1001316c <alt_ic_irq_enable>
1001337c:	00000406 	br	10013390 <alt_iic_isr_register+0xc4>
10013380:	e0bff817 	ldw	r2,-32(fp)
10013384:	100b883a 	mov	r5,r2
10013388:	e13ffc17 	ldw	r4,-16(fp)
1001338c:	00131f40 	call	100131f4 <alt_ic_irq_disable>
10013390:	e0bff715 	stw	r2,-36(fp)
10013394:	e0bffa17 	ldw	r2,-24(fp)
10013398:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001339c:	e0bff917 	ldw	r2,-28(fp)
100133a0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
100133a4:	e0bff717 	ldw	r2,-36(fp)
}
100133a8:	e037883a 	mov	sp,fp
100133ac:	dfc00117 	ldw	ra,4(sp)
100133b0:	df000017 	ldw	fp,0(sp)
100133b4:	dec00204 	addi	sp,sp,8
100133b8:	f800283a 	ret

100133bc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
100133bc:	defff804 	addi	sp,sp,-32
100133c0:	dfc00715 	stw	ra,28(sp)
100133c4:	df000615 	stw	fp,24(sp)
100133c8:	dc000515 	stw	r16,20(sp)
100133cc:	df000604 	addi	fp,sp,24
100133d0:	e13ffb15 	stw	r4,-20(fp)
100133d4:	e17ffc15 	stw	r5,-16(fp)
100133d8:	e1bffd15 	stw	r6,-12(fp)
100133dc:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
100133e0:	e1bffe17 	ldw	r6,-8(fp)
100133e4:	e17ffd17 	ldw	r5,-12(fp)
100133e8:	e13ffc17 	ldw	r4,-16(fp)
100133ec:	00136440 	call	10013644 <open>
100133f0:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
100133f4:	e0bffa17 	ldw	r2,-24(fp)
100133f8:	10002216 	blt	r2,zero,10013484 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
100133fc:	04040074 	movhi	r16,4097
10013400:	8413fb04 	addi	r16,r16,20460
10013404:	e0bffa17 	ldw	r2,-24(fp)
10013408:	01400304 	movi	r5,12
1001340c:	1009883a 	mov	r4,r2
10013410:	0000fd00 	call	10000fd0 <__mulsi3>
10013414:	8085883a 	add	r2,r16,r2
10013418:	10c00017 	ldw	r3,0(r2)
1001341c:	e0bffb17 	ldw	r2,-20(fp)
10013420:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
10013424:	04040074 	movhi	r16,4097
10013428:	8413fb04 	addi	r16,r16,20460
1001342c:	e0bffa17 	ldw	r2,-24(fp)
10013430:	01400304 	movi	r5,12
10013434:	1009883a 	mov	r4,r2
10013438:	0000fd00 	call	10000fd0 <__mulsi3>
1001343c:	8085883a 	add	r2,r16,r2
10013440:	10800104 	addi	r2,r2,4
10013444:	10c00017 	ldw	r3,0(r2)
10013448:	e0bffb17 	ldw	r2,-20(fp)
1001344c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
10013450:	04040074 	movhi	r16,4097
10013454:	8413fb04 	addi	r16,r16,20460
10013458:	e0bffa17 	ldw	r2,-24(fp)
1001345c:	01400304 	movi	r5,12
10013460:	1009883a 	mov	r4,r2
10013464:	0000fd00 	call	10000fd0 <__mulsi3>
10013468:	8085883a 	add	r2,r16,r2
1001346c:	10800204 	addi	r2,r2,8
10013470:	10c00017 	ldw	r3,0(r2)
10013474:	e0bffb17 	ldw	r2,-20(fp)
10013478:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1001347c:	e13ffa17 	ldw	r4,-24(fp)
10013480:	0011ef80 	call	10011ef8 <alt_release_fd>
  }
} 
10013484:	0001883a 	nop
10013488:	e6ffff04 	addi	sp,fp,-4
1001348c:	dfc00217 	ldw	ra,8(sp)
10013490:	df000117 	ldw	fp,4(sp)
10013494:	dc000017 	ldw	r16,0(sp)
10013498:	dec00304 	addi	sp,sp,12
1001349c:	f800283a 	ret

100134a0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
100134a0:	defffb04 	addi	sp,sp,-20
100134a4:	dfc00415 	stw	ra,16(sp)
100134a8:	df000315 	stw	fp,12(sp)
100134ac:	df000304 	addi	fp,sp,12
100134b0:	e13ffd15 	stw	r4,-12(fp)
100134b4:	e17ffe15 	stw	r5,-8(fp)
100134b8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
100134bc:	01c07fc4 	movi	r7,511
100134c0:	01800044 	movi	r6,1
100134c4:	e17ffd17 	ldw	r5,-12(fp)
100134c8:	01040074 	movhi	r4,4097
100134cc:	2113fe04 	addi	r4,r4,20472
100134d0:	00133bc0 	call	100133bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
100134d4:	01c07fc4 	movi	r7,511
100134d8:	000d883a 	mov	r6,zero
100134dc:	e17ffe17 	ldw	r5,-8(fp)
100134e0:	01040074 	movhi	r4,4097
100134e4:	2113fb04 	addi	r4,r4,20460
100134e8:	00133bc0 	call	100133bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
100134ec:	01c07fc4 	movi	r7,511
100134f0:	01800044 	movi	r6,1
100134f4:	e17fff17 	ldw	r5,-4(fp)
100134f8:	01040074 	movhi	r4,4097
100134fc:	21140104 	addi	r4,r4,20484
10013500:	00133bc0 	call	100133bc <alt_open_fd>
}  
10013504:	0001883a 	nop
10013508:	e037883a 	mov	sp,fp
1001350c:	dfc00117 	ldw	ra,4(sp)
10013510:	df000017 	ldw	fp,0(sp)
10013514:	dec00204 	addi	sp,sp,8
10013518:	f800283a 	ret

1001351c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1001351c:	defffe04 	addi	sp,sp,-8
10013520:	dfc00115 	stw	ra,4(sp)
10013524:	df000015 	stw	fp,0(sp)
10013528:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1001352c:	d0a00d17 	ldw	r2,-32716(gp)
10013530:	10000326 	beq	r2,zero,10013540 <alt_get_errno+0x24>
10013534:	d0a00d17 	ldw	r2,-32716(gp)
10013538:	103ee83a 	callr	r2
1001353c:	00000106 	br	10013544 <alt_get_errno+0x28>
10013540:	d0a78d04 	addi	r2,gp,-25036
}
10013544:	e037883a 	mov	sp,fp
10013548:	dfc00117 	ldw	ra,4(sp)
1001354c:	df000017 	ldw	fp,0(sp)
10013550:	dec00204 	addi	sp,sp,8
10013554:	f800283a 	ret

10013558 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
10013558:	defffb04 	addi	sp,sp,-20
1001355c:	dfc00415 	stw	ra,16(sp)
10013560:	df000315 	stw	fp,12(sp)
10013564:	dc000215 	stw	r16,8(sp)
10013568:	df000304 	addi	fp,sp,12
1001356c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
10013570:	e0bffe17 	ldw	r2,-8(fp)
10013574:	10800217 	ldw	r2,8(r2)
10013578:	10d00034 	orhi	r3,r2,16384
1001357c:	e0bffe17 	ldw	r2,-8(fp)
10013580:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
10013584:	e03ffd15 	stw	zero,-12(fp)
10013588:	00002306 	br	10013618 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1001358c:	04040074 	movhi	r16,4097
10013590:	8413fb04 	addi	r16,r16,20460
10013594:	e0bffd17 	ldw	r2,-12(fp)
10013598:	01400304 	movi	r5,12
1001359c:	1009883a 	mov	r4,r2
100135a0:	0000fd00 	call	10000fd0 <__mulsi3>
100135a4:	8085883a 	add	r2,r16,r2
100135a8:	10c00017 	ldw	r3,0(r2)
100135ac:	e0bffe17 	ldw	r2,-8(fp)
100135b0:	10800017 	ldw	r2,0(r2)
100135b4:	1880151e 	bne	r3,r2,1001360c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
100135b8:	04040074 	movhi	r16,4097
100135bc:	8413fb04 	addi	r16,r16,20460
100135c0:	e0bffd17 	ldw	r2,-12(fp)
100135c4:	01400304 	movi	r5,12
100135c8:	1009883a 	mov	r4,r2
100135cc:	0000fd00 	call	10000fd0 <__mulsi3>
100135d0:	8085883a 	add	r2,r16,r2
100135d4:	10800204 	addi	r2,r2,8
100135d8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
100135dc:	10000b0e 	bge	r2,zero,1001360c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
100135e0:	01400304 	movi	r5,12
100135e4:	e13ffd17 	ldw	r4,-12(fp)
100135e8:	0000fd00 	call	10000fd0 <__mulsi3>
100135ec:	1007883a 	mov	r3,r2
100135f0:	00840074 	movhi	r2,4097
100135f4:	1093fb04 	addi	r2,r2,20460
100135f8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
100135fc:	e0bffe17 	ldw	r2,-8(fp)
10013600:	18800226 	beq	r3,r2,1001360c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
10013604:	00bffcc4 	movi	r2,-13
10013608:	00000806 	br	1001362c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1001360c:	e0bffd17 	ldw	r2,-12(fp)
10013610:	10800044 	addi	r2,r2,1
10013614:	e0bffd15 	stw	r2,-12(fp)
10013618:	d0a00c17 	ldw	r2,-32720(gp)
1001361c:	1007883a 	mov	r3,r2
10013620:	e0bffd17 	ldw	r2,-12(fp)
10013624:	18bfd92e 	bgeu	r3,r2,1001358c <__alt_data_end+0xf801358c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
10013628:	0005883a 	mov	r2,zero
}
1001362c:	e6ffff04 	addi	sp,fp,-4
10013630:	dfc00217 	ldw	ra,8(sp)
10013634:	df000117 	ldw	fp,4(sp)
10013638:	dc000017 	ldw	r16,0(sp)
1001363c:	dec00304 	addi	sp,sp,12
10013640:	f800283a 	ret

10013644 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
10013644:	defff604 	addi	sp,sp,-40
10013648:	dfc00915 	stw	ra,36(sp)
1001364c:	df000815 	stw	fp,32(sp)
10013650:	df000804 	addi	fp,sp,32
10013654:	e13ffd15 	stw	r4,-12(fp)
10013658:	e17ffe15 	stw	r5,-8(fp)
1001365c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
10013660:	00bfffc4 	movi	r2,-1
10013664:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
10013668:	00bffb44 	movi	r2,-19
1001366c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
10013670:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
10013674:	d1600a04 	addi	r5,gp,-32728
10013678:	e13ffd17 	ldw	r4,-12(fp)
1001367c:	00139680 	call	10013968 <alt_find_dev>
10013680:	e0bff815 	stw	r2,-32(fp)
10013684:	e0bff817 	ldw	r2,-32(fp)
10013688:	1000051e 	bne	r2,zero,100136a0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1001368c:	e13ffd17 	ldw	r4,-12(fp)
10013690:	00139f80 	call	100139f8 <alt_find_file>
10013694:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
10013698:	00800044 	movi	r2,1
1001369c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
100136a0:	e0bff817 	ldw	r2,-32(fp)
100136a4:	10002b26 	beq	r2,zero,10013754 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
100136a8:	e13ff817 	ldw	r4,-32(fp)
100136ac:	0013b000 	call	10013b00 <alt_get_fd>
100136b0:	e0bff915 	stw	r2,-28(fp)
100136b4:	e0bff917 	ldw	r2,-28(fp)
100136b8:	1000030e 	bge	r2,zero,100136c8 <open+0x84>
    {
      status = index;
100136bc:	e0bff917 	ldw	r2,-28(fp)
100136c0:	e0bffa15 	stw	r2,-24(fp)
100136c4:	00002506 	br	1001375c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
100136c8:	01400304 	movi	r5,12
100136cc:	e13ff917 	ldw	r4,-28(fp)
100136d0:	0000fd00 	call	10000fd0 <__mulsi3>
100136d4:	1007883a 	mov	r3,r2
100136d8:	00840074 	movhi	r2,4097
100136dc:	1093fb04 	addi	r2,r2,20460
100136e0:	1885883a 	add	r2,r3,r2
100136e4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
100136e8:	e0fffe17 	ldw	r3,-8(fp)
100136ec:	00900034 	movhi	r2,16384
100136f0:	10bfffc4 	addi	r2,r2,-1
100136f4:	1886703a 	and	r3,r3,r2
100136f8:	e0bffc17 	ldw	r2,-16(fp)
100136fc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
10013700:	e0bffb17 	ldw	r2,-20(fp)
10013704:	1000051e 	bne	r2,zero,1001371c <open+0xd8>
10013708:	e13ffc17 	ldw	r4,-16(fp)
1001370c:	00135580 	call	10013558 <alt_file_locked>
10013710:	e0bffa15 	stw	r2,-24(fp)
10013714:	e0bffa17 	ldw	r2,-24(fp)
10013718:	10001016 	blt	r2,zero,1001375c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1001371c:	e0bff817 	ldw	r2,-32(fp)
10013720:	10800317 	ldw	r2,12(r2)
10013724:	10000826 	beq	r2,zero,10013748 <open+0x104>
10013728:	e0bff817 	ldw	r2,-32(fp)
1001372c:	10800317 	ldw	r2,12(r2)
10013730:	e1ffff17 	ldw	r7,-4(fp)
10013734:	e1bffe17 	ldw	r6,-8(fp)
10013738:	e17ffd17 	ldw	r5,-12(fp)
1001373c:	e13ffc17 	ldw	r4,-16(fp)
10013740:	103ee83a 	callr	r2
10013744:	00000106 	br	1001374c <open+0x108>
10013748:	0005883a 	mov	r2,zero
1001374c:	e0bffa15 	stw	r2,-24(fp)
10013750:	00000206 	br	1001375c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
10013754:	00bffb44 	movi	r2,-19
10013758:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1001375c:	e0bffa17 	ldw	r2,-24(fp)
10013760:	1000090e 	bge	r2,zero,10013788 <open+0x144>
  {
    alt_release_fd (index);  
10013764:	e13ff917 	ldw	r4,-28(fp)
10013768:	0011ef80 	call	10011ef8 <alt_release_fd>
    ALT_ERRNO = -status;
1001376c:	001351c0 	call	1001351c <alt_get_errno>
10013770:	1007883a 	mov	r3,r2
10013774:	e0bffa17 	ldw	r2,-24(fp)
10013778:	0085c83a 	sub	r2,zero,r2
1001377c:	18800015 	stw	r2,0(r3)
    return -1;
10013780:	00bfffc4 	movi	r2,-1
10013784:	00000106 	br	1001378c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
10013788:	e0bff917 	ldw	r2,-28(fp)
}
1001378c:	e037883a 	mov	sp,fp
10013790:	dfc00117 	ldw	ra,4(sp)
10013794:	df000017 	ldw	fp,0(sp)
10013798:	dec00204 	addi	sp,sp,8
1001379c:	f800283a 	ret

100137a0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
100137a0:	defffa04 	addi	sp,sp,-24
100137a4:	df000515 	stw	fp,20(sp)
100137a8:	df000504 	addi	fp,sp,20
100137ac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
100137b0:	0005303a 	rdctl	r2,status
100137b4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100137b8:	e0fffc17 	ldw	r3,-16(fp)
100137bc:	00bfff84 	movi	r2,-2
100137c0:	1884703a 	and	r2,r3,r2
100137c4:	1001703a 	wrctl	status,r2
  
  return context;
100137c8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
100137cc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
100137d0:	e0bfff17 	ldw	r2,-4(fp)
100137d4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
100137d8:	e0bffd17 	ldw	r2,-12(fp)
100137dc:	10800017 	ldw	r2,0(r2)
100137e0:	e0fffd17 	ldw	r3,-12(fp)
100137e4:	18c00117 	ldw	r3,4(r3)
100137e8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
100137ec:	e0bffd17 	ldw	r2,-12(fp)
100137f0:	10800117 	ldw	r2,4(r2)
100137f4:	e0fffd17 	ldw	r3,-12(fp)
100137f8:	18c00017 	ldw	r3,0(r3)
100137fc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
10013800:	e0bffd17 	ldw	r2,-12(fp)
10013804:	e0fffd17 	ldw	r3,-12(fp)
10013808:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1001380c:	e0bffd17 	ldw	r2,-12(fp)
10013810:	e0fffd17 	ldw	r3,-12(fp)
10013814:	10c00015 	stw	r3,0(r2)
10013818:	e0bffb17 	ldw	r2,-20(fp)
1001381c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10013820:	e0bffe17 	ldw	r2,-8(fp)
10013824:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
10013828:	0001883a 	nop
1001382c:	e037883a 	mov	sp,fp
10013830:	df000017 	ldw	fp,0(sp)
10013834:	dec00104 	addi	sp,sp,4
10013838:	f800283a 	ret

1001383c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1001383c:	defffb04 	addi	sp,sp,-20
10013840:	dfc00415 	stw	ra,16(sp)
10013844:	df000315 	stw	fp,12(sp)
10013848:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1001384c:	d0a01017 	ldw	r2,-32704(gp)
10013850:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
10013854:	d0a79317 	ldw	r2,-25012(gp)
10013858:	10800044 	addi	r2,r2,1
1001385c:	d0a79315 	stw	r2,-25012(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10013860:	00002e06 	br	1001391c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
10013864:	e0bffd17 	ldw	r2,-12(fp)
10013868:	10800017 	ldw	r2,0(r2)
1001386c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
10013870:	e0bffd17 	ldw	r2,-12(fp)
10013874:	10800403 	ldbu	r2,16(r2)
10013878:	10803fcc 	andi	r2,r2,255
1001387c:	10000426 	beq	r2,zero,10013890 <alt_tick+0x54>
10013880:	d0a79317 	ldw	r2,-25012(gp)
10013884:	1000021e 	bne	r2,zero,10013890 <alt_tick+0x54>
    {
      alarm->rollover = 0;
10013888:	e0bffd17 	ldw	r2,-12(fp)
1001388c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
10013890:	e0bffd17 	ldw	r2,-12(fp)
10013894:	10800217 	ldw	r2,8(r2)
10013898:	d0e79317 	ldw	r3,-25012(gp)
1001389c:	18801d36 	bltu	r3,r2,10013914 <alt_tick+0xd8>
100138a0:	e0bffd17 	ldw	r2,-12(fp)
100138a4:	10800403 	ldbu	r2,16(r2)
100138a8:	10803fcc 	andi	r2,r2,255
100138ac:	1000191e 	bne	r2,zero,10013914 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
100138b0:	e0bffd17 	ldw	r2,-12(fp)
100138b4:	10800317 	ldw	r2,12(r2)
100138b8:	e0fffd17 	ldw	r3,-12(fp)
100138bc:	18c00517 	ldw	r3,20(r3)
100138c0:	1809883a 	mov	r4,r3
100138c4:	103ee83a 	callr	r2
100138c8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
100138cc:	e0bfff17 	ldw	r2,-4(fp)
100138d0:	1000031e 	bne	r2,zero,100138e0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
100138d4:	e13ffd17 	ldw	r4,-12(fp)
100138d8:	00137a00 	call	100137a0 <alt_alarm_stop>
100138dc:	00000d06 	br	10013914 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
100138e0:	e0bffd17 	ldw	r2,-12(fp)
100138e4:	10c00217 	ldw	r3,8(r2)
100138e8:	e0bfff17 	ldw	r2,-4(fp)
100138ec:	1887883a 	add	r3,r3,r2
100138f0:	e0bffd17 	ldw	r2,-12(fp)
100138f4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
100138f8:	e0bffd17 	ldw	r2,-12(fp)
100138fc:	10c00217 	ldw	r3,8(r2)
10013900:	d0a79317 	ldw	r2,-25012(gp)
10013904:	1880032e 	bgeu	r3,r2,10013914 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
10013908:	e0bffd17 	ldw	r2,-12(fp)
1001390c:	00c00044 	movi	r3,1
10013910:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
10013914:	e0bffe17 	ldw	r2,-8(fp)
10013918:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1001391c:	e0fffd17 	ldw	r3,-12(fp)
10013920:	d0a01004 	addi	r2,gp,-32704
10013924:	18bfcf1e 	bne	r3,r2,10013864 <__alt_data_end+0xf8013864>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
10013928:	0001883a 	nop
}
1001392c:	0001883a 	nop
10013930:	e037883a 	mov	sp,fp
10013934:	dfc00117 	ldw	ra,4(sp)
10013938:	df000017 	ldw	fp,0(sp)
1001393c:	dec00204 	addi	sp,sp,8
10013940:	f800283a 	ret

10013944 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
10013944:	deffff04 	addi	sp,sp,-4
10013948:	df000015 	stw	fp,0(sp)
1001394c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
10013950:	000170fa 	wrctl	ienable,zero
}
10013954:	0001883a 	nop
10013958:	e037883a 	mov	sp,fp
1001395c:	df000017 	ldw	fp,0(sp)
10013960:	dec00104 	addi	sp,sp,4
10013964:	f800283a 	ret

10013968 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
10013968:	defffa04 	addi	sp,sp,-24
1001396c:	dfc00515 	stw	ra,20(sp)
10013970:	df000415 	stw	fp,16(sp)
10013974:	df000404 	addi	fp,sp,16
10013978:	e13ffe15 	stw	r4,-8(fp)
1001397c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
10013980:	e0bfff17 	ldw	r2,-4(fp)
10013984:	10800017 	ldw	r2,0(r2)
10013988:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1001398c:	e13ffe17 	ldw	r4,-8(fp)
10013990:	00012780 	call	10001278 <strlen>
10013994:	10800044 	addi	r2,r2,1
10013998:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1001399c:	00000d06 	br	100139d4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
100139a0:	e0bffc17 	ldw	r2,-16(fp)
100139a4:	10800217 	ldw	r2,8(r2)
100139a8:	e0fffd17 	ldw	r3,-12(fp)
100139ac:	180d883a 	mov	r6,r3
100139b0:	e17ffe17 	ldw	r5,-8(fp)
100139b4:	1009883a 	mov	r4,r2
100139b8:	0013cac0 	call	10013cac <memcmp>
100139bc:	1000021e 	bne	r2,zero,100139c8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
100139c0:	e0bffc17 	ldw	r2,-16(fp)
100139c4:	00000706 	br	100139e4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
100139c8:	e0bffc17 	ldw	r2,-16(fp)
100139cc:	10800017 	ldw	r2,0(r2)
100139d0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
100139d4:	e0fffc17 	ldw	r3,-16(fp)
100139d8:	e0bfff17 	ldw	r2,-4(fp)
100139dc:	18bff01e 	bne	r3,r2,100139a0 <__alt_data_end+0xf80139a0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
100139e0:	0005883a 	mov	r2,zero
}
100139e4:	e037883a 	mov	sp,fp
100139e8:	dfc00117 	ldw	ra,4(sp)
100139ec:	df000017 	ldw	fp,0(sp)
100139f0:	dec00204 	addi	sp,sp,8
100139f4:	f800283a 	ret

100139f8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
100139f8:	defffb04 	addi	sp,sp,-20
100139fc:	dfc00415 	stw	ra,16(sp)
10013a00:	df000315 	stw	fp,12(sp)
10013a04:	df000304 	addi	fp,sp,12
10013a08:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
10013a0c:	d0a00817 	ldw	r2,-32736(gp)
10013a10:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10013a14:	00003106 	br	10013adc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
10013a18:	e0bffd17 	ldw	r2,-12(fp)
10013a1c:	10800217 	ldw	r2,8(r2)
10013a20:	1009883a 	mov	r4,r2
10013a24:	00012780 	call	10001278 <strlen>
10013a28:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
10013a2c:	e0bffd17 	ldw	r2,-12(fp)
10013a30:	10c00217 	ldw	r3,8(r2)
10013a34:	e0bffe17 	ldw	r2,-8(fp)
10013a38:	10bfffc4 	addi	r2,r2,-1
10013a3c:	1885883a 	add	r2,r3,r2
10013a40:	10800003 	ldbu	r2,0(r2)
10013a44:	10803fcc 	andi	r2,r2,255
10013a48:	1080201c 	xori	r2,r2,128
10013a4c:	10bfe004 	addi	r2,r2,-128
10013a50:	10800bd8 	cmpnei	r2,r2,47
10013a54:	1000031e 	bne	r2,zero,10013a64 <alt_find_file+0x6c>
    {
      len -= 1;
10013a58:	e0bffe17 	ldw	r2,-8(fp)
10013a5c:	10bfffc4 	addi	r2,r2,-1
10013a60:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10013a64:	e0bffe17 	ldw	r2,-8(fp)
10013a68:	e0ffff17 	ldw	r3,-4(fp)
10013a6c:	1885883a 	add	r2,r3,r2
10013a70:	10800003 	ldbu	r2,0(r2)
10013a74:	10803fcc 	andi	r2,r2,255
10013a78:	1080201c 	xori	r2,r2,128
10013a7c:	10bfe004 	addi	r2,r2,-128
10013a80:	10800be0 	cmpeqi	r2,r2,47
10013a84:	1000081e 	bne	r2,zero,10013aa8 <alt_find_file+0xb0>
10013a88:	e0bffe17 	ldw	r2,-8(fp)
10013a8c:	e0ffff17 	ldw	r3,-4(fp)
10013a90:	1885883a 	add	r2,r3,r2
10013a94:	10800003 	ldbu	r2,0(r2)
10013a98:	10803fcc 	andi	r2,r2,255
10013a9c:	1080201c 	xori	r2,r2,128
10013aa0:	10bfe004 	addi	r2,r2,-128
10013aa4:	10000a1e 	bne	r2,zero,10013ad0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
10013aa8:	e0bffd17 	ldw	r2,-12(fp)
10013aac:	10800217 	ldw	r2,8(r2)
10013ab0:	e0fffe17 	ldw	r3,-8(fp)
10013ab4:	180d883a 	mov	r6,r3
10013ab8:	e17fff17 	ldw	r5,-4(fp)
10013abc:	1009883a 	mov	r4,r2
10013ac0:	0013cac0 	call	10013cac <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10013ac4:	1000021e 	bne	r2,zero,10013ad0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
10013ac8:	e0bffd17 	ldw	r2,-12(fp)
10013acc:	00000706 	br	10013aec <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
10013ad0:	e0bffd17 	ldw	r2,-12(fp)
10013ad4:	10800017 	ldw	r2,0(r2)
10013ad8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10013adc:	e0fffd17 	ldw	r3,-12(fp)
10013ae0:	d0a00804 	addi	r2,gp,-32736
10013ae4:	18bfcc1e 	bne	r3,r2,10013a18 <__alt_data_end+0xf8013a18>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
10013ae8:	0005883a 	mov	r2,zero
}
10013aec:	e037883a 	mov	sp,fp
10013af0:	dfc00117 	ldw	ra,4(sp)
10013af4:	df000017 	ldw	fp,0(sp)
10013af8:	dec00204 	addi	sp,sp,8
10013afc:	f800283a 	ret

10013b00 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
10013b00:	defffa04 	addi	sp,sp,-24
10013b04:	dfc00515 	stw	ra,20(sp)
10013b08:	df000415 	stw	fp,16(sp)
10013b0c:	dc000315 	stw	r16,12(sp)
10013b10:	df000404 	addi	fp,sp,16
10013b14:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
10013b18:	00bffa04 	movi	r2,-24
10013b1c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10013b20:	e03ffc15 	stw	zero,-16(fp)
10013b24:	00001d06 	br	10013b9c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
10013b28:	04040074 	movhi	r16,4097
10013b2c:	8413fb04 	addi	r16,r16,20460
10013b30:	e0bffc17 	ldw	r2,-16(fp)
10013b34:	01400304 	movi	r5,12
10013b38:	1009883a 	mov	r4,r2
10013b3c:	0000fd00 	call	10000fd0 <__mulsi3>
10013b40:	8085883a 	add	r2,r16,r2
10013b44:	10800017 	ldw	r2,0(r2)
10013b48:	1000111e 	bne	r2,zero,10013b90 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
10013b4c:	04040074 	movhi	r16,4097
10013b50:	8413fb04 	addi	r16,r16,20460
10013b54:	e0bffc17 	ldw	r2,-16(fp)
10013b58:	01400304 	movi	r5,12
10013b5c:	1009883a 	mov	r4,r2
10013b60:	0000fd00 	call	10000fd0 <__mulsi3>
10013b64:	8085883a 	add	r2,r16,r2
10013b68:	e0fffe17 	ldw	r3,-8(fp)
10013b6c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
10013b70:	d0e00c17 	ldw	r3,-32720(gp)
10013b74:	e0bffc17 	ldw	r2,-16(fp)
10013b78:	1880020e 	bge	r3,r2,10013b84 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
10013b7c:	e0bffc17 	ldw	r2,-16(fp)
10013b80:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
10013b84:	e0bffc17 	ldw	r2,-16(fp)
10013b88:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
10013b8c:	00000606 	br	10013ba8 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10013b90:	e0bffc17 	ldw	r2,-16(fp)
10013b94:	10800044 	addi	r2,r2,1
10013b98:	e0bffc15 	stw	r2,-16(fp)
10013b9c:	e0bffc17 	ldw	r2,-16(fp)
10013ba0:	10800810 	cmplti	r2,r2,32
10013ba4:	103fe01e 	bne	r2,zero,10013b28 <__alt_data_end+0xf8013b28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
10013ba8:	e0bffd17 	ldw	r2,-12(fp)
}
10013bac:	e6ffff04 	addi	sp,fp,-4
10013bb0:	dfc00217 	ldw	ra,8(sp)
10013bb4:	df000117 	ldw	fp,4(sp)
10013bb8:	dc000017 	ldw	r16,0(sp)
10013bbc:	dec00304 	addi	sp,sp,12
10013bc0:	f800283a 	ret

10013bc4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10013bc4:	defffe04 	addi	sp,sp,-8
10013bc8:	df000115 	stw	fp,4(sp)
10013bcc:	df000104 	addi	fp,sp,4
10013bd0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
10013bd4:	e0bfff17 	ldw	r2,-4(fp)
10013bd8:	10bffe84 	addi	r2,r2,-6
10013bdc:	10c00428 	cmpgeui	r3,r2,16
10013be0:	18001a1e 	bne	r3,zero,10013c4c <alt_exception_cause_generated_bad_addr+0x88>
10013be4:	100690ba 	slli	r3,r2,2
10013be8:	00840074 	movhi	r2,4097
10013bec:	108eff04 	addi	r2,r2,15356
10013bf0:	1885883a 	add	r2,r3,r2
10013bf4:	10800017 	ldw	r2,0(r2)
10013bf8:	1000683a 	jmp	r2
10013bfc:	10013c3c 	xorhi	zero,r2,1264
10013c00:	10013c3c 	xorhi	zero,r2,1264
10013c04:	10013c4c 	andi	zero,r2,1265
10013c08:	10013c4c 	andi	zero,r2,1265
10013c0c:	10013c4c 	andi	zero,r2,1265
10013c10:	10013c3c 	xorhi	zero,r2,1264
10013c14:	10013c44 	addi	zero,r2,1265
10013c18:	10013c4c 	andi	zero,r2,1265
10013c1c:	10013c3c 	xorhi	zero,r2,1264
10013c20:	10013c3c 	xorhi	zero,r2,1264
10013c24:	10013c4c 	andi	zero,r2,1265
10013c28:	10013c3c 	xorhi	zero,r2,1264
10013c2c:	10013c44 	addi	zero,r2,1265
10013c30:	10013c4c 	andi	zero,r2,1265
10013c34:	10013c4c 	andi	zero,r2,1265
10013c38:	10013c3c 	xorhi	zero,r2,1264
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
10013c3c:	00800044 	movi	r2,1
10013c40:	00000306 	br	10013c50 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
10013c44:	0005883a 	mov	r2,zero
10013c48:	00000106 	br	10013c50 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
10013c4c:	0005883a 	mov	r2,zero
  }
}
10013c50:	e037883a 	mov	sp,fp
10013c54:	df000017 	ldw	fp,0(sp)
10013c58:	dec00104 	addi	sp,sp,4
10013c5c:	f800283a 	ret

10013c60 <atexit>:
10013c60:	200b883a 	mov	r5,r4
10013c64:	000f883a 	mov	r7,zero
10013c68:	000d883a 	mov	r6,zero
10013c6c:	0009883a 	mov	r4,zero
10013c70:	0013d281 	jmpi	10013d28 <__register_exitproc>

10013c74 <exit>:
10013c74:	defffe04 	addi	sp,sp,-8
10013c78:	000b883a 	mov	r5,zero
10013c7c:	dc000015 	stw	r16,0(sp)
10013c80:	dfc00115 	stw	ra,4(sp)
10013c84:	2021883a 	mov	r16,r4
10013c88:	0013e400 	call	10013e40 <__call_exitprocs>
10013c8c:	00840074 	movhi	r2,4097
10013c90:	10987504 	addi	r2,r2,25044
10013c94:	11000017 	ldw	r4,0(r2)
10013c98:	20800f17 	ldw	r2,60(r4)
10013c9c:	10000126 	beq	r2,zero,10013ca4 <exit+0x30>
10013ca0:	103ee83a 	callr	r2
10013ca4:	8009883a 	mov	r4,r16
10013ca8:	0013fc00 	call	10013fc0 <_exit>

10013cac <memcmp>:
10013cac:	01c000c4 	movi	r7,3
10013cb0:	3980192e 	bgeu	r7,r6,10013d18 <memcmp+0x6c>
10013cb4:	2144b03a 	or	r2,r4,r5
10013cb8:	11c4703a 	and	r2,r2,r7
10013cbc:	10000f26 	beq	r2,zero,10013cfc <memcmp+0x50>
10013cc0:	20800003 	ldbu	r2,0(r4)
10013cc4:	28c00003 	ldbu	r3,0(r5)
10013cc8:	10c0151e 	bne	r2,r3,10013d20 <memcmp+0x74>
10013ccc:	31bfff84 	addi	r6,r6,-2
10013cd0:	01ffffc4 	movi	r7,-1
10013cd4:	00000406 	br	10013ce8 <memcmp+0x3c>
10013cd8:	20800003 	ldbu	r2,0(r4)
10013cdc:	28c00003 	ldbu	r3,0(r5)
10013ce0:	31bfffc4 	addi	r6,r6,-1
10013ce4:	10c00e1e 	bne	r2,r3,10013d20 <memcmp+0x74>
10013ce8:	21000044 	addi	r4,r4,1
10013cec:	29400044 	addi	r5,r5,1
10013cf0:	31fff91e 	bne	r6,r7,10013cd8 <__alt_data_end+0xf8013cd8>
10013cf4:	0005883a 	mov	r2,zero
10013cf8:	f800283a 	ret
10013cfc:	20c00017 	ldw	r3,0(r4)
10013d00:	28800017 	ldw	r2,0(r5)
10013d04:	18bfee1e 	bne	r3,r2,10013cc0 <__alt_data_end+0xf8013cc0>
10013d08:	31bfff04 	addi	r6,r6,-4
10013d0c:	21000104 	addi	r4,r4,4
10013d10:	29400104 	addi	r5,r5,4
10013d14:	39bff936 	bltu	r7,r6,10013cfc <__alt_data_end+0xf8013cfc>
10013d18:	303fe91e 	bne	r6,zero,10013cc0 <__alt_data_end+0xf8013cc0>
10013d1c:	003ff506 	br	10013cf4 <__alt_data_end+0xf8013cf4>
10013d20:	10c5c83a 	sub	r2,r2,r3
10013d24:	f800283a 	ret

10013d28 <__register_exitproc>:
10013d28:	defffa04 	addi	sp,sp,-24
10013d2c:	dc000315 	stw	r16,12(sp)
10013d30:	04040074 	movhi	r16,4097
10013d34:	84187504 	addi	r16,r16,25044
10013d38:	80c00017 	ldw	r3,0(r16)
10013d3c:	dc400415 	stw	r17,16(sp)
10013d40:	dfc00515 	stw	ra,20(sp)
10013d44:	18805217 	ldw	r2,328(r3)
10013d48:	2023883a 	mov	r17,r4
10013d4c:	10003726 	beq	r2,zero,10013e2c <__register_exitproc+0x104>
10013d50:	10c00117 	ldw	r3,4(r2)
10013d54:	010007c4 	movi	r4,31
10013d58:	20c00e16 	blt	r4,r3,10013d94 <__register_exitproc+0x6c>
10013d5c:	1a000044 	addi	r8,r3,1
10013d60:	8800221e 	bne	r17,zero,10013dec <__register_exitproc+0xc4>
10013d64:	18c00084 	addi	r3,r3,2
10013d68:	18c7883a 	add	r3,r3,r3
10013d6c:	18c7883a 	add	r3,r3,r3
10013d70:	12000115 	stw	r8,4(r2)
10013d74:	10c7883a 	add	r3,r2,r3
10013d78:	19400015 	stw	r5,0(r3)
10013d7c:	0005883a 	mov	r2,zero
10013d80:	dfc00517 	ldw	ra,20(sp)
10013d84:	dc400417 	ldw	r17,16(sp)
10013d88:	dc000317 	ldw	r16,12(sp)
10013d8c:	dec00604 	addi	sp,sp,24
10013d90:	f800283a 	ret
10013d94:	00800034 	movhi	r2,0
10013d98:	10800004 	addi	r2,r2,0
10013d9c:	10002626 	beq	r2,zero,10013e38 <__register_exitproc+0x110>
10013da0:	01006404 	movi	r4,400
10013da4:	d9400015 	stw	r5,0(sp)
10013da8:	d9800115 	stw	r6,4(sp)
10013dac:	d9c00215 	stw	r7,8(sp)
10013db0:	00000000 	call	10000000 <__alt_mem_sdram>
10013db4:	d9400017 	ldw	r5,0(sp)
10013db8:	d9800117 	ldw	r6,4(sp)
10013dbc:	d9c00217 	ldw	r7,8(sp)
10013dc0:	10001d26 	beq	r2,zero,10013e38 <__register_exitproc+0x110>
10013dc4:	81000017 	ldw	r4,0(r16)
10013dc8:	10000115 	stw	zero,4(r2)
10013dcc:	02000044 	movi	r8,1
10013dd0:	22405217 	ldw	r9,328(r4)
10013dd4:	0007883a 	mov	r3,zero
10013dd8:	12400015 	stw	r9,0(r2)
10013ddc:	20805215 	stw	r2,328(r4)
10013de0:	10006215 	stw	zero,392(r2)
10013de4:	10006315 	stw	zero,396(r2)
10013de8:	883fde26 	beq	r17,zero,10013d64 <__alt_data_end+0xf8013d64>
10013dec:	18c9883a 	add	r4,r3,r3
10013df0:	2109883a 	add	r4,r4,r4
10013df4:	1109883a 	add	r4,r2,r4
10013df8:	21802215 	stw	r6,136(r4)
10013dfc:	01800044 	movi	r6,1
10013e00:	12406217 	ldw	r9,392(r2)
10013e04:	30cc983a 	sll	r6,r6,r3
10013e08:	4992b03a 	or	r9,r9,r6
10013e0c:	12406215 	stw	r9,392(r2)
10013e10:	21c04215 	stw	r7,264(r4)
10013e14:	01000084 	movi	r4,2
10013e18:	893fd21e 	bne	r17,r4,10013d64 <__alt_data_end+0xf8013d64>
10013e1c:	11006317 	ldw	r4,396(r2)
10013e20:	218cb03a 	or	r6,r4,r6
10013e24:	11806315 	stw	r6,396(r2)
10013e28:	003fce06 	br	10013d64 <__alt_data_end+0xf8013d64>
10013e2c:	18805304 	addi	r2,r3,332
10013e30:	18805215 	stw	r2,328(r3)
10013e34:	003fc606 	br	10013d50 <__alt_data_end+0xf8013d50>
10013e38:	00bfffc4 	movi	r2,-1
10013e3c:	003fd006 	br	10013d80 <__alt_data_end+0xf8013d80>

10013e40 <__call_exitprocs>:
10013e40:	defff504 	addi	sp,sp,-44
10013e44:	df000915 	stw	fp,36(sp)
10013e48:	dd400615 	stw	r21,24(sp)
10013e4c:	dc800315 	stw	r18,12(sp)
10013e50:	dfc00a15 	stw	ra,40(sp)
10013e54:	ddc00815 	stw	r23,32(sp)
10013e58:	dd800715 	stw	r22,28(sp)
10013e5c:	dd000515 	stw	r20,20(sp)
10013e60:	dcc00415 	stw	r19,16(sp)
10013e64:	dc400215 	stw	r17,8(sp)
10013e68:	dc000115 	stw	r16,4(sp)
10013e6c:	d9000015 	stw	r4,0(sp)
10013e70:	2839883a 	mov	fp,r5
10013e74:	04800044 	movi	r18,1
10013e78:	057fffc4 	movi	r21,-1
10013e7c:	00840074 	movhi	r2,4097
10013e80:	10987504 	addi	r2,r2,25044
10013e84:	12000017 	ldw	r8,0(r2)
10013e88:	45005217 	ldw	r20,328(r8)
10013e8c:	44c05204 	addi	r19,r8,328
10013e90:	a0001c26 	beq	r20,zero,10013f04 <__call_exitprocs+0xc4>
10013e94:	a0800117 	ldw	r2,4(r20)
10013e98:	15ffffc4 	addi	r23,r2,-1
10013e9c:	b8000d16 	blt	r23,zero,10013ed4 <__call_exitprocs+0x94>
10013ea0:	14000044 	addi	r16,r2,1
10013ea4:	8421883a 	add	r16,r16,r16
10013ea8:	8421883a 	add	r16,r16,r16
10013eac:	84402004 	addi	r17,r16,128
10013eb0:	a463883a 	add	r17,r20,r17
10013eb4:	a421883a 	add	r16,r20,r16
10013eb8:	e0001e26 	beq	fp,zero,10013f34 <__call_exitprocs+0xf4>
10013ebc:	80804017 	ldw	r2,256(r16)
10013ec0:	e0801c26 	beq	fp,r2,10013f34 <__call_exitprocs+0xf4>
10013ec4:	bdffffc4 	addi	r23,r23,-1
10013ec8:	843fff04 	addi	r16,r16,-4
10013ecc:	8c7fff04 	addi	r17,r17,-4
10013ed0:	bd7ff91e 	bne	r23,r21,10013eb8 <__alt_data_end+0xf8013eb8>
10013ed4:	00800034 	movhi	r2,0
10013ed8:	10800004 	addi	r2,r2,0
10013edc:	10000926 	beq	r2,zero,10013f04 <__call_exitprocs+0xc4>
10013ee0:	a0800117 	ldw	r2,4(r20)
10013ee4:	1000301e 	bne	r2,zero,10013fa8 <__call_exitprocs+0x168>
10013ee8:	a0800017 	ldw	r2,0(r20)
10013eec:	10003226 	beq	r2,zero,10013fb8 <__call_exitprocs+0x178>
10013ef0:	a009883a 	mov	r4,r20
10013ef4:	98800015 	stw	r2,0(r19)
10013ef8:	00000000 	call	10000000 <__alt_mem_sdram>
10013efc:	9d000017 	ldw	r20,0(r19)
10013f00:	a03fe41e 	bne	r20,zero,10013e94 <__alt_data_end+0xf8013e94>
10013f04:	dfc00a17 	ldw	ra,40(sp)
10013f08:	df000917 	ldw	fp,36(sp)
10013f0c:	ddc00817 	ldw	r23,32(sp)
10013f10:	dd800717 	ldw	r22,28(sp)
10013f14:	dd400617 	ldw	r21,24(sp)
10013f18:	dd000517 	ldw	r20,20(sp)
10013f1c:	dcc00417 	ldw	r19,16(sp)
10013f20:	dc800317 	ldw	r18,12(sp)
10013f24:	dc400217 	ldw	r17,8(sp)
10013f28:	dc000117 	ldw	r16,4(sp)
10013f2c:	dec00b04 	addi	sp,sp,44
10013f30:	f800283a 	ret
10013f34:	a0800117 	ldw	r2,4(r20)
10013f38:	80c00017 	ldw	r3,0(r16)
10013f3c:	10bfffc4 	addi	r2,r2,-1
10013f40:	15c01426 	beq	r2,r23,10013f94 <__call_exitprocs+0x154>
10013f44:	80000015 	stw	zero,0(r16)
10013f48:	183fde26 	beq	r3,zero,10013ec4 <__alt_data_end+0xf8013ec4>
10013f4c:	95c8983a 	sll	r4,r18,r23
10013f50:	a0806217 	ldw	r2,392(r20)
10013f54:	a5800117 	ldw	r22,4(r20)
10013f58:	2084703a 	and	r2,r4,r2
10013f5c:	10000b26 	beq	r2,zero,10013f8c <__call_exitprocs+0x14c>
10013f60:	a0806317 	ldw	r2,396(r20)
10013f64:	2088703a 	and	r4,r4,r2
10013f68:	20000c1e 	bne	r4,zero,10013f9c <__call_exitprocs+0x15c>
10013f6c:	89400017 	ldw	r5,0(r17)
10013f70:	d9000017 	ldw	r4,0(sp)
10013f74:	183ee83a 	callr	r3
10013f78:	a0800117 	ldw	r2,4(r20)
10013f7c:	15bfbf1e 	bne	r2,r22,10013e7c <__alt_data_end+0xf8013e7c>
10013f80:	98800017 	ldw	r2,0(r19)
10013f84:	153fcf26 	beq	r2,r20,10013ec4 <__alt_data_end+0xf8013ec4>
10013f88:	003fbc06 	br	10013e7c <__alt_data_end+0xf8013e7c>
10013f8c:	183ee83a 	callr	r3
10013f90:	003ff906 	br	10013f78 <__alt_data_end+0xf8013f78>
10013f94:	a5c00115 	stw	r23,4(r20)
10013f98:	003feb06 	br	10013f48 <__alt_data_end+0xf8013f48>
10013f9c:	89000017 	ldw	r4,0(r17)
10013fa0:	183ee83a 	callr	r3
10013fa4:	003ff406 	br	10013f78 <__alt_data_end+0xf8013f78>
10013fa8:	a0800017 	ldw	r2,0(r20)
10013fac:	a027883a 	mov	r19,r20
10013fb0:	1029883a 	mov	r20,r2
10013fb4:	003fb606 	br	10013e90 <__alt_data_end+0xf8013e90>
10013fb8:	0005883a 	mov	r2,zero
10013fbc:	003ffb06 	br	10013fac <__alt_data_end+0xf8013fac>

10013fc0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
10013fc0:	defffd04 	addi	sp,sp,-12
10013fc4:	df000215 	stw	fp,8(sp)
10013fc8:	df000204 	addi	fp,sp,8
10013fcc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10013fd0:	0001883a 	nop
10013fd4:	e0bfff17 	ldw	r2,-4(fp)
10013fd8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
10013fdc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10013fe0:	10000226 	beq	r2,zero,10013fec <_exit+0x2c>
    ALT_SIM_FAIL();
10013fe4:	002af070 	cmpltui	zero,zero,43969
10013fe8:	00000106 	br	10013ff0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
10013fec:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10013ff0:	003fff06 	br	10013ff0 <__alt_data_end+0xf8013ff0>

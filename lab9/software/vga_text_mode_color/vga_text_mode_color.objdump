
vga_text_mode_color.elf:     file format elf32-littlenios2
vga_text_mode_color.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000230

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x00014270 memsz 0x00014270 flags r-x
    LOAD off    0x00015290 vaddr 0x10014290 paddr 0x10016064 align 2**12
         filesz 0x00001dd4 memsz 0x00001dd4 flags rw-
    LOAD off    0x00017e38 vaddr 0x10017e38 paddr 0x10017e38 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013c34  10000230  10000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000042c  10013e64  10013e64  00014e64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001dd4  10014290  10016064  00015290  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10017e38  10017e38  00017e38  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00017064  2**0
                  CONTENTS
  7 .sdram        00000000  10017f98  10017f98  00017064  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00017064  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000fb0  00000000  00000000  00017088  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00027190  00000000  00000000  00018038  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009c59  00000000  00000000  0003f1c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000cfb8  00000000  00000000  00048e21  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002390  00000000  00000000  00055ddc  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003a3d  00000000  00000000  0005816c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001cae6  00000000  00000000  0005bba9  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00078690  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001ae0  00000000  00000000  000786d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007d5ad  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0007d5b0  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007d5bc  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007d5bd  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0007d5be  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007d5c2  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0007d5c6  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0007d5ca  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0007d5d5  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0007d5e0  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  0007d5eb  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000000e  00000000  00000000  0007d5f3  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0004d794  00000000  00000000  0007d601  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000230 l    d  .text	00000000 .text
10013e64 l    d  .rodata	00000000 .rodata
10014290 l    d  .rwdata	00000000 .rwdata
10017e38 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
10017f98 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../vga_text_mode_color_bsp//obj/HAL/src/crt0.o
10000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 palette_test.c
1001601c l     O .rwdata	00000004 vga_ctrl
10014290 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
10016020 l     O .rwdata	00000004 vga_ctrl
10014400 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
10013f96 l     O .rodata	00000010 zeroes.4389
10013fa6 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
10013fb6 l     O .rodata	00000010 zeroes.4404
10005734 l     F .text	000000bc __sbprintf
10013fc6 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10005944 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1000749c l     F .text	00000008 __fp_unlock
100074b0 l     F .text	0000019c __sinit.part.1
1000764c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
10014570 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
100149b4 l     O .rwdata	00000020 lc_ctype_charset
10014994 l     O .rwdata	00000020 lc_message_charset
100149d4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
10013ff8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001411c l     O .rodata	00000010 zeroes.4333
1001412c l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfprintf.c
1000c090 l     F .text	000000fc __sprint_r.part.0
1001413c l     O .rodata	00000010 zeroes.4349
1000d6cc l     F .text	000000bc __sbprintf
1001414c l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
10011644 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
10011758 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
10011784 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
10011878 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
10011960 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
10011a4c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
10011c28 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10016054 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
10011ecc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
10012008 l     F .text	00000034 alt_dev_reg
10014fbc l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
100122e4 l     F .text	0000020c altera_avalon_jtag_uart_irq
100124f0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
10012dcc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1001322c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1001338c l     F .text	0000003c alt_get_errno
100133c8 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10017e6c g     O .bss	00000004 alt_instruction_exception_handler
1000a164 g     F .text	00000074 _mprec_log10
1000a250 g     F .text	0000008c __any_on
1000dc80 g     F .text	00000054 _isatty_r
10014004 g     O .rodata	00000028 __mprec_tinytens
10011b64 g     F .text	0000007c alt_main
10000ed4 g     F .text	000000c0 _puts_r
10017e98 g     O .bss	00000100 alt_irq
1000dcd4 g     F .text	00000060 _lseek_r
10016064 g       *ABS*	00000000 __flash_rwdata_start
1001001c g     F .text	00000088 .hidden __eqdf2
10017f98 g       *ABS*	00000000 __alt_heap_start
10000e98 g     F .text	0000003c printf
1000deec g     F .text	0000009c _wcrtomb_r
1000a9e0 g     F .text	0000005c __sseek
100077fc g     F .text	00000010 __sinit
1000dd94 g     F .text	00000140 __swbuf_r
100082d0 g     F .text	0000007c _setlocale_r
10007654 g     F .text	00000078 __sfmoreglue
10011c04 g     F .text	00000024 __malloc_unlock
10000764 g     F .text	0000026c textVGAColorScreenSaver
10008fa0 g     F .text	0000015c memmove
100077e4 g     F .text	00000018 _cleanup
10009224 g     F .text	000000a8 _Balloc
100100a4 g     F .text	000000dc .hidden __gtdf2
100137b4 g     F .text	00000024 altera_nios2_gen2_irq_init
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
1000dc24 g     F .text	0000005c _fstat_r
10017e50 g     O .bss	00000004 errno
1000a95c g     F .text	00000008 __seofread
1000acf0 g     F .text	000013a0 ___svfiprintf_internal_r
10017e58 g     O .bss	00000004 alt_argv
1001e01c g       *ABS*	00000000 _gp
10011e9c g     F .text	00000030 usleep
10000420 g     F .text	0000008c textVGAColorClr
10014e3c g     O .rwdata	00000180 alt_fd_list
100137d8 g     F .text	00000090 alt_find_dev
10008e58 g     F .text	00000148 memcpy
100074a4 g     F .text	0000000c _cleanup_r
1001145c g     F .text	000000dc .hidden __floatsidf
10013310 g     F .text	0000007c alt_io_redirect
10010180 g     F .text	000000f4 .hidden __ltdf2
10013e64 g       *ABS*	00000000 __DTOR_END__
10000f94 g     F .text	00000014 puts
10013a34 g     F .text	0000009c alt_exception_cause_generated_bad_addr
1000a840 g     F .text	00000074 __fpclassifyd
1000a0c0 g     F .text	000000a4 __ratio
1000d6b0 g     F .text	0000001c __vfiprintf_internal
100126e8 g     F .text	0000021c altera_avalon_jtag_uart_read
10000e68 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10000d84 g     F .text	00000064 .hidden __udivsi3
100118b4 g     F .text	000000ac isatty
10014054 g     O .rodata	000000c8 __mprec_tens
1000834c g     F .text	0000000c __locale_charset
10017e4c g     O .bss	00000004 __malloc_top_pad
1001602c g     O .rwdata	00000004 __mb_cur_max
1000837c g     F .text	0000000c _localeconv_r
10009658 g     F .text	0000003c __i2b
10007c80 g     F .text	000004c8 __sfvwrite_r
1000a8b4 g     F .text	00000054 _sbrk_r
1000dd34 g     F .text	00000060 _read_r
1001604c g     O .rwdata	00000004 alt_max_fd
1000d918 g     F .text	000000f0 _fclose_r
1000746c g     F .text	00000030 fflush
10017e48 g     O .bss	00000004 __malloc_max_sbrked_mem
1000eda0 g     F .text	000008ac .hidden __adddf3
10009e68 g     F .text	0000010c __b2d
1000e7dc g     F .text	000005c4 .hidden __umoddi3
10011a88 g     F .text	000000dc lseek
10016024 g     O .rwdata	00000004 _global_impure_ptr
1000a2dc g     F .text	00000564 _realloc_r
10017f98 g       *ABS*	00000000 __bss_end
1001313c g     F .text	000000f0 alt_iic_isr_register
100136ac g     F .text	00000108 alt_tick
1000e1e0 g     F .text	000005fc .hidden __udivdi3
1000db80 g     F .text	00000024 _fputwc_r
1001402c g     O .rodata	00000028 __mprec_bigtens
1000943c g     F .text	00000104 __s2b
10011538 g     F .text	000000a8 .hidden __floatunsidf
10009ba8 g     F .text	00000060 __mcmp
1000781c g     F .text	00000018 __fp_lock_all
100130f0 g     F .text	0000004c alt_ic_irq_enabled
10013610 g     F .text	0000009c alt_alarm_stop
10017e60 g     O .bss	00000004 alt_irq_active
100000fc g     F .exceptions	000000d4 alt_irq_handler
10014e14 g     O .rwdata	00000028 alt_dev_null
10012dac g     F .text	00000020 alt_dcache_flush_all
10009540 g     F .text	00000068 __hi0bits
100113dc g     F .text	00000080 .hidden __fixdfsi
10016064 g       *ABS*	00000000 __ram_rwdata_end
10016044 g     O .rwdata	00000008 alt_dev_list
10011f08 g     F .text	00000100 write
10014290 g       *ABS*	00000000 __ram_rodata_end
100117c0 g     F .text	000000b8 fstat
10010180 g     F .text	000000f4 .hidden __ledf2
10009920 g     F .text	00000140 __pow5mult
1000c1a4 g     F .text	0000150c ___vfiprintf_internal_r
10017e40 g     O .bss	00000004 __nlocale_changed
10000de8 g     F .text	00000058 .hidden __umodsi3
10017f98 g       *ABS*	00000000 end
10012224 g     F .text	000000c0 altera_avalon_jtag_uart_init
100001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
10013e64 g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
100115e0 g     F .text	00000064 .hidden __clzsi2
10012904 g     F .text	00000224 altera_avalon_jtag_uart_write
1000780c g     F .text	00000004 __sfp_lock_acquire
10008d74 g     F .text	000000e4 memchr
1000343c g     F .text	000022dc ___vfprintf_internal_r
10001024 g     F .text	00000058 _sprintf_r
10007970 g     F .text	00000310 _free_r
10008358 g     F .text	00000010 __locale_mb_cur_max
10013cb0 g     F .text	00000180 __call_exitprocs
10017e3c g     O .bss	00000004 __mlocale_changed
10016030 g     O .rwdata	00000004 __malloc_sbrk_base
10000230 g     F .text	0000003c _start
10017e64 g     O .bss	00000004 _alt_tick_rate
10000fc0 g     F .text	00000064 rand
10009a60 g     F .text	00000148 __lshift
10017e68 g     O .bss	00000004 _alt_nticks
10011c64 g     F .text	00000104 read
10012074 g     F .text	0000004c alt_sys_init
1000ab20 g     F .text	000001d0 __ssprint_r
10013b98 g     F .text	00000118 __register_exitproc
10009694 g     F .text	0000028c __multiply
10012590 g     F .text	00000068 altera_avalon_jtag_uart_close
10000e40 g     F .text	00000028 .hidden __mulsi3
10014290 g       *ABS*	00000000 __ram_rwdata_start
10013e64 g       *ABS*	00000000 __ram_rodata_start
10017e70 g     O .bss	00000028 __malloc_current_mallinfo
10009f74 g     F .text	0000014c __d2b
100120c0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
10013970 g     F .text	000000c4 alt_get_fd
10012c54 g     F .text	00000158 alt_busy_sleep
1000d7e8 g     F .text	00000054 _close_r
10013b1c g     F .text	0000007c memcmp
10012180 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10017f98 g       *ABS*	00000000 __alt_stack_base
100121d0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
100057f0 g     F .text	00000154 __swsetup_r
1000f64c g     F .text	000009d0 .hidden __divdf3
100076cc g     F .text	00000118 __sfp
1000a1d8 g     F .text	00000078 __copybits
10014a0c g     O .rwdata	00000408 __malloc_av_
10007818 g     F .text	00000004 __sinit_lock_release
10010274 g     F .text	0000086c .hidden __muldf3
1000a908 g     F .text	00000054 __sread
10013868 g     F .text	00000108 alt_find_file
10012e08 g     F .text	000000a4 alt_dev_llist_insert
10011be0 g     F .text	00000024 __malloc_lock
10011dec g     F .text	000000b0 sbrk
10001180 g     F .text	000022bc ___svfprintf_internal_r
10007410 g     F .text	0000005c _fflush_r
1000d83c g     F .text	000000dc _calloc_r
10017e38 g       *ABS*	00000000 __bss_start
100090fc g     F .text	00000128 memset
10000c40 g     F .text	0000004c main
10017e5c g     O .bss	00000004 alt_envp
10017e44 g     O .bss	00000004 __malloc_max_total_mem
10012120 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1000ded4 g     F .text	00000018 __swbuf
10000fa8 g     F .text	00000018 srand
1000aa3c g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000da08 g     F .text	00000014 fclose
10005b6c g     F .text	00001688 _dtoa_r
10008568 g     F .text	0000080c _malloc_r
1000e048 g     F .text	00000030 __ascii_wctomb
10016050 g     O .rwdata	00000004 alt_errno
10008148 g     F .text	000000c4 _fwalk
10000c8c g     F .text	00000084 .hidden __divsi3
100005bc g     F .text	000001a8 setColorPalette
1000784c g     F .text	00000124 _malloc_trim_r
10013e64 g       *ABS*	00000000 __CTOR_END__
1000aa44 g     F .text	000000dc strcmp
10013e64 g       *ABS*	00000000 __flash_rodata_start
10013e64 g       *ABS*	00000000 __DTOR_LIST__
1001001c g     F .text	00000088 .hidden __nedf2
1001203c g     F .text	00000038 alt_irq_init
10011d68 g     F .text	00000084 alt_release_fd
1000107c g     F .text	0000006c sprintf
1001415c g     O .rodata	00000100 .hidden __clz_tab
10017e38 g     O .bss	00000004 _PathLocale
10013ad0 g     F .text	00000014 atexit
1000d788 g     F .text	00000060 _write_r
10008388 g     F .text	00000018 setlocale
10016028 g     O .rwdata	00000004 _impure_ptr
10017e54 g     O .bss	00000004 alt_argc
100071f4 g     F .text	0000021c __sflush_r
10012f0c g     F .text	00000060 _do_dtors
10008374 g     F .text	00000008 __locale_cjk_lang
10000020 g       .exceptions	00000000 alt_irq_entry
10009e04 g     F .text	00000064 __ulp
10007834 g     F .text	00000018 __fp_unlock_all
1001603c g     O .rwdata	00000008 alt_fs_list
10000020 g       *ABS*	00000000 __ram_exceptions_start
100083a0 g     F .text	0000000c localeconv
10012f8c g     F .text	00000050 alt_ic_isr_register
10016064 g       *ABS*	00000000 _edata
10017f98 g       *ABS*	00000000 _end
100009d0 g     F .text	00000270 textVGAReadWriteTest
1000da1c g     F .text	00000164 __fputwc
10000230 g       *ABS*	00000000 __ram_exceptions_end
100125f8 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
100004ac g     F .text	00000110 textVGADrawColorText
10013064 g     F .text	0000008c alt_ic_irq_disable
1000a964 g     F .text	0000007c __swrite
10016034 g     O .rwdata	00000004 __malloc_trim_threshold
10008368 g     F .text	0000000c __locale_msgcharset
10013ae4 g     F .text	00000038 exit
1000820c g     F .text	000000c4 _fwalk_reent
10009c08 g     F .text	000001fc __mdiff
10000d10 g     F .text	00000074 .hidden __modsi3
18000000 g       *ABS*	00000000 __alt_data_end
10000020 g     F .exceptions	00000000 alt_exception
10007810 g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
10013e30 g     F .text	00000034 _exit
10012b28 g     F .text	0000012c alt_alarm_start
1000e0d4 g     F .text	0000010c .hidden __muldi3
100083ac g     F .text	000001bc __smakebuf_r
100010e8 g     F .text	00000098 strlen
100134b4 g     F .text	0000015c open
100100a4 g     F .text	000000dc .hidden __gedf2
10016038 g     O .rwdata	00000004 __wctomb
1000c18c g     F .text	00000018 __sprint_r
10012f6c g     F .text	00000020 alt_icache_flush_all
10016058 g     O .rwdata	00000004 alt_priority_mask
10012fdc g     F .text	00000088 alt_ic_irq_enable
10005718 g     F .text	0000001c __vfprintf_internal
1000e078 g     F .text	0000005c _wctomb_r
10010ae0 g     F .text	000008fc .hidden __subdf3
100095a8 g     F .text	000000b0 __lo0bits
1001605c g     O .rwdata	00000008 alt_alarm_list
10012eac g     F .text	00000060 _do_ctors
1000df88 g     F .text	000000c0 wcrtomb
10011680 g     F .text	000000d8 close
1000026c g     F .text	000001b4 paletteTest
100119c8 g     F .text	00000084 alt_load
1000dba4 g     F .text	00000080 fputwc
10007814 g     F .text	00000004 __sinit_lock_acquire
100092f4 g     F .text	00000148 __multadd
100092cc g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08408c14 	ori	at,at,560
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001d00 	call	100001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0fffb17 	ldw	r3,-20(fp)
10000130:	e0bffc17 	ldw	r2,-16(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001426 	beq	r2,zero,1000018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	00840074 	movhi	r2,4097
10000140:	109fa604 	addi	r2,r2,32408
10000144:	e0fffd17 	ldw	r3,-12(fp)
10000148:	180690fa 	slli	r3,r3,3
1000014c:	10c5883a 	add	r2,r2,r3
10000150:	10c00017 	ldw	r3,0(r2)
10000154:	00840074 	movhi	r2,4097
10000158:	109fa604 	addi	r2,r2,32408
1000015c:	e13ffd17 	ldw	r4,-12(fp)
10000160:	200890fa 	slli	r4,r4,3
10000164:	1105883a 	add	r2,r2,r4
10000168:	10800104 	addi	r2,r2,4
1000016c:	10800017 	ldw	r2,0(r2)
10000170:	1009883a 	mov	r4,r2
10000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1000017c:	0005313a 	rdctl	r2,ipending
10000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10000184:	e0bfff17 	ldw	r2,-4(fp)
10000188:	00000706 	br	100001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1000018c:	e0bffc17 	ldw	r2,-16(fp)
10000190:	1085883a 	add	r2,r2,r2
10000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10000198:	e0bffd17 	ldw	r2,-12(fp)
1000019c:	10800044 	addi	r2,r2,1
100001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
100001a4:	003fe106 	br	1000012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
100001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
100001ac:	e0bffb17 	ldw	r2,-20(fp)
100001b0:	103fdb1e 	bne	r2,zero,10000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001b4:	0001883a 	nop
}
100001b8:	0001883a 	nop
100001bc:	e037883a 	mov	sp,fp
100001c0:	dfc00117 	ldw	ra,4(sp)
100001c4:	df000017 	ldw	fp,0(sp)
100001c8:	dec00204 	addi	sp,sp,8
100001cc:	f800283a 	ret

100001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001d0:	defffb04 	addi	sp,sp,-20
100001d4:	dfc00415 	stw	ra,16(sp)
100001d8:	df000315 	stw	fp,12(sp)
100001dc:	df000304 	addi	fp,sp,12
100001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
100001e4:	00bfffc4 	movi	r2,-1
100001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
100001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f0:	d0a79417 	ldw	r2,-25008(gp)
100001f4:	10000726 	beq	r2,zero,10000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
100001f8:	d0a79417 	ldw	r2,-25008(gp)
100001fc:	e0fffd17 	ldw	r3,-12(fp)
10000200:	e1bffe17 	ldw	r6,-8(fp)
10000204:	e17fff17 	ldw	r5,-4(fp)
10000208:	1809883a 	mov	r4,r3
1000020c:	103ee83a 	callr	r2
10000210:	00000206 	br	1000021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000218:	0005883a 	mov	r2,zero
}
1000021c:	e037883a 	mov	sp,fp
10000220:	dfc00117 	ldw	ra,4(sp)
10000224:	df000017 	ldw	fp,0(sp)
10000228:	dec00204 	addi	sp,sp,8
1000022c:	f800283a 	ret

Disassembly of section .text:

10000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000230:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
10000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000238:	06840074 	movhi	gp,4097
    ori gp, gp, %lo(_gp)
1000023c:	d6b80714 	ori	gp,gp,57372
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000240:	00840074 	movhi	r2,4097
    ori r2, r2, %lo(__bss_start)
10000244:	109f8e14 	ori	r2,r2,32312

    movhi r3, %hi(__bss_end)
10000248:	00c40074 	movhi	r3,4097
    ori r3, r3, %lo(__bss_end)
1000024c:	18dfe614 	ori	r3,r3,32664

    beq r2, r3, 1f
10000250:	10c00326 	beq	r2,r3,10000260 <_start+0x30>

0:
    stw zero, (r2)
10000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1000025c:	10fffd36 	bltu	r2,r3,10000254 <__alt_data_end+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000260:	00119c80 	call	100119c8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10000264:	0011b640 	call	10011b64 <alt_main>

10000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000268:	003fff06 	br	10000268 <__alt_data_end+0xf8000268>

1000026c <paletteTest>:

#include "text_mode_vga_color.h"


void paletteTest()
{
1000026c:	defffa04 	addi	sp,sp,-24
10000270:	dfc00515 	stw	ra,20(sp)
10000274:	df000415 	stw	fp,16(sp)
10000278:	dc400315 	stw	r17,12(sp)
1000027c:	dc000215 	stw	r16,8(sp)
10000280:	df000404 	addi	fp,sp,16
	textVGAColorClr();
10000284:	00004200 	call	10000420 <textVGAColorClr>
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);
10000288:	00800044 	movi	r2,1
1000028c:	d8800015 	stw	r2,0(sp)
10000290:	000f883a 	mov	r7,zero
10000294:	000d883a 	mov	r6,zero
10000298:	000b883a 	mov	r5,zero
1000029c:	01040074 	movhi	r4,4097
100002a0:	210f9904 	addi	r4,r4,15972
100002a4:	00004ac0 	call	100004ac <textVGADrawColorText>

	for (int i = 0; i < 100; i ++)
100002a8:	e03ffd15 	stw	zero,-12(fp)
100002ac:	00005106 	br	100003f4 <paletteTest+0x188>
	{
		usleep (20000);
100002b0:	01138804 	movi	r4,20000
100002b4:	0011e9c0 	call	10011e9c <usleep>
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
100002b8:	0000fc00 	call	10000fc0 <rand>
100002bc:	1007883a 	mov	r3,r2
100002c0:	00a00034 	movhi	r2,32768
100002c4:	108003c4 	addi	r2,r2,15
100002c8:	1884703a 	and	r2,r3,r2
100002cc:	1000040e 	bge	r2,zero,100002e0 <paletteTest+0x74>
100002d0:	10bfffc4 	addi	r2,r2,-1
100002d4:	00fffc04 	movi	r3,-16
100002d8:	10c4b03a 	or	r2,r2,r3
100002dc:	10800044 	addi	r2,r2,1
100002e0:	14003fcc 	andi	r16,r2,255
100002e4:	0000fc00 	call	10000fc0 <rand>
100002e8:	1007883a 	mov	r3,r2
100002ec:	00a00034 	movhi	r2,32768
100002f0:	108003c4 	addi	r2,r2,15
100002f4:	1884703a 	and	r2,r3,r2
100002f8:	1000040e 	bge	r2,zero,1000030c <paletteTest+0xa0>
100002fc:	10bfffc4 	addi	r2,r2,-1
10000300:	00fffc04 	movi	r3,-16
10000304:	10c4b03a 	or	r2,r2,r3
10000308:	10800044 	addi	r2,r2,1
1000030c:	14403fcc 	andi	r17,r2,255
10000310:	0000fc00 	call	10000fc0 <rand>
10000314:	1007883a 	mov	r3,r2
10000318:	00a00034 	movhi	r2,32768
1000031c:	108003c4 	addi	r2,r2,15
10000320:	1884703a 	and	r2,r3,r2
10000324:	1000040e 	bge	r2,zero,10000338 <paletteTest+0xcc>
10000328:	10bfffc4 	addi	r2,r2,-1
1000032c:	00fffc04 	movi	r3,-16
10000330:	10c4b03a 	or	r2,r2,r3
10000334:	10800044 	addi	r2,r2,1
10000338:	10803fcc 	andi	r2,r2,255
1000033c:	100f883a 	mov	r7,r2
10000340:	880d883a 	mov	r6,r17
10000344:	800b883a 	mov	r5,r16
10000348:	0009883a 	mov	r4,zero
1000034c:	00005bc0 	call	100005bc <setColorPalette>
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
10000350:	0000fc00 	call	10000fc0 <rand>
10000354:	1007883a 	mov	r3,r2
10000358:	00a00034 	movhi	r2,32768
1000035c:	108003c4 	addi	r2,r2,15
10000360:	1884703a 	and	r2,r3,r2
10000364:	1000040e 	bge	r2,zero,10000378 <paletteTest+0x10c>
10000368:	10bfffc4 	addi	r2,r2,-1
1000036c:	00fffc04 	movi	r3,-16
10000370:	10c4b03a 	or	r2,r2,r3
10000374:	10800044 	addi	r2,r2,1
10000378:	14003fcc 	andi	r16,r2,255
1000037c:	0000fc00 	call	10000fc0 <rand>
10000380:	1007883a 	mov	r3,r2
10000384:	00a00034 	movhi	r2,32768
10000388:	108003c4 	addi	r2,r2,15
1000038c:	1884703a 	and	r2,r3,r2
10000390:	1000040e 	bge	r2,zero,100003a4 <paletteTest+0x138>
10000394:	10bfffc4 	addi	r2,r2,-1
10000398:	00fffc04 	movi	r3,-16
1000039c:	10c4b03a 	or	r2,r2,r3
100003a0:	10800044 	addi	r2,r2,1
100003a4:	14403fcc 	andi	r17,r2,255
100003a8:	0000fc00 	call	10000fc0 <rand>
100003ac:	1007883a 	mov	r3,r2
100003b0:	00a00034 	movhi	r2,32768
100003b4:	108003c4 	addi	r2,r2,15
100003b8:	1884703a 	and	r2,r3,r2
100003bc:	1000040e 	bge	r2,zero,100003d0 <paletteTest+0x164>
100003c0:	10bfffc4 	addi	r2,r2,-1
100003c4:	00fffc04 	movi	r3,-16
100003c8:	10c4b03a 	or	r2,r2,r3
100003cc:	10800044 	addi	r2,r2,1
100003d0:	10803fcc 	andi	r2,r2,255
100003d4:	100f883a 	mov	r7,r2
100003d8:	880d883a 	mov	r6,r17
100003dc:	800b883a 	mov	r5,r16
100003e0:	01000044 	movi	r4,1
100003e4:	00005bc0 	call	100005bc <setColorPalette>
void paletteTest()
{
	textVGAColorClr();
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);

	for (int i = 0; i < 100; i ++)
100003e8:	e0bffd17 	ldw	r2,-12(fp)
100003ec:	10800044 	addi	r2,r2,1
100003f0:	e0bffd15 	stw	r2,-12(fp)
100003f4:	e0bffd17 	ldw	r2,-12(fp)
100003f8:	10801910 	cmplti	r2,r2,100
100003fc:	103fac1e 	bne	r2,zero,100002b0 <__alt_data_end+0xf80002b0>
		usleep (20000);
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
	}

}
10000400:	0001883a 	nop
10000404:	e6fffe04 	addi	sp,fp,-8
10000408:	dfc00317 	ldw	ra,12(sp)
1000040c:	df000217 	ldw	fp,8(sp)
10000410:	dc400117 	ldw	r17,4(sp)
10000414:	dc000017 	ldw	r16,0(sp)
10000418:	dec00404 	addi	sp,sp,16
1000041c:	f800283a 	ret

10000420 <textVGAColorClr>:
#include <alt_types.h>
#include "text_mode_vga_color.h"
#include "palette_test.h"

void textVGAColorClr()
{
10000420:	defffd04 	addi	sp,sp,-12
10000424:	df000215 	stw	fp,8(sp)
10000428:	df000204 	addi	fp,sp,8
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
1000042c:	e03ffe15 	stw	zero,-8(fp)
10000430:	00000706 	br	10000450 <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
10000434:	d0e00117 	ldw	r3,-32764(gp)
10000438:	e0bffe17 	ldw	r2,-8(fp)
1000043c:	1885883a 	add	r2,r3,r2
10000440:	10000005 	stb	zero,0(r2)
#include "text_mode_vga_color.h"
#include "palette_test.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
10000444:	e0bffe17 	ldw	r2,-8(fp)
10000448:	10800044 	addi	r2,r2,1
1000044c:	e0bffe15 	stw	r2,-8(fp)
10000450:	e0bffe17 	ldw	r2,-8(fp)
10000454:	1084b010 	cmplti	r2,r2,4800
10000458:	103ff61e 	bne	r2,zero,10000434 <__alt_data_end+0xf8000434>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
    for (int i = 0; i < 8; i++)
1000045c:	e03fff15 	stw	zero,-4(fp)
10000460:	00000a06 	br	1000048c <textVGAColorClr+0x6c>
        vga_ctrl->PALETTE[i] = 0x00000000;
10000464:	d0e00117 	ldw	r3,-32764(gp)
10000468:	e0bfff17 	ldw	r2,-4(fp)
1000046c:	10820004 	addi	r2,r2,2048
10000470:	1085883a 	add	r2,r2,r2
10000474:	1085883a 	add	r2,r2,r2
10000478:	1885883a 	add	r2,r3,r2
1000047c:	10000015 	stw	zero,0(r2)
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
    for (int i = 0; i < 8; i++)
10000480:	e0bfff17 	ldw	r2,-4(fp)
10000484:	10800044 	addi	r2,r2,1
10000488:	e0bfff15 	stw	r2,-4(fp)
1000048c:	e0bfff17 	ldw	r2,-4(fp)
10000490:	10800210 	cmplti	r2,r2,8
10000494:	103ff31e 	bne	r2,zero,10000464 <__alt_data_end+0xf8000464>
        vga_ctrl->PALETTE[i] = 0x00000000;
}
10000498:	0001883a 	nop
1000049c:	e037883a 	mov	sp,fp
100004a0:	df000017 	ldw	fp,0(sp)
100004a4:	dec00104 	addi	sp,sp,4
100004a8:	f800283a 	ret

100004ac <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
100004ac:	defff704 	addi	sp,sp,-36
100004b0:	dfc00815 	stw	ra,32(sp)
100004b4:	df000715 	stw	fp,28(sp)
100004b8:	dc000615 	stw	r16,24(sp)
100004bc:	df000704 	addi	fp,sp,28
100004c0:	e13ffa15 	stw	r4,-24(fp)
100004c4:	e17ffb15 	stw	r5,-20(fp)
100004c8:	e1bffc15 	stw	r6,-16(fp)
100004cc:	3807883a 	mov	r3,r7
100004d0:	e0800217 	ldw	r2,8(fp)
100004d4:	e0fffd05 	stb	r3,-12(fp)
100004d8:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
100004dc:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
100004e0:	00002706 	br	10000580 <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
100004e4:	d4200117 	ldw	r16,-32764(gp)
100004e8:	01401404 	movi	r5,80
100004ec:	e13ffc17 	ldw	r4,-16(fp)
100004f0:	0000e400 	call	10000e40 <__mulsi3>
100004f4:	1007883a 	mov	r3,r2
100004f8:	e0bffb17 	ldw	r2,-20(fp)
100004fc:	1887883a 	add	r3,r3,r2
10000500:	e0bff917 	ldw	r2,-28(fp)
10000504:	1885883a 	add	r2,r3,r2
10000508:	1085883a 	add	r2,r2,r2
1000050c:	1009883a 	mov	r4,r2
10000510:	e0bffe03 	ldbu	r2,-8(fp)
10000514:	1004913a 	slli	r2,r2,4
10000518:	1007883a 	mov	r3,r2
1000051c:	e0bffd03 	ldbu	r2,-12(fp)
10000520:	1884b03a 	or	r2,r3,r2
10000524:	1007883a 	mov	r3,r2
10000528:	8105883a 	add	r2,r16,r4
1000052c:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
10000530:	d4200117 	ldw	r16,-32764(gp)
10000534:	01401404 	movi	r5,80
10000538:	e13ffc17 	ldw	r4,-16(fp)
1000053c:	0000e400 	call	10000e40 <__mulsi3>
10000540:	1007883a 	mov	r3,r2
10000544:	e0bffb17 	ldw	r2,-20(fp)
10000548:	1887883a 	add	r3,r3,r2
1000054c:	e0bff917 	ldw	r2,-28(fp)
10000550:	1885883a 	add	r2,r3,r2
10000554:	1085883a 	add	r2,r2,r2
10000558:	10800044 	addi	r2,r2,1
1000055c:	e0fff917 	ldw	r3,-28(fp)
10000560:	e13ffa17 	ldw	r4,-24(fp)
10000564:	20c7883a 	add	r3,r4,r3
10000568:	18c00003 	ldbu	r3,0(r3)
1000056c:	8085883a 	add	r2,r16,r2
10000570:	10c00005 	stb	r3,0(r2)
		i++;
10000574:	e0bff917 	ldw	r2,-28(fp)
10000578:	10800044 	addi	r2,r2,1
1000057c:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
10000580:	e0bff917 	ldw	r2,-28(fp)
10000584:	e0fffa17 	ldw	r3,-24(fp)
10000588:	1885883a 	add	r2,r3,r2
1000058c:	10800003 	ldbu	r2,0(r2)
10000590:	10803fcc 	andi	r2,r2,255
10000594:	1080201c 	xori	r2,r2,128
10000598:	10bfe004 	addi	r2,r2,-128
1000059c:	103fd11e 	bne	r2,zero,100004e4 <__alt_data_end+0xf80004e4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
100005a0:	0001883a 	nop
100005a4:	e6ffff04 	addi	sp,fp,-4
100005a8:	dfc00217 	ldw	ra,8(sp)
100005ac:	df000117 	ldw	fp,4(sp)
100005b0:	dc000017 	ldw	r16,0(sp)
100005b4:	dec00304 	addi	sp,sp,12
100005b8:	f800283a 	ret

100005bc <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
100005bc:	defffb04 	addi	sp,sp,-20
100005c0:	df000415 	stw	fp,16(sp)
100005c4:	df000404 	addi	fp,sp,16
100005c8:	2011883a 	mov	r8,r4
100005cc:	2809883a 	mov	r4,r5
100005d0:	3007883a 	mov	r3,r6
100005d4:	3805883a 	mov	r2,r7
100005d8:	e23ffc05 	stb	r8,-16(fp)
100005dc:	e13ffd05 	stb	r4,-12(fp)
100005e0:	e0fffe05 	stb	r3,-8(fp)
100005e4:	e0bfff05 	stb	r2,-4(fp)
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	// If even, in letter 16 bits
    if (color % 2 == 0)
100005e8:	e0bffc03 	ldbu	r2,-16(fp)
100005ec:	1080004c 	andi	r2,r2,1
100005f0:	10803fcc 	andi	r2,r2,255
100005f4:	10002c1e 	bne	r2,zero,100006a8 <setColorPalette+0xec>
    {
    	vga_ctrl->PALETTE[color / 2] &= 0xFFFFE000;
100005f8:	d1200117 	ldw	r4,-32764(gp)
100005fc:	e0bffc03 	ldbu	r2,-16(fp)
10000600:	1004d07a 	srli	r2,r2,1
10000604:	11403fcc 	andi	r5,r2,255
10000608:	d0e00117 	ldw	r3,-32764(gp)
1000060c:	10803fcc 	andi	r2,r2,255
10000610:	10820004 	addi	r2,r2,2048
10000614:	1085883a 	add	r2,r2,r2
10000618:	1085883a 	add	r2,r2,r2
1000061c:	1885883a 	add	r2,r3,r2
10000620:	10c00017 	ldw	r3,0(r2)
10000624:	00b80004 	movi	r2,-8192
10000628:	1886703a 	and	r3,r3,r2
1000062c:	28820004 	addi	r2,r5,2048
10000630:	1085883a 	add	r2,r2,r2
10000634:	1085883a 	add	r2,r2,r2
10000638:	2085883a 	add	r2,r4,r2
1000063c:	10c00015 	stw	r3,0(r2)
        vga_ctrl->PALETTE[color / 2] |= red << 9 | green << 5 | blue << 1;
10000640:	d1200117 	ldw	r4,-32764(gp)
10000644:	e0bffc03 	ldbu	r2,-16(fp)
10000648:	1004d07a 	srli	r2,r2,1
1000064c:	11403fcc 	andi	r5,r2,255
10000650:	d0e00117 	ldw	r3,-32764(gp)
10000654:	10803fcc 	andi	r2,r2,255
10000658:	10820004 	addi	r2,r2,2048
1000065c:	1085883a 	add	r2,r2,r2
10000660:	1085883a 	add	r2,r2,r2
10000664:	1885883a 	add	r2,r3,r2
10000668:	10c00017 	ldw	r3,0(r2)
1000066c:	e0bffd03 	ldbu	r2,-12(fp)
10000670:	100c927a 	slli	r6,r2,9
10000674:	e0bffe03 	ldbu	r2,-8(fp)
10000678:	1004917a 	slli	r2,r2,5
1000067c:	308cb03a 	or	r6,r6,r2
10000680:	e0bfff03 	ldbu	r2,-4(fp)
10000684:	1085883a 	add	r2,r2,r2
10000688:	3084b03a 	or	r2,r6,r2
1000068c:	1886b03a 	or	r3,r3,r2
10000690:	28820004 	addi	r2,r5,2048
10000694:	1085883a 	add	r2,r2,r2
10000698:	1085883a 	add	r2,r2,r2
1000069c:	2085883a 	add	r2,r4,r2
100006a0:	10c00015 	stw	r3,0(r2)
    	vga_ctrl->PALETTE[color / 2] &= 0x00001FFF;
        vga_ctrl->PALETTE[color / 2] |= red << 21 | green << 17 | blue << 13;
    }


}
100006a4:	00002a06 	br	10000750 <setColorPalette+0x194>
    	vga_ctrl->PALETTE[color / 2] &= 0xFFFFE000;
        vga_ctrl->PALETTE[color / 2] |= red << 9 | green << 5 | blue << 1;
    }
    else
    {
    	vga_ctrl->PALETTE[color / 2] &= 0x00001FFF;
100006a8:	d1200117 	ldw	r4,-32764(gp)
100006ac:	e0bffc03 	ldbu	r2,-16(fp)
100006b0:	1004d07a 	srli	r2,r2,1
100006b4:	11403fcc 	andi	r5,r2,255
100006b8:	d0e00117 	ldw	r3,-32764(gp)
100006bc:	10803fcc 	andi	r2,r2,255
100006c0:	10820004 	addi	r2,r2,2048
100006c4:	1085883a 	add	r2,r2,r2
100006c8:	1085883a 	add	r2,r2,r2
100006cc:	1885883a 	add	r2,r3,r2
100006d0:	10800017 	ldw	r2,0(r2)
100006d4:	10c7ffcc 	andi	r3,r2,8191
100006d8:	28820004 	addi	r2,r5,2048
100006dc:	1085883a 	add	r2,r2,r2
100006e0:	1085883a 	add	r2,r2,r2
100006e4:	2085883a 	add	r2,r4,r2
100006e8:	10c00015 	stw	r3,0(r2)
        vga_ctrl->PALETTE[color / 2] |= red << 21 | green << 17 | blue << 13;
100006ec:	d1200117 	ldw	r4,-32764(gp)
100006f0:	e0bffc03 	ldbu	r2,-16(fp)
100006f4:	1004d07a 	srli	r2,r2,1
100006f8:	11403fcc 	andi	r5,r2,255
100006fc:	d0e00117 	ldw	r3,-32764(gp)
10000700:	10803fcc 	andi	r2,r2,255
10000704:	10820004 	addi	r2,r2,2048
10000708:	1085883a 	add	r2,r2,r2
1000070c:	1085883a 	add	r2,r2,r2
10000710:	1885883a 	add	r2,r3,r2
10000714:	10800017 	ldw	r2,0(r2)
10000718:	e0fffd03 	ldbu	r3,-12(fp)
1000071c:	180c957a 	slli	r6,r3,21
10000720:	e0fffe03 	ldbu	r3,-8(fp)
10000724:	1806947a 	slli	r3,r3,17
10000728:	30ccb03a 	or	r6,r6,r3
1000072c:	e0ffff03 	ldbu	r3,-4(fp)
10000730:	1806937a 	slli	r3,r3,13
10000734:	30c6b03a 	or	r3,r6,r3
10000738:	10c6b03a 	or	r3,r2,r3
1000073c:	28820004 	addi	r2,r5,2048
10000740:	1085883a 	add	r2,r2,r2
10000744:	1085883a 	add	r2,r2,r2
10000748:	2085883a 	add	r2,r4,r2
1000074c:	10c00015 	stw	r3,0(r2)
    }


}
10000750:	0001883a 	nop
10000754:	e037883a 	mov	sp,fp
10000758:	df000017 	ldw	fp,0(sp)
1000075c:	dec00104 	addi	sp,sp,4
10000760:	f800283a 	ret

10000764 <textVGAColorScreenSaver>:


void textVGAColorScreenSaver()
{
10000764:	deffe004 	addi	sp,sp,-128
10000768:	dfc01f15 	stw	ra,124(sp)
1000076c:	df001e15 	stw	fp,120(sp)
10000770:	dcc01d15 	stw	r19,116(sp)
10000774:	dc801c15 	stw	r18,112(sp)
10000778:	dc401b15 	stw	r17,108(sp)
1000077c:	dc001a15 	stw	r16,104(sp)
10000780:	df001e04 	addi	fp,sp,120
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
10000784:	00004200 	call	10000420 <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
10000788:	e03fe515 	stw	zero,-108(fp)
1000078c:	00002806 	br	10000830 <textVGAColorScreenSaver+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
10000790:	e0bfe517 	ldw	r2,-108(fp)
10000794:	14403fcc 	andi	r17,r2,255
10000798:	04040074 	movhi	r16,4097
1000079c:	84110004 	addi	r16,r16,17408
100007a0:	e0bfe517 	ldw	r2,-108(fp)
100007a4:	014005c4 	movi	r5,23
100007a8:	1009883a 	mov	r4,r2
100007ac:	0000e400 	call	10000e40 <__mulsi3>
100007b0:	8085883a 	add	r2,r16,r2
100007b4:	10800504 	addi	r2,r2,20
100007b8:	10800003 	ldbu	r2,0(r2)
100007bc:	14803fcc 	andi	r18,r2,255
100007c0:	04040074 	movhi	r16,4097
100007c4:	84110004 	addi	r16,r16,17408
100007c8:	e0bfe517 	ldw	r2,-108(fp)
100007cc:	014005c4 	movi	r5,23
100007d0:	1009883a 	mov	r4,r2
100007d4:	0000e400 	call	10000e40 <__mulsi3>
100007d8:	8085883a 	add	r2,r16,r2
100007dc:	10800544 	addi	r2,r2,21
100007e0:	10800003 	ldbu	r2,0(r2)
100007e4:	14c03fcc 	andi	r19,r2,255
100007e8:	04040074 	movhi	r16,4097
100007ec:	84110004 	addi	r16,r16,17408
100007f0:	e0bfe517 	ldw	r2,-108(fp)
100007f4:	014005c4 	movi	r5,23
100007f8:	1009883a 	mov	r4,r2
100007fc:	0000e400 	call	10000e40 <__mulsi3>
10000800:	8085883a 	add	r2,r16,r2
10000804:	10800584 	addi	r2,r2,22
10000808:	10800003 	ldbu	r2,0(r2)
1000080c:	10803fcc 	andi	r2,r2,255
10000810:	100f883a 	mov	r7,r2
10000814:	980d883a 	mov	r6,r19
10000818:	900b883a 	mov	r5,r18
1000081c:	8809883a 	mov	r4,r17
10000820:	00005bc0 	call	100005bc <setColorPalette>
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
10000824:	e0bfe517 	ldw	r2,-108(fp)
10000828:	10800044 	addi	r2,r2,1
1000082c:	e0bfe515 	stw	r2,-108(fp)
10000830:	e0bfe517 	ldw	r2,-108(fp)
10000834:	10800410 	cmplti	r2,r2,16
10000838:	103fd51e 	bne	r2,zero,10000790 <__alt_data_end+0xf8000790>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	while (1)
	{
		fg = rand() % 16;
1000083c:	0000fc00 	call	10000fc0 <rand>
10000840:	1007883a 	mov	r3,r2
10000844:	00a00034 	movhi	r2,32768
10000848:	108003c4 	addi	r2,r2,15
1000084c:	1884703a 	and	r2,r3,r2
10000850:	1000040e 	bge	r2,zero,10000864 <textVGAColorScreenSaver+0x100>
10000854:	10bfffc4 	addi	r2,r2,-1
10000858:	00fffc04 	movi	r3,-16
1000085c:	10c4b03a 	or	r2,r2,r3
10000860:	10800044 	addi	r2,r2,1
10000864:	e0bfe315 	stw	r2,-116(fp)
		bg = rand() % 16;
10000868:	0000fc00 	call	10000fc0 <rand>
1000086c:	1007883a 	mov	r3,r2
10000870:	00a00034 	movhi	r2,32768
10000874:	108003c4 	addi	r2,r2,15
10000878:	1884703a 	and	r2,r3,r2
1000087c:	1000040e 	bge	r2,zero,10000890 <textVGAColorScreenSaver+0x12c>
10000880:	10bfffc4 	addi	r2,r2,-1
10000884:	00fffc04 	movi	r3,-16
10000888:	10c4b03a 	or	r2,r2,r3
1000088c:	10800044 	addi	r2,r2,1
10000890:	e0bfe415 	stw	r2,-112(fp)
		while (fg == bg)
10000894:	00001606 	br	100008f0 <textVGAColorScreenSaver+0x18c>
		{
			fg = rand() % 16;
10000898:	0000fc00 	call	10000fc0 <rand>
1000089c:	1007883a 	mov	r3,r2
100008a0:	00a00034 	movhi	r2,32768
100008a4:	108003c4 	addi	r2,r2,15
100008a8:	1884703a 	and	r2,r3,r2
100008ac:	1000040e 	bge	r2,zero,100008c0 <textVGAColorScreenSaver+0x15c>
100008b0:	10bfffc4 	addi	r2,r2,-1
100008b4:	00fffc04 	movi	r3,-16
100008b8:	10c4b03a 	or	r2,r2,r3
100008bc:	10800044 	addi	r2,r2,1
100008c0:	e0bfe315 	stw	r2,-116(fp)
			bg = rand() % 16;
100008c4:	0000fc00 	call	10000fc0 <rand>
100008c8:	1007883a 	mov	r3,r2
100008cc:	00a00034 	movhi	r2,32768
100008d0:	108003c4 	addi	r2,r2,15
100008d4:	1884703a 	and	r2,r3,r2
100008d8:	1000040e 	bge	r2,zero,100008ec <textVGAColorScreenSaver+0x188>
100008dc:	10bfffc4 	addi	r2,r2,-1
100008e0:	00fffc04 	movi	r3,-16
100008e4:	10c4b03a 	or	r2,r2,r3
100008e8:	10800044 	addi	r2,r2,1
100008ec:	e0bfe415 	stw	r2,-112(fp)
	}
	while (1)
	{
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
100008f0:	e0ffe317 	ldw	r3,-116(fp)
100008f4:	e0bfe417 	ldw	r2,-112(fp)
100008f8:	18bfe726 	beq	r3,r2,10000898 <__alt_data_end+0xf8000898>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
100008fc:	014005c4 	movi	r5,23
10000900:	e13fe317 	ldw	r4,-116(fp)
10000904:	0000e400 	call	10000e40 <__mulsi3>
10000908:	1007883a 	mov	r3,r2
1000090c:	00840074 	movhi	r2,4097
10000910:	10910004 	addi	r2,r2,17408
10000914:	18a1883a 	add	r16,r3,r2
10000918:	014005c4 	movi	r5,23
1000091c:	e13fe417 	ldw	r4,-112(fp)
10000920:	0000e400 	call	10000e40 <__mulsi3>
10000924:	1007883a 	mov	r3,r2
10000928:	00840074 	movhi	r2,4097
1000092c:	10910004 	addi	r2,r2,17408
10000930:	1887883a 	add	r3,r3,r2
10000934:	e0bfe804 	addi	r2,fp,-96
10000938:	180f883a 	mov	r7,r3
1000093c:	800d883a 	mov	r6,r16
10000940:	01440074 	movhi	r5,4097
10000944:	294fa504 	addi	r5,r5,16020
10000948:	1009883a 	mov	r4,r2
1000094c:	000107c0 	call	1000107c <sprintf>
		x = rand() % (80-strlen(color_string));
10000950:	0000fc00 	call	10000fc0 <rand>
10000954:	1021883a 	mov	r16,r2
10000958:	e0bfe804 	addi	r2,fp,-96
1000095c:	1009883a 	mov	r4,r2
10000960:	00010e80 	call	100010e8 <strlen>
10000964:	1007883a 	mov	r3,r2
10000968:	00801404 	movi	r2,80
1000096c:	10c5c83a 	sub	r2,r2,r3
10000970:	100b883a 	mov	r5,r2
10000974:	8009883a 	mov	r4,r16
10000978:	0000de80 	call	10000de8 <__umodsi3>
1000097c:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 30;
10000980:	0000fc00 	call	10000fc0 <rand>
10000984:	01400784 	movi	r5,30
10000988:	1009883a 	mov	r4,r2
1000098c:	0000d100 	call	10000d10 <__modsi3>
10000990:	e0bfe715 	stw	r2,-100(fp)
		textVGADrawColorText (color_string, x, y, bg, fg);
10000994:	e0bfe417 	ldw	r2,-112(fp)
10000998:	11003fcc 	andi	r4,r2,255
1000099c:	e0bfe317 	ldw	r2,-116(fp)
100009a0:	10803fcc 	andi	r2,r2,255
100009a4:	e0ffe804 	addi	r3,fp,-96
100009a8:	d8800015 	stw	r2,0(sp)
100009ac:	200f883a 	mov	r7,r4
100009b0:	e1bfe717 	ldw	r6,-100(fp)
100009b4:	e17fe617 	ldw	r5,-104(fp)
100009b8:	1809883a 	mov	r4,r3
100009bc:	00004ac0 	call	100004ac <textVGADrawColorText>
		usleep (100000);
100009c0:	010000b4 	movhi	r4,2
100009c4:	2121a804 	addi	r4,r4,-31072
100009c8:	0011e9c0 	call	10011e9c <usleep>
	}
100009cc:	003f9b06 	br	1000083c <__alt_data_end+0xf800083c>

100009d0 <textVGAReadWriteTest>:
}

void textVGAReadWriteTest()
{
100009d0:	deffbd04 	addi	sp,sp,-268
100009d4:	dfc04215 	stw	ra,264(sp)
100009d8:	df004115 	stw	fp,260(sp)
100009dc:	dc004015 	stw	r16,256(sp)
100009e0:	df004104 	addi	fp,sp,260
	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
100009e4:	e03fbf15 	stw	zero,-260(fp)
100009e8:	00003106 	br	10000ab0 <textVGAReadWriteTest+0xe0>
	{
		checksum[j] = 0;
100009ec:	e0bfbf17 	ldw	r2,-260(fp)
100009f0:	1085883a 	add	r2,r2,r2
100009f4:	1085883a 	add	r2,r2,r2
100009f8:	e0ffbf04 	addi	r3,fp,-260
100009fc:	1885883a 	add	r2,r3,r2
10000a00:	10800404 	addi	r2,r2,16
10000a04:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
10000a08:	e03fc015 	stw	zero,-256(fp)
10000a0c:	00002206 	br	10000a98 <textVGAReadWriteTest+0xc8>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
10000a10:	d4200117 	ldw	r16,-32764(gp)
10000a14:	01401404 	movi	r5,80
10000a18:	e13fbf17 	ldw	r4,-260(fp)
10000a1c:	0000e400 	call	10000e40 <__mulsi3>
10000a20:	1007883a 	mov	r3,r2
10000a24:	e0bfc017 	ldw	r2,-256(fp)
10000a28:	1885883a 	add	r2,r3,r2
10000a2c:	e0ffc017 	ldw	r3,-256(fp)
10000a30:	1809883a 	mov	r4,r3
10000a34:	e0ffbf17 	ldw	r3,-260(fp)
10000a38:	20c7883a 	add	r3,r4,r3
10000a3c:	8085883a 	add	r2,r16,r2
10000a40:	10c00005 	stb	r3,0(r2)
			checksum[j] += i + j;
10000a44:	e0bfbf17 	ldw	r2,-260(fp)
10000a48:	1085883a 	add	r2,r2,r2
10000a4c:	1085883a 	add	r2,r2,r2
10000a50:	e13fbf04 	addi	r4,fp,-260
10000a54:	2085883a 	add	r2,r4,r2
10000a58:	10800404 	addi	r2,r2,16
10000a5c:	10800017 	ldw	r2,0(r2)
10000a60:	e13fc017 	ldw	r4,-256(fp)
10000a64:	e0ffbf17 	ldw	r3,-260(fp)
10000a68:	20c7883a 	add	r3,r4,r3
10000a6c:	10c7883a 	add	r3,r2,r3
10000a70:	e0bfbf17 	ldw	r2,-260(fp)
10000a74:	1085883a 	add	r2,r2,r2
10000a78:	1085883a 	add	r2,r2,r2
10000a7c:	e13fbf04 	addi	r4,fp,-260
10000a80:	2085883a 	add	r2,r4,r2
10000a84:	10800404 	addi	r2,r2,16
10000a88:	10c00015 	stw	r3,0(r2)
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
	{
		checksum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
10000a8c:	e0bfc017 	ldw	r2,-256(fp)
10000a90:	10800044 	addi	r2,r2,1
10000a94:	e0bfc015 	stw	r2,-256(fp)
10000a98:	e0bfc017 	ldw	r2,-256(fp)
10000a9c:	10801410 	cmplti	r2,r2,80
10000aa0:	103fdb1e 	bne	r2,zero,10000a10 <__alt_data_end+0xf8000a10>
void textVGAReadWriteTest()
{
	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
10000aa4:	e0bfbf17 	ldw	r2,-260(fp)
10000aa8:	10800044 	addi	r2,r2,1
10000aac:	e0bfbf15 	stw	r2,-260(fp)
10000ab0:	e0bfbf17 	ldw	r2,-260(fp)
10000ab4:	10800790 	cmplti	r2,r2,30
10000ab8:	103fcc1e 	bne	r2,zero,100009ec <__alt_data_end+0xf80009ec>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
10000abc:	e03fc115 	stw	zero,-252(fp)
10000ac0:	00005206 	br	10000c0c <textVGAReadWriteTest+0x23c>
	{
		readsum[j] = 0;
10000ac4:	e0bfc117 	ldw	r2,-252(fp)
10000ac8:	1085883a 	add	r2,r2,r2
10000acc:	1085883a 	add	r2,r2,r2
10000ad0:	e0ffbf04 	addi	r3,fp,-260
10000ad4:	1885883a 	add	r2,r3,r2
10000ad8:	10802204 	addi	r2,r2,136
10000adc:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
10000ae0:	e03fc215 	stw	zero,-248(fp)
10000ae4:	00001c06 	br	10000b58 <textVGAReadWriteTest+0x188>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
10000ae8:	d4200117 	ldw	r16,-32764(gp)
10000aec:	01401404 	movi	r5,80
10000af0:	e13fc117 	ldw	r4,-252(fp)
10000af4:	0000e400 	call	10000e40 <__mulsi3>
10000af8:	1007883a 	mov	r3,r2
10000afc:	e0bfc217 	ldw	r2,-248(fp)
10000b00:	1885883a 	add	r2,r3,r2
10000b04:	8085883a 	add	r2,r16,r2
10000b08:	11000003 	ldbu	r4,0(r2)
10000b0c:	e0bfc117 	ldw	r2,-252(fp)
10000b10:	1085883a 	add	r2,r2,r2
10000b14:	1085883a 	add	r2,r2,r2
10000b18:	e0ffbf04 	addi	r3,fp,-260
10000b1c:	1885883a 	add	r2,r3,r2
10000b20:	10802204 	addi	r2,r2,136
10000b24:	10c00017 	ldw	r3,0(r2)
10000b28:	20803fcc 	andi	r2,r4,255
10000b2c:	1887883a 	add	r3,r3,r2
10000b30:	e0bfc117 	ldw	r2,-252(fp)
10000b34:	1085883a 	add	r2,r2,r2
10000b38:	1085883a 	add	r2,r2,r2
10000b3c:	e13fbf04 	addi	r4,fp,-260
10000b40:	2085883a 	add	r2,r4,r2
10000b44:	10802204 	addi	r2,r2,136
10000b48:	10c00015 	stw	r3,0(r2)
		}
	}
	for (int j = 0; j < ROWS; j++)
	{
		readsum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
10000b4c:	e0bfc217 	ldw	r2,-248(fp)
10000b50:	10800044 	addi	r2,r2,1
10000b54:	e0bfc215 	stw	r2,-248(fp)
10000b58:	e0bfc217 	ldw	r2,-248(fp)
10000b5c:	10801410 	cmplti	r2,r2,80
10000b60:	103fe11e 	bne	r2,zero,10000ae8 <__alt_data_end+0xf8000ae8>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
			//printf ("%x \n\r", vga_ctrl->VRAM[j*COLUMNS + i]);
		}
		printf ("Row: %d, Checksum: %x, Read-back Checksum: %x\n\r", j, checksum[j], readsum[j]);
10000b64:	e0bfc117 	ldw	r2,-252(fp)
10000b68:	1085883a 	add	r2,r2,r2
10000b6c:	1085883a 	add	r2,r2,r2
10000b70:	e0ffbf04 	addi	r3,fp,-260
10000b74:	1885883a 	add	r2,r3,r2
10000b78:	10800404 	addi	r2,r2,16
10000b7c:	10c00017 	ldw	r3,0(r2)
10000b80:	e0bfc117 	ldw	r2,-252(fp)
10000b84:	1085883a 	add	r2,r2,r2
10000b88:	1085883a 	add	r2,r2,r2
10000b8c:	e13fbf04 	addi	r4,fp,-260
10000b90:	2085883a 	add	r2,r4,r2
10000b94:	10802204 	addi	r2,r2,136
10000b98:	10800017 	ldw	r2,0(r2)
10000b9c:	100f883a 	mov	r7,r2
10000ba0:	180d883a 	mov	r6,r3
10000ba4:	e17fc117 	ldw	r5,-252(fp)
10000ba8:	01040074 	movhi	r4,4097
10000bac:	210fae04 	addi	r4,r4,16056
10000bb0:	0000e980 	call	10000e98 <printf>
		if (checksum[j] != readsum[j])
10000bb4:	e0bfc117 	ldw	r2,-252(fp)
10000bb8:	1085883a 	add	r2,r2,r2
10000bbc:	1085883a 	add	r2,r2,r2
10000bc0:	e0ffbf04 	addi	r3,fp,-260
10000bc4:	1885883a 	add	r2,r3,r2
10000bc8:	10800404 	addi	r2,r2,16
10000bcc:	10c00017 	ldw	r3,0(r2)
10000bd0:	e0bfc117 	ldw	r2,-252(fp)
10000bd4:	1085883a 	add	r2,r2,r2
10000bd8:	1085883a 	add	r2,r2,r2
10000bdc:	e13fbf04 	addi	r4,fp,-260
10000be0:	2085883a 	add	r2,r4,r2
10000be4:	10802204 	addi	r2,r2,136
10000be8:	10800017 	ldw	r2,0(r2)
10000bec:	18800426 	beq	r3,r2,10000c00 <textVGAReadWriteTest+0x230>
		{
			printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
10000bf0:	01040074 	movhi	r4,4097
10000bf4:	210fba04 	addi	r4,r4,16104
10000bf8:	0000e980 	call	10000e98 <printf>
			while (1){};
10000bfc:	003fff06 	br	10000bfc <__alt_data_end+0xf8000bfc>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
10000c00:	e0bfc117 	ldw	r2,-252(fp)
10000c04:	10800044 	addi	r2,r2,1
10000c08:	e0bfc115 	stw	r2,-252(fp)
10000c0c:	e0bfc117 	ldw	r2,-252(fp)
10000c10:	10800790 	cmplti	r2,r2,30
10000c14:	103fab1e 	bne	r2,zero,10000ac4 <__alt_data_end+0xf8000ac4>
		{
			printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
			while (1){};
		}
	}
	printf("Checksum match!\n");
10000c18:	01040074 	movhi	r4,4097
10000c1c:	210fc604 	addi	r4,r4,16152
10000c20:	0000f940 	call	10000f94 <puts>
}
10000c24:	0001883a 	nop
10000c28:	e6ffff04 	addi	sp,fp,-4
10000c2c:	dfc00217 	ldw	ra,8(sp)
10000c30:	df000117 	ldw	fp,4(sp)
10000c34:	dc000017 	ldw	r16,0(sp)
10000c38:	dec00304 	addi	sp,sp,12
10000c3c:	f800283a 	ret

10000c40 <main>:

int main()
{
10000c40:	defffe04 	addi	sp,sp,-8
10000c44:	dfc00115 	stw	ra,4(sp)
10000c48:	df000015 	stw	fp,0(sp)
10000c4c:	d839883a 	mov	fp,sp
	textVGAReadWriteTest();
10000c50:	00009d00 	call	100009d0 <textVGAReadWriteTest>
	printf("Start Palette test\n");
10000c54:	01040074 	movhi	r4,4097
10000c58:	210fca04 	addi	r4,r4,16168
10000c5c:	0000f940 	call	10000f94 <puts>
    paletteTest();
10000c60:	000026c0 	call	1000026c <paletteTest>
    printf("Palette Test end\n");
10000c64:	01040074 	movhi	r4,4097
10000c68:	210fcf04 	addi	r4,r4,16188
10000c6c:	0000f940 	call	10000f94 <puts>

    textVGAColorScreenSaver();
10000c70:	00007640 	call	10000764 <textVGAColorScreenSaver>
10000c74:	0005883a 	mov	r2,zero


}
10000c78:	e037883a 	mov	sp,fp
10000c7c:	dfc00117 	ldw	ra,4(sp)
10000c80:	df000017 	ldw	fp,0(sp)
10000c84:	dec00204 	addi	sp,sp,8
10000c88:	f800283a 	ret

10000c8c <__divsi3>:
10000c8c:	20001b16 	blt	r4,zero,10000cfc <__divsi3+0x70>
10000c90:	000f883a 	mov	r7,zero
10000c94:	28001616 	blt	r5,zero,10000cf0 <__divsi3+0x64>
10000c98:	200d883a 	mov	r6,r4
10000c9c:	29001a2e 	bgeu	r5,r4,10000d08 <__divsi3+0x7c>
10000ca0:	00800804 	movi	r2,32
10000ca4:	00c00044 	movi	r3,1
10000ca8:	00000106 	br	10000cb0 <__divsi3+0x24>
10000cac:	10000d26 	beq	r2,zero,10000ce4 <__divsi3+0x58>
10000cb0:	294b883a 	add	r5,r5,r5
10000cb4:	10bfffc4 	addi	r2,r2,-1
10000cb8:	18c7883a 	add	r3,r3,r3
10000cbc:	293ffb36 	bltu	r5,r4,10000cac <__alt_data_end+0xf8000cac>
10000cc0:	0005883a 	mov	r2,zero
10000cc4:	18000726 	beq	r3,zero,10000ce4 <__divsi3+0x58>
10000cc8:	0005883a 	mov	r2,zero
10000ccc:	31400236 	bltu	r6,r5,10000cd8 <__divsi3+0x4c>
10000cd0:	314dc83a 	sub	r6,r6,r5
10000cd4:	10c4b03a 	or	r2,r2,r3
10000cd8:	1806d07a 	srli	r3,r3,1
10000cdc:	280ad07a 	srli	r5,r5,1
10000ce0:	183ffa1e 	bne	r3,zero,10000ccc <__alt_data_end+0xf8000ccc>
10000ce4:	38000126 	beq	r7,zero,10000cec <__divsi3+0x60>
10000ce8:	0085c83a 	sub	r2,zero,r2
10000cec:	f800283a 	ret
10000cf0:	014bc83a 	sub	r5,zero,r5
10000cf4:	39c0005c 	xori	r7,r7,1
10000cf8:	003fe706 	br	10000c98 <__alt_data_end+0xf8000c98>
10000cfc:	0109c83a 	sub	r4,zero,r4
10000d00:	01c00044 	movi	r7,1
10000d04:	003fe306 	br	10000c94 <__alt_data_end+0xf8000c94>
10000d08:	00c00044 	movi	r3,1
10000d0c:	003fee06 	br	10000cc8 <__alt_data_end+0xf8000cc8>

10000d10 <__modsi3>:
10000d10:	20001716 	blt	r4,zero,10000d70 <__modsi3+0x60>
10000d14:	000f883a 	mov	r7,zero
10000d18:	2005883a 	mov	r2,r4
10000d1c:	28001216 	blt	r5,zero,10000d68 <__modsi3+0x58>
10000d20:	2900162e 	bgeu	r5,r4,10000d7c <__modsi3+0x6c>
10000d24:	01800804 	movi	r6,32
10000d28:	00c00044 	movi	r3,1
10000d2c:	00000106 	br	10000d34 <__modsi3+0x24>
10000d30:	30000a26 	beq	r6,zero,10000d5c <__modsi3+0x4c>
10000d34:	294b883a 	add	r5,r5,r5
10000d38:	31bfffc4 	addi	r6,r6,-1
10000d3c:	18c7883a 	add	r3,r3,r3
10000d40:	293ffb36 	bltu	r5,r4,10000d30 <__alt_data_end+0xf8000d30>
10000d44:	18000526 	beq	r3,zero,10000d5c <__modsi3+0x4c>
10000d48:	1806d07a 	srli	r3,r3,1
10000d4c:	11400136 	bltu	r2,r5,10000d54 <__modsi3+0x44>
10000d50:	1145c83a 	sub	r2,r2,r5
10000d54:	280ad07a 	srli	r5,r5,1
10000d58:	183ffb1e 	bne	r3,zero,10000d48 <__alt_data_end+0xf8000d48>
10000d5c:	38000126 	beq	r7,zero,10000d64 <__modsi3+0x54>
10000d60:	0085c83a 	sub	r2,zero,r2
10000d64:	f800283a 	ret
10000d68:	014bc83a 	sub	r5,zero,r5
10000d6c:	003fec06 	br	10000d20 <__alt_data_end+0xf8000d20>
10000d70:	0109c83a 	sub	r4,zero,r4
10000d74:	01c00044 	movi	r7,1
10000d78:	003fe706 	br	10000d18 <__alt_data_end+0xf8000d18>
10000d7c:	00c00044 	movi	r3,1
10000d80:	003ff106 	br	10000d48 <__alt_data_end+0xf8000d48>

10000d84 <__udivsi3>:
10000d84:	200d883a 	mov	r6,r4
10000d88:	2900152e 	bgeu	r5,r4,10000de0 <__udivsi3+0x5c>
10000d8c:	28001416 	blt	r5,zero,10000de0 <__udivsi3+0x5c>
10000d90:	00800804 	movi	r2,32
10000d94:	00c00044 	movi	r3,1
10000d98:	00000206 	br	10000da4 <__udivsi3+0x20>
10000d9c:	10000e26 	beq	r2,zero,10000dd8 <__udivsi3+0x54>
10000da0:	28000516 	blt	r5,zero,10000db8 <__udivsi3+0x34>
10000da4:	294b883a 	add	r5,r5,r5
10000da8:	10bfffc4 	addi	r2,r2,-1
10000dac:	18c7883a 	add	r3,r3,r3
10000db0:	293ffa36 	bltu	r5,r4,10000d9c <__alt_data_end+0xf8000d9c>
10000db4:	18000826 	beq	r3,zero,10000dd8 <__udivsi3+0x54>
10000db8:	0005883a 	mov	r2,zero
10000dbc:	31400236 	bltu	r6,r5,10000dc8 <__udivsi3+0x44>
10000dc0:	314dc83a 	sub	r6,r6,r5
10000dc4:	10c4b03a 	or	r2,r2,r3
10000dc8:	1806d07a 	srli	r3,r3,1
10000dcc:	280ad07a 	srli	r5,r5,1
10000dd0:	183ffa1e 	bne	r3,zero,10000dbc <__alt_data_end+0xf8000dbc>
10000dd4:	f800283a 	ret
10000dd8:	0005883a 	mov	r2,zero
10000ddc:	f800283a 	ret
10000de0:	00c00044 	movi	r3,1
10000de4:	003ff406 	br	10000db8 <__alt_data_end+0xf8000db8>

10000de8 <__umodsi3>:
10000de8:	2005883a 	mov	r2,r4
10000dec:	2900122e 	bgeu	r5,r4,10000e38 <__umodsi3+0x50>
10000df0:	28001116 	blt	r5,zero,10000e38 <__umodsi3+0x50>
10000df4:	01800804 	movi	r6,32
10000df8:	00c00044 	movi	r3,1
10000dfc:	00000206 	br	10000e08 <__umodsi3+0x20>
10000e00:	30000c26 	beq	r6,zero,10000e34 <__umodsi3+0x4c>
10000e04:	28000516 	blt	r5,zero,10000e1c <__umodsi3+0x34>
10000e08:	294b883a 	add	r5,r5,r5
10000e0c:	31bfffc4 	addi	r6,r6,-1
10000e10:	18c7883a 	add	r3,r3,r3
10000e14:	293ffa36 	bltu	r5,r4,10000e00 <__alt_data_end+0xf8000e00>
10000e18:	18000626 	beq	r3,zero,10000e34 <__umodsi3+0x4c>
10000e1c:	1806d07a 	srli	r3,r3,1
10000e20:	11400136 	bltu	r2,r5,10000e28 <__umodsi3+0x40>
10000e24:	1145c83a 	sub	r2,r2,r5
10000e28:	280ad07a 	srli	r5,r5,1
10000e2c:	183ffb1e 	bne	r3,zero,10000e1c <__alt_data_end+0xf8000e1c>
10000e30:	f800283a 	ret
10000e34:	f800283a 	ret
10000e38:	00c00044 	movi	r3,1
10000e3c:	003ff706 	br	10000e1c <__alt_data_end+0xf8000e1c>

10000e40 <__mulsi3>:
10000e40:	0005883a 	mov	r2,zero
10000e44:	20000726 	beq	r4,zero,10000e64 <__mulsi3+0x24>
10000e48:	20c0004c 	andi	r3,r4,1
10000e4c:	2008d07a 	srli	r4,r4,1
10000e50:	18000126 	beq	r3,zero,10000e58 <__mulsi3+0x18>
10000e54:	1145883a 	add	r2,r2,r5
10000e58:	294b883a 	add	r5,r5,r5
10000e5c:	203ffa1e 	bne	r4,zero,10000e48 <__alt_data_end+0xf8000e48>
10000e60:	f800283a 	ret
10000e64:	f800283a 	ret

10000e68 <_printf_r>:
10000e68:	defffd04 	addi	sp,sp,-12
10000e6c:	2805883a 	mov	r2,r5
10000e70:	dfc00015 	stw	ra,0(sp)
10000e74:	d9800115 	stw	r6,4(sp)
10000e78:	d9c00215 	stw	r7,8(sp)
10000e7c:	21400217 	ldw	r5,8(r4)
10000e80:	d9c00104 	addi	r7,sp,4
10000e84:	100d883a 	mov	r6,r2
10000e88:	000343c0 	call	1000343c <___vfprintf_internal_r>
10000e8c:	dfc00017 	ldw	ra,0(sp)
10000e90:	dec00304 	addi	sp,sp,12
10000e94:	f800283a 	ret

10000e98 <printf>:
10000e98:	defffc04 	addi	sp,sp,-16
10000e9c:	dfc00015 	stw	ra,0(sp)
10000ea0:	d9400115 	stw	r5,4(sp)
10000ea4:	d9800215 	stw	r6,8(sp)
10000ea8:	d9c00315 	stw	r7,12(sp)
10000eac:	00840074 	movhi	r2,4097
10000eb0:	10980a04 	addi	r2,r2,24616
10000eb4:	10800017 	ldw	r2,0(r2)
10000eb8:	200b883a 	mov	r5,r4
10000ebc:	d9800104 	addi	r6,sp,4
10000ec0:	11000217 	ldw	r4,8(r2)
10000ec4:	00057180 	call	10005718 <__vfprintf_internal>
10000ec8:	dfc00017 	ldw	ra,0(sp)
10000ecc:	dec00404 	addi	sp,sp,16
10000ed0:	f800283a 	ret

10000ed4 <_puts_r>:
10000ed4:	defff604 	addi	sp,sp,-40
10000ed8:	dc000715 	stw	r16,28(sp)
10000edc:	2021883a 	mov	r16,r4
10000ee0:	2809883a 	mov	r4,r5
10000ee4:	dc400815 	stw	r17,32(sp)
10000ee8:	dfc00915 	stw	ra,36(sp)
10000eec:	2823883a 	mov	r17,r5
10000ef0:	00010e80 	call	100010e8 <strlen>
10000ef4:	10c00044 	addi	r3,r2,1
10000ef8:	d8800115 	stw	r2,4(sp)
10000efc:	00840074 	movhi	r2,4097
10000f00:	108fd404 	addi	r2,r2,16208
10000f04:	d8800215 	stw	r2,8(sp)
10000f08:	00800044 	movi	r2,1
10000f0c:	d8800315 	stw	r2,12(sp)
10000f10:	00800084 	movi	r2,2
10000f14:	dc400015 	stw	r17,0(sp)
10000f18:	d8c00615 	stw	r3,24(sp)
10000f1c:	dec00415 	stw	sp,16(sp)
10000f20:	d8800515 	stw	r2,20(sp)
10000f24:	80000226 	beq	r16,zero,10000f30 <_puts_r+0x5c>
10000f28:	80800e17 	ldw	r2,56(r16)
10000f2c:	10001426 	beq	r2,zero,10000f80 <_puts_r+0xac>
10000f30:	81400217 	ldw	r5,8(r16)
10000f34:	2880030b 	ldhu	r2,12(r5)
10000f38:	10c8000c 	andi	r3,r2,8192
10000f3c:	1800061e 	bne	r3,zero,10000f58 <_puts_r+0x84>
10000f40:	29001917 	ldw	r4,100(r5)
10000f44:	00f7ffc4 	movi	r3,-8193
10000f48:	10880014 	ori	r2,r2,8192
10000f4c:	20c6703a 	and	r3,r4,r3
10000f50:	2880030d 	sth	r2,12(r5)
10000f54:	28c01915 	stw	r3,100(r5)
10000f58:	d9800404 	addi	r6,sp,16
10000f5c:	8009883a 	mov	r4,r16
10000f60:	0007c800 	call	10007c80 <__sfvwrite_r>
10000f64:	1000091e 	bne	r2,zero,10000f8c <_puts_r+0xb8>
10000f68:	00800284 	movi	r2,10
10000f6c:	dfc00917 	ldw	ra,36(sp)
10000f70:	dc400817 	ldw	r17,32(sp)
10000f74:	dc000717 	ldw	r16,28(sp)
10000f78:	dec00a04 	addi	sp,sp,40
10000f7c:	f800283a 	ret
10000f80:	8009883a 	mov	r4,r16
10000f84:	00077fc0 	call	100077fc <__sinit>
10000f88:	003fe906 	br	10000f30 <__alt_data_end+0xf8000f30>
10000f8c:	00bfffc4 	movi	r2,-1
10000f90:	003ff606 	br	10000f6c <__alt_data_end+0xf8000f6c>

10000f94 <puts>:
10000f94:	00840074 	movhi	r2,4097
10000f98:	10980a04 	addi	r2,r2,24616
10000f9c:	200b883a 	mov	r5,r4
10000fa0:	11000017 	ldw	r4,0(r2)
10000fa4:	0000ed41 	jmpi	10000ed4 <_puts_r>

10000fa8 <srand>:
10000fa8:	00840074 	movhi	r2,4097
10000fac:	10980a04 	addi	r2,r2,24616
10000fb0:	10800017 	ldw	r2,0(r2)
10000fb4:	11002915 	stw	r4,164(r2)
10000fb8:	10002a15 	stw	zero,168(r2)
10000fbc:	f800283a 	ret

10000fc0 <rand>:
10000fc0:	00840074 	movhi	r2,4097
10000fc4:	defffe04 	addi	sp,sp,-8
10000fc8:	10980a04 	addi	r2,r2,24616
10000fcc:	dc000015 	stw	r16,0(sp)
10000fd0:	14000017 	ldw	r16,0(r2)
10000fd4:	dfc00115 	stw	ra,4(sp)
10000fd8:	01932574 	movhi	r6,19605
10000fdc:	81002917 	ldw	r4,164(r16)
10000fe0:	81402a17 	ldw	r5,168(r16)
10000fe4:	01d614b4 	movhi	r7,22610
10000fe8:	319fcb44 	addi	r6,r6,32557
10000fec:	39fd0b44 	addi	r7,r7,-3027
10000ff0:	000e0d40 	call	1000e0d4 <__muldi3>
10000ff4:	11000044 	addi	r4,r2,1
10000ff8:	2085803a 	cmpltu	r2,r4,r2
10000ffc:	10c7883a 	add	r3,r2,r3
10001000:	00a00034 	movhi	r2,32768
10001004:	10bfffc4 	addi	r2,r2,-1
10001008:	1884703a 	and	r2,r3,r2
1000100c:	81002915 	stw	r4,164(r16)
10001010:	80c02a15 	stw	r3,168(r16)
10001014:	dfc00117 	ldw	ra,4(sp)
10001018:	dc000017 	ldw	r16,0(sp)
1000101c:	dec00204 	addi	sp,sp,8
10001020:	f800283a 	ret

10001024 <_sprintf_r>:
10001024:	deffe404 	addi	sp,sp,-112
10001028:	2807883a 	mov	r3,r5
1000102c:	dfc01a15 	stw	ra,104(sp)
10001030:	d9c01b15 	stw	r7,108(sp)
10001034:	00a00034 	movhi	r2,32768
10001038:	10bfffc4 	addi	r2,r2,-1
1000103c:	02008204 	movi	r8,520
10001040:	d8800215 	stw	r2,8(sp)
10001044:	d8800515 	stw	r2,20(sp)
10001048:	d9c01b04 	addi	r7,sp,108
1000104c:	d80b883a 	mov	r5,sp
10001050:	00bfffc4 	movi	r2,-1
10001054:	d8c00015 	stw	r3,0(sp)
10001058:	d8c00415 	stw	r3,16(sp)
1000105c:	da00030d 	sth	r8,12(sp)
10001060:	d880038d 	sth	r2,14(sp)
10001064:	00011800 	call	10001180 <___svfprintf_internal_r>
10001068:	d8c00017 	ldw	r3,0(sp)
1000106c:	18000005 	stb	zero,0(r3)
10001070:	dfc01a17 	ldw	ra,104(sp)
10001074:	dec01c04 	addi	sp,sp,112
10001078:	f800283a 	ret

1000107c <sprintf>:
1000107c:	deffe304 	addi	sp,sp,-116
10001080:	2007883a 	mov	r3,r4
10001084:	dfc01a15 	stw	ra,104(sp)
10001088:	d9801b15 	stw	r6,108(sp)
1000108c:	d9c01c15 	stw	r7,112(sp)
10001090:	01040074 	movhi	r4,4097
10001094:	21180a04 	addi	r4,r4,24616
10001098:	21000017 	ldw	r4,0(r4)
1000109c:	00a00034 	movhi	r2,32768
100010a0:	10bfffc4 	addi	r2,r2,-1
100010a4:	280d883a 	mov	r6,r5
100010a8:	02008204 	movi	r8,520
100010ac:	d8800215 	stw	r2,8(sp)
100010b0:	d8800515 	stw	r2,20(sp)
100010b4:	d9c01b04 	addi	r7,sp,108
100010b8:	d80b883a 	mov	r5,sp
100010bc:	00bfffc4 	movi	r2,-1
100010c0:	d8c00015 	stw	r3,0(sp)
100010c4:	d8c00415 	stw	r3,16(sp)
100010c8:	da00030d 	sth	r8,12(sp)
100010cc:	d880038d 	sth	r2,14(sp)
100010d0:	00011800 	call	10001180 <___svfprintf_internal_r>
100010d4:	d8c00017 	ldw	r3,0(sp)
100010d8:	18000005 	stb	zero,0(r3)
100010dc:	dfc01a17 	ldw	ra,104(sp)
100010e0:	dec01d04 	addi	sp,sp,116
100010e4:	f800283a 	ret

100010e8 <strlen>:
100010e8:	208000cc 	andi	r2,r4,3
100010ec:	10002026 	beq	r2,zero,10001170 <strlen+0x88>
100010f0:	20800007 	ldb	r2,0(r4)
100010f4:	10002026 	beq	r2,zero,10001178 <strlen+0x90>
100010f8:	2005883a 	mov	r2,r4
100010fc:	00000206 	br	10001108 <strlen+0x20>
10001100:	10c00007 	ldb	r3,0(r2)
10001104:	18001826 	beq	r3,zero,10001168 <strlen+0x80>
10001108:	10800044 	addi	r2,r2,1
1000110c:	10c000cc 	andi	r3,r2,3
10001110:	183ffb1e 	bne	r3,zero,10001100 <__alt_data_end+0xf8001100>
10001114:	10c00017 	ldw	r3,0(r2)
10001118:	01ffbff4 	movhi	r7,65279
1000111c:	39ffbfc4 	addi	r7,r7,-257
10001120:	00ca303a 	nor	r5,zero,r3
10001124:	01a02074 	movhi	r6,32897
10001128:	19c7883a 	add	r3,r3,r7
1000112c:	31a02004 	addi	r6,r6,-32640
10001130:	1946703a 	and	r3,r3,r5
10001134:	1986703a 	and	r3,r3,r6
10001138:	1800091e 	bne	r3,zero,10001160 <strlen+0x78>
1000113c:	10800104 	addi	r2,r2,4
10001140:	10c00017 	ldw	r3,0(r2)
10001144:	19cb883a 	add	r5,r3,r7
10001148:	00c6303a 	nor	r3,zero,r3
1000114c:	28c6703a 	and	r3,r5,r3
10001150:	1986703a 	and	r3,r3,r6
10001154:	183ff926 	beq	r3,zero,1000113c <__alt_data_end+0xf800113c>
10001158:	00000106 	br	10001160 <strlen+0x78>
1000115c:	10800044 	addi	r2,r2,1
10001160:	10c00007 	ldb	r3,0(r2)
10001164:	183ffd1e 	bne	r3,zero,1000115c <__alt_data_end+0xf800115c>
10001168:	1105c83a 	sub	r2,r2,r4
1000116c:	f800283a 	ret
10001170:	2005883a 	mov	r2,r4
10001174:	003fe706 	br	10001114 <__alt_data_end+0xf8001114>
10001178:	0005883a 	mov	r2,zero
1000117c:	f800283a 	ret

10001180 <___svfprintf_internal_r>:
10001180:	deffb704 	addi	sp,sp,-292
10001184:	dfc04815 	stw	ra,288(sp)
10001188:	ddc04615 	stw	r23,280(sp)
1000118c:	d9402d15 	stw	r5,180(sp)
10001190:	d9003915 	stw	r4,228(sp)
10001194:	302f883a 	mov	r23,r6
10001198:	d9c02e15 	stw	r7,184(sp)
1000119c:	df004715 	stw	fp,284(sp)
100011a0:	dd804515 	stw	r22,276(sp)
100011a4:	dd404415 	stw	r21,272(sp)
100011a8:	dd004315 	stw	r20,268(sp)
100011ac:	dcc04215 	stw	r19,264(sp)
100011b0:	dc804115 	stw	r18,260(sp)
100011b4:	dc404015 	stw	r17,256(sp)
100011b8:	dc003f15 	stw	r16,252(sp)
100011bc:	000837c0 	call	1000837c <_localeconv_r>
100011c0:	10800017 	ldw	r2,0(r2)
100011c4:	1009883a 	mov	r4,r2
100011c8:	d8803415 	stw	r2,208(sp)
100011cc:	00010e80 	call	100010e8 <strlen>
100011d0:	d8c02d17 	ldw	r3,180(sp)
100011d4:	d8803815 	stw	r2,224(sp)
100011d8:	1880030b 	ldhu	r2,12(r3)
100011dc:	1080200c 	andi	r2,r2,128
100011e0:	10000226 	beq	r2,zero,100011ec <___svfprintf_internal_r+0x6c>
100011e4:	18800417 	ldw	r2,16(r3)
100011e8:	1006b126 	beq	r2,zero,10002cb0 <___svfprintf_internal_r+0x1b30>
100011ec:	dcc03917 	ldw	r19,228(sp)
100011f0:	d8c00404 	addi	r3,sp,16
100011f4:	05440074 	movhi	r21,4097
100011f8:	d9001e04 	addi	r4,sp,120
100011fc:	ad4fe584 	addi	r21,r21,16278
10001200:	d8c01e15 	stw	r3,120(sp)
10001204:	d8002015 	stw	zero,128(sp)
10001208:	d8001f15 	stw	zero,124(sp)
1000120c:	d8003315 	stw	zero,204(sp)
10001210:	d8003615 	stw	zero,216(sp)
10001214:	d8003715 	stw	zero,220(sp)
10001218:	1811883a 	mov	r8,r3
1000121c:	d8003a15 	stw	zero,232(sp)
10001220:	d8003b15 	stw	zero,236(sp)
10001224:	d8002f15 	stw	zero,188(sp)
10001228:	d9002815 	stw	r4,160(sp)
1000122c:	b8800007 	ldb	r2,0(r23)
10001230:	10027726 	beq	r2,zero,10001c10 <___svfprintf_internal_r+0xa90>
10001234:	00c00944 	movi	r3,37
10001238:	b823883a 	mov	r17,r23
1000123c:	10c0021e 	bne	r2,r3,10001248 <___svfprintf_internal_r+0xc8>
10001240:	00001406 	br	10001294 <___svfprintf_internal_r+0x114>
10001244:	10c00326 	beq	r2,r3,10001254 <___svfprintf_internal_r+0xd4>
10001248:	8c400044 	addi	r17,r17,1
1000124c:	88800007 	ldb	r2,0(r17)
10001250:	103ffc1e 	bne	r2,zero,10001244 <__alt_data_end+0xf8001244>
10001254:	8de1c83a 	sub	r16,r17,r23
10001258:	80000e26 	beq	r16,zero,10001294 <___svfprintf_internal_r+0x114>
1000125c:	d8c02017 	ldw	r3,128(sp)
10001260:	d8801f17 	ldw	r2,124(sp)
10001264:	45c00015 	stw	r23,0(r8)
10001268:	1c07883a 	add	r3,r3,r16
1000126c:	10800044 	addi	r2,r2,1
10001270:	d8c02015 	stw	r3,128(sp)
10001274:	44000115 	stw	r16,4(r8)
10001278:	d8801f15 	stw	r2,124(sp)
1000127c:	00c001c4 	movi	r3,7
10001280:	18809916 	blt	r3,r2,100014e8 <___svfprintf_internal_r+0x368>
10001284:	42000204 	addi	r8,r8,8
10001288:	d9402f17 	ldw	r5,188(sp)
1000128c:	2c0b883a 	add	r5,r5,r16
10001290:	d9402f15 	stw	r5,188(sp)
10001294:	88800007 	ldb	r2,0(r17)
10001298:	10009a26 	beq	r2,zero,10001504 <___svfprintf_internal_r+0x384>
1000129c:	8dc00044 	addi	r23,r17,1
100012a0:	8c400047 	ldb	r17,1(r17)
100012a4:	0021883a 	mov	r16,zero
100012a8:	00bfffc4 	movi	r2,-1
100012ac:	0025883a 	mov	r18,zero
100012b0:	dc002905 	stb	r16,164(sp)
100012b4:	d8002785 	stb	zero,158(sp)
100012b8:	d8002b05 	stb	zero,172(sp)
100012bc:	d8802a15 	stw	r2,168(sp)
100012c0:	d8003115 	stw	zero,196(sp)
100012c4:	05001604 	movi	r20,88
100012c8:	05800244 	movi	r22,9
100012cc:	4039883a 	mov	fp,r8
100012d0:	9021883a 	mov	r16,r18
100012d4:	bdc00044 	addi	r23,r23,1
100012d8:	88bff804 	addi	r2,r17,-32
100012dc:	a0831e36 	bltu	r20,r2,10001f58 <___svfprintf_internal_r+0xdd8>
100012e0:	100490ba 	slli	r2,r2,2
100012e4:	00c40034 	movhi	r3,4096
100012e8:	18c4be04 	addi	r3,r3,4856
100012ec:	10c5883a 	add	r2,r2,r3
100012f0:	10800017 	ldw	r2,0(r2)
100012f4:	1000683a 	jmp	r2
100012f8:	10001ea0 	cmpeqi	zero,r2,122
100012fc:	10001f58 	cmpnei	zero,r2,125
10001300:	10001f58 	cmpnei	zero,r2,125
10001304:	10001e94 	ori	zero,r2,122
10001308:	10001f58 	cmpnei	zero,r2,125
1000130c:	10001f58 	cmpnei	zero,r2,125
10001310:	10001f58 	cmpnei	zero,r2,125
10001314:	10001f58 	cmpnei	zero,r2,125
10001318:	10001f58 	cmpnei	zero,r2,125
1000131c:	10001f58 	cmpnei	zero,r2,125
10001320:	10001560 	cmpeqi	zero,r2,85
10001324:	10001da4 	muli	zero,r2,118
10001328:	10001f58 	cmpnei	zero,r2,125
1000132c:	1000146c 	andhi	zero,r2,81
10001330:	10001584 	addi	zero,r2,86
10001334:	10001f58 	cmpnei	zero,r2,125
10001338:	10001610 	cmplti	zero,r2,88
1000133c:	100015d4 	ori	zero,r2,87
10001340:	100015d4 	ori	zero,r2,87
10001344:	100015d4 	ori	zero,r2,87
10001348:	100015d4 	ori	zero,r2,87
1000134c:	100015d4 	ori	zero,r2,87
10001350:	100015d4 	ori	zero,r2,87
10001354:	100015d4 	ori	zero,r2,87
10001358:	100015d4 	ori	zero,r2,87
1000135c:	100015d4 	ori	zero,r2,87
10001360:	10001f58 	cmpnei	zero,r2,125
10001364:	10001f58 	cmpnei	zero,r2,125
10001368:	10001f58 	cmpnei	zero,r2,125
1000136c:	10001f58 	cmpnei	zero,r2,125
10001370:	10001f58 	cmpnei	zero,r2,125
10001374:	10001f58 	cmpnei	zero,r2,125
10001378:	10001f58 	cmpnei	zero,r2,125
1000137c:	10001f58 	cmpnei	zero,r2,125
10001380:	10001f58 	cmpnei	zero,r2,125
10001384:	10001f58 	cmpnei	zero,r2,125
10001388:	100016d4 	ori	zero,r2,91
1000138c:	1000161c 	xori	zero,r2,88
10001390:	10001f58 	cmpnei	zero,r2,125
10001394:	1000161c 	xori	zero,r2,88
10001398:	10001f58 	cmpnei	zero,r2,125
1000139c:	10001f58 	cmpnei	zero,r2,125
100013a0:	10001f58 	cmpnei	zero,r2,125
100013a4:	10001f58 	cmpnei	zero,r2,125
100013a8:	100016c8 	cmpgei	zero,r2,91
100013ac:	10001f58 	cmpnei	zero,r2,125
100013b0:	10001f58 	cmpnei	zero,r2,125
100013b4:	1000179c 	xori	zero,r2,94
100013b8:	10001f58 	cmpnei	zero,r2,125
100013bc:	10001f58 	cmpnei	zero,r2,125
100013c0:	10001f58 	cmpnei	zero,r2,125
100013c4:	10001f58 	cmpnei	zero,r2,125
100013c8:	10001f58 	cmpnei	zero,r2,125
100013cc:	10001c18 	cmpnei	zero,r2,112
100013d0:	10001f58 	cmpnei	zero,r2,125
100013d4:	10001f58 	cmpnei	zero,r2,125
100013d8:	10001c84 	addi	zero,r2,114
100013dc:	10001f58 	cmpnei	zero,r2,125
100013e0:	10001f58 	cmpnei	zero,r2,125
100013e4:	10001f58 	cmpnei	zero,r2,125
100013e8:	10001f58 	cmpnei	zero,r2,125
100013ec:	10001f58 	cmpnei	zero,r2,125
100013f0:	10001f58 	cmpnei	zero,r2,125
100013f4:	10001f58 	cmpnei	zero,r2,125
100013f8:	10001f58 	cmpnei	zero,r2,125
100013fc:	10001f58 	cmpnei	zero,r2,125
10001400:	10001f58 	cmpnei	zero,r2,125
10001404:	10001d40 	call	110001d4 <_gp+0xfe21b8>
10001408:	10001ec0 	call	110001ec <_gp+0xfe21d0>
1000140c:	1000161c 	xori	zero,r2,88
10001410:	1000161c 	xori	zero,r2,88
10001414:	1000161c 	xori	zero,r2,88
10001418:	10001f34 	orhi	zero,r2,124
1000141c:	10001ec0 	call	110001ec <_gp+0xfe21d0>
10001420:	10001f58 	cmpnei	zero,r2,125
10001424:	10001f58 	cmpnei	zero,r2,125
10001428:	10001ee0 	cmpeqi	zero,r2,123
1000142c:	10001f58 	cmpnei	zero,r2,125
10001430:	10001ef4 	orhi	zero,r2,123
10001434:	10001d84 	addi	zero,r2,118
10001438:	10001478 	rdprs	zero,r2,81
1000143c:	10001dbc 	xorhi	zero,r2,118
10001440:	10001f58 	cmpnei	zero,r2,125
10001444:	10001dc8 	cmpgei	zero,r2,119
10001448:	10001f58 	cmpnei	zero,r2,125
1000144c:	10001e2c 	andhi	zero,r2,120
10001450:	10001f58 	cmpnei	zero,r2,125
10001454:	10001f58 	cmpnei	zero,r2,125
10001458:	10001e4c 	andi	zero,r2,121
1000145c:	d8c03117 	ldw	r3,196(sp)
10001460:	d8802e15 	stw	r2,184(sp)
10001464:	00c7c83a 	sub	r3,zero,r3
10001468:	d8c03115 	stw	r3,196(sp)
1000146c:	84000114 	ori	r16,r16,4
10001470:	bc400007 	ldb	r17,0(r23)
10001474:	003f9706 	br	100012d4 <__alt_data_end+0xf80012d4>
10001478:	00800c04 	movi	r2,48
1000147c:	d8802705 	stb	r2,156(sp)
10001480:	00801e04 	movi	r2,120
10001484:	d8802745 	stb	r2,157(sp)
10001488:	d9002a17 	ldw	r4,168(sp)
1000148c:	d8802e17 	ldw	r2,184(sp)
10001490:	d8002785 	stb	zero,158(sp)
10001494:	e011883a 	mov	r8,fp
10001498:	10c00104 	addi	r3,r2,4
1000149c:	15000017 	ldw	r20,0(r2)
100014a0:	002d883a 	mov	r22,zero
100014a4:	80800094 	ori	r2,r16,2
100014a8:	2002b616 	blt	r4,zero,10001f84 <___svfprintf_internal_r+0xe04>
100014ac:	00bfdfc4 	movi	r2,-129
100014b0:	80a4703a 	and	r18,r16,r2
100014b4:	d8c02e15 	stw	r3,184(sp)
100014b8:	94800094 	ori	r18,r18,2
100014bc:	a002a01e 	bne	r20,zero,10001f40 <___svfprintf_internal_r+0xdc0>
100014c0:	01440074 	movhi	r5,4097
100014c4:	294fde04 	addi	r5,r5,16248
100014c8:	d9403a15 	stw	r5,232(sp)
100014cc:	04401e04 	movi	r17,120
100014d0:	d8c02a17 	ldw	r3,168(sp)
100014d4:	0039883a 	mov	fp,zero
100014d8:	1801e626 	beq	r3,zero,10001c74 <___svfprintf_internal_r+0xaf4>
100014dc:	0029883a 	mov	r20,zero
100014e0:	002d883a 	mov	r22,zero
100014e4:	00020506 	br	10001cfc <___svfprintf_internal_r+0xb7c>
100014e8:	d9402d17 	ldw	r5,180(sp)
100014ec:	d9801e04 	addi	r6,sp,120
100014f0:	9809883a 	mov	r4,r19
100014f4:	000ab200 	call	1000ab20 <__ssprint_r>
100014f8:	1000081e 	bne	r2,zero,1000151c <___svfprintf_internal_r+0x39c>
100014fc:	da000404 	addi	r8,sp,16
10001500:	003f6106 	br	10001288 <__alt_data_end+0xf8001288>
10001504:	d8802017 	ldw	r2,128(sp)
10001508:	10000426 	beq	r2,zero,1000151c <___svfprintf_internal_r+0x39c>
1000150c:	d9402d17 	ldw	r5,180(sp)
10001510:	d9003917 	ldw	r4,228(sp)
10001514:	d9801e04 	addi	r6,sp,120
10001518:	000ab200 	call	1000ab20 <__ssprint_r>
1000151c:	d8802d17 	ldw	r2,180(sp)
10001520:	10c0030b 	ldhu	r3,12(r2)
10001524:	d8802f17 	ldw	r2,188(sp)
10001528:	18c0100c 	andi	r3,r3,64
1000152c:	1806251e 	bne	r3,zero,10002dc4 <___svfprintf_internal_r+0x1c44>
10001530:	dfc04817 	ldw	ra,288(sp)
10001534:	df004717 	ldw	fp,284(sp)
10001538:	ddc04617 	ldw	r23,280(sp)
1000153c:	dd804517 	ldw	r22,276(sp)
10001540:	dd404417 	ldw	r21,272(sp)
10001544:	dd004317 	ldw	r20,268(sp)
10001548:	dcc04217 	ldw	r19,264(sp)
1000154c:	dc804117 	ldw	r18,260(sp)
10001550:	dc404017 	ldw	r17,256(sp)
10001554:	dc003f17 	ldw	r16,252(sp)
10001558:	dec04904 	addi	sp,sp,292
1000155c:	f800283a 	ret
10001560:	d9002e17 	ldw	r4,184(sp)
10001564:	d9402e17 	ldw	r5,184(sp)
10001568:	21000017 	ldw	r4,0(r4)
1000156c:	28800104 	addi	r2,r5,4
10001570:	d9003115 	stw	r4,196(sp)
10001574:	203fb916 	blt	r4,zero,1000145c <__alt_data_end+0xf800145c>
10001578:	d8802e15 	stw	r2,184(sp)
1000157c:	bc400007 	ldb	r17,0(r23)
10001580:	003f5406 	br	100012d4 <__alt_data_end+0xf80012d4>
10001584:	bc400007 	ldb	r17,0(r23)
10001588:	01000a84 	movi	r4,42
1000158c:	b8c00044 	addi	r3,r23,1
10001590:	89076926 	beq	r17,r4,10003338 <___svfprintf_internal_r+0x21b8>
10001594:	8cbff404 	addi	r18,r17,-48
10001598:	b486b936 	bltu	r22,r18,10003080 <___svfprintf_internal_r+0x1f00>
1000159c:	0009883a 	mov	r4,zero
100015a0:	1823883a 	mov	r17,r3
100015a4:	01400284 	movi	r5,10
100015a8:	0000e400 	call	10000e40 <__mulsi3>
100015ac:	88c00007 	ldb	r3,0(r17)
100015b0:	1489883a 	add	r4,r2,r18
100015b4:	8dc00044 	addi	r23,r17,1
100015b8:	1cbff404 	addi	r18,r3,-48
100015bc:	b823883a 	mov	r17,r23
100015c0:	b4bff82e 	bgeu	r22,r18,100015a4 <__alt_data_end+0xf80015a4>
100015c4:	1823883a 	mov	r17,r3
100015c8:	20060416 	blt	r4,zero,10002ddc <___svfprintf_internal_r+0x1c5c>
100015cc:	d9002a15 	stw	r4,168(sp)
100015d0:	003f4106 	br	100012d8 <__alt_data_end+0xf80012d8>
100015d4:	8cbff404 	addi	r18,r17,-48
100015d8:	d8003115 	stw	zero,196(sp)
100015dc:	0009883a 	mov	r4,zero
100015e0:	b823883a 	mov	r17,r23
100015e4:	01400284 	movi	r5,10
100015e8:	0000e400 	call	10000e40 <__mulsi3>
100015ec:	88c00007 	ldb	r3,0(r17)
100015f0:	9089883a 	add	r4,r18,r2
100015f4:	bdc00044 	addi	r23,r23,1
100015f8:	1cbff404 	addi	r18,r3,-48
100015fc:	b823883a 	mov	r17,r23
10001600:	b4bff82e 	bgeu	r22,r18,100015e4 <__alt_data_end+0xf80015e4>
10001604:	1823883a 	mov	r17,r3
10001608:	d9003115 	stw	r4,196(sp)
1000160c:	003f3206 	br	100012d8 <__alt_data_end+0xf80012d8>
10001610:	84002014 	ori	r16,r16,128
10001614:	bc400007 	ldb	r17,0(r23)
10001618:	003f2e06 	br	100012d4 <__alt_data_end+0xf80012d4>
1000161c:	8025883a 	mov	r18,r16
10001620:	dc002903 	ldbu	r16,164(sp)
10001624:	e011883a 	mov	r8,fp
10001628:	84003fcc 	andi	r16,r16,255
1000162c:	8007721e 	bne	r16,zero,100033f8 <___svfprintf_internal_r+0x2278>
10001630:	9080020c 	andi	r2,r18,8
10001634:	1004a526 	beq	r2,zero,100028cc <___svfprintf_internal_r+0x174c>
10001638:	d9002e17 	ldw	r4,184(sp)
1000163c:	d9402e17 	ldw	r5,184(sp)
10001640:	d8802e17 	ldw	r2,184(sp)
10001644:	21000017 	ldw	r4,0(r4)
10001648:	29400117 	ldw	r5,4(r5)
1000164c:	10800204 	addi	r2,r2,8
10001650:	d9003615 	stw	r4,216(sp)
10001654:	d9403715 	stw	r5,220(sp)
10001658:	d8802e15 	stw	r2,184(sp)
1000165c:	d9003617 	ldw	r4,216(sp)
10001660:	d9403717 	ldw	r5,220(sp)
10001664:	da003e15 	stw	r8,248(sp)
10001668:	04000044 	movi	r16,1
1000166c:	000a8400 	call	1000a840 <__fpclassifyd>
10001670:	da003e17 	ldw	r8,248(sp)
10001674:	1404731e 	bne	r2,r16,10002844 <___svfprintf_internal_r+0x16c4>
10001678:	d9003617 	ldw	r4,216(sp)
1000167c:	d9403717 	ldw	r5,220(sp)
10001680:	000d883a 	mov	r6,zero
10001684:	000f883a 	mov	r7,zero
10001688:	00101800 	call	10010180 <__ledf2>
1000168c:	da003e17 	ldw	r8,248(sp)
10001690:	10061b16 	blt	r2,zero,10002f00 <___svfprintf_internal_r+0x1d80>
10001694:	df002783 	ldbu	fp,158(sp)
10001698:	008011c4 	movi	r2,71
1000169c:	1445810e 	bge	r2,r17,10002ca4 <___svfprintf_internal_r+0x1b24>
100016a0:	04040074 	movhi	r16,4097
100016a4:	840fd604 	addi	r16,r16,16216
100016a8:	00c000c4 	movi	r3,3
100016ac:	00bfdfc4 	movi	r2,-129
100016b0:	d8c02915 	stw	r3,164(sp)
100016b4:	90a4703a 	and	r18,r18,r2
100016b8:	d8c02b15 	stw	r3,172(sp)
100016bc:	d8002a15 	stw	zero,168(sp)
100016c0:	d8003215 	stw	zero,200(sp)
100016c4:	00006c06 	br	10001878 <___svfprintf_internal_r+0x6f8>
100016c8:	84000214 	ori	r16,r16,8
100016cc:	bc400007 	ldb	r17,0(r23)
100016d0:	003f0006 	br	100012d4 <__alt_data_end+0xf80012d4>
100016d4:	8025883a 	mov	r18,r16
100016d8:	dc002903 	ldbu	r16,164(sp)
100016dc:	e011883a 	mov	r8,fp
100016e0:	84003fcc 	andi	r16,r16,255
100016e4:	80073f1e 	bne	r16,zero,100033e4 <___svfprintf_internal_r+0x2264>
100016e8:	94800414 	ori	r18,r18,16
100016ec:	9080080c 	andi	r2,r18,32
100016f0:	1003bb26 	beq	r2,zero,100025e0 <___svfprintf_internal_r+0x1460>
100016f4:	d9002e17 	ldw	r4,184(sp)
100016f8:	20800117 	ldw	r2,4(r4)
100016fc:	25000017 	ldw	r20,0(r4)
10001700:	21000204 	addi	r4,r4,8
10001704:	d9002e15 	stw	r4,184(sp)
10001708:	102d883a 	mov	r22,r2
1000170c:	1003bd16 	blt	r2,zero,10002604 <___svfprintf_internal_r+0x1484>
10001710:	d9002a17 	ldw	r4,168(sp)
10001714:	df002783 	ldbu	fp,158(sp)
10001718:	2003d016 	blt	r4,zero,1000265c <___svfprintf_internal_r+0x14dc>
1000171c:	00ffdfc4 	movi	r3,-129
10001720:	a584b03a 	or	r2,r20,r22
10001724:	90e4703a 	and	r18,r18,r3
10001728:	10015026 	beq	r2,zero,10001c6c <___svfprintf_internal_r+0xaec>
1000172c:	b0037026 	beq	r22,zero,100024f0 <___svfprintf_internal_r+0x1370>
10001730:	dc402915 	stw	r17,164(sp)
10001734:	dc001e04 	addi	r16,sp,120
10001738:	b023883a 	mov	r17,r22
1000173c:	402d883a 	mov	r22,r8
10001740:	a009883a 	mov	r4,r20
10001744:	880b883a 	mov	r5,r17
10001748:	01800284 	movi	r6,10
1000174c:	000f883a 	mov	r7,zero
10001750:	000e7dc0 	call	1000e7dc <__umoddi3>
10001754:	10800c04 	addi	r2,r2,48
10001758:	843fffc4 	addi	r16,r16,-1
1000175c:	a009883a 	mov	r4,r20
10001760:	880b883a 	mov	r5,r17
10001764:	80800005 	stb	r2,0(r16)
10001768:	01800284 	movi	r6,10
1000176c:	000f883a 	mov	r7,zero
10001770:	000e1e00 	call	1000e1e0 <__udivdi3>
10001774:	1029883a 	mov	r20,r2
10001778:	10c4b03a 	or	r2,r2,r3
1000177c:	1823883a 	mov	r17,r3
10001780:	103fef1e 	bne	r2,zero,10001740 <__alt_data_end+0xf8001740>
10001784:	d8c02817 	ldw	r3,160(sp)
10001788:	dc402917 	ldw	r17,164(sp)
1000178c:	b011883a 	mov	r8,r22
10001790:	1c07c83a 	sub	r3,r3,r16
10001794:	d8c02b15 	stw	r3,172(sp)
10001798:	00003106 	br	10001860 <___svfprintf_internal_r+0x6e0>
1000179c:	8025883a 	mov	r18,r16
100017a0:	dc002903 	ldbu	r16,164(sp)
100017a4:	e011883a 	mov	r8,fp
100017a8:	84003fcc 	andi	r16,r16,255
100017ac:	80070a1e 	bne	r16,zero,100033d8 <___svfprintf_internal_r+0x2258>
100017b0:	94800414 	ori	r18,r18,16
100017b4:	9080080c 	andi	r2,r18,32
100017b8:	1002f626 	beq	r2,zero,10002394 <___svfprintf_internal_r+0x1214>
100017bc:	d9002e17 	ldw	r4,184(sp)
100017c0:	d9402a17 	ldw	r5,168(sp)
100017c4:	d8002785 	stb	zero,158(sp)
100017c8:	20800204 	addi	r2,r4,8
100017cc:	25000017 	ldw	r20,0(r4)
100017d0:	25800117 	ldw	r22,4(r4)
100017d4:	28043716 	blt	r5,zero,100028b4 <___svfprintf_internal_r+0x1734>
100017d8:	013fdfc4 	movi	r4,-129
100017dc:	a586b03a 	or	r3,r20,r22
100017e0:	d8802e15 	stw	r2,184(sp)
100017e4:	9124703a 	and	r18,r18,r4
100017e8:	1802f71e 	bne	r3,zero,100023c8 <___svfprintf_internal_r+0x1248>
100017ec:	d9402a17 	ldw	r5,168(sp)
100017f0:	0039883a 	mov	fp,zero
100017f4:	2806df26 	beq	r5,zero,10003374 <___svfprintf_internal_r+0x21f4>
100017f8:	0029883a 	mov	r20,zero
100017fc:	002d883a 	mov	r22,zero
10001800:	dc001e04 	addi	r16,sp,120
10001804:	a006d0fa 	srli	r3,r20,3
10001808:	b008977a 	slli	r4,r22,29
1000180c:	b02cd0fa 	srli	r22,r22,3
10001810:	a50001cc 	andi	r20,r20,7
10001814:	a0800c04 	addi	r2,r20,48
10001818:	843fffc4 	addi	r16,r16,-1
1000181c:	20e8b03a 	or	r20,r4,r3
10001820:	80800005 	stb	r2,0(r16)
10001824:	a586b03a 	or	r3,r20,r22
10001828:	183ff61e 	bne	r3,zero,10001804 <__alt_data_end+0xf8001804>
1000182c:	90c0004c 	andi	r3,r18,1
10001830:	18013f26 	beq	r3,zero,10001d30 <___svfprintf_internal_r+0xbb0>
10001834:	10803fcc 	andi	r2,r2,255
10001838:	1080201c 	xori	r2,r2,128
1000183c:	10bfe004 	addi	r2,r2,-128
10001840:	00c00c04 	movi	r3,48
10001844:	10c13a26 	beq	r2,r3,10001d30 <___svfprintf_internal_r+0xbb0>
10001848:	80ffffc5 	stb	r3,-1(r16)
1000184c:	d8c02817 	ldw	r3,160(sp)
10001850:	80bfffc4 	addi	r2,r16,-1
10001854:	1021883a 	mov	r16,r2
10001858:	1887c83a 	sub	r3,r3,r2
1000185c:	d8c02b15 	stw	r3,172(sp)
10001860:	d8802b17 	ldw	r2,172(sp)
10001864:	d9002a17 	ldw	r4,168(sp)
10001868:	1100010e 	bge	r2,r4,10001870 <___svfprintf_internal_r+0x6f0>
1000186c:	2005883a 	mov	r2,r4
10001870:	d8802915 	stw	r2,164(sp)
10001874:	d8003215 	stw	zero,200(sp)
10001878:	e7003fcc 	andi	fp,fp,255
1000187c:	e700201c 	xori	fp,fp,128
10001880:	e73fe004 	addi	fp,fp,-128
10001884:	e0000326 	beq	fp,zero,10001894 <___svfprintf_internal_r+0x714>
10001888:	d8c02917 	ldw	r3,164(sp)
1000188c:	18c00044 	addi	r3,r3,1
10001890:	d8c02915 	stw	r3,164(sp)
10001894:	90c0008c 	andi	r3,r18,2
10001898:	d8c02c15 	stw	r3,176(sp)
1000189c:	18000326 	beq	r3,zero,100018ac <___svfprintf_internal_r+0x72c>
100018a0:	d8c02917 	ldw	r3,164(sp)
100018a4:	18c00084 	addi	r3,r3,2
100018a8:	d8c02915 	stw	r3,164(sp)
100018ac:	90c0210c 	andi	r3,r18,132
100018b0:	d8c03015 	stw	r3,192(sp)
100018b4:	1801c31e 	bne	r3,zero,10001fc4 <___svfprintf_internal_r+0xe44>
100018b8:	d9003117 	ldw	r4,196(sp)
100018bc:	d8c02917 	ldw	r3,164(sp)
100018c0:	20e9c83a 	sub	r20,r4,r3
100018c4:	0501bf0e 	bge	zero,r20,10001fc4 <___svfprintf_internal_r+0xe44>
100018c8:	02400404 	movi	r9,16
100018cc:	d8c02017 	ldw	r3,128(sp)
100018d0:	d8801f17 	ldw	r2,124(sp)
100018d4:	4d053d0e 	bge	r9,r20,10002dcc <___svfprintf_internal_r+0x1c4c>
100018d8:	01440074 	movhi	r5,4097
100018dc:	294fe984 	addi	r5,r5,16294
100018e0:	dc403c15 	stw	r17,240(sp)
100018e4:	d9403515 	stw	r5,212(sp)
100018e8:	a023883a 	mov	r17,r20
100018ec:	482d883a 	mov	r22,r9
100018f0:	9029883a 	mov	r20,r18
100018f4:	070001c4 	movi	fp,7
100018f8:	8025883a 	mov	r18,r16
100018fc:	dc002d17 	ldw	r16,180(sp)
10001900:	00000306 	br	10001910 <___svfprintf_internal_r+0x790>
10001904:	8c7ffc04 	addi	r17,r17,-16
10001908:	42000204 	addi	r8,r8,8
1000190c:	b440130e 	bge	r22,r17,1000195c <___svfprintf_internal_r+0x7dc>
10001910:	01040074 	movhi	r4,4097
10001914:	18c00404 	addi	r3,r3,16
10001918:	10800044 	addi	r2,r2,1
1000191c:	210fe984 	addi	r4,r4,16294
10001920:	41000015 	stw	r4,0(r8)
10001924:	45800115 	stw	r22,4(r8)
10001928:	d8c02015 	stw	r3,128(sp)
1000192c:	d8801f15 	stw	r2,124(sp)
10001930:	e0bff40e 	bge	fp,r2,10001904 <__alt_data_end+0xf8001904>
10001934:	d9801e04 	addi	r6,sp,120
10001938:	800b883a 	mov	r5,r16
1000193c:	9809883a 	mov	r4,r19
10001940:	000ab200 	call	1000ab20 <__ssprint_r>
10001944:	103ef51e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10001948:	8c7ffc04 	addi	r17,r17,-16
1000194c:	d8c02017 	ldw	r3,128(sp)
10001950:	d8801f17 	ldw	r2,124(sp)
10001954:	da000404 	addi	r8,sp,16
10001958:	b47fed16 	blt	r22,r17,10001910 <__alt_data_end+0xf8001910>
1000195c:	9021883a 	mov	r16,r18
10001960:	a025883a 	mov	r18,r20
10001964:	8829883a 	mov	r20,r17
10001968:	dc403c17 	ldw	r17,240(sp)
1000196c:	d9403517 	ldw	r5,212(sp)
10001970:	a0c7883a 	add	r3,r20,r3
10001974:	10800044 	addi	r2,r2,1
10001978:	41400015 	stw	r5,0(r8)
1000197c:	45000115 	stw	r20,4(r8)
10001980:	d8c02015 	stw	r3,128(sp)
10001984:	d8801f15 	stw	r2,124(sp)
10001988:	010001c4 	movi	r4,7
1000198c:	2082c116 	blt	r4,r2,10002494 <___svfprintf_internal_r+0x1314>
10001990:	df002787 	ldb	fp,158(sp)
10001994:	42000204 	addi	r8,r8,8
10001998:	e0000c26 	beq	fp,zero,100019cc <___svfprintf_internal_r+0x84c>
1000199c:	d8801f17 	ldw	r2,124(sp)
100019a0:	d9002784 	addi	r4,sp,158
100019a4:	18c00044 	addi	r3,r3,1
100019a8:	10800044 	addi	r2,r2,1
100019ac:	41000015 	stw	r4,0(r8)
100019b0:	01000044 	movi	r4,1
100019b4:	41000115 	stw	r4,4(r8)
100019b8:	d8c02015 	stw	r3,128(sp)
100019bc:	d8801f15 	stw	r2,124(sp)
100019c0:	010001c4 	movi	r4,7
100019c4:	20825a16 	blt	r4,r2,10002330 <___svfprintf_internal_r+0x11b0>
100019c8:	42000204 	addi	r8,r8,8
100019cc:	d8802c17 	ldw	r2,176(sp)
100019d0:	10000c26 	beq	r2,zero,10001a04 <___svfprintf_internal_r+0x884>
100019d4:	d8801f17 	ldw	r2,124(sp)
100019d8:	d9002704 	addi	r4,sp,156
100019dc:	18c00084 	addi	r3,r3,2
100019e0:	10800044 	addi	r2,r2,1
100019e4:	41000015 	stw	r4,0(r8)
100019e8:	01000084 	movi	r4,2
100019ec:	41000115 	stw	r4,4(r8)
100019f0:	d8c02015 	stw	r3,128(sp)
100019f4:	d8801f15 	stw	r2,124(sp)
100019f8:	010001c4 	movi	r4,7
100019fc:	20825416 	blt	r4,r2,10002350 <___svfprintf_internal_r+0x11d0>
10001a00:	42000204 	addi	r8,r8,8
10001a04:	d9003017 	ldw	r4,192(sp)
10001a08:	00802004 	movi	r2,128
10001a0c:	2081b926 	beq	r4,r2,100020f4 <___svfprintf_internal_r+0xf74>
10001a10:	d9402a17 	ldw	r5,168(sp)
10001a14:	d8802b17 	ldw	r2,172(sp)
10001a18:	28adc83a 	sub	r22,r5,r2
10001a1c:	05802f0e 	bge	zero,r22,10001adc <___svfprintf_internal_r+0x95c>
10001a20:	07000404 	movi	fp,16
10001a24:	d8801f17 	ldw	r2,124(sp)
10001a28:	e583e20e 	bge	fp,r22,100029b4 <___svfprintf_internal_r+0x1834>
10001a2c:	01440074 	movhi	r5,4097
10001a30:	294fe584 	addi	r5,r5,16278
10001a34:	dc402a15 	stw	r17,168(sp)
10001a38:	d9402c15 	stw	r5,176(sp)
10001a3c:	b023883a 	mov	r17,r22
10001a40:	050001c4 	movi	r20,7
10001a44:	902d883a 	mov	r22,r18
10001a48:	8025883a 	mov	r18,r16
10001a4c:	dc002d17 	ldw	r16,180(sp)
10001a50:	00000306 	br	10001a60 <___svfprintf_internal_r+0x8e0>
10001a54:	8c7ffc04 	addi	r17,r17,-16
10001a58:	42000204 	addi	r8,r8,8
10001a5c:	e440110e 	bge	fp,r17,10001aa4 <___svfprintf_internal_r+0x924>
10001a60:	18c00404 	addi	r3,r3,16
10001a64:	10800044 	addi	r2,r2,1
10001a68:	45400015 	stw	r21,0(r8)
10001a6c:	47000115 	stw	fp,4(r8)
10001a70:	d8c02015 	stw	r3,128(sp)
10001a74:	d8801f15 	stw	r2,124(sp)
10001a78:	a0bff60e 	bge	r20,r2,10001a54 <__alt_data_end+0xf8001a54>
10001a7c:	d9801e04 	addi	r6,sp,120
10001a80:	800b883a 	mov	r5,r16
10001a84:	9809883a 	mov	r4,r19
10001a88:	000ab200 	call	1000ab20 <__ssprint_r>
10001a8c:	103ea31e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10001a90:	8c7ffc04 	addi	r17,r17,-16
10001a94:	d8c02017 	ldw	r3,128(sp)
10001a98:	d8801f17 	ldw	r2,124(sp)
10001a9c:	da000404 	addi	r8,sp,16
10001aa0:	e47fef16 	blt	fp,r17,10001a60 <__alt_data_end+0xf8001a60>
10001aa4:	9021883a 	mov	r16,r18
10001aa8:	b025883a 	mov	r18,r22
10001aac:	882d883a 	mov	r22,r17
10001ab0:	dc402a17 	ldw	r17,168(sp)
10001ab4:	d9002c17 	ldw	r4,176(sp)
10001ab8:	1d87883a 	add	r3,r3,r22
10001abc:	10800044 	addi	r2,r2,1
10001ac0:	41000015 	stw	r4,0(r8)
10001ac4:	45800115 	stw	r22,4(r8)
10001ac8:	d8c02015 	stw	r3,128(sp)
10001acc:	d8801f15 	stw	r2,124(sp)
10001ad0:	010001c4 	movi	r4,7
10001ad4:	20820e16 	blt	r4,r2,10002310 <___svfprintf_internal_r+0x1190>
10001ad8:	42000204 	addi	r8,r8,8
10001adc:	9080400c 	andi	r2,r18,256
10001ae0:	10013a1e 	bne	r2,zero,10001fcc <___svfprintf_internal_r+0xe4c>
10001ae4:	d9402b17 	ldw	r5,172(sp)
10001ae8:	d8801f17 	ldw	r2,124(sp)
10001aec:	44000015 	stw	r16,0(r8)
10001af0:	1947883a 	add	r3,r3,r5
10001af4:	10800044 	addi	r2,r2,1
10001af8:	41400115 	stw	r5,4(r8)
10001afc:	d8c02015 	stw	r3,128(sp)
10001b00:	d8801f15 	stw	r2,124(sp)
10001b04:	010001c4 	movi	r4,7
10001b08:	2081f316 	blt	r4,r2,100022d8 <___svfprintf_internal_r+0x1158>
10001b0c:	42000204 	addi	r8,r8,8
10001b10:	9480010c 	andi	r18,r18,4
10001b14:	90003226 	beq	r18,zero,10001be0 <___svfprintf_internal_r+0xa60>
10001b18:	d9403117 	ldw	r5,196(sp)
10001b1c:	d8802917 	ldw	r2,164(sp)
10001b20:	28a1c83a 	sub	r16,r5,r2
10001b24:	04002e0e 	bge	zero,r16,10001be0 <___svfprintf_internal_r+0xa60>
10001b28:	04400404 	movi	r17,16
10001b2c:	d8801f17 	ldw	r2,124(sp)
10001b30:	8c04db0e 	bge	r17,r16,10002ea0 <___svfprintf_internal_r+0x1d20>
10001b34:	01440074 	movhi	r5,4097
10001b38:	294fe984 	addi	r5,r5,16294
10001b3c:	d9403515 	stw	r5,212(sp)
10001b40:	048001c4 	movi	r18,7
10001b44:	dd002d17 	ldw	r20,180(sp)
10001b48:	00000306 	br	10001b58 <___svfprintf_internal_r+0x9d8>
10001b4c:	843ffc04 	addi	r16,r16,-16
10001b50:	42000204 	addi	r8,r8,8
10001b54:	8c00130e 	bge	r17,r16,10001ba4 <___svfprintf_internal_r+0xa24>
10001b58:	01040074 	movhi	r4,4097
10001b5c:	18c00404 	addi	r3,r3,16
10001b60:	10800044 	addi	r2,r2,1
10001b64:	210fe984 	addi	r4,r4,16294
10001b68:	41000015 	stw	r4,0(r8)
10001b6c:	44400115 	stw	r17,4(r8)
10001b70:	d8c02015 	stw	r3,128(sp)
10001b74:	d8801f15 	stw	r2,124(sp)
10001b78:	90bff40e 	bge	r18,r2,10001b4c <__alt_data_end+0xf8001b4c>
10001b7c:	d9801e04 	addi	r6,sp,120
10001b80:	a00b883a 	mov	r5,r20
10001b84:	9809883a 	mov	r4,r19
10001b88:	000ab200 	call	1000ab20 <__ssprint_r>
10001b8c:	103e631e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10001b90:	843ffc04 	addi	r16,r16,-16
10001b94:	d8c02017 	ldw	r3,128(sp)
10001b98:	d8801f17 	ldw	r2,124(sp)
10001b9c:	da000404 	addi	r8,sp,16
10001ba0:	8c3fed16 	blt	r17,r16,10001b58 <__alt_data_end+0xf8001b58>
10001ba4:	d9403517 	ldw	r5,212(sp)
10001ba8:	1c07883a 	add	r3,r3,r16
10001bac:	10800044 	addi	r2,r2,1
10001bb0:	41400015 	stw	r5,0(r8)
10001bb4:	44000115 	stw	r16,4(r8)
10001bb8:	d8c02015 	stw	r3,128(sp)
10001bbc:	d8801f15 	stw	r2,124(sp)
10001bc0:	010001c4 	movi	r4,7
10001bc4:	2080060e 	bge	r4,r2,10001be0 <___svfprintf_internal_r+0xa60>
10001bc8:	d9402d17 	ldw	r5,180(sp)
10001bcc:	d9801e04 	addi	r6,sp,120
10001bd0:	9809883a 	mov	r4,r19
10001bd4:	000ab200 	call	1000ab20 <__ssprint_r>
10001bd8:	103e501e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10001bdc:	d8c02017 	ldw	r3,128(sp)
10001be0:	d8803117 	ldw	r2,196(sp)
10001be4:	d9002917 	ldw	r4,164(sp)
10001be8:	1100010e 	bge	r2,r4,10001bf0 <___svfprintf_internal_r+0xa70>
10001bec:	2005883a 	mov	r2,r4
10001bf0:	d9402f17 	ldw	r5,188(sp)
10001bf4:	288b883a 	add	r5,r5,r2
10001bf8:	d9402f15 	stw	r5,188(sp)
10001bfc:	1801be1e 	bne	r3,zero,100022f8 <___svfprintf_internal_r+0x1178>
10001c00:	b8800007 	ldb	r2,0(r23)
10001c04:	d8001f15 	stw	zero,124(sp)
10001c08:	da000404 	addi	r8,sp,16
10001c0c:	103d891e 	bne	r2,zero,10001234 <__alt_data_end+0xf8001234>
10001c10:	b823883a 	mov	r17,r23
10001c14:	003d9f06 	br	10001294 <__alt_data_end+0xf8001294>
10001c18:	8025883a 	mov	r18,r16
10001c1c:	dc002903 	ldbu	r16,164(sp)
10001c20:	e011883a 	mov	r8,fp
10001c24:	84003fcc 	andi	r16,r16,255
10001c28:	8005e61e 	bne	r16,zero,100033c4 <___svfprintf_internal_r+0x2244>
10001c2c:	94800414 	ori	r18,r18,16
10001c30:	9080080c 	andi	r2,r18,32
10001c34:	10022026 	beq	r2,zero,100024b8 <___svfprintf_internal_r+0x1338>
10001c38:	d9002e17 	ldw	r4,184(sp)
10001c3c:	d9402a17 	ldw	r5,168(sp)
10001c40:	d8002785 	stb	zero,158(sp)
10001c44:	20c00204 	addi	r3,r4,8
10001c48:	25000017 	ldw	r20,0(r4)
10001c4c:	25800117 	ldw	r22,4(r4)
10001c50:	2803ad16 	blt	r5,zero,10002b08 <___svfprintf_internal_r+0x1988>
10001c54:	013fdfc4 	movi	r4,-129
10001c58:	a584b03a 	or	r2,r20,r22
10001c5c:	d8c02e15 	stw	r3,184(sp)
10001c60:	9124703a 	and	r18,r18,r4
10001c64:	0039883a 	mov	fp,zero
10001c68:	103eb01e 	bne	r2,zero,1000172c <__alt_data_end+0xf800172c>
10001c6c:	d8802a17 	ldw	r2,168(sp)
10001c70:	1002e71e 	bne	r2,zero,10002810 <___svfprintf_internal_r+0x1690>
10001c74:	d8002a15 	stw	zero,168(sp)
10001c78:	d8002b15 	stw	zero,172(sp)
10001c7c:	dc001e04 	addi	r16,sp,120
10001c80:	003ef706 	br	10001860 <__alt_data_end+0xf8001860>
10001c84:	8025883a 	mov	r18,r16
10001c88:	dc002903 	ldbu	r16,164(sp)
10001c8c:	e011883a 	mov	r8,fp
10001c90:	84003fcc 	andi	r16,r16,255
10001c94:	8005c81e 	bne	r16,zero,100033b8 <___svfprintf_internal_r+0x2238>
10001c98:	01040074 	movhi	r4,4097
10001c9c:	210fd904 	addi	r4,r4,16228
10001ca0:	d9003a15 	stw	r4,232(sp)
10001ca4:	9080080c 	andi	r2,r18,32
10001ca8:	10007226 	beq	r2,zero,10001e74 <___svfprintf_internal_r+0xcf4>
10001cac:	d9402e17 	ldw	r5,184(sp)
10001cb0:	2d000017 	ldw	r20,0(r5)
10001cb4:	2d800117 	ldw	r22,4(r5)
10001cb8:	29400204 	addi	r5,r5,8
10001cbc:	d9402e15 	stw	r5,184(sp)
10001cc0:	9080004c 	andi	r2,r18,1
10001cc4:	1001aa26 	beq	r2,zero,10002370 <___svfprintf_internal_r+0x11f0>
10001cc8:	a584b03a 	or	r2,r20,r22
10001ccc:	10032526 	beq	r2,zero,10002964 <___svfprintf_internal_r+0x17e4>
10001cd0:	d8c02a17 	ldw	r3,168(sp)
10001cd4:	00800c04 	movi	r2,48
10001cd8:	d8802705 	stb	r2,156(sp)
10001cdc:	dc402745 	stb	r17,157(sp)
10001ce0:	d8002785 	stb	zero,158(sp)
10001ce4:	90800094 	ori	r2,r18,2
10001ce8:	1804a316 	blt	r3,zero,10002f78 <___svfprintf_internal_r+0x1df8>
10001cec:	00bfdfc4 	movi	r2,-129
10001cf0:	90a4703a 	and	r18,r18,r2
10001cf4:	94800094 	ori	r18,r18,2
10001cf8:	0039883a 	mov	fp,zero
10001cfc:	d9003a17 	ldw	r4,232(sp)
10001d00:	dc001e04 	addi	r16,sp,120
10001d04:	a08003cc 	andi	r2,r20,15
10001d08:	b006973a 	slli	r3,r22,28
10001d0c:	2085883a 	add	r2,r4,r2
10001d10:	a028d13a 	srli	r20,r20,4
10001d14:	10800003 	ldbu	r2,0(r2)
10001d18:	b02cd13a 	srli	r22,r22,4
10001d1c:	843fffc4 	addi	r16,r16,-1
10001d20:	1d28b03a 	or	r20,r3,r20
10001d24:	80800005 	stb	r2,0(r16)
10001d28:	a584b03a 	or	r2,r20,r22
10001d2c:	103ff51e 	bne	r2,zero,10001d04 <__alt_data_end+0xf8001d04>
10001d30:	d8c02817 	ldw	r3,160(sp)
10001d34:	1c07c83a 	sub	r3,r3,r16
10001d38:	d8c02b15 	stw	r3,172(sp)
10001d3c:	003ec806 	br	10001860 <__alt_data_end+0xf8001860>
10001d40:	d8c02e17 	ldw	r3,184(sp)
10001d44:	d9002e17 	ldw	r4,184(sp)
10001d48:	8025883a 	mov	r18,r16
10001d4c:	18800017 	ldw	r2,0(r3)
10001d50:	21000104 	addi	r4,r4,4
10001d54:	00c00044 	movi	r3,1
10001d58:	e011883a 	mov	r8,fp
10001d5c:	d8c02915 	stw	r3,164(sp)
10001d60:	d8002785 	stb	zero,158(sp)
10001d64:	d8801405 	stb	r2,80(sp)
10001d68:	d9002e15 	stw	r4,184(sp)
10001d6c:	d8c02b15 	stw	r3,172(sp)
10001d70:	d8002a15 	stw	zero,168(sp)
10001d74:	d8003215 	stw	zero,200(sp)
10001d78:	dc001404 	addi	r16,sp,80
10001d7c:	0039883a 	mov	fp,zero
10001d80:	003ec406 	br	10001894 <__alt_data_end+0xf8001894>
10001d84:	8025883a 	mov	r18,r16
10001d88:	dc002903 	ldbu	r16,164(sp)
10001d8c:	e011883a 	mov	r8,fp
10001d90:	84003fcc 	andi	r16,r16,255
10001d94:	803e8726 	beq	r16,zero,100017b4 <__alt_data_end+0xf80017b4>
10001d98:	d8c02b03 	ldbu	r3,172(sp)
10001d9c:	d8c02785 	stb	r3,158(sp)
10001da0:	003e8406 	br	100017b4 <__alt_data_end+0xf80017b4>
10001da4:	00c00044 	movi	r3,1
10001da8:	d8c02905 	stb	r3,164(sp)
10001dac:	00c00ac4 	movi	r3,43
10001db0:	d8c02b05 	stb	r3,172(sp)
10001db4:	bc400007 	ldb	r17,0(r23)
10001db8:	003d4606 	br	100012d4 <__alt_data_end+0xf80012d4>
10001dbc:	84000814 	ori	r16,r16,32
10001dc0:	bc400007 	ldb	r17,0(r23)
10001dc4:	003d4306 	br	100012d4 <__alt_data_end+0xf80012d4>
10001dc8:	d8802e17 	ldw	r2,184(sp)
10001dcc:	8025883a 	mov	r18,r16
10001dd0:	d8002785 	stb	zero,158(sp)
10001dd4:	14000017 	ldw	r16,0(r2)
10001dd8:	e011883a 	mov	r8,fp
10001ddc:	15000104 	addi	r20,r2,4
10001de0:	80042126 	beq	r16,zero,10002e68 <___svfprintf_internal_r+0x1ce8>
10001de4:	d8c02a17 	ldw	r3,168(sp)
10001de8:	1803ee16 	blt	r3,zero,10002da4 <___svfprintf_internal_r+0x1c24>
10001dec:	180d883a 	mov	r6,r3
10001df0:	000b883a 	mov	r5,zero
10001df4:	8009883a 	mov	r4,r16
10001df8:	df003e15 	stw	fp,248(sp)
10001dfc:	0008d740 	call	10008d74 <memchr>
10001e00:	da003e17 	ldw	r8,248(sp)
10001e04:	10046a26 	beq	r2,zero,10002fb0 <___svfprintf_internal_r+0x1e30>
10001e08:	1405c83a 	sub	r2,r2,r16
10001e0c:	d8802b15 	stw	r2,172(sp)
10001e10:	1003ea16 	blt	r2,zero,10002dbc <___svfprintf_internal_r+0x1c3c>
10001e14:	df002783 	ldbu	fp,158(sp)
10001e18:	d8802915 	stw	r2,164(sp)
10001e1c:	dd002e15 	stw	r20,184(sp)
10001e20:	d8002a15 	stw	zero,168(sp)
10001e24:	d8003215 	stw	zero,200(sp)
10001e28:	003e9306 	br	10001878 <__alt_data_end+0xf8001878>
10001e2c:	8025883a 	mov	r18,r16
10001e30:	dc002903 	ldbu	r16,164(sp)
10001e34:	e011883a 	mov	r8,fp
10001e38:	84003fcc 	andi	r16,r16,255
10001e3c:	803f7c26 	beq	r16,zero,10001c30 <__alt_data_end+0xf8001c30>
10001e40:	d8c02b03 	ldbu	r3,172(sp)
10001e44:	d8c02785 	stb	r3,158(sp)
10001e48:	003f7906 	br	10001c30 <__alt_data_end+0xf8001c30>
10001e4c:	8025883a 	mov	r18,r16
10001e50:	dc002903 	ldbu	r16,164(sp)
10001e54:	e011883a 	mov	r8,fp
10001e58:	84003fcc 	andi	r16,r16,255
10001e5c:	8005741e 	bne	r16,zero,10003430 <___svfprintf_internal_r+0x22b0>
10001e60:	01040074 	movhi	r4,4097
10001e64:	210fde04 	addi	r4,r4,16248
10001e68:	d9003a15 	stw	r4,232(sp)
10001e6c:	9080080c 	andi	r2,r18,32
10001e70:	103f8e1e 	bne	r2,zero,10001cac <__alt_data_end+0xf8001cac>
10001e74:	9080040c 	andi	r2,r18,16
10001e78:	1002a726 	beq	r2,zero,10002918 <___svfprintf_internal_r+0x1798>
10001e7c:	d8802e17 	ldw	r2,184(sp)
10001e80:	002d883a 	mov	r22,zero
10001e84:	15000017 	ldw	r20,0(r2)
10001e88:	10800104 	addi	r2,r2,4
10001e8c:	d8802e15 	stw	r2,184(sp)
10001e90:	003f8b06 	br	10001cc0 <__alt_data_end+0xf8001cc0>
10001e94:	84000054 	ori	r16,r16,1
10001e98:	bc400007 	ldb	r17,0(r23)
10001e9c:	003d0d06 	br	100012d4 <__alt_data_end+0xf80012d4>
10001ea0:	d8802b07 	ldb	r2,172(sp)
10001ea4:	1002a41e 	bne	r2,zero,10002938 <___svfprintf_internal_r+0x17b8>
10001ea8:	00c00044 	movi	r3,1
10001eac:	d8c02905 	stb	r3,164(sp)
10001eb0:	00c00804 	movi	r3,32
10001eb4:	d8c02b05 	stb	r3,172(sp)
10001eb8:	bc400007 	ldb	r17,0(r23)
10001ebc:	003d0506 	br	100012d4 <__alt_data_end+0xf80012d4>
10001ec0:	8025883a 	mov	r18,r16
10001ec4:	dc002903 	ldbu	r16,164(sp)
10001ec8:	e011883a 	mov	r8,fp
10001ecc:	84003fcc 	andi	r16,r16,255
10001ed0:	803e0626 	beq	r16,zero,100016ec <__alt_data_end+0xf80016ec>
10001ed4:	d8c02b03 	ldbu	r3,172(sp)
10001ed8:	d8c02785 	stb	r3,158(sp)
10001edc:	003e0306 	br	100016ec <__alt_data_end+0xf80016ec>
10001ee0:	bc400007 	ldb	r17,0(r23)
10001ee4:	00801b04 	movi	r2,108
10001ee8:	88830a26 	beq	r17,r2,10002b14 <___svfprintf_internal_r+0x1994>
10001eec:	84000414 	ori	r16,r16,16
10001ef0:	003cf806 	br	100012d4 <__alt_data_end+0xf80012d4>
10001ef4:	8025883a 	mov	r18,r16
10001ef8:	dc002903 	ldbu	r16,164(sp)
10001efc:	e011883a 	mov	r8,fp
10001f00:	84003fcc 	andi	r16,r16,255
10001f04:	8005471e 	bne	r16,zero,10003424 <___svfprintf_internal_r+0x22a4>
10001f08:	9080080c 	andi	r2,r18,32
10001f0c:	10028c26 	beq	r2,zero,10002940 <___svfprintf_internal_r+0x17c0>
10001f10:	d9002e17 	ldw	r4,184(sp)
10001f14:	d9402f17 	ldw	r5,188(sp)
10001f18:	20800017 	ldw	r2,0(r4)
10001f1c:	2807d7fa 	srai	r3,r5,31
10001f20:	21000104 	addi	r4,r4,4
10001f24:	d9002e15 	stw	r4,184(sp)
10001f28:	11400015 	stw	r5,0(r2)
10001f2c:	10c00115 	stw	r3,4(r2)
10001f30:	003cbe06 	br	1000122c <__alt_data_end+0xf800122c>
10001f34:	84001014 	ori	r16,r16,64
10001f38:	bc400007 	ldb	r17,0(r23)
10001f3c:	003ce506 	br	100012d4 <__alt_data_end+0xf80012d4>
10001f40:	01040074 	movhi	r4,4097
10001f44:	210fde04 	addi	r4,r4,16248
10001f48:	0039883a 	mov	fp,zero
10001f4c:	d9003a15 	stw	r4,232(sp)
10001f50:	04401e04 	movi	r17,120
10001f54:	003f6906 	br	10001cfc <__alt_data_end+0xf8001cfc>
10001f58:	8025883a 	mov	r18,r16
10001f5c:	dc002903 	ldbu	r16,164(sp)
10001f60:	e011883a 	mov	r8,fp
10001f64:	84003fcc 	andi	r16,r16,255
10001f68:	8005261e 	bne	r16,zero,10003404 <___svfprintf_internal_r+0x2284>
10001f6c:	883d6526 	beq	r17,zero,10001504 <__alt_data_end+0xf8001504>
10001f70:	00c00044 	movi	r3,1
10001f74:	d8c02915 	stw	r3,164(sp)
10001f78:	dc401405 	stb	r17,80(sp)
10001f7c:	d8002785 	stb	zero,158(sp)
10001f80:	003f7a06 	br	10001d6c <__alt_data_end+0xf8001d6c>
10001f84:	01040074 	movhi	r4,4097
10001f88:	210fde04 	addi	r4,r4,16248
10001f8c:	d9003a15 	stw	r4,232(sp)
10001f90:	d8c02e15 	stw	r3,184(sp)
10001f94:	1025883a 	mov	r18,r2
10001f98:	04401e04 	movi	r17,120
10001f9c:	a584b03a 	or	r2,r20,r22
10001fa0:	1000fa1e 	bne	r2,zero,1000238c <___svfprintf_internal_r+0x120c>
10001fa4:	0039883a 	mov	fp,zero
10001fa8:	00800084 	movi	r2,2
10001fac:	10803fcc 	andi	r2,r2,255
10001fb0:	00c00044 	movi	r3,1
10001fb4:	10c21626 	beq	r2,r3,10002810 <___svfprintf_internal_r+0x1690>
10001fb8:	00c00084 	movi	r3,2
10001fbc:	10fe0e1e 	bne	r2,r3,100017f8 <__alt_data_end+0xf80017f8>
10001fc0:	003d4606 	br	100014dc <__alt_data_end+0xf80014dc>
10001fc4:	d8c02017 	ldw	r3,128(sp)
10001fc8:	003e7306 	br	10001998 <__alt_data_end+0xf8001998>
10001fcc:	00801944 	movi	r2,101
10001fd0:	14407c0e 	bge	r2,r17,100021c4 <___svfprintf_internal_r+0x1044>
10001fd4:	d9003617 	ldw	r4,216(sp)
10001fd8:	d9403717 	ldw	r5,220(sp)
10001fdc:	000d883a 	mov	r6,zero
10001fe0:	000f883a 	mov	r7,zero
10001fe4:	d8c03d15 	stw	r3,244(sp)
10001fe8:	da003e15 	stw	r8,248(sp)
10001fec:	001001c0 	call	1001001c <__eqdf2>
10001ff0:	d8c03d17 	ldw	r3,244(sp)
10001ff4:	da003e17 	ldw	r8,248(sp)
10001ff8:	1000f51e 	bne	r2,zero,100023d0 <___svfprintf_internal_r+0x1250>
10001ffc:	d8801f17 	ldw	r2,124(sp)
10002000:	01040074 	movhi	r4,4097
10002004:	210fe504 	addi	r4,r4,16276
10002008:	18c00044 	addi	r3,r3,1
1000200c:	10800044 	addi	r2,r2,1
10002010:	41000015 	stw	r4,0(r8)
10002014:	01000044 	movi	r4,1
10002018:	41000115 	stw	r4,4(r8)
1000201c:	d8c02015 	stw	r3,128(sp)
10002020:	d8801f15 	stw	r2,124(sp)
10002024:	010001c4 	movi	r4,7
10002028:	20826616 	blt	r4,r2,100029c4 <___svfprintf_internal_r+0x1844>
1000202c:	42000204 	addi	r8,r8,8
10002030:	d8802617 	ldw	r2,152(sp)
10002034:	d9403317 	ldw	r5,204(sp)
10002038:	11400216 	blt	r2,r5,10002044 <___svfprintf_internal_r+0xec4>
1000203c:	9080004c 	andi	r2,r18,1
10002040:	103eb326 	beq	r2,zero,10001b10 <__alt_data_end+0xf8001b10>
10002044:	d8803817 	ldw	r2,224(sp)
10002048:	d9003417 	ldw	r4,208(sp)
1000204c:	d9403817 	ldw	r5,224(sp)
10002050:	1887883a 	add	r3,r3,r2
10002054:	d8801f17 	ldw	r2,124(sp)
10002058:	41000015 	stw	r4,0(r8)
1000205c:	41400115 	stw	r5,4(r8)
10002060:	10800044 	addi	r2,r2,1
10002064:	d8c02015 	stw	r3,128(sp)
10002068:	d8801f15 	stw	r2,124(sp)
1000206c:	010001c4 	movi	r4,7
10002070:	2082af16 	blt	r4,r2,10002b30 <___svfprintf_internal_r+0x19b0>
10002074:	42000204 	addi	r8,r8,8
10002078:	d8803317 	ldw	r2,204(sp)
1000207c:	143fffc4 	addi	r16,r2,-1
10002080:	043ea30e 	bge	zero,r16,10001b10 <__alt_data_end+0xf8001b10>
10002084:	04400404 	movi	r17,16
10002088:	d8801f17 	ldw	r2,124(sp)
1000208c:	8c00860e 	bge	r17,r16,100022a8 <___svfprintf_internal_r+0x1128>
10002090:	01440074 	movhi	r5,4097
10002094:	294fe584 	addi	r5,r5,16278
10002098:	d9402c15 	stw	r5,176(sp)
1000209c:	058001c4 	movi	r22,7
100020a0:	dd002d17 	ldw	r20,180(sp)
100020a4:	00000306 	br	100020b4 <___svfprintf_internal_r+0xf34>
100020a8:	42000204 	addi	r8,r8,8
100020ac:	843ffc04 	addi	r16,r16,-16
100020b0:	8c00800e 	bge	r17,r16,100022b4 <___svfprintf_internal_r+0x1134>
100020b4:	18c00404 	addi	r3,r3,16
100020b8:	10800044 	addi	r2,r2,1
100020bc:	45400015 	stw	r21,0(r8)
100020c0:	44400115 	stw	r17,4(r8)
100020c4:	d8c02015 	stw	r3,128(sp)
100020c8:	d8801f15 	stw	r2,124(sp)
100020cc:	b0bff60e 	bge	r22,r2,100020a8 <__alt_data_end+0xf80020a8>
100020d0:	d9801e04 	addi	r6,sp,120
100020d4:	a00b883a 	mov	r5,r20
100020d8:	9809883a 	mov	r4,r19
100020dc:	000ab200 	call	1000ab20 <__ssprint_r>
100020e0:	103d0e1e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
100020e4:	d8c02017 	ldw	r3,128(sp)
100020e8:	d8801f17 	ldw	r2,124(sp)
100020ec:	da000404 	addi	r8,sp,16
100020f0:	003fee06 	br	100020ac <__alt_data_end+0xf80020ac>
100020f4:	d9403117 	ldw	r5,196(sp)
100020f8:	d8802917 	ldw	r2,164(sp)
100020fc:	28adc83a 	sub	r22,r5,r2
10002100:	05be430e 	bge	zero,r22,10001a10 <__alt_data_end+0xf8001a10>
10002104:	07000404 	movi	fp,16
10002108:	d8801f17 	ldw	r2,124(sp)
1000210c:	e583a20e 	bge	fp,r22,10002f98 <___svfprintf_internal_r+0x1e18>
10002110:	01440074 	movhi	r5,4097
10002114:	294fe584 	addi	r5,r5,16278
10002118:	dc403015 	stw	r17,192(sp)
1000211c:	d9402c15 	stw	r5,176(sp)
10002120:	b023883a 	mov	r17,r22
10002124:	050001c4 	movi	r20,7
10002128:	902d883a 	mov	r22,r18
1000212c:	8025883a 	mov	r18,r16
10002130:	dc002d17 	ldw	r16,180(sp)
10002134:	00000306 	br	10002144 <___svfprintf_internal_r+0xfc4>
10002138:	8c7ffc04 	addi	r17,r17,-16
1000213c:	42000204 	addi	r8,r8,8
10002140:	e440110e 	bge	fp,r17,10002188 <___svfprintf_internal_r+0x1008>
10002144:	18c00404 	addi	r3,r3,16
10002148:	10800044 	addi	r2,r2,1
1000214c:	45400015 	stw	r21,0(r8)
10002150:	47000115 	stw	fp,4(r8)
10002154:	d8c02015 	stw	r3,128(sp)
10002158:	d8801f15 	stw	r2,124(sp)
1000215c:	a0bff60e 	bge	r20,r2,10002138 <__alt_data_end+0xf8002138>
10002160:	d9801e04 	addi	r6,sp,120
10002164:	800b883a 	mov	r5,r16
10002168:	9809883a 	mov	r4,r19
1000216c:	000ab200 	call	1000ab20 <__ssprint_r>
10002170:	103cea1e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002174:	8c7ffc04 	addi	r17,r17,-16
10002178:	d8c02017 	ldw	r3,128(sp)
1000217c:	d8801f17 	ldw	r2,124(sp)
10002180:	da000404 	addi	r8,sp,16
10002184:	e47fef16 	blt	fp,r17,10002144 <__alt_data_end+0xf8002144>
10002188:	9021883a 	mov	r16,r18
1000218c:	b025883a 	mov	r18,r22
10002190:	882d883a 	mov	r22,r17
10002194:	dc403017 	ldw	r17,192(sp)
10002198:	d9002c17 	ldw	r4,176(sp)
1000219c:	1d87883a 	add	r3,r3,r22
100021a0:	10800044 	addi	r2,r2,1
100021a4:	41000015 	stw	r4,0(r8)
100021a8:	45800115 	stw	r22,4(r8)
100021ac:	d8c02015 	stw	r3,128(sp)
100021b0:	d8801f15 	stw	r2,124(sp)
100021b4:	010001c4 	movi	r4,7
100021b8:	20819a16 	blt	r4,r2,10002824 <___svfprintf_internal_r+0x16a4>
100021bc:	42000204 	addi	r8,r8,8
100021c0:	003e1306 	br	10001a10 <__alt_data_end+0xf8001a10>
100021c4:	d9403317 	ldw	r5,204(sp)
100021c8:	00800044 	movi	r2,1
100021cc:	18c00044 	addi	r3,r3,1
100021d0:	1141710e 	bge	r2,r5,10002798 <___svfprintf_internal_r+0x1618>
100021d4:	dc401f17 	ldw	r17,124(sp)
100021d8:	00800044 	movi	r2,1
100021dc:	40800115 	stw	r2,4(r8)
100021e0:	8c400044 	addi	r17,r17,1
100021e4:	44000015 	stw	r16,0(r8)
100021e8:	d8c02015 	stw	r3,128(sp)
100021ec:	dc401f15 	stw	r17,124(sp)
100021f0:	008001c4 	movi	r2,7
100021f4:	14417416 	blt	r2,r17,100027c8 <___svfprintf_internal_r+0x1648>
100021f8:	42000204 	addi	r8,r8,8
100021fc:	d8803817 	ldw	r2,224(sp)
10002200:	d9003417 	ldw	r4,208(sp)
10002204:	8c400044 	addi	r17,r17,1
10002208:	10c7883a 	add	r3,r2,r3
1000220c:	40800115 	stw	r2,4(r8)
10002210:	41000015 	stw	r4,0(r8)
10002214:	d8c02015 	stw	r3,128(sp)
10002218:	dc401f15 	stw	r17,124(sp)
1000221c:	008001c4 	movi	r2,7
10002220:	14417216 	blt	r2,r17,100027ec <___svfprintf_internal_r+0x166c>
10002224:	45800204 	addi	r22,r8,8
10002228:	d9003617 	ldw	r4,216(sp)
1000222c:	d9403717 	ldw	r5,220(sp)
10002230:	000d883a 	mov	r6,zero
10002234:	000f883a 	mov	r7,zero
10002238:	d8c03d15 	stw	r3,244(sp)
1000223c:	001001c0 	call	1001001c <__eqdf2>
10002240:	d8c03d17 	ldw	r3,244(sp)
10002244:	1000b326 	beq	r2,zero,10002514 <___svfprintf_internal_r+0x1394>
10002248:	d9403317 	ldw	r5,204(sp)
1000224c:	84000044 	addi	r16,r16,1
10002250:	8c400044 	addi	r17,r17,1
10002254:	28bfffc4 	addi	r2,r5,-1
10002258:	1887883a 	add	r3,r3,r2
1000225c:	b0800115 	stw	r2,4(r22)
10002260:	b4000015 	stw	r16,0(r22)
10002264:	d8c02015 	stw	r3,128(sp)
10002268:	dc401f15 	stw	r17,124(sp)
1000226c:	008001c4 	movi	r2,7
10002270:	1440d216 	blt	r2,r17,100025bc <___svfprintf_internal_r+0x143c>
10002274:	b5800204 	addi	r22,r22,8
10002278:	d9003b17 	ldw	r4,236(sp)
1000227c:	df0022c4 	addi	fp,sp,139
10002280:	8c400044 	addi	r17,r17,1
10002284:	20c7883a 	add	r3,r4,r3
10002288:	b7000015 	stw	fp,0(r22)
1000228c:	b1000115 	stw	r4,4(r22)
10002290:	d8c02015 	stw	r3,128(sp)
10002294:	dc401f15 	stw	r17,124(sp)
10002298:	008001c4 	movi	r2,7
1000229c:	14400e16 	blt	r2,r17,100022d8 <___svfprintf_internal_r+0x1158>
100022a0:	b2000204 	addi	r8,r22,8
100022a4:	003e1a06 	br	10001b10 <__alt_data_end+0xf8001b10>
100022a8:	01040074 	movhi	r4,4097
100022ac:	210fe584 	addi	r4,r4,16278
100022b0:	d9002c15 	stw	r4,176(sp)
100022b4:	d9002c17 	ldw	r4,176(sp)
100022b8:	1c07883a 	add	r3,r3,r16
100022bc:	44000115 	stw	r16,4(r8)
100022c0:	41000015 	stw	r4,0(r8)
100022c4:	10800044 	addi	r2,r2,1
100022c8:	d8c02015 	stw	r3,128(sp)
100022cc:	d8801f15 	stw	r2,124(sp)
100022d0:	010001c4 	movi	r4,7
100022d4:	20be0d0e 	bge	r4,r2,10001b0c <__alt_data_end+0xf8001b0c>
100022d8:	d9402d17 	ldw	r5,180(sp)
100022dc:	d9801e04 	addi	r6,sp,120
100022e0:	9809883a 	mov	r4,r19
100022e4:	000ab200 	call	1000ab20 <__ssprint_r>
100022e8:	103c8c1e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
100022ec:	d8c02017 	ldw	r3,128(sp)
100022f0:	da000404 	addi	r8,sp,16
100022f4:	003e0606 	br	10001b10 <__alt_data_end+0xf8001b10>
100022f8:	d9402d17 	ldw	r5,180(sp)
100022fc:	d9801e04 	addi	r6,sp,120
10002300:	9809883a 	mov	r4,r19
10002304:	000ab200 	call	1000ab20 <__ssprint_r>
10002308:	103e3d26 	beq	r2,zero,10001c00 <__alt_data_end+0xf8001c00>
1000230c:	003c8306 	br	1000151c <__alt_data_end+0xf800151c>
10002310:	d9402d17 	ldw	r5,180(sp)
10002314:	d9801e04 	addi	r6,sp,120
10002318:	9809883a 	mov	r4,r19
1000231c:	000ab200 	call	1000ab20 <__ssprint_r>
10002320:	103c7e1e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002324:	d8c02017 	ldw	r3,128(sp)
10002328:	da000404 	addi	r8,sp,16
1000232c:	003deb06 	br	10001adc <__alt_data_end+0xf8001adc>
10002330:	d9402d17 	ldw	r5,180(sp)
10002334:	d9801e04 	addi	r6,sp,120
10002338:	9809883a 	mov	r4,r19
1000233c:	000ab200 	call	1000ab20 <__ssprint_r>
10002340:	103c761e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002344:	d8c02017 	ldw	r3,128(sp)
10002348:	da000404 	addi	r8,sp,16
1000234c:	003d9f06 	br	100019cc <__alt_data_end+0xf80019cc>
10002350:	d9402d17 	ldw	r5,180(sp)
10002354:	d9801e04 	addi	r6,sp,120
10002358:	9809883a 	mov	r4,r19
1000235c:	000ab200 	call	1000ab20 <__ssprint_r>
10002360:	103c6e1e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002364:	d8c02017 	ldw	r3,128(sp)
10002368:	da000404 	addi	r8,sp,16
1000236c:	003da506 	br	10001a04 <__alt_data_end+0xf8001a04>
10002370:	d9402a17 	ldw	r5,168(sp)
10002374:	d8002785 	stb	zero,158(sp)
10002378:	283f0816 	blt	r5,zero,10001f9c <__alt_data_end+0xf8001f9c>
1000237c:	00ffdfc4 	movi	r3,-129
10002380:	a584b03a 	or	r2,r20,r22
10002384:	90e4703a 	and	r18,r18,r3
10002388:	103c5126 	beq	r2,zero,100014d0 <__alt_data_end+0xf80014d0>
1000238c:	0039883a 	mov	fp,zero
10002390:	003e5a06 	br	10001cfc <__alt_data_end+0xf8001cfc>
10002394:	9080040c 	andi	r2,r18,16
10002398:	10013d26 	beq	r2,zero,10002890 <___svfprintf_internal_r+0x1710>
1000239c:	d8c02e17 	ldw	r3,184(sp)
100023a0:	d9002a17 	ldw	r4,168(sp)
100023a4:	d8002785 	stb	zero,158(sp)
100023a8:	18800104 	addi	r2,r3,4
100023ac:	1d000017 	ldw	r20,0(r3)
100023b0:	002d883a 	mov	r22,zero
100023b4:	20013f16 	blt	r4,zero,100028b4 <___svfprintf_internal_r+0x1734>
100023b8:	00ffdfc4 	movi	r3,-129
100023bc:	d8802e15 	stw	r2,184(sp)
100023c0:	90e4703a 	and	r18,r18,r3
100023c4:	a03d0926 	beq	r20,zero,100017ec <__alt_data_end+0xf80017ec>
100023c8:	0039883a 	mov	fp,zero
100023cc:	003d0c06 	br	10001800 <__alt_data_end+0xf8001800>
100023d0:	dc402617 	ldw	r17,152(sp)
100023d4:	0441830e 	bge	zero,r17,100029e4 <___svfprintf_internal_r+0x1864>
100023d8:	dc403217 	ldw	r17,200(sp)
100023dc:	d8803317 	ldw	r2,204(sp)
100023e0:	1440010e 	bge	r2,r17,100023e8 <___svfprintf_internal_r+0x1268>
100023e4:	1023883a 	mov	r17,r2
100023e8:	04400a0e 	bge	zero,r17,10002414 <___svfprintf_internal_r+0x1294>
100023ec:	d8801f17 	ldw	r2,124(sp)
100023f0:	1c47883a 	add	r3,r3,r17
100023f4:	44000015 	stw	r16,0(r8)
100023f8:	10800044 	addi	r2,r2,1
100023fc:	44400115 	stw	r17,4(r8)
10002400:	d8c02015 	stw	r3,128(sp)
10002404:	d8801f15 	stw	r2,124(sp)
10002408:	010001c4 	movi	r4,7
1000240c:	20827516 	blt	r4,r2,10002de4 <___svfprintf_internal_r+0x1c64>
10002410:	42000204 	addi	r8,r8,8
10002414:	88027b16 	blt	r17,zero,10002e04 <___svfprintf_internal_r+0x1c84>
10002418:	d9003217 	ldw	r4,200(sp)
1000241c:	2463c83a 	sub	r17,r4,r17
10002420:	0440990e 	bge	zero,r17,10002688 <___svfprintf_internal_r+0x1508>
10002424:	05800404 	movi	r22,16
10002428:	d8801f17 	ldw	r2,124(sp)
1000242c:	b441530e 	bge	r22,r17,1000297c <___svfprintf_internal_r+0x17fc>
10002430:	01040074 	movhi	r4,4097
10002434:	210fe584 	addi	r4,r4,16278
10002438:	d9002c15 	stw	r4,176(sp)
1000243c:	070001c4 	movi	fp,7
10002440:	dd002d17 	ldw	r20,180(sp)
10002444:	00000306 	br	10002454 <___svfprintf_internal_r+0x12d4>
10002448:	42000204 	addi	r8,r8,8
1000244c:	8c7ffc04 	addi	r17,r17,-16
10002450:	b4414d0e 	bge	r22,r17,10002988 <___svfprintf_internal_r+0x1808>
10002454:	18c00404 	addi	r3,r3,16
10002458:	10800044 	addi	r2,r2,1
1000245c:	45400015 	stw	r21,0(r8)
10002460:	45800115 	stw	r22,4(r8)
10002464:	d8c02015 	stw	r3,128(sp)
10002468:	d8801f15 	stw	r2,124(sp)
1000246c:	e0bff60e 	bge	fp,r2,10002448 <__alt_data_end+0xf8002448>
10002470:	d9801e04 	addi	r6,sp,120
10002474:	a00b883a 	mov	r5,r20
10002478:	9809883a 	mov	r4,r19
1000247c:	000ab200 	call	1000ab20 <__ssprint_r>
10002480:	103c261e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002484:	d8c02017 	ldw	r3,128(sp)
10002488:	d8801f17 	ldw	r2,124(sp)
1000248c:	da000404 	addi	r8,sp,16
10002490:	003fee06 	br	1000244c <__alt_data_end+0xf800244c>
10002494:	d9402d17 	ldw	r5,180(sp)
10002498:	d9801e04 	addi	r6,sp,120
1000249c:	9809883a 	mov	r4,r19
100024a0:	000ab200 	call	1000ab20 <__ssprint_r>
100024a4:	103c1d1e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
100024a8:	d8c02017 	ldw	r3,128(sp)
100024ac:	df002787 	ldb	fp,158(sp)
100024b0:	da000404 	addi	r8,sp,16
100024b4:	003d3806 	br	10001998 <__alt_data_end+0xf8001998>
100024b8:	9080040c 	andi	r2,r18,16
100024bc:	10005c26 	beq	r2,zero,10002630 <___svfprintf_internal_r+0x14b0>
100024c0:	d8c02e17 	ldw	r3,184(sp)
100024c4:	d9002a17 	ldw	r4,168(sp)
100024c8:	d8002785 	stb	zero,158(sp)
100024cc:	18800104 	addi	r2,r3,4
100024d0:	1d000017 	ldw	r20,0(r3)
100024d4:	002d883a 	mov	r22,zero
100024d8:	20005e16 	blt	r4,zero,10002654 <___svfprintf_internal_r+0x14d4>
100024dc:	00ffdfc4 	movi	r3,-129
100024e0:	d8802e15 	stw	r2,184(sp)
100024e4:	90e4703a 	and	r18,r18,r3
100024e8:	0039883a 	mov	fp,zero
100024ec:	a03ddf26 	beq	r20,zero,10001c6c <__alt_data_end+0xf8001c6c>
100024f0:	00800244 	movi	r2,9
100024f4:	153c8e36 	bltu	r2,r20,10001730 <__alt_data_end+0xf8001730>
100024f8:	a5000c04 	addi	r20,r20,48
100024fc:	dc001dc4 	addi	r16,sp,119
10002500:	dd001dc5 	stb	r20,119(sp)
10002504:	d8c02817 	ldw	r3,160(sp)
10002508:	1c07c83a 	sub	r3,r3,r16
1000250c:	d8c02b15 	stw	r3,172(sp)
10002510:	003cd306 	br	10001860 <__alt_data_end+0xf8001860>
10002514:	d8803317 	ldw	r2,204(sp)
10002518:	143fffc4 	addi	r16,r2,-1
1000251c:	043f560e 	bge	zero,r16,10002278 <__alt_data_end+0xf8002278>
10002520:	07000404 	movi	fp,16
10002524:	e403530e 	bge	fp,r16,10003274 <___svfprintf_internal_r+0x20f4>
10002528:	01440074 	movhi	r5,4097
1000252c:	294fe584 	addi	r5,r5,16278
10002530:	d9402c15 	stw	r5,176(sp)
10002534:	01c001c4 	movi	r7,7
10002538:	dd002d17 	ldw	r20,180(sp)
1000253c:	00000306 	br	1000254c <___svfprintf_internal_r+0x13cc>
10002540:	843ffc04 	addi	r16,r16,-16
10002544:	b5800204 	addi	r22,r22,8
10002548:	e400130e 	bge	fp,r16,10002598 <___svfprintf_internal_r+0x1418>
1000254c:	18c00404 	addi	r3,r3,16
10002550:	8c400044 	addi	r17,r17,1
10002554:	b5400015 	stw	r21,0(r22)
10002558:	b7000115 	stw	fp,4(r22)
1000255c:	d8c02015 	stw	r3,128(sp)
10002560:	dc401f15 	stw	r17,124(sp)
10002564:	3c7ff60e 	bge	r7,r17,10002540 <__alt_data_end+0xf8002540>
10002568:	d9801e04 	addi	r6,sp,120
1000256c:	a00b883a 	mov	r5,r20
10002570:	9809883a 	mov	r4,r19
10002574:	d9c03d15 	stw	r7,244(sp)
10002578:	000ab200 	call	1000ab20 <__ssprint_r>
1000257c:	d9c03d17 	ldw	r7,244(sp)
10002580:	103be61e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002584:	843ffc04 	addi	r16,r16,-16
10002588:	d8c02017 	ldw	r3,128(sp)
1000258c:	dc401f17 	ldw	r17,124(sp)
10002590:	dd800404 	addi	r22,sp,16
10002594:	e43fed16 	blt	fp,r16,1000254c <__alt_data_end+0xf800254c>
10002598:	d8802c17 	ldw	r2,176(sp)
1000259c:	1c07883a 	add	r3,r3,r16
100025a0:	8c400044 	addi	r17,r17,1
100025a4:	b0800015 	stw	r2,0(r22)
100025a8:	b4000115 	stw	r16,4(r22)
100025ac:	d8c02015 	stw	r3,128(sp)
100025b0:	dc401f15 	stw	r17,124(sp)
100025b4:	008001c4 	movi	r2,7
100025b8:	147f2e0e 	bge	r2,r17,10002274 <__alt_data_end+0xf8002274>
100025bc:	d9402d17 	ldw	r5,180(sp)
100025c0:	d9801e04 	addi	r6,sp,120
100025c4:	9809883a 	mov	r4,r19
100025c8:	000ab200 	call	1000ab20 <__ssprint_r>
100025cc:	103bd31e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
100025d0:	d8c02017 	ldw	r3,128(sp)
100025d4:	dc401f17 	ldw	r17,124(sp)
100025d8:	dd800404 	addi	r22,sp,16
100025dc:	003f2606 	br	10002278 <__alt_data_end+0xf8002278>
100025e0:	9080040c 	andi	r2,r18,16
100025e4:	1000c326 	beq	r2,zero,100028f4 <___svfprintf_internal_r+0x1774>
100025e8:	d9402e17 	ldw	r5,184(sp)
100025ec:	2d000017 	ldw	r20,0(r5)
100025f0:	29400104 	addi	r5,r5,4
100025f4:	d9402e15 	stw	r5,184(sp)
100025f8:	a02dd7fa 	srai	r22,r20,31
100025fc:	b005883a 	mov	r2,r22
10002600:	103c430e 	bge	r2,zero,10001710 <__alt_data_end+0xf8001710>
10002604:	d9402a17 	ldw	r5,168(sp)
10002608:	0529c83a 	sub	r20,zero,r20
1000260c:	07000b44 	movi	fp,45
10002610:	a004c03a 	cmpne	r2,r20,zero
10002614:	05adc83a 	sub	r22,zero,r22
10002618:	df002785 	stb	fp,158(sp)
1000261c:	b0adc83a 	sub	r22,r22,r2
10002620:	28022e16 	blt	r5,zero,10002edc <___svfprintf_internal_r+0x1d5c>
10002624:	00bfdfc4 	movi	r2,-129
10002628:	90a4703a 	and	r18,r18,r2
1000262c:	003c3f06 	br	1000172c <__alt_data_end+0xf800172c>
10002630:	9080100c 	andi	r2,r18,64
10002634:	d8002785 	stb	zero,158(sp)
10002638:	10012526 	beq	r2,zero,10002ad0 <___svfprintf_internal_r+0x1950>
1000263c:	d9402e17 	ldw	r5,184(sp)
10002640:	d8c02a17 	ldw	r3,168(sp)
10002644:	002d883a 	mov	r22,zero
10002648:	28800104 	addi	r2,r5,4
1000264c:	2d00000b 	ldhu	r20,0(r5)
10002650:	183fa20e 	bge	r3,zero,100024dc <__alt_data_end+0xf80024dc>
10002654:	d8802e15 	stw	r2,184(sp)
10002658:	0039883a 	mov	fp,zero
1000265c:	a584b03a 	or	r2,r20,r22
10002660:	103c321e 	bne	r2,zero,1000172c <__alt_data_end+0xf800172c>
10002664:	00800044 	movi	r2,1
10002668:	003e5006 	br	10001fac <__alt_data_end+0xf8001fac>
1000266c:	d9402d17 	ldw	r5,180(sp)
10002670:	d9801e04 	addi	r6,sp,120
10002674:	9809883a 	mov	r4,r19
10002678:	000ab200 	call	1000ab20 <__ssprint_r>
1000267c:	103ba71e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002680:	d8c02017 	ldw	r3,128(sp)
10002684:	da000404 	addi	r8,sp,16
10002688:	d9003217 	ldw	r4,200(sp)
1000268c:	d8802617 	ldw	r2,152(sp)
10002690:	d9403317 	ldw	r5,204(sp)
10002694:	8123883a 	add	r17,r16,r4
10002698:	11400216 	blt	r2,r5,100026a4 <___svfprintf_internal_r+0x1524>
1000269c:	9100004c 	andi	r4,r18,1
100026a0:	20000d26 	beq	r4,zero,100026d8 <___svfprintf_internal_r+0x1558>
100026a4:	d9003817 	ldw	r4,224(sp)
100026a8:	d9403417 	ldw	r5,208(sp)
100026ac:	1907883a 	add	r3,r3,r4
100026b0:	d9001f17 	ldw	r4,124(sp)
100026b4:	41400015 	stw	r5,0(r8)
100026b8:	d9403817 	ldw	r5,224(sp)
100026bc:	21000044 	addi	r4,r4,1
100026c0:	d8c02015 	stw	r3,128(sp)
100026c4:	41400115 	stw	r5,4(r8)
100026c8:	d9001f15 	stw	r4,124(sp)
100026cc:	014001c4 	movi	r5,7
100026d0:	2901dc16 	blt	r5,r4,10002e44 <___svfprintf_internal_r+0x1cc4>
100026d4:	42000204 	addi	r8,r8,8
100026d8:	d9003317 	ldw	r4,204(sp)
100026dc:	8121883a 	add	r16,r16,r4
100026e0:	2085c83a 	sub	r2,r4,r2
100026e4:	8461c83a 	sub	r16,r16,r17
100026e8:	1400010e 	bge	r2,r16,100026f0 <___svfprintf_internal_r+0x1570>
100026ec:	1021883a 	mov	r16,r2
100026f0:	04000a0e 	bge	zero,r16,1000271c <___svfprintf_internal_r+0x159c>
100026f4:	d9001f17 	ldw	r4,124(sp)
100026f8:	1c07883a 	add	r3,r3,r16
100026fc:	44400015 	stw	r17,0(r8)
10002700:	21000044 	addi	r4,r4,1
10002704:	44000115 	stw	r16,4(r8)
10002708:	d8c02015 	stw	r3,128(sp)
1000270c:	d9001f15 	stw	r4,124(sp)
10002710:	014001c4 	movi	r5,7
10002714:	2901e616 	blt	r5,r4,10002eb0 <___svfprintf_internal_r+0x1d30>
10002718:	42000204 	addi	r8,r8,8
1000271c:	8001f616 	blt	r16,zero,10002ef8 <___svfprintf_internal_r+0x1d78>
10002720:	1421c83a 	sub	r16,r2,r16
10002724:	043cfa0e 	bge	zero,r16,10001b10 <__alt_data_end+0xf8001b10>
10002728:	04400404 	movi	r17,16
1000272c:	d8801f17 	ldw	r2,124(sp)
10002730:	8c3edd0e 	bge	r17,r16,100022a8 <__alt_data_end+0xf80022a8>
10002734:	01440074 	movhi	r5,4097
10002738:	294fe584 	addi	r5,r5,16278
1000273c:	d9402c15 	stw	r5,176(sp)
10002740:	058001c4 	movi	r22,7
10002744:	dd002d17 	ldw	r20,180(sp)
10002748:	00000306 	br	10002758 <___svfprintf_internal_r+0x15d8>
1000274c:	42000204 	addi	r8,r8,8
10002750:	843ffc04 	addi	r16,r16,-16
10002754:	8c3ed70e 	bge	r17,r16,100022b4 <__alt_data_end+0xf80022b4>
10002758:	18c00404 	addi	r3,r3,16
1000275c:	10800044 	addi	r2,r2,1
10002760:	45400015 	stw	r21,0(r8)
10002764:	44400115 	stw	r17,4(r8)
10002768:	d8c02015 	stw	r3,128(sp)
1000276c:	d8801f15 	stw	r2,124(sp)
10002770:	b0bff60e 	bge	r22,r2,1000274c <__alt_data_end+0xf800274c>
10002774:	d9801e04 	addi	r6,sp,120
10002778:	a00b883a 	mov	r5,r20
1000277c:	9809883a 	mov	r4,r19
10002780:	000ab200 	call	1000ab20 <__ssprint_r>
10002784:	103b651e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002788:	d8c02017 	ldw	r3,128(sp)
1000278c:	d8801f17 	ldw	r2,124(sp)
10002790:	da000404 	addi	r8,sp,16
10002794:	003fee06 	br	10002750 <__alt_data_end+0xf8002750>
10002798:	9088703a 	and	r4,r18,r2
1000279c:	203e8d1e 	bne	r4,zero,100021d4 <__alt_data_end+0xf80021d4>
100027a0:	dc401f17 	ldw	r17,124(sp)
100027a4:	40800115 	stw	r2,4(r8)
100027a8:	44000015 	stw	r16,0(r8)
100027ac:	8c400044 	addi	r17,r17,1
100027b0:	d8c02015 	stw	r3,128(sp)
100027b4:	dc401f15 	stw	r17,124(sp)
100027b8:	008001c4 	movi	r2,7
100027bc:	147f7f16 	blt	r2,r17,100025bc <__alt_data_end+0xf80025bc>
100027c0:	45800204 	addi	r22,r8,8
100027c4:	003eac06 	br	10002278 <__alt_data_end+0xf8002278>
100027c8:	d9402d17 	ldw	r5,180(sp)
100027cc:	d9801e04 	addi	r6,sp,120
100027d0:	9809883a 	mov	r4,r19
100027d4:	000ab200 	call	1000ab20 <__ssprint_r>
100027d8:	103b501e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
100027dc:	d8c02017 	ldw	r3,128(sp)
100027e0:	dc401f17 	ldw	r17,124(sp)
100027e4:	da000404 	addi	r8,sp,16
100027e8:	003e8406 	br	100021fc <__alt_data_end+0xf80021fc>
100027ec:	d9402d17 	ldw	r5,180(sp)
100027f0:	d9801e04 	addi	r6,sp,120
100027f4:	9809883a 	mov	r4,r19
100027f8:	000ab200 	call	1000ab20 <__ssprint_r>
100027fc:	103b471e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002800:	d8c02017 	ldw	r3,128(sp)
10002804:	dc401f17 	ldw	r17,124(sp)
10002808:	dd800404 	addi	r22,sp,16
1000280c:	003e8606 	br	10002228 <__alt_data_end+0xf8002228>
10002810:	0029883a 	mov	r20,zero
10002814:	a5000c04 	addi	r20,r20,48
10002818:	dc001dc4 	addi	r16,sp,119
1000281c:	dd001dc5 	stb	r20,119(sp)
10002820:	003f3806 	br	10002504 <__alt_data_end+0xf8002504>
10002824:	d9402d17 	ldw	r5,180(sp)
10002828:	d9801e04 	addi	r6,sp,120
1000282c:	9809883a 	mov	r4,r19
10002830:	000ab200 	call	1000ab20 <__ssprint_r>
10002834:	103b391e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002838:	d8c02017 	ldw	r3,128(sp)
1000283c:	da000404 	addi	r8,sp,16
10002840:	003c7306 	br	10001a10 <__alt_data_end+0xf8001a10>
10002844:	d9003617 	ldw	r4,216(sp)
10002848:	d9403717 	ldw	r5,220(sp)
1000284c:	da003e15 	stw	r8,248(sp)
10002850:	000a8400 	call	1000a840 <__fpclassifyd>
10002854:	da003e17 	ldw	r8,248(sp)
10002858:	1000bd1e 	bne	r2,zero,10002b50 <___svfprintf_internal_r+0x19d0>
1000285c:	008011c4 	movi	r2,71
10002860:	14411e0e 	bge	r2,r17,10002cdc <___svfprintf_internal_r+0x1b5c>
10002864:	04040074 	movhi	r16,4097
10002868:	840fd804 	addi	r16,r16,16224
1000286c:	00c000c4 	movi	r3,3
10002870:	00bfdfc4 	movi	r2,-129
10002874:	d8c02915 	stw	r3,164(sp)
10002878:	90a4703a 	and	r18,r18,r2
1000287c:	df002783 	ldbu	fp,158(sp)
10002880:	d8c02b15 	stw	r3,172(sp)
10002884:	d8002a15 	stw	zero,168(sp)
10002888:	d8003215 	stw	zero,200(sp)
1000288c:	003bfa06 	br	10001878 <__alt_data_end+0xf8001878>
10002890:	9080100c 	andi	r2,r18,64
10002894:	d8002785 	stb	zero,158(sp)
10002898:	10009426 	beq	r2,zero,10002aec <___svfprintf_internal_r+0x196c>
1000289c:	d9402e17 	ldw	r5,184(sp)
100028a0:	d8c02a17 	ldw	r3,168(sp)
100028a4:	002d883a 	mov	r22,zero
100028a8:	28800104 	addi	r2,r5,4
100028ac:	2d00000b 	ldhu	r20,0(r5)
100028b0:	183ec10e 	bge	r3,zero,100023b8 <__alt_data_end+0xf80023b8>
100028b4:	a586b03a 	or	r3,r20,r22
100028b8:	d8802e15 	stw	r2,184(sp)
100028bc:	183ec21e 	bne	r3,zero,100023c8 <__alt_data_end+0xf80023c8>
100028c0:	0039883a 	mov	fp,zero
100028c4:	0005883a 	mov	r2,zero
100028c8:	003db806 	br	10001fac <__alt_data_end+0xf8001fac>
100028cc:	d8c02e17 	ldw	r3,184(sp)
100028d0:	d9002e17 	ldw	r4,184(sp)
100028d4:	d9402e17 	ldw	r5,184(sp)
100028d8:	18c00017 	ldw	r3,0(r3)
100028dc:	21000117 	ldw	r4,4(r4)
100028e0:	29400204 	addi	r5,r5,8
100028e4:	d8c03615 	stw	r3,216(sp)
100028e8:	d9003715 	stw	r4,220(sp)
100028ec:	d9402e15 	stw	r5,184(sp)
100028f0:	003b5a06 	br	1000165c <__alt_data_end+0xf800165c>
100028f4:	9080100c 	andi	r2,r18,64
100028f8:	10010726 	beq	r2,zero,10002d18 <___svfprintf_internal_r+0x1b98>
100028fc:	d8802e17 	ldw	r2,184(sp)
10002900:	1500000f 	ldh	r20,0(r2)
10002904:	10800104 	addi	r2,r2,4
10002908:	d8802e15 	stw	r2,184(sp)
1000290c:	a02dd7fa 	srai	r22,r20,31
10002910:	b005883a 	mov	r2,r22
10002914:	003b7d06 	br	1000170c <__alt_data_end+0xf800170c>
10002918:	9080100c 	andi	r2,r18,64
1000291c:	10010526 	beq	r2,zero,10002d34 <___svfprintf_internal_r+0x1bb4>
10002920:	d8c02e17 	ldw	r3,184(sp)
10002924:	002d883a 	mov	r22,zero
10002928:	1d00000b 	ldhu	r20,0(r3)
1000292c:	18c00104 	addi	r3,r3,4
10002930:	d8c02e15 	stw	r3,184(sp)
10002934:	003ce206 	br	10001cc0 <__alt_data_end+0xf8001cc0>
10002938:	bc400007 	ldb	r17,0(r23)
1000293c:	003a6506 	br	100012d4 <__alt_data_end+0xf80012d4>
10002940:	9080040c 	andi	r2,r18,16
10002944:	10010126 	beq	r2,zero,10002d4c <___svfprintf_internal_r+0x1bcc>
10002948:	d8c02e17 	ldw	r3,184(sp)
1000294c:	d9002f17 	ldw	r4,188(sp)
10002950:	18800017 	ldw	r2,0(r3)
10002954:	18c00104 	addi	r3,r3,4
10002958:	d8c02e15 	stw	r3,184(sp)
1000295c:	11000015 	stw	r4,0(r2)
10002960:	003a3206 	br	1000122c <__alt_data_end+0xf800122c>
10002964:	d9002a17 	ldw	r4,168(sp)
10002968:	d8002785 	stb	zero,158(sp)
1000296c:	203d8d16 	blt	r4,zero,10001fa4 <__alt_data_end+0xf8001fa4>
10002970:	00bfdfc4 	movi	r2,-129
10002974:	90a4703a 	and	r18,r18,r2
10002978:	003ad506 	br	100014d0 <__alt_data_end+0xf80014d0>
1000297c:	01440074 	movhi	r5,4097
10002980:	294fe584 	addi	r5,r5,16278
10002984:	d9402c15 	stw	r5,176(sp)
10002988:	d9402c17 	ldw	r5,176(sp)
1000298c:	1c47883a 	add	r3,r3,r17
10002990:	10800044 	addi	r2,r2,1
10002994:	41400015 	stw	r5,0(r8)
10002998:	44400115 	stw	r17,4(r8)
1000299c:	d8c02015 	stw	r3,128(sp)
100029a0:	d8801f15 	stw	r2,124(sp)
100029a4:	010001c4 	movi	r4,7
100029a8:	20bf3016 	blt	r4,r2,1000266c <__alt_data_end+0xf800266c>
100029ac:	42000204 	addi	r8,r8,8
100029b0:	003f3506 	br	10002688 <__alt_data_end+0xf8002688>
100029b4:	01040074 	movhi	r4,4097
100029b8:	210fe584 	addi	r4,r4,16278
100029bc:	d9002c15 	stw	r4,176(sp)
100029c0:	003c3c06 	br	10001ab4 <__alt_data_end+0xf8001ab4>
100029c4:	d9402d17 	ldw	r5,180(sp)
100029c8:	d9801e04 	addi	r6,sp,120
100029cc:	9809883a 	mov	r4,r19
100029d0:	000ab200 	call	1000ab20 <__ssprint_r>
100029d4:	103ad11e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
100029d8:	d8c02017 	ldw	r3,128(sp)
100029dc:	da000404 	addi	r8,sp,16
100029e0:	003d9306 	br	10002030 <__alt_data_end+0xf8002030>
100029e4:	d8801f17 	ldw	r2,124(sp)
100029e8:	01440074 	movhi	r5,4097
100029ec:	01000044 	movi	r4,1
100029f0:	18c00044 	addi	r3,r3,1
100029f4:	10800044 	addi	r2,r2,1
100029f8:	294fe504 	addi	r5,r5,16276
100029fc:	41000115 	stw	r4,4(r8)
10002a00:	41400015 	stw	r5,0(r8)
10002a04:	d8c02015 	stw	r3,128(sp)
10002a08:	d8801f15 	stw	r2,124(sp)
10002a0c:	010001c4 	movi	r4,7
10002a10:	2080b516 	blt	r4,r2,10002ce8 <___svfprintf_internal_r+0x1b68>
10002a14:	42000204 	addi	r8,r8,8
10002a18:	8800041e 	bne	r17,zero,10002a2c <___svfprintf_internal_r+0x18ac>
10002a1c:	d8803317 	ldw	r2,204(sp)
10002a20:	1000021e 	bne	r2,zero,10002a2c <___svfprintf_internal_r+0x18ac>
10002a24:	9080004c 	andi	r2,r18,1
10002a28:	103c3926 	beq	r2,zero,10001b10 <__alt_data_end+0xf8001b10>
10002a2c:	d9003817 	ldw	r4,224(sp)
10002a30:	d8801f17 	ldw	r2,124(sp)
10002a34:	d9403417 	ldw	r5,208(sp)
10002a38:	20c7883a 	add	r3,r4,r3
10002a3c:	10800044 	addi	r2,r2,1
10002a40:	41000115 	stw	r4,4(r8)
10002a44:	41400015 	stw	r5,0(r8)
10002a48:	d8c02015 	stw	r3,128(sp)
10002a4c:	d8801f15 	stw	r2,124(sp)
10002a50:	010001c4 	movi	r4,7
10002a54:	20818016 	blt	r4,r2,10003058 <___svfprintf_internal_r+0x1ed8>
10002a58:	42000204 	addi	r8,r8,8
10002a5c:	0463c83a 	sub	r17,zero,r17
10002a60:	0440cb0e 	bge	zero,r17,10002d90 <___svfprintf_internal_r+0x1c10>
10002a64:	05800404 	movi	r22,16
10002a68:	b440e80e 	bge	r22,r17,10002e0c <___svfprintf_internal_r+0x1c8c>
10002a6c:	01440074 	movhi	r5,4097
10002a70:	294fe584 	addi	r5,r5,16278
10002a74:	d9402c15 	stw	r5,176(sp)
10002a78:	070001c4 	movi	fp,7
10002a7c:	dd002d17 	ldw	r20,180(sp)
10002a80:	00000306 	br	10002a90 <___svfprintf_internal_r+0x1910>
10002a84:	42000204 	addi	r8,r8,8
10002a88:	8c7ffc04 	addi	r17,r17,-16
10002a8c:	b440e20e 	bge	r22,r17,10002e18 <___svfprintf_internal_r+0x1c98>
10002a90:	18c00404 	addi	r3,r3,16
10002a94:	10800044 	addi	r2,r2,1
10002a98:	45400015 	stw	r21,0(r8)
10002a9c:	45800115 	stw	r22,4(r8)
10002aa0:	d8c02015 	stw	r3,128(sp)
10002aa4:	d8801f15 	stw	r2,124(sp)
10002aa8:	e0bff60e 	bge	fp,r2,10002a84 <__alt_data_end+0xf8002a84>
10002aac:	d9801e04 	addi	r6,sp,120
10002ab0:	a00b883a 	mov	r5,r20
10002ab4:	9809883a 	mov	r4,r19
10002ab8:	000ab200 	call	1000ab20 <__ssprint_r>
10002abc:	103a971e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002ac0:	d8c02017 	ldw	r3,128(sp)
10002ac4:	d8801f17 	ldw	r2,124(sp)
10002ac8:	da000404 	addi	r8,sp,16
10002acc:	003fee06 	br	10002a88 <__alt_data_end+0xf8002a88>
10002ad0:	d9002e17 	ldw	r4,184(sp)
10002ad4:	d9402a17 	ldw	r5,168(sp)
10002ad8:	002d883a 	mov	r22,zero
10002adc:	20800104 	addi	r2,r4,4
10002ae0:	25000017 	ldw	r20,0(r4)
10002ae4:	283e7d0e 	bge	r5,zero,100024dc <__alt_data_end+0xf80024dc>
10002ae8:	003eda06 	br	10002654 <__alt_data_end+0xf8002654>
10002aec:	d9002e17 	ldw	r4,184(sp)
10002af0:	d9402a17 	ldw	r5,168(sp)
10002af4:	002d883a 	mov	r22,zero
10002af8:	20800104 	addi	r2,r4,4
10002afc:	25000017 	ldw	r20,0(r4)
10002b00:	283e2d0e 	bge	r5,zero,100023b8 <__alt_data_end+0xf80023b8>
10002b04:	003f6b06 	br	100028b4 <__alt_data_end+0xf80028b4>
10002b08:	d8c02e15 	stw	r3,184(sp)
10002b0c:	0039883a 	mov	fp,zero
10002b10:	003ed206 	br	1000265c <__alt_data_end+0xf800265c>
10002b14:	bc400043 	ldbu	r17,1(r23)
10002b18:	84000814 	ori	r16,r16,32
10002b1c:	bdc00044 	addi	r23,r23,1
10002b20:	8c403fcc 	andi	r17,r17,255
10002b24:	8c40201c 	xori	r17,r17,128
10002b28:	8c7fe004 	addi	r17,r17,-128
10002b2c:	0039e906 	br	100012d4 <__alt_data_end+0xf80012d4>
10002b30:	d9402d17 	ldw	r5,180(sp)
10002b34:	d9801e04 	addi	r6,sp,120
10002b38:	9809883a 	mov	r4,r19
10002b3c:	000ab200 	call	1000ab20 <__ssprint_r>
10002b40:	103a761e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002b44:	d8c02017 	ldw	r3,128(sp)
10002b48:	da000404 	addi	r8,sp,16
10002b4c:	003d4a06 	br	10002078 <__alt_data_end+0xf8002078>
10002b50:	d9002a17 	ldw	r4,168(sp)
10002b54:	05bff7c4 	movi	r22,-33
10002b58:	00bfffc4 	movi	r2,-1
10002b5c:	8dac703a 	and	r22,r17,r22
10002b60:	20806a26 	beq	r4,r2,10002d0c <___svfprintf_internal_r+0x1b8c>
10002b64:	008011c4 	movi	r2,71
10002b68:	b0813726 	beq	r22,r2,10003048 <___svfprintf_internal_r+0x1ec8>
10002b6c:	d9003717 	ldw	r4,220(sp)
10002b70:	90c04014 	ori	r3,r18,256
10002b74:	d8c02c15 	stw	r3,176(sp)
10002b78:	20015d16 	blt	r4,zero,100030f0 <___svfprintf_internal_r+0x1f70>
10002b7c:	dd003717 	ldw	r20,220(sp)
10002b80:	d8002905 	stb	zero,164(sp)
10002b84:	00801984 	movi	r2,102
10002b88:	88814026 	beq	r17,r2,1000308c <___svfprintf_internal_r+0x1f0c>
10002b8c:	00801184 	movi	r2,70
10002b90:	88817126 	beq	r17,r2,10003158 <___svfprintf_internal_r+0x1fd8>
10002b94:	00801144 	movi	r2,69
10002b98:	b0816226 	beq	r22,r2,10003124 <___svfprintf_internal_r+0x1fa4>
10002b9c:	d8c02a17 	ldw	r3,168(sp)
10002ba0:	d8802104 	addi	r2,sp,132
10002ba4:	d8800315 	stw	r2,12(sp)
10002ba8:	d9403617 	ldw	r5,216(sp)
10002bac:	d8802504 	addi	r2,sp,148
10002bb0:	d8800215 	stw	r2,8(sp)
10002bb4:	d8802604 	addi	r2,sp,152
10002bb8:	d8c00015 	stw	r3,0(sp)
10002bbc:	d8800115 	stw	r2,4(sp)
10002bc0:	01c00084 	movi	r7,2
10002bc4:	a00d883a 	mov	r6,r20
10002bc8:	9809883a 	mov	r4,r19
10002bcc:	d8c03d15 	stw	r3,244(sp)
10002bd0:	da003e15 	stw	r8,248(sp)
10002bd4:	0005b6c0 	call	10005b6c <_dtoa_r>
10002bd8:	1021883a 	mov	r16,r2
10002bdc:	008019c4 	movi	r2,103
10002be0:	d8c03d17 	ldw	r3,244(sp)
10002be4:	da003e17 	ldw	r8,248(sp)
10002be8:	8880e726 	beq	r17,r2,10002f88 <___svfprintf_internal_r+0x1e08>
10002bec:	008011c4 	movi	r2,71
10002bf0:	8880d426 	beq	r17,r2,10002f44 <___svfprintf_internal_r+0x1dc4>
10002bf4:	80f9883a 	add	fp,r16,r3
10002bf8:	d9003617 	ldw	r4,216(sp)
10002bfc:	000d883a 	mov	r6,zero
10002c00:	000f883a 	mov	r7,zero
10002c04:	a00b883a 	mov	r5,r20
10002c08:	da003e15 	stw	r8,248(sp)
10002c0c:	001001c0 	call	1001001c <__eqdf2>
10002c10:	da003e17 	ldw	r8,248(sp)
10002c14:	1000e426 	beq	r2,zero,10002fa8 <___svfprintf_internal_r+0x1e28>
10002c18:	d8802117 	ldw	r2,132(sp)
10002c1c:	1700062e 	bgeu	r2,fp,10002c38 <___svfprintf_internal_r+0x1ab8>
10002c20:	01000c04 	movi	r4,48
10002c24:	10c00044 	addi	r3,r2,1
10002c28:	d8c02115 	stw	r3,132(sp)
10002c2c:	11000005 	stb	r4,0(r2)
10002c30:	d8802117 	ldw	r2,132(sp)
10002c34:	173ffb36 	bltu	r2,fp,10002c24 <__alt_data_end+0xf8002c24>
10002c38:	1405c83a 	sub	r2,r2,r16
10002c3c:	d8803315 	stw	r2,204(sp)
10002c40:	008011c4 	movi	r2,71
10002c44:	b080c526 	beq	r22,r2,10002f5c <___svfprintf_internal_r+0x1ddc>
10002c48:	00801944 	movi	r2,101
10002c4c:	1441d80e 	bge	r2,r17,100033b0 <___svfprintf_internal_r+0x2230>
10002c50:	d8c02617 	ldw	r3,152(sp)
10002c54:	00801984 	movi	r2,102
10002c58:	d8c03215 	stw	r3,200(sp)
10002c5c:	88813426 	beq	r17,r2,10003130 <___svfprintf_internal_r+0x1fb0>
10002c60:	d8c03217 	ldw	r3,200(sp)
10002c64:	d9003317 	ldw	r4,204(sp)
10002c68:	19012516 	blt	r3,r4,10003100 <___svfprintf_internal_r+0x1f80>
10002c6c:	9480004c 	andi	r18,r18,1
10002c70:	9001841e 	bne	r18,zero,10003284 <___svfprintf_internal_r+0x2104>
10002c74:	1805883a 	mov	r2,r3
10002c78:	1801cb16 	blt	r3,zero,100033a8 <___svfprintf_internal_r+0x2228>
10002c7c:	d8c03217 	ldw	r3,200(sp)
10002c80:	044019c4 	movi	r17,103
10002c84:	d8c02b15 	stw	r3,172(sp)
10002c88:	df002907 	ldb	fp,164(sp)
10002c8c:	e000a61e 	bne	fp,zero,10002f28 <___svfprintf_internal_r+0x1da8>
10002c90:	df002783 	ldbu	fp,158(sp)
10002c94:	d8802915 	stw	r2,164(sp)
10002c98:	dc802c17 	ldw	r18,176(sp)
10002c9c:	d8002a15 	stw	zero,168(sp)
10002ca0:	003af506 	br	10001878 <__alt_data_end+0xf8001878>
10002ca4:	04040074 	movhi	r16,4097
10002ca8:	840fd504 	addi	r16,r16,16212
10002cac:	003a7e06 	br	100016a8 <__alt_data_end+0xf80016a8>
10002cb0:	d9003917 	ldw	r4,228(sp)
10002cb4:	04001004 	movi	r16,64
10002cb8:	800b883a 	mov	r5,r16
10002cbc:	00085680 	call	10008568 <_malloc_r>
10002cc0:	d9002d17 	ldw	r4,180(sp)
10002cc4:	20800015 	stw	r2,0(r4)
10002cc8:	20800415 	stw	r2,16(r4)
10002ccc:	1001d026 	beq	r2,zero,10003410 <___svfprintf_internal_r+0x2290>
10002cd0:	d8802d17 	ldw	r2,180(sp)
10002cd4:	14000515 	stw	r16,20(r2)
10002cd8:	00394406 	br	100011ec <__alt_data_end+0xf80011ec>
10002cdc:	04040074 	movhi	r16,4097
10002ce0:	840fd704 	addi	r16,r16,16220
10002ce4:	003ee106 	br	1000286c <__alt_data_end+0xf800286c>
10002ce8:	d9402d17 	ldw	r5,180(sp)
10002cec:	d9801e04 	addi	r6,sp,120
10002cf0:	9809883a 	mov	r4,r19
10002cf4:	000ab200 	call	1000ab20 <__ssprint_r>
10002cf8:	103a081e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002cfc:	dc402617 	ldw	r17,152(sp)
10002d00:	d8c02017 	ldw	r3,128(sp)
10002d04:	da000404 	addi	r8,sp,16
10002d08:	003f4306 	br	10002a18 <__alt_data_end+0xf8002a18>
10002d0c:	01400184 	movi	r5,6
10002d10:	d9402a15 	stw	r5,168(sp)
10002d14:	003f9506 	br	10002b6c <__alt_data_end+0xf8002b6c>
10002d18:	d8c02e17 	ldw	r3,184(sp)
10002d1c:	1d000017 	ldw	r20,0(r3)
10002d20:	18c00104 	addi	r3,r3,4
10002d24:	d8c02e15 	stw	r3,184(sp)
10002d28:	a02dd7fa 	srai	r22,r20,31
10002d2c:	b005883a 	mov	r2,r22
10002d30:	003a7606 	br	1000170c <__alt_data_end+0xf800170c>
10002d34:	d9002e17 	ldw	r4,184(sp)
10002d38:	002d883a 	mov	r22,zero
10002d3c:	25000017 	ldw	r20,0(r4)
10002d40:	21000104 	addi	r4,r4,4
10002d44:	d9002e15 	stw	r4,184(sp)
10002d48:	003bdd06 	br	10001cc0 <__alt_data_end+0xf8001cc0>
10002d4c:	9480100c 	andi	r18,r18,64
10002d50:	90006e26 	beq	r18,zero,10002f0c <___svfprintf_internal_r+0x1d8c>
10002d54:	d9402e17 	ldw	r5,184(sp)
10002d58:	d8c02f17 	ldw	r3,188(sp)
10002d5c:	28800017 	ldw	r2,0(r5)
10002d60:	29400104 	addi	r5,r5,4
10002d64:	d9402e15 	stw	r5,184(sp)
10002d68:	10c0000d 	sth	r3,0(r2)
10002d6c:	00392f06 	br	1000122c <__alt_data_end+0xf800122c>
10002d70:	d9402d17 	ldw	r5,180(sp)
10002d74:	d9801e04 	addi	r6,sp,120
10002d78:	9809883a 	mov	r4,r19
10002d7c:	000ab200 	call	1000ab20 <__ssprint_r>
10002d80:	1039e61e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002d84:	d8c02017 	ldw	r3,128(sp)
10002d88:	d8801f17 	ldw	r2,124(sp)
10002d8c:	da000404 	addi	r8,sp,16
10002d90:	d9403317 	ldw	r5,204(sp)
10002d94:	10800044 	addi	r2,r2,1
10002d98:	44000015 	stw	r16,0(r8)
10002d9c:	28c7883a 	add	r3,r5,r3
10002da0:	003b5506 	br	10001af8 <__alt_data_end+0xf8001af8>
10002da4:	8009883a 	mov	r4,r16
10002da8:	df003e15 	stw	fp,248(sp)
10002dac:	00010e80 	call	100010e8 <strlen>
10002db0:	d8802b15 	stw	r2,172(sp)
10002db4:	da003e17 	ldw	r8,248(sp)
10002db8:	103c160e 	bge	r2,zero,10001e14 <__alt_data_end+0xf8001e14>
10002dbc:	0005883a 	mov	r2,zero
10002dc0:	003c1406 	br	10001e14 <__alt_data_end+0xf8001e14>
10002dc4:	00bfffc4 	movi	r2,-1
10002dc8:	0039d906 	br	10001530 <__alt_data_end+0xf8001530>
10002dcc:	01040074 	movhi	r4,4097
10002dd0:	210fe984 	addi	r4,r4,16294
10002dd4:	d9003515 	stw	r4,212(sp)
10002dd8:	003ae406 	br	1000196c <__alt_data_end+0xf800196c>
10002ddc:	013fffc4 	movi	r4,-1
10002de0:	0039fa06 	br	100015cc <__alt_data_end+0xf80015cc>
10002de4:	d9402d17 	ldw	r5,180(sp)
10002de8:	d9801e04 	addi	r6,sp,120
10002dec:	9809883a 	mov	r4,r19
10002df0:	000ab200 	call	1000ab20 <__ssprint_r>
10002df4:	1039c91e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002df8:	d8c02017 	ldw	r3,128(sp)
10002dfc:	da000404 	addi	r8,sp,16
10002e00:	003d8406 	br	10002414 <__alt_data_end+0xf8002414>
10002e04:	0023883a 	mov	r17,zero
10002e08:	003d8306 	br	10002418 <__alt_data_end+0xf8002418>
10002e0c:	01040074 	movhi	r4,4097
10002e10:	210fe584 	addi	r4,r4,16278
10002e14:	d9002c15 	stw	r4,176(sp)
10002e18:	d9002c17 	ldw	r4,176(sp)
10002e1c:	1c47883a 	add	r3,r3,r17
10002e20:	10800044 	addi	r2,r2,1
10002e24:	41000015 	stw	r4,0(r8)
10002e28:	44400115 	stw	r17,4(r8)
10002e2c:	d8c02015 	stw	r3,128(sp)
10002e30:	d8801f15 	stw	r2,124(sp)
10002e34:	010001c4 	movi	r4,7
10002e38:	20bfcd16 	blt	r4,r2,10002d70 <__alt_data_end+0xf8002d70>
10002e3c:	42000204 	addi	r8,r8,8
10002e40:	003fd306 	br	10002d90 <__alt_data_end+0xf8002d90>
10002e44:	d9402d17 	ldw	r5,180(sp)
10002e48:	d9801e04 	addi	r6,sp,120
10002e4c:	9809883a 	mov	r4,r19
10002e50:	000ab200 	call	1000ab20 <__ssprint_r>
10002e54:	1039b11e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002e58:	d8802617 	ldw	r2,152(sp)
10002e5c:	d8c02017 	ldw	r3,128(sp)
10002e60:	da000404 	addi	r8,sp,16
10002e64:	003e1c06 	br	100026d8 <__alt_data_end+0xf80026d8>
10002e68:	d8802a17 	ldw	r2,168(sp)
10002e6c:	00c00184 	movi	r3,6
10002e70:	1880012e 	bgeu	r3,r2,10002e78 <___svfprintf_internal_r+0x1cf8>
10002e74:	1805883a 	mov	r2,r3
10002e78:	d8802b15 	stw	r2,172(sp)
10002e7c:	1000f316 	blt	r2,zero,1000324c <___svfprintf_internal_r+0x20cc>
10002e80:	04040074 	movhi	r16,4097
10002e84:	d8802915 	stw	r2,164(sp)
10002e88:	dd002e15 	stw	r20,184(sp)
10002e8c:	d8002a15 	stw	zero,168(sp)
10002e90:	d8003215 	stw	zero,200(sp)
10002e94:	840fe304 	addi	r16,r16,16268
10002e98:	0039883a 	mov	fp,zero
10002e9c:	003a7d06 	br	10001894 <__alt_data_end+0xf8001894>
10002ea0:	01040074 	movhi	r4,4097
10002ea4:	210fe984 	addi	r4,r4,16294
10002ea8:	d9003515 	stw	r4,212(sp)
10002eac:	003b3d06 	br	10001ba4 <__alt_data_end+0xf8001ba4>
10002eb0:	d9402d17 	ldw	r5,180(sp)
10002eb4:	d9801e04 	addi	r6,sp,120
10002eb8:	9809883a 	mov	r4,r19
10002ebc:	000ab200 	call	1000ab20 <__ssprint_r>
10002ec0:	1039961e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
10002ec4:	d8802617 	ldw	r2,152(sp)
10002ec8:	d9403317 	ldw	r5,204(sp)
10002ecc:	d8c02017 	ldw	r3,128(sp)
10002ed0:	da000404 	addi	r8,sp,16
10002ed4:	2885c83a 	sub	r2,r5,r2
10002ed8:	003e1006 	br	1000271c <__alt_data_end+0xf800271c>
10002edc:	00800044 	movi	r2,1
10002ee0:	10803fcc 	andi	r2,r2,255
10002ee4:	00c00044 	movi	r3,1
10002ee8:	10fa1026 	beq	r2,r3,1000172c <__alt_data_end+0xf800172c>
10002eec:	00c00084 	movi	r3,2
10002ef0:	10fb8226 	beq	r2,r3,10001cfc <__alt_data_end+0xf8001cfc>
10002ef4:	003a4206 	br	10001800 <__alt_data_end+0xf8001800>
10002ef8:	0021883a 	mov	r16,zero
10002efc:	003e0806 	br	10002720 <__alt_data_end+0xf8002720>
10002f00:	07000b44 	movi	fp,45
10002f04:	df002785 	stb	fp,158(sp)
10002f08:	0039e306 	br	10001698 <__alt_data_end+0xf8001698>
10002f0c:	d9002e17 	ldw	r4,184(sp)
10002f10:	d9402f17 	ldw	r5,188(sp)
10002f14:	20800017 	ldw	r2,0(r4)
10002f18:	21000104 	addi	r4,r4,4
10002f1c:	d9002e15 	stw	r4,184(sp)
10002f20:	11400015 	stw	r5,0(r2)
10002f24:	0038c106 	br	1000122c <__alt_data_end+0xf800122c>
10002f28:	00c00b44 	movi	r3,45
10002f2c:	d8c02785 	stb	r3,158(sp)
10002f30:	d8802915 	stw	r2,164(sp)
10002f34:	dc802c17 	ldw	r18,176(sp)
10002f38:	d8002a15 	stw	zero,168(sp)
10002f3c:	07000b44 	movi	fp,45
10002f40:	003a5106 	br	10001888 <__alt_data_end+0xf8001888>
10002f44:	9080004c 	andi	r2,r18,1
10002f48:	1000941e 	bne	r2,zero,1000319c <___svfprintf_internal_r+0x201c>
10002f4c:	d8802117 	ldw	r2,132(sp)
10002f50:	1405c83a 	sub	r2,r2,r16
10002f54:	d8803315 	stw	r2,204(sp)
10002f58:	b441151e 	bne	r22,r17,100033b0 <___svfprintf_internal_r+0x2230>
10002f5c:	dd802617 	ldw	r22,152(sp)
10002f60:	00bfff44 	movi	r2,-3
10002f64:	b0801a16 	blt	r22,r2,10002fd0 <___svfprintf_internal_r+0x1e50>
10002f68:	d9402a17 	ldw	r5,168(sp)
10002f6c:	2d801816 	blt	r5,r22,10002fd0 <___svfprintf_internal_r+0x1e50>
10002f70:	dd803215 	stw	r22,200(sp)
10002f74:	003f3a06 	br	10002c60 <__alt_data_end+0xf8002c60>
10002f78:	1025883a 	mov	r18,r2
10002f7c:	0039883a 	mov	fp,zero
10002f80:	00800084 	movi	r2,2
10002f84:	003fd606 	br	10002ee0 <__alt_data_end+0xf8002ee0>
10002f88:	9080004c 	andi	r2,r18,1
10002f8c:	103f191e 	bne	r2,zero,10002bf4 <__alt_data_end+0xf8002bf4>
10002f90:	d8802117 	ldw	r2,132(sp)
10002f94:	003f2806 	br	10002c38 <__alt_data_end+0xf8002c38>
10002f98:	01040074 	movhi	r4,4097
10002f9c:	210fe584 	addi	r4,r4,16278
10002fa0:	d9002c15 	stw	r4,176(sp)
10002fa4:	003c7c06 	br	10002198 <__alt_data_end+0xf8002198>
10002fa8:	e005883a 	mov	r2,fp
10002fac:	003f2206 	br	10002c38 <__alt_data_end+0xf8002c38>
10002fb0:	d9002a17 	ldw	r4,168(sp)
10002fb4:	df002783 	ldbu	fp,158(sp)
10002fb8:	dd002e15 	stw	r20,184(sp)
10002fbc:	d9002915 	stw	r4,164(sp)
10002fc0:	d9002b15 	stw	r4,172(sp)
10002fc4:	d8002a15 	stw	zero,168(sp)
10002fc8:	d8003215 	stw	zero,200(sp)
10002fcc:	003a2a06 	br	10001878 <__alt_data_end+0xf8001878>
10002fd0:	8c7fff84 	addi	r17,r17,-2
10002fd4:	b5bfffc4 	addi	r22,r22,-1
10002fd8:	dd802615 	stw	r22,152(sp)
10002fdc:	dc4022c5 	stb	r17,139(sp)
10002fe0:	b000c316 	blt	r22,zero,100032f0 <___svfprintf_internal_r+0x2170>
10002fe4:	00800ac4 	movi	r2,43
10002fe8:	d8802305 	stb	r2,140(sp)
10002fec:	00800244 	movi	r2,9
10002ff0:	15806e16 	blt	r2,r22,100031ac <___svfprintf_internal_r+0x202c>
10002ff4:	00800c04 	movi	r2,48
10002ff8:	b5800c04 	addi	r22,r22,48
10002ffc:	d8802345 	stb	r2,141(sp)
10003000:	dd802385 	stb	r22,142(sp)
10003004:	d88023c4 	addi	r2,sp,143
10003008:	df0022c4 	addi	fp,sp,139
1000300c:	d8c03317 	ldw	r3,204(sp)
10003010:	1739c83a 	sub	fp,r2,fp
10003014:	d9003317 	ldw	r4,204(sp)
10003018:	e0c7883a 	add	r3,fp,r3
1000301c:	df003b15 	stw	fp,236(sp)
10003020:	d8c02b15 	stw	r3,172(sp)
10003024:	00800044 	movi	r2,1
10003028:	1100b70e 	bge	r2,r4,10003308 <___svfprintf_internal_r+0x2188>
1000302c:	d8c02b17 	ldw	r3,172(sp)
10003030:	18c00044 	addi	r3,r3,1
10003034:	d8c02b15 	stw	r3,172(sp)
10003038:	1805883a 	mov	r2,r3
1000303c:	1800b016 	blt	r3,zero,10003300 <___svfprintf_internal_r+0x2180>
10003040:	d8003215 	stw	zero,200(sp)
10003044:	003f1006 	br	10002c88 <__alt_data_end+0xf8002c88>
10003048:	d8802a17 	ldw	r2,168(sp)
1000304c:	103ec71e 	bne	r2,zero,10002b6c <__alt_data_end+0xf8002b6c>
10003050:	dc002a15 	stw	r16,168(sp)
10003054:	003ec506 	br	10002b6c <__alt_data_end+0xf8002b6c>
10003058:	d9402d17 	ldw	r5,180(sp)
1000305c:	d9801e04 	addi	r6,sp,120
10003060:	9809883a 	mov	r4,r19
10003064:	000ab200 	call	1000ab20 <__ssprint_r>
10003068:	10392c1e 	bne	r2,zero,1000151c <__alt_data_end+0xf800151c>
1000306c:	dc402617 	ldw	r17,152(sp)
10003070:	d8c02017 	ldw	r3,128(sp)
10003074:	d8801f17 	ldw	r2,124(sp)
10003078:	da000404 	addi	r8,sp,16
1000307c:	003e7706 	br	10002a5c <__alt_data_end+0xf8002a5c>
10003080:	182f883a 	mov	r23,r3
10003084:	d8002a15 	stw	zero,168(sp)
10003088:	00389306 	br	100012d8 <__alt_data_end+0xf80012d8>
1000308c:	d8c02a17 	ldw	r3,168(sp)
10003090:	d8802104 	addi	r2,sp,132
10003094:	d8800315 	stw	r2,12(sp)
10003098:	d9403617 	ldw	r5,216(sp)
1000309c:	d8802504 	addi	r2,sp,148
100030a0:	d8800215 	stw	r2,8(sp)
100030a4:	d8802604 	addi	r2,sp,152
100030a8:	d8c00015 	stw	r3,0(sp)
100030ac:	9809883a 	mov	r4,r19
100030b0:	d8800115 	stw	r2,4(sp)
100030b4:	01c000c4 	movi	r7,3
100030b8:	a00d883a 	mov	r6,r20
100030bc:	da003e15 	stw	r8,248(sp)
100030c0:	0005b6c0 	call	10005b6c <_dtoa_r>
100030c4:	d9002a17 	ldw	r4,168(sp)
100030c8:	da003e17 	ldw	r8,248(sp)
100030cc:	1021883a 	mov	r16,r2
100030d0:	1139883a 	add	fp,r2,r4
100030d4:	2007883a 	mov	r3,r4
100030d8:	81000007 	ldb	r4,0(r16)
100030dc:	00800c04 	movi	r2,48
100030e0:	20806f26 	beq	r4,r2,100032a0 <___svfprintf_internal_r+0x2120>
100030e4:	d8c02617 	ldw	r3,152(sp)
100030e8:	e0f9883a 	add	fp,fp,r3
100030ec:	003ec206 	br	10002bf8 <__alt_data_end+0xf8002bf8>
100030f0:	00c00b44 	movi	r3,45
100030f4:	2520003c 	xorhi	r20,r4,32768
100030f8:	d8c02905 	stb	r3,164(sp)
100030fc:	003ea106 	br	10002b84 <__alt_data_end+0xf8002b84>
10003100:	d8c03217 	ldw	r3,200(sp)
10003104:	00c0890e 	bge	zero,r3,1000332c <___svfprintf_internal_r+0x21ac>
10003108:	00800044 	movi	r2,1
1000310c:	d9003317 	ldw	r4,204(sp)
10003110:	1105883a 	add	r2,r2,r4
10003114:	d8802b15 	stw	r2,172(sp)
10003118:	10005f16 	blt	r2,zero,10003298 <___svfprintf_internal_r+0x2118>
1000311c:	044019c4 	movi	r17,103
10003120:	003ed906 	br	10002c88 <__alt_data_end+0xf8002c88>
10003124:	d9002a17 	ldw	r4,168(sp)
10003128:	20c00044 	addi	r3,r4,1
1000312c:	003e9c06 	br	10002ba0 <__alt_data_end+0xf8002ba0>
10003130:	d9002a17 	ldw	r4,168(sp)
10003134:	00c0680e 	bge	zero,r3,100032d8 <___svfprintf_internal_r+0x2158>
10003138:	2000461e 	bne	r4,zero,10003254 <___svfprintf_internal_r+0x20d4>
1000313c:	9480004c 	andi	r18,r18,1
10003140:	9000441e 	bne	r18,zero,10003254 <___svfprintf_internal_r+0x20d4>
10003144:	1805883a 	mov	r2,r3
10003148:	1800a116 	blt	r3,zero,100033d0 <___svfprintf_internal_r+0x2250>
1000314c:	d8c03217 	ldw	r3,200(sp)
10003150:	d8c02b15 	stw	r3,172(sp)
10003154:	003ecc06 	br	10002c88 <__alt_data_end+0xf8002c88>
10003158:	d9402a17 	ldw	r5,168(sp)
1000315c:	d8802104 	addi	r2,sp,132
10003160:	d8800315 	stw	r2,12(sp)
10003164:	d9400015 	stw	r5,0(sp)
10003168:	d8802504 	addi	r2,sp,148
1000316c:	d9403617 	ldw	r5,216(sp)
10003170:	d8800215 	stw	r2,8(sp)
10003174:	d8802604 	addi	r2,sp,152
10003178:	d8800115 	stw	r2,4(sp)
1000317c:	01c000c4 	movi	r7,3
10003180:	a00d883a 	mov	r6,r20
10003184:	9809883a 	mov	r4,r19
10003188:	da003e15 	stw	r8,248(sp)
1000318c:	0005b6c0 	call	10005b6c <_dtoa_r>
10003190:	d8c02a17 	ldw	r3,168(sp)
10003194:	da003e17 	ldw	r8,248(sp)
10003198:	1021883a 	mov	r16,r2
1000319c:	00801184 	movi	r2,70
100031a0:	80f9883a 	add	fp,r16,r3
100031a4:	88bfcc26 	beq	r17,r2,100030d8 <__alt_data_end+0xf80030d8>
100031a8:	003e9306 	br	10002bf8 <__alt_data_end+0xf8002bf8>
100031ac:	df0022c4 	addi	fp,sp,139
100031b0:	dc002a15 	stw	r16,168(sp)
100031b4:	9829883a 	mov	r20,r19
100031b8:	e021883a 	mov	r16,fp
100031bc:	4027883a 	mov	r19,r8
100031c0:	b009883a 	mov	r4,r22
100031c4:	01400284 	movi	r5,10
100031c8:	0000d100 	call	10000d10 <__modsi3>
100031cc:	10800c04 	addi	r2,r2,48
100031d0:	843fffc4 	addi	r16,r16,-1
100031d4:	b009883a 	mov	r4,r22
100031d8:	01400284 	movi	r5,10
100031dc:	80800005 	stb	r2,0(r16)
100031e0:	0000c8c0 	call	10000c8c <__divsi3>
100031e4:	102d883a 	mov	r22,r2
100031e8:	00800244 	movi	r2,9
100031ec:	15bff416 	blt	r2,r22,100031c0 <__alt_data_end+0xf80031c0>
100031f0:	9811883a 	mov	r8,r19
100031f4:	b0800c04 	addi	r2,r22,48
100031f8:	a027883a 	mov	r19,r20
100031fc:	8029883a 	mov	r20,r16
10003200:	a17fffc4 	addi	r5,r20,-1
10003204:	a0bfffc5 	stb	r2,-1(r20)
10003208:	dc002a17 	ldw	r16,168(sp)
1000320c:	2f00782e 	bgeu	r5,fp,100033f0 <___svfprintf_internal_r+0x2270>
10003210:	d9c02384 	addi	r7,sp,142
10003214:	3d0fc83a 	sub	r7,r7,r20
10003218:	d9002344 	addi	r4,sp,141
1000321c:	e1cf883a 	add	r7,fp,r7
10003220:	00000106 	br	10003228 <___svfprintf_internal_r+0x20a8>
10003224:	28800003 	ldbu	r2,0(r5)
10003228:	20800005 	stb	r2,0(r4)
1000322c:	21000044 	addi	r4,r4,1
10003230:	29400044 	addi	r5,r5,1
10003234:	21fffb1e 	bne	r4,r7,10003224 <__alt_data_end+0xf8003224>
10003238:	d8802304 	addi	r2,sp,140
1000323c:	1505c83a 	sub	r2,r2,r20
10003240:	d8c02344 	addi	r3,sp,141
10003244:	1885883a 	add	r2,r3,r2
10003248:	003f7006 	br	1000300c <__alt_data_end+0xf800300c>
1000324c:	0005883a 	mov	r2,zero
10003250:	003f0b06 	br	10002e80 <__alt_data_end+0xf8002e80>
10003254:	d9002a17 	ldw	r4,168(sp)
10003258:	d8c03217 	ldw	r3,200(sp)
1000325c:	20800044 	addi	r2,r4,1
10003260:	1885883a 	add	r2,r3,r2
10003264:	d8802b15 	stw	r2,172(sp)
10003268:	103e870e 	bge	r2,zero,10002c88 <__alt_data_end+0xf8002c88>
1000326c:	0005883a 	mov	r2,zero
10003270:	003e8506 	br	10002c88 <__alt_data_end+0xf8002c88>
10003274:	01040074 	movhi	r4,4097
10003278:	210fe584 	addi	r4,r4,16278
1000327c:	d9002c15 	stw	r4,176(sp)
10003280:	003cc506 	br	10002598 <__alt_data_end+0xf8002598>
10003284:	d8c03217 	ldw	r3,200(sp)
10003288:	18c00044 	addi	r3,r3,1
1000328c:	d8c02b15 	stw	r3,172(sp)
10003290:	1805883a 	mov	r2,r3
10003294:	183fa10e 	bge	r3,zero,1000311c <__alt_data_end+0xf800311c>
10003298:	0005883a 	mov	r2,zero
1000329c:	003f9f06 	br	1000311c <__alt_data_end+0xf800311c>
100032a0:	d9003617 	ldw	r4,216(sp)
100032a4:	000d883a 	mov	r6,zero
100032a8:	000f883a 	mov	r7,zero
100032ac:	a00b883a 	mov	r5,r20
100032b0:	d8c03d15 	stw	r3,244(sp)
100032b4:	da003e15 	stw	r8,248(sp)
100032b8:	001001c0 	call	1001001c <__eqdf2>
100032bc:	d8c03d17 	ldw	r3,244(sp)
100032c0:	da003e17 	ldw	r8,248(sp)
100032c4:	103f8726 	beq	r2,zero,100030e4 <__alt_data_end+0xf80030e4>
100032c8:	00800044 	movi	r2,1
100032cc:	10c7c83a 	sub	r3,r2,r3
100032d0:	d8c02615 	stw	r3,152(sp)
100032d4:	003f8406 	br	100030e8 <__alt_data_end+0xf80030e8>
100032d8:	20000e1e 	bne	r4,zero,10003314 <___svfprintf_internal_r+0x2194>
100032dc:	9480004c 	andi	r18,r18,1
100032e0:	90000c1e 	bne	r18,zero,10003314 <___svfprintf_internal_r+0x2194>
100032e4:	00800044 	movi	r2,1
100032e8:	d8802b15 	stw	r2,172(sp)
100032ec:	003e6606 	br	10002c88 <__alt_data_end+0xf8002c88>
100032f0:	00800b44 	movi	r2,45
100032f4:	05adc83a 	sub	r22,zero,r22
100032f8:	d8802305 	stb	r2,140(sp)
100032fc:	003f3b06 	br	10002fec <__alt_data_end+0xf8002fec>
10003300:	0005883a 	mov	r2,zero
10003304:	003f4e06 	br	10003040 <__alt_data_end+0xf8003040>
10003308:	90a4703a 	and	r18,r18,r2
1000330c:	903f4a26 	beq	r18,zero,10003038 <__alt_data_end+0xf8003038>
10003310:	003f4606 	br	1000302c <__alt_data_end+0xf800302c>
10003314:	d8c02a17 	ldw	r3,168(sp)
10003318:	18c00084 	addi	r3,r3,2
1000331c:	d8c02b15 	stw	r3,172(sp)
10003320:	1805883a 	mov	r2,r3
10003324:	183e580e 	bge	r3,zero,10002c88 <__alt_data_end+0xf8002c88>
10003328:	003fd006 	br	1000326c <__alt_data_end+0xf800326c>
1000332c:	00800084 	movi	r2,2
10003330:	10c5c83a 	sub	r2,r2,r3
10003334:	003f7506 	br	1000310c <__alt_data_end+0xf800310c>
10003338:	d9402e17 	ldw	r5,184(sp)
1000333c:	d9002e17 	ldw	r4,184(sp)
10003340:	bc400043 	ldbu	r17,1(r23)
10003344:	29400017 	ldw	r5,0(r5)
10003348:	20800104 	addi	r2,r4,4
1000334c:	d8802e15 	stw	r2,184(sp)
10003350:	d9402a15 	stw	r5,168(sp)
10003354:	182f883a 	mov	r23,r3
10003358:	283df10e 	bge	r5,zero,10002b20 <__alt_data_end+0xf8002b20>
1000335c:	8c403fcc 	andi	r17,r17,255
10003360:	017fffc4 	movi	r5,-1
10003364:	8c40201c 	xori	r17,r17,128
10003368:	d9402a15 	stw	r5,168(sp)
1000336c:	8c7fe004 	addi	r17,r17,-128
10003370:	0037d806 	br	100012d4 <__alt_data_end+0xf80012d4>
10003374:	9080004c 	andi	r2,r18,1
10003378:	0039883a 	mov	fp,zero
1000337c:	10000726 	beq	r2,zero,1000339c <___svfprintf_internal_r+0x221c>
10003380:	d8c02817 	ldw	r3,160(sp)
10003384:	dc001dc4 	addi	r16,sp,119
10003388:	00800c04 	movi	r2,48
1000338c:	1c07c83a 	sub	r3,r3,r16
10003390:	d8801dc5 	stb	r2,119(sp)
10003394:	d8c02b15 	stw	r3,172(sp)
10003398:	00393106 	br	10001860 <__alt_data_end+0xf8001860>
1000339c:	d8002b15 	stw	zero,172(sp)
100033a0:	dc001e04 	addi	r16,sp,120
100033a4:	00392e06 	br	10001860 <__alt_data_end+0xf8001860>
100033a8:	0005883a 	mov	r2,zero
100033ac:	003e3306 	br	10002c7c <__alt_data_end+0xf8002c7c>
100033b0:	dd802617 	ldw	r22,152(sp)
100033b4:	003f0706 	br	10002fd4 <__alt_data_end+0xf8002fd4>
100033b8:	d8c02b03 	ldbu	r3,172(sp)
100033bc:	d8c02785 	stb	r3,158(sp)
100033c0:	003a3506 	br	10001c98 <__alt_data_end+0xf8001c98>
100033c4:	d8c02b03 	ldbu	r3,172(sp)
100033c8:	d8c02785 	stb	r3,158(sp)
100033cc:	003a1706 	br	10001c2c <__alt_data_end+0xf8001c2c>
100033d0:	0005883a 	mov	r2,zero
100033d4:	003f5d06 	br	1000314c <__alt_data_end+0xf800314c>
100033d8:	d8c02b03 	ldbu	r3,172(sp)
100033dc:	d8c02785 	stb	r3,158(sp)
100033e0:	0038f306 	br	100017b0 <__alt_data_end+0xf80017b0>
100033e4:	d8c02b03 	ldbu	r3,172(sp)
100033e8:	d8c02785 	stb	r3,158(sp)
100033ec:	0038be06 	br	100016e8 <__alt_data_end+0xf80016e8>
100033f0:	d8802344 	addi	r2,sp,141
100033f4:	003f0506 	br	1000300c <__alt_data_end+0xf800300c>
100033f8:	d8c02b03 	ldbu	r3,172(sp)
100033fc:	d8c02785 	stb	r3,158(sp)
10003400:	00388b06 	br	10001630 <__alt_data_end+0xf8001630>
10003404:	d8c02b03 	ldbu	r3,172(sp)
10003408:	d8c02785 	stb	r3,158(sp)
1000340c:	003ad706 	br	10001f6c <__alt_data_end+0xf8001f6c>
10003410:	d9403917 	ldw	r5,228(sp)
10003414:	00800304 	movi	r2,12
10003418:	28800015 	stw	r2,0(r5)
1000341c:	00bfffc4 	movi	r2,-1
10003420:	00384306 	br	10001530 <__alt_data_end+0xf8001530>
10003424:	d8c02b03 	ldbu	r3,172(sp)
10003428:	d8c02785 	stb	r3,158(sp)
1000342c:	003ab606 	br	10001f08 <__alt_data_end+0xf8001f08>
10003430:	d8c02b03 	ldbu	r3,172(sp)
10003434:	d8c02785 	stb	r3,158(sp)
10003438:	003a8906 	br	10001e60 <__alt_data_end+0xf8001e60>

1000343c <___vfprintf_internal_r>:
1000343c:	deffb804 	addi	sp,sp,-288
10003440:	dfc04715 	stw	ra,284(sp)
10003444:	ddc04515 	stw	r23,276(sp)
10003448:	dd404315 	stw	r21,268(sp)
1000344c:	d9002d15 	stw	r4,180(sp)
10003450:	282f883a 	mov	r23,r5
10003454:	302b883a 	mov	r21,r6
10003458:	d9c02e15 	stw	r7,184(sp)
1000345c:	df004615 	stw	fp,280(sp)
10003460:	dd804415 	stw	r22,272(sp)
10003464:	dd004215 	stw	r20,264(sp)
10003468:	dcc04115 	stw	r19,260(sp)
1000346c:	dc804015 	stw	r18,256(sp)
10003470:	dc403f15 	stw	r17,252(sp)
10003474:	dc003e15 	stw	r16,248(sp)
10003478:	000837c0 	call	1000837c <_localeconv_r>
1000347c:	10800017 	ldw	r2,0(r2)
10003480:	1009883a 	mov	r4,r2
10003484:	d8803415 	stw	r2,208(sp)
10003488:	00010e80 	call	100010e8 <strlen>
1000348c:	d8803715 	stw	r2,220(sp)
10003490:	d8802d17 	ldw	r2,180(sp)
10003494:	10000226 	beq	r2,zero,100034a0 <___vfprintf_internal_r+0x64>
10003498:	10800e17 	ldw	r2,56(r2)
1000349c:	1000fb26 	beq	r2,zero,1000388c <___vfprintf_internal_r+0x450>
100034a0:	b880030b 	ldhu	r2,12(r23)
100034a4:	10c8000c 	andi	r3,r2,8192
100034a8:	1800061e 	bne	r3,zero,100034c4 <___vfprintf_internal_r+0x88>
100034ac:	b9001917 	ldw	r4,100(r23)
100034b0:	00f7ffc4 	movi	r3,-8193
100034b4:	10880014 	ori	r2,r2,8192
100034b8:	20c6703a 	and	r3,r4,r3
100034bc:	b880030d 	sth	r2,12(r23)
100034c0:	b8c01915 	stw	r3,100(r23)
100034c4:	10c0020c 	andi	r3,r2,8
100034c8:	1800c326 	beq	r3,zero,100037d8 <___vfprintf_internal_r+0x39c>
100034cc:	b8c00417 	ldw	r3,16(r23)
100034d0:	1800c126 	beq	r3,zero,100037d8 <___vfprintf_internal_r+0x39c>
100034d4:	1080068c 	andi	r2,r2,26
100034d8:	00c00284 	movi	r3,10
100034dc:	10c0c626 	beq	r2,r3,100037f8 <___vfprintf_internal_r+0x3bc>
100034e0:	d8c00404 	addi	r3,sp,16
100034e4:	05040074 	movhi	r20,4097
100034e8:	d9001e04 	addi	r4,sp,120
100034ec:	a50fed84 	addi	r20,r20,16310
100034f0:	d8c01e15 	stw	r3,120(sp)
100034f4:	d8002015 	stw	zero,128(sp)
100034f8:	d8001f15 	stw	zero,124(sp)
100034fc:	d8003315 	stw	zero,204(sp)
10003500:	d8003615 	stw	zero,216(sp)
10003504:	d8003815 	stw	zero,224(sp)
10003508:	1811883a 	mov	r8,r3
1000350c:	d8003915 	stw	zero,228(sp)
10003510:	d8003a15 	stw	zero,232(sp)
10003514:	d8002f15 	stw	zero,188(sp)
10003518:	d9002815 	stw	r4,160(sp)
1000351c:	a8800007 	ldb	r2,0(r21)
10003520:	10028b26 	beq	r2,zero,10003f50 <___vfprintf_internal_r+0xb14>
10003524:	00c00944 	movi	r3,37
10003528:	a823883a 	mov	r17,r21
1000352c:	10c0021e 	bne	r2,r3,10003538 <___vfprintf_internal_r+0xfc>
10003530:	00001406 	br	10003584 <___vfprintf_internal_r+0x148>
10003534:	10c00326 	beq	r2,r3,10003544 <___vfprintf_internal_r+0x108>
10003538:	8c400044 	addi	r17,r17,1
1000353c:	88800007 	ldb	r2,0(r17)
10003540:	103ffc1e 	bne	r2,zero,10003534 <__alt_data_end+0xf8003534>
10003544:	8d61c83a 	sub	r16,r17,r21
10003548:	80000e26 	beq	r16,zero,10003584 <___vfprintf_internal_r+0x148>
1000354c:	d8c02017 	ldw	r3,128(sp)
10003550:	d8801f17 	ldw	r2,124(sp)
10003554:	45400015 	stw	r21,0(r8)
10003558:	1c07883a 	add	r3,r3,r16
1000355c:	10800044 	addi	r2,r2,1
10003560:	d8c02015 	stw	r3,128(sp)
10003564:	44000115 	stw	r16,4(r8)
10003568:	d8801f15 	stw	r2,124(sp)
1000356c:	00c001c4 	movi	r3,7
10003570:	1880a916 	blt	r3,r2,10003818 <___vfprintf_internal_r+0x3dc>
10003574:	42000204 	addi	r8,r8,8
10003578:	d9402f17 	ldw	r5,188(sp)
1000357c:	2c0b883a 	add	r5,r5,r16
10003580:	d9402f15 	stw	r5,188(sp)
10003584:	88800007 	ldb	r2,0(r17)
10003588:	1000aa26 	beq	r2,zero,10003834 <___vfprintf_internal_r+0x3f8>
1000358c:	8d400044 	addi	r21,r17,1
10003590:	8c400047 	ldb	r17,1(r17)
10003594:	0021883a 	mov	r16,zero
10003598:	00bfffc4 	movi	r2,-1
1000359c:	0025883a 	mov	r18,zero
100035a0:	dc002905 	stb	r16,164(sp)
100035a4:	d8002785 	stb	zero,158(sp)
100035a8:	d8002b05 	stb	zero,172(sp)
100035ac:	d8802a15 	stw	r2,168(sp)
100035b0:	d8003115 	stw	zero,196(sp)
100035b4:	04c01604 	movi	r19,88
100035b8:	05800244 	movi	r22,9
100035bc:	9021883a 	mov	r16,r18
100035c0:	4039883a 	mov	fp,r8
100035c4:	ad400044 	addi	r21,r21,1
100035c8:	88bff804 	addi	r2,r17,-32
100035cc:	98833236 	bltu	r19,r2,10004298 <___vfprintf_internal_r+0xe5c>
100035d0:	100490ba 	slli	r2,r2,2
100035d4:	00c40034 	movhi	r3,4096
100035d8:	18cd7a04 	addi	r3,r3,13800
100035dc:	10c5883a 	add	r2,r2,r3
100035e0:	10800017 	ldw	r2,0(r2)
100035e4:	1000683a 	jmp	r2
100035e8:	10004190 	cmplti	zero,r2,262
100035ec:	10004298 	cmpnei	zero,r2,266
100035f0:	10004298 	cmpnei	zero,r2,266
100035f4:	100041b0 	cmpltui	zero,r2,262
100035f8:	10004298 	cmpnei	zero,r2,266
100035fc:	10004298 	cmpnei	zero,r2,266
10003600:	10004298 	cmpnei	zero,r2,266
10003604:	10004298 	cmpnei	zero,r2,266
10003608:	10004298 	cmpnei	zero,r2,266
1000360c:	10004298 	cmpnei	zero,r2,266
10003610:	10003898 	cmpnei	zero,r2,226
10003614:	100040a0 	cmpeqi	zero,r2,258
10003618:	10004298 	cmpnei	zero,r2,266
1000361c:	1000375c 	xori	zero,r2,221
10003620:	100038bc 	xorhi	zero,r2,226
10003624:	10004298 	cmpnei	zero,r2,266
10003628:	1000390c 	andi	zero,r2,228
1000362c:	10003918 	cmpnei	zero,r2,228
10003630:	10003918 	cmpnei	zero,r2,228
10003634:	10003918 	cmpnei	zero,r2,228
10003638:	10003918 	cmpnei	zero,r2,228
1000363c:	10003918 	cmpnei	zero,r2,228
10003640:	10003918 	cmpnei	zero,r2,228
10003644:	10003918 	cmpnei	zero,r2,228
10003648:	10003918 	cmpnei	zero,r2,228
1000364c:	10003918 	cmpnei	zero,r2,228
10003650:	10004298 	cmpnei	zero,r2,266
10003654:	10004298 	cmpnei	zero,r2,266
10003658:	10004298 	cmpnei	zero,r2,266
1000365c:	10004298 	cmpnei	zero,r2,266
10003660:	10004298 	cmpnei	zero,r2,266
10003664:	10004298 	cmpnei	zero,r2,266
10003668:	10004298 	cmpnei	zero,r2,266
1000366c:	10004298 	cmpnei	zero,r2,266
10003670:	10004298 	cmpnei	zero,r2,266
10003674:	10004298 	cmpnei	zero,r2,266
10003678:	10003954 	ori	zero,r2,229
1000367c:	10003a1c 	xori	zero,r2,232
10003680:	10004298 	cmpnei	zero,r2,266
10003684:	10003a1c 	xori	zero,r2,232
10003688:	10004298 	cmpnei	zero,r2,266
1000368c:	10004298 	cmpnei	zero,r2,266
10003690:	10004298 	cmpnei	zero,r2,266
10003694:	10004298 	cmpnei	zero,r2,266
10003698:	10003ac8 	cmpgei	zero,r2,235
1000369c:	10004298 	cmpnei	zero,r2,266
100036a0:	10004298 	cmpnei	zero,r2,266
100036a4:	10003ad4 	ori	zero,r2,235
100036a8:	10004298 	cmpnei	zero,r2,266
100036ac:	10004298 	cmpnei	zero,r2,266
100036b0:	10004298 	cmpnei	zero,r2,266
100036b4:	10004298 	cmpnei	zero,r2,266
100036b8:	10004298 	cmpnei	zero,r2,266
100036bc:	10003f58 	cmpnei	zero,r2,253
100036c0:	10004298 	cmpnei	zero,r2,266
100036c4:	10004298 	cmpnei	zero,r2,266
100036c8:	10003fc4 	addi	zero,r2,255
100036cc:	10004298 	cmpnei	zero,r2,266
100036d0:	10004298 	cmpnei	zero,r2,266
100036d4:	10004298 	cmpnei	zero,r2,266
100036d8:	10004298 	cmpnei	zero,r2,266
100036dc:	10004298 	cmpnei	zero,r2,266
100036e0:	10004298 	cmpnei	zero,r2,266
100036e4:	10004298 	cmpnei	zero,r2,266
100036e8:	10004298 	cmpnei	zero,r2,266
100036ec:	10004298 	cmpnei	zero,r2,266
100036f0:	10004298 	cmpnei	zero,r2,266
100036f4:	1000423c 	xorhi	zero,r2,264
100036f8:	100041bc 	xorhi	zero,r2,262
100036fc:	10003a1c 	xori	zero,r2,232
10003700:	10003a1c 	xori	zero,r2,232
10003704:	10003a1c 	xori	zero,r2,232
10003708:	100041dc 	xori	zero,r2,263
1000370c:	100041bc 	xorhi	zero,r2,262
10003710:	10004298 	cmpnei	zero,r2,266
10003714:	10004298 	cmpnei	zero,r2,266
10003718:	100041e8 	cmpgeui	zero,r2,263
1000371c:	10004298 	cmpnei	zero,r2,266
10003720:	100041fc 	xorhi	zero,r2,263
10003724:	10004080 	call	11000408 <_gp+0xfe23ec>
10003728:	10003768 	cmpgeui	zero,r2,221
1000372c:	100040b8 	rdprs	zero,r2,258
10003730:	10004298 	cmpnei	zero,r2,266
10003734:	100040c4 	addi	zero,r2,259
10003738:	10004298 	cmpnei	zero,r2,266
1000373c:	10004128 	cmpgeui	zero,r2,260
10003740:	10004298 	cmpnei	zero,r2,266
10003744:	10004298 	cmpnei	zero,r2,266
10003748:	10004148 	cmpgei	zero,r2,261
1000374c:	d8c03117 	ldw	r3,196(sp)
10003750:	d8802e15 	stw	r2,184(sp)
10003754:	00c7c83a 	sub	r3,zero,r3
10003758:	d8c03115 	stw	r3,196(sp)
1000375c:	84000114 	ori	r16,r16,4
10003760:	ac400007 	ldb	r17,0(r21)
10003764:	003f9706 	br	100035c4 <__alt_data_end+0xf80035c4>
10003768:	00800c04 	movi	r2,48
1000376c:	d8802705 	stb	r2,156(sp)
10003770:	00801e04 	movi	r2,120
10003774:	d8802745 	stb	r2,157(sp)
10003778:	d9002a17 	ldw	r4,168(sp)
1000377c:	d8802e17 	ldw	r2,184(sp)
10003780:	d8002785 	stb	zero,158(sp)
10003784:	e011883a 	mov	r8,fp
10003788:	10c00104 	addi	r3,r2,4
1000378c:	14c00017 	ldw	r19,0(r2)
10003790:	002d883a 	mov	r22,zero
10003794:	80800094 	ori	r2,r16,2
10003798:	2002ca16 	blt	r4,zero,100042c4 <___vfprintf_internal_r+0xe88>
1000379c:	00bfdfc4 	movi	r2,-129
100037a0:	80a4703a 	and	r18,r16,r2
100037a4:	d8c02e15 	stw	r3,184(sp)
100037a8:	94800094 	ori	r18,r18,2
100037ac:	9802b41e 	bne	r19,zero,10004280 <___vfprintf_internal_r+0xe44>
100037b0:	01440074 	movhi	r5,4097
100037b4:	294fde04 	addi	r5,r5,16248
100037b8:	d9403915 	stw	r5,228(sp)
100037bc:	04401e04 	movi	r17,120
100037c0:	d8802a17 	ldw	r2,168(sp)
100037c4:	0039883a 	mov	fp,zero
100037c8:	1001fa26 	beq	r2,zero,10003fb4 <___vfprintf_internal_r+0xb78>
100037cc:	0027883a 	mov	r19,zero
100037d0:	002d883a 	mov	r22,zero
100037d4:	00021906 	br	1000403c <___vfprintf_internal_r+0xc00>
100037d8:	d9002d17 	ldw	r4,180(sp)
100037dc:	b80b883a 	mov	r5,r23
100037e0:	00057f00 	call	100057f0 <__swsetup_r>
100037e4:	1005dc1e 	bne	r2,zero,10004f58 <___vfprintf_internal_r+0x1b1c>
100037e8:	b880030b 	ldhu	r2,12(r23)
100037ec:	00c00284 	movi	r3,10
100037f0:	1080068c 	andi	r2,r2,26
100037f4:	10ff3a1e 	bne	r2,r3,100034e0 <__alt_data_end+0xf80034e0>
100037f8:	b880038f 	ldh	r2,14(r23)
100037fc:	103f3816 	blt	r2,zero,100034e0 <__alt_data_end+0xf80034e0>
10003800:	d9c02e17 	ldw	r7,184(sp)
10003804:	d9002d17 	ldw	r4,180(sp)
10003808:	a80d883a 	mov	r6,r21
1000380c:	b80b883a 	mov	r5,r23
10003810:	00057340 	call	10005734 <__sbprintf>
10003814:	00001106 	br	1000385c <___vfprintf_internal_r+0x420>
10003818:	d9002d17 	ldw	r4,180(sp)
1000381c:	d9801e04 	addi	r6,sp,120
10003820:	b80b883a 	mov	r5,r23
10003824:	000c18c0 	call	1000c18c <__sprint_r>
10003828:	1000081e 	bne	r2,zero,1000384c <___vfprintf_internal_r+0x410>
1000382c:	da000404 	addi	r8,sp,16
10003830:	003f5106 	br	10003578 <__alt_data_end+0xf8003578>
10003834:	d8802017 	ldw	r2,128(sp)
10003838:	10000426 	beq	r2,zero,1000384c <___vfprintf_internal_r+0x410>
1000383c:	d9002d17 	ldw	r4,180(sp)
10003840:	d9801e04 	addi	r6,sp,120
10003844:	b80b883a 	mov	r5,r23
10003848:	000c18c0 	call	1000c18c <__sprint_r>
1000384c:	b880030b 	ldhu	r2,12(r23)
10003850:	1080100c 	andi	r2,r2,64
10003854:	1005c01e 	bne	r2,zero,10004f58 <___vfprintf_internal_r+0x1b1c>
10003858:	d8802f17 	ldw	r2,188(sp)
1000385c:	dfc04717 	ldw	ra,284(sp)
10003860:	df004617 	ldw	fp,280(sp)
10003864:	ddc04517 	ldw	r23,276(sp)
10003868:	dd804417 	ldw	r22,272(sp)
1000386c:	dd404317 	ldw	r21,268(sp)
10003870:	dd004217 	ldw	r20,264(sp)
10003874:	dcc04117 	ldw	r19,260(sp)
10003878:	dc804017 	ldw	r18,256(sp)
1000387c:	dc403f17 	ldw	r17,252(sp)
10003880:	dc003e17 	ldw	r16,248(sp)
10003884:	dec04804 	addi	sp,sp,288
10003888:	f800283a 	ret
1000388c:	d9002d17 	ldw	r4,180(sp)
10003890:	00077fc0 	call	100077fc <__sinit>
10003894:	003f0206 	br	100034a0 <__alt_data_end+0xf80034a0>
10003898:	d9002e17 	ldw	r4,184(sp)
1000389c:	d9402e17 	ldw	r5,184(sp)
100038a0:	21000017 	ldw	r4,0(r4)
100038a4:	28800104 	addi	r2,r5,4
100038a8:	d9003115 	stw	r4,196(sp)
100038ac:	203fa716 	blt	r4,zero,1000374c <__alt_data_end+0xf800374c>
100038b0:	d8802e15 	stw	r2,184(sp)
100038b4:	ac400007 	ldb	r17,0(r21)
100038b8:	003f4206 	br	100035c4 <__alt_data_end+0xf80035c4>
100038bc:	ac400007 	ldb	r17,0(r21)
100038c0:	01000a84 	movi	r4,42
100038c4:	a8c00044 	addi	r3,r21,1
100038c8:	89075826 	beq	r17,r4,1000562c <___vfprintf_internal_r+0x21f0>
100038cc:	8cbff404 	addi	r18,r17,-48
100038d0:	b486ae36 	bltu	r22,r18,1000538c <___vfprintf_internal_r+0x1f50>
100038d4:	0009883a 	mov	r4,zero
100038d8:	1823883a 	mov	r17,r3
100038dc:	01400284 	movi	r5,10
100038e0:	0000e400 	call	10000e40 <__mulsi3>
100038e4:	88c00007 	ldb	r3,0(r17)
100038e8:	1489883a 	add	r4,r2,r18
100038ec:	8d400044 	addi	r21,r17,1
100038f0:	1cbff404 	addi	r18,r3,-48
100038f4:	a823883a 	mov	r17,r21
100038f8:	b4bff82e 	bgeu	r22,r18,100038dc <__alt_data_end+0xf80038dc>
100038fc:	1823883a 	mov	r17,r3
10003900:	2005f616 	blt	r4,zero,100050dc <___vfprintf_internal_r+0x1ca0>
10003904:	d9002a15 	stw	r4,168(sp)
10003908:	003f2f06 	br	100035c8 <__alt_data_end+0xf80035c8>
1000390c:	84002014 	ori	r16,r16,128
10003910:	ac400007 	ldb	r17,0(r21)
10003914:	003f2b06 	br	100035c4 <__alt_data_end+0xf80035c4>
10003918:	8cbff404 	addi	r18,r17,-48
1000391c:	d8003115 	stw	zero,196(sp)
10003920:	0009883a 	mov	r4,zero
10003924:	a823883a 	mov	r17,r21
10003928:	01400284 	movi	r5,10
1000392c:	0000e400 	call	10000e40 <__mulsi3>
10003930:	88c00007 	ldb	r3,0(r17)
10003934:	9089883a 	add	r4,r18,r2
10003938:	ad400044 	addi	r21,r21,1
1000393c:	1cbff404 	addi	r18,r3,-48
10003940:	a823883a 	mov	r17,r21
10003944:	b4bff82e 	bgeu	r22,r18,10003928 <__alt_data_end+0xf8003928>
10003948:	1823883a 	mov	r17,r3
1000394c:	d9003115 	stw	r4,196(sp)
10003950:	003f1d06 	br	100035c8 <__alt_data_end+0xf80035c8>
10003954:	8025883a 	mov	r18,r16
10003958:	dc002903 	ldbu	r16,164(sp)
1000395c:	e011883a 	mov	r8,fp
10003960:	84003fcc 	andi	r16,r16,255
10003964:	8007531e 	bne	r16,zero,100056b4 <___vfprintf_internal_r+0x2278>
10003968:	94800414 	ori	r18,r18,16
1000396c:	9080080c 	andi	r2,r18,32
10003970:	1003a326 	beq	r2,zero,10004800 <___vfprintf_internal_r+0x13c4>
10003974:	d9002e17 	ldw	r4,184(sp)
10003978:	20800117 	ldw	r2,4(r4)
1000397c:	24c00017 	ldw	r19,0(r4)
10003980:	21000204 	addi	r4,r4,8
10003984:	d9002e15 	stw	r4,184(sp)
10003988:	102d883a 	mov	r22,r2
1000398c:	10047316 	blt	r2,zero,10004b5c <___vfprintf_internal_r+0x1720>
10003990:	d9002a17 	ldw	r4,168(sp)
10003994:	df002783 	ldbu	fp,158(sp)
10003998:	2003e416 	blt	r4,zero,1000492c <___vfprintf_internal_r+0x14f0>
1000399c:	00ffdfc4 	movi	r3,-129
100039a0:	9d84b03a 	or	r2,r19,r22
100039a4:	90e4703a 	and	r18,r18,r3
100039a8:	10018026 	beq	r2,zero,10003fac <___vfprintf_internal_r+0xb70>
100039ac:	b003ab26 	beq	r22,zero,1000485c <___vfprintf_internal_r+0x1420>
100039b0:	dc402915 	stw	r17,164(sp)
100039b4:	dc001e04 	addi	r16,sp,120
100039b8:	b023883a 	mov	r17,r22
100039bc:	402d883a 	mov	r22,r8
100039c0:	9809883a 	mov	r4,r19
100039c4:	880b883a 	mov	r5,r17
100039c8:	01800284 	movi	r6,10
100039cc:	000f883a 	mov	r7,zero
100039d0:	000e7dc0 	call	1000e7dc <__umoddi3>
100039d4:	10800c04 	addi	r2,r2,48
100039d8:	843fffc4 	addi	r16,r16,-1
100039dc:	9809883a 	mov	r4,r19
100039e0:	880b883a 	mov	r5,r17
100039e4:	80800005 	stb	r2,0(r16)
100039e8:	01800284 	movi	r6,10
100039ec:	000f883a 	mov	r7,zero
100039f0:	000e1e00 	call	1000e1e0 <__udivdi3>
100039f4:	1027883a 	mov	r19,r2
100039f8:	10c4b03a 	or	r2,r2,r3
100039fc:	1823883a 	mov	r17,r3
10003a00:	103fef1e 	bne	r2,zero,100039c0 <__alt_data_end+0xf80039c0>
10003a04:	d8c02817 	ldw	r3,160(sp)
10003a08:	dc402917 	ldw	r17,164(sp)
10003a0c:	b011883a 	mov	r8,r22
10003a10:	1c07c83a 	sub	r3,r3,r16
10003a14:	d8c02b15 	stw	r3,172(sp)
10003a18:	00005f06 	br	10003b98 <___vfprintf_internal_r+0x75c>
10003a1c:	8025883a 	mov	r18,r16
10003a20:	dc002903 	ldbu	r16,164(sp)
10003a24:	e011883a 	mov	r8,fp
10003a28:	84003fcc 	andi	r16,r16,255
10003a2c:	80071e1e 	bne	r16,zero,100056a8 <___vfprintf_internal_r+0x226c>
10003a30:	9080020c 	andi	r2,r18,8
10003a34:	1004af26 	beq	r2,zero,10004cf4 <___vfprintf_internal_r+0x18b8>
10003a38:	d9002e17 	ldw	r4,184(sp)
10003a3c:	d9402e17 	ldw	r5,184(sp)
10003a40:	d8802e17 	ldw	r2,184(sp)
10003a44:	21000017 	ldw	r4,0(r4)
10003a48:	29400117 	ldw	r5,4(r5)
10003a4c:	10800204 	addi	r2,r2,8
10003a50:	d9003615 	stw	r4,216(sp)
10003a54:	d9403815 	stw	r5,224(sp)
10003a58:	d8802e15 	stw	r2,184(sp)
10003a5c:	d9003617 	ldw	r4,216(sp)
10003a60:	d9403817 	ldw	r5,224(sp)
10003a64:	da003d15 	stw	r8,244(sp)
10003a68:	04000044 	movi	r16,1
10003a6c:	000a8400 	call	1000a840 <__fpclassifyd>
10003a70:	da003d17 	ldw	r8,244(sp)
10003a74:	1404441e 	bne	r2,r16,10004b88 <___vfprintf_internal_r+0x174c>
10003a78:	d9003617 	ldw	r4,216(sp)
10003a7c:	d9403817 	ldw	r5,224(sp)
10003a80:	000d883a 	mov	r6,zero
10003a84:	000f883a 	mov	r7,zero
10003a88:	00101800 	call	10010180 <__ledf2>
10003a8c:	da003d17 	ldw	r8,244(sp)
10003a90:	1005e316 	blt	r2,zero,10005220 <___vfprintf_internal_r+0x1de4>
10003a94:	df002783 	ldbu	fp,158(sp)
10003a98:	008011c4 	movi	r2,71
10003a9c:	1445580e 	bge	r2,r17,10005000 <___vfprintf_internal_r+0x1bc4>
10003aa0:	04040074 	movhi	r16,4097
10003aa4:	840fd604 	addi	r16,r16,16216
10003aa8:	00c000c4 	movi	r3,3
10003aac:	00bfdfc4 	movi	r2,-129
10003ab0:	d8c02915 	stw	r3,164(sp)
10003ab4:	90a4703a 	and	r18,r18,r2
10003ab8:	d8c02b15 	stw	r3,172(sp)
10003abc:	d8002a15 	stw	zero,168(sp)
10003ac0:	d8003215 	stw	zero,200(sp)
10003ac4:	00003a06 	br	10003bb0 <___vfprintf_internal_r+0x774>
10003ac8:	84000214 	ori	r16,r16,8
10003acc:	ac400007 	ldb	r17,0(r21)
10003ad0:	003ebc06 	br	100035c4 <__alt_data_end+0xf80035c4>
10003ad4:	8025883a 	mov	r18,r16
10003ad8:	dc002903 	ldbu	r16,164(sp)
10003adc:	e011883a 	mov	r8,fp
10003ae0:	84003fcc 	andi	r16,r16,255
10003ae4:	8007001e 	bne	r16,zero,100056e8 <___vfprintf_internal_r+0x22ac>
10003ae8:	94800414 	ori	r18,r18,16
10003aec:	9080080c 	andi	r2,r18,32
10003af0:	1002fa26 	beq	r2,zero,100046dc <___vfprintf_internal_r+0x12a0>
10003af4:	d9002e17 	ldw	r4,184(sp)
10003af8:	d9402a17 	ldw	r5,168(sp)
10003afc:	d8002785 	stb	zero,158(sp)
10003b00:	20800204 	addi	r2,r4,8
10003b04:	24c00017 	ldw	r19,0(r4)
10003b08:	25800117 	ldw	r22,4(r4)
10003b0c:	2804b116 	blt	r5,zero,10004dd4 <___vfprintf_internal_r+0x1998>
10003b10:	013fdfc4 	movi	r4,-129
10003b14:	9d86b03a 	or	r3,r19,r22
10003b18:	d8802e15 	stw	r2,184(sp)
10003b1c:	9124703a 	and	r18,r18,r4
10003b20:	1802fb1e 	bne	r3,zero,10004710 <___vfprintf_internal_r+0x12d4>
10003b24:	d8c02a17 	ldw	r3,168(sp)
10003b28:	0039883a 	mov	fp,zero
10003b2c:	1805e526 	beq	r3,zero,100052c4 <___vfprintf_internal_r+0x1e88>
10003b30:	0027883a 	mov	r19,zero
10003b34:	002d883a 	mov	r22,zero
10003b38:	dc001e04 	addi	r16,sp,120
10003b3c:	9806d0fa 	srli	r3,r19,3
10003b40:	b008977a 	slli	r4,r22,29
10003b44:	b02cd0fa 	srli	r22,r22,3
10003b48:	9cc001cc 	andi	r19,r19,7
10003b4c:	98800c04 	addi	r2,r19,48
10003b50:	843fffc4 	addi	r16,r16,-1
10003b54:	20e6b03a 	or	r19,r4,r3
10003b58:	80800005 	stb	r2,0(r16)
10003b5c:	9d86b03a 	or	r3,r19,r22
10003b60:	183ff61e 	bne	r3,zero,10003b3c <__alt_data_end+0xf8003b3c>
10003b64:	90c0004c 	andi	r3,r18,1
10003b68:	18014126 	beq	r3,zero,10004070 <___vfprintf_internal_r+0xc34>
10003b6c:	10803fcc 	andi	r2,r2,255
10003b70:	1080201c 	xori	r2,r2,128
10003b74:	10bfe004 	addi	r2,r2,-128
10003b78:	00c00c04 	movi	r3,48
10003b7c:	10c13c26 	beq	r2,r3,10004070 <___vfprintf_internal_r+0xc34>
10003b80:	80ffffc5 	stb	r3,-1(r16)
10003b84:	d8c02817 	ldw	r3,160(sp)
10003b88:	80bfffc4 	addi	r2,r16,-1
10003b8c:	1021883a 	mov	r16,r2
10003b90:	1887c83a 	sub	r3,r3,r2
10003b94:	d8c02b15 	stw	r3,172(sp)
10003b98:	d8802b17 	ldw	r2,172(sp)
10003b9c:	d9002a17 	ldw	r4,168(sp)
10003ba0:	1100010e 	bge	r2,r4,10003ba8 <___vfprintf_internal_r+0x76c>
10003ba4:	2005883a 	mov	r2,r4
10003ba8:	d8802915 	stw	r2,164(sp)
10003bac:	d8003215 	stw	zero,200(sp)
10003bb0:	e7003fcc 	andi	fp,fp,255
10003bb4:	e700201c 	xori	fp,fp,128
10003bb8:	e73fe004 	addi	fp,fp,-128
10003bbc:	e0000326 	beq	fp,zero,10003bcc <___vfprintf_internal_r+0x790>
10003bc0:	d8c02917 	ldw	r3,164(sp)
10003bc4:	18c00044 	addi	r3,r3,1
10003bc8:	d8c02915 	stw	r3,164(sp)
10003bcc:	90c0008c 	andi	r3,r18,2
10003bd0:	d8c02c15 	stw	r3,176(sp)
10003bd4:	18000326 	beq	r3,zero,10003be4 <___vfprintf_internal_r+0x7a8>
10003bd8:	d8c02917 	ldw	r3,164(sp)
10003bdc:	18c00084 	addi	r3,r3,2
10003be0:	d8c02915 	stw	r3,164(sp)
10003be4:	90c0210c 	andi	r3,r18,132
10003be8:	d8c03015 	stw	r3,192(sp)
10003bec:	1801c51e 	bne	r3,zero,10004304 <___vfprintf_internal_r+0xec8>
10003bf0:	d9003117 	ldw	r4,196(sp)
10003bf4:	d8c02917 	ldw	r3,164(sp)
10003bf8:	20e7c83a 	sub	r19,r4,r3
10003bfc:	04c1c10e 	bge	zero,r19,10004304 <___vfprintf_internal_r+0xec8>
10003c00:	02400404 	movi	r9,16
10003c04:	d8c02017 	ldw	r3,128(sp)
10003c08:	d8801f17 	ldw	r2,124(sp)
10003c0c:	4cc52f0e 	bge	r9,r19,100050cc <___vfprintf_internal_r+0x1c90>
10003c10:	01440074 	movhi	r5,4097
10003c14:	294ff184 	addi	r5,r5,16326
10003c18:	dc403b15 	stw	r17,236(sp)
10003c1c:	d9403515 	stw	r5,212(sp)
10003c20:	9823883a 	mov	r17,r19
10003c24:	482d883a 	mov	r22,r9
10003c28:	9027883a 	mov	r19,r18
10003c2c:	070001c4 	movi	fp,7
10003c30:	8025883a 	mov	r18,r16
10003c34:	dc002d17 	ldw	r16,180(sp)
10003c38:	00000306 	br	10003c48 <___vfprintf_internal_r+0x80c>
10003c3c:	8c7ffc04 	addi	r17,r17,-16
10003c40:	42000204 	addi	r8,r8,8
10003c44:	b440130e 	bge	r22,r17,10003c94 <___vfprintf_internal_r+0x858>
10003c48:	01040074 	movhi	r4,4097
10003c4c:	18c00404 	addi	r3,r3,16
10003c50:	10800044 	addi	r2,r2,1
10003c54:	210ff184 	addi	r4,r4,16326
10003c58:	41000015 	stw	r4,0(r8)
10003c5c:	45800115 	stw	r22,4(r8)
10003c60:	d8c02015 	stw	r3,128(sp)
10003c64:	d8801f15 	stw	r2,124(sp)
10003c68:	e0bff40e 	bge	fp,r2,10003c3c <__alt_data_end+0xf8003c3c>
10003c6c:	d9801e04 	addi	r6,sp,120
10003c70:	b80b883a 	mov	r5,r23
10003c74:	8009883a 	mov	r4,r16
10003c78:	000c18c0 	call	1000c18c <__sprint_r>
10003c7c:	103ef31e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10003c80:	8c7ffc04 	addi	r17,r17,-16
10003c84:	d8c02017 	ldw	r3,128(sp)
10003c88:	d8801f17 	ldw	r2,124(sp)
10003c8c:	da000404 	addi	r8,sp,16
10003c90:	b47fed16 	blt	r22,r17,10003c48 <__alt_data_end+0xf8003c48>
10003c94:	9021883a 	mov	r16,r18
10003c98:	9825883a 	mov	r18,r19
10003c9c:	8827883a 	mov	r19,r17
10003ca0:	dc403b17 	ldw	r17,236(sp)
10003ca4:	d9403517 	ldw	r5,212(sp)
10003ca8:	98c7883a 	add	r3,r19,r3
10003cac:	10800044 	addi	r2,r2,1
10003cb0:	41400015 	stw	r5,0(r8)
10003cb4:	44c00115 	stw	r19,4(r8)
10003cb8:	d8c02015 	stw	r3,128(sp)
10003cbc:	d8801f15 	stw	r2,124(sp)
10003cc0:	010001c4 	movi	r4,7
10003cc4:	2082c516 	blt	r4,r2,100047dc <___vfprintf_internal_r+0x13a0>
10003cc8:	df002787 	ldb	fp,158(sp)
10003ccc:	42000204 	addi	r8,r8,8
10003cd0:	e0000c26 	beq	fp,zero,10003d04 <___vfprintf_internal_r+0x8c8>
10003cd4:	d8801f17 	ldw	r2,124(sp)
10003cd8:	d9002784 	addi	r4,sp,158
10003cdc:	18c00044 	addi	r3,r3,1
10003ce0:	10800044 	addi	r2,r2,1
10003ce4:	41000015 	stw	r4,0(r8)
10003ce8:	01000044 	movi	r4,1
10003cec:	41000115 	stw	r4,4(r8)
10003cf0:	d8c02015 	stw	r3,128(sp)
10003cf4:	d8801f15 	stw	r2,124(sp)
10003cf8:	010001c4 	movi	r4,7
10003cfc:	20825e16 	blt	r4,r2,10004678 <___vfprintf_internal_r+0x123c>
10003d00:	42000204 	addi	r8,r8,8
10003d04:	d8802c17 	ldw	r2,176(sp)
10003d08:	10000c26 	beq	r2,zero,10003d3c <___vfprintf_internal_r+0x900>
10003d0c:	d8801f17 	ldw	r2,124(sp)
10003d10:	d9002704 	addi	r4,sp,156
10003d14:	18c00084 	addi	r3,r3,2
10003d18:	10800044 	addi	r2,r2,1
10003d1c:	41000015 	stw	r4,0(r8)
10003d20:	01000084 	movi	r4,2
10003d24:	41000115 	stw	r4,4(r8)
10003d28:	d8c02015 	stw	r3,128(sp)
10003d2c:	d8801f15 	stw	r2,124(sp)
10003d30:	010001c4 	movi	r4,7
10003d34:	20825816 	blt	r4,r2,10004698 <___vfprintf_internal_r+0x125c>
10003d38:	42000204 	addi	r8,r8,8
10003d3c:	d9003017 	ldw	r4,192(sp)
10003d40:	00802004 	movi	r2,128
10003d44:	2081bb26 	beq	r4,r2,10004434 <___vfprintf_internal_r+0xff8>
10003d48:	d9402a17 	ldw	r5,168(sp)
10003d4c:	d8802b17 	ldw	r2,172(sp)
10003d50:	28adc83a 	sub	r22,r5,r2
10003d54:	0580310e 	bge	zero,r22,10003e1c <___vfprintf_internal_r+0x9e0>
10003d58:	07000404 	movi	fp,16
10003d5c:	d8801f17 	ldw	r2,124(sp)
10003d60:	e584360e 	bge	fp,r22,10004e3c <___vfprintf_internal_r+0x1a00>
10003d64:	01440074 	movhi	r5,4097
10003d68:	294fed84 	addi	r5,r5,16310
10003d6c:	dc402a15 	stw	r17,168(sp)
10003d70:	d9402c15 	stw	r5,176(sp)
10003d74:	b023883a 	mov	r17,r22
10003d78:	04c001c4 	movi	r19,7
10003d7c:	a82d883a 	mov	r22,r21
10003d80:	902b883a 	mov	r21,r18
10003d84:	8025883a 	mov	r18,r16
10003d88:	dc002d17 	ldw	r16,180(sp)
10003d8c:	00000306 	br	10003d9c <___vfprintf_internal_r+0x960>
10003d90:	8c7ffc04 	addi	r17,r17,-16
10003d94:	42000204 	addi	r8,r8,8
10003d98:	e440110e 	bge	fp,r17,10003de0 <___vfprintf_internal_r+0x9a4>
10003d9c:	18c00404 	addi	r3,r3,16
10003da0:	10800044 	addi	r2,r2,1
10003da4:	45000015 	stw	r20,0(r8)
10003da8:	47000115 	stw	fp,4(r8)
10003dac:	d8c02015 	stw	r3,128(sp)
10003db0:	d8801f15 	stw	r2,124(sp)
10003db4:	98bff60e 	bge	r19,r2,10003d90 <__alt_data_end+0xf8003d90>
10003db8:	d9801e04 	addi	r6,sp,120
10003dbc:	b80b883a 	mov	r5,r23
10003dc0:	8009883a 	mov	r4,r16
10003dc4:	000c18c0 	call	1000c18c <__sprint_r>
10003dc8:	103ea01e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10003dcc:	8c7ffc04 	addi	r17,r17,-16
10003dd0:	d8c02017 	ldw	r3,128(sp)
10003dd4:	d8801f17 	ldw	r2,124(sp)
10003dd8:	da000404 	addi	r8,sp,16
10003ddc:	e47fef16 	blt	fp,r17,10003d9c <__alt_data_end+0xf8003d9c>
10003de0:	9021883a 	mov	r16,r18
10003de4:	a825883a 	mov	r18,r21
10003de8:	b02b883a 	mov	r21,r22
10003dec:	882d883a 	mov	r22,r17
10003df0:	dc402a17 	ldw	r17,168(sp)
10003df4:	d9002c17 	ldw	r4,176(sp)
10003df8:	1d87883a 	add	r3,r3,r22
10003dfc:	10800044 	addi	r2,r2,1
10003e00:	41000015 	stw	r4,0(r8)
10003e04:	45800115 	stw	r22,4(r8)
10003e08:	d8c02015 	stw	r3,128(sp)
10003e0c:	d8801f15 	stw	r2,124(sp)
10003e10:	010001c4 	movi	r4,7
10003e14:	20821016 	blt	r4,r2,10004658 <___vfprintf_internal_r+0x121c>
10003e18:	42000204 	addi	r8,r8,8
10003e1c:	9080400c 	andi	r2,r18,256
10003e20:	10013a1e 	bne	r2,zero,1000430c <___vfprintf_internal_r+0xed0>
10003e24:	d9402b17 	ldw	r5,172(sp)
10003e28:	d8801f17 	ldw	r2,124(sp)
10003e2c:	44000015 	stw	r16,0(r8)
10003e30:	1947883a 	add	r3,r3,r5
10003e34:	10800044 	addi	r2,r2,1
10003e38:	41400115 	stw	r5,4(r8)
10003e3c:	d8c02015 	stw	r3,128(sp)
10003e40:	d8801f15 	stw	r2,124(sp)
10003e44:	010001c4 	movi	r4,7
10003e48:	2081f516 	blt	r4,r2,10004620 <___vfprintf_internal_r+0x11e4>
10003e4c:	42000204 	addi	r8,r8,8
10003e50:	9480010c 	andi	r18,r18,4
10003e54:	90003226 	beq	r18,zero,10003f20 <___vfprintf_internal_r+0xae4>
10003e58:	d9403117 	ldw	r5,196(sp)
10003e5c:	d8802917 	ldw	r2,164(sp)
10003e60:	28a1c83a 	sub	r16,r5,r2
10003e64:	04002e0e 	bge	zero,r16,10003f20 <___vfprintf_internal_r+0xae4>
10003e68:	04400404 	movi	r17,16
10003e6c:	d8801f17 	ldw	r2,124(sp)
10003e70:	8c04c40e 	bge	r17,r16,10005184 <___vfprintf_internal_r+0x1d48>
10003e74:	01440074 	movhi	r5,4097
10003e78:	294ff184 	addi	r5,r5,16326
10003e7c:	d9403515 	stw	r5,212(sp)
10003e80:	048001c4 	movi	r18,7
10003e84:	dcc02d17 	ldw	r19,180(sp)
10003e88:	00000306 	br	10003e98 <___vfprintf_internal_r+0xa5c>
10003e8c:	843ffc04 	addi	r16,r16,-16
10003e90:	42000204 	addi	r8,r8,8
10003e94:	8c00130e 	bge	r17,r16,10003ee4 <___vfprintf_internal_r+0xaa8>
10003e98:	01040074 	movhi	r4,4097
10003e9c:	18c00404 	addi	r3,r3,16
10003ea0:	10800044 	addi	r2,r2,1
10003ea4:	210ff184 	addi	r4,r4,16326
10003ea8:	41000015 	stw	r4,0(r8)
10003eac:	44400115 	stw	r17,4(r8)
10003eb0:	d8c02015 	stw	r3,128(sp)
10003eb4:	d8801f15 	stw	r2,124(sp)
10003eb8:	90bff40e 	bge	r18,r2,10003e8c <__alt_data_end+0xf8003e8c>
10003ebc:	d9801e04 	addi	r6,sp,120
10003ec0:	b80b883a 	mov	r5,r23
10003ec4:	9809883a 	mov	r4,r19
10003ec8:	000c18c0 	call	1000c18c <__sprint_r>
10003ecc:	103e5f1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10003ed0:	843ffc04 	addi	r16,r16,-16
10003ed4:	d8c02017 	ldw	r3,128(sp)
10003ed8:	d8801f17 	ldw	r2,124(sp)
10003edc:	da000404 	addi	r8,sp,16
10003ee0:	8c3fed16 	blt	r17,r16,10003e98 <__alt_data_end+0xf8003e98>
10003ee4:	d9403517 	ldw	r5,212(sp)
10003ee8:	1c07883a 	add	r3,r3,r16
10003eec:	10800044 	addi	r2,r2,1
10003ef0:	41400015 	stw	r5,0(r8)
10003ef4:	44000115 	stw	r16,4(r8)
10003ef8:	d8c02015 	stw	r3,128(sp)
10003efc:	d8801f15 	stw	r2,124(sp)
10003f00:	010001c4 	movi	r4,7
10003f04:	2080060e 	bge	r4,r2,10003f20 <___vfprintf_internal_r+0xae4>
10003f08:	d9002d17 	ldw	r4,180(sp)
10003f0c:	d9801e04 	addi	r6,sp,120
10003f10:	b80b883a 	mov	r5,r23
10003f14:	000c18c0 	call	1000c18c <__sprint_r>
10003f18:	103e4c1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10003f1c:	d8c02017 	ldw	r3,128(sp)
10003f20:	d8803117 	ldw	r2,196(sp)
10003f24:	d9002917 	ldw	r4,164(sp)
10003f28:	1100010e 	bge	r2,r4,10003f30 <___vfprintf_internal_r+0xaf4>
10003f2c:	2005883a 	mov	r2,r4
10003f30:	d9402f17 	ldw	r5,188(sp)
10003f34:	288b883a 	add	r5,r5,r2
10003f38:	d9402f15 	stw	r5,188(sp)
10003f3c:	1801c01e 	bne	r3,zero,10004640 <___vfprintf_internal_r+0x1204>
10003f40:	a8800007 	ldb	r2,0(r21)
10003f44:	d8001f15 	stw	zero,124(sp)
10003f48:	da000404 	addi	r8,sp,16
10003f4c:	103d751e 	bne	r2,zero,10003524 <__alt_data_end+0xf8003524>
10003f50:	a823883a 	mov	r17,r21
10003f54:	003d8b06 	br	10003584 <__alt_data_end+0xf8003584>
10003f58:	8025883a 	mov	r18,r16
10003f5c:	dc002903 	ldbu	r16,164(sp)
10003f60:	e011883a 	mov	r8,fp
10003f64:	84003fcc 	andi	r16,r16,255
10003f68:	8005e51e 	bne	r16,zero,10005700 <___vfprintf_internal_r+0x22c4>
10003f6c:	94800414 	ori	r18,r18,16
10003f70:	9080080c 	andi	r2,r18,32
10003f74:	10022b26 	beq	r2,zero,10004824 <___vfprintf_internal_r+0x13e8>
10003f78:	d9002e17 	ldw	r4,184(sp)
10003f7c:	d9402a17 	ldw	r5,168(sp)
10003f80:	d8002785 	stb	zero,158(sp)
10003f84:	20c00204 	addi	r3,r4,8
10003f88:	24c00017 	ldw	r19,0(r4)
10003f8c:	25800117 	ldw	r22,4(r4)
10003f90:	28042e16 	blt	r5,zero,1000504c <___vfprintf_internal_r+0x1c10>
10003f94:	013fdfc4 	movi	r4,-129
10003f98:	9d84b03a 	or	r2,r19,r22
10003f9c:	d8c02e15 	stw	r3,184(sp)
10003fa0:	9124703a 	and	r18,r18,r4
10003fa4:	0039883a 	mov	fp,zero
10003fa8:	103e801e 	bne	r2,zero,100039ac <__alt_data_end+0xf80039ac>
10003fac:	d9002a17 	ldw	r4,168(sp)
10003fb0:	2002e01e 	bne	r4,zero,10004b34 <___vfprintf_internal_r+0x16f8>
10003fb4:	d8002a15 	stw	zero,168(sp)
10003fb8:	d8002b15 	stw	zero,172(sp)
10003fbc:	dc001e04 	addi	r16,sp,120
10003fc0:	003ef506 	br	10003b98 <__alt_data_end+0xf8003b98>
10003fc4:	8025883a 	mov	r18,r16
10003fc8:	dc002903 	ldbu	r16,164(sp)
10003fcc:	e011883a 	mov	r8,fp
10003fd0:	84003fcc 	andi	r16,r16,255
10003fd4:	8005ba1e 	bne	r16,zero,100056c0 <___vfprintf_internal_r+0x2284>
10003fd8:	01040074 	movhi	r4,4097
10003fdc:	210fd904 	addi	r4,r4,16228
10003fe0:	d9003915 	stw	r4,228(sp)
10003fe4:	9080080c 	andi	r2,r18,32
10003fe8:	10006126 	beq	r2,zero,10004170 <___vfprintf_internal_r+0xd34>
10003fec:	d9402e17 	ldw	r5,184(sp)
10003ff0:	2cc00017 	ldw	r19,0(r5)
10003ff4:	2d800117 	ldw	r22,4(r5)
10003ff8:	29400204 	addi	r5,r5,8
10003ffc:	d9402e15 	stw	r5,184(sp)
10004000:	9080004c 	andi	r2,r18,1
10004004:	1001ac26 	beq	r2,zero,100046b8 <___vfprintf_internal_r+0x127c>
10004008:	9d84b03a 	or	r2,r19,r22
1000400c:	10038526 	beq	r2,zero,10004e24 <___vfprintf_internal_r+0x19e8>
10004010:	d8c02a17 	ldw	r3,168(sp)
10004014:	00800c04 	movi	r2,48
10004018:	d8802705 	stb	r2,156(sp)
1000401c:	dc402745 	stb	r17,157(sp)
10004020:	d8002785 	stb	zero,158(sp)
10004024:	90800094 	ori	r2,r18,2
10004028:	18047916 	blt	r3,zero,10005210 <___vfprintf_internal_r+0x1dd4>
1000402c:	00bfdfc4 	movi	r2,-129
10004030:	90a4703a 	and	r18,r18,r2
10004034:	94800094 	ori	r18,r18,2
10004038:	0039883a 	mov	fp,zero
1000403c:	d9003917 	ldw	r4,228(sp)
10004040:	dc001e04 	addi	r16,sp,120
10004044:	988003cc 	andi	r2,r19,15
10004048:	b006973a 	slli	r3,r22,28
1000404c:	2085883a 	add	r2,r4,r2
10004050:	9826d13a 	srli	r19,r19,4
10004054:	10800003 	ldbu	r2,0(r2)
10004058:	b02cd13a 	srli	r22,r22,4
1000405c:	843fffc4 	addi	r16,r16,-1
10004060:	1ce6b03a 	or	r19,r3,r19
10004064:	80800005 	stb	r2,0(r16)
10004068:	9d84b03a 	or	r2,r19,r22
1000406c:	103ff51e 	bne	r2,zero,10004044 <__alt_data_end+0xf8004044>
10004070:	d8c02817 	ldw	r3,160(sp)
10004074:	1c07c83a 	sub	r3,r3,r16
10004078:	d8c02b15 	stw	r3,172(sp)
1000407c:	003ec606 	br	10003b98 <__alt_data_end+0xf8003b98>
10004080:	8025883a 	mov	r18,r16
10004084:	dc002903 	ldbu	r16,164(sp)
10004088:	e011883a 	mov	r8,fp
1000408c:	84003fcc 	andi	r16,r16,255
10004090:	803e9626 	beq	r16,zero,10003aec <__alt_data_end+0xf8003aec>
10004094:	d8c02b03 	ldbu	r3,172(sp)
10004098:	d8c02785 	stb	r3,158(sp)
1000409c:	003e9306 	br	10003aec <__alt_data_end+0xf8003aec>
100040a0:	00c00044 	movi	r3,1
100040a4:	d8c02905 	stb	r3,164(sp)
100040a8:	00c00ac4 	movi	r3,43
100040ac:	d8c02b05 	stb	r3,172(sp)
100040b0:	ac400007 	ldb	r17,0(r21)
100040b4:	003d4306 	br	100035c4 <__alt_data_end+0xf80035c4>
100040b8:	84000814 	ori	r16,r16,32
100040bc:	ac400007 	ldb	r17,0(r21)
100040c0:	003d4006 	br	100035c4 <__alt_data_end+0xf80035c4>
100040c4:	d8802e17 	ldw	r2,184(sp)
100040c8:	8025883a 	mov	r18,r16
100040cc:	d8002785 	stb	zero,158(sp)
100040d0:	14000017 	ldw	r16,0(r2)
100040d4:	e011883a 	mov	r8,fp
100040d8:	14c00104 	addi	r19,r2,4
100040dc:	80042d26 	beq	r16,zero,10005194 <___vfprintf_internal_r+0x1d58>
100040e0:	d8c02a17 	ldw	r3,168(sp)
100040e4:	1803e416 	blt	r3,zero,10005078 <___vfprintf_internal_r+0x1c3c>
100040e8:	180d883a 	mov	r6,r3
100040ec:	000b883a 	mov	r5,zero
100040f0:	8009883a 	mov	r4,r16
100040f4:	df003d15 	stw	fp,244(sp)
100040f8:	0008d740 	call	10008d74 <memchr>
100040fc:	da003d17 	ldw	r8,244(sp)
10004100:	10046826 	beq	r2,zero,100052a4 <___vfprintf_internal_r+0x1e68>
10004104:	1405c83a 	sub	r2,r2,r16
10004108:	d8802b15 	stw	r2,172(sp)
1000410c:	1003e016 	blt	r2,zero,10005090 <___vfprintf_internal_r+0x1c54>
10004110:	df002783 	ldbu	fp,158(sp)
10004114:	d8802915 	stw	r2,164(sp)
10004118:	dcc02e15 	stw	r19,184(sp)
1000411c:	d8002a15 	stw	zero,168(sp)
10004120:	d8003215 	stw	zero,200(sp)
10004124:	003ea206 	br	10003bb0 <__alt_data_end+0xf8003bb0>
10004128:	8025883a 	mov	r18,r16
1000412c:	dc002903 	ldbu	r16,164(sp)
10004130:	e011883a 	mov	r8,fp
10004134:	84003fcc 	andi	r16,r16,255
10004138:	803f8d26 	beq	r16,zero,10003f70 <__alt_data_end+0xf8003f70>
1000413c:	d8c02b03 	ldbu	r3,172(sp)
10004140:	d8c02785 	stb	r3,158(sp)
10004144:	003f8a06 	br	10003f70 <__alt_data_end+0xf8003f70>
10004148:	8025883a 	mov	r18,r16
1000414c:	dc002903 	ldbu	r16,164(sp)
10004150:	e011883a 	mov	r8,fp
10004154:	84003fcc 	andi	r16,r16,255
10004158:	8005661e 	bne	r16,zero,100056f4 <___vfprintf_internal_r+0x22b8>
1000415c:	01040074 	movhi	r4,4097
10004160:	210fde04 	addi	r4,r4,16248
10004164:	d9003915 	stw	r4,228(sp)
10004168:	9080080c 	andi	r2,r18,32
1000416c:	103f9f1e 	bne	r2,zero,10003fec <__alt_data_end+0xf8003fec>
10004170:	9080040c 	andi	r2,r18,16
10004174:	1002eb26 	beq	r2,zero,10004d24 <___vfprintf_internal_r+0x18e8>
10004178:	d8802e17 	ldw	r2,184(sp)
1000417c:	002d883a 	mov	r22,zero
10004180:	14c00017 	ldw	r19,0(r2)
10004184:	10800104 	addi	r2,r2,4
10004188:	d8802e15 	stw	r2,184(sp)
1000418c:	003f9c06 	br	10004000 <__alt_data_end+0xf8004000>
10004190:	d8802b07 	ldb	r2,172(sp)
10004194:	1002e11e 	bne	r2,zero,10004d1c <___vfprintf_internal_r+0x18e0>
10004198:	00c00044 	movi	r3,1
1000419c:	d8c02905 	stb	r3,164(sp)
100041a0:	00c00804 	movi	r3,32
100041a4:	d8c02b05 	stb	r3,172(sp)
100041a8:	ac400007 	ldb	r17,0(r21)
100041ac:	003d0506 	br	100035c4 <__alt_data_end+0xf80035c4>
100041b0:	84000054 	ori	r16,r16,1
100041b4:	ac400007 	ldb	r17,0(r21)
100041b8:	003d0206 	br	100035c4 <__alt_data_end+0xf80035c4>
100041bc:	8025883a 	mov	r18,r16
100041c0:	dc002903 	ldbu	r16,164(sp)
100041c4:	e011883a 	mov	r8,fp
100041c8:	84003fcc 	andi	r16,r16,255
100041cc:	803de726 	beq	r16,zero,1000396c <__alt_data_end+0xf800396c>
100041d0:	d8c02b03 	ldbu	r3,172(sp)
100041d4:	d8c02785 	stb	r3,158(sp)
100041d8:	003de406 	br	1000396c <__alt_data_end+0xf800396c>
100041dc:	84001014 	ori	r16,r16,64
100041e0:	ac400007 	ldb	r17,0(r21)
100041e4:	003cf706 	br	100035c4 <__alt_data_end+0xf80035c4>
100041e8:	ac400007 	ldb	r17,0(r21)
100041ec:	00801b04 	movi	r2,108
100041f0:	88838f26 	beq	r17,r2,10005030 <___vfprintf_internal_r+0x1bf4>
100041f4:	84000414 	ori	r16,r16,16
100041f8:	003cf206 	br	100035c4 <__alt_data_end+0xf80035c4>
100041fc:	8025883a 	mov	r18,r16
10004200:	dc002903 	ldbu	r16,164(sp)
10004204:	e011883a 	mov	r8,fp
10004208:	84003fcc 	andi	r16,r16,255
1000420c:	80053f1e 	bne	r16,zero,1000570c <___vfprintf_internal_r+0x22d0>
10004210:	9080080c 	andi	r2,r18,32
10004214:	1002d226 	beq	r2,zero,10004d60 <___vfprintf_internal_r+0x1924>
10004218:	d9002e17 	ldw	r4,184(sp)
1000421c:	d9402f17 	ldw	r5,188(sp)
10004220:	20800017 	ldw	r2,0(r4)
10004224:	2807d7fa 	srai	r3,r5,31
10004228:	21000104 	addi	r4,r4,4
1000422c:	d9002e15 	stw	r4,184(sp)
10004230:	11400015 	stw	r5,0(r2)
10004234:	10c00115 	stw	r3,4(r2)
10004238:	003cb806 	br	1000351c <__alt_data_end+0xf800351c>
1000423c:	d8c02e17 	ldw	r3,184(sp)
10004240:	d9002e17 	ldw	r4,184(sp)
10004244:	8025883a 	mov	r18,r16
10004248:	18800017 	ldw	r2,0(r3)
1000424c:	21000104 	addi	r4,r4,4
10004250:	00c00044 	movi	r3,1
10004254:	e011883a 	mov	r8,fp
10004258:	d8c02915 	stw	r3,164(sp)
1000425c:	d8002785 	stb	zero,158(sp)
10004260:	d8801405 	stb	r2,80(sp)
10004264:	d9002e15 	stw	r4,184(sp)
10004268:	d8c02b15 	stw	r3,172(sp)
1000426c:	d8002a15 	stw	zero,168(sp)
10004270:	d8003215 	stw	zero,200(sp)
10004274:	dc001404 	addi	r16,sp,80
10004278:	0039883a 	mov	fp,zero
1000427c:	003e5306 	br	10003bcc <__alt_data_end+0xf8003bcc>
10004280:	01040074 	movhi	r4,4097
10004284:	210fde04 	addi	r4,r4,16248
10004288:	0039883a 	mov	fp,zero
1000428c:	d9003915 	stw	r4,228(sp)
10004290:	04401e04 	movi	r17,120
10004294:	003f6906 	br	1000403c <__alt_data_end+0xf800403c>
10004298:	8025883a 	mov	r18,r16
1000429c:	dc002903 	ldbu	r16,164(sp)
100042a0:	e011883a 	mov	r8,fp
100042a4:	84003fcc 	andi	r16,r16,255
100042a8:	8005081e 	bne	r16,zero,100056cc <___vfprintf_internal_r+0x2290>
100042ac:	883d6126 	beq	r17,zero,10003834 <__alt_data_end+0xf8003834>
100042b0:	00c00044 	movi	r3,1
100042b4:	d8c02915 	stw	r3,164(sp)
100042b8:	dc401405 	stb	r17,80(sp)
100042bc:	d8002785 	stb	zero,158(sp)
100042c0:	003fe906 	br	10004268 <__alt_data_end+0xf8004268>
100042c4:	01440074 	movhi	r5,4097
100042c8:	294fde04 	addi	r5,r5,16248
100042cc:	d9403915 	stw	r5,228(sp)
100042d0:	d8c02e15 	stw	r3,184(sp)
100042d4:	1025883a 	mov	r18,r2
100042d8:	04401e04 	movi	r17,120
100042dc:	9d84b03a 	or	r2,r19,r22
100042e0:	1000fc1e 	bne	r2,zero,100046d4 <___vfprintf_internal_r+0x1298>
100042e4:	0039883a 	mov	fp,zero
100042e8:	00800084 	movi	r2,2
100042ec:	10803fcc 	andi	r2,r2,255
100042f0:	00c00044 	movi	r3,1
100042f4:	10c20f26 	beq	r2,r3,10004b34 <___vfprintf_internal_r+0x16f8>
100042f8:	00c00084 	movi	r3,2
100042fc:	10fd3326 	beq	r2,r3,100037cc <__alt_data_end+0xf80037cc>
10004300:	003e0b06 	br	10003b30 <__alt_data_end+0xf8003b30>
10004304:	d8c02017 	ldw	r3,128(sp)
10004308:	003e7106 	br	10003cd0 <__alt_data_end+0xf8003cd0>
1000430c:	00801944 	movi	r2,101
10004310:	14407e0e 	bge	r2,r17,1000450c <___vfprintf_internal_r+0x10d0>
10004314:	d9003617 	ldw	r4,216(sp)
10004318:	d9403817 	ldw	r5,224(sp)
1000431c:	000d883a 	mov	r6,zero
10004320:	000f883a 	mov	r7,zero
10004324:	d8c03c15 	stw	r3,240(sp)
10004328:	da003d15 	stw	r8,244(sp)
1000432c:	001001c0 	call	1001001c <__eqdf2>
10004330:	d8c03c17 	ldw	r3,240(sp)
10004334:	da003d17 	ldw	r8,244(sp)
10004338:	1000f71e 	bne	r2,zero,10004718 <___vfprintf_internal_r+0x12dc>
1000433c:	d8801f17 	ldw	r2,124(sp)
10004340:	01040074 	movhi	r4,4097
10004344:	210fe504 	addi	r4,r4,16276
10004348:	18c00044 	addi	r3,r3,1
1000434c:	10800044 	addi	r2,r2,1
10004350:	41000015 	stw	r4,0(r8)
10004354:	01000044 	movi	r4,1
10004358:	41000115 	stw	r4,4(r8)
1000435c:	d8c02015 	stw	r3,128(sp)
10004360:	d8801f15 	stw	r2,124(sp)
10004364:	010001c4 	movi	r4,7
10004368:	2082b816 	blt	r4,r2,10004e4c <___vfprintf_internal_r+0x1a10>
1000436c:	42000204 	addi	r8,r8,8
10004370:	d8802617 	ldw	r2,152(sp)
10004374:	d9403317 	ldw	r5,204(sp)
10004378:	11400216 	blt	r2,r5,10004384 <___vfprintf_internal_r+0xf48>
1000437c:	9080004c 	andi	r2,r18,1
10004380:	103eb326 	beq	r2,zero,10003e50 <__alt_data_end+0xf8003e50>
10004384:	d8803717 	ldw	r2,220(sp)
10004388:	d9003417 	ldw	r4,208(sp)
1000438c:	d9403717 	ldw	r5,220(sp)
10004390:	1887883a 	add	r3,r3,r2
10004394:	d8801f17 	ldw	r2,124(sp)
10004398:	41000015 	stw	r4,0(r8)
1000439c:	41400115 	stw	r5,4(r8)
100043a0:	10800044 	addi	r2,r2,1
100043a4:	d8c02015 	stw	r3,128(sp)
100043a8:	d8801f15 	stw	r2,124(sp)
100043ac:	010001c4 	movi	r4,7
100043b0:	20832916 	blt	r4,r2,10005058 <___vfprintf_internal_r+0x1c1c>
100043b4:	42000204 	addi	r8,r8,8
100043b8:	d8803317 	ldw	r2,204(sp)
100043bc:	143fffc4 	addi	r16,r2,-1
100043c0:	043ea30e 	bge	zero,r16,10003e50 <__alt_data_end+0xf8003e50>
100043c4:	04400404 	movi	r17,16
100043c8:	d8801f17 	ldw	r2,124(sp)
100043cc:	8c00880e 	bge	r17,r16,100045f0 <___vfprintf_internal_r+0x11b4>
100043d0:	01440074 	movhi	r5,4097
100043d4:	294fed84 	addi	r5,r5,16310
100043d8:	d9402c15 	stw	r5,176(sp)
100043dc:	058001c4 	movi	r22,7
100043e0:	dcc02d17 	ldw	r19,180(sp)
100043e4:	00000306 	br	100043f4 <___vfprintf_internal_r+0xfb8>
100043e8:	42000204 	addi	r8,r8,8
100043ec:	843ffc04 	addi	r16,r16,-16
100043f0:	8c00820e 	bge	r17,r16,100045fc <___vfprintf_internal_r+0x11c0>
100043f4:	18c00404 	addi	r3,r3,16
100043f8:	10800044 	addi	r2,r2,1
100043fc:	45000015 	stw	r20,0(r8)
10004400:	44400115 	stw	r17,4(r8)
10004404:	d8c02015 	stw	r3,128(sp)
10004408:	d8801f15 	stw	r2,124(sp)
1000440c:	b0bff60e 	bge	r22,r2,100043e8 <__alt_data_end+0xf80043e8>
10004410:	d9801e04 	addi	r6,sp,120
10004414:	b80b883a 	mov	r5,r23
10004418:	9809883a 	mov	r4,r19
1000441c:	000c18c0 	call	1000c18c <__sprint_r>
10004420:	103d0a1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004424:	d8c02017 	ldw	r3,128(sp)
10004428:	d8801f17 	ldw	r2,124(sp)
1000442c:	da000404 	addi	r8,sp,16
10004430:	003fee06 	br	100043ec <__alt_data_end+0xf80043ec>
10004434:	d9403117 	ldw	r5,196(sp)
10004438:	d8802917 	ldw	r2,164(sp)
1000443c:	28adc83a 	sub	r22,r5,r2
10004440:	05be410e 	bge	zero,r22,10003d48 <__alt_data_end+0xf8003d48>
10004444:	07000404 	movi	fp,16
10004448:	d8801f17 	ldw	r2,124(sp)
1000444c:	e5838f0e 	bge	fp,r22,1000528c <___vfprintf_internal_r+0x1e50>
10004450:	01440074 	movhi	r5,4097
10004454:	294fed84 	addi	r5,r5,16310
10004458:	dc403015 	stw	r17,192(sp)
1000445c:	d9402c15 	stw	r5,176(sp)
10004460:	b023883a 	mov	r17,r22
10004464:	04c001c4 	movi	r19,7
10004468:	a82d883a 	mov	r22,r21
1000446c:	902b883a 	mov	r21,r18
10004470:	8025883a 	mov	r18,r16
10004474:	dc002d17 	ldw	r16,180(sp)
10004478:	00000306 	br	10004488 <___vfprintf_internal_r+0x104c>
1000447c:	8c7ffc04 	addi	r17,r17,-16
10004480:	42000204 	addi	r8,r8,8
10004484:	e440110e 	bge	fp,r17,100044cc <___vfprintf_internal_r+0x1090>
10004488:	18c00404 	addi	r3,r3,16
1000448c:	10800044 	addi	r2,r2,1
10004490:	45000015 	stw	r20,0(r8)
10004494:	47000115 	stw	fp,4(r8)
10004498:	d8c02015 	stw	r3,128(sp)
1000449c:	d8801f15 	stw	r2,124(sp)
100044a0:	98bff60e 	bge	r19,r2,1000447c <__alt_data_end+0xf800447c>
100044a4:	d9801e04 	addi	r6,sp,120
100044a8:	b80b883a 	mov	r5,r23
100044ac:	8009883a 	mov	r4,r16
100044b0:	000c18c0 	call	1000c18c <__sprint_r>
100044b4:	103ce51e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
100044b8:	8c7ffc04 	addi	r17,r17,-16
100044bc:	d8c02017 	ldw	r3,128(sp)
100044c0:	d8801f17 	ldw	r2,124(sp)
100044c4:	da000404 	addi	r8,sp,16
100044c8:	e47fef16 	blt	fp,r17,10004488 <__alt_data_end+0xf8004488>
100044cc:	9021883a 	mov	r16,r18
100044d0:	a825883a 	mov	r18,r21
100044d4:	b02b883a 	mov	r21,r22
100044d8:	882d883a 	mov	r22,r17
100044dc:	dc403017 	ldw	r17,192(sp)
100044e0:	d9002c17 	ldw	r4,176(sp)
100044e4:	1d87883a 	add	r3,r3,r22
100044e8:	10800044 	addi	r2,r2,1
100044ec:	41000015 	stw	r4,0(r8)
100044f0:	45800115 	stw	r22,4(r8)
100044f4:	d8c02015 	stw	r3,128(sp)
100044f8:	d8801f15 	stw	r2,124(sp)
100044fc:	010001c4 	movi	r4,7
10004500:	20818e16 	blt	r4,r2,10004b3c <___vfprintf_internal_r+0x1700>
10004504:	42000204 	addi	r8,r8,8
10004508:	003e0f06 	br	10003d48 <__alt_data_end+0xf8003d48>
1000450c:	d9403317 	ldw	r5,204(sp)
10004510:	00800044 	movi	r2,1
10004514:	18c00044 	addi	r3,r3,1
10004518:	1141530e 	bge	r2,r5,10004a68 <___vfprintf_internal_r+0x162c>
1000451c:	dc401f17 	ldw	r17,124(sp)
10004520:	00800044 	movi	r2,1
10004524:	40800115 	stw	r2,4(r8)
10004528:	8c400044 	addi	r17,r17,1
1000452c:	44000015 	stw	r16,0(r8)
10004530:	d8c02015 	stw	r3,128(sp)
10004534:	dc401f15 	stw	r17,124(sp)
10004538:	008001c4 	movi	r2,7
1000453c:	14416b16 	blt	r2,r17,10004aec <___vfprintf_internal_r+0x16b0>
10004540:	42000204 	addi	r8,r8,8
10004544:	d8803717 	ldw	r2,220(sp)
10004548:	d9003417 	ldw	r4,208(sp)
1000454c:	8c400044 	addi	r17,r17,1
10004550:	10c7883a 	add	r3,r2,r3
10004554:	40800115 	stw	r2,4(r8)
10004558:	41000015 	stw	r4,0(r8)
1000455c:	d8c02015 	stw	r3,128(sp)
10004560:	dc401f15 	stw	r17,124(sp)
10004564:	008001c4 	movi	r2,7
10004568:	14416916 	blt	r2,r17,10004b10 <___vfprintf_internal_r+0x16d4>
1000456c:	45800204 	addi	r22,r8,8
10004570:	d9003617 	ldw	r4,216(sp)
10004574:	d9403817 	ldw	r5,224(sp)
10004578:	000d883a 	mov	r6,zero
1000457c:	000f883a 	mov	r7,zero
10004580:	d8c03c15 	stw	r3,240(sp)
10004584:	001001c0 	call	1001001c <__eqdf2>
10004588:	d8c03c17 	ldw	r3,240(sp)
1000458c:	1000bc26 	beq	r2,zero,10004880 <___vfprintf_internal_r+0x1444>
10004590:	d9403317 	ldw	r5,204(sp)
10004594:	84000044 	addi	r16,r16,1
10004598:	8c400044 	addi	r17,r17,1
1000459c:	28bfffc4 	addi	r2,r5,-1
100045a0:	1887883a 	add	r3,r3,r2
100045a4:	b0800115 	stw	r2,4(r22)
100045a8:	b4000015 	stw	r16,0(r22)
100045ac:	d8c02015 	stw	r3,128(sp)
100045b0:	dc401f15 	stw	r17,124(sp)
100045b4:	008001c4 	movi	r2,7
100045b8:	14414316 	blt	r2,r17,10004ac8 <___vfprintf_internal_r+0x168c>
100045bc:	b5800204 	addi	r22,r22,8
100045c0:	d9003a17 	ldw	r4,232(sp)
100045c4:	df0022c4 	addi	fp,sp,139
100045c8:	8c400044 	addi	r17,r17,1
100045cc:	20c7883a 	add	r3,r4,r3
100045d0:	b7000015 	stw	fp,0(r22)
100045d4:	b1000115 	stw	r4,4(r22)
100045d8:	d8c02015 	stw	r3,128(sp)
100045dc:	dc401f15 	stw	r17,124(sp)
100045e0:	008001c4 	movi	r2,7
100045e4:	14400e16 	blt	r2,r17,10004620 <___vfprintf_internal_r+0x11e4>
100045e8:	b2000204 	addi	r8,r22,8
100045ec:	003e1806 	br	10003e50 <__alt_data_end+0xf8003e50>
100045f0:	01040074 	movhi	r4,4097
100045f4:	210fed84 	addi	r4,r4,16310
100045f8:	d9002c15 	stw	r4,176(sp)
100045fc:	d9002c17 	ldw	r4,176(sp)
10004600:	1c07883a 	add	r3,r3,r16
10004604:	44000115 	stw	r16,4(r8)
10004608:	41000015 	stw	r4,0(r8)
1000460c:	10800044 	addi	r2,r2,1
10004610:	d8c02015 	stw	r3,128(sp)
10004614:	d8801f15 	stw	r2,124(sp)
10004618:	010001c4 	movi	r4,7
1000461c:	20be0b0e 	bge	r4,r2,10003e4c <__alt_data_end+0xf8003e4c>
10004620:	d9002d17 	ldw	r4,180(sp)
10004624:	d9801e04 	addi	r6,sp,120
10004628:	b80b883a 	mov	r5,r23
1000462c:	000c18c0 	call	1000c18c <__sprint_r>
10004630:	103c861e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004634:	d8c02017 	ldw	r3,128(sp)
10004638:	da000404 	addi	r8,sp,16
1000463c:	003e0406 	br	10003e50 <__alt_data_end+0xf8003e50>
10004640:	d9002d17 	ldw	r4,180(sp)
10004644:	d9801e04 	addi	r6,sp,120
10004648:	b80b883a 	mov	r5,r23
1000464c:	000c18c0 	call	1000c18c <__sprint_r>
10004650:	103e3b26 	beq	r2,zero,10003f40 <__alt_data_end+0xf8003f40>
10004654:	003c7d06 	br	1000384c <__alt_data_end+0xf800384c>
10004658:	d9002d17 	ldw	r4,180(sp)
1000465c:	d9801e04 	addi	r6,sp,120
10004660:	b80b883a 	mov	r5,r23
10004664:	000c18c0 	call	1000c18c <__sprint_r>
10004668:	103c781e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
1000466c:	d8c02017 	ldw	r3,128(sp)
10004670:	da000404 	addi	r8,sp,16
10004674:	003de906 	br	10003e1c <__alt_data_end+0xf8003e1c>
10004678:	d9002d17 	ldw	r4,180(sp)
1000467c:	d9801e04 	addi	r6,sp,120
10004680:	b80b883a 	mov	r5,r23
10004684:	000c18c0 	call	1000c18c <__sprint_r>
10004688:	103c701e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
1000468c:	d8c02017 	ldw	r3,128(sp)
10004690:	da000404 	addi	r8,sp,16
10004694:	003d9b06 	br	10003d04 <__alt_data_end+0xf8003d04>
10004698:	d9002d17 	ldw	r4,180(sp)
1000469c:	d9801e04 	addi	r6,sp,120
100046a0:	b80b883a 	mov	r5,r23
100046a4:	000c18c0 	call	1000c18c <__sprint_r>
100046a8:	103c681e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
100046ac:	d8c02017 	ldw	r3,128(sp)
100046b0:	da000404 	addi	r8,sp,16
100046b4:	003da106 	br	10003d3c <__alt_data_end+0xf8003d3c>
100046b8:	d9402a17 	ldw	r5,168(sp)
100046bc:	d8002785 	stb	zero,158(sp)
100046c0:	283f0616 	blt	r5,zero,100042dc <__alt_data_end+0xf80042dc>
100046c4:	00ffdfc4 	movi	r3,-129
100046c8:	9d84b03a 	or	r2,r19,r22
100046cc:	90e4703a 	and	r18,r18,r3
100046d0:	103c3b26 	beq	r2,zero,100037c0 <__alt_data_end+0xf80037c0>
100046d4:	0039883a 	mov	fp,zero
100046d8:	003e5806 	br	1000403c <__alt_data_end+0xf800403c>
100046dc:	9080040c 	andi	r2,r18,16
100046e0:	1001b326 	beq	r2,zero,10004db0 <___vfprintf_internal_r+0x1974>
100046e4:	d8c02e17 	ldw	r3,184(sp)
100046e8:	d9002a17 	ldw	r4,168(sp)
100046ec:	d8002785 	stb	zero,158(sp)
100046f0:	18800104 	addi	r2,r3,4
100046f4:	1cc00017 	ldw	r19,0(r3)
100046f8:	002d883a 	mov	r22,zero
100046fc:	2001b516 	blt	r4,zero,10004dd4 <___vfprintf_internal_r+0x1998>
10004700:	00ffdfc4 	movi	r3,-129
10004704:	d8802e15 	stw	r2,184(sp)
10004708:	90e4703a 	and	r18,r18,r3
1000470c:	983d0526 	beq	r19,zero,10003b24 <__alt_data_end+0xf8003b24>
10004710:	0039883a 	mov	fp,zero
10004714:	003d0806 	br	10003b38 <__alt_data_end+0xf8003b38>
10004718:	dc402617 	ldw	r17,152(sp)
1000471c:	0441d30e 	bge	zero,r17,10004e6c <___vfprintf_internal_r+0x1a30>
10004720:	dc403217 	ldw	r17,200(sp)
10004724:	d8803317 	ldw	r2,204(sp)
10004728:	1440010e 	bge	r2,r17,10004730 <___vfprintf_internal_r+0x12f4>
1000472c:	1023883a 	mov	r17,r2
10004730:	04400a0e 	bge	zero,r17,1000475c <___vfprintf_internal_r+0x1320>
10004734:	d8801f17 	ldw	r2,124(sp)
10004738:	1c47883a 	add	r3,r3,r17
1000473c:	44000015 	stw	r16,0(r8)
10004740:	10800044 	addi	r2,r2,1
10004744:	44400115 	stw	r17,4(r8)
10004748:	d8c02015 	stw	r3,128(sp)
1000474c:	d8801f15 	stw	r2,124(sp)
10004750:	010001c4 	movi	r4,7
10004754:	20826516 	blt	r4,r2,100050ec <___vfprintf_internal_r+0x1cb0>
10004758:	42000204 	addi	r8,r8,8
1000475c:	88026116 	blt	r17,zero,100050e4 <___vfprintf_internal_r+0x1ca8>
10004760:	d9003217 	ldw	r4,200(sp)
10004764:	2463c83a 	sub	r17,r4,r17
10004768:	04407b0e 	bge	zero,r17,10004958 <___vfprintf_internal_r+0x151c>
1000476c:	05800404 	movi	r22,16
10004770:	d8801f17 	ldw	r2,124(sp)
10004774:	b4419d0e 	bge	r22,r17,10004dec <___vfprintf_internal_r+0x19b0>
10004778:	01040074 	movhi	r4,4097
1000477c:	210fed84 	addi	r4,r4,16310
10004780:	d9002c15 	stw	r4,176(sp)
10004784:	070001c4 	movi	fp,7
10004788:	dcc02d17 	ldw	r19,180(sp)
1000478c:	00000306 	br	1000479c <___vfprintf_internal_r+0x1360>
10004790:	42000204 	addi	r8,r8,8
10004794:	8c7ffc04 	addi	r17,r17,-16
10004798:	b441970e 	bge	r22,r17,10004df8 <___vfprintf_internal_r+0x19bc>
1000479c:	18c00404 	addi	r3,r3,16
100047a0:	10800044 	addi	r2,r2,1
100047a4:	45000015 	stw	r20,0(r8)
100047a8:	45800115 	stw	r22,4(r8)
100047ac:	d8c02015 	stw	r3,128(sp)
100047b0:	d8801f15 	stw	r2,124(sp)
100047b4:	e0bff60e 	bge	fp,r2,10004790 <__alt_data_end+0xf8004790>
100047b8:	d9801e04 	addi	r6,sp,120
100047bc:	b80b883a 	mov	r5,r23
100047c0:	9809883a 	mov	r4,r19
100047c4:	000c18c0 	call	1000c18c <__sprint_r>
100047c8:	103c201e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
100047cc:	d8c02017 	ldw	r3,128(sp)
100047d0:	d8801f17 	ldw	r2,124(sp)
100047d4:	da000404 	addi	r8,sp,16
100047d8:	003fee06 	br	10004794 <__alt_data_end+0xf8004794>
100047dc:	d9002d17 	ldw	r4,180(sp)
100047e0:	d9801e04 	addi	r6,sp,120
100047e4:	b80b883a 	mov	r5,r23
100047e8:	000c18c0 	call	1000c18c <__sprint_r>
100047ec:	103c171e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
100047f0:	d8c02017 	ldw	r3,128(sp)
100047f4:	df002787 	ldb	fp,158(sp)
100047f8:	da000404 	addi	r8,sp,16
100047fc:	003d3406 	br	10003cd0 <__alt_data_end+0xf8003cd0>
10004800:	9080040c 	andi	r2,r18,16
10004804:	10016126 	beq	r2,zero,10004d8c <___vfprintf_internal_r+0x1950>
10004808:	d9402e17 	ldw	r5,184(sp)
1000480c:	2cc00017 	ldw	r19,0(r5)
10004810:	29400104 	addi	r5,r5,4
10004814:	d9402e15 	stw	r5,184(sp)
10004818:	982dd7fa 	srai	r22,r19,31
1000481c:	b005883a 	mov	r2,r22
10004820:	003c5a06 	br	1000398c <__alt_data_end+0xf800398c>
10004824:	9080040c 	andi	r2,r18,16
10004828:	10003526 	beq	r2,zero,10004900 <___vfprintf_internal_r+0x14c4>
1000482c:	d8c02e17 	ldw	r3,184(sp)
10004830:	d9002a17 	ldw	r4,168(sp)
10004834:	d8002785 	stb	zero,158(sp)
10004838:	18800104 	addi	r2,r3,4
1000483c:	1cc00017 	ldw	r19,0(r3)
10004840:	002d883a 	mov	r22,zero
10004844:	20003716 	blt	r4,zero,10004924 <___vfprintf_internal_r+0x14e8>
10004848:	00ffdfc4 	movi	r3,-129
1000484c:	d8802e15 	stw	r2,184(sp)
10004850:	90e4703a 	and	r18,r18,r3
10004854:	0039883a 	mov	fp,zero
10004858:	983dd426 	beq	r19,zero,10003fac <__alt_data_end+0xf8003fac>
1000485c:	00800244 	movi	r2,9
10004860:	14fc5336 	bltu	r2,r19,100039b0 <__alt_data_end+0xf80039b0>
10004864:	d8c02817 	ldw	r3,160(sp)
10004868:	dc001dc4 	addi	r16,sp,119
1000486c:	9cc00c04 	addi	r19,r19,48
10004870:	1c07c83a 	sub	r3,r3,r16
10004874:	dcc01dc5 	stb	r19,119(sp)
10004878:	d8c02b15 	stw	r3,172(sp)
1000487c:	003cc606 	br	10003b98 <__alt_data_end+0xf8003b98>
10004880:	d8803317 	ldw	r2,204(sp)
10004884:	143fffc4 	addi	r16,r2,-1
10004888:	043f4d0e 	bge	zero,r16,100045c0 <__alt_data_end+0xf80045c0>
1000488c:	07000404 	movi	fp,16
10004890:	e400810e 	bge	fp,r16,10004a98 <___vfprintf_internal_r+0x165c>
10004894:	01440074 	movhi	r5,4097
10004898:	294fed84 	addi	r5,r5,16310
1000489c:	d9402c15 	stw	r5,176(sp)
100048a0:	01c001c4 	movi	r7,7
100048a4:	dcc02d17 	ldw	r19,180(sp)
100048a8:	00000306 	br	100048b8 <___vfprintf_internal_r+0x147c>
100048ac:	b5800204 	addi	r22,r22,8
100048b0:	843ffc04 	addi	r16,r16,-16
100048b4:	e4007b0e 	bge	fp,r16,10004aa4 <___vfprintf_internal_r+0x1668>
100048b8:	18c00404 	addi	r3,r3,16
100048bc:	8c400044 	addi	r17,r17,1
100048c0:	b5000015 	stw	r20,0(r22)
100048c4:	b7000115 	stw	fp,4(r22)
100048c8:	d8c02015 	stw	r3,128(sp)
100048cc:	dc401f15 	stw	r17,124(sp)
100048d0:	3c7ff60e 	bge	r7,r17,100048ac <__alt_data_end+0xf80048ac>
100048d4:	d9801e04 	addi	r6,sp,120
100048d8:	b80b883a 	mov	r5,r23
100048dc:	9809883a 	mov	r4,r19
100048e0:	d9c03c15 	stw	r7,240(sp)
100048e4:	000c18c0 	call	1000c18c <__sprint_r>
100048e8:	d9c03c17 	ldw	r7,240(sp)
100048ec:	103bd71e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
100048f0:	d8c02017 	ldw	r3,128(sp)
100048f4:	dc401f17 	ldw	r17,124(sp)
100048f8:	dd800404 	addi	r22,sp,16
100048fc:	003fec06 	br	100048b0 <__alt_data_end+0xf80048b0>
10004900:	9080100c 	andi	r2,r18,64
10004904:	d8002785 	stb	zero,158(sp)
10004908:	10010e26 	beq	r2,zero,10004d44 <___vfprintf_internal_r+0x1908>
1000490c:	d9402e17 	ldw	r5,184(sp)
10004910:	d8c02a17 	ldw	r3,168(sp)
10004914:	002d883a 	mov	r22,zero
10004918:	28800104 	addi	r2,r5,4
1000491c:	2cc0000b 	ldhu	r19,0(r5)
10004920:	183fc90e 	bge	r3,zero,10004848 <__alt_data_end+0xf8004848>
10004924:	d8802e15 	stw	r2,184(sp)
10004928:	0039883a 	mov	fp,zero
1000492c:	9d84b03a 	or	r2,r19,r22
10004930:	103c1e1e 	bne	r2,zero,100039ac <__alt_data_end+0xf80039ac>
10004934:	00800044 	movi	r2,1
10004938:	003e6c06 	br	100042ec <__alt_data_end+0xf80042ec>
1000493c:	d9002d17 	ldw	r4,180(sp)
10004940:	d9801e04 	addi	r6,sp,120
10004944:	b80b883a 	mov	r5,r23
10004948:	000c18c0 	call	1000c18c <__sprint_r>
1000494c:	103bbf1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004950:	d8c02017 	ldw	r3,128(sp)
10004954:	da000404 	addi	r8,sp,16
10004958:	d9003217 	ldw	r4,200(sp)
1000495c:	d8802617 	ldw	r2,152(sp)
10004960:	d9403317 	ldw	r5,204(sp)
10004964:	8123883a 	add	r17,r16,r4
10004968:	11400216 	blt	r2,r5,10004974 <___vfprintf_internal_r+0x1538>
1000496c:	9100004c 	andi	r4,r18,1
10004970:	20000d26 	beq	r4,zero,100049a8 <___vfprintf_internal_r+0x156c>
10004974:	d9003717 	ldw	r4,220(sp)
10004978:	d9403417 	ldw	r5,208(sp)
1000497c:	1907883a 	add	r3,r3,r4
10004980:	d9001f17 	ldw	r4,124(sp)
10004984:	41400015 	stw	r5,0(r8)
10004988:	d9403717 	ldw	r5,220(sp)
1000498c:	21000044 	addi	r4,r4,1
10004990:	d8c02015 	stw	r3,128(sp)
10004994:	41400115 	stw	r5,4(r8)
10004998:	d9001f15 	stw	r4,124(sp)
1000499c:	014001c4 	movi	r5,7
100049a0:	2901e816 	blt	r5,r4,10005144 <___vfprintf_internal_r+0x1d08>
100049a4:	42000204 	addi	r8,r8,8
100049a8:	d9003317 	ldw	r4,204(sp)
100049ac:	8121883a 	add	r16,r16,r4
100049b0:	2085c83a 	sub	r2,r4,r2
100049b4:	8461c83a 	sub	r16,r16,r17
100049b8:	1400010e 	bge	r2,r16,100049c0 <___vfprintf_internal_r+0x1584>
100049bc:	1021883a 	mov	r16,r2
100049c0:	04000a0e 	bge	zero,r16,100049ec <___vfprintf_internal_r+0x15b0>
100049c4:	d9001f17 	ldw	r4,124(sp)
100049c8:	1c07883a 	add	r3,r3,r16
100049cc:	44400015 	stw	r17,0(r8)
100049d0:	21000044 	addi	r4,r4,1
100049d4:	44000115 	stw	r16,4(r8)
100049d8:	d8c02015 	stw	r3,128(sp)
100049dc:	d9001f15 	stw	r4,124(sp)
100049e0:	014001c4 	movi	r5,7
100049e4:	2901fb16 	blt	r5,r4,100051d4 <___vfprintf_internal_r+0x1d98>
100049e8:	42000204 	addi	r8,r8,8
100049ec:	8001f716 	blt	r16,zero,100051cc <___vfprintf_internal_r+0x1d90>
100049f0:	1421c83a 	sub	r16,r2,r16
100049f4:	043d160e 	bge	zero,r16,10003e50 <__alt_data_end+0xf8003e50>
100049f8:	04400404 	movi	r17,16
100049fc:	d8801f17 	ldw	r2,124(sp)
10004a00:	8c3efb0e 	bge	r17,r16,100045f0 <__alt_data_end+0xf80045f0>
10004a04:	01440074 	movhi	r5,4097
10004a08:	294fed84 	addi	r5,r5,16310
10004a0c:	d9402c15 	stw	r5,176(sp)
10004a10:	058001c4 	movi	r22,7
10004a14:	dcc02d17 	ldw	r19,180(sp)
10004a18:	00000306 	br	10004a28 <___vfprintf_internal_r+0x15ec>
10004a1c:	42000204 	addi	r8,r8,8
10004a20:	843ffc04 	addi	r16,r16,-16
10004a24:	8c3ef50e 	bge	r17,r16,100045fc <__alt_data_end+0xf80045fc>
10004a28:	18c00404 	addi	r3,r3,16
10004a2c:	10800044 	addi	r2,r2,1
10004a30:	45000015 	stw	r20,0(r8)
10004a34:	44400115 	stw	r17,4(r8)
10004a38:	d8c02015 	stw	r3,128(sp)
10004a3c:	d8801f15 	stw	r2,124(sp)
10004a40:	b0bff60e 	bge	r22,r2,10004a1c <__alt_data_end+0xf8004a1c>
10004a44:	d9801e04 	addi	r6,sp,120
10004a48:	b80b883a 	mov	r5,r23
10004a4c:	9809883a 	mov	r4,r19
10004a50:	000c18c0 	call	1000c18c <__sprint_r>
10004a54:	103b7d1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004a58:	d8c02017 	ldw	r3,128(sp)
10004a5c:	d8801f17 	ldw	r2,124(sp)
10004a60:	da000404 	addi	r8,sp,16
10004a64:	003fee06 	br	10004a20 <__alt_data_end+0xf8004a20>
10004a68:	9088703a 	and	r4,r18,r2
10004a6c:	203eab1e 	bne	r4,zero,1000451c <__alt_data_end+0xf800451c>
10004a70:	dc401f17 	ldw	r17,124(sp)
10004a74:	40800115 	stw	r2,4(r8)
10004a78:	44000015 	stw	r16,0(r8)
10004a7c:	8c400044 	addi	r17,r17,1
10004a80:	d8c02015 	stw	r3,128(sp)
10004a84:	dc401f15 	stw	r17,124(sp)
10004a88:	008001c4 	movi	r2,7
10004a8c:	14400e16 	blt	r2,r17,10004ac8 <___vfprintf_internal_r+0x168c>
10004a90:	45800204 	addi	r22,r8,8
10004a94:	003eca06 	br	100045c0 <__alt_data_end+0xf80045c0>
10004a98:	01040074 	movhi	r4,4097
10004a9c:	210fed84 	addi	r4,r4,16310
10004aa0:	d9002c15 	stw	r4,176(sp)
10004aa4:	d8802c17 	ldw	r2,176(sp)
10004aa8:	1c07883a 	add	r3,r3,r16
10004aac:	8c400044 	addi	r17,r17,1
10004ab0:	b0800015 	stw	r2,0(r22)
10004ab4:	b4000115 	stw	r16,4(r22)
10004ab8:	d8c02015 	stw	r3,128(sp)
10004abc:	dc401f15 	stw	r17,124(sp)
10004ac0:	008001c4 	movi	r2,7
10004ac4:	147ebd0e 	bge	r2,r17,100045bc <__alt_data_end+0xf80045bc>
10004ac8:	d9002d17 	ldw	r4,180(sp)
10004acc:	d9801e04 	addi	r6,sp,120
10004ad0:	b80b883a 	mov	r5,r23
10004ad4:	000c18c0 	call	1000c18c <__sprint_r>
10004ad8:	103b5c1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004adc:	d8c02017 	ldw	r3,128(sp)
10004ae0:	dc401f17 	ldw	r17,124(sp)
10004ae4:	dd800404 	addi	r22,sp,16
10004ae8:	003eb506 	br	100045c0 <__alt_data_end+0xf80045c0>
10004aec:	d9002d17 	ldw	r4,180(sp)
10004af0:	d9801e04 	addi	r6,sp,120
10004af4:	b80b883a 	mov	r5,r23
10004af8:	000c18c0 	call	1000c18c <__sprint_r>
10004afc:	103b531e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004b00:	d8c02017 	ldw	r3,128(sp)
10004b04:	dc401f17 	ldw	r17,124(sp)
10004b08:	da000404 	addi	r8,sp,16
10004b0c:	003e8d06 	br	10004544 <__alt_data_end+0xf8004544>
10004b10:	d9002d17 	ldw	r4,180(sp)
10004b14:	d9801e04 	addi	r6,sp,120
10004b18:	b80b883a 	mov	r5,r23
10004b1c:	000c18c0 	call	1000c18c <__sprint_r>
10004b20:	103b4a1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004b24:	d8c02017 	ldw	r3,128(sp)
10004b28:	dc401f17 	ldw	r17,124(sp)
10004b2c:	dd800404 	addi	r22,sp,16
10004b30:	003e8f06 	br	10004570 <__alt_data_end+0xf8004570>
10004b34:	0027883a 	mov	r19,zero
10004b38:	003f4a06 	br	10004864 <__alt_data_end+0xf8004864>
10004b3c:	d9002d17 	ldw	r4,180(sp)
10004b40:	d9801e04 	addi	r6,sp,120
10004b44:	b80b883a 	mov	r5,r23
10004b48:	000c18c0 	call	1000c18c <__sprint_r>
10004b4c:	103b3f1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004b50:	d8c02017 	ldw	r3,128(sp)
10004b54:	da000404 	addi	r8,sp,16
10004b58:	003c7b06 	br	10003d48 <__alt_data_end+0xf8003d48>
10004b5c:	d9402a17 	ldw	r5,168(sp)
10004b60:	04e7c83a 	sub	r19,zero,r19
10004b64:	07000b44 	movi	fp,45
10004b68:	9804c03a 	cmpne	r2,r19,zero
10004b6c:	05adc83a 	sub	r22,zero,r22
10004b70:	df002785 	stb	fp,158(sp)
10004b74:	b0adc83a 	sub	r22,r22,r2
10004b78:	28017b16 	blt	r5,zero,10005168 <___vfprintf_internal_r+0x1d2c>
10004b7c:	00bfdfc4 	movi	r2,-129
10004b80:	90a4703a 	and	r18,r18,r2
10004b84:	003b8906 	br	100039ac <__alt_data_end+0xf80039ac>
10004b88:	d9003617 	ldw	r4,216(sp)
10004b8c:	d9403817 	ldw	r5,224(sp)
10004b90:	da003d15 	stw	r8,244(sp)
10004b94:	000a8400 	call	1000a840 <__fpclassifyd>
10004b98:	da003d17 	ldw	r8,244(sp)
10004b9c:	1000f026 	beq	r2,zero,10004f60 <___vfprintf_internal_r+0x1b24>
10004ba0:	d9002a17 	ldw	r4,168(sp)
10004ba4:	05bff7c4 	movi	r22,-33
10004ba8:	00bfffc4 	movi	r2,-1
10004bac:	8dac703a 	and	r22,r17,r22
10004bb0:	20820026 	beq	r4,r2,100053b4 <___vfprintf_internal_r+0x1f78>
10004bb4:	008011c4 	movi	r2,71
10004bb8:	b081f726 	beq	r22,r2,10005398 <___vfprintf_internal_r+0x1f5c>
10004bbc:	d9003817 	ldw	r4,224(sp)
10004bc0:	90c04014 	ori	r3,r18,256
10004bc4:	d8c02c15 	stw	r3,176(sp)
10004bc8:	20021516 	blt	r4,zero,10005420 <___vfprintf_internal_r+0x1fe4>
10004bcc:	dcc03817 	ldw	r19,224(sp)
10004bd0:	d8002905 	stb	zero,164(sp)
10004bd4:	00801984 	movi	r2,102
10004bd8:	8881f926 	beq	r17,r2,100053c0 <___vfprintf_internal_r+0x1f84>
10004bdc:	00801184 	movi	r2,70
10004be0:	88821c26 	beq	r17,r2,10005454 <___vfprintf_internal_r+0x2018>
10004be4:	00801144 	movi	r2,69
10004be8:	b081ef26 	beq	r22,r2,100053a8 <___vfprintf_internal_r+0x1f6c>
10004bec:	d8c02a17 	ldw	r3,168(sp)
10004bf0:	d8802104 	addi	r2,sp,132
10004bf4:	d8800315 	stw	r2,12(sp)
10004bf8:	d9403617 	ldw	r5,216(sp)
10004bfc:	d8802504 	addi	r2,sp,148
10004c00:	d9002d17 	ldw	r4,180(sp)
10004c04:	d8800215 	stw	r2,8(sp)
10004c08:	d8802604 	addi	r2,sp,152
10004c0c:	d8c00015 	stw	r3,0(sp)
10004c10:	d8800115 	stw	r2,4(sp)
10004c14:	01c00084 	movi	r7,2
10004c18:	980d883a 	mov	r6,r19
10004c1c:	d8c03c15 	stw	r3,240(sp)
10004c20:	da003d15 	stw	r8,244(sp)
10004c24:	0005b6c0 	call	10005b6c <_dtoa_r>
10004c28:	1021883a 	mov	r16,r2
10004c2c:	008019c4 	movi	r2,103
10004c30:	d8c03c17 	ldw	r3,240(sp)
10004c34:	da003d17 	ldw	r8,244(sp)
10004c38:	88817126 	beq	r17,r2,10005200 <___vfprintf_internal_r+0x1dc4>
10004c3c:	008011c4 	movi	r2,71
10004c40:	88829126 	beq	r17,r2,10005688 <___vfprintf_internal_r+0x224c>
10004c44:	80f9883a 	add	fp,r16,r3
10004c48:	d9003617 	ldw	r4,216(sp)
10004c4c:	000d883a 	mov	r6,zero
10004c50:	000f883a 	mov	r7,zero
10004c54:	980b883a 	mov	r5,r19
10004c58:	da003d15 	stw	r8,244(sp)
10004c5c:	001001c0 	call	1001001c <__eqdf2>
10004c60:	da003d17 	ldw	r8,244(sp)
10004c64:	10018d26 	beq	r2,zero,1000529c <___vfprintf_internal_r+0x1e60>
10004c68:	d8802117 	ldw	r2,132(sp)
10004c6c:	1700062e 	bgeu	r2,fp,10004c88 <___vfprintf_internal_r+0x184c>
10004c70:	01000c04 	movi	r4,48
10004c74:	10c00044 	addi	r3,r2,1
10004c78:	d8c02115 	stw	r3,132(sp)
10004c7c:	11000005 	stb	r4,0(r2)
10004c80:	d8802117 	ldw	r2,132(sp)
10004c84:	173ffb36 	bltu	r2,fp,10004c74 <__alt_data_end+0xf8004c74>
10004c88:	1405c83a 	sub	r2,r2,r16
10004c8c:	d8803315 	stw	r2,204(sp)
10004c90:	008011c4 	movi	r2,71
10004c94:	b0817626 	beq	r22,r2,10005270 <___vfprintf_internal_r+0x1e34>
10004c98:	00801944 	movi	r2,101
10004c9c:	1442800e 	bge	r2,r17,100056a0 <___vfprintf_internal_r+0x2264>
10004ca0:	d8c02617 	ldw	r3,152(sp)
10004ca4:	00801984 	movi	r2,102
10004ca8:	d8c03215 	stw	r3,200(sp)
10004cac:	8881fe26 	beq	r17,r2,100054a8 <___vfprintf_internal_r+0x206c>
10004cb0:	d8c03217 	ldw	r3,200(sp)
10004cb4:	d9003317 	ldw	r4,204(sp)
10004cb8:	1901dd16 	blt	r3,r4,10005430 <___vfprintf_internal_r+0x1ff4>
10004cbc:	9480004c 	andi	r18,r18,1
10004cc0:	90022b1e 	bne	r18,zero,10005570 <___vfprintf_internal_r+0x2134>
10004cc4:	1805883a 	mov	r2,r3
10004cc8:	18028316 	blt	r3,zero,100056d8 <___vfprintf_internal_r+0x229c>
10004ccc:	d8c03217 	ldw	r3,200(sp)
10004cd0:	044019c4 	movi	r17,103
10004cd4:	d8c02b15 	stw	r3,172(sp)
10004cd8:	df002907 	ldb	fp,164(sp)
10004cdc:	e001531e 	bne	fp,zero,1000522c <___vfprintf_internal_r+0x1df0>
10004ce0:	df002783 	ldbu	fp,158(sp)
10004ce4:	d8802915 	stw	r2,164(sp)
10004ce8:	dc802c17 	ldw	r18,176(sp)
10004cec:	d8002a15 	stw	zero,168(sp)
10004cf0:	003baf06 	br	10003bb0 <__alt_data_end+0xf8003bb0>
10004cf4:	d8c02e17 	ldw	r3,184(sp)
10004cf8:	d9002e17 	ldw	r4,184(sp)
10004cfc:	d9402e17 	ldw	r5,184(sp)
10004d00:	18c00017 	ldw	r3,0(r3)
10004d04:	21000117 	ldw	r4,4(r4)
10004d08:	29400204 	addi	r5,r5,8
10004d0c:	d8c03615 	stw	r3,216(sp)
10004d10:	d9003815 	stw	r4,224(sp)
10004d14:	d9402e15 	stw	r5,184(sp)
10004d18:	003b5006 	br	10003a5c <__alt_data_end+0xf8003a5c>
10004d1c:	ac400007 	ldb	r17,0(r21)
10004d20:	003a2806 	br	100035c4 <__alt_data_end+0xf80035c4>
10004d24:	9080100c 	andi	r2,r18,64
10004d28:	1000a826 	beq	r2,zero,10004fcc <___vfprintf_internal_r+0x1b90>
10004d2c:	d8c02e17 	ldw	r3,184(sp)
10004d30:	002d883a 	mov	r22,zero
10004d34:	1cc0000b 	ldhu	r19,0(r3)
10004d38:	18c00104 	addi	r3,r3,4
10004d3c:	d8c02e15 	stw	r3,184(sp)
10004d40:	003caf06 	br	10004000 <__alt_data_end+0xf8004000>
10004d44:	d9002e17 	ldw	r4,184(sp)
10004d48:	d9402a17 	ldw	r5,168(sp)
10004d4c:	002d883a 	mov	r22,zero
10004d50:	20800104 	addi	r2,r4,4
10004d54:	24c00017 	ldw	r19,0(r4)
10004d58:	283ebb0e 	bge	r5,zero,10004848 <__alt_data_end+0xf8004848>
10004d5c:	003ef106 	br	10004924 <__alt_data_end+0xf8004924>
10004d60:	9080040c 	andi	r2,r18,16
10004d64:	1000921e 	bne	r2,zero,10004fb0 <___vfprintf_internal_r+0x1b74>
10004d68:	9480100c 	andi	r18,r18,64
10004d6c:	90013926 	beq	r18,zero,10005254 <___vfprintf_internal_r+0x1e18>
10004d70:	d9402e17 	ldw	r5,184(sp)
10004d74:	d8c02f17 	ldw	r3,188(sp)
10004d78:	28800017 	ldw	r2,0(r5)
10004d7c:	29400104 	addi	r5,r5,4
10004d80:	d9402e15 	stw	r5,184(sp)
10004d84:	10c0000d 	sth	r3,0(r2)
10004d88:	0039e406 	br	1000351c <__alt_data_end+0xf800351c>
10004d8c:	9080100c 	andi	r2,r18,64
10004d90:	10008026 	beq	r2,zero,10004f94 <___vfprintf_internal_r+0x1b58>
10004d94:	d8802e17 	ldw	r2,184(sp)
10004d98:	14c0000f 	ldh	r19,0(r2)
10004d9c:	10800104 	addi	r2,r2,4
10004da0:	d8802e15 	stw	r2,184(sp)
10004da4:	982dd7fa 	srai	r22,r19,31
10004da8:	b005883a 	mov	r2,r22
10004dac:	003af706 	br	1000398c <__alt_data_end+0xf800398c>
10004db0:	9080100c 	andi	r2,r18,64
10004db4:	d8002785 	stb	zero,158(sp)
10004db8:	10008a1e 	bne	r2,zero,10004fe4 <___vfprintf_internal_r+0x1ba8>
10004dbc:	d9002e17 	ldw	r4,184(sp)
10004dc0:	d9402a17 	ldw	r5,168(sp)
10004dc4:	002d883a 	mov	r22,zero
10004dc8:	20800104 	addi	r2,r4,4
10004dcc:	24c00017 	ldw	r19,0(r4)
10004dd0:	283e4b0e 	bge	r5,zero,10004700 <__alt_data_end+0xf8004700>
10004dd4:	9d86b03a 	or	r3,r19,r22
10004dd8:	d8802e15 	stw	r2,184(sp)
10004ddc:	183e4c1e 	bne	r3,zero,10004710 <__alt_data_end+0xf8004710>
10004de0:	0039883a 	mov	fp,zero
10004de4:	0005883a 	mov	r2,zero
10004de8:	003d4006 	br	100042ec <__alt_data_end+0xf80042ec>
10004dec:	01440074 	movhi	r5,4097
10004df0:	294fed84 	addi	r5,r5,16310
10004df4:	d9402c15 	stw	r5,176(sp)
10004df8:	d9402c17 	ldw	r5,176(sp)
10004dfc:	1c47883a 	add	r3,r3,r17
10004e00:	10800044 	addi	r2,r2,1
10004e04:	41400015 	stw	r5,0(r8)
10004e08:	44400115 	stw	r17,4(r8)
10004e0c:	d8c02015 	stw	r3,128(sp)
10004e10:	d8801f15 	stw	r2,124(sp)
10004e14:	010001c4 	movi	r4,7
10004e18:	20bec816 	blt	r4,r2,1000493c <__alt_data_end+0xf800493c>
10004e1c:	42000204 	addi	r8,r8,8
10004e20:	003ecd06 	br	10004958 <__alt_data_end+0xf8004958>
10004e24:	d9002a17 	ldw	r4,168(sp)
10004e28:	d8002785 	stb	zero,158(sp)
10004e2c:	203d2d16 	blt	r4,zero,100042e4 <__alt_data_end+0xf80042e4>
10004e30:	00bfdfc4 	movi	r2,-129
10004e34:	90a4703a 	and	r18,r18,r2
10004e38:	003a6106 	br	100037c0 <__alt_data_end+0xf80037c0>
10004e3c:	01040074 	movhi	r4,4097
10004e40:	210fed84 	addi	r4,r4,16310
10004e44:	d9002c15 	stw	r4,176(sp)
10004e48:	003bea06 	br	10003df4 <__alt_data_end+0xf8003df4>
10004e4c:	d9002d17 	ldw	r4,180(sp)
10004e50:	d9801e04 	addi	r6,sp,120
10004e54:	b80b883a 	mov	r5,r23
10004e58:	000c18c0 	call	1000c18c <__sprint_r>
10004e5c:	103a7b1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004e60:	d8c02017 	ldw	r3,128(sp)
10004e64:	da000404 	addi	r8,sp,16
10004e68:	003d4106 	br	10004370 <__alt_data_end+0xf8004370>
10004e6c:	d8801f17 	ldw	r2,124(sp)
10004e70:	01440074 	movhi	r5,4097
10004e74:	01000044 	movi	r4,1
10004e78:	18c00044 	addi	r3,r3,1
10004e7c:	10800044 	addi	r2,r2,1
10004e80:	294fe504 	addi	r5,r5,16276
10004e84:	41000115 	stw	r4,4(r8)
10004e88:	41400015 	stw	r5,0(r8)
10004e8c:	d8c02015 	stw	r3,128(sp)
10004e90:	d8801f15 	stw	r2,124(sp)
10004e94:	010001c4 	movi	r4,7
10004e98:	20805c16 	blt	r4,r2,1000500c <___vfprintf_internal_r+0x1bd0>
10004e9c:	42000204 	addi	r8,r8,8
10004ea0:	8800041e 	bne	r17,zero,10004eb4 <___vfprintf_internal_r+0x1a78>
10004ea4:	d8803317 	ldw	r2,204(sp)
10004ea8:	1000021e 	bne	r2,zero,10004eb4 <___vfprintf_internal_r+0x1a78>
10004eac:	9080004c 	andi	r2,r18,1
10004eb0:	103be726 	beq	r2,zero,10003e50 <__alt_data_end+0xf8003e50>
10004eb4:	d9003717 	ldw	r4,220(sp)
10004eb8:	d8801f17 	ldw	r2,124(sp)
10004ebc:	d9403417 	ldw	r5,208(sp)
10004ec0:	20c7883a 	add	r3,r4,r3
10004ec4:	10800044 	addi	r2,r2,1
10004ec8:	41000115 	stw	r4,4(r8)
10004ecc:	41400015 	stw	r5,0(r8)
10004ed0:	d8c02015 	stw	r3,128(sp)
10004ed4:	d8801f15 	stw	r2,124(sp)
10004ed8:	010001c4 	movi	r4,7
10004edc:	20812116 	blt	r4,r2,10005364 <___vfprintf_internal_r+0x1f28>
10004ee0:	42000204 	addi	r8,r8,8
10004ee4:	0463c83a 	sub	r17,zero,r17
10004ee8:	0440730e 	bge	zero,r17,100050b8 <___vfprintf_internal_r+0x1c7c>
10004eec:	05800404 	movi	r22,16
10004ef0:	b440860e 	bge	r22,r17,1000510c <___vfprintf_internal_r+0x1cd0>
10004ef4:	01440074 	movhi	r5,4097
10004ef8:	294fed84 	addi	r5,r5,16310
10004efc:	d9402c15 	stw	r5,176(sp)
10004f00:	070001c4 	movi	fp,7
10004f04:	dcc02d17 	ldw	r19,180(sp)
10004f08:	00000306 	br	10004f18 <___vfprintf_internal_r+0x1adc>
10004f0c:	42000204 	addi	r8,r8,8
10004f10:	8c7ffc04 	addi	r17,r17,-16
10004f14:	b440800e 	bge	r22,r17,10005118 <___vfprintf_internal_r+0x1cdc>
10004f18:	18c00404 	addi	r3,r3,16
10004f1c:	10800044 	addi	r2,r2,1
10004f20:	45000015 	stw	r20,0(r8)
10004f24:	45800115 	stw	r22,4(r8)
10004f28:	d8c02015 	stw	r3,128(sp)
10004f2c:	d8801f15 	stw	r2,124(sp)
10004f30:	e0bff60e 	bge	fp,r2,10004f0c <__alt_data_end+0xf8004f0c>
10004f34:	d9801e04 	addi	r6,sp,120
10004f38:	b80b883a 	mov	r5,r23
10004f3c:	9809883a 	mov	r4,r19
10004f40:	000c18c0 	call	1000c18c <__sprint_r>
10004f44:	103a411e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10004f48:	d8c02017 	ldw	r3,128(sp)
10004f4c:	d8801f17 	ldw	r2,124(sp)
10004f50:	da000404 	addi	r8,sp,16
10004f54:	003fee06 	br	10004f10 <__alt_data_end+0xf8004f10>
10004f58:	00bfffc4 	movi	r2,-1
10004f5c:	003a3f06 	br	1000385c <__alt_data_end+0xf800385c>
10004f60:	008011c4 	movi	r2,71
10004f64:	1440b816 	blt	r2,r17,10005248 <___vfprintf_internal_r+0x1e0c>
10004f68:	04040074 	movhi	r16,4097
10004f6c:	840fd704 	addi	r16,r16,16220
10004f70:	00c000c4 	movi	r3,3
10004f74:	00bfdfc4 	movi	r2,-129
10004f78:	d8c02915 	stw	r3,164(sp)
10004f7c:	90a4703a 	and	r18,r18,r2
10004f80:	df002783 	ldbu	fp,158(sp)
10004f84:	d8c02b15 	stw	r3,172(sp)
10004f88:	d8002a15 	stw	zero,168(sp)
10004f8c:	d8003215 	stw	zero,200(sp)
10004f90:	003b0706 	br	10003bb0 <__alt_data_end+0xf8003bb0>
10004f94:	d8c02e17 	ldw	r3,184(sp)
10004f98:	1cc00017 	ldw	r19,0(r3)
10004f9c:	18c00104 	addi	r3,r3,4
10004fa0:	d8c02e15 	stw	r3,184(sp)
10004fa4:	982dd7fa 	srai	r22,r19,31
10004fa8:	b005883a 	mov	r2,r22
10004fac:	003a7706 	br	1000398c <__alt_data_end+0xf800398c>
10004fb0:	d8c02e17 	ldw	r3,184(sp)
10004fb4:	d9002f17 	ldw	r4,188(sp)
10004fb8:	18800017 	ldw	r2,0(r3)
10004fbc:	18c00104 	addi	r3,r3,4
10004fc0:	d8c02e15 	stw	r3,184(sp)
10004fc4:	11000015 	stw	r4,0(r2)
10004fc8:	00395406 	br	1000351c <__alt_data_end+0xf800351c>
10004fcc:	d9002e17 	ldw	r4,184(sp)
10004fd0:	002d883a 	mov	r22,zero
10004fd4:	24c00017 	ldw	r19,0(r4)
10004fd8:	21000104 	addi	r4,r4,4
10004fdc:	d9002e15 	stw	r4,184(sp)
10004fe0:	003c0706 	br	10004000 <__alt_data_end+0xf8004000>
10004fe4:	d9402e17 	ldw	r5,184(sp)
10004fe8:	d8c02a17 	ldw	r3,168(sp)
10004fec:	002d883a 	mov	r22,zero
10004ff0:	28800104 	addi	r2,r5,4
10004ff4:	2cc0000b 	ldhu	r19,0(r5)
10004ff8:	183dc10e 	bge	r3,zero,10004700 <__alt_data_end+0xf8004700>
10004ffc:	003f7506 	br	10004dd4 <__alt_data_end+0xf8004dd4>
10005000:	04040074 	movhi	r16,4097
10005004:	840fd504 	addi	r16,r16,16212
10005008:	003aa706 	br	10003aa8 <__alt_data_end+0xf8003aa8>
1000500c:	d9002d17 	ldw	r4,180(sp)
10005010:	d9801e04 	addi	r6,sp,120
10005014:	b80b883a 	mov	r5,r23
10005018:	000c18c0 	call	1000c18c <__sprint_r>
1000501c:	103a0b1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10005020:	dc402617 	ldw	r17,152(sp)
10005024:	d8c02017 	ldw	r3,128(sp)
10005028:	da000404 	addi	r8,sp,16
1000502c:	003f9c06 	br	10004ea0 <__alt_data_end+0xf8004ea0>
10005030:	ac400043 	ldbu	r17,1(r21)
10005034:	84000814 	ori	r16,r16,32
10005038:	ad400044 	addi	r21,r21,1
1000503c:	8c403fcc 	andi	r17,r17,255
10005040:	8c40201c 	xori	r17,r17,128
10005044:	8c7fe004 	addi	r17,r17,-128
10005048:	00395e06 	br	100035c4 <__alt_data_end+0xf80035c4>
1000504c:	d8c02e15 	stw	r3,184(sp)
10005050:	0039883a 	mov	fp,zero
10005054:	003e3506 	br	1000492c <__alt_data_end+0xf800492c>
10005058:	d9002d17 	ldw	r4,180(sp)
1000505c:	d9801e04 	addi	r6,sp,120
10005060:	b80b883a 	mov	r5,r23
10005064:	000c18c0 	call	1000c18c <__sprint_r>
10005068:	1039f81e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
1000506c:	d8c02017 	ldw	r3,128(sp)
10005070:	da000404 	addi	r8,sp,16
10005074:	003cd006 	br	100043b8 <__alt_data_end+0xf80043b8>
10005078:	8009883a 	mov	r4,r16
1000507c:	df003d15 	stw	fp,244(sp)
10005080:	00010e80 	call	100010e8 <strlen>
10005084:	d8802b15 	stw	r2,172(sp)
10005088:	da003d17 	ldw	r8,244(sp)
1000508c:	103c200e 	bge	r2,zero,10004110 <__alt_data_end+0xf8004110>
10005090:	0005883a 	mov	r2,zero
10005094:	003c1e06 	br	10004110 <__alt_data_end+0xf8004110>
10005098:	d9002d17 	ldw	r4,180(sp)
1000509c:	d9801e04 	addi	r6,sp,120
100050a0:	b80b883a 	mov	r5,r23
100050a4:	000c18c0 	call	1000c18c <__sprint_r>
100050a8:	1039e81e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
100050ac:	d8c02017 	ldw	r3,128(sp)
100050b0:	d8801f17 	ldw	r2,124(sp)
100050b4:	da000404 	addi	r8,sp,16
100050b8:	d9403317 	ldw	r5,204(sp)
100050bc:	10800044 	addi	r2,r2,1
100050c0:	44000015 	stw	r16,0(r8)
100050c4:	28c7883a 	add	r3,r5,r3
100050c8:	003b5b06 	br	10003e38 <__alt_data_end+0xf8003e38>
100050cc:	01040074 	movhi	r4,4097
100050d0:	210ff184 	addi	r4,r4,16326
100050d4:	d9003515 	stw	r4,212(sp)
100050d8:	003af206 	br	10003ca4 <__alt_data_end+0xf8003ca4>
100050dc:	013fffc4 	movi	r4,-1
100050e0:	003a0806 	br	10003904 <__alt_data_end+0xf8003904>
100050e4:	0023883a 	mov	r17,zero
100050e8:	003d9d06 	br	10004760 <__alt_data_end+0xf8004760>
100050ec:	d9002d17 	ldw	r4,180(sp)
100050f0:	d9801e04 	addi	r6,sp,120
100050f4:	b80b883a 	mov	r5,r23
100050f8:	000c18c0 	call	1000c18c <__sprint_r>
100050fc:	1039d31e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10005100:	d8c02017 	ldw	r3,128(sp)
10005104:	da000404 	addi	r8,sp,16
10005108:	003d9406 	br	1000475c <__alt_data_end+0xf800475c>
1000510c:	01040074 	movhi	r4,4097
10005110:	210fed84 	addi	r4,r4,16310
10005114:	d9002c15 	stw	r4,176(sp)
10005118:	d9002c17 	ldw	r4,176(sp)
1000511c:	1c47883a 	add	r3,r3,r17
10005120:	10800044 	addi	r2,r2,1
10005124:	41000015 	stw	r4,0(r8)
10005128:	44400115 	stw	r17,4(r8)
1000512c:	d8c02015 	stw	r3,128(sp)
10005130:	d8801f15 	stw	r2,124(sp)
10005134:	010001c4 	movi	r4,7
10005138:	20bfd716 	blt	r4,r2,10005098 <__alt_data_end+0xf8005098>
1000513c:	42000204 	addi	r8,r8,8
10005140:	003fdd06 	br	100050b8 <__alt_data_end+0xf80050b8>
10005144:	d9002d17 	ldw	r4,180(sp)
10005148:	d9801e04 	addi	r6,sp,120
1000514c:	b80b883a 	mov	r5,r23
10005150:	000c18c0 	call	1000c18c <__sprint_r>
10005154:	1039bd1e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10005158:	d8802617 	ldw	r2,152(sp)
1000515c:	d8c02017 	ldw	r3,128(sp)
10005160:	da000404 	addi	r8,sp,16
10005164:	003e1006 	br	100049a8 <__alt_data_end+0xf80049a8>
10005168:	00800044 	movi	r2,1
1000516c:	10803fcc 	andi	r2,r2,255
10005170:	00c00044 	movi	r3,1
10005174:	10fa0d26 	beq	r2,r3,100039ac <__alt_data_end+0xf80039ac>
10005178:	00c00084 	movi	r3,2
1000517c:	10fbaf26 	beq	r2,r3,1000403c <__alt_data_end+0xf800403c>
10005180:	003a6d06 	br	10003b38 <__alt_data_end+0xf8003b38>
10005184:	01040074 	movhi	r4,4097
10005188:	210ff184 	addi	r4,r4,16326
1000518c:	d9003515 	stw	r4,212(sp)
10005190:	003b5406 	br	10003ee4 <__alt_data_end+0xf8003ee4>
10005194:	d8802a17 	ldw	r2,168(sp)
10005198:	00c00184 	movi	r3,6
1000519c:	1880012e 	bgeu	r3,r2,100051a4 <___vfprintf_internal_r+0x1d68>
100051a0:	1805883a 	mov	r2,r3
100051a4:	d8802b15 	stw	r2,172(sp)
100051a8:	1000ef16 	blt	r2,zero,10005568 <___vfprintf_internal_r+0x212c>
100051ac:	04040074 	movhi	r16,4097
100051b0:	d8802915 	stw	r2,164(sp)
100051b4:	dcc02e15 	stw	r19,184(sp)
100051b8:	d8002a15 	stw	zero,168(sp)
100051bc:	d8003215 	stw	zero,200(sp)
100051c0:	840fe304 	addi	r16,r16,16268
100051c4:	0039883a 	mov	fp,zero
100051c8:	003a8006 	br	10003bcc <__alt_data_end+0xf8003bcc>
100051cc:	0021883a 	mov	r16,zero
100051d0:	003e0706 	br	100049f0 <__alt_data_end+0xf80049f0>
100051d4:	d9002d17 	ldw	r4,180(sp)
100051d8:	d9801e04 	addi	r6,sp,120
100051dc:	b80b883a 	mov	r5,r23
100051e0:	000c18c0 	call	1000c18c <__sprint_r>
100051e4:	1039991e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
100051e8:	d8802617 	ldw	r2,152(sp)
100051ec:	d9403317 	ldw	r5,204(sp)
100051f0:	d8c02017 	ldw	r3,128(sp)
100051f4:	da000404 	addi	r8,sp,16
100051f8:	2885c83a 	sub	r2,r5,r2
100051fc:	003dfb06 	br	100049ec <__alt_data_end+0xf80049ec>
10005200:	9080004c 	andi	r2,r18,1
10005204:	103e8f1e 	bne	r2,zero,10004c44 <__alt_data_end+0xf8004c44>
10005208:	d8802117 	ldw	r2,132(sp)
1000520c:	003e9e06 	br	10004c88 <__alt_data_end+0xf8004c88>
10005210:	1025883a 	mov	r18,r2
10005214:	0039883a 	mov	fp,zero
10005218:	00800084 	movi	r2,2
1000521c:	003fd306 	br	1000516c <__alt_data_end+0xf800516c>
10005220:	07000b44 	movi	fp,45
10005224:	df002785 	stb	fp,158(sp)
10005228:	003a1b06 	br	10003a98 <__alt_data_end+0xf8003a98>
1000522c:	00c00b44 	movi	r3,45
10005230:	d8c02785 	stb	r3,158(sp)
10005234:	d8802915 	stw	r2,164(sp)
10005238:	dc802c17 	ldw	r18,176(sp)
1000523c:	d8002a15 	stw	zero,168(sp)
10005240:	07000b44 	movi	fp,45
10005244:	003a5e06 	br	10003bc0 <__alt_data_end+0xf8003bc0>
10005248:	04040074 	movhi	r16,4097
1000524c:	840fd804 	addi	r16,r16,16224
10005250:	003f4706 	br	10004f70 <__alt_data_end+0xf8004f70>
10005254:	d9002e17 	ldw	r4,184(sp)
10005258:	d9402f17 	ldw	r5,188(sp)
1000525c:	20800017 	ldw	r2,0(r4)
10005260:	21000104 	addi	r4,r4,4
10005264:	d9002e15 	stw	r4,184(sp)
10005268:	11400015 	stw	r5,0(r2)
1000526c:	0038ab06 	br	1000351c <__alt_data_end+0xf800351c>
10005270:	dd802617 	ldw	r22,152(sp)
10005274:	00bfff44 	movi	r2,-3
10005278:	b0801c16 	blt	r22,r2,100052ec <___vfprintf_internal_r+0x1eb0>
1000527c:	d9402a17 	ldw	r5,168(sp)
10005280:	2d801a16 	blt	r5,r22,100052ec <___vfprintf_internal_r+0x1eb0>
10005284:	dd803215 	stw	r22,200(sp)
10005288:	003e8906 	br	10004cb0 <__alt_data_end+0xf8004cb0>
1000528c:	01040074 	movhi	r4,4097
10005290:	210fed84 	addi	r4,r4,16310
10005294:	d9002c15 	stw	r4,176(sp)
10005298:	003c9106 	br	100044e0 <__alt_data_end+0xf80044e0>
1000529c:	e005883a 	mov	r2,fp
100052a0:	003e7906 	br	10004c88 <__alt_data_end+0xf8004c88>
100052a4:	d9002a17 	ldw	r4,168(sp)
100052a8:	df002783 	ldbu	fp,158(sp)
100052ac:	dcc02e15 	stw	r19,184(sp)
100052b0:	d9002915 	stw	r4,164(sp)
100052b4:	d9002b15 	stw	r4,172(sp)
100052b8:	d8002a15 	stw	zero,168(sp)
100052bc:	d8003215 	stw	zero,200(sp)
100052c0:	003a3b06 	br	10003bb0 <__alt_data_end+0xf8003bb0>
100052c4:	9080004c 	andi	r2,r18,1
100052c8:	0039883a 	mov	fp,zero
100052cc:	10000426 	beq	r2,zero,100052e0 <___vfprintf_internal_r+0x1ea4>
100052d0:	00800c04 	movi	r2,48
100052d4:	dc001dc4 	addi	r16,sp,119
100052d8:	d8801dc5 	stb	r2,119(sp)
100052dc:	003b6406 	br	10004070 <__alt_data_end+0xf8004070>
100052e0:	d8002b15 	stw	zero,172(sp)
100052e4:	dc001e04 	addi	r16,sp,120
100052e8:	003a2b06 	br	10003b98 <__alt_data_end+0xf8003b98>
100052ec:	8c7fff84 	addi	r17,r17,-2
100052f0:	b5bfffc4 	addi	r22,r22,-1
100052f4:	dd802615 	stw	r22,152(sp)
100052f8:	dc4022c5 	stb	r17,139(sp)
100052fc:	b000bf16 	blt	r22,zero,100055fc <___vfprintf_internal_r+0x21c0>
10005300:	00800ac4 	movi	r2,43
10005304:	d8802305 	stb	r2,140(sp)
10005308:	00800244 	movi	r2,9
1000530c:	15807016 	blt	r2,r22,100054d0 <___vfprintf_internal_r+0x2094>
10005310:	00800c04 	movi	r2,48
10005314:	b5800c04 	addi	r22,r22,48
10005318:	d8802345 	stb	r2,141(sp)
1000531c:	dd802385 	stb	r22,142(sp)
10005320:	d88023c4 	addi	r2,sp,143
10005324:	df0022c4 	addi	fp,sp,139
10005328:	d8c03317 	ldw	r3,204(sp)
1000532c:	1739c83a 	sub	fp,r2,fp
10005330:	d9003317 	ldw	r4,204(sp)
10005334:	e0c7883a 	add	r3,fp,r3
10005338:	df003a15 	stw	fp,232(sp)
1000533c:	d8c02b15 	stw	r3,172(sp)
10005340:	00800044 	movi	r2,1
10005344:	1100b30e 	bge	r2,r4,10005614 <___vfprintf_internal_r+0x21d8>
10005348:	d8c02b17 	ldw	r3,172(sp)
1000534c:	18c00044 	addi	r3,r3,1
10005350:	d8c02b15 	stw	r3,172(sp)
10005354:	1805883a 	mov	r2,r3
10005358:	1800ac16 	blt	r3,zero,1000560c <___vfprintf_internal_r+0x21d0>
1000535c:	d8003215 	stw	zero,200(sp)
10005360:	003e5d06 	br	10004cd8 <__alt_data_end+0xf8004cd8>
10005364:	d9002d17 	ldw	r4,180(sp)
10005368:	d9801e04 	addi	r6,sp,120
1000536c:	b80b883a 	mov	r5,r23
10005370:	000c18c0 	call	1000c18c <__sprint_r>
10005374:	1039351e 	bne	r2,zero,1000384c <__alt_data_end+0xf800384c>
10005378:	dc402617 	ldw	r17,152(sp)
1000537c:	d8c02017 	ldw	r3,128(sp)
10005380:	d8801f17 	ldw	r2,124(sp)
10005384:	da000404 	addi	r8,sp,16
10005388:	003ed606 	br	10004ee4 <__alt_data_end+0xf8004ee4>
1000538c:	182b883a 	mov	r21,r3
10005390:	d8002a15 	stw	zero,168(sp)
10005394:	00388c06 	br	100035c8 <__alt_data_end+0xf80035c8>
10005398:	d8802a17 	ldw	r2,168(sp)
1000539c:	103e071e 	bne	r2,zero,10004bbc <__alt_data_end+0xf8004bbc>
100053a0:	dc002a15 	stw	r16,168(sp)
100053a4:	003e0506 	br	10004bbc <__alt_data_end+0xf8004bbc>
100053a8:	d9002a17 	ldw	r4,168(sp)
100053ac:	20c00044 	addi	r3,r4,1
100053b0:	003e0f06 	br	10004bf0 <__alt_data_end+0xf8004bf0>
100053b4:	01400184 	movi	r5,6
100053b8:	d9402a15 	stw	r5,168(sp)
100053bc:	003dff06 	br	10004bbc <__alt_data_end+0xf8004bbc>
100053c0:	d8802104 	addi	r2,sp,132
100053c4:	d8800315 	stw	r2,12(sp)
100053c8:	d8802504 	addi	r2,sp,148
100053cc:	d8800215 	stw	r2,8(sp)
100053d0:	d8802604 	addi	r2,sp,152
100053d4:	d8800115 	stw	r2,4(sp)
100053d8:	d8802a17 	ldw	r2,168(sp)
100053dc:	d9403617 	ldw	r5,216(sp)
100053e0:	d9002d17 	ldw	r4,180(sp)
100053e4:	d8800015 	stw	r2,0(sp)
100053e8:	01c000c4 	movi	r7,3
100053ec:	980d883a 	mov	r6,r19
100053f0:	da003d15 	stw	r8,244(sp)
100053f4:	0005b6c0 	call	10005b6c <_dtoa_r>
100053f8:	d8c02a17 	ldw	r3,168(sp)
100053fc:	da003d17 	ldw	r8,244(sp)
10005400:	1021883a 	mov	r16,r2
10005404:	10f9883a 	add	fp,r2,r3
10005408:	81000007 	ldb	r4,0(r16)
1000540c:	00800c04 	movi	r2,48
10005410:	20805e26 	beq	r4,r2,1000558c <___vfprintf_internal_r+0x2150>
10005414:	d8c02617 	ldw	r3,152(sp)
10005418:	e0f9883a 	add	fp,fp,r3
1000541c:	003e0a06 	br	10004c48 <__alt_data_end+0xf8004c48>
10005420:	00c00b44 	movi	r3,45
10005424:	24e0003c 	xorhi	r19,r4,32768
10005428:	d8c02905 	stb	r3,164(sp)
1000542c:	003de906 	br	10004bd4 <__alt_data_end+0xf8004bd4>
10005430:	d8c03217 	ldw	r3,200(sp)
10005434:	00c07a0e 	bge	zero,r3,10005620 <___vfprintf_internal_r+0x21e4>
10005438:	00800044 	movi	r2,1
1000543c:	d9003317 	ldw	r4,204(sp)
10005440:	1105883a 	add	r2,r2,r4
10005444:	d8802b15 	stw	r2,172(sp)
10005448:	10004e16 	blt	r2,zero,10005584 <___vfprintf_internal_r+0x2148>
1000544c:	044019c4 	movi	r17,103
10005450:	003e2106 	br	10004cd8 <__alt_data_end+0xf8004cd8>
10005454:	d9002a17 	ldw	r4,168(sp)
10005458:	d8802104 	addi	r2,sp,132
1000545c:	d8800315 	stw	r2,12(sp)
10005460:	d9000015 	stw	r4,0(sp)
10005464:	d8802504 	addi	r2,sp,148
10005468:	d9403617 	ldw	r5,216(sp)
1000546c:	d9002d17 	ldw	r4,180(sp)
10005470:	d8800215 	stw	r2,8(sp)
10005474:	d8802604 	addi	r2,sp,152
10005478:	d8800115 	stw	r2,4(sp)
1000547c:	01c000c4 	movi	r7,3
10005480:	980d883a 	mov	r6,r19
10005484:	da003d15 	stw	r8,244(sp)
10005488:	0005b6c0 	call	10005b6c <_dtoa_r>
1000548c:	d8c02a17 	ldw	r3,168(sp)
10005490:	da003d17 	ldw	r8,244(sp)
10005494:	1021883a 	mov	r16,r2
10005498:	00801184 	movi	r2,70
1000549c:	80f9883a 	add	fp,r16,r3
100054a0:	88bfd926 	beq	r17,r2,10005408 <__alt_data_end+0xf8005408>
100054a4:	003de806 	br	10004c48 <__alt_data_end+0xf8004c48>
100054a8:	d9002a17 	ldw	r4,168(sp)
100054ac:	00c04d0e 	bge	zero,r3,100055e4 <___vfprintf_internal_r+0x21a8>
100054b0:	2000441e 	bne	r4,zero,100055c4 <___vfprintf_internal_r+0x2188>
100054b4:	9480004c 	andi	r18,r18,1
100054b8:	9000421e 	bne	r18,zero,100055c4 <___vfprintf_internal_r+0x2188>
100054bc:	1805883a 	mov	r2,r3
100054c0:	18006f16 	blt	r3,zero,10005680 <___vfprintf_internal_r+0x2244>
100054c4:	d8c03217 	ldw	r3,200(sp)
100054c8:	d8c02b15 	stw	r3,172(sp)
100054cc:	003e0206 	br	10004cd8 <__alt_data_end+0xf8004cd8>
100054d0:	df0022c4 	addi	fp,sp,139
100054d4:	dc002a15 	stw	r16,168(sp)
100054d8:	4027883a 	mov	r19,r8
100054dc:	e021883a 	mov	r16,fp
100054e0:	b009883a 	mov	r4,r22
100054e4:	01400284 	movi	r5,10
100054e8:	0000d100 	call	10000d10 <__modsi3>
100054ec:	10800c04 	addi	r2,r2,48
100054f0:	843fffc4 	addi	r16,r16,-1
100054f4:	b009883a 	mov	r4,r22
100054f8:	01400284 	movi	r5,10
100054fc:	80800005 	stb	r2,0(r16)
10005500:	0000c8c0 	call	10000c8c <__divsi3>
10005504:	102d883a 	mov	r22,r2
10005508:	00800244 	movi	r2,9
1000550c:	15bff416 	blt	r2,r22,100054e0 <__alt_data_end+0xf80054e0>
10005510:	9811883a 	mov	r8,r19
10005514:	b0800c04 	addi	r2,r22,48
10005518:	8027883a 	mov	r19,r16
1000551c:	997fffc4 	addi	r5,r19,-1
10005520:	98bfffc5 	stb	r2,-1(r19)
10005524:	dc002a17 	ldw	r16,168(sp)
10005528:	2f006d2e 	bgeu	r5,fp,100056e0 <___vfprintf_internal_r+0x22a4>
1000552c:	d9c02384 	addi	r7,sp,142
10005530:	3ccfc83a 	sub	r7,r7,r19
10005534:	d9002344 	addi	r4,sp,141
10005538:	e1cf883a 	add	r7,fp,r7
1000553c:	00000106 	br	10005544 <___vfprintf_internal_r+0x2108>
10005540:	28800003 	ldbu	r2,0(r5)
10005544:	20800005 	stb	r2,0(r4)
10005548:	21000044 	addi	r4,r4,1
1000554c:	29400044 	addi	r5,r5,1
10005550:	393ffb1e 	bne	r7,r4,10005540 <__alt_data_end+0xf8005540>
10005554:	d8802304 	addi	r2,sp,140
10005558:	14c5c83a 	sub	r2,r2,r19
1000555c:	d8c02344 	addi	r3,sp,141
10005560:	1885883a 	add	r2,r3,r2
10005564:	003f7006 	br	10005328 <__alt_data_end+0xf8005328>
10005568:	0005883a 	mov	r2,zero
1000556c:	003f0f06 	br	100051ac <__alt_data_end+0xf80051ac>
10005570:	d8c03217 	ldw	r3,200(sp)
10005574:	18c00044 	addi	r3,r3,1
10005578:	d8c02b15 	stw	r3,172(sp)
1000557c:	1805883a 	mov	r2,r3
10005580:	183fb20e 	bge	r3,zero,1000544c <__alt_data_end+0xf800544c>
10005584:	0005883a 	mov	r2,zero
10005588:	003fb006 	br	1000544c <__alt_data_end+0xf800544c>
1000558c:	d9003617 	ldw	r4,216(sp)
10005590:	000d883a 	mov	r6,zero
10005594:	000f883a 	mov	r7,zero
10005598:	980b883a 	mov	r5,r19
1000559c:	d8c03c15 	stw	r3,240(sp)
100055a0:	da003d15 	stw	r8,244(sp)
100055a4:	001001c0 	call	1001001c <__eqdf2>
100055a8:	d8c03c17 	ldw	r3,240(sp)
100055ac:	da003d17 	ldw	r8,244(sp)
100055b0:	103f9826 	beq	r2,zero,10005414 <__alt_data_end+0xf8005414>
100055b4:	00800044 	movi	r2,1
100055b8:	10c7c83a 	sub	r3,r2,r3
100055bc:	d8c02615 	stw	r3,152(sp)
100055c0:	003f9506 	br	10005418 <__alt_data_end+0xf8005418>
100055c4:	d9002a17 	ldw	r4,168(sp)
100055c8:	d8c03217 	ldw	r3,200(sp)
100055cc:	20800044 	addi	r2,r4,1
100055d0:	1885883a 	add	r2,r3,r2
100055d4:	d8802b15 	stw	r2,172(sp)
100055d8:	103dbf0e 	bge	r2,zero,10004cd8 <__alt_data_end+0xf8004cd8>
100055dc:	0005883a 	mov	r2,zero
100055e0:	003dbd06 	br	10004cd8 <__alt_data_end+0xf8004cd8>
100055e4:	2000201e 	bne	r4,zero,10005668 <___vfprintf_internal_r+0x222c>
100055e8:	9480004c 	andi	r18,r18,1
100055ec:	90001e1e 	bne	r18,zero,10005668 <___vfprintf_internal_r+0x222c>
100055f0:	00800044 	movi	r2,1
100055f4:	d8802b15 	stw	r2,172(sp)
100055f8:	003db706 	br	10004cd8 <__alt_data_end+0xf8004cd8>
100055fc:	00800b44 	movi	r2,45
10005600:	05adc83a 	sub	r22,zero,r22
10005604:	d8802305 	stb	r2,140(sp)
10005608:	003f3f06 	br	10005308 <__alt_data_end+0xf8005308>
1000560c:	0005883a 	mov	r2,zero
10005610:	003f5206 	br	1000535c <__alt_data_end+0xf800535c>
10005614:	90a4703a 	and	r18,r18,r2
10005618:	903f4e26 	beq	r18,zero,10005354 <__alt_data_end+0xf8005354>
1000561c:	003f4a06 	br	10005348 <__alt_data_end+0xf8005348>
10005620:	00800084 	movi	r2,2
10005624:	10c5c83a 	sub	r2,r2,r3
10005628:	003f8406 	br	1000543c <__alt_data_end+0xf800543c>
1000562c:	d9402e17 	ldw	r5,184(sp)
10005630:	d9002e17 	ldw	r4,184(sp)
10005634:	ac400043 	ldbu	r17,1(r21)
10005638:	29400017 	ldw	r5,0(r5)
1000563c:	20800104 	addi	r2,r4,4
10005640:	d8802e15 	stw	r2,184(sp)
10005644:	d9402a15 	stw	r5,168(sp)
10005648:	182b883a 	mov	r21,r3
1000564c:	283e7b0e 	bge	r5,zero,1000503c <__alt_data_end+0xf800503c>
10005650:	8c403fcc 	andi	r17,r17,255
10005654:	017fffc4 	movi	r5,-1
10005658:	8c40201c 	xori	r17,r17,128
1000565c:	d9402a15 	stw	r5,168(sp)
10005660:	8c7fe004 	addi	r17,r17,-128
10005664:	0037d706 	br	100035c4 <__alt_data_end+0xf80035c4>
10005668:	d8c02a17 	ldw	r3,168(sp)
1000566c:	18c00084 	addi	r3,r3,2
10005670:	d8c02b15 	stw	r3,172(sp)
10005674:	1805883a 	mov	r2,r3
10005678:	183d970e 	bge	r3,zero,10004cd8 <__alt_data_end+0xf8004cd8>
1000567c:	003fd706 	br	100055dc <__alt_data_end+0xf80055dc>
10005680:	0005883a 	mov	r2,zero
10005684:	003f8f06 	br	100054c4 <__alt_data_end+0xf80054c4>
10005688:	9080004c 	andi	r2,r18,1
1000568c:	103f821e 	bne	r2,zero,10005498 <__alt_data_end+0xf8005498>
10005690:	d8802117 	ldw	r2,132(sp)
10005694:	1405c83a 	sub	r2,r2,r16
10005698:	d8803315 	stw	r2,204(sp)
1000569c:	b47ef426 	beq	r22,r17,10005270 <__alt_data_end+0xf8005270>
100056a0:	dd802617 	ldw	r22,152(sp)
100056a4:	003f1206 	br	100052f0 <__alt_data_end+0xf80052f0>
100056a8:	d8c02b03 	ldbu	r3,172(sp)
100056ac:	d8c02785 	stb	r3,158(sp)
100056b0:	0038df06 	br	10003a30 <__alt_data_end+0xf8003a30>
100056b4:	d8c02b03 	ldbu	r3,172(sp)
100056b8:	d8c02785 	stb	r3,158(sp)
100056bc:	0038aa06 	br	10003968 <__alt_data_end+0xf8003968>
100056c0:	d8c02b03 	ldbu	r3,172(sp)
100056c4:	d8c02785 	stb	r3,158(sp)
100056c8:	003a4306 	br	10003fd8 <__alt_data_end+0xf8003fd8>
100056cc:	d8c02b03 	ldbu	r3,172(sp)
100056d0:	d8c02785 	stb	r3,158(sp)
100056d4:	003af506 	br	100042ac <__alt_data_end+0xf80042ac>
100056d8:	0005883a 	mov	r2,zero
100056dc:	003d7b06 	br	10004ccc <__alt_data_end+0xf8004ccc>
100056e0:	d8802344 	addi	r2,sp,141
100056e4:	003f1006 	br	10005328 <__alt_data_end+0xf8005328>
100056e8:	d8c02b03 	ldbu	r3,172(sp)
100056ec:	d8c02785 	stb	r3,158(sp)
100056f0:	0038fd06 	br	10003ae8 <__alt_data_end+0xf8003ae8>
100056f4:	d8c02b03 	ldbu	r3,172(sp)
100056f8:	d8c02785 	stb	r3,158(sp)
100056fc:	003a9706 	br	1000415c <__alt_data_end+0xf800415c>
10005700:	d8c02b03 	ldbu	r3,172(sp)
10005704:	d8c02785 	stb	r3,158(sp)
10005708:	003a1806 	br	10003f6c <__alt_data_end+0xf8003f6c>
1000570c:	d8c02b03 	ldbu	r3,172(sp)
10005710:	d8c02785 	stb	r3,158(sp)
10005714:	003abe06 	br	10004210 <__alt_data_end+0xf8004210>

10005718 <__vfprintf_internal>:
10005718:	00840074 	movhi	r2,4097
1000571c:	10980a04 	addi	r2,r2,24616
10005720:	300f883a 	mov	r7,r6
10005724:	280d883a 	mov	r6,r5
10005728:	200b883a 	mov	r5,r4
1000572c:	11000017 	ldw	r4,0(r2)
10005730:	000343c1 	jmpi	1000343c <___vfprintf_internal_r>

10005734 <__sbprintf>:
10005734:	2880030b 	ldhu	r2,12(r5)
10005738:	2ac01917 	ldw	r11,100(r5)
1000573c:	2a80038b 	ldhu	r10,14(r5)
10005740:	2a400717 	ldw	r9,28(r5)
10005744:	2a000917 	ldw	r8,36(r5)
10005748:	defee204 	addi	sp,sp,-1144
1000574c:	00c10004 	movi	r3,1024
10005750:	dc011a15 	stw	r16,1128(sp)
10005754:	10bfff4c 	andi	r2,r2,65533
10005758:	2821883a 	mov	r16,r5
1000575c:	d8cb883a 	add	r5,sp,r3
10005760:	dc811c15 	stw	r18,1136(sp)
10005764:	dc411b15 	stw	r17,1132(sp)
10005768:	dfc11d15 	stw	ra,1140(sp)
1000576c:	2025883a 	mov	r18,r4
10005770:	d881030d 	sth	r2,1036(sp)
10005774:	dac11915 	stw	r11,1124(sp)
10005778:	da81038d 	sth	r10,1038(sp)
1000577c:	da410715 	stw	r9,1052(sp)
10005780:	da010915 	stw	r8,1060(sp)
10005784:	dec10015 	stw	sp,1024(sp)
10005788:	dec10415 	stw	sp,1040(sp)
1000578c:	d8c10215 	stw	r3,1032(sp)
10005790:	d8c10515 	stw	r3,1044(sp)
10005794:	d8010615 	stw	zero,1048(sp)
10005798:	000343c0 	call	1000343c <___vfprintf_internal_r>
1000579c:	1023883a 	mov	r17,r2
100057a0:	10000416 	blt	r2,zero,100057b4 <__sbprintf+0x80>
100057a4:	d9410004 	addi	r5,sp,1024
100057a8:	9009883a 	mov	r4,r18
100057ac:	00074100 	call	10007410 <_fflush_r>
100057b0:	10000d1e 	bne	r2,zero,100057e8 <__sbprintf+0xb4>
100057b4:	d881030b 	ldhu	r2,1036(sp)
100057b8:	1080100c 	andi	r2,r2,64
100057bc:	10000326 	beq	r2,zero,100057cc <__sbprintf+0x98>
100057c0:	8080030b 	ldhu	r2,12(r16)
100057c4:	10801014 	ori	r2,r2,64
100057c8:	8080030d 	sth	r2,12(r16)
100057cc:	8805883a 	mov	r2,r17
100057d0:	dfc11d17 	ldw	ra,1140(sp)
100057d4:	dc811c17 	ldw	r18,1136(sp)
100057d8:	dc411b17 	ldw	r17,1132(sp)
100057dc:	dc011a17 	ldw	r16,1128(sp)
100057e0:	dec11e04 	addi	sp,sp,1144
100057e4:	f800283a 	ret
100057e8:	047fffc4 	movi	r17,-1
100057ec:	003ff106 	br	100057b4 <__alt_data_end+0xf80057b4>

100057f0 <__swsetup_r>:
100057f0:	00840074 	movhi	r2,4097
100057f4:	defffd04 	addi	sp,sp,-12
100057f8:	10980a04 	addi	r2,r2,24616
100057fc:	dc400115 	stw	r17,4(sp)
10005800:	2023883a 	mov	r17,r4
10005804:	11000017 	ldw	r4,0(r2)
10005808:	dc000015 	stw	r16,0(sp)
1000580c:	dfc00215 	stw	ra,8(sp)
10005810:	2821883a 	mov	r16,r5
10005814:	20000226 	beq	r4,zero,10005820 <__swsetup_r+0x30>
10005818:	20800e17 	ldw	r2,56(r4)
1000581c:	10003126 	beq	r2,zero,100058e4 <__swsetup_r+0xf4>
10005820:	8080030b 	ldhu	r2,12(r16)
10005824:	10c0020c 	andi	r3,r2,8
10005828:	1009883a 	mov	r4,r2
1000582c:	18000f26 	beq	r3,zero,1000586c <__swsetup_r+0x7c>
10005830:	80c00417 	ldw	r3,16(r16)
10005834:	18001526 	beq	r3,zero,1000588c <__swsetup_r+0x9c>
10005838:	1100004c 	andi	r4,r2,1
1000583c:	20001c1e 	bne	r4,zero,100058b0 <__swsetup_r+0xc0>
10005840:	1080008c 	andi	r2,r2,2
10005844:	1000291e 	bne	r2,zero,100058ec <__swsetup_r+0xfc>
10005848:	80800517 	ldw	r2,20(r16)
1000584c:	80800215 	stw	r2,8(r16)
10005850:	18001c26 	beq	r3,zero,100058c4 <__swsetup_r+0xd4>
10005854:	0005883a 	mov	r2,zero
10005858:	dfc00217 	ldw	ra,8(sp)
1000585c:	dc400117 	ldw	r17,4(sp)
10005860:	dc000017 	ldw	r16,0(sp)
10005864:	dec00304 	addi	sp,sp,12
10005868:	f800283a 	ret
1000586c:	2080040c 	andi	r2,r4,16
10005870:	10002e26 	beq	r2,zero,1000592c <__swsetup_r+0x13c>
10005874:	2080010c 	andi	r2,r4,4
10005878:	10001e1e 	bne	r2,zero,100058f4 <__swsetup_r+0x104>
1000587c:	80c00417 	ldw	r3,16(r16)
10005880:	20800214 	ori	r2,r4,8
10005884:	8080030d 	sth	r2,12(r16)
10005888:	183feb1e 	bne	r3,zero,10005838 <__alt_data_end+0xf8005838>
1000588c:	1100a00c 	andi	r4,r2,640
10005890:	01408004 	movi	r5,512
10005894:	217fe826 	beq	r4,r5,10005838 <__alt_data_end+0xf8005838>
10005898:	800b883a 	mov	r5,r16
1000589c:	8809883a 	mov	r4,r17
100058a0:	00083ac0 	call	100083ac <__smakebuf_r>
100058a4:	8080030b 	ldhu	r2,12(r16)
100058a8:	80c00417 	ldw	r3,16(r16)
100058ac:	003fe206 	br	10005838 <__alt_data_end+0xf8005838>
100058b0:	80800517 	ldw	r2,20(r16)
100058b4:	80000215 	stw	zero,8(r16)
100058b8:	0085c83a 	sub	r2,zero,r2
100058bc:	80800615 	stw	r2,24(r16)
100058c0:	183fe41e 	bne	r3,zero,10005854 <__alt_data_end+0xf8005854>
100058c4:	80c0030b 	ldhu	r3,12(r16)
100058c8:	0005883a 	mov	r2,zero
100058cc:	1900200c 	andi	r4,r3,128
100058d0:	203fe126 	beq	r4,zero,10005858 <__alt_data_end+0xf8005858>
100058d4:	18c01014 	ori	r3,r3,64
100058d8:	80c0030d 	sth	r3,12(r16)
100058dc:	00bfffc4 	movi	r2,-1
100058e0:	003fdd06 	br	10005858 <__alt_data_end+0xf8005858>
100058e4:	00077fc0 	call	100077fc <__sinit>
100058e8:	003fcd06 	br	10005820 <__alt_data_end+0xf8005820>
100058ec:	0005883a 	mov	r2,zero
100058f0:	003fd606 	br	1000584c <__alt_data_end+0xf800584c>
100058f4:	81400c17 	ldw	r5,48(r16)
100058f8:	28000626 	beq	r5,zero,10005914 <__swsetup_r+0x124>
100058fc:	80801004 	addi	r2,r16,64
10005900:	28800326 	beq	r5,r2,10005910 <__swsetup_r+0x120>
10005904:	8809883a 	mov	r4,r17
10005908:	00079700 	call	10007970 <_free_r>
1000590c:	8100030b 	ldhu	r4,12(r16)
10005910:	80000c15 	stw	zero,48(r16)
10005914:	80c00417 	ldw	r3,16(r16)
10005918:	00bff6c4 	movi	r2,-37
1000591c:	1108703a 	and	r4,r2,r4
10005920:	80000115 	stw	zero,4(r16)
10005924:	80c00015 	stw	r3,0(r16)
10005928:	003fd506 	br	10005880 <__alt_data_end+0xf8005880>
1000592c:	00800244 	movi	r2,9
10005930:	88800015 	stw	r2,0(r17)
10005934:	20801014 	ori	r2,r4,64
10005938:	8080030d 	sth	r2,12(r16)
1000593c:	00bfffc4 	movi	r2,-1
10005940:	003fc506 	br	10005858 <__alt_data_end+0xf8005858>

10005944 <quorem>:
10005944:	defff204 	addi	sp,sp,-56
10005948:	ddc00b15 	stw	r23,44(sp)
1000594c:	20800417 	ldw	r2,16(r4)
10005950:	2dc00417 	ldw	r23,16(r5)
10005954:	dfc00d15 	stw	ra,52(sp)
10005958:	df000c15 	stw	fp,48(sp)
1000595c:	dd800a15 	stw	r22,40(sp)
10005960:	dd400915 	stw	r21,36(sp)
10005964:	dd000815 	stw	r20,32(sp)
10005968:	dcc00715 	stw	r19,28(sp)
1000596c:	dc800615 	stw	r18,24(sp)
10005970:	dc400515 	stw	r17,20(sp)
10005974:	dc000415 	stw	r16,16(sp)
10005978:	15c07a16 	blt	r2,r23,10005b64 <quorem+0x220>
1000597c:	bdffffc4 	addi	r23,r23,-1
10005980:	bde9883a 	add	r20,r23,r23
10005984:	28c00504 	addi	r3,r5,20
10005988:	a529883a 	add	r20,r20,r20
1000598c:	1d39883a 	add	fp,r3,r20
10005990:	24c00504 	addi	r19,r4,20
10005994:	d9400215 	stw	r5,8(sp)
10005998:	9d29883a 	add	r20,r19,r20
1000599c:	e1400017 	ldw	r5,0(fp)
100059a0:	d9000015 	stw	r4,0(sp)
100059a4:	a1000017 	ldw	r4,0(r20)
100059a8:	29400044 	addi	r5,r5,1
100059ac:	d8c00115 	stw	r3,4(sp)
100059b0:	dd000315 	stw	r20,12(sp)
100059b4:	0000d840 	call	10000d84 <__udivsi3>
100059b8:	1025883a 	mov	r18,r2
100059bc:	10003026 	beq	r2,zero,10005a80 <quorem+0x13c>
100059c0:	dc400117 	ldw	r17,4(sp)
100059c4:	9829883a 	mov	r20,r19
100059c8:	002d883a 	mov	r22,zero
100059cc:	0021883a 	mov	r16,zero
100059d0:	8d400017 	ldw	r21,0(r17)
100059d4:	900b883a 	mov	r5,r18
100059d8:	8c400104 	addi	r17,r17,4
100059dc:	a93fffcc 	andi	r4,r21,65535
100059e0:	0000e400 	call	10000e40 <__mulsi3>
100059e4:	a808d43a 	srli	r4,r21,16
100059e8:	900b883a 	mov	r5,r18
100059ec:	15ad883a 	add	r22,r2,r22
100059f0:	0000e400 	call	10000e40 <__mulsi3>
100059f4:	a1000017 	ldw	r4,0(r20)
100059f8:	b00cd43a 	srli	r6,r22,16
100059fc:	b0ffffcc 	andi	r3,r22,65535
10005a00:	217fffcc 	andi	r5,r4,65535
10005a04:	2c21883a 	add	r16,r5,r16
10005a08:	80c7c83a 	sub	r3,r16,r3
10005a0c:	2008d43a 	srli	r4,r4,16
10005a10:	1185883a 	add	r2,r2,r6
10005a14:	1821d43a 	srai	r16,r3,16
10005a18:	117fffcc 	andi	r5,r2,65535
10005a1c:	2149c83a 	sub	r4,r4,r5
10005a20:	2421883a 	add	r16,r4,r16
10005a24:	8008943a 	slli	r4,r16,16
10005a28:	18ffffcc 	andi	r3,r3,65535
10005a2c:	102cd43a 	srli	r22,r2,16
10005a30:	20c8b03a 	or	r4,r4,r3
10005a34:	a1000015 	stw	r4,0(r20)
10005a38:	8021d43a 	srai	r16,r16,16
10005a3c:	a5000104 	addi	r20,r20,4
10005a40:	e47fe32e 	bgeu	fp,r17,100059d0 <__alt_data_end+0xf80059d0>
10005a44:	d8c00317 	ldw	r3,12(sp)
10005a48:	18800017 	ldw	r2,0(r3)
10005a4c:	10000c1e 	bne	r2,zero,10005a80 <quorem+0x13c>
10005a50:	18bfff04 	addi	r2,r3,-4
10005a54:	9880082e 	bgeu	r19,r2,10005a78 <quorem+0x134>
10005a58:	18ffff17 	ldw	r3,-4(r3)
10005a5c:	18000326 	beq	r3,zero,10005a6c <quorem+0x128>
10005a60:	00000506 	br	10005a78 <quorem+0x134>
10005a64:	10c00017 	ldw	r3,0(r2)
10005a68:	1800031e 	bne	r3,zero,10005a78 <quorem+0x134>
10005a6c:	10bfff04 	addi	r2,r2,-4
10005a70:	bdffffc4 	addi	r23,r23,-1
10005a74:	98bffb36 	bltu	r19,r2,10005a64 <__alt_data_end+0xf8005a64>
10005a78:	d8c00017 	ldw	r3,0(sp)
10005a7c:	1dc00415 	stw	r23,16(r3)
10005a80:	d9400217 	ldw	r5,8(sp)
10005a84:	d9000017 	ldw	r4,0(sp)
10005a88:	0009ba80 	call	10009ba8 <__mcmp>
10005a8c:	10002816 	blt	r2,zero,10005b30 <quorem+0x1ec>
10005a90:	dc400117 	ldw	r17,4(sp)
10005a94:	94800044 	addi	r18,r18,1
10005a98:	980d883a 	mov	r6,r19
10005a9c:	0007883a 	mov	r3,zero
10005aa0:	31000017 	ldw	r4,0(r6)
10005aa4:	89400017 	ldw	r5,0(r17)
10005aa8:	31800104 	addi	r6,r6,4
10005aac:	20bfffcc 	andi	r2,r4,65535
10005ab0:	10c7883a 	add	r3,r2,r3
10005ab4:	28bfffcc 	andi	r2,r5,65535
10005ab8:	1885c83a 	sub	r2,r3,r2
10005abc:	280ad43a 	srli	r5,r5,16
10005ac0:	2008d43a 	srli	r4,r4,16
10005ac4:	1007d43a 	srai	r3,r2,16
10005ac8:	10bfffcc 	andi	r2,r2,65535
10005acc:	2149c83a 	sub	r4,r4,r5
10005ad0:	20c9883a 	add	r4,r4,r3
10005ad4:	200a943a 	slli	r5,r4,16
10005ad8:	8c400104 	addi	r17,r17,4
10005adc:	2007d43a 	srai	r3,r4,16
10005ae0:	2884b03a 	or	r2,r5,r2
10005ae4:	30bfff15 	stw	r2,-4(r6)
10005ae8:	e47fed2e 	bgeu	fp,r17,10005aa0 <__alt_data_end+0xf8005aa0>
10005aec:	bdc5883a 	add	r2,r23,r23
10005af0:	1085883a 	add	r2,r2,r2
10005af4:	9887883a 	add	r3,r19,r2
10005af8:	18800017 	ldw	r2,0(r3)
10005afc:	10000c1e 	bne	r2,zero,10005b30 <quorem+0x1ec>
10005b00:	18bfff04 	addi	r2,r3,-4
10005b04:	9880082e 	bgeu	r19,r2,10005b28 <quorem+0x1e4>
10005b08:	18ffff17 	ldw	r3,-4(r3)
10005b0c:	18000326 	beq	r3,zero,10005b1c <quorem+0x1d8>
10005b10:	00000506 	br	10005b28 <quorem+0x1e4>
10005b14:	10c00017 	ldw	r3,0(r2)
10005b18:	1800031e 	bne	r3,zero,10005b28 <quorem+0x1e4>
10005b1c:	10bfff04 	addi	r2,r2,-4
10005b20:	bdffffc4 	addi	r23,r23,-1
10005b24:	98bffb36 	bltu	r19,r2,10005b14 <__alt_data_end+0xf8005b14>
10005b28:	d8c00017 	ldw	r3,0(sp)
10005b2c:	1dc00415 	stw	r23,16(r3)
10005b30:	9005883a 	mov	r2,r18
10005b34:	dfc00d17 	ldw	ra,52(sp)
10005b38:	df000c17 	ldw	fp,48(sp)
10005b3c:	ddc00b17 	ldw	r23,44(sp)
10005b40:	dd800a17 	ldw	r22,40(sp)
10005b44:	dd400917 	ldw	r21,36(sp)
10005b48:	dd000817 	ldw	r20,32(sp)
10005b4c:	dcc00717 	ldw	r19,28(sp)
10005b50:	dc800617 	ldw	r18,24(sp)
10005b54:	dc400517 	ldw	r17,20(sp)
10005b58:	dc000417 	ldw	r16,16(sp)
10005b5c:	dec00e04 	addi	sp,sp,56
10005b60:	f800283a 	ret
10005b64:	0005883a 	mov	r2,zero
10005b68:	003ff206 	br	10005b34 <__alt_data_end+0xf8005b34>

10005b6c <_dtoa_r>:
10005b6c:	20801017 	ldw	r2,64(r4)
10005b70:	deffde04 	addi	sp,sp,-136
10005b74:	df002015 	stw	fp,128(sp)
10005b78:	dcc01b15 	stw	r19,108(sp)
10005b7c:	dc801a15 	stw	r18,104(sp)
10005b80:	dc401915 	stw	r17,100(sp)
10005b84:	dc001815 	stw	r16,96(sp)
10005b88:	dfc02115 	stw	ra,132(sp)
10005b8c:	ddc01f15 	stw	r23,124(sp)
10005b90:	dd801e15 	stw	r22,120(sp)
10005b94:	dd401d15 	stw	r21,116(sp)
10005b98:	dd001c15 	stw	r20,112(sp)
10005b9c:	d9c00315 	stw	r7,12(sp)
10005ba0:	2039883a 	mov	fp,r4
10005ba4:	3023883a 	mov	r17,r6
10005ba8:	2825883a 	mov	r18,r5
10005bac:	dc002417 	ldw	r16,144(sp)
10005bb0:	3027883a 	mov	r19,r6
10005bb4:	10000826 	beq	r2,zero,10005bd8 <_dtoa_r+0x6c>
10005bb8:	21801117 	ldw	r6,68(r4)
10005bbc:	00c00044 	movi	r3,1
10005bc0:	100b883a 	mov	r5,r2
10005bc4:	1986983a 	sll	r3,r3,r6
10005bc8:	11800115 	stw	r6,4(r2)
10005bcc:	10c00215 	stw	r3,8(r2)
10005bd0:	00092cc0 	call	100092cc <_Bfree>
10005bd4:	e0001015 	stw	zero,64(fp)
10005bd8:	88002e16 	blt	r17,zero,10005c94 <_dtoa_r+0x128>
10005bdc:	80000015 	stw	zero,0(r16)
10005be0:	889ffc2c 	andhi	r2,r17,32752
10005be4:	00dffc34 	movhi	r3,32752
10005be8:	10c01c26 	beq	r2,r3,10005c5c <_dtoa_r+0xf0>
10005bec:	000d883a 	mov	r6,zero
10005bf0:	000f883a 	mov	r7,zero
10005bf4:	9009883a 	mov	r4,r18
10005bf8:	980b883a 	mov	r5,r19
10005bfc:	001001c0 	call	1001001c <__eqdf2>
10005c00:	10002b1e 	bne	r2,zero,10005cb0 <_dtoa_r+0x144>
10005c04:	d9c02317 	ldw	r7,140(sp)
10005c08:	00800044 	movi	r2,1
10005c0c:	38800015 	stw	r2,0(r7)
10005c10:	d8802517 	ldw	r2,148(sp)
10005c14:	10019e26 	beq	r2,zero,10006290 <_dtoa_r+0x724>
10005c18:	d8c02517 	ldw	r3,148(sp)
10005c1c:	00840074 	movhi	r2,4097
10005c20:	108fe544 	addi	r2,r2,16277
10005c24:	18800015 	stw	r2,0(r3)
10005c28:	10bfffc4 	addi	r2,r2,-1
10005c2c:	dfc02117 	ldw	ra,132(sp)
10005c30:	df002017 	ldw	fp,128(sp)
10005c34:	ddc01f17 	ldw	r23,124(sp)
10005c38:	dd801e17 	ldw	r22,120(sp)
10005c3c:	dd401d17 	ldw	r21,116(sp)
10005c40:	dd001c17 	ldw	r20,112(sp)
10005c44:	dcc01b17 	ldw	r19,108(sp)
10005c48:	dc801a17 	ldw	r18,104(sp)
10005c4c:	dc401917 	ldw	r17,100(sp)
10005c50:	dc001817 	ldw	r16,96(sp)
10005c54:	dec02204 	addi	sp,sp,136
10005c58:	f800283a 	ret
10005c5c:	d8c02317 	ldw	r3,140(sp)
10005c60:	0089c3c4 	movi	r2,9999
10005c64:	18800015 	stw	r2,0(r3)
10005c68:	90017726 	beq	r18,zero,10006248 <_dtoa_r+0x6dc>
10005c6c:	00840074 	movhi	r2,4097
10005c70:	108ff904 	addi	r2,r2,16356
10005c74:	d9002517 	ldw	r4,148(sp)
10005c78:	203fec26 	beq	r4,zero,10005c2c <__alt_data_end+0xf8005c2c>
10005c7c:	10c000c7 	ldb	r3,3(r2)
10005c80:	1801781e 	bne	r3,zero,10006264 <_dtoa_r+0x6f8>
10005c84:	10c000c4 	addi	r3,r2,3
10005c88:	d9802517 	ldw	r6,148(sp)
10005c8c:	30c00015 	stw	r3,0(r6)
10005c90:	003fe606 	br	10005c2c <__alt_data_end+0xf8005c2c>
10005c94:	04e00034 	movhi	r19,32768
10005c98:	9cffffc4 	addi	r19,r19,-1
10005c9c:	00800044 	movi	r2,1
10005ca0:	8ce6703a 	and	r19,r17,r19
10005ca4:	80800015 	stw	r2,0(r16)
10005ca8:	9823883a 	mov	r17,r19
10005cac:	003fcc06 	br	10005be0 <__alt_data_end+0xf8005be0>
10005cb0:	d8800204 	addi	r2,sp,8
10005cb4:	d8800015 	stw	r2,0(sp)
10005cb8:	d9c00104 	addi	r7,sp,4
10005cbc:	900b883a 	mov	r5,r18
10005cc0:	980d883a 	mov	r6,r19
10005cc4:	e009883a 	mov	r4,fp
10005cc8:	8820d53a 	srli	r16,r17,20
10005ccc:	0009f740 	call	10009f74 <__d2b>
10005cd0:	d8800915 	stw	r2,36(sp)
10005cd4:	8001651e 	bne	r16,zero,1000626c <_dtoa_r+0x700>
10005cd8:	dd800217 	ldw	r22,8(sp)
10005cdc:	dc000117 	ldw	r16,4(sp)
10005ce0:	00800804 	movi	r2,32
10005ce4:	b421883a 	add	r16,r22,r16
10005ce8:	80c10c84 	addi	r3,r16,1074
10005cec:	10c2d10e 	bge	r2,r3,10006834 <_dtoa_r+0xcc8>
10005cf0:	00801004 	movi	r2,64
10005cf4:	81010484 	addi	r4,r16,1042
10005cf8:	10c7c83a 	sub	r3,r2,r3
10005cfc:	9108d83a 	srl	r4,r18,r4
10005d00:	88e2983a 	sll	r17,r17,r3
10005d04:	2448b03a 	or	r4,r4,r17
10005d08:	00115380 	call	10011538 <__floatunsidf>
10005d0c:	017f8434 	movhi	r5,65040
10005d10:	01800044 	movi	r6,1
10005d14:	1009883a 	mov	r4,r2
10005d18:	194b883a 	add	r5,r3,r5
10005d1c:	843fffc4 	addi	r16,r16,-1
10005d20:	d9801115 	stw	r6,68(sp)
10005d24:	000d883a 	mov	r6,zero
10005d28:	01cffe34 	movhi	r7,16376
10005d2c:	0010ae00 	call	10010ae0 <__subdf3>
10005d30:	0198dbf4 	movhi	r6,25455
10005d34:	01cff4f4 	movhi	r7,16339
10005d38:	3190d844 	addi	r6,r6,17249
10005d3c:	39e1e9c4 	addi	r7,r7,-30809
10005d40:	1009883a 	mov	r4,r2
10005d44:	180b883a 	mov	r5,r3
10005d48:	00102740 	call	10010274 <__muldf3>
10005d4c:	01a2d874 	movhi	r6,35681
10005d50:	01cff1f4 	movhi	r7,16327
10005d54:	31b22cc4 	addi	r6,r6,-14157
10005d58:	39e28a04 	addi	r7,r7,-30168
10005d5c:	180b883a 	mov	r5,r3
10005d60:	1009883a 	mov	r4,r2
10005d64:	000eda00 	call	1000eda0 <__adddf3>
10005d68:	8009883a 	mov	r4,r16
10005d6c:	1029883a 	mov	r20,r2
10005d70:	1823883a 	mov	r17,r3
10005d74:	001145c0 	call	1001145c <__floatsidf>
10005d78:	019427f4 	movhi	r6,20639
10005d7c:	01cff4f4 	movhi	r7,16339
10005d80:	319e7ec4 	addi	r6,r6,31227
10005d84:	39d104c4 	addi	r7,r7,17427
10005d88:	1009883a 	mov	r4,r2
10005d8c:	180b883a 	mov	r5,r3
10005d90:	00102740 	call	10010274 <__muldf3>
10005d94:	100d883a 	mov	r6,r2
10005d98:	180f883a 	mov	r7,r3
10005d9c:	a009883a 	mov	r4,r20
10005da0:	880b883a 	mov	r5,r17
10005da4:	000eda00 	call	1000eda0 <__adddf3>
10005da8:	1009883a 	mov	r4,r2
10005dac:	180b883a 	mov	r5,r3
10005db0:	1029883a 	mov	r20,r2
10005db4:	1823883a 	mov	r17,r3
10005db8:	00113dc0 	call	100113dc <__fixdfsi>
10005dbc:	000d883a 	mov	r6,zero
10005dc0:	000f883a 	mov	r7,zero
10005dc4:	a009883a 	mov	r4,r20
10005dc8:	880b883a 	mov	r5,r17
10005dcc:	d8800515 	stw	r2,20(sp)
10005dd0:	00101800 	call	10010180 <__ledf2>
10005dd4:	10028716 	blt	r2,zero,100067f4 <_dtoa_r+0xc88>
10005dd8:	d8c00517 	ldw	r3,20(sp)
10005ddc:	00800584 	movi	r2,22
10005de0:	10c27536 	bltu	r2,r3,100067b8 <_dtoa_r+0xc4c>
10005de4:	180490fa 	slli	r2,r3,3
10005de8:	00c40074 	movhi	r3,4097
10005dec:	18d01504 	addi	r3,r3,16468
10005df0:	1885883a 	add	r2,r3,r2
10005df4:	11000017 	ldw	r4,0(r2)
10005df8:	11400117 	ldw	r5,4(r2)
10005dfc:	900d883a 	mov	r6,r18
10005e00:	980f883a 	mov	r7,r19
10005e04:	00100a40 	call	100100a4 <__gedf2>
10005e08:	00828d0e 	bge	zero,r2,10006840 <_dtoa_r+0xcd4>
10005e0c:	d9000517 	ldw	r4,20(sp)
10005e10:	d8000e15 	stw	zero,56(sp)
10005e14:	213fffc4 	addi	r4,r4,-1
10005e18:	d9000515 	stw	r4,20(sp)
10005e1c:	b42dc83a 	sub	r22,r22,r16
10005e20:	b5bfffc4 	addi	r22,r22,-1
10005e24:	b0026f16 	blt	r22,zero,100067e4 <_dtoa_r+0xc78>
10005e28:	d8000815 	stw	zero,32(sp)
10005e2c:	d9c00517 	ldw	r7,20(sp)
10005e30:	38026416 	blt	r7,zero,100067c4 <_dtoa_r+0xc58>
10005e34:	b1ed883a 	add	r22,r22,r7
10005e38:	d9c00d15 	stw	r7,52(sp)
10005e3c:	d8000a15 	stw	zero,40(sp)
10005e40:	d9800317 	ldw	r6,12(sp)
10005e44:	00800244 	movi	r2,9
10005e48:	11811436 	bltu	r2,r6,1000629c <_dtoa_r+0x730>
10005e4c:	00800144 	movi	r2,5
10005e50:	1184e10e 	bge	r2,r6,100071d8 <_dtoa_r+0x166c>
10005e54:	31bfff04 	addi	r6,r6,-4
10005e58:	d9800315 	stw	r6,12(sp)
10005e5c:	0023883a 	mov	r17,zero
10005e60:	d9800317 	ldw	r6,12(sp)
10005e64:	008000c4 	movi	r2,3
10005e68:	30836726 	beq	r6,r2,10006c08 <_dtoa_r+0x109c>
10005e6c:	1183410e 	bge	r2,r6,10006b74 <_dtoa_r+0x1008>
10005e70:	d9c00317 	ldw	r7,12(sp)
10005e74:	00800104 	movi	r2,4
10005e78:	38827c26 	beq	r7,r2,1000686c <_dtoa_r+0xd00>
10005e7c:	00800144 	movi	r2,5
10005e80:	3884c41e 	bne	r7,r2,10007194 <_dtoa_r+0x1628>
10005e84:	00800044 	movi	r2,1
10005e88:	d8800b15 	stw	r2,44(sp)
10005e8c:	d8c00517 	ldw	r3,20(sp)
10005e90:	d9002217 	ldw	r4,136(sp)
10005e94:	1907883a 	add	r3,r3,r4
10005e98:	19800044 	addi	r6,r3,1
10005e9c:	d8c00c15 	stw	r3,48(sp)
10005ea0:	d9800615 	stw	r6,24(sp)
10005ea4:	0183a40e 	bge	zero,r6,10006d38 <_dtoa_r+0x11cc>
10005ea8:	d9800617 	ldw	r6,24(sp)
10005eac:	3021883a 	mov	r16,r6
10005eb0:	e0001115 	stw	zero,68(fp)
10005eb4:	008005c4 	movi	r2,23
10005eb8:	1184c92e 	bgeu	r2,r6,100071e0 <_dtoa_r+0x1674>
10005ebc:	00c00044 	movi	r3,1
10005ec0:	00800104 	movi	r2,4
10005ec4:	1085883a 	add	r2,r2,r2
10005ec8:	11000504 	addi	r4,r2,20
10005ecc:	180b883a 	mov	r5,r3
10005ed0:	18c00044 	addi	r3,r3,1
10005ed4:	313ffb2e 	bgeu	r6,r4,10005ec4 <__alt_data_end+0xf8005ec4>
10005ed8:	e1401115 	stw	r5,68(fp)
10005edc:	e009883a 	mov	r4,fp
10005ee0:	00092240 	call	10009224 <_Balloc>
10005ee4:	d8800715 	stw	r2,28(sp)
10005ee8:	e0801015 	stw	r2,64(fp)
10005eec:	00800384 	movi	r2,14
10005ef0:	1400f736 	bltu	r2,r16,100062d0 <_dtoa_r+0x764>
10005ef4:	8800f626 	beq	r17,zero,100062d0 <_dtoa_r+0x764>
10005ef8:	d9c00517 	ldw	r7,20(sp)
10005efc:	01c39a0e 	bge	zero,r7,10006d68 <_dtoa_r+0x11fc>
10005f00:	388003cc 	andi	r2,r7,15
10005f04:	100490fa 	slli	r2,r2,3
10005f08:	382bd13a 	srai	r21,r7,4
10005f0c:	00c40074 	movhi	r3,4097
10005f10:	18d01504 	addi	r3,r3,16468
10005f14:	1885883a 	add	r2,r3,r2
10005f18:	a8c0040c 	andi	r3,r21,16
10005f1c:	12400017 	ldw	r9,0(r2)
10005f20:	12000117 	ldw	r8,4(r2)
10005f24:	18037926 	beq	r3,zero,10006d0c <_dtoa_r+0x11a0>
10005f28:	00840074 	movhi	r2,4097
10005f2c:	10900b04 	addi	r2,r2,16428
10005f30:	11800817 	ldw	r6,32(r2)
10005f34:	11c00917 	ldw	r7,36(r2)
10005f38:	9009883a 	mov	r4,r18
10005f3c:	980b883a 	mov	r5,r19
10005f40:	da001715 	stw	r8,92(sp)
10005f44:	da401615 	stw	r9,88(sp)
10005f48:	000f64c0 	call	1000f64c <__divdf3>
10005f4c:	da001717 	ldw	r8,92(sp)
10005f50:	da401617 	ldw	r9,88(sp)
10005f54:	ad4003cc 	andi	r21,r21,15
10005f58:	040000c4 	movi	r16,3
10005f5c:	1023883a 	mov	r17,r2
10005f60:	1829883a 	mov	r20,r3
10005f64:	a8001126 	beq	r21,zero,10005fac <_dtoa_r+0x440>
10005f68:	05c40074 	movhi	r23,4097
10005f6c:	bdd00b04 	addi	r23,r23,16428
10005f70:	4805883a 	mov	r2,r9
10005f74:	4007883a 	mov	r3,r8
10005f78:	a980004c 	andi	r6,r21,1
10005f7c:	1009883a 	mov	r4,r2
10005f80:	a82bd07a 	srai	r21,r21,1
10005f84:	180b883a 	mov	r5,r3
10005f88:	30000426 	beq	r6,zero,10005f9c <_dtoa_r+0x430>
10005f8c:	b9800017 	ldw	r6,0(r23)
10005f90:	b9c00117 	ldw	r7,4(r23)
10005f94:	84000044 	addi	r16,r16,1
10005f98:	00102740 	call	10010274 <__muldf3>
10005f9c:	bdc00204 	addi	r23,r23,8
10005fa0:	a83ff51e 	bne	r21,zero,10005f78 <__alt_data_end+0xf8005f78>
10005fa4:	1013883a 	mov	r9,r2
10005fa8:	1811883a 	mov	r8,r3
10005fac:	480d883a 	mov	r6,r9
10005fb0:	400f883a 	mov	r7,r8
10005fb4:	8809883a 	mov	r4,r17
10005fb8:	a00b883a 	mov	r5,r20
10005fbc:	000f64c0 	call	1000f64c <__divdf3>
10005fc0:	d8800f15 	stw	r2,60(sp)
10005fc4:	d8c01015 	stw	r3,64(sp)
10005fc8:	d8c00e17 	ldw	r3,56(sp)
10005fcc:	18000626 	beq	r3,zero,10005fe8 <_dtoa_r+0x47c>
10005fd0:	d9000f17 	ldw	r4,60(sp)
10005fd4:	d9401017 	ldw	r5,64(sp)
10005fd8:	000d883a 	mov	r6,zero
10005fdc:	01cffc34 	movhi	r7,16368
10005fe0:	00101800 	call	10010180 <__ledf2>
10005fe4:	10040b16 	blt	r2,zero,10007014 <_dtoa_r+0x14a8>
10005fe8:	8009883a 	mov	r4,r16
10005fec:	001145c0 	call	1001145c <__floatsidf>
10005ff0:	d9800f17 	ldw	r6,60(sp)
10005ff4:	d9c01017 	ldw	r7,64(sp)
10005ff8:	1009883a 	mov	r4,r2
10005ffc:	180b883a 	mov	r5,r3
10006000:	00102740 	call	10010274 <__muldf3>
10006004:	000d883a 	mov	r6,zero
10006008:	01d00734 	movhi	r7,16412
1000600c:	1009883a 	mov	r4,r2
10006010:	180b883a 	mov	r5,r3
10006014:	000eda00 	call	1000eda0 <__adddf3>
10006018:	1021883a 	mov	r16,r2
1000601c:	d8800617 	ldw	r2,24(sp)
10006020:	047f3034 	movhi	r17,64704
10006024:	1c63883a 	add	r17,r3,r17
10006028:	10031826 	beq	r2,zero,10006c8c <_dtoa_r+0x1120>
1000602c:	d8c00517 	ldw	r3,20(sp)
10006030:	db000617 	ldw	r12,24(sp)
10006034:	d8c01315 	stw	r3,76(sp)
10006038:	d9000b17 	ldw	r4,44(sp)
1000603c:	20038f26 	beq	r4,zero,10006e7c <_dtoa_r+0x1310>
10006040:	60bfffc4 	addi	r2,r12,-1
10006044:	100490fa 	slli	r2,r2,3
10006048:	00c40074 	movhi	r3,4097
1000604c:	18d01504 	addi	r3,r3,16468
10006050:	1885883a 	add	r2,r3,r2
10006054:	11800017 	ldw	r6,0(r2)
10006058:	11c00117 	ldw	r7,4(r2)
1000605c:	d8800717 	ldw	r2,28(sp)
10006060:	0009883a 	mov	r4,zero
10006064:	014ff834 	movhi	r5,16352
10006068:	db001615 	stw	r12,88(sp)
1000606c:	15c00044 	addi	r23,r2,1
10006070:	000f64c0 	call	1000f64c <__divdf3>
10006074:	800d883a 	mov	r6,r16
10006078:	880f883a 	mov	r7,r17
1000607c:	1009883a 	mov	r4,r2
10006080:	180b883a 	mov	r5,r3
10006084:	0010ae00 	call	10010ae0 <__subdf3>
10006088:	d9401017 	ldw	r5,64(sp)
1000608c:	d9000f17 	ldw	r4,60(sp)
10006090:	102b883a 	mov	r21,r2
10006094:	d8c01215 	stw	r3,72(sp)
10006098:	00113dc0 	call	100113dc <__fixdfsi>
1000609c:	1009883a 	mov	r4,r2
100060a0:	1029883a 	mov	r20,r2
100060a4:	001145c0 	call	1001145c <__floatsidf>
100060a8:	d9000f17 	ldw	r4,60(sp)
100060ac:	d9401017 	ldw	r5,64(sp)
100060b0:	100d883a 	mov	r6,r2
100060b4:	180f883a 	mov	r7,r3
100060b8:	0010ae00 	call	10010ae0 <__subdf3>
100060bc:	1823883a 	mov	r17,r3
100060c0:	d8c00717 	ldw	r3,28(sp)
100060c4:	d9401217 	ldw	r5,72(sp)
100060c8:	a2000c04 	addi	r8,r20,48
100060cc:	1021883a 	mov	r16,r2
100060d0:	1a000005 	stb	r8,0(r3)
100060d4:	800d883a 	mov	r6,r16
100060d8:	880f883a 	mov	r7,r17
100060dc:	a809883a 	mov	r4,r21
100060e0:	4029883a 	mov	r20,r8
100060e4:	00100a40 	call	100100a4 <__gedf2>
100060e8:	00841d16 	blt	zero,r2,10007160 <_dtoa_r+0x15f4>
100060ec:	800d883a 	mov	r6,r16
100060f0:	880f883a 	mov	r7,r17
100060f4:	0009883a 	mov	r4,zero
100060f8:	014ffc34 	movhi	r5,16368
100060fc:	0010ae00 	call	10010ae0 <__subdf3>
10006100:	d9401217 	ldw	r5,72(sp)
10006104:	100d883a 	mov	r6,r2
10006108:	180f883a 	mov	r7,r3
1000610c:	a809883a 	mov	r4,r21
10006110:	00100a40 	call	100100a4 <__gedf2>
10006114:	db001617 	ldw	r12,88(sp)
10006118:	00840e16 	blt	zero,r2,10007154 <_dtoa_r+0x15e8>
1000611c:	00800044 	movi	r2,1
10006120:	13006b0e 	bge	r2,r12,100062d0 <_dtoa_r+0x764>
10006124:	d9000717 	ldw	r4,28(sp)
10006128:	dd800f15 	stw	r22,60(sp)
1000612c:	dcc01015 	stw	r19,64(sp)
10006130:	2319883a 	add	r12,r4,r12
10006134:	dcc01217 	ldw	r19,72(sp)
10006138:	602d883a 	mov	r22,r12
1000613c:	dc801215 	stw	r18,72(sp)
10006140:	b825883a 	mov	r18,r23
10006144:	00000906 	br	1000616c <_dtoa_r+0x600>
10006148:	0010ae00 	call	10010ae0 <__subdf3>
1000614c:	a80d883a 	mov	r6,r21
10006150:	980f883a 	mov	r7,r19
10006154:	1009883a 	mov	r4,r2
10006158:	180b883a 	mov	r5,r3
1000615c:	00101800 	call	10010180 <__ledf2>
10006160:	1003e816 	blt	r2,zero,10007104 <_dtoa_r+0x1598>
10006164:	b825883a 	mov	r18,r23
10006168:	bd83e926 	beq	r23,r22,10007110 <_dtoa_r+0x15a4>
1000616c:	a809883a 	mov	r4,r21
10006170:	980b883a 	mov	r5,r19
10006174:	000d883a 	mov	r6,zero
10006178:	01d00934 	movhi	r7,16420
1000617c:	00102740 	call	10010274 <__muldf3>
10006180:	000d883a 	mov	r6,zero
10006184:	01d00934 	movhi	r7,16420
10006188:	8009883a 	mov	r4,r16
1000618c:	880b883a 	mov	r5,r17
10006190:	102b883a 	mov	r21,r2
10006194:	1827883a 	mov	r19,r3
10006198:	00102740 	call	10010274 <__muldf3>
1000619c:	180b883a 	mov	r5,r3
100061a0:	1009883a 	mov	r4,r2
100061a4:	1821883a 	mov	r16,r3
100061a8:	1023883a 	mov	r17,r2
100061ac:	00113dc0 	call	100113dc <__fixdfsi>
100061b0:	1009883a 	mov	r4,r2
100061b4:	1029883a 	mov	r20,r2
100061b8:	001145c0 	call	1001145c <__floatsidf>
100061bc:	8809883a 	mov	r4,r17
100061c0:	800b883a 	mov	r5,r16
100061c4:	100d883a 	mov	r6,r2
100061c8:	180f883a 	mov	r7,r3
100061cc:	0010ae00 	call	10010ae0 <__subdf3>
100061d0:	a5000c04 	addi	r20,r20,48
100061d4:	a80d883a 	mov	r6,r21
100061d8:	980f883a 	mov	r7,r19
100061dc:	1009883a 	mov	r4,r2
100061e0:	180b883a 	mov	r5,r3
100061e4:	95000005 	stb	r20,0(r18)
100061e8:	1021883a 	mov	r16,r2
100061ec:	1823883a 	mov	r17,r3
100061f0:	00101800 	call	10010180 <__ledf2>
100061f4:	bdc00044 	addi	r23,r23,1
100061f8:	800d883a 	mov	r6,r16
100061fc:	880f883a 	mov	r7,r17
10006200:	0009883a 	mov	r4,zero
10006204:	014ffc34 	movhi	r5,16368
10006208:	103fcf0e 	bge	r2,zero,10006148 <__alt_data_end+0xf8006148>
1000620c:	d8c01317 	ldw	r3,76(sp)
10006210:	d8c00515 	stw	r3,20(sp)
10006214:	d9400917 	ldw	r5,36(sp)
10006218:	e009883a 	mov	r4,fp
1000621c:	00092cc0 	call	100092cc <_Bfree>
10006220:	d9000517 	ldw	r4,20(sp)
10006224:	d9802317 	ldw	r6,140(sp)
10006228:	d9c02517 	ldw	r7,148(sp)
1000622c:	b8000005 	stb	zero,0(r23)
10006230:	20800044 	addi	r2,r4,1
10006234:	30800015 	stw	r2,0(r6)
10006238:	3802aa26 	beq	r7,zero,10006ce4 <_dtoa_r+0x1178>
1000623c:	3dc00015 	stw	r23,0(r7)
10006240:	d8800717 	ldw	r2,28(sp)
10006244:	003e7906 	br	10005c2c <__alt_data_end+0xf8005c2c>
10006248:	00800434 	movhi	r2,16
1000624c:	10bfffc4 	addi	r2,r2,-1
10006250:	88a2703a 	and	r17,r17,r2
10006254:	883e851e 	bne	r17,zero,10005c6c <__alt_data_end+0xf8005c6c>
10006258:	00840074 	movhi	r2,4097
1000625c:	108ff604 	addi	r2,r2,16344
10006260:	003e8406 	br	10005c74 <__alt_data_end+0xf8005c74>
10006264:	10c00204 	addi	r3,r2,8
10006268:	003e8706 	br	10005c88 <__alt_data_end+0xf8005c88>
1000626c:	01400434 	movhi	r5,16
10006270:	297fffc4 	addi	r5,r5,-1
10006274:	994a703a 	and	r5,r19,r5
10006278:	9009883a 	mov	r4,r18
1000627c:	843f0044 	addi	r16,r16,-1023
10006280:	294ffc34 	orhi	r5,r5,16368
10006284:	dd800217 	ldw	r22,8(sp)
10006288:	d8001115 	stw	zero,68(sp)
1000628c:	003ea506 	br	10005d24 <__alt_data_end+0xf8005d24>
10006290:	00840074 	movhi	r2,4097
10006294:	108fe504 	addi	r2,r2,16276
10006298:	003e6406 	br	10005c2c <__alt_data_end+0xf8005c2c>
1000629c:	e0001115 	stw	zero,68(fp)
100062a0:	000b883a 	mov	r5,zero
100062a4:	e009883a 	mov	r4,fp
100062a8:	00092240 	call	10009224 <_Balloc>
100062ac:	01bfffc4 	movi	r6,-1
100062b0:	01c00044 	movi	r7,1
100062b4:	d8800715 	stw	r2,28(sp)
100062b8:	d9800c15 	stw	r6,48(sp)
100062bc:	e0801015 	stw	r2,64(fp)
100062c0:	d8000315 	stw	zero,12(sp)
100062c4:	d9c00b15 	stw	r7,44(sp)
100062c8:	d9800615 	stw	r6,24(sp)
100062cc:	d8002215 	stw	zero,136(sp)
100062d0:	d8800117 	ldw	r2,4(sp)
100062d4:	10008916 	blt	r2,zero,100064fc <_dtoa_r+0x990>
100062d8:	d9000517 	ldw	r4,20(sp)
100062dc:	00c00384 	movi	r3,14
100062e0:	19008616 	blt	r3,r4,100064fc <_dtoa_r+0x990>
100062e4:	200490fa 	slli	r2,r4,3
100062e8:	00c40074 	movhi	r3,4097
100062ec:	d9802217 	ldw	r6,136(sp)
100062f0:	18d01504 	addi	r3,r3,16468
100062f4:	1885883a 	add	r2,r3,r2
100062f8:	14000017 	ldw	r16,0(r2)
100062fc:	14400117 	ldw	r17,4(r2)
10006300:	30016316 	blt	r6,zero,10006890 <_dtoa_r+0xd24>
10006304:	800d883a 	mov	r6,r16
10006308:	880f883a 	mov	r7,r17
1000630c:	9009883a 	mov	r4,r18
10006310:	980b883a 	mov	r5,r19
10006314:	000f64c0 	call	1000f64c <__divdf3>
10006318:	180b883a 	mov	r5,r3
1000631c:	1009883a 	mov	r4,r2
10006320:	00113dc0 	call	100113dc <__fixdfsi>
10006324:	1009883a 	mov	r4,r2
10006328:	102b883a 	mov	r21,r2
1000632c:	001145c0 	call	1001145c <__floatsidf>
10006330:	800d883a 	mov	r6,r16
10006334:	880f883a 	mov	r7,r17
10006338:	1009883a 	mov	r4,r2
1000633c:	180b883a 	mov	r5,r3
10006340:	00102740 	call	10010274 <__muldf3>
10006344:	100d883a 	mov	r6,r2
10006348:	180f883a 	mov	r7,r3
1000634c:	9009883a 	mov	r4,r18
10006350:	980b883a 	mov	r5,r19
10006354:	0010ae00 	call	10010ae0 <__subdf3>
10006358:	d9c00717 	ldw	r7,28(sp)
1000635c:	1009883a 	mov	r4,r2
10006360:	a8800c04 	addi	r2,r21,48
10006364:	38800005 	stb	r2,0(r7)
10006368:	3dc00044 	addi	r23,r7,1
1000636c:	d9c00617 	ldw	r7,24(sp)
10006370:	01800044 	movi	r6,1
10006374:	180b883a 	mov	r5,r3
10006378:	2005883a 	mov	r2,r4
1000637c:	39803826 	beq	r7,r6,10006460 <_dtoa_r+0x8f4>
10006380:	000d883a 	mov	r6,zero
10006384:	01d00934 	movhi	r7,16420
10006388:	00102740 	call	10010274 <__muldf3>
1000638c:	000d883a 	mov	r6,zero
10006390:	000f883a 	mov	r7,zero
10006394:	1009883a 	mov	r4,r2
10006398:	180b883a 	mov	r5,r3
1000639c:	1025883a 	mov	r18,r2
100063a0:	1827883a 	mov	r19,r3
100063a4:	001001c0 	call	1001001c <__eqdf2>
100063a8:	103f9a26 	beq	r2,zero,10006214 <__alt_data_end+0xf8006214>
100063ac:	d9c00617 	ldw	r7,24(sp)
100063b0:	d8c00717 	ldw	r3,28(sp)
100063b4:	b829883a 	mov	r20,r23
100063b8:	38bfffc4 	addi	r2,r7,-1
100063bc:	18ad883a 	add	r22,r3,r2
100063c0:	00000a06 	br	100063ec <_dtoa_r+0x880>
100063c4:	00102740 	call	10010274 <__muldf3>
100063c8:	000d883a 	mov	r6,zero
100063cc:	000f883a 	mov	r7,zero
100063d0:	1009883a 	mov	r4,r2
100063d4:	180b883a 	mov	r5,r3
100063d8:	1025883a 	mov	r18,r2
100063dc:	1827883a 	mov	r19,r3
100063e0:	b829883a 	mov	r20,r23
100063e4:	001001c0 	call	1001001c <__eqdf2>
100063e8:	103f8a26 	beq	r2,zero,10006214 <__alt_data_end+0xf8006214>
100063ec:	800d883a 	mov	r6,r16
100063f0:	880f883a 	mov	r7,r17
100063f4:	9009883a 	mov	r4,r18
100063f8:	980b883a 	mov	r5,r19
100063fc:	000f64c0 	call	1000f64c <__divdf3>
10006400:	180b883a 	mov	r5,r3
10006404:	1009883a 	mov	r4,r2
10006408:	00113dc0 	call	100113dc <__fixdfsi>
1000640c:	1009883a 	mov	r4,r2
10006410:	102b883a 	mov	r21,r2
10006414:	001145c0 	call	1001145c <__floatsidf>
10006418:	800d883a 	mov	r6,r16
1000641c:	880f883a 	mov	r7,r17
10006420:	1009883a 	mov	r4,r2
10006424:	180b883a 	mov	r5,r3
10006428:	00102740 	call	10010274 <__muldf3>
1000642c:	100d883a 	mov	r6,r2
10006430:	180f883a 	mov	r7,r3
10006434:	9009883a 	mov	r4,r18
10006438:	980b883a 	mov	r5,r19
1000643c:	0010ae00 	call	10010ae0 <__subdf3>
10006440:	aa000c04 	addi	r8,r21,48
10006444:	a2000005 	stb	r8,0(r20)
10006448:	000d883a 	mov	r6,zero
1000644c:	01d00934 	movhi	r7,16420
10006450:	1009883a 	mov	r4,r2
10006454:	180b883a 	mov	r5,r3
10006458:	a5c00044 	addi	r23,r20,1
1000645c:	b53fd91e 	bne	r22,r20,100063c4 <__alt_data_end+0xf80063c4>
10006460:	100d883a 	mov	r6,r2
10006464:	180f883a 	mov	r7,r3
10006468:	1009883a 	mov	r4,r2
1000646c:	180b883a 	mov	r5,r3
10006470:	000eda00 	call	1000eda0 <__adddf3>
10006474:	100d883a 	mov	r6,r2
10006478:	180f883a 	mov	r7,r3
1000647c:	8009883a 	mov	r4,r16
10006480:	880b883a 	mov	r5,r17
10006484:	1027883a 	mov	r19,r2
10006488:	1825883a 	mov	r18,r3
1000648c:	00101800 	call	10010180 <__ledf2>
10006490:	10000816 	blt	r2,zero,100064b4 <_dtoa_r+0x948>
10006494:	980d883a 	mov	r6,r19
10006498:	900f883a 	mov	r7,r18
1000649c:	8009883a 	mov	r4,r16
100064a0:	880b883a 	mov	r5,r17
100064a4:	001001c0 	call	1001001c <__eqdf2>
100064a8:	103f5a1e 	bne	r2,zero,10006214 <__alt_data_end+0xf8006214>
100064ac:	ad40004c 	andi	r21,r21,1
100064b0:	a83f5826 	beq	r21,zero,10006214 <__alt_data_end+0xf8006214>
100064b4:	bd3fffc3 	ldbu	r20,-1(r23)
100064b8:	b8bfffc4 	addi	r2,r23,-1
100064bc:	1007883a 	mov	r3,r2
100064c0:	01400e44 	movi	r5,57
100064c4:	d9800717 	ldw	r6,28(sp)
100064c8:	00000506 	br	100064e0 <_dtoa_r+0x974>
100064cc:	18ffffc4 	addi	r3,r3,-1
100064d0:	11824726 	beq	r2,r6,10006df0 <_dtoa_r+0x1284>
100064d4:	1d000003 	ldbu	r20,0(r3)
100064d8:	102f883a 	mov	r23,r2
100064dc:	10bfffc4 	addi	r2,r2,-1
100064e0:	a1003fcc 	andi	r4,r20,255
100064e4:	2100201c 	xori	r4,r4,128
100064e8:	213fe004 	addi	r4,r4,-128
100064ec:	217ff726 	beq	r4,r5,100064cc <__alt_data_end+0xf80064cc>
100064f0:	a2000044 	addi	r8,r20,1
100064f4:	12000005 	stb	r8,0(r2)
100064f8:	003f4606 	br	10006214 <__alt_data_end+0xf8006214>
100064fc:	d9000b17 	ldw	r4,44(sp)
10006500:	2000c826 	beq	r4,zero,10006824 <_dtoa_r+0xcb8>
10006504:	d9800317 	ldw	r6,12(sp)
10006508:	00c00044 	movi	r3,1
1000650c:	1980f90e 	bge	r3,r6,100068f4 <_dtoa_r+0xd88>
10006510:	d8800617 	ldw	r2,24(sp)
10006514:	d8c00a17 	ldw	r3,40(sp)
10006518:	157fffc4 	addi	r21,r2,-1
1000651c:	1d41f316 	blt	r3,r21,10006cec <_dtoa_r+0x1180>
10006520:	1d6bc83a 	sub	r21,r3,r21
10006524:	d9c00617 	ldw	r7,24(sp)
10006528:	3802aa16 	blt	r7,zero,10006fd4 <_dtoa_r+0x1468>
1000652c:	dd000817 	ldw	r20,32(sp)
10006530:	d8800617 	ldw	r2,24(sp)
10006534:	d8c00817 	ldw	r3,32(sp)
10006538:	01400044 	movi	r5,1
1000653c:	e009883a 	mov	r4,fp
10006540:	1887883a 	add	r3,r3,r2
10006544:	d8c00815 	stw	r3,32(sp)
10006548:	b0ad883a 	add	r22,r22,r2
1000654c:	00096580 	call	10009658 <__i2b>
10006550:	1023883a 	mov	r17,r2
10006554:	a0000826 	beq	r20,zero,10006578 <_dtoa_r+0xa0c>
10006558:	0580070e 	bge	zero,r22,10006578 <_dtoa_r+0xa0c>
1000655c:	a005883a 	mov	r2,r20
10006560:	b500b916 	blt	r22,r20,10006848 <_dtoa_r+0xcdc>
10006564:	d9000817 	ldw	r4,32(sp)
10006568:	a0a9c83a 	sub	r20,r20,r2
1000656c:	b0adc83a 	sub	r22,r22,r2
10006570:	2089c83a 	sub	r4,r4,r2
10006574:	d9000815 	stw	r4,32(sp)
10006578:	d9800a17 	ldw	r6,40(sp)
1000657c:	0181810e 	bge	zero,r6,10006b84 <_dtoa_r+0x1018>
10006580:	d9c00b17 	ldw	r7,44(sp)
10006584:	3800b326 	beq	r7,zero,10006854 <_dtoa_r+0xce8>
10006588:	a800b226 	beq	r21,zero,10006854 <_dtoa_r+0xce8>
1000658c:	880b883a 	mov	r5,r17
10006590:	a80d883a 	mov	r6,r21
10006594:	e009883a 	mov	r4,fp
10006598:	00099200 	call	10009920 <__pow5mult>
1000659c:	d9800917 	ldw	r6,36(sp)
100065a0:	100b883a 	mov	r5,r2
100065a4:	e009883a 	mov	r4,fp
100065a8:	1023883a 	mov	r17,r2
100065ac:	00096940 	call	10009694 <__multiply>
100065b0:	1021883a 	mov	r16,r2
100065b4:	d8800a17 	ldw	r2,40(sp)
100065b8:	d9400917 	ldw	r5,36(sp)
100065bc:	e009883a 	mov	r4,fp
100065c0:	1545c83a 	sub	r2,r2,r21
100065c4:	d8800a15 	stw	r2,40(sp)
100065c8:	00092cc0 	call	100092cc <_Bfree>
100065cc:	d8c00a17 	ldw	r3,40(sp)
100065d0:	18009f1e 	bne	r3,zero,10006850 <_dtoa_r+0xce4>
100065d4:	05c00044 	movi	r23,1
100065d8:	e009883a 	mov	r4,fp
100065dc:	b80b883a 	mov	r5,r23
100065e0:	00096580 	call	10009658 <__i2b>
100065e4:	d9000d17 	ldw	r4,52(sp)
100065e8:	102b883a 	mov	r21,r2
100065ec:	2000ce26 	beq	r4,zero,10006928 <_dtoa_r+0xdbc>
100065f0:	200d883a 	mov	r6,r4
100065f4:	100b883a 	mov	r5,r2
100065f8:	e009883a 	mov	r4,fp
100065fc:	00099200 	call	10009920 <__pow5mult>
10006600:	d9800317 	ldw	r6,12(sp)
10006604:	102b883a 	mov	r21,r2
10006608:	b981810e 	bge	r23,r6,10006c10 <_dtoa_r+0x10a4>
1000660c:	0027883a 	mov	r19,zero
10006610:	a8800417 	ldw	r2,16(r21)
10006614:	05c00804 	movi	r23,32
10006618:	10800104 	addi	r2,r2,4
1000661c:	1085883a 	add	r2,r2,r2
10006620:	1085883a 	add	r2,r2,r2
10006624:	a885883a 	add	r2,r21,r2
10006628:	11000017 	ldw	r4,0(r2)
1000662c:	00095400 	call	10009540 <__hi0bits>
10006630:	b885c83a 	sub	r2,r23,r2
10006634:	1585883a 	add	r2,r2,r22
10006638:	108007cc 	andi	r2,r2,31
1000663c:	1000b326 	beq	r2,zero,1000690c <_dtoa_r+0xda0>
10006640:	00c00804 	movi	r3,32
10006644:	1887c83a 	sub	r3,r3,r2
10006648:	01000104 	movi	r4,4
1000664c:	20c2cd0e 	bge	r4,r3,10007184 <_dtoa_r+0x1618>
10006650:	00c00704 	movi	r3,28
10006654:	1885c83a 	sub	r2,r3,r2
10006658:	d8c00817 	ldw	r3,32(sp)
1000665c:	a0a9883a 	add	r20,r20,r2
10006660:	b0ad883a 	add	r22,r22,r2
10006664:	1887883a 	add	r3,r3,r2
10006668:	d8c00815 	stw	r3,32(sp)
1000666c:	d9800817 	ldw	r6,32(sp)
10006670:	0180040e 	bge	zero,r6,10006684 <_dtoa_r+0xb18>
10006674:	800b883a 	mov	r5,r16
10006678:	e009883a 	mov	r4,fp
1000667c:	0009a600 	call	10009a60 <__lshift>
10006680:	1021883a 	mov	r16,r2
10006684:	0580050e 	bge	zero,r22,1000669c <_dtoa_r+0xb30>
10006688:	a80b883a 	mov	r5,r21
1000668c:	b00d883a 	mov	r6,r22
10006690:	e009883a 	mov	r4,fp
10006694:	0009a600 	call	10009a60 <__lshift>
10006698:	102b883a 	mov	r21,r2
1000669c:	d9c00e17 	ldw	r7,56(sp)
100066a0:	3801211e 	bne	r7,zero,10006b28 <_dtoa_r+0xfbc>
100066a4:	d9800617 	ldw	r6,24(sp)
100066a8:	0181380e 	bge	zero,r6,10006b8c <_dtoa_r+0x1020>
100066ac:	d8c00b17 	ldw	r3,44(sp)
100066b0:	1800ab1e 	bne	r3,zero,10006960 <_dtoa_r+0xdf4>
100066b4:	dc800717 	ldw	r18,28(sp)
100066b8:	dcc00617 	ldw	r19,24(sp)
100066bc:	9029883a 	mov	r20,r18
100066c0:	00000206 	br	100066cc <_dtoa_r+0xb60>
100066c4:	00092f40 	call	100092f4 <__multadd>
100066c8:	1021883a 	mov	r16,r2
100066cc:	a80b883a 	mov	r5,r21
100066d0:	8009883a 	mov	r4,r16
100066d4:	00059440 	call	10005944 <quorem>
100066d8:	10800c04 	addi	r2,r2,48
100066dc:	90800005 	stb	r2,0(r18)
100066e0:	94800044 	addi	r18,r18,1
100066e4:	9507c83a 	sub	r3,r18,r20
100066e8:	000f883a 	mov	r7,zero
100066ec:	01800284 	movi	r6,10
100066f0:	800b883a 	mov	r5,r16
100066f4:	e009883a 	mov	r4,fp
100066f8:	1cfff216 	blt	r3,r19,100066c4 <__alt_data_end+0xf80066c4>
100066fc:	1011883a 	mov	r8,r2
10006700:	d8800617 	ldw	r2,24(sp)
10006704:	0082370e 	bge	zero,r2,10006fe4 <_dtoa_r+0x1478>
10006708:	d9000717 	ldw	r4,28(sp)
1000670c:	0025883a 	mov	r18,zero
10006710:	20af883a 	add	r23,r4,r2
10006714:	01800044 	movi	r6,1
10006718:	800b883a 	mov	r5,r16
1000671c:	e009883a 	mov	r4,fp
10006720:	da001715 	stw	r8,92(sp)
10006724:	0009a600 	call	10009a60 <__lshift>
10006728:	a80b883a 	mov	r5,r21
1000672c:	1009883a 	mov	r4,r2
10006730:	d8800915 	stw	r2,36(sp)
10006734:	0009ba80 	call	10009ba8 <__mcmp>
10006738:	da001717 	ldw	r8,92(sp)
1000673c:	0081800e 	bge	zero,r2,10006d40 <_dtoa_r+0x11d4>
10006740:	b93fffc3 	ldbu	r4,-1(r23)
10006744:	b8bfffc4 	addi	r2,r23,-1
10006748:	1007883a 	mov	r3,r2
1000674c:	01800e44 	movi	r6,57
10006750:	d9c00717 	ldw	r7,28(sp)
10006754:	00000506 	br	1000676c <_dtoa_r+0xc00>
10006758:	18ffffc4 	addi	r3,r3,-1
1000675c:	11c12326 	beq	r2,r7,10006bec <_dtoa_r+0x1080>
10006760:	19000003 	ldbu	r4,0(r3)
10006764:	102f883a 	mov	r23,r2
10006768:	10bfffc4 	addi	r2,r2,-1
1000676c:	21403fcc 	andi	r5,r4,255
10006770:	2940201c 	xori	r5,r5,128
10006774:	297fe004 	addi	r5,r5,-128
10006778:	29bff726 	beq	r5,r6,10006758 <__alt_data_end+0xf8006758>
1000677c:	21000044 	addi	r4,r4,1
10006780:	11000005 	stb	r4,0(r2)
10006784:	a80b883a 	mov	r5,r21
10006788:	e009883a 	mov	r4,fp
1000678c:	00092cc0 	call	100092cc <_Bfree>
10006790:	883ea026 	beq	r17,zero,10006214 <__alt_data_end+0xf8006214>
10006794:	90000426 	beq	r18,zero,100067a8 <_dtoa_r+0xc3c>
10006798:	94400326 	beq	r18,r17,100067a8 <_dtoa_r+0xc3c>
1000679c:	900b883a 	mov	r5,r18
100067a0:	e009883a 	mov	r4,fp
100067a4:	00092cc0 	call	100092cc <_Bfree>
100067a8:	880b883a 	mov	r5,r17
100067ac:	e009883a 	mov	r4,fp
100067b0:	00092cc0 	call	100092cc <_Bfree>
100067b4:	003e9706 	br	10006214 <__alt_data_end+0xf8006214>
100067b8:	01800044 	movi	r6,1
100067bc:	d9800e15 	stw	r6,56(sp)
100067c0:	003d9606 	br	10005e1c <__alt_data_end+0xf8005e1c>
100067c4:	d8800817 	ldw	r2,32(sp)
100067c8:	d8c00517 	ldw	r3,20(sp)
100067cc:	d8000d15 	stw	zero,52(sp)
100067d0:	10c5c83a 	sub	r2,r2,r3
100067d4:	00c9c83a 	sub	r4,zero,r3
100067d8:	d8800815 	stw	r2,32(sp)
100067dc:	d9000a15 	stw	r4,40(sp)
100067e0:	003d9706 	br	10005e40 <__alt_data_end+0xf8005e40>
100067e4:	05adc83a 	sub	r22,zero,r22
100067e8:	dd800815 	stw	r22,32(sp)
100067ec:	002d883a 	mov	r22,zero
100067f0:	003d8e06 	br	10005e2c <__alt_data_end+0xf8005e2c>
100067f4:	d9000517 	ldw	r4,20(sp)
100067f8:	001145c0 	call	1001145c <__floatsidf>
100067fc:	100d883a 	mov	r6,r2
10006800:	180f883a 	mov	r7,r3
10006804:	a009883a 	mov	r4,r20
10006808:	880b883a 	mov	r5,r17
1000680c:	001001c0 	call	1001001c <__eqdf2>
10006810:	103d7126 	beq	r2,zero,10005dd8 <__alt_data_end+0xf8005dd8>
10006814:	d9c00517 	ldw	r7,20(sp)
10006818:	39ffffc4 	addi	r7,r7,-1
1000681c:	d9c00515 	stw	r7,20(sp)
10006820:	003d6d06 	br	10005dd8 <__alt_data_end+0xf8005dd8>
10006824:	dd400a17 	ldw	r21,40(sp)
10006828:	dd000817 	ldw	r20,32(sp)
1000682c:	0023883a 	mov	r17,zero
10006830:	003f4806 	br	10006554 <__alt_data_end+0xf8006554>
10006834:	10e3c83a 	sub	r17,r2,r3
10006838:	9448983a 	sll	r4,r18,r17
1000683c:	003d3206 	br	10005d08 <__alt_data_end+0xf8005d08>
10006840:	d8000e15 	stw	zero,56(sp)
10006844:	003d7506 	br	10005e1c <__alt_data_end+0xf8005e1c>
10006848:	b005883a 	mov	r2,r22
1000684c:	003f4506 	br	10006564 <__alt_data_end+0xf8006564>
10006850:	dc000915 	stw	r16,36(sp)
10006854:	d9800a17 	ldw	r6,40(sp)
10006858:	d9400917 	ldw	r5,36(sp)
1000685c:	e009883a 	mov	r4,fp
10006860:	00099200 	call	10009920 <__pow5mult>
10006864:	1021883a 	mov	r16,r2
10006868:	003f5a06 	br	100065d4 <__alt_data_end+0xf80065d4>
1000686c:	01c00044 	movi	r7,1
10006870:	d9c00b15 	stw	r7,44(sp)
10006874:	d8802217 	ldw	r2,136(sp)
10006878:	0081280e 	bge	zero,r2,10006d1c <_dtoa_r+0x11b0>
1000687c:	100d883a 	mov	r6,r2
10006880:	1021883a 	mov	r16,r2
10006884:	d8800c15 	stw	r2,48(sp)
10006888:	d8800615 	stw	r2,24(sp)
1000688c:	003d8806 	br	10005eb0 <__alt_data_end+0xf8005eb0>
10006890:	d8800617 	ldw	r2,24(sp)
10006894:	00be9b16 	blt	zero,r2,10006304 <__alt_data_end+0xf8006304>
10006898:	10010f1e 	bne	r2,zero,10006cd8 <_dtoa_r+0x116c>
1000689c:	880b883a 	mov	r5,r17
100068a0:	000d883a 	mov	r6,zero
100068a4:	01d00534 	movhi	r7,16404
100068a8:	8009883a 	mov	r4,r16
100068ac:	00102740 	call	10010274 <__muldf3>
100068b0:	900d883a 	mov	r6,r18
100068b4:	980f883a 	mov	r7,r19
100068b8:	1009883a 	mov	r4,r2
100068bc:	180b883a 	mov	r5,r3
100068c0:	00100a40 	call	100100a4 <__gedf2>
100068c4:	002b883a 	mov	r21,zero
100068c8:	0023883a 	mov	r17,zero
100068cc:	1000bf16 	blt	r2,zero,10006bcc <_dtoa_r+0x1060>
100068d0:	d9802217 	ldw	r6,136(sp)
100068d4:	ddc00717 	ldw	r23,28(sp)
100068d8:	018c303a 	nor	r6,zero,r6
100068dc:	d9800515 	stw	r6,20(sp)
100068e0:	a80b883a 	mov	r5,r21
100068e4:	e009883a 	mov	r4,fp
100068e8:	00092cc0 	call	100092cc <_Bfree>
100068ec:	883e4926 	beq	r17,zero,10006214 <__alt_data_end+0xf8006214>
100068f0:	003fad06 	br	100067a8 <__alt_data_end+0xf80067a8>
100068f4:	d9c01117 	ldw	r7,68(sp)
100068f8:	3801bc26 	beq	r7,zero,10006fec <_dtoa_r+0x1480>
100068fc:	10810cc4 	addi	r2,r2,1075
10006900:	dd400a17 	ldw	r21,40(sp)
10006904:	dd000817 	ldw	r20,32(sp)
10006908:	003f0a06 	br	10006534 <__alt_data_end+0xf8006534>
1000690c:	00800704 	movi	r2,28
10006910:	d9000817 	ldw	r4,32(sp)
10006914:	a0a9883a 	add	r20,r20,r2
10006918:	b0ad883a 	add	r22,r22,r2
1000691c:	2089883a 	add	r4,r4,r2
10006920:	d9000815 	stw	r4,32(sp)
10006924:	003f5106 	br	1000666c <__alt_data_end+0xf800666c>
10006928:	d8c00317 	ldw	r3,12(sp)
1000692c:	b8c1fc0e 	bge	r23,r3,10007120 <_dtoa_r+0x15b4>
10006930:	0027883a 	mov	r19,zero
10006934:	b805883a 	mov	r2,r23
10006938:	003f3e06 	br	10006634 <__alt_data_end+0xf8006634>
1000693c:	880b883a 	mov	r5,r17
10006940:	e009883a 	mov	r4,fp
10006944:	000f883a 	mov	r7,zero
10006948:	01800284 	movi	r6,10
1000694c:	00092f40 	call	100092f4 <__multadd>
10006950:	d9000c17 	ldw	r4,48(sp)
10006954:	1023883a 	mov	r17,r2
10006958:	0102040e 	bge	zero,r4,1000716c <_dtoa_r+0x1600>
1000695c:	d9000615 	stw	r4,24(sp)
10006960:	0500050e 	bge	zero,r20,10006978 <_dtoa_r+0xe0c>
10006964:	880b883a 	mov	r5,r17
10006968:	a00d883a 	mov	r6,r20
1000696c:	e009883a 	mov	r4,fp
10006970:	0009a600 	call	10009a60 <__lshift>
10006974:	1023883a 	mov	r17,r2
10006978:	9801241e 	bne	r19,zero,10006e0c <_dtoa_r+0x12a0>
1000697c:	8829883a 	mov	r20,r17
10006980:	d9000617 	ldw	r4,24(sp)
10006984:	dcc00717 	ldw	r19,28(sp)
10006988:	9480004c 	andi	r18,r18,1
1000698c:	20bfffc4 	addi	r2,r4,-1
10006990:	9885883a 	add	r2,r19,r2
10006994:	d8800415 	stw	r2,16(sp)
10006998:	dc800615 	stw	r18,24(sp)
1000699c:	a80b883a 	mov	r5,r21
100069a0:	8009883a 	mov	r4,r16
100069a4:	00059440 	call	10005944 <quorem>
100069a8:	880b883a 	mov	r5,r17
100069ac:	8009883a 	mov	r4,r16
100069b0:	102f883a 	mov	r23,r2
100069b4:	0009ba80 	call	10009ba8 <__mcmp>
100069b8:	a80b883a 	mov	r5,r21
100069bc:	a00d883a 	mov	r6,r20
100069c0:	e009883a 	mov	r4,fp
100069c4:	102d883a 	mov	r22,r2
100069c8:	0009c080 	call	10009c08 <__mdiff>
100069cc:	1007883a 	mov	r3,r2
100069d0:	10800317 	ldw	r2,12(r2)
100069d4:	bc800c04 	addi	r18,r23,48
100069d8:	180b883a 	mov	r5,r3
100069dc:	10004e1e 	bne	r2,zero,10006b18 <_dtoa_r+0xfac>
100069e0:	8009883a 	mov	r4,r16
100069e4:	d8c01615 	stw	r3,88(sp)
100069e8:	0009ba80 	call	10009ba8 <__mcmp>
100069ec:	d8c01617 	ldw	r3,88(sp)
100069f0:	e009883a 	mov	r4,fp
100069f4:	d8801615 	stw	r2,88(sp)
100069f8:	180b883a 	mov	r5,r3
100069fc:	00092cc0 	call	100092cc <_Bfree>
10006a00:	d8801617 	ldw	r2,88(sp)
10006a04:	1000041e 	bne	r2,zero,10006a18 <_dtoa_r+0xeac>
10006a08:	d9800317 	ldw	r6,12(sp)
10006a0c:	3000021e 	bne	r6,zero,10006a18 <_dtoa_r+0xeac>
10006a10:	d8c00617 	ldw	r3,24(sp)
10006a14:	18003726 	beq	r3,zero,10006af4 <_dtoa_r+0xf88>
10006a18:	b0002016 	blt	r22,zero,10006a9c <_dtoa_r+0xf30>
10006a1c:	b000041e 	bne	r22,zero,10006a30 <_dtoa_r+0xec4>
10006a20:	d9000317 	ldw	r4,12(sp)
10006a24:	2000021e 	bne	r4,zero,10006a30 <_dtoa_r+0xec4>
10006a28:	d8c00617 	ldw	r3,24(sp)
10006a2c:	18001b26 	beq	r3,zero,10006a9c <_dtoa_r+0xf30>
10006a30:	00810716 	blt	zero,r2,10006e50 <_dtoa_r+0x12e4>
10006a34:	d8c00417 	ldw	r3,16(sp)
10006a38:	9d800044 	addi	r22,r19,1
10006a3c:	9c800005 	stb	r18,0(r19)
10006a40:	b02f883a 	mov	r23,r22
10006a44:	98c10626 	beq	r19,r3,10006e60 <_dtoa_r+0x12f4>
10006a48:	800b883a 	mov	r5,r16
10006a4c:	000f883a 	mov	r7,zero
10006a50:	01800284 	movi	r6,10
10006a54:	e009883a 	mov	r4,fp
10006a58:	00092f40 	call	100092f4 <__multadd>
10006a5c:	1021883a 	mov	r16,r2
10006a60:	000f883a 	mov	r7,zero
10006a64:	01800284 	movi	r6,10
10006a68:	880b883a 	mov	r5,r17
10006a6c:	e009883a 	mov	r4,fp
10006a70:	8d002526 	beq	r17,r20,10006b08 <_dtoa_r+0xf9c>
10006a74:	00092f40 	call	100092f4 <__multadd>
10006a78:	a00b883a 	mov	r5,r20
10006a7c:	000f883a 	mov	r7,zero
10006a80:	01800284 	movi	r6,10
10006a84:	e009883a 	mov	r4,fp
10006a88:	1023883a 	mov	r17,r2
10006a8c:	00092f40 	call	100092f4 <__multadd>
10006a90:	1029883a 	mov	r20,r2
10006a94:	b027883a 	mov	r19,r22
10006a98:	003fc006 	br	1000699c <__alt_data_end+0xf800699c>
10006a9c:	9011883a 	mov	r8,r18
10006aa0:	00800e0e 	bge	zero,r2,10006adc <_dtoa_r+0xf70>
10006aa4:	800b883a 	mov	r5,r16
10006aa8:	01800044 	movi	r6,1
10006aac:	e009883a 	mov	r4,fp
10006ab0:	da001715 	stw	r8,92(sp)
10006ab4:	0009a600 	call	10009a60 <__lshift>
10006ab8:	a80b883a 	mov	r5,r21
10006abc:	1009883a 	mov	r4,r2
10006ac0:	1021883a 	mov	r16,r2
10006ac4:	0009ba80 	call	10009ba8 <__mcmp>
10006ac8:	da001717 	ldw	r8,92(sp)
10006acc:	0081960e 	bge	zero,r2,10007128 <_dtoa_r+0x15bc>
10006ad0:	00800e44 	movi	r2,57
10006ad4:	40817026 	beq	r8,r2,10007098 <_dtoa_r+0x152c>
10006ad8:	ba000c44 	addi	r8,r23,49
10006adc:	8825883a 	mov	r18,r17
10006ae0:	9dc00044 	addi	r23,r19,1
10006ae4:	9a000005 	stb	r8,0(r19)
10006ae8:	a023883a 	mov	r17,r20
10006aec:	dc000915 	stw	r16,36(sp)
10006af0:	003f2406 	br	10006784 <__alt_data_end+0xf8006784>
10006af4:	00800e44 	movi	r2,57
10006af8:	9011883a 	mov	r8,r18
10006afc:	90816626 	beq	r18,r2,10007098 <_dtoa_r+0x152c>
10006b00:	05bff516 	blt	zero,r22,10006ad8 <__alt_data_end+0xf8006ad8>
10006b04:	003ff506 	br	10006adc <__alt_data_end+0xf8006adc>
10006b08:	00092f40 	call	100092f4 <__multadd>
10006b0c:	1023883a 	mov	r17,r2
10006b10:	1029883a 	mov	r20,r2
10006b14:	003fdf06 	br	10006a94 <__alt_data_end+0xf8006a94>
10006b18:	e009883a 	mov	r4,fp
10006b1c:	00092cc0 	call	100092cc <_Bfree>
10006b20:	00800044 	movi	r2,1
10006b24:	003fbc06 	br	10006a18 <__alt_data_end+0xf8006a18>
10006b28:	a80b883a 	mov	r5,r21
10006b2c:	8009883a 	mov	r4,r16
10006b30:	0009ba80 	call	10009ba8 <__mcmp>
10006b34:	103edb0e 	bge	r2,zero,100066a4 <__alt_data_end+0xf80066a4>
10006b38:	800b883a 	mov	r5,r16
10006b3c:	000f883a 	mov	r7,zero
10006b40:	01800284 	movi	r6,10
10006b44:	e009883a 	mov	r4,fp
10006b48:	00092f40 	call	100092f4 <__multadd>
10006b4c:	1021883a 	mov	r16,r2
10006b50:	d8800517 	ldw	r2,20(sp)
10006b54:	d8c00b17 	ldw	r3,44(sp)
10006b58:	10bfffc4 	addi	r2,r2,-1
10006b5c:	d8800515 	stw	r2,20(sp)
10006b60:	183f761e 	bne	r3,zero,1000693c <__alt_data_end+0xf800693c>
10006b64:	d9000c17 	ldw	r4,48(sp)
10006b68:	0101730e 	bge	zero,r4,10007138 <_dtoa_r+0x15cc>
10006b6c:	d9000615 	stw	r4,24(sp)
10006b70:	003ed006 	br	100066b4 <__alt_data_end+0xf80066b4>
10006b74:	00800084 	movi	r2,2
10006b78:	3081861e 	bne	r6,r2,10007194 <_dtoa_r+0x1628>
10006b7c:	d8000b15 	stw	zero,44(sp)
10006b80:	003f3c06 	br	10006874 <__alt_data_end+0xf8006874>
10006b84:	dc000917 	ldw	r16,36(sp)
10006b88:	003e9206 	br	100065d4 <__alt_data_end+0xf80065d4>
10006b8c:	d9c00317 	ldw	r7,12(sp)
10006b90:	00800084 	movi	r2,2
10006b94:	11fec50e 	bge	r2,r7,100066ac <__alt_data_end+0xf80066ac>
10006b98:	d9000617 	ldw	r4,24(sp)
10006b9c:	20013c1e 	bne	r4,zero,10007090 <_dtoa_r+0x1524>
10006ba0:	a80b883a 	mov	r5,r21
10006ba4:	000f883a 	mov	r7,zero
10006ba8:	01800144 	movi	r6,5
10006bac:	e009883a 	mov	r4,fp
10006bb0:	00092f40 	call	100092f4 <__multadd>
10006bb4:	100b883a 	mov	r5,r2
10006bb8:	8009883a 	mov	r4,r16
10006bbc:	102b883a 	mov	r21,r2
10006bc0:	0009ba80 	call	10009ba8 <__mcmp>
10006bc4:	dc000915 	stw	r16,36(sp)
10006bc8:	00bf410e 	bge	zero,r2,100068d0 <__alt_data_end+0xf80068d0>
10006bcc:	d9c00717 	ldw	r7,28(sp)
10006bd0:	00800c44 	movi	r2,49
10006bd4:	38800005 	stb	r2,0(r7)
10006bd8:	d8800517 	ldw	r2,20(sp)
10006bdc:	3dc00044 	addi	r23,r7,1
10006be0:	10800044 	addi	r2,r2,1
10006be4:	d8800515 	stw	r2,20(sp)
10006be8:	003f3d06 	br	100068e0 <__alt_data_end+0xf80068e0>
10006bec:	d9800517 	ldw	r6,20(sp)
10006bf0:	d9c00717 	ldw	r7,28(sp)
10006bf4:	00800c44 	movi	r2,49
10006bf8:	31800044 	addi	r6,r6,1
10006bfc:	d9800515 	stw	r6,20(sp)
10006c00:	38800005 	stb	r2,0(r7)
10006c04:	003edf06 	br	10006784 <__alt_data_end+0xf8006784>
10006c08:	d8000b15 	stw	zero,44(sp)
10006c0c:	003c9f06 	br	10005e8c <__alt_data_end+0xf8005e8c>
10006c10:	903e7e1e 	bne	r18,zero,1000660c <__alt_data_end+0xf800660c>
10006c14:	00800434 	movhi	r2,16
10006c18:	10bfffc4 	addi	r2,r2,-1
10006c1c:	9884703a 	and	r2,r19,r2
10006c20:	1000ea1e 	bne	r2,zero,10006fcc <_dtoa_r+0x1460>
10006c24:	9cdffc2c 	andhi	r19,r19,32752
10006c28:	9800e826 	beq	r19,zero,10006fcc <_dtoa_r+0x1460>
10006c2c:	d9c00817 	ldw	r7,32(sp)
10006c30:	b5800044 	addi	r22,r22,1
10006c34:	04c00044 	movi	r19,1
10006c38:	39c00044 	addi	r7,r7,1
10006c3c:	d9c00815 	stw	r7,32(sp)
10006c40:	d8800d17 	ldw	r2,52(sp)
10006c44:	103e721e 	bne	r2,zero,10006610 <__alt_data_end+0xf8006610>
10006c48:	00800044 	movi	r2,1
10006c4c:	003e7906 	br	10006634 <__alt_data_end+0xf8006634>
10006c50:	8009883a 	mov	r4,r16
10006c54:	001145c0 	call	1001145c <__floatsidf>
10006c58:	d9800f17 	ldw	r6,60(sp)
10006c5c:	d9c01017 	ldw	r7,64(sp)
10006c60:	1009883a 	mov	r4,r2
10006c64:	180b883a 	mov	r5,r3
10006c68:	00102740 	call	10010274 <__muldf3>
10006c6c:	000d883a 	mov	r6,zero
10006c70:	01d00734 	movhi	r7,16412
10006c74:	1009883a 	mov	r4,r2
10006c78:	180b883a 	mov	r5,r3
10006c7c:	000eda00 	call	1000eda0 <__adddf3>
10006c80:	047f3034 	movhi	r17,64704
10006c84:	1021883a 	mov	r16,r2
10006c88:	1c63883a 	add	r17,r3,r17
10006c8c:	d9000f17 	ldw	r4,60(sp)
10006c90:	d9401017 	ldw	r5,64(sp)
10006c94:	000d883a 	mov	r6,zero
10006c98:	01d00534 	movhi	r7,16404
10006c9c:	0010ae00 	call	10010ae0 <__subdf3>
10006ca0:	800d883a 	mov	r6,r16
10006ca4:	880f883a 	mov	r7,r17
10006ca8:	1009883a 	mov	r4,r2
10006cac:	180b883a 	mov	r5,r3
10006cb0:	102b883a 	mov	r21,r2
10006cb4:	1829883a 	mov	r20,r3
10006cb8:	00100a40 	call	100100a4 <__gedf2>
10006cbc:	00806c16 	blt	zero,r2,10006e70 <_dtoa_r+0x1304>
10006cc0:	89e0003c 	xorhi	r7,r17,32768
10006cc4:	800d883a 	mov	r6,r16
10006cc8:	a809883a 	mov	r4,r21
10006ccc:	a00b883a 	mov	r5,r20
10006cd0:	00101800 	call	10010180 <__ledf2>
10006cd4:	103d7e0e 	bge	r2,zero,100062d0 <__alt_data_end+0xf80062d0>
10006cd8:	002b883a 	mov	r21,zero
10006cdc:	0023883a 	mov	r17,zero
10006ce0:	003efb06 	br	100068d0 <__alt_data_end+0xf80068d0>
10006ce4:	d8800717 	ldw	r2,28(sp)
10006ce8:	003bd006 	br	10005c2c <__alt_data_end+0xf8005c2c>
10006cec:	d9000a17 	ldw	r4,40(sp)
10006cf0:	d9800d17 	ldw	r6,52(sp)
10006cf4:	dd400a15 	stw	r21,40(sp)
10006cf8:	a905c83a 	sub	r2,r21,r4
10006cfc:	308d883a 	add	r6,r6,r2
10006d00:	d9800d15 	stw	r6,52(sp)
10006d04:	002b883a 	mov	r21,zero
10006d08:	003e0606 	br	10006524 <__alt_data_end+0xf8006524>
10006d0c:	9023883a 	mov	r17,r18
10006d10:	9829883a 	mov	r20,r19
10006d14:	04000084 	movi	r16,2
10006d18:	003c9206 	br	10005f64 <__alt_data_end+0xf8005f64>
10006d1c:	04000044 	movi	r16,1
10006d20:	dc000c15 	stw	r16,48(sp)
10006d24:	dc000615 	stw	r16,24(sp)
10006d28:	dc002215 	stw	r16,136(sp)
10006d2c:	e0001115 	stw	zero,68(fp)
10006d30:	000b883a 	mov	r5,zero
10006d34:	003c6906 	br	10005edc <__alt_data_end+0xf8005edc>
10006d38:	3021883a 	mov	r16,r6
10006d3c:	003ffb06 	br	10006d2c <__alt_data_end+0xf8006d2c>
10006d40:	1000021e 	bne	r2,zero,10006d4c <_dtoa_r+0x11e0>
10006d44:	4200004c 	andi	r8,r8,1
10006d48:	403e7d1e 	bne	r8,zero,10006740 <__alt_data_end+0xf8006740>
10006d4c:	01000c04 	movi	r4,48
10006d50:	00000106 	br	10006d58 <_dtoa_r+0x11ec>
10006d54:	102f883a 	mov	r23,r2
10006d58:	b8bfffc4 	addi	r2,r23,-1
10006d5c:	10c00007 	ldb	r3,0(r2)
10006d60:	193ffc26 	beq	r3,r4,10006d54 <__alt_data_end+0xf8006d54>
10006d64:	003e8706 	br	10006784 <__alt_data_end+0xf8006784>
10006d68:	d8800517 	ldw	r2,20(sp)
10006d6c:	00a3c83a 	sub	r17,zero,r2
10006d70:	8800a426 	beq	r17,zero,10007004 <_dtoa_r+0x1498>
10006d74:	888003cc 	andi	r2,r17,15
10006d78:	100490fa 	slli	r2,r2,3
10006d7c:	00c40074 	movhi	r3,4097
10006d80:	18d01504 	addi	r3,r3,16468
10006d84:	1885883a 	add	r2,r3,r2
10006d88:	11800017 	ldw	r6,0(r2)
10006d8c:	11c00117 	ldw	r7,4(r2)
10006d90:	9009883a 	mov	r4,r18
10006d94:	980b883a 	mov	r5,r19
10006d98:	8823d13a 	srai	r17,r17,4
10006d9c:	00102740 	call	10010274 <__muldf3>
10006da0:	d8800f15 	stw	r2,60(sp)
10006da4:	d8c01015 	stw	r3,64(sp)
10006da8:	8800e826 	beq	r17,zero,1000714c <_dtoa_r+0x15e0>
10006dac:	05040074 	movhi	r20,4097
10006db0:	a5100b04 	addi	r20,r20,16428
10006db4:	04000084 	movi	r16,2
10006db8:	8980004c 	andi	r6,r17,1
10006dbc:	1009883a 	mov	r4,r2
10006dc0:	8823d07a 	srai	r17,r17,1
10006dc4:	180b883a 	mov	r5,r3
10006dc8:	30000426 	beq	r6,zero,10006ddc <_dtoa_r+0x1270>
10006dcc:	a1800017 	ldw	r6,0(r20)
10006dd0:	a1c00117 	ldw	r7,4(r20)
10006dd4:	84000044 	addi	r16,r16,1
10006dd8:	00102740 	call	10010274 <__muldf3>
10006ddc:	a5000204 	addi	r20,r20,8
10006de0:	883ff51e 	bne	r17,zero,10006db8 <__alt_data_end+0xf8006db8>
10006de4:	d8800f15 	stw	r2,60(sp)
10006de8:	d8c01015 	stw	r3,64(sp)
10006dec:	003c7606 	br	10005fc8 <__alt_data_end+0xf8005fc8>
10006df0:	00c00c04 	movi	r3,48
10006df4:	10c00005 	stb	r3,0(r2)
10006df8:	d8c00517 	ldw	r3,20(sp)
10006dfc:	bd3fffc3 	ldbu	r20,-1(r23)
10006e00:	18c00044 	addi	r3,r3,1
10006e04:	d8c00515 	stw	r3,20(sp)
10006e08:	003db906 	br	100064f0 <__alt_data_end+0xf80064f0>
10006e0c:	89400117 	ldw	r5,4(r17)
10006e10:	e009883a 	mov	r4,fp
10006e14:	00092240 	call	10009224 <_Balloc>
10006e18:	89800417 	ldw	r6,16(r17)
10006e1c:	89400304 	addi	r5,r17,12
10006e20:	11000304 	addi	r4,r2,12
10006e24:	31800084 	addi	r6,r6,2
10006e28:	318d883a 	add	r6,r6,r6
10006e2c:	318d883a 	add	r6,r6,r6
10006e30:	1027883a 	mov	r19,r2
10006e34:	0008e580 	call	10008e58 <memcpy>
10006e38:	01800044 	movi	r6,1
10006e3c:	980b883a 	mov	r5,r19
10006e40:	e009883a 	mov	r4,fp
10006e44:	0009a600 	call	10009a60 <__lshift>
10006e48:	1029883a 	mov	r20,r2
10006e4c:	003ecc06 	br	10006980 <__alt_data_end+0xf8006980>
10006e50:	00800e44 	movi	r2,57
10006e54:	90809026 	beq	r18,r2,10007098 <_dtoa_r+0x152c>
10006e58:	92000044 	addi	r8,r18,1
10006e5c:	003f1f06 	br	10006adc <__alt_data_end+0xf8006adc>
10006e60:	9011883a 	mov	r8,r18
10006e64:	8825883a 	mov	r18,r17
10006e68:	a023883a 	mov	r17,r20
10006e6c:	003e2906 	br	10006714 <__alt_data_end+0xf8006714>
10006e70:	002b883a 	mov	r21,zero
10006e74:	0023883a 	mov	r17,zero
10006e78:	003f5406 	br	10006bcc <__alt_data_end+0xf8006bcc>
10006e7c:	61bfffc4 	addi	r6,r12,-1
10006e80:	300490fa 	slli	r2,r6,3
10006e84:	00c40074 	movhi	r3,4097
10006e88:	18d01504 	addi	r3,r3,16468
10006e8c:	1885883a 	add	r2,r3,r2
10006e90:	11000017 	ldw	r4,0(r2)
10006e94:	11400117 	ldw	r5,4(r2)
10006e98:	d8800717 	ldw	r2,28(sp)
10006e9c:	880f883a 	mov	r7,r17
10006ea0:	d9801215 	stw	r6,72(sp)
10006ea4:	800d883a 	mov	r6,r16
10006ea8:	db001615 	stw	r12,88(sp)
10006eac:	15c00044 	addi	r23,r2,1
10006eb0:	00102740 	call	10010274 <__muldf3>
10006eb4:	d9401017 	ldw	r5,64(sp)
10006eb8:	d9000f17 	ldw	r4,60(sp)
10006ebc:	d8c01515 	stw	r3,84(sp)
10006ec0:	d8801415 	stw	r2,80(sp)
10006ec4:	00113dc0 	call	100113dc <__fixdfsi>
10006ec8:	1009883a 	mov	r4,r2
10006ecc:	1021883a 	mov	r16,r2
10006ed0:	001145c0 	call	1001145c <__floatsidf>
10006ed4:	d9000f17 	ldw	r4,60(sp)
10006ed8:	d9401017 	ldw	r5,64(sp)
10006edc:	100d883a 	mov	r6,r2
10006ee0:	180f883a 	mov	r7,r3
10006ee4:	0010ae00 	call	10010ae0 <__subdf3>
10006ee8:	1829883a 	mov	r20,r3
10006eec:	d8c00717 	ldw	r3,28(sp)
10006ef0:	84000c04 	addi	r16,r16,48
10006ef4:	1023883a 	mov	r17,r2
10006ef8:	1c000005 	stb	r16,0(r3)
10006efc:	db001617 	ldw	r12,88(sp)
10006f00:	00800044 	movi	r2,1
10006f04:	60802226 	beq	r12,r2,10006f90 <_dtoa_r+0x1424>
10006f08:	d9c00717 	ldw	r7,28(sp)
10006f0c:	8805883a 	mov	r2,r17
10006f10:	b82b883a 	mov	r21,r23
10006f14:	3b19883a 	add	r12,r7,r12
10006f18:	6023883a 	mov	r17,r12
10006f1c:	a007883a 	mov	r3,r20
10006f20:	dc800f15 	stw	r18,60(sp)
10006f24:	000d883a 	mov	r6,zero
10006f28:	01d00934 	movhi	r7,16420
10006f2c:	1009883a 	mov	r4,r2
10006f30:	180b883a 	mov	r5,r3
10006f34:	00102740 	call	10010274 <__muldf3>
10006f38:	180b883a 	mov	r5,r3
10006f3c:	1009883a 	mov	r4,r2
10006f40:	1829883a 	mov	r20,r3
10006f44:	1025883a 	mov	r18,r2
10006f48:	00113dc0 	call	100113dc <__fixdfsi>
10006f4c:	1009883a 	mov	r4,r2
10006f50:	1021883a 	mov	r16,r2
10006f54:	001145c0 	call	1001145c <__floatsidf>
10006f58:	100d883a 	mov	r6,r2
10006f5c:	180f883a 	mov	r7,r3
10006f60:	9009883a 	mov	r4,r18
10006f64:	a00b883a 	mov	r5,r20
10006f68:	84000c04 	addi	r16,r16,48
10006f6c:	0010ae00 	call	10010ae0 <__subdf3>
10006f70:	ad400044 	addi	r21,r21,1
10006f74:	ac3fffc5 	stb	r16,-1(r21)
10006f78:	ac7fea1e 	bne	r21,r17,10006f24 <__alt_data_end+0xf8006f24>
10006f7c:	1023883a 	mov	r17,r2
10006f80:	d8801217 	ldw	r2,72(sp)
10006f84:	dc800f17 	ldw	r18,60(sp)
10006f88:	1829883a 	mov	r20,r3
10006f8c:	b8af883a 	add	r23,r23,r2
10006f90:	d9001417 	ldw	r4,80(sp)
10006f94:	d9401517 	ldw	r5,84(sp)
10006f98:	000d883a 	mov	r6,zero
10006f9c:	01cff834 	movhi	r7,16352
10006fa0:	000eda00 	call	1000eda0 <__adddf3>
10006fa4:	880d883a 	mov	r6,r17
10006fa8:	a00f883a 	mov	r7,r20
10006fac:	1009883a 	mov	r4,r2
10006fb0:	180b883a 	mov	r5,r3
10006fb4:	00101800 	call	10010180 <__ledf2>
10006fb8:	10003e0e 	bge	r2,zero,100070b4 <_dtoa_r+0x1548>
10006fbc:	d9001317 	ldw	r4,76(sp)
10006fc0:	bd3fffc3 	ldbu	r20,-1(r23)
10006fc4:	d9000515 	stw	r4,20(sp)
10006fc8:	003d3b06 	br	100064b8 <__alt_data_end+0xf80064b8>
10006fcc:	0027883a 	mov	r19,zero
10006fd0:	003f1b06 	br	10006c40 <__alt_data_end+0xf8006c40>
10006fd4:	d8800817 	ldw	r2,32(sp)
10006fd8:	11e9c83a 	sub	r20,r2,r7
10006fdc:	0005883a 	mov	r2,zero
10006fe0:	003d5406 	br	10006534 <__alt_data_end+0xf8006534>
10006fe4:	00800044 	movi	r2,1
10006fe8:	003dc706 	br	10006708 <__alt_data_end+0xf8006708>
10006fec:	d8c00217 	ldw	r3,8(sp)
10006ff0:	00800d84 	movi	r2,54
10006ff4:	dd400a17 	ldw	r21,40(sp)
10006ff8:	10c5c83a 	sub	r2,r2,r3
10006ffc:	dd000817 	ldw	r20,32(sp)
10007000:	003d4c06 	br	10006534 <__alt_data_end+0xf8006534>
10007004:	dc800f15 	stw	r18,60(sp)
10007008:	dcc01015 	stw	r19,64(sp)
1000700c:	04000084 	movi	r16,2
10007010:	003bed06 	br	10005fc8 <__alt_data_end+0xf8005fc8>
10007014:	d9000617 	ldw	r4,24(sp)
10007018:	203f0d26 	beq	r4,zero,10006c50 <__alt_data_end+0xf8006c50>
1000701c:	d9800c17 	ldw	r6,48(sp)
10007020:	01bcab0e 	bge	zero,r6,100062d0 <__alt_data_end+0xf80062d0>
10007024:	d9401017 	ldw	r5,64(sp)
10007028:	d9000f17 	ldw	r4,60(sp)
1000702c:	000d883a 	mov	r6,zero
10007030:	01d00934 	movhi	r7,16420
10007034:	00102740 	call	10010274 <__muldf3>
10007038:	81000044 	addi	r4,r16,1
1000703c:	d8800f15 	stw	r2,60(sp)
10007040:	d8c01015 	stw	r3,64(sp)
10007044:	001145c0 	call	1001145c <__floatsidf>
10007048:	d9800f17 	ldw	r6,60(sp)
1000704c:	d9c01017 	ldw	r7,64(sp)
10007050:	1009883a 	mov	r4,r2
10007054:	180b883a 	mov	r5,r3
10007058:	00102740 	call	10010274 <__muldf3>
1000705c:	01d00734 	movhi	r7,16412
10007060:	000d883a 	mov	r6,zero
10007064:	1009883a 	mov	r4,r2
10007068:	180b883a 	mov	r5,r3
1000706c:	000eda00 	call	1000eda0 <__adddf3>
10007070:	d9c00517 	ldw	r7,20(sp)
10007074:	047f3034 	movhi	r17,64704
10007078:	1021883a 	mov	r16,r2
1000707c:	39ffffc4 	addi	r7,r7,-1
10007080:	d9c01315 	stw	r7,76(sp)
10007084:	1c63883a 	add	r17,r3,r17
10007088:	db000c17 	ldw	r12,48(sp)
1000708c:	003bea06 	br	10006038 <__alt_data_end+0xf8006038>
10007090:	dc000915 	stw	r16,36(sp)
10007094:	003e0e06 	br	100068d0 <__alt_data_end+0xf80068d0>
10007098:	01000e44 	movi	r4,57
1000709c:	8825883a 	mov	r18,r17
100070a0:	9dc00044 	addi	r23,r19,1
100070a4:	99000005 	stb	r4,0(r19)
100070a8:	a023883a 	mov	r17,r20
100070ac:	dc000915 	stw	r16,36(sp)
100070b0:	003da406 	br	10006744 <__alt_data_end+0xf8006744>
100070b4:	d9801417 	ldw	r6,80(sp)
100070b8:	d9c01517 	ldw	r7,84(sp)
100070bc:	0009883a 	mov	r4,zero
100070c0:	014ff834 	movhi	r5,16352
100070c4:	0010ae00 	call	10010ae0 <__subdf3>
100070c8:	880d883a 	mov	r6,r17
100070cc:	a00f883a 	mov	r7,r20
100070d0:	1009883a 	mov	r4,r2
100070d4:	180b883a 	mov	r5,r3
100070d8:	00100a40 	call	100100a4 <__gedf2>
100070dc:	00bc7c0e 	bge	zero,r2,100062d0 <__alt_data_end+0xf80062d0>
100070e0:	01000c04 	movi	r4,48
100070e4:	00000106 	br	100070ec <_dtoa_r+0x1580>
100070e8:	102f883a 	mov	r23,r2
100070ec:	b8bfffc4 	addi	r2,r23,-1
100070f0:	10c00007 	ldb	r3,0(r2)
100070f4:	193ffc26 	beq	r3,r4,100070e8 <__alt_data_end+0xf80070e8>
100070f8:	d9801317 	ldw	r6,76(sp)
100070fc:	d9800515 	stw	r6,20(sp)
10007100:	003c4406 	br	10006214 <__alt_data_end+0xf8006214>
10007104:	d9801317 	ldw	r6,76(sp)
10007108:	d9800515 	stw	r6,20(sp)
1000710c:	003cea06 	br	100064b8 <__alt_data_end+0xf80064b8>
10007110:	dd800f17 	ldw	r22,60(sp)
10007114:	dcc01017 	ldw	r19,64(sp)
10007118:	dc801217 	ldw	r18,72(sp)
1000711c:	003c6c06 	br	100062d0 <__alt_data_end+0xf80062d0>
10007120:	903e031e 	bne	r18,zero,10006930 <__alt_data_end+0xf8006930>
10007124:	003ebb06 	br	10006c14 <__alt_data_end+0xf8006c14>
10007128:	103e6c1e 	bne	r2,zero,10006adc <__alt_data_end+0xf8006adc>
1000712c:	4080004c 	andi	r2,r8,1
10007130:	103e6a26 	beq	r2,zero,10006adc <__alt_data_end+0xf8006adc>
10007134:	003e6606 	br	10006ad0 <__alt_data_end+0xf8006ad0>
10007138:	d8c00317 	ldw	r3,12(sp)
1000713c:	00800084 	movi	r2,2
10007140:	10c02916 	blt	r2,r3,100071e8 <_dtoa_r+0x167c>
10007144:	d9000c17 	ldw	r4,48(sp)
10007148:	003e8806 	br	10006b6c <__alt_data_end+0xf8006b6c>
1000714c:	04000084 	movi	r16,2
10007150:	003b9d06 	br	10005fc8 <__alt_data_end+0xf8005fc8>
10007154:	d9001317 	ldw	r4,76(sp)
10007158:	d9000515 	stw	r4,20(sp)
1000715c:	003cd606 	br	100064b8 <__alt_data_end+0xf80064b8>
10007160:	d8801317 	ldw	r2,76(sp)
10007164:	d8800515 	stw	r2,20(sp)
10007168:	003c2a06 	br	10006214 <__alt_data_end+0xf8006214>
1000716c:	d9800317 	ldw	r6,12(sp)
10007170:	00800084 	movi	r2,2
10007174:	11801516 	blt	r2,r6,100071cc <_dtoa_r+0x1660>
10007178:	d9c00c17 	ldw	r7,48(sp)
1000717c:	d9c00615 	stw	r7,24(sp)
10007180:	003df706 	br	10006960 <__alt_data_end+0xf8006960>
10007184:	193d3926 	beq	r3,r4,1000666c <__alt_data_end+0xf800666c>
10007188:	00c00f04 	movi	r3,60
1000718c:	1885c83a 	sub	r2,r3,r2
10007190:	003ddf06 	br	10006910 <__alt_data_end+0xf8006910>
10007194:	e009883a 	mov	r4,fp
10007198:	e0001115 	stw	zero,68(fp)
1000719c:	000b883a 	mov	r5,zero
100071a0:	00092240 	call	10009224 <_Balloc>
100071a4:	d8800715 	stw	r2,28(sp)
100071a8:	d8c00717 	ldw	r3,28(sp)
100071ac:	00bfffc4 	movi	r2,-1
100071b0:	01000044 	movi	r4,1
100071b4:	d8800c15 	stw	r2,48(sp)
100071b8:	e0c01015 	stw	r3,64(fp)
100071bc:	d9000b15 	stw	r4,44(sp)
100071c0:	d8800615 	stw	r2,24(sp)
100071c4:	d8002215 	stw	zero,136(sp)
100071c8:	003c4106 	br	100062d0 <__alt_data_end+0xf80062d0>
100071cc:	d8c00c17 	ldw	r3,48(sp)
100071d0:	d8c00615 	stw	r3,24(sp)
100071d4:	003e7006 	br	10006b98 <__alt_data_end+0xf8006b98>
100071d8:	04400044 	movi	r17,1
100071dc:	003b2006 	br	10005e60 <__alt_data_end+0xf8005e60>
100071e0:	000b883a 	mov	r5,zero
100071e4:	003b3d06 	br	10005edc <__alt_data_end+0xf8005edc>
100071e8:	d8800c17 	ldw	r2,48(sp)
100071ec:	d8800615 	stw	r2,24(sp)
100071f0:	003e6906 	br	10006b98 <__alt_data_end+0xf8006b98>

100071f4 <__sflush_r>:
100071f4:	2880030b 	ldhu	r2,12(r5)
100071f8:	defffb04 	addi	sp,sp,-20
100071fc:	dcc00315 	stw	r19,12(sp)
10007200:	dc400115 	stw	r17,4(sp)
10007204:	dfc00415 	stw	ra,16(sp)
10007208:	dc800215 	stw	r18,8(sp)
1000720c:	dc000015 	stw	r16,0(sp)
10007210:	10c0020c 	andi	r3,r2,8
10007214:	2823883a 	mov	r17,r5
10007218:	2027883a 	mov	r19,r4
1000721c:	1800311e 	bne	r3,zero,100072e4 <__sflush_r+0xf0>
10007220:	28c00117 	ldw	r3,4(r5)
10007224:	10820014 	ori	r2,r2,2048
10007228:	2880030d 	sth	r2,12(r5)
1000722c:	00c04b0e 	bge	zero,r3,1000735c <__sflush_r+0x168>
10007230:	8a000a17 	ldw	r8,40(r17)
10007234:	40002326 	beq	r8,zero,100072c4 <__sflush_r+0xd0>
10007238:	9c000017 	ldw	r16,0(r19)
1000723c:	10c4000c 	andi	r3,r2,4096
10007240:	98000015 	stw	zero,0(r19)
10007244:	18004826 	beq	r3,zero,10007368 <__sflush_r+0x174>
10007248:	89801417 	ldw	r6,80(r17)
1000724c:	10c0010c 	andi	r3,r2,4
10007250:	18000626 	beq	r3,zero,1000726c <__sflush_r+0x78>
10007254:	88c00117 	ldw	r3,4(r17)
10007258:	88800c17 	ldw	r2,48(r17)
1000725c:	30cdc83a 	sub	r6,r6,r3
10007260:	10000226 	beq	r2,zero,1000726c <__sflush_r+0x78>
10007264:	88800f17 	ldw	r2,60(r17)
10007268:	308dc83a 	sub	r6,r6,r2
1000726c:	89400717 	ldw	r5,28(r17)
10007270:	000f883a 	mov	r7,zero
10007274:	9809883a 	mov	r4,r19
10007278:	403ee83a 	callr	r8
1000727c:	00ffffc4 	movi	r3,-1
10007280:	10c04426 	beq	r2,r3,10007394 <__sflush_r+0x1a0>
10007284:	88c0030b 	ldhu	r3,12(r17)
10007288:	89000417 	ldw	r4,16(r17)
1000728c:	88000115 	stw	zero,4(r17)
10007290:	197dffcc 	andi	r5,r3,63487
10007294:	8940030d 	sth	r5,12(r17)
10007298:	89000015 	stw	r4,0(r17)
1000729c:	18c4000c 	andi	r3,r3,4096
100072a0:	18002c1e 	bne	r3,zero,10007354 <__sflush_r+0x160>
100072a4:	89400c17 	ldw	r5,48(r17)
100072a8:	9c000015 	stw	r16,0(r19)
100072ac:	28000526 	beq	r5,zero,100072c4 <__sflush_r+0xd0>
100072b0:	88801004 	addi	r2,r17,64
100072b4:	28800226 	beq	r5,r2,100072c0 <__sflush_r+0xcc>
100072b8:	9809883a 	mov	r4,r19
100072bc:	00079700 	call	10007970 <_free_r>
100072c0:	88000c15 	stw	zero,48(r17)
100072c4:	0005883a 	mov	r2,zero
100072c8:	dfc00417 	ldw	ra,16(sp)
100072cc:	dcc00317 	ldw	r19,12(sp)
100072d0:	dc800217 	ldw	r18,8(sp)
100072d4:	dc400117 	ldw	r17,4(sp)
100072d8:	dc000017 	ldw	r16,0(sp)
100072dc:	dec00504 	addi	sp,sp,20
100072e0:	f800283a 	ret
100072e4:	2c800417 	ldw	r18,16(r5)
100072e8:	903ff626 	beq	r18,zero,100072c4 <__alt_data_end+0xf80072c4>
100072ec:	2c000017 	ldw	r16,0(r5)
100072f0:	108000cc 	andi	r2,r2,3
100072f4:	2c800015 	stw	r18,0(r5)
100072f8:	84a1c83a 	sub	r16,r16,r18
100072fc:	1000131e 	bne	r2,zero,1000734c <__sflush_r+0x158>
10007300:	28800517 	ldw	r2,20(r5)
10007304:	88800215 	stw	r2,8(r17)
10007308:	04000316 	blt	zero,r16,10007318 <__sflush_r+0x124>
1000730c:	003fed06 	br	100072c4 <__alt_data_end+0xf80072c4>
10007310:	90a5883a 	add	r18,r18,r2
10007314:	043feb0e 	bge	zero,r16,100072c4 <__alt_data_end+0xf80072c4>
10007318:	88800917 	ldw	r2,36(r17)
1000731c:	89400717 	ldw	r5,28(r17)
10007320:	800f883a 	mov	r7,r16
10007324:	900d883a 	mov	r6,r18
10007328:	9809883a 	mov	r4,r19
1000732c:	103ee83a 	callr	r2
10007330:	80a1c83a 	sub	r16,r16,r2
10007334:	00bff616 	blt	zero,r2,10007310 <__alt_data_end+0xf8007310>
10007338:	88c0030b 	ldhu	r3,12(r17)
1000733c:	00bfffc4 	movi	r2,-1
10007340:	18c01014 	ori	r3,r3,64
10007344:	88c0030d 	sth	r3,12(r17)
10007348:	003fdf06 	br	100072c8 <__alt_data_end+0xf80072c8>
1000734c:	0005883a 	mov	r2,zero
10007350:	003fec06 	br	10007304 <__alt_data_end+0xf8007304>
10007354:	88801415 	stw	r2,80(r17)
10007358:	003fd206 	br	100072a4 <__alt_data_end+0xf80072a4>
1000735c:	28c00f17 	ldw	r3,60(r5)
10007360:	00ffb316 	blt	zero,r3,10007230 <__alt_data_end+0xf8007230>
10007364:	003fd706 	br	100072c4 <__alt_data_end+0xf80072c4>
10007368:	89400717 	ldw	r5,28(r17)
1000736c:	000d883a 	mov	r6,zero
10007370:	01c00044 	movi	r7,1
10007374:	9809883a 	mov	r4,r19
10007378:	403ee83a 	callr	r8
1000737c:	100d883a 	mov	r6,r2
10007380:	00bfffc4 	movi	r2,-1
10007384:	30801426 	beq	r6,r2,100073d8 <__sflush_r+0x1e4>
10007388:	8880030b 	ldhu	r2,12(r17)
1000738c:	8a000a17 	ldw	r8,40(r17)
10007390:	003fae06 	br	1000724c <__alt_data_end+0xf800724c>
10007394:	98c00017 	ldw	r3,0(r19)
10007398:	183fba26 	beq	r3,zero,10007284 <__alt_data_end+0xf8007284>
1000739c:	01000744 	movi	r4,29
100073a0:	19000626 	beq	r3,r4,100073bc <__sflush_r+0x1c8>
100073a4:	01000584 	movi	r4,22
100073a8:	19000426 	beq	r3,r4,100073bc <__sflush_r+0x1c8>
100073ac:	88c0030b 	ldhu	r3,12(r17)
100073b0:	18c01014 	ori	r3,r3,64
100073b4:	88c0030d 	sth	r3,12(r17)
100073b8:	003fc306 	br	100072c8 <__alt_data_end+0xf80072c8>
100073bc:	8880030b 	ldhu	r2,12(r17)
100073c0:	88c00417 	ldw	r3,16(r17)
100073c4:	88000115 	stw	zero,4(r17)
100073c8:	10bdffcc 	andi	r2,r2,63487
100073cc:	8880030d 	sth	r2,12(r17)
100073d0:	88c00015 	stw	r3,0(r17)
100073d4:	003fb306 	br	100072a4 <__alt_data_end+0xf80072a4>
100073d8:	98800017 	ldw	r2,0(r19)
100073dc:	103fea26 	beq	r2,zero,10007388 <__alt_data_end+0xf8007388>
100073e0:	00c00744 	movi	r3,29
100073e4:	10c00226 	beq	r2,r3,100073f0 <__sflush_r+0x1fc>
100073e8:	00c00584 	movi	r3,22
100073ec:	10c0031e 	bne	r2,r3,100073fc <__sflush_r+0x208>
100073f0:	9c000015 	stw	r16,0(r19)
100073f4:	0005883a 	mov	r2,zero
100073f8:	003fb306 	br	100072c8 <__alt_data_end+0xf80072c8>
100073fc:	88c0030b 	ldhu	r3,12(r17)
10007400:	3005883a 	mov	r2,r6
10007404:	18c01014 	ori	r3,r3,64
10007408:	88c0030d 	sth	r3,12(r17)
1000740c:	003fae06 	br	100072c8 <__alt_data_end+0xf80072c8>

10007410 <_fflush_r>:
10007410:	defffd04 	addi	sp,sp,-12
10007414:	dc000115 	stw	r16,4(sp)
10007418:	dfc00215 	stw	ra,8(sp)
1000741c:	2021883a 	mov	r16,r4
10007420:	20000226 	beq	r4,zero,1000742c <_fflush_r+0x1c>
10007424:	20800e17 	ldw	r2,56(r4)
10007428:	10000c26 	beq	r2,zero,1000745c <_fflush_r+0x4c>
1000742c:	2880030f 	ldh	r2,12(r5)
10007430:	1000051e 	bne	r2,zero,10007448 <_fflush_r+0x38>
10007434:	0005883a 	mov	r2,zero
10007438:	dfc00217 	ldw	ra,8(sp)
1000743c:	dc000117 	ldw	r16,4(sp)
10007440:	dec00304 	addi	sp,sp,12
10007444:	f800283a 	ret
10007448:	8009883a 	mov	r4,r16
1000744c:	dfc00217 	ldw	ra,8(sp)
10007450:	dc000117 	ldw	r16,4(sp)
10007454:	dec00304 	addi	sp,sp,12
10007458:	00071f41 	jmpi	100071f4 <__sflush_r>
1000745c:	d9400015 	stw	r5,0(sp)
10007460:	00077fc0 	call	100077fc <__sinit>
10007464:	d9400017 	ldw	r5,0(sp)
10007468:	003ff006 	br	1000742c <__alt_data_end+0xf800742c>

1000746c <fflush>:
1000746c:	20000526 	beq	r4,zero,10007484 <fflush+0x18>
10007470:	00840074 	movhi	r2,4097
10007474:	10980a04 	addi	r2,r2,24616
10007478:	200b883a 	mov	r5,r4
1000747c:	11000017 	ldw	r4,0(r2)
10007480:	00074101 	jmpi	10007410 <_fflush_r>
10007484:	00840074 	movhi	r2,4097
10007488:	10980904 	addi	r2,r2,24612
1000748c:	11000017 	ldw	r4,0(r2)
10007490:	01440034 	movhi	r5,4096
10007494:	295d0404 	addi	r5,r5,29712
10007498:	000820c1 	jmpi	1000820c <_fwalk_reent>

1000749c <__fp_unlock>:
1000749c:	0005883a 	mov	r2,zero
100074a0:	f800283a 	ret

100074a4 <_cleanup_r>:
100074a4:	01440074 	movhi	r5,4097
100074a8:	29764604 	addi	r5,r5,-9960
100074ac:	000820c1 	jmpi	1000820c <_fwalk_reent>

100074b0 <__sinit.part.1>:
100074b0:	defff704 	addi	sp,sp,-36
100074b4:	00c40034 	movhi	r3,4096
100074b8:	dfc00815 	stw	ra,32(sp)
100074bc:	ddc00715 	stw	r23,28(sp)
100074c0:	dd800615 	stw	r22,24(sp)
100074c4:	dd400515 	stw	r21,20(sp)
100074c8:	dd000415 	stw	r20,16(sp)
100074cc:	dcc00315 	stw	r19,12(sp)
100074d0:	dc800215 	stw	r18,8(sp)
100074d4:	dc400115 	stw	r17,4(sp)
100074d8:	dc000015 	stw	r16,0(sp)
100074dc:	18dd2904 	addi	r3,r3,29860
100074e0:	24000117 	ldw	r16,4(r4)
100074e4:	20c00f15 	stw	r3,60(r4)
100074e8:	2080bb04 	addi	r2,r4,748
100074ec:	00c000c4 	movi	r3,3
100074f0:	20c0b915 	stw	r3,740(r4)
100074f4:	2080ba15 	stw	r2,744(r4)
100074f8:	2000b815 	stw	zero,736(r4)
100074fc:	05c00204 	movi	r23,8
10007500:	00800104 	movi	r2,4
10007504:	2025883a 	mov	r18,r4
10007508:	b80d883a 	mov	r6,r23
1000750c:	81001704 	addi	r4,r16,92
10007510:	000b883a 	mov	r5,zero
10007514:	80000015 	stw	zero,0(r16)
10007518:	80000115 	stw	zero,4(r16)
1000751c:	80000215 	stw	zero,8(r16)
10007520:	8080030d 	sth	r2,12(r16)
10007524:	80001915 	stw	zero,100(r16)
10007528:	8000038d 	sth	zero,14(r16)
1000752c:	80000415 	stw	zero,16(r16)
10007530:	80000515 	stw	zero,20(r16)
10007534:	80000615 	stw	zero,24(r16)
10007538:	00090fc0 	call	100090fc <memset>
1000753c:	05840074 	movhi	r22,4097
10007540:	94400217 	ldw	r17,8(r18)
10007544:	05440074 	movhi	r21,4097
10007548:	05040074 	movhi	r20,4097
1000754c:	04c40074 	movhi	r19,4097
10007550:	b5aa4204 	addi	r22,r22,-22264
10007554:	ad6a5904 	addi	r21,r21,-22172
10007558:	a52a7804 	addi	r20,r20,-22048
1000755c:	9cea8f04 	addi	r19,r19,-21956
10007560:	85800815 	stw	r22,32(r16)
10007564:	85400915 	stw	r21,36(r16)
10007568:	85000a15 	stw	r20,40(r16)
1000756c:	84c00b15 	stw	r19,44(r16)
10007570:	84000715 	stw	r16,28(r16)
10007574:	00800284 	movi	r2,10
10007578:	8880030d 	sth	r2,12(r17)
1000757c:	00800044 	movi	r2,1
10007580:	b80d883a 	mov	r6,r23
10007584:	89001704 	addi	r4,r17,92
10007588:	000b883a 	mov	r5,zero
1000758c:	88000015 	stw	zero,0(r17)
10007590:	88000115 	stw	zero,4(r17)
10007594:	88000215 	stw	zero,8(r17)
10007598:	88001915 	stw	zero,100(r17)
1000759c:	8880038d 	sth	r2,14(r17)
100075a0:	88000415 	stw	zero,16(r17)
100075a4:	88000515 	stw	zero,20(r17)
100075a8:	88000615 	stw	zero,24(r17)
100075ac:	00090fc0 	call	100090fc <memset>
100075b0:	94000317 	ldw	r16,12(r18)
100075b4:	00800484 	movi	r2,18
100075b8:	8c400715 	stw	r17,28(r17)
100075bc:	8d800815 	stw	r22,32(r17)
100075c0:	8d400915 	stw	r21,36(r17)
100075c4:	8d000a15 	stw	r20,40(r17)
100075c8:	8cc00b15 	stw	r19,44(r17)
100075cc:	8080030d 	sth	r2,12(r16)
100075d0:	00800084 	movi	r2,2
100075d4:	80000015 	stw	zero,0(r16)
100075d8:	80000115 	stw	zero,4(r16)
100075dc:	80000215 	stw	zero,8(r16)
100075e0:	80001915 	stw	zero,100(r16)
100075e4:	8080038d 	sth	r2,14(r16)
100075e8:	80000415 	stw	zero,16(r16)
100075ec:	80000515 	stw	zero,20(r16)
100075f0:	80000615 	stw	zero,24(r16)
100075f4:	b80d883a 	mov	r6,r23
100075f8:	000b883a 	mov	r5,zero
100075fc:	81001704 	addi	r4,r16,92
10007600:	00090fc0 	call	100090fc <memset>
10007604:	00800044 	movi	r2,1
10007608:	84000715 	stw	r16,28(r16)
1000760c:	85800815 	stw	r22,32(r16)
10007610:	85400915 	stw	r21,36(r16)
10007614:	85000a15 	stw	r20,40(r16)
10007618:	84c00b15 	stw	r19,44(r16)
1000761c:	90800e15 	stw	r2,56(r18)
10007620:	dfc00817 	ldw	ra,32(sp)
10007624:	ddc00717 	ldw	r23,28(sp)
10007628:	dd800617 	ldw	r22,24(sp)
1000762c:	dd400517 	ldw	r21,20(sp)
10007630:	dd000417 	ldw	r20,16(sp)
10007634:	dcc00317 	ldw	r19,12(sp)
10007638:	dc800217 	ldw	r18,8(sp)
1000763c:	dc400117 	ldw	r17,4(sp)
10007640:	dc000017 	ldw	r16,0(sp)
10007644:	dec00904 	addi	sp,sp,36
10007648:	f800283a 	ret

1000764c <__fp_lock>:
1000764c:	0005883a 	mov	r2,zero
10007650:	f800283a 	ret

10007654 <__sfmoreglue>:
10007654:	defffc04 	addi	sp,sp,-16
10007658:	dc800215 	stw	r18,8(sp)
1000765c:	2825883a 	mov	r18,r5
10007660:	dc000015 	stw	r16,0(sp)
10007664:	01401a04 	movi	r5,104
10007668:	2021883a 	mov	r16,r4
1000766c:	913fffc4 	addi	r4,r18,-1
10007670:	dfc00315 	stw	ra,12(sp)
10007674:	dc400115 	stw	r17,4(sp)
10007678:	0000e400 	call	10000e40 <__mulsi3>
1000767c:	8009883a 	mov	r4,r16
10007680:	11401d04 	addi	r5,r2,116
10007684:	1023883a 	mov	r17,r2
10007688:	00085680 	call	10008568 <_malloc_r>
1000768c:	1021883a 	mov	r16,r2
10007690:	10000726 	beq	r2,zero,100076b0 <__sfmoreglue+0x5c>
10007694:	11000304 	addi	r4,r2,12
10007698:	10000015 	stw	zero,0(r2)
1000769c:	14800115 	stw	r18,4(r2)
100076a0:	11000215 	stw	r4,8(r2)
100076a4:	89801a04 	addi	r6,r17,104
100076a8:	000b883a 	mov	r5,zero
100076ac:	00090fc0 	call	100090fc <memset>
100076b0:	8005883a 	mov	r2,r16
100076b4:	dfc00317 	ldw	ra,12(sp)
100076b8:	dc800217 	ldw	r18,8(sp)
100076bc:	dc400117 	ldw	r17,4(sp)
100076c0:	dc000017 	ldw	r16,0(sp)
100076c4:	dec00404 	addi	sp,sp,16
100076c8:	f800283a 	ret

100076cc <__sfp>:
100076cc:	defffb04 	addi	sp,sp,-20
100076d0:	dc000015 	stw	r16,0(sp)
100076d4:	04040074 	movhi	r16,4097
100076d8:	84180904 	addi	r16,r16,24612
100076dc:	dcc00315 	stw	r19,12(sp)
100076e0:	2027883a 	mov	r19,r4
100076e4:	81000017 	ldw	r4,0(r16)
100076e8:	dfc00415 	stw	ra,16(sp)
100076ec:	dc800215 	stw	r18,8(sp)
100076f0:	20800e17 	ldw	r2,56(r4)
100076f4:	dc400115 	stw	r17,4(sp)
100076f8:	1000021e 	bne	r2,zero,10007704 <__sfp+0x38>
100076fc:	00074b00 	call	100074b0 <__sinit.part.1>
10007700:	81000017 	ldw	r4,0(r16)
10007704:	2480b804 	addi	r18,r4,736
10007708:	047fffc4 	movi	r17,-1
1000770c:	91000117 	ldw	r4,4(r18)
10007710:	94000217 	ldw	r16,8(r18)
10007714:	213fffc4 	addi	r4,r4,-1
10007718:	20000a16 	blt	r4,zero,10007744 <__sfp+0x78>
1000771c:	8080030f 	ldh	r2,12(r16)
10007720:	10000c26 	beq	r2,zero,10007754 <__sfp+0x88>
10007724:	80c01d04 	addi	r3,r16,116
10007728:	00000206 	br	10007734 <__sfp+0x68>
1000772c:	18bfe60f 	ldh	r2,-104(r3)
10007730:	10000826 	beq	r2,zero,10007754 <__sfp+0x88>
10007734:	213fffc4 	addi	r4,r4,-1
10007738:	1c3ffd04 	addi	r16,r3,-12
1000773c:	18c01a04 	addi	r3,r3,104
10007740:	247ffa1e 	bne	r4,r17,1000772c <__alt_data_end+0xf800772c>
10007744:	90800017 	ldw	r2,0(r18)
10007748:	10001d26 	beq	r2,zero,100077c0 <__sfp+0xf4>
1000774c:	1025883a 	mov	r18,r2
10007750:	003fee06 	br	1000770c <__alt_data_end+0xf800770c>
10007754:	00bfffc4 	movi	r2,-1
10007758:	8080038d 	sth	r2,14(r16)
1000775c:	00800044 	movi	r2,1
10007760:	8080030d 	sth	r2,12(r16)
10007764:	80001915 	stw	zero,100(r16)
10007768:	80000015 	stw	zero,0(r16)
1000776c:	80000215 	stw	zero,8(r16)
10007770:	80000115 	stw	zero,4(r16)
10007774:	80000415 	stw	zero,16(r16)
10007778:	80000515 	stw	zero,20(r16)
1000777c:	80000615 	stw	zero,24(r16)
10007780:	01800204 	movi	r6,8
10007784:	000b883a 	mov	r5,zero
10007788:	81001704 	addi	r4,r16,92
1000778c:	00090fc0 	call	100090fc <memset>
10007790:	8005883a 	mov	r2,r16
10007794:	80000c15 	stw	zero,48(r16)
10007798:	80000d15 	stw	zero,52(r16)
1000779c:	80001115 	stw	zero,68(r16)
100077a0:	80001215 	stw	zero,72(r16)
100077a4:	dfc00417 	ldw	ra,16(sp)
100077a8:	dcc00317 	ldw	r19,12(sp)
100077ac:	dc800217 	ldw	r18,8(sp)
100077b0:	dc400117 	ldw	r17,4(sp)
100077b4:	dc000017 	ldw	r16,0(sp)
100077b8:	dec00504 	addi	sp,sp,20
100077bc:	f800283a 	ret
100077c0:	01400104 	movi	r5,4
100077c4:	9809883a 	mov	r4,r19
100077c8:	00076540 	call	10007654 <__sfmoreglue>
100077cc:	90800015 	stw	r2,0(r18)
100077d0:	103fde1e 	bne	r2,zero,1000774c <__alt_data_end+0xf800774c>
100077d4:	00800304 	movi	r2,12
100077d8:	98800015 	stw	r2,0(r19)
100077dc:	0005883a 	mov	r2,zero
100077e0:	003ff006 	br	100077a4 <__alt_data_end+0xf80077a4>

100077e4 <_cleanup>:
100077e4:	00840074 	movhi	r2,4097
100077e8:	10980904 	addi	r2,r2,24612
100077ec:	11000017 	ldw	r4,0(r2)
100077f0:	01440074 	movhi	r5,4097
100077f4:	29764604 	addi	r5,r5,-9960
100077f8:	000820c1 	jmpi	1000820c <_fwalk_reent>

100077fc <__sinit>:
100077fc:	20800e17 	ldw	r2,56(r4)
10007800:	10000126 	beq	r2,zero,10007808 <__sinit+0xc>
10007804:	f800283a 	ret
10007808:	00074b01 	jmpi	100074b0 <__sinit.part.1>

1000780c <__sfp_lock_acquire>:
1000780c:	f800283a 	ret

10007810 <__sfp_lock_release>:
10007810:	f800283a 	ret

10007814 <__sinit_lock_acquire>:
10007814:	f800283a 	ret

10007818 <__sinit_lock_release>:
10007818:	f800283a 	ret

1000781c <__fp_lock_all>:
1000781c:	00840074 	movhi	r2,4097
10007820:	10980a04 	addi	r2,r2,24616
10007824:	11000017 	ldw	r4,0(r2)
10007828:	01440034 	movhi	r5,4096
1000782c:	295d9304 	addi	r5,r5,30284
10007830:	00081481 	jmpi	10008148 <_fwalk>

10007834 <__fp_unlock_all>:
10007834:	00840074 	movhi	r2,4097
10007838:	10980a04 	addi	r2,r2,24616
1000783c:	11000017 	ldw	r4,0(r2)
10007840:	01440034 	movhi	r5,4096
10007844:	295d2704 	addi	r5,r5,29852
10007848:	00081481 	jmpi	10008148 <_fwalk>

1000784c <_malloc_trim_r>:
1000784c:	defffb04 	addi	sp,sp,-20
10007850:	dcc00315 	stw	r19,12(sp)
10007854:	04c40074 	movhi	r19,4097
10007858:	dc800215 	stw	r18,8(sp)
1000785c:	dc400115 	stw	r17,4(sp)
10007860:	dc000015 	stw	r16,0(sp)
10007864:	dfc00415 	stw	ra,16(sp)
10007868:	2821883a 	mov	r16,r5
1000786c:	9cd28304 	addi	r19,r19,18956
10007870:	2025883a 	mov	r18,r4
10007874:	0011be00 	call	10011be0 <__malloc_lock>
10007878:	98800217 	ldw	r2,8(r19)
1000787c:	14400117 	ldw	r17,4(r2)
10007880:	00bfff04 	movi	r2,-4
10007884:	88a2703a 	and	r17,r17,r2
10007888:	8c21c83a 	sub	r16,r17,r16
1000788c:	8403fbc4 	addi	r16,r16,4079
10007890:	8020d33a 	srli	r16,r16,12
10007894:	0083ffc4 	movi	r2,4095
10007898:	843fffc4 	addi	r16,r16,-1
1000789c:	8020933a 	slli	r16,r16,12
100078a0:	1400060e 	bge	r2,r16,100078bc <_malloc_trim_r+0x70>
100078a4:	000b883a 	mov	r5,zero
100078a8:	9009883a 	mov	r4,r18
100078ac:	000a8b40 	call	1000a8b4 <_sbrk_r>
100078b0:	98c00217 	ldw	r3,8(r19)
100078b4:	1c47883a 	add	r3,r3,r17
100078b8:	10c00a26 	beq	r2,r3,100078e4 <_malloc_trim_r+0x98>
100078bc:	9009883a 	mov	r4,r18
100078c0:	0011c040 	call	10011c04 <__malloc_unlock>
100078c4:	0005883a 	mov	r2,zero
100078c8:	dfc00417 	ldw	ra,16(sp)
100078cc:	dcc00317 	ldw	r19,12(sp)
100078d0:	dc800217 	ldw	r18,8(sp)
100078d4:	dc400117 	ldw	r17,4(sp)
100078d8:	dc000017 	ldw	r16,0(sp)
100078dc:	dec00504 	addi	sp,sp,20
100078e0:	f800283a 	ret
100078e4:	040bc83a 	sub	r5,zero,r16
100078e8:	9009883a 	mov	r4,r18
100078ec:	000a8b40 	call	1000a8b4 <_sbrk_r>
100078f0:	00ffffc4 	movi	r3,-1
100078f4:	10c00d26 	beq	r2,r3,1000792c <_malloc_trim_r+0xe0>
100078f8:	00c40074 	movhi	r3,4097
100078fc:	18df9c04 	addi	r3,r3,32368
10007900:	18800017 	ldw	r2,0(r3)
10007904:	99000217 	ldw	r4,8(r19)
10007908:	8c23c83a 	sub	r17,r17,r16
1000790c:	8c400054 	ori	r17,r17,1
10007910:	1421c83a 	sub	r16,r2,r16
10007914:	24400115 	stw	r17,4(r4)
10007918:	9009883a 	mov	r4,r18
1000791c:	1c000015 	stw	r16,0(r3)
10007920:	0011c040 	call	10011c04 <__malloc_unlock>
10007924:	00800044 	movi	r2,1
10007928:	003fe706 	br	100078c8 <__alt_data_end+0xf80078c8>
1000792c:	000b883a 	mov	r5,zero
10007930:	9009883a 	mov	r4,r18
10007934:	000a8b40 	call	1000a8b4 <_sbrk_r>
10007938:	99000217 	ldw	r4,8(r19)
1000793c:	014003c4 	movi	r5,15
10007940:	1107c83a 	sub	r3,r2,r4
10007944:	28ffdd0e 	bge	r5,r3,100078bc <__alt_data_end+0xf80078bc>
10007948:	01440074 	movhi	r5,4097
1000794c:	29580c04 	addi	r5,r5,24624
10007950:	29400017 	ldw	r5,0(r5)
10007954:	18c00054 	ori	r3,r3,1
10007958:	20c00115 	stw	r3,4(r4)
1000795c:	00c40074 	movhi	r3,4097
10007960:	1145c83a 	sub	r2,r2,r5
10007964:	18df9c04 	addi	r3,r3,32368
10007968:	18800015 	stw	r2,0(r3)
1000796c:	003fd306 	br	100078bc <__alt_data_end+0xf80078bc>

10007970 <_free_r>:
10007970:	28004126 	beq	r5,zero,10007a78 <_free_r+0x108>
10007974:	defffd04 	addi	sp,sp,-12
10007978:	dc400115 	stw	r17,4(sp)
1000797c:	dc000015 	stw	r16,0(sp)
10007980:	2023883a 	mov	r17,r4
10007984:	2821883a 	mov	r16,r5
10007988:	dfc00215 	stw	ra,8(sp)
1000798c:	0011be00 	call	10011be0 <__malloc_lock>
10007990:	81ffff17 	ldw	r7,-4(r16)
10007994:	00bfff84 	movi	r2,-2
10007998:	01040074 	movhi	r4,4097
1000799c:	81bffe04 	addi	r6,r16,-8
100079a0:	3884703a 	and	r2,r7,r2
100079a4:	21128304 	addi	r4,r4,18956
100079a8:	308b883a 	add	r5,r6,r2
100079ac:	2a400117 	ldw	r9,4(r5)
100079b0:	22000217 	ldw	r8,8(r4)
100079b4:	00ffff04 	movi	r3,-4
100079b8:	48c6703a 	and	r3,r9,r3
100079bc:	2a005726 	beq	r5,r8,10007b1c <_free_r+0x1ac>
100079c0:	28c00115 	stw	r3,4(r5)
100079c4:	39c0004c 	andi	r7,r7,1
100079c8:	3800091e 	bne	r7,zero,100079f0 <_free_r+0x80>
100079cc:	823ffe17 	ldw	r8,-8(r16)
100079d0:	22400204 	addi	r9,r4,8
100079d4:	320dc83a 	sub	r6,r6,r8
100079d8:	31c00217 	ldw	r7,8(r6)
100079dc:	1205883a 	add	r2,r2,r8
100079e0:	3a406526 	beq	r7,r9,10007b78 <_free_r+0x208>
100079e4:	32000317 	ldw	r8,12(r6)
100079e8:	3a000315 	stw	r8,12(r7)
100079ec:	41c00215 	stw	r7,8(r8)
100079f0:	28cf883a 	add	r7,r5,r3
100079f4:	39c00117 	ldw	r7,4(r7)
100079f8:	39c0004c 	andi	r7,r7,1
100079fc:	38003a26 	beq	r7,zero,10007ae8 <_free_r+0x178>
10007a00:	10c00054 	ori	r3,r2,1
10007a04:	30c00115 	stw	r3,4(r6)
10007a08:	3087883a 	add	r3,r6,r2
10007a0c:	18800015 	stw	r2,0(r3)
10007a10:	00c07fc4 	movi	r3,511
10007a14:	18801936 	bltu	r3,r2,10007a7c <_free_r+0x10c>
10007a18:	1004d0fa 	srli	r2,r2,3
10007a1c:	01c00044 	movi	r7,1
10007a20:	21400117 	ldw	r5,4(r4)
10007a24:	10c00044 	addi	r3,r2,1
10007a28:	18c7883a 	add	r3,r3,r3
10007a2c:	1005d0ba 	srai	r2,r2,2
10007a30:	18c7883a 	add	r3,r3,r3
10007a34:	18c7883a 	add	r3,r3,r3
10007a38:	1907883a 	add	r3,r3,r4
10007a3c:	3884983a 	sll	r2,r7,r2
10007a40:	19c00017 	ldw	r7,0(r3)
10007a44:	1a3ffe04 	addi	r8,r3,-8
10007a48:	1144b03a 	or	r2,r2,r5
10007a4c:	32000315 	stw	r8,12(r6)
10007a50:	31c00215 	stw	r7,8(r6)
10007a54:	20800115 	stw	r2,4(r4)
10007a58:	19800015 	stw	r6,0(r3)
10007a5c:	39800315 	stw	r6,12(r7)
10007a60:	8809883a 	mov	r4,r17
10007a64:	dfc00217 	ldw	ra,8(sp)
10007a68:	dc400117 	ldw	r17,4(sp)
10007a6c:	dc000017 	ldw	r16,0(sp)
10007a70:	dec00304 	addi	sp,sp,12
10007a74:	0011c041 	jmpi	10011c04 <__malloc_unlock>
10007a78:	f800283a 	ret
10007a7c:	100ad27a 	srli	r5,r2,9
10007a80:	00c00104 	movi	r3,4
10007a84:	19404a36 	bltu	r3,r5,10007bb0 <_free_r+0x240>
10007a88:	100ad1ba 	srli	r5,r2,6
10007a8c:	28c00e44 	addi	r3,r5,57
10007a90:	18c7883a 	add	r3,r3,r3
10007a94:	29400e04 	addi	r5,r5,56
10007a98:	18c7883a 	add	r3,r3,r3
10007a9c:	18c7883a 	add	r3,r3,r3
10007aa0:	1909883a 	add	r4,r3,r4
10007aa4:	20c00017 	ldw	r3,0(r4)
10007aa8:	01c40074 	movhi	r7,4097
10007aac:	213ffe04 	addi	r4,r4,-8
10007ab0:	39d28304 	addi	r7,r7,18956
10007ab4:	20c04426 	beq	r4,r3,10007bc8 <_free_r+0x258>
10007ab8:	01ffff04 	movi	r7,-4
10007abc:	19400117 	ldw	r5,4(r3)
10007ac0:	29ca703a 	and	r5,r5,r7
10007ac4:	1140022e 	bgeu	r2,r5,10007ad0 <_free_r+0x160>
10007ac8:	18c00217 	ldw	r3,8(r3)
10007acc:	20fffb1e 	bne	r4,r3,10007abc <__alt_data_end+0xf8007abc>
10007ad0:	19000317 	ldw	r4,12(r3)
10007ad4:	31000315 	stw	r4,12(r6)
10007ad8:	30c00215 	stw	r3,8(r6)
10007adc:	21800215 	stw	r6,8(r4)
10007ae0:	19800315 	stw	r6,12(r3)
10007ae4:	003fde06 	br	10007a60 <__alt_data_end+0xf8007a60>
10007ae8:	29c00217 	ldw	r7,8(r5)
10007aec:	10c5883a 	add	r2,r2,r3
10007af0:	00c40074 	movhi	r3,4097
10007af4:	18d28504 	addi	r3,r3,18964
10007af8:	38c03b26 	beq	r7,r3,10007be8 <_free_r+0x278>
10007afc:	2a000317 	ldw	r8,12(r5)
10007b00:	11400054 	ori	r5,r2,1
10007b04:	3087883a 	add	r3,r6,r2
10007b08:	3a000315 	stw	r8,12(r7)
10007b0c:	41c00215 	stw	r7,8(r8)
10007b10:	31400115 	stw	r5,4(r6)
10007b14:	18800015 	stw	r2,0(r3)
10007b18:	003fbd06 	br	10007a10 <__alt_data_end+0xf8007a10>
10007b1c:	39c0004c 	andi	r7,r7,1
10007b20:	10c5883a 	add	r2,r2,r3
10007b24:	3800071e 	bne	r7,zero,10007b44 <_free_r+0x1d4>
10007b28:	81fffe17 	ldw	r7,-8(r16)
10007b2c:	31cdc83a 	sub	r6,r6,r7
10007b30:	30c00317 	ldw	r3,12(r6)
10007b34:	31400217 	ldw	r5,8(r6)
10007b38:	11c5883a 	add	r2,r2,r7
10007b3c:	28c00315 	stw	r3,12(r5)
10007b40:	19400215 	stw	r5,8(r3)
10007b44:	10c00054 	ori	r3,r2,1
10007b48:	30c00115 	stw	r3,4(r6)
10007b4c:	00c40074 	movhi	r3,4097
10007b50:	18d80d04 	addi	r3,r3,24628
10007b54:	18c00017 	ldw	r3,0(r3)
10007b58:	21800215 	stw	r6,8(r4)
10007b5c:	10ffc036 	bltu	r2,r3,10007a60 <__alt_data_end+0xf8007a60>
10007b60:	00840074 	movhi	r2,4097
10007b64:	109f9304 	addi	r2,r2,32332
10007b68:	11400017 	ldw	r5,0(r2)
10007b6c:	8809883a 	mov	r4,r17
10007b70:	000784c0 	call	1000784c <_malloc_trim_r>
10007b74:	003fba06 	br	10007a60 <__alt_data_end+0xf8007a60>
10007b78:	28c9883a 	add	r4,r5,r3
10007b7c:	21000117 	ldw	r4,4(r4)
10007b80:	2100004c 	andi	r4,r4,1
10007b84:	2000391e 	bne	r4,zero,10007c6c <_free_r+0x2fc>
10007b88:	29c00217 	ldw	r7,8(r5)
10007b8c:	29000317 	ldw	r4,12(r5)
10007b90:	1885883a 	add	r2,r3,r2
10007b94:	10c00054 	ori	r3,r2,1
10007b98:	39000315 	stw	r4,12(r7)
10007b9c:	21c00215 	stw	r7,8(r4)
10007ba0:	30c00115 	stw	r3,4(r6)
10007ba4:	308d883a 	add	r6,r6,r2
10007ba8:	30800015 	stw	r2,0(r6)
10007bac:	003fac06 	br	10007a60 <__alt_data_end+0xf8007a60>
10007bb0:	00c00504 	movi	r3,20
10007bb4:	19401536 	bltu	r3,r5,10007c0c <_free_r+0x29c>
10007bb8:	28c01704 	addi	r3,r5,92
10007bbc:	18c7883a 	add	r3,r3,r3
10007bc0:	294016c4 	addi	r5,r5,91
10007bc4:	003fb406 	br	10007a98 <__alt_data_end+0xf8007a98>
10007bc8:	280bd0ba 	srai	r5,r5,2
10007bcc:	00c00044 	movi	r3,1
10007bd0:	38800117 	ldw	r2,4(r7)
10007bd4:	194a983a 	sll	r5,r3,r5
10007bd8:	2007883a 	mov	r3,r4
10007bdc:	2884b03a 	or	r2,r5,r2
10007be0:	38800115 	stw	r2,4(r7)
10007be4:	003fbb06 	br	10007ad4 <__alt_data_end+0xf8007ad4>
10007be8:	21800515 	stw	r6,20(r4)
10007bec:	21800415 	stw	r6,16(r4)
10007bf0:	10c00054 	ori	r3,r2,1
10007bf4:	31c00315 	stw	r7,12(r6)
10007bf8:	31c00215 	stw	r7,8(r6)
10007bfc:	30c00115 	stw	r3,4(r6)
10007c00:	308d883a 	add	r6,r6,r2
10007c04:	30800015 	stw	r2,0(r6)
10007c08:	003f9506 	br	10007a60 <__alt_data_end+0xf8007a60>
10007c0c:	00c01504 	movi	r3,84
10007c10:	19400536 	bltu	r3,r5,10007c28 <_free_r+0x2b8>
10007c14:	100ad33a 	srli	r5,r2,12
10007c18:	28c01bc4 	addi	r3,r5,111
10007c1c:	18c7883a 	add	r3,r3,r3
10007c20:	29401b84 	addi	r5,r5,110
10007c24:	003f9c06 	br	10007a98 <__alt_data_end+0xf8007a98>
10007c28:	00c05504 	movi	r3,340
10007c2c:	19400536 	bltu	r3,r5,10007c44 <_free_r+0x2d4>
10007c30:	100ad3fa 	srli	r5,r2,15
10007c34:	28c01e04 	addi	r3,r5,120
10007c38:	18c7883a 	add	r3,r3,r3
10007c3c:	29401dc4 	addi	r5,r5,119
10007c40:	003f9506 	br	10007a98 <__alt_data_end+0xf8007a98>
10007c44:	00c15504 	movi	r3,1364
10007c48:	19400536 	bltu	r3,r5,10007c60 <_free_r+0x2f0>
10007c4c:	100ad4ba 	srli	r5,r2,18
10007c50:	28c01f44 	addi	r3,r5,125
10007c54:	18c7883a 	add	r3,r3,r3
10007c58:	29401f04 	addi	r5,r5,124
10007c5c:	003f8e06 	br	10007a98 <__alt_data_end+0xf8007a98>
10007c60:	00c03f84 	movi	r3,254
10007c64:	01401f84 	movi	r5,126
10007c68:	003f8b06 	br	10007a98 <__alt_data_end+0xf8007a98>
10007c6c:	10c00054 	ori	r3,r2,1
10007c70:	30c00115 	stw	r3,4(r6)
10007c74:	308d883a 	add	r6,r6,r2
10007c78:	30800015 	stw	r2,0(r6)
10007c7c:	003f7806 	br	10007a60 <__alt_data_end+0xf8007a60>

10007c80 <__sfvwrite_r>:
10007c80:	30800217 	ldw	r2,8(r6)
10007c84:	10006726 	beq	r2,zero,10007e24 <__sfvwrite_r+0x1a4>
10007c88:	28c0030b 	ldhu	r3,12(r5)
10007c8c:	defff404 	addi	sp,sp,-48
10007c90:	dd400715 	stw	r21,28(sp)
10007c94:	dd000615 	stw	r20,24(sp)
10007c98:	dc000215 	stw	r16,8(sp)
10007c9c:	dfc00b15 	stw	ra,44(sp)
10007ca0:	df000a15 	stw	fp,40(sp)
10007ca4:	ddc00915 	stw	r23,36(sp)
10007ca8:	dd800815 	stw	r22,32(sp)
10007cac:	dcc00515 	stw	r19,20(sp)
10007cb0:	dc800415 	stw	r18,16(sp)
10007cb4:	dc400315 	stw	r17,12(sp)
10007cb8:	1880020c 	andi	r2,r3,8
10007cbc:	2821883a 	mov	r16,r5
10007cc0:	202b883a 	mov	r21,r4
10007cc4:	3029883a 	mov	r20,r6
10007cc8:	10002726 	beq	r2,zero,10007d68 <__sfvwrite_r+0xe8>
10007ccc:	28800417 	ldw	r2,16(r5)
10007cd0:	10002526 	beq	r2,zero,10007d68 <__sfvwrite_r+0xe8>
10007cd4:	1880008c 	andi	r2,r3,2
10007cd8:	a4400017 	ldw	r17,0(r20)
10007cdc:	10002a26 	beq	r2,zero,10007d88 <__sfvwrite_r+0x108>
10007ce0:	05a00034 	movhi	r22,32768
10007ce4:	0027883a 	mov	r19,zero
10007ce8:	0025883a 	mov	r18,zero
10007cec:	b5bf0004 	addi	r22,r22,-1024
10007cf0:	980d883a 	mov	r6,r19
10007cf4:	a809883a 	mov	r4,r21
10007cf8:	90004626 	beq	r18,zero,10007e14 <__sfvwrite_r+0x194>
10007cfc:	900f883a 	mov	r7,r18
10007d00:	b480022e 	bgeu	r22,r18,10007d0c <__sfvwrite_r+0x8c>
10007d04:	01e00034 	movhi	r7,32768
10007d08:	39ff0004 	addi	r7,r7,-1024
10007d0c:	80800917 	ldw	r2,36(r16)
10007d10:	81400717 	ldw	r5,28(r16)
10007d14:	103ee83a 	callr	r2
10007d18:	00805a0e 	bge	zero,r2,10007e84 <__sfvwrite_r+0x204>
10007d1c:	a0c00217 	ldw	r3,8(r20)
10007d20:	98a7883a 	add	r19,r19,r2
10007d24:	90a5c83a 	sub	r18,r18,r2
10007d28:	1885c83a 	sub	r2,r3,r2
10007d2c:	a0800215 	stw	r2,8(r20)
10007d30:	103fef1e 	bne	r2,zero,10007cf0 <__alt_data_end+0xf8007cf0>
10007d34:	0005883a 	mov	r2,zero
10007d38:	dfc00b17 	ldw	ra,44(sp)
10007d3c:	df000a17 	ldw	fp,40(sp)
10007d40:	ddc00917 	ldw	r23,36(sp)
10007d44:	dd800817 	ldw	r22,32(sp)
10007d48:	dd400717 	ldw	r21,28(sp)
10007d4c:	dd000617 	ldw	r20,24(sp)
10007d50:	dcc00517 	ldw	r19,20(sp)
10007d54:	dc800417 	ldw	r18,16(sp)
10007d58:	dc400317 	ldw	r17,12(sp)
10007d5c:	dc000217 	ldw	r16,8(sp)
10007d60:	dec00c04 	addi	sp,sp,48
10007d64:	f800283a 	ret
10007d68:	800b883a 	mov	r5,r16
10007d6c:	a809883a 	mov	r4,r21
10007d70:	00057f00 	call	100057f0 <__swsetup_r>
10007d74:	1000ee1e 	bne	r2,zero,10008130 <__sfvwrite_r+0x4b0>
10007d78:	80c0030b 	ldhu	r3,12(r16)
10007d7c:	a4400017 	ldw	r17,0(r20)
10007d80:	1880008c 	andi	r2,r3,2
10007d84:	103fd61e 	bne	r2,zero,10007ce0 <__alt_data_end+0xf8007ce0>
10007d88:	1880004c 	andi	r2,r3,1
10007d8c:	1000421e 	bne	r2,zero,10007e98 <__sfvwrite_r+0x218>
10007d90:	0039883a 	mov	fp,zero
10007d94:	0025883a 	mov	r18,zero
10007d98:	90001a26 	beq	r18,zero,10007e04 <__sfvwrite_r+0x184>
10007d9c:	1880800c 	andi	r2,r3,512
10007da0:	84c00217 	ldw	r19,8(r16)
10007da4:	10002126 	beq	r2,zero,10007e2c <__sfvwrite_r+0x1ac>
10007da8:	982f883a 	mov	r23,r19
10007dac:	94c09636 	bltu	r18,r19,10008008 <__sfvwrite_r+0x388>
10007db0:	1881200c 	andi	r2,r3,1152
10007db4:	1000a11e 	bne	r2,zero,1000803c <__sfvwrite_r+0x3bc>
10007db8:	81000017 	ldw	r4,0(r16)
10007dbc:	b80d883a 	mov	r6,r23
10007dc0:	e00b883a 	mov	r5,fp
10007dc4:	0008fa00 	call	10008fa0 <memmove>
10007dc8:	80c00217 	ldw	r3,8(r16)
10007dcc:	81000017 	ldw	r4,0(r16)
10007dd0:	9005883a 	mov	r2,r18
10007dd4:	1ce7c83a 	sub	r19,r3,r19
10007dd8:	25cf883a 	add	r7,r4,r23
10007ddc:	84c00215 	stw	r19,8(r16)
10007de0:	81c00015 	stw	r7,0(r16)
10007de4:	a0c00217 	ldw	r3,8(r20)
10007de8:	e0b9883a 	add	fp,fp,r2
10007dec:	90a5c83a 	sub	r18,r18,r2
10007df0:	18a7c83a 	sub	r19,r3,r2
10007df4:	a4c00215 	stw	r19,8(r20)
10007df8:	983fce26 	beq	r19,zero,10007d34 <__alt_data_end+0xf8007d34>
10007dfc:	80c0030b 	ldhu	r3,12(r16)
10007e00:	903fe61e 	bne	r18,zero,10007d9c <__alt_data_end+0xf8007d9c>
10007e04:	8f000017 	ldw	fp,0(r17)
10007e08:	8c800117 	ldw	r18,4(r17)
10007e0c:	8c400204 	addi	r17,r17,8
10007e10:	003fe106 	br	10007d98 <__alt_data_end+0xf8007d98>
10007e14:	8cc00017 	ldw	r19,0(r17)
10007e18:	8c800117 	ldw	r18,4(r17)
10007e1c:	8c400204 	addi	r17,r17,8
10007e20:	003fb306 	br	10007cf0 <__alt_data_end+0xf8007cf0>
10007e24:	0005883a 	mov	r2,zero
10007e28:	f800283a 	ret
10007e2c:	81000017 	ldw	r4,0(r16)
10007e30:	80800417 	ldw	r2,16(r16)
10007e34:	11005a36 	bltu	r2,r4,10007fa0 <__sfvwrite_r+0x320>
10007e38:	85c00517 	ldw	r23,20(r16)
10007e3c:	95c05836 	bltu	r18,r23,10007fa0 <__sfvwrite_r+0x320>
10007e40:	00a00034 	movhi	r2,32768
10007e44:	10bfffc4 	addi	r2,r2,-1
10007e48:	9009883a 	mov	r4,r18
10007e4c:	1480012e 	bgeu	r2,r18,10007e54 <__sfvwrite_r+0x1d4>
10007e50:	1009883a 	mov	r4,r2
10007e54:	b80b883a 	mov	r5,r23
10007e58:	0000c8c0 	call	10000c8c <__divsi3>
10007e5c:	b80b883a 	mov	r5,r23
10007e60:	1009883a 	mov	r4,r2
10007e64:	0000e400 	call	10000e40 <__mulsi3>
10007e68:	81400717 	ldw	r5,28(r16)
10007e6c:	80c00917 	ldw	r3,36(r16)
10007e70:	100f883a 	mov	r7,r2
10007e74:	e00d883a 	mov	r6,fp
10007e78:	a809883a 	mov	r4,r21
10007e7c:	183ee83a 	callr	r3
10007e80:	00bfd816 	blt	zero,r2,10007de4 <__alt_data_end+0xf8007de4>
10007e84:	8080030b 	ldhu	r2,12(r16)
10007e88:	10801014 	ori	r2,r2,64
10007e8c:	8080030d 	sth	r2,12(r16)
10007e90:	00bfffc4 	movi	r2,-1
10007e94:	003fa806 	br	10007d38 <__alt_data_end+0xf8007d38>
10007e98:	0027883a 	mov	r19,zero
10007e9c:	0011883a 	mov	r8,zero
10007ea0:	0039883a 	mov	fp,zero
10007ea4:	0025883a 	mov	r18,zero
10007ea8:	90001f26 	beq	r18,zero,10007f28 <__sfvwrite_r+0x2a8>
10007eac:	40005a26 	beq	r8,zero,10008018 <__sfvwrite_r+0x398>
10007eb0:	982d883a 	mov	r22,r19
10007eb4:	94c0012e 	bgeu	r18,r19,10007ebc <__sfvwrite_r+0x23c>
10007eb8:	902d883a 	mov	r22,r18
10007ebc:	81000017 	ldw	r4,0(r16)
10007ec0:	80800417 	ldw	r2,16(r16)
10007ec4:	b02f883a 	mov	r23,r22
10007ec8:	81c00517 	ldw	r7,20(r16)
10007ecc:	1100032e 	bgeu	r2,r4,10007edc <__sfvwrite_r+0x25c>
10007ed0:	80c00217 	ldw	r3,8(r16)
10007ed4:	38c7883a 	add	r3,r7,r3
10007ed8:	1d801816 	blt	r3,r22,10007f3c <__sfvwrite_r+0x2bc>
10007edc:	b1c03e16 	blt	r22,r7,10007fd8 <__sfvwrite_r+0x358>
10007ee0:	80800917 	ldw	r2,36(r16)
10007ee4:	81400717 	ldw	r5,28(r16)
10007ee8:	e00d883a 	mov	r6,fp
10007eec:	da000115 	stw	r8,4(sp)
10007ef0:	a809883a 	mov	r4,r21
10007ef4:	103ee83a 	callr	r2
10007ef8:	102f883a 	mov	r23,r2
10007efc:	da000117 	ldw	r8,4(sp)
10007f00:	00bfe00e 	bge	zero,r2,10007e84 <__alt_data_end+0xf8007e84>
10007f04:	9de7c83a 	sub	r19,r19,r23
10007f08:	98001f26 	beq	r19,zero,10007f88 <__sfvwrite_r+0x308>
10007f0c:	a0800217 	ldw	r2,8(r20)
10007f10:	e5f9883a 	add	fp,fp,r23
10007f14:	95e5c83a 	sub	r18,r18,r23
10007f18:	15efc83a 	sub	r23,r2,r23
10007f1c:	a5c00215 	stw	r23,8(r20)
10007f20:	b83f8426 	beq	r23,zero,10007d34 <__alt_data_end+0xf8007d34>
10007f24:	903fe11e 	bne	r18,zero,10007eac <__alt_data_end+0xf8007eac>
10007f28:	8f000017 	ldw	fp,0(r17)
10007f2c:	8c800117 	ldw	r18,4(r17)
10007f30:	0011883a 	mov	r8,zero
10007f34:	8c400204 	addi	r17,r17,8
10007f38:	003fdb06 	br	10007ea8 <__alt_data_end+0xf8007ea8>
10007f3c:	180d883a 	mov	r6,r3
10007f40:	e00b883a 	mov	r5,fp
10007f44:	da000115 	stw	r8,4(sp)
10007f48:	d8c00015 	stw	r3,0(sp)
10007f4c:	0008fa00 	call	10008fa0 <memmove>
10007f50:	d8c00017 	ldw	r3,0(sp)
10007f54:	80800017 	ldw	r2,0(r16)
10007f58:	800b883a 	mov	r5,r16
10007f5c:	a809883a 	mov	r4,r21
10007f60:	10c5883a 	add	r2,r2,r3
10007f64:	80800015 	stw	r2,0(r16)
10007f68:	d8c00015 	stw	r3,0(sp)
10007f6c:	00074100 	call	10007410 <_fflush_r>
10007f70:	d8c00017 	ldw	r3,0(sp)
10007f74:	da000117 	ldw	r8,4(sp)
10007f78:	103fc21e 	bne	r2,zero,10007e84 <__alt_data_end+0xf8007e84>
10007f7c:	182f883a 	mov	r23,r3
10007f80:	9de7c83a 	sub	r19,r19,r23
10007f84:	983fe11e 	bne	r19,zero,10007f0c <__alt_data_end+0xf8007f0c>
10007f88:	800b883a 	mov	r5,r16
10007f8c:	a809883a 	mov	r4,r21
10007f90:	00074100 	call	10007410 <_fflush_r>
10007f94:	103fbb1e 	bne	r2,zero,10007e84 <__alt_data_end+0xf8007e84>
10007f98:	0011883a 	mov	r8,zero
10007f9c:	003fdb06 	br	10007f0c <__alt_data_end+0xf8007f0c>
10007fa0:	94c0012e 	bgeu	r18,r19,10007fa8 <__sfvwrite_r+0x328>
10007fa4:	9027883a 	mov	r19,r18
10007fa8:	980d883a 	mov	r6,r19
10007fac:	e00b883a 	mov	r5,fp
10007fb0:	0008fa00 	call	10008fa0 <memmove>
10007fb4:	80800217 	ldw	r2,8(r16)
10007fb8:	80c00017 	ldw	r3,0(r16)
10007fbc:	14c5c83a 	sub	r2,r2,r19
10007fc0:	1cc7883a 	add	r3,r3,r19
10007fc4:	80800215 	stw	r2,8(r16)
10007fc8:	80c00015 	stw	r3,0(r16)
10007fcc:	10004326 	beq	r2,zero,100080dc <__sfvwrite_r+0x45c>
10007fd0:	9805883a 	mov	r2,r19
10007fd4:	003f8306 	br	10007de4 <__alt_data_end+0xf8007de4>
10007fd8:	b00d883a 	mov	r6,r22
10007fdc:	e00b883a 	mov	r5,fp
10007fe0:	da000115 	stw	r8,4(sp)
10007fe4:	0008fa00 	call	10008fa0 <memmove>
10007fe8:	80800217 	ldw	r2,8(r16)
10007fec:	80c00017 	ldw	r3,0(r16)
10007ff0:	da000117 	ldw	r8,4(sp)
10007ff4:	1585c83a 	sub	r2,r2,r22
10007ff8:	1dad883a 	add	r22,r3,r22
10007ffc:	80800215 	stw	r2,8(r16)
10008000:	85800015 	stw	r22,0(r16)
10008004:	003fbf06 	br	10007f04 <__alt_data_end+0xf8007f04>
10008008:	81000017 	ldw	r4,0(r16)
1000800c:	9027883a 	mov	r19,r18
10008010:	902f883a 	mov	r23,r18
10008014:	003f6906 	br	10007dbc <__alt_data_end+0xf8007dbc>
10008018:	900d883a 	mov	r6,r18
1000801c:	01400284 	movi	r5,10
10008020:	e009883a 	mov	r4,fp
10008024:	0008d740 	call	10008d74 <memchr>
10008028:	10003e26 	beq	r2,zero,10008124 <__sfvwrite_r+0x4a4>
1000802c:	10800044 	addi	r2,r2,1
10008030:	1727c83a 	sub	r19,r2,fp
10008034:	02000044 	movi	r8,1
10008038:	003f9d06 	br	10007eb0 <__alt_data_end+0xf8007eb0>
1000803c:	80800517 	ldw	r2,20(r16)
10008040:	81400417 	ldw	r5,16(r16)
10008044:	81c00017 	ldw	r7,0(r16)
10008048:	10a7883a 	add	r19,r2,r2
1000804c:	9885883a 	add	r2,r19,r2
10008050:	1026d7fa 	srli	r19,r2,31
10008054:	396dc83a 	sub	r22,r7,r5
10008058:	b1000044 	addi	r4,r22,1
1000805c:	9885883a 	add	r2,r19,r2
10008060:	1027d07a 	srai	r19,r2,1
10008064:	2485883a 	add	r2,r4,r18
10008068:	980d883a 	mov	r6,r19
1000806c:	9880022e 	bgeu	r19,r2,10008078 <__sfvwrite_r+0x3f8>
10008070:	1027883a 	mov	r19,r2
10008074:	100d883a 	mov	r6,r2
10008078:	18c1000c 	andi	r3,r3,1024
1000807c:	18001c26 	beq	r3,zero,100080f0 <__sfvwrite_r+0x470>
10008080:	300b883a 	mov	r5,r6
10008084:	a809883a 	mov	r4,r21
10008088:	00085680 	call	10008568 <_malloc_r>
1000808c:	102f883a 	mov	r23,r2
10008090:	10002926 	beq	r2,zero,10008138 <__sfvwrite_r+0x4b8>
10008094:	81400417 	ldw	r5,16(r16)
10008098:	b00d883a 	mov	r6,r22
1000809c:	1009883a 	mov	r4,r2
100080a0:	0008e580 	call	10008e58 <memcpy>
100080a4:	8080030b 	ldhu	r2,12(r16)
100080a8:	00fedfc4 	movi	r3,-1153
100080ac:	10c4703a 	and	r2,r2,r3
100080b0:	10802014 	ori	r2,r2,128
100080b4:	8080030d 	sth	r2,12(r16)
100080b8:	bd89883a 	add	r4,r23,r22
100080bc:	9d8fc83a 	sub	r7,r19,r22
100080c0:	85c00415 	stw	r23,16(r16)
100080c4:	84c00515 	stw	r19,20(r16)
100080c8:	81000015 	stw	r4,0(r16)
100080cc:	9027883a 	mov	r19,r18
100080d0:	81c00215 	stw	r7,8(r16)
100080d4:	902f883a 	mov	r23,r18
100080d8:	003f3806 	br	10007dbc <__alt_data_end+0xf8007dbc>
100080dc:	800b883a 	mov	r5,r16
100080e0:	a809883a 	mov	r4,r21
100080e4:	00074100 	call	10007410 <_fflush_r>
100080e8:	103fb926 	beq	r2,zero,10007fd0 <__alt_data_end+0xf8007fd0>
100080ec:	003f6506 	br	10007e84 <__alt_data_end+0xf8007e84>
100080f0:	a809883a 	mov	r4,r21
100080f4:	000a2dc0 	call	1000a2dc <_realloc_r>
100080f8:	102f883a 	mov	r23,r2
100080fc:	103fee1e 	bne	r2,zero,100080b8 <__alt_data_end+0xf80080b8>
10008100:	81400417 	ldw	r5,16(r16)
10008104:	a809883a 	mov	r4,r21
10008108:	00079700 	call	10007970 <_free_r>
1000810c:	8080030b 	ldhu	r2,12(r16)
10008110:	00ffdfc4 	movi	r3,-129
10008114:	1884703a 	and	r2,r3,r2
10008118:	00c00304 	movi	r3,12
1000811c:	a8c00015 	stw	r3,0(r21)
10008120:	003f5906 	br	10007e88 <__alt_data_end+0xf8007e88>
10008124:	94c00044 	addi	r19,r18,1
10008128:	02000044 	movi	r8,1
1000812c:	003f6006 	br	10007eb0 <__alt_data_end+0xf8007eb0>
10008130:	00bfffc4 	movi	r2,-1
10008134:	003f0006 	br	10007d38 <__alt_data_end+0xf8007d38>
10008138:	00800304 	movi	r2,12
1000813c:	a8800015 	stw	r2,0(r21)
10008140:	8080030b 	ldhu	r2,12(r16)
10008144:	003f5006 	br	10007e88 <__alt_data_end+0xf8007e88>

10008148 <_fwalk>:
10008148:	defff704 	addi	sp,sp,-36
1000814c:	dd000415 	stw	r20,16(sp)
10008150:	dfc00815 	stw	ra,32(sp)
10008154:	ddc00715 	stw	r23,28(sp)
10008158:	dd800615 	stw	r22,24(sp)
1000815c:	dd400515 	stw	r21,20(sp)
10008160:	dcc00315 	stw	r19,12(sp)
10008164:	dc800215 	stw	r18,8(sp)
10008168:	dc400115 	stw	r17,4(sp)
1000816c:	dc000015 	stw	r16,0(sp)
10008170:	2500b804 	addi	r20,r4,736
10008174:	a0002326 	beq	r20,zero,10008204 <_fwalk+0xbc>
10008178:	282b883a 	mov	r21,r5
1000817c:	002f883a 	mov	r23,zero
10008180:	05800044 	movi	r22,1
10008184:	04ffffc4 	movi	r19,-1
10008188:	a4400117 	ldw	r17,4(r20)
1000818c:	a4800217 	ldw	r18,8(r20)
10008190:	8c7fffc4 	addi	r17,r17,-1
10008194:	88000d16 	blt	r17,zero,100081cc <_fwalk+0x84>
10008198:	94000304 	addi	r16,r18,12
1000819c:	94800384 	addi	r18,r18,14
100081a0:	8080000b 	ldhu	r2,0(r16)
100081a4:	8c7fffc4 	addi	r17,r17,-1
100081a8:	813ffd04 	addi	r4,r16,-12
100081ac:	b080042e 	bgeu	r22,r2,100081c0 <_fwalk+0x78>
100081b0:	9080000f 	ldh	r2,0(r18)
100081b4:	14c00226 	beq	r2,r19,100081c0 <_fwalk+0x78>
100081b8:	a83ee83a 	callr	r21
100081bc:	b8aeb03a 	or	r23,r23,r2
100081c0:	84001a04 	addi	r16,r16,104
100081c4:	94801a04 	addi	r18,r18,104
100081c8:	8cfff51e 	bne	r17,r19,100081a0 <__alt_data_end+0xf80081a0>
100081cc:	a5000017 	ldw	r20,0(r20)
100081d0:	a03fed1e 	bne	r20,zero,10008188 <__alt_data_end+0xf8008188>
100081d4:	b805883a 	mov	r2,r23
100081d8:	dfc00817 	ldw	ra,32(sp)
100081dc:	ddc00717 	ldw	r23,28(sp)
100081e0:	dd800617 	ldw	r22,24(sp)
100081e4:	dd400517 	ldw	r21,20(sp)
100081e8:	dd000417 	ldw	r20,16(sp)
100081ec:	dcc00317 	ldw	r19,12(sp)
100081f0:	dc800217 	ldw	r18,8(sp)
100081f4:	dc400117 	ldw	r17,4(sp)
100081f8:	dc000017 	ldw	r16,0(sp)
100081fc:	dec00904 	addi	sp,sp,36
10008200:	f800283a 	ret
10008204:	002f883a 	mov	r23,zero
10008208:	003ff206 	br	100081d4 <__alt_data_end+0xf80081d4>

1000820c <_fwalk_reent>:
1000820c:	defff704 	addi	sp,sp,-36
10008210:	dd000415 	stw	r20,16(sp)
10008214:	dfc00815 	stw	ra,32(sp)
10008218:	ddc00715 	stw	r23,28(sp)
1000821c:	dd800615 	stw	r22,24(sp)
10008220:	dd400515 	stw	r21,20(sp)
10008224:	dcc00315 	stw	r19,12(sp)
10008228:	dc800215 	stw	r18,8(sp)
1000822c:	dc400115 	stw	r17,4(sp)
10008230:	dc000015 	stw	r16,0(sp)
10008234:	2500b804 	addi	r20,r4,736
10008238:	a0002326 	beq	r20,zero,100082c8 <_fwalk_reent+0xbc>
1000823c:	282b883a 	mov	r21,r5
10008240:	2027883a 	mov	r19,r4
10008244:	002f883a 	mov	r23,zero
10008248:	05800044 	movi	r22,1
1000824c:	04bfffc4 	movi	r18,-1
10008250:	a4400117 	ldw	r17,4(r20)
10008254:	a4000217 	ldw	r16,8(r20)
10008258:	8c7fffc4 	addi	r17,r17,-1
1000825c:	88000c16 	blt	r17,zero,10008290 <_fwalk_reent+0x84>
10008260:	84000304 	addi	r16,r16,12
10008264:	8080000b 	ldhu	r2,0(r16)
10008268:	8c7fffc4 	addi	r17,r17,-1
1000826c:	817ffd04 	addi	r5,r16,-12
10008270:	b080052e 	bgeu	r22,r2,10008288 <_fwalk_reent+0x7c>
10008274:	8080008f 	ldh	r2,2(r16)
10008278:	9809883a 	mov	r4,r19
1000827c:	14800226 	beq	r2,r18,10008288 <_fwalk_reent+0x7c>
10008280:	a83ee83a 	callr	r21
10008284:	b8aeb03a 	or	r23,r23,r2
10008288:	84001a04 	addi	r16,r16,104
1000828c:	8cbff51e 	bne	r17,r18,10008264 <__alt_data_end+0xf8008264>
10008290:	a5000017 	ldw	r20,0(r20)
10008294:	a03fee1e 	bne	r20,zero,10008250 <__alt_data_end+0xf8008250>
10008298:	b805883a 	mov	r2,r23
1000829c:	dfc00817 	ldw	ra,32(sp)
100082a0:	ddc00717 	ldw	r23,28(sp)
100082a4:	dd800617 	ldw	r22,24(sp)
100082a8:	dd400517 	ldw	r21,20(sp)
100082ac:	dd000417 	ldw	r20,16(sp)
100082b0:	dcc00317 	ldw	r19,12(sp)
100082b4:	dc800217 	ldw	r18,8(sp)
100082b8:	dc400117 	ldw	r17,4(sp)
100082bc:	dc000017 	ldw	r16,0(sp)
100082c0:	dec00904 	addi	sp,sp,36
100082c4:	f800283a 	ret
100082c8:	002f883a 	mov	r23,zero
100082cc:	003ff206 	br	10008298 <__alt_data_end+0xf8008298>

100082d0 <_setlocale_r>:
100082d0:	30001b26 	beq	r6,zero,10008340 <_setlocale_r+0x70>
100082d4:	01440074 	movhi	r5,4097
100082d8:	defffe04 	addi	sp,sp,-8
100082dc:	294ffb04 	addi	r5,r5,16364
100082e0:	3009883a 	mov	r4,r6
100082e4:	dc000015 	stw	r16,0(sp)
100082e8:	dfc00115 	stw	ra,4(sp)
100082ec:	3021883a 	mov	r16,r6
100082f0:	000aa440 	call	1000aa44 <strcmp>
100082f4:	1000061e 	bne	r2,zero,10008310 <_setlocale_r+0x40>
100082f8:	00840074 	movhi	r2,4097
100082fc:	108ffa04 	addi	r2,r2,16360
10008300:	dfc00117 	ldw	ra,4(sp)
10008304:	dc000017 	ldw	r16,0(sp)
10008308:	dec00204 	addi	sp,sp,8
1000830c:	f800283a 	ret
10008310:	01440074 	movhi	r5,4097
10008314:	294ffa04 	addi	r5,r5,16360
10008318:	8009883a 	mov	r4,r16
1000831c:	000aa440 	call	1000aa44 <strcmp>
10008320:	103ff526 	beq	r2,zero,100082f8 <__alt_data_end+0xf80082f8>
10008324:	01440074 	movhi	r5,4097
10008328:	294fdd04 	addi	r5,r5,16244
1000832c:	8009883a 	mov	r4,r16
10008330:	000aa440 	call	1000aa44 <strcmp>
10008334:	103ff026 	beq	r2,zero,100082f8 <__alt_data_end+0xf80082f8>
10008338:	0005883a 	mov	r2,zero
1000833c:	003ff006 	br	10008300 <__alt_data_end+0xf8008300>
10008340:	00840074 	movhi	r2,4097
10008344:	108ffa04 	addi	r2,r2,16360
10008348:	f800283a 	ret

1000834c <__locale_charset>:
1000834c:	00840074 	movhi	r2,4097
10008350:	10926d04 	addi	r2,r2,18868
10008354:	f800283a 	ret

10008358 <__locale_mb_cur_max>:
10008358:	00840074 	movhi	r2,4097
1000835c:	10980b04 	addi	r2,r2,24620
10008360:	10800017 	ldw	r2,0(r2)
10008364:	f800283a 	ret

10008368 <__locale_msgcharset>:
10008368:	00840074 	movhi	r2,4097
1000836c:	10926504 	addi	r2,r2,18836
10008370:	f800283a 	ret

10008374 <__locale_cjk_lang>:
10008374:	0005883a 	mov	r2,zero
10008378:	f800283a 	ret

1000837c <_localeconv_r>:
1000837c:	00840074 	movhi	r2,4097
10008380:	10927504 	addi	r2,r2,18900
10008384:	f800283a 	ret

10008388 <setlocale>:
10008388:	00840074 	movhi	r2,4097
1000838c:	10980a04 	addi	r2,r2,24616
10008390:	280d883a 	mov	r6,r5
10008394:	200b883a 	mov	r5,r4
10008398:	11000017 	ldw	r4,0(r2)
1000839c:	00082d01 	jmpi	100082d0 <_setlocale_r>

100083a0 <localeconv>:
100083a0:	00840074 	movhi	r2,4097
100083a4:	10927504 	addi	r2,r2,18900
100083a8:	f800283a 	ret

100083ac <__smakebuf_r>:
100083ac:	2880030b 	ldhu	r2,12(r5)
100083b0:	10c0008c 	andi	r3,r2,2
100083b4:	1800411e 	bne	r3,zero,100084bc <__smakebuf_r+0x110>
100083b8:	deffec04 	addi	sp,sp,-80
100083bc:	dc000f15 	stw	r16,60(sp)
100083c0:	2821883a 	mov	r16,r5
100083c4:	2940038f 	ldh	r5,14(r5)
100083c8:	dc401015 	stw	r17,64(sp)
100083cc:	dfc01315 	stw	ra,76(sp)
100083d0:	dcc01215 	stw	r19,72(sp)
100083d4:	dc801115 	stw	r18,68(sp)
100083d8:	2023883a 	mov	r17,r4
100083dc:	28001c16 	blt	r5,zero,10008450 <__smakebuf_r+0xa4>
100083e0:	d80d883a 	mov	r6,sp
100083e4:	000dc240 	call	1000dc24 <_fstat_r>
100083e8:	10001816 	blt	r2,zero,1000844c <__smakebuf_r+0xa0>
100083ec:	d8800117 	ldw	r2,4(sp)
100083f0:	00e00014 	movui	r3,32768
100083f4:	10bc000c 	andi	r2,r2,61440
100083f8:	14c80020 	cmpeqi	r19,r2,8192
100083fc:	10c03726 	beq	r2,r3,100084dc <__smakebuf_r+0x130>
10008400:	80c0030b 	ldhu	r3,12(r16)
10008404:	18c20014 	ori	r3,r3,2048
10008408:	80c0030d 	sth	r3,12(r16)
1000840c:	00c80004 	movi	r3,8192
10008410:	10c0521e 	bne	r2,r3,1000855c <__smakebuf_r+0x1b0>
10008414:	8140038f 	ldh	r5,14(r16)
10008418:	8809883a 	mov	r4,r17
1000841c:	000dc800 	call	1000dc80 <_isatty_r>
10008420:	10004c26 	beq	r2,zero,10008554 <__smakebuf_r+0x1a8>
10008424:	8080030b 	ldhu	r2,12(r16)
10008428:	80c010c4 	addi	r3,r16,67
1000842c:	80c00015 	stw	r3,0(r16)
10008430:	10800054 	ori	r2,r2,1
10008434:	8080030d 	sth	r2,12(r16)
10008438:	00800044 	movi	r2,1
1000843c:	80c00415 	stw	r3,16(r16)
10008440:	80800515 	stw	r2,20(r16)
10008444:	04810004 	movi	r18,1024
10008448:	00000706 	br	10008468 <__smakebuf_r+0xbc>
1000844c:	8080030b 	ldhu	r2,12(r16)
10008450:	10c0200c 	andi	r3,r2,128
10008454:	18001f1e 	bne	r3,zero,100084d4 <__smakebuf_r+0x128>
10008458:	04810004 	movi	r18,1024
1000845c:	10820014 	ori	r2,r2,2048
10008460:	8080030d 	sth	r2,12(r16)
10008464:	0027883a 	mov	r19,zero
10008468:	900b883a 	mov	r5,r18
1000846c:	8809883a 	mov	r4,r17
10008470:	00085680 	call	10008568 <_malloc_r>
10008474:	10002c26 	beq	r2,zero,10008528 <__smakebuf_r+0x17c>
10008478:	80c0030b 	ldhu	r3,12(r16)
1000847c:	01040034 	movhi	r4,4096
10008480:	211d2904 	addi	r4,r4,29860
10008484:	89000f15 	stw	r4,60(r17)
10008488:	18c02014 	ori	r3,r3,128
1000848c:	80c0030d 	sth	r3,12(r16)
10008490:	80800015 	stw	r2,0(r16)
10008494:	80800415 	stw	r2,16(r16)
10008498:	84800515 	stw	r18,20(r16)
1000849c:	98001a1e 	bne	r19,zero,10008508 <__smakebuf_r+0x15c>
100084a0:	dfc01317 	ldw	ra,76(sp)
100084a4:	dcc01217 	ldw	r19,72(sp)
100084a8:	dc801117 	ldw	r18,68(sp)
100084ac:	dc401017 	ldw	r17,64(sp)
100084b0:	dc000f17 	ldw	r16,60(sp)
100084b4:	dec01404 	addi	sp,sp,80
100084b8:	f800283a 	ret
100084bc:	288010c4 	addi	r2,r5,67
100084c0:	28800015 	stw	r2,0(r5)
100084c4:	28800415 	stw	r2,16(r5)
100084c8:	00800044 	movi	r2,1
100084cc:	28800515 	stw	r2,20(r5)
100084d0:	f800283a 	ret
100084d4:	04801004 	movi	r18,64
100084d8:	003fe006 	br	1000845c <__alt_data_end+0xf800845c>
100084dc:	81000a17 	ldw	r4,40(r16)
100084e0:	00c40074 	movhi	r3,4097
100084e4:	18ea7804 	addi	r3,r3,-22048
100084e8:	20ffc51e 	bne	r4,r3,10008400 <__alt_data_end+0xf8008400>
100084ec:	8080030b 	ldhu	r2,12(r16)
100084f0:	04810004 	movi	r18,1024
100084f4:	84801315 	stw	r18,76(r16)
100084f8:	1484b03a 	or	r2,r2,r18
100084fc:	8080030d 	sth	r2,12(r16)
10008500:	0027883a 	mov	r19,zero
10008504:	003fd806 	br	10008468 <__alt_data_end+0xf8008468>
10008508:	8140038f 	ldh	r5,14(r16)
1000850c:	8809883a 	mov	r4,r17
10008510:	000dc800 	call	1000dc80 <_isatty_r>
10008514:	103fe226 	beq	r2,zero,100084a0 <__alt_data_end+0xf80084a0>
10008518:	8080030b 	ldhu	r2,12(r16)
1000851c:	10800054 	ori	r2,r2,1
10008520:	8080030d 	sth	r2,12(r16)
10008524:	003fde06 	br	100084a0 <__alt_data_end+0xf80084a0>
10008528:	8080030b 	ldhu	r2,12(r16)
1000852c:	10c0800c 	andi	r3,r2,512
10008530:	183fdb1e 	bne	r3,zero,100084a0 <__alt_data_end+0xf80084a0>
10008534:	10800094 	ori	r2,r2,2
10008538:	80c010c4 	addi	r3,r16,67
1000853c:	8080030d 	sth	r2,12(r16)
10008540:	00800044 	movi	r2,1
10008544:	80c00015 	stw	r3,0(r16)
10008548:	80c00415 	stw	r3,16(r16)
1000854c:	80800515 	stw	r2,20(r16)
10008550:	003fd306 	br	100084a0 <__alt_data_end+0xf80084a0>
10008554:	04810004 	movi	r18,1024
10008558:	003fc306 	br	10008468 <__alt_data_end+0xf8008468>
1000855c:	0027883a 	mov	r19,zero
10008560:	04810004 	movi	r18,1024
10008564:	003fc006 	br	10008468 <__alt_data_end+0xf8008468>

10008568 <_malloc_r>:
10008568:	defff504 	addi	sp,sp,-44
1000856c:	dc800315 	stw	r18,12(sp)
10008570:	dfc00a15 	stw	ra,40(sp)
10008574:	df000915 	stw	fp,36(sp)
10008578:	ddc00815 	stw	r23,32(sp)
1000857c:	dd800715 	stw	r22,28(sp)
10008580:	dd400615 	stw	r21,24(sp)
10008584:	dd000515 	stw	r20,20(sp)
10008588:	dcc00415 	stw	r19,16(sp)
1000858c:	dc400215 	stw	r17,8(sp)
10008590:	dc000115 	stw	r16,4(sp)
10008594:	288002c4 	addi	r2,r5,11
10008598:	00c00584 	movi	r3,22
1000859c:	2025883a 	mov	r18,r4
100085a0:	18807f2e 	bgeu	r3,r2,100087a0 <_malloc_r+0x238>
100085a4:	047ffe04 	movi	r17,-8
100085a8:	1462703a 	and	r17,r2,r17
100085ac:	8800a316 	blt	r17,zero,1000883c <_malloc_r+0x2d4>
100085b0:	8940a236 	bltu	r17,r5,1000883c <_malloc_r+0x2d4>
100085b4:	0011be00 	call	10011be0 <__malloc_lock>
100085b8:	00807dc4 	movi	r2,503
100085bc:	1441e92e 	bgeu	r2,r17,10008d64 <_malloc_r+0x7fc>
100085c0:	8804d27a 	srli	r2,r17,9
100085c4:	1000a126 	beq	r2,zero,1000884c <_malloc_r+0x2e4>
100085c8:	00c00104 	movi	r3,4
100085cc:	18811e36 	bltu	r3,r2,10008a48 <_malloc_r+0x4e0>
100085d0:	8804d1ba 	srli	r2,r17,6
100085d4:	12000e44 	addi	r8,r2,57
100085d8:	11c00e04 	addi	r7,r2,56
100085dc:	4209883a 	add	r4,r8,r8
100085e0:	04c40074 	movhi	r19,4097
100085e4:	2109883a 	add	r4,r4,r4
100085e8:	9cd28304 	addi	r19,r19,18956
100085ec:	2109883a 	add	r4,r4,r4
100085f0:	9909883a 	add	r4,r19,r4
100085f4:	24000117 	ldw	r16,4(r4)
100085f8:	213ffe04 	addi	r4,r4,-8
100085fc:	24009726 	beq	r4,r16,1000885c <_malloc_r+0x2f4>
10008600:	80800117 	ldw	r2,4(r16)
10008604:	01bfff04 	movi	r6,-4
10008608:	014003c4 	movi	r5,15
1000860c:	1184703a 	and	r2,r2,r6
10008610:	1447c83a 	sub	r3,r2,r17
10008614:	28c00716 	blt	r5,r3,10008634 <_malloc_r+0xcc>
10008618:	1800920e 	bge	r3,zero,10008864 <_malloc_r+0x2fc>
1000861c:	84000317 	ldw	r16,12(r16)
10008620:	24008e26 	beq	r4,r16,1000885c <_malloc_r+0x2f4>
10008624:	80800117 	ldw	r2,4(r16)
10008628:	1184703a 	and	r2,r2,r6
1000862c:	1447c83a 	sub	r3,r2,r17
10008630:	28fff90e 	bge	r5,r3,10008618 <__alt_data_end+0xf8008618>
10008634:	3809883a 	mov	r4,r7
10008638:	01840074 	movhi	r6,4097
1000863c:	9c000417 	ldw	r16,16(r19)
10008640:	31928304 	addi	r6,r6,18956
10008644:	32000204 	addi	r8,r6,8
10008648:	82013426 	beq	r16,r8,10008b1c <_malloc_r+0x5b4>
1000864c:	80c00117 	ldw	r3,4(r16)
10008650:	00bfff04 	movi	r2,-4
10008654:	188e703a 	and	r7,r3,r2
10008658:	3c45c83a 	sub	r2,r7,r17
1000865c:	00c003c4 	movi	r3,15
10008660:	18811f16 	blt	r3,r2,10008ae0 <_malloc_r+0x578>
10008664:	32000515 	stw	r8,20(r6)
10008668:	32000415 	stw	r8,16(r6)
1000866c:	10007f0e 	bge	r2,zero,1000886c <_malloc_r+0x304>
10008670:	00807fc4 	movi	r2,511
10008674:	11c0fd36 	bltu	r2,r7,10008a6c <_malloc_r+0x504>
10008678:	3806d0fa 	srli	r3,r7,3
1000867c:	01c00044 	movi	r7,1
10008680:	30800117 	ldw	r2,4(r6)
10008684:	19400044 	addi	r5,r3,1
10008688:	294b883a 	add	r5,r5,r5
1000868c:	1807d0ba 	srai	r3,r3,2
10008690:	294b883a 	add	r5,r5,r5
10008694:	294b883a 	add	r5,r5,r5
10008698:	298b883a 	add	r5,r5,r6
1000869c:	38c6983a 	sll	r3,r7,r3
100086a0:	29c00017 	ldw	r7,0(r5)
100086a4:	2a7ffe04 	addi	r9,r5,-8
100086a8:	1886b03a 	or	r3,r3,r2
100086ac:	82400315 	stw	r9,12(r16)
100086b0:	81c00215 	stw	r7,8(r16)
100086b4:	30c00115 	stw	r3,4(r6)
100086b8:	2c000015 	stw	r16,0(r5)
100086bc:	3c000315 	stw	r16,12(r7)
100086c0:	2005d0ba 	srai	r2,r4,2
100086c4:	01400044 	movi	r5,1
100086c8:	288a983a 	sll	r5,r5,r2
100086cc:	19406f36 	bltu	r3,r5,1000888c <_malloc_r+0x324>
100086d0:	28c4703a 	and	r2,r5,r3
100086d4:	10000a1e 	bne	r2,zero,10008700 <_malloc_r+0x198>
100086d8:	00bfff04 	movi	r2,-4
100086dc:	294b883a 	add	r5,r5,r5
100086e0:	2088703a 	and	r4,r4,r2
100086e4:	28c4703a 	and	r2,r5,r3
100086e8:	21000104 	addi	r4,r4,4
100086ec:	1000041e 	bne	r2,zero,10008700 <_malloc_r+0x198>
100086f0:	294b883a 	add	r5,r5,r5
100086f4:	28c4703a 	and	r2,r5,r3
100086f8:	21000104 	addi	r4,r4,4
100086fc:	103ffc26 	beq	r2,zero,100086f0 <__alt_data_end+0xf80086f0>
10008700:	02bfff04 	movi	r10,-4
10008704:	024003c4 	movi	r9,15
10008708:	21800044 	addi	r6,r4,1
1000870c:	318d883a 	add	r6,r6,r6
10008710:	318d883a 	add	r6,r6,r6
10008714:	318d883a 	add	r6,r6,r6
10008718:	998d883a 	add	r6,r19,r6
1000871c:	333ffe04 	addi	r12,r6,-8
10008720:	2017883a 	mov	r11,r4
10008724:	31800104 	addi	r6,r6,4
10008728:	34000017 	ldw	r16,0(r6)
1000872c:	31fffd04 	addi	r7,r6,-12
10008730:	81c0041e 	bne	r16,r7,10008744 <_malloc_r+0x1dc>
10008734:	0000fb06 	br	10008b24 <_malloc_r+0x5bc>
10008738:	1801030e 	bge	r3,zero,10008b48 <_malloc_r+0x5e0>
1000873c:	84000317 	ldw	r16,12(r16)
10008740:	81c0f826 	beq	r16,r7,10008b24 <_malloc_r+0x5bc>
10008744:	80800117 	ldw	r2,4(r16)
10008748:	1284703a 	and	r2,r2,r10
1000874c:	1447c83a 	sub	r3,r2,r17
10008750:	48fff90e 	bge	r9,r3,10008738 <__alt_data_end+0xf8008738>
10008754:	80800317 	ldw	r2,12(r16)
10008758:	81000217 	ldw	r4,8(r16)
1000875c:	89400054 	ori	r5,r17,1
10008760:	81400115 	stw	r5,4(r16)
10008764:	20800315 	stw	r2,12(r4)
10008768:	11000215 	stw	r4,8(r2)
1000876c:	8463883a 	add	r17,r16,r17
10008770:	9c400515 	stw	r17,20(r19)
10008774:	9c400415 	stw	r17,16(r19)
10008778:	18800054 	ori	r2,r3,1
1000877c:	88800115 	stw	r2,4(r17)
10008780:	8a000315 	stw	r8,12(r17)
10008784:	8a000215 	stw	r8,8(r17)
10008788:	88e3883a 	add	r17,r17,r3
1000878c:	88c00015 	stw	r3,0(r17)
10008790:	9009883a 	mov	r4,r18
10008794:	0011c040 	call	10011c04 <__malloc_unlock>
10008798:	80800204 	addi	r2,r16,8
1000879c:	00001b06 	br	1000880c <_malloc_r+0x2a4>
100087a0:	04400404 	movi	r17,16
100087a4:	89402536 	bltu	r17,r5,1000883c <_malloc_r+0x2d4>
100087a8:	0011be00 	call	10011be0 <__malloc_lock>
100087ac:	00800184 	movi	r2,6
100087b0:	01000084 	movi	r4,2
100087b4:	04c40074 	movhi	r19,4097
100087b8:	1085883a 	add	r2,r2,r2
100087bc:	9cd28304 	addi	r19,r19,18956
100087c0:	1085883a 	add	r2,r2,r2
100087c4:	9885883a 	add	r2,r19,r2
100087c8:	14000117 	ldw	r16,4(r2)
100087cc:	10fffe04 	addi	r3,r2,-8
100087d0:	80c0d926 	beq	r16,r3,10008b38 <_malloc_r+0x5d0>
100087d4:	80c00117 	ldw	r3,4(r16)
100087d8:	81000317 	ldw	r4,12(r16)
100087dc:	00bfff04 	movi	r2,-4
100087e0:	1884703a 	and	r2,r3,r2
100087e4:	81400217 	ldw	r5,8(r16)
100087e8:	8085883a 	add	r2,r16,r2
100087ec:	10c00117 	ldw	r3,4(r2)
100087f0:	29000315 	stw	r4,12(r5)
100087f4:	21400215 	stw	r5,8(r4)
100087f8:	18c00054 	ori	r3,r3,1
100087fc:	10c00115 	stw	r3,4(r2)
10008800:	9009883a 	mov	r4,r18
10008804:	0011c040 	call	10011c04 <__malloc_unlock>
10008808:	80800204 	addi	r2,r16,8
1000880c:	dfc00a17 	ldw	ra,40(sp)
10008810:	df000917 	ldw	fp,36(sp)
10008814:	ddc00817 	ldw	r23,32(sp)
10008818:	dd800717 	ldw	r22,28(sp)
1000881c:	dd400617 	ldw	r21,24(sp)
10008820:	dd000517 	ldw	r20,20(sp)
10008824:	dcc00417 	ldw	r19,16(sp)
10008828:	dc800317 	ldw	r18,12(sp)
1000882c:	dc400217 	ldw	r17,8(sp)
10008830:	dc000117 	ldw	r16,4(sp)
10008834:	dec00b04 	addi	sp,sp,44
10008838:	f800283a 	ret
1000883c:	00800304 	movi	r2,12
10008840:	90800015 	stw	r2,0(r18)
10008844:	0005883a 	mov	r2,zero
10008848:	003ff006 	br	1000880c <__alt_data_end+0xf800880c>
1000884c:	01002004 	movi	r4,128
10008850:	02001004 	movi	r8,64
10008854:	01c00fc4 	movi	r7,63
10008858:	003f6106 	br	100085e0 <__alt_data_end+0xf80085e0>
1000885c:	4009883a 	mov	r4,r8
10008860:	003f7506 	br	10008638 <__alt_data_end+0xf8008638>
10008864:	81000317 	ldw	r4,12(r16)
10008868:	003fde06 	br	100087e4 <__alt_data_end+0xf80087e4>
1000886c:	81c5883a 	add	r2,r16,r7
10008870:	11400117 	ldw	r5,4(r2)
10008874:	9009883a 	mov	r4,r18
10008878:	29400054 	ori	r5,r5,1
1000887c:	11400115 	stw	r5,4(r2)
10008880:	0011c040 	call	10011c04 <__malloc_unlock>
10008884:	80800204 	addi	r2,r16,8
10008888:	003fe006 	br	1000880c <__alt_data_end+0xf800880c>
1000888c:	9c000217 	ldw	r16,8(r19)
10008890:	00bfff04 	movi	r2,-4
10008894:	85800117 	ldw	r22,4(r16)
10008898:	b0ac703a 	and	r22,r22,r2
1000889c:	b4400336 	bltu	r22,r17,100088ac <_malloc_r+0x344>
100088a0:	b445c83a 	sub	r2,r22,r17
100088a4:	00c003c4 	movi	r3,15
100088a8:	18805d16 	blt	r3,r2,10008a20 <_malloc_r+0x4b8>
100088ac:	05c40074 	movhi	r23,4097
100088b0:	00840074 	movhi	r2,4097
100088b4:	109f9304 	addi	r2,r2,32332
100088b8:	bdd80c04 	addi	r23,r23,24624
100088bc:	15400017 	ldw	r21,0(r2)
100088c0:	b8c00017 	ldw	r3,0(r23)
100088c4:	00bfffc4 	movi	r2,-1
100088c8:	858d883a 	add	r6,r16,r22
100088cc:	8d6b883a 	add	r21,r17,r21
100088d0:	1880ea26 	beq	r3,r2,10008c7c <_malloc_r+0x714>
100088d4:	ad4403c4 	addi	r21,r21,4111
100088d8:	00bc0004 	movi	r2,-4096
100088dc:	a8aa703a 	and	r21,r21,r2
100088e0:	a80b883a 	mov	r5,r21
100088e4:	9009883a 	mov	r4,r18
100088e8:	d9800015 	stw	r6,0(sp)
100088ec:	000a8b40 	call	1000a8b4 <_sbrk_r>
100088f0:	1029883a 	mov	r20,r2
100088f4:	00bfffc4 	movi	r2,-1
100088f8:	d9800017 	ldw	r6,0(sp)
100088fc:	a080e826 	beq	r20,r2,10008ca0 <_malloc_r+0x738>
10008900:	a180a636 	bltu	r20,r6,10008b9c <_malloc_r+0x634>
10008904:	07040074 	movhi	fp,4097
10008908:	e71f9c04 	addi	fp,fp,32368
1000890c:	e0800017 	ldw	r2,0(fp)
10008910:	a887883a 	add	r3,r21,r2
10008914:	e0c00015 	stw	r3,0(fp)
10008918:	3500e626 	beq	r6,r20,10008cb4 <_malloc_r+0x74c>
1000891c:	b9000017 	ldw	r4,0(r23)
10008920:	00bfffc4 	movi	r2,-1
10008924:	2080ee26 	beq	r4,r2,10008ce0 <_malloc_r+0x778>
10008928:	a185c83a 	sub	r2,r20,r6
1000892c:	10c5883a 	add	r2,r2,r3
10008930:	e0800015 	stw	r2,0(fp)
10008934:	a0c001cc 	andi	r3,r20,7
10008938:	1800bc26 	beq	r3,zero,10008c2c <_malloc_r+0x6c4>
1000893c:	a0e9c83a 	sub	r20,r20,r3
10008940:	00840204 	movi	r2,4104
10008944:	a5000204 	addi	r20,r20,8
10008948:	10c7c83a 	sub	r3,r2,r3
1000894c:	a545883a 	add	r2,r20,r21
10008950:	1083ffcc 	andi	r2,r2,4095
10008954:	18abc83a 	sub	r21,r3,r2
10008958:	a80b883a 	mov	r5,r21
1000895c:	9009883a 	mov	r4,r18
10008960:	000a8b40 	call	1000a8b4 <_sbrk_r>
10008964:	00ffffc4 	movi	r3,-1
10008968:	10c0e126 	beq	r2,r3,10008cf0 <_malloc_r+0x788>
1000896c:	1505c83a 	sub	r2,r2,r20
10008970:	1545883a 	add	r2,r2,r21
10008974:	10800054 	ori	r2,r2,1
10008978:	e0c00017 	ldw	r3,0(fp)
1000897c:	9d000215 	stw	r20,8(r19)
10008980:	a0800115 	stw	r2,4(r20)
10008984:	a8c7883a 	add	r3,r21,r3
10008988:	e0c00015 	stw	r3,0(fp)
1000898c:	84c00e26 	beq	r16,r19,100089c8 <_malloc_r+0x460>
10008990:	018003c4 	movi	r6,15
10008994:	3580a72e 	bgeu	r6,r22,10008c34 <_malloc_r+0x6cc>
10008998:	81400117 	ldw	r5,4(r16)
1000899c:	013ffe04 	movi	r4,-8
100089a0:	b0bffd04 	addi	r2,r22,-12
100089a4:	1104703a 	and	r2,r2,r4
100089a8:	2900004c 	andi	r4,r5,1
100089ac:	2088b03a 	or	r4,r4,r2
100089b0:	81000115 	stw	r4,4(r16)
100089b4:	01400144 	movi	r5,5
100089b8:	8089883a 	add	r4,r16,r2
100089bc:	21400115 	stw	r5,4(r4)
100089c0:	21400215 	stw	r5,8(r4)
100089c4:	3080cd36 	bltu	r6,r2,10008cfc <_malloc_r+0x794>
100089c8:	00840074 	movhi	r2,4097
100089cc:	109f9204 	addi	r2,r2,32328
100089d0:	11000017 	ldw	r4,0(r2)
100089d4:	20c0012e 	bgeu	r4,r3,100089dc <_malloc_r+0x474>
100089d8:	10c00015 	stw	r3,0(r2)
100089dc:	00840074 	movhi	r2,4097
100089e0:	109f9104 	addi	r2,r2,32324
100089e4:	11000017 	ldw	r4,0(r2)
100089e8:	9c000217 	ldw	r16,8(r19)
100089ec:	20c0012e 	bgeu	r4,r3,100089f4 <_malloc_r+0x48c>
100089f0:	10c00015 	stw	r3,0(r2)
100089f4:	80c00117 	ldw	r3,4(r16)
100089f8:	00bfff04 	movi	r2,-4
100089fc:	1886703a 	and	r3,r3,r2
10008a00:	1c45c83a 	sub	r2,r3,r17
10008a04:	1c400236 	bltu	r3,r17,10008a10 <_malloc_r+0x4a8>
10008a08:	00c003c4 	movi	r3,15
10008a0c:	18800416 	blt	r3,r2,10008a20 <_malloc_r+0x4b8>
10008a10:	9009883a 	mov	r4,r18
10008a14:	0011c040 	call	10011c04 <__malloc_unlock>
10008a18:	0005883a 	mov	r2,zero
10008a1c:	003f7b06 	br	1000880c <__alt_data_end+0xf800880c>
10008a20:	88c00054 	ori	r3,r17,1
10008a24:	80c00115 	stw	r3,4(r16)
10008a28:	8463883a 	add	r17,r16,r17
10008a2c:	10800054 	ori	r2,r2,1
10008a30:	9c400215 	stw	r17,8(r19)
10008a34:	88800115 	stw	r2,4(r17)
10008a38:	9009883a 	mov	r4,r18
10008a3c:	0011c040 	call	10011c04 <__malloc_unlock>
10008a40:	80800204 	addi	r2,r16,8
10008a44:	003f7106 	br	1000880c <__alt_data_end+0xf800880c>
10008a48:	00c00504 	movi	r3,20
10008a4c:	18804a2e 	bgeu	r3,r2,10008b78 <_malloc_r+0x610>
10008a50:	00c01504 	movi	r3,84
10008a54:	18806e36 	bltu	r3,r2,10008c10 <_malloc_r+0x6a8>
10008a58:	8804d33a 	srli	r2,r17,12
10008a5c:	12001bc4 	addi	r8,r2,111
10008a60:	11c01b84 	addi	r7,r2,110
10008a64:	4209883a 	add	r4,r8,r8
10008a68:	003edd06 	br	100085e0 <__alt_data_end+0xf80085e0>
10008a6c:	3804d27a 	srli	r2,r7,9
10008a70:	00c00104 	movi	r3,4
10008a74:	1880442e 	bgeu	r3,r2,10008b88 <_malloc_r+0x620>
10008a78:	00c00504 	movi	r3,20
10008a7c:	18808136 	bltu	r3,r2,10008c84 <_malloc_r+0x71c>
10008a80:	11401704 	addi	r5,r2,92
10008a84:	10c016c4 	addi	r3,r2,91
10008a88:	294b883a 	add	r5,r5,r5
10008a8c:	294b883a 	add	r5,r5,r5
10008a90:	294b883a 	add	r5,r5,r5
10008a94:	994b883a 	add	r5,r19,r5
10008a98:	28800017 	ldw	r2,0(r5)
10008a9c:	01840074 	movhi	r6,4097
10008aa0:	297ffe04 	addi	r5,r5,-8
10008aa4:	31928304 	addi	r6,r6,18956
10008aa8:	28806526 	beq	r5,r2,10008c40 <_malloc_r+0x6d8>
10008aac:	01bfff04 	movi	r6,-4
10008ab0:	10c00117 	ldw	r3,4(r2)
10008ab4:	1986703a 	and	r3,r3,r6
10008ab8:	38c0022e 	bgeu	r7,r3,10008ac4 <_malloc_r+0x55c>
10008abc:	10800217 	ldw	r2,8(r2)
10008ac0:	28bffb1e 	bne	r5,r2,10008ab0 <__alt_data_end+0xf8008ab0>
10008ac4:	11400317 	ldw	r5,12(r2)
10008ac8:	98c00117 	ldw	r3,4(r19)
10008acc:	81400315 	stw	r5,12(r16)
10008ad0:	80800215 	stw	r2,8(r16)
10008ad4:	2c000215 	stw	r16,8(r5)
10008ad8:	14000315 	stw	r16,12(r2)
10008adc:	003ef806 	br	100086c0 <__alt_data_end+0xf80086c0>
10008ae0:	88c00054 	ori	r3,r17,1
10008ae4:	80c00115 	stw	r3,4(r16)
10008ae8:	8463883a 	add	r17,r16,r17
10008aec:	34400515 	stw	r17,20(r6)
10008af0:	34400415 	stw	r17,16(r6)
10008af4:	10c00054 	ori	r3,r2,1
10008af8:	8a000315 	stw	r8,12(r17)
10008afc:	8a000215 	stw	r8,8(r17)
10008b00:	88c00115 	stw	r3,4(r17)
10008b04:	88a3883a 	add	r17,r17,r2
10008b08:	88800015 	stw	r2,0(r17)
10008b0c:	9009883a 	mov	r4,r18
10008b10:	0011c040 	call	10011c04 <__malloc_unlock>
10008b14:	80800204 	addi	r2,r16,8
10008b18:	003f3c06 	br	1000880c <__alt_data_end+0xf800880c>
10008b1c:	30c00117 	ldw	r3,4(r6)
10008b20:	003ee706 	br	100086c0 <__alt_data_end+0xf80086c0>
10008b24:	5ac00044 	addi	r11,r11,1
10008b28:	588000cc 	andi	r2,r11,3
10008b2c:	31800204 	addi	r6,r6,8
10008b30:	103efd1e 	bne	r2,zero,10008728 <__alt_data_end+0xf8008728>
10008b34:	00002406 	br	10008bc8 <_malloc_r+0x660>
10008b38:	14000317 	ldw	r16,12(r2)
10008b3c:	143f251e 	bne	r2,r16,100087d4 <__alt_data_end+0xf80087d4>
10008b40:	21000084 	addi	r4,r4,2
10008b44:	003ebc06 	br	10008638 <__alt_data_end+0xf8008638>
10008b48:	8085883a 	add	r2,r16,r2
10008b4c:	10c00117 	ldw	r3,4(r2)
10008b50:	81000317 	ldw	r4,12(r16)
10008b54:	81400217 	ldw	r5,8(r16)
10008b58:	18c00054 	ori	r3,r3,1
10008b5c:	10c00115 	stw	r3,4(r2)
10008b60:	29000315 	stw	r4,12(r5)
10008b64:	21400215 	stw	r5,8(r4)
10008b68:	9009883a 	mov	r4,r18
10008b6c:	0011c040 	call	10011c04 <__malloc_unlock>
10008b70:	80800204 	addi	r2,r16,8
10008b74:	003f2506 	br	1000880c <__alt_data_end+0xf800880c>
10008b78:	12001704 	addi	r8,r2,92
10008b7c:	11c016c4 	addi	r7,r2,91
10008b80:	4209883a 	add	r4,r8,r8
10008b84:	003e9606 	br	100085e0 <__alt_data_end+0xf80085e0>
10008b88:	3804d1ba 	srli	r2,r7,6
10008b8c:	11400e44 	addi	r5,r2,57
10008b90:	10c00e04 	addi	r3,r2,56
10008b94:	294b883a 	add	r5,r5,r5
10008b98:	003fbc06 	br	10008a8c <__alt_data_end+0xf8008a8c>
10008b9c:	84ff5926 	beq	r16,r19,10008904 <__alt_data_end+0xf8008904>
10008ba0:	00840074 	movhi	r2,4097
10008ba4:	10928304 	addi	r2,r2,18956
10008ba8:	14000217 	ldw	r16,8(r2)
10008bac:	00bfff04 	movi	r2,-4
10008bb0:	80c00117 	ldw	r3,4(r16)
10008bb4:	1886703a 	and	r3,r3,r2
10008bb8:	003f9106 	br	10008a00 <__alt_data_end+0xf8008a00>
10008bbc:	60800217 	ldw	r2,8(r12)
10008bc0:	213fffc4 	addi	r4,r4,-1
10008bc4:	1300651e 	bne	r2,r12,10008d5c <_malloc_r+0x7f4>
10008bc8:	208000cc 	andi	r2,r4,3
10008bcc:	633ffe04 	addi	r12,r12,-8
10008bd0:	103ffa1e 	bne	r2,zero,10008bbc <__alt_data_end+0xf8008bbc>
10008bd4:	98800117 	ldw	r2,4(r19)
10008bd8:	0146303a 	nor	r3,zero,r5
10008bdc:	1884703a 	and	r2,r3,r2
10008be0:	98800115 	stw	r2,4(r19)
10008be4:	294b883a 	add	r5,r5,r5
10008be8:	117f2836 	bltu	r2,r5,1000888c <__alt_data_end+0xf800888c>
10008bec:	283f2726 	beq	r5,zero,1000888c <__alt_data_end+0xf800888c>
10008bf0:	2886703a 	and	r3,r5,r2
10008bf4:	5809883a 	mov	r4,r11
10008bf8:	183ec31e 	bne	r3,zero,10008708 <__alt_data_end+0xf8008708>
10008bfc:	294b883a 	add	r5,r5,r5
10008c00:	2886703a 	and	r3,r5,r2
10008c04:	21000104 	addi	r4,r4,4
10008c08:	183ffc26 	beq	r3,zero,10008bfc <__alt_data_end+0xf8008bfc>
10008c0c:	003ebe06 	br	10008708 <__alt_data_end+0xf8008708>
10008c10:	00c05504 	movi	r3,340
10008c14:	18801236 	bltu	r3,r2,10008c60 <_malloc_r+0x6f8>
10008c18:	8804d3fa 	srli	r2,r17,15
10008c1c:	12001e04 	addi	r8,r2,120
10008c20:	11c01dc4 	addi	r7,r2,119
10008c24:	4209883a 	add	r4,r8,r8
10008c28:	003e6d06 	br	100085e0 <__alt_data_end+0xf80085e0>
10008c2c:	00c40004 	movi	r3,4096
10008c30:	003f4606 	br	1000894c <__alt_data_end+0xf800894c>
10008c34:	00800044 	movi	r2,1
10008c38:	a0800115 	stw	r2,4(r20)
10008c3c:	003f7406 	br	10008a10 <__alt_data_end+0xf8008a10>
10008c40:	1805d0ba 	srai	r2,r3,2
10008c44:	01c00044 	movi	r7,1
10008c48:	30c00117 	ldw	r3,4(r6)
10008c4c:	388e983a 	sll	r7,r7,r2
10008c50:	2805883a 	mov	r2,r5
10008c54:	38c6b03a 	or	r3,r7,r3
10008c58:	30c00115 	stw	r3,4(r6)
10008c5c:	003f9b06 	br	10008acc <__alt_data_end+0xf8008acc>
10008c60:	00c15504 	movi	r3,1364
10008c64:	18801a36 	bltu	r3,r2,10008cd0 <_malloc_r+0x768>
10008c68:	8804d4ba 	srli	r2,r17,18
10008c6c:	12001f44 	addi	r8,r2,125
10008c70:	11c01f04 	addi	r7,r2,124
10008c74:	4209883a 	add	r4,r8,r8
10008c78:	003e5906 	br	100085e0 <__alt_data_end+0xf80085e0>
10008c7c:	ad400404 	addi	r21,r21,16
10008c80:	003f1706 	br	100088e0 <__alt_data_end+0xf80088e0>
10008c84:	00c01504 	movi	r3,84
10008c88:	18802336 	bltu	r3,r2,10008d18 <_malloc_r+0x7b0>
10008c8c:	3804d33a 	srli	r2,r7,12
10008c90:	11401bc4 	addi	r5,r2,111
10008c94:	10c01b84 	addi	r3,r2,110
10008c98:	294b883a 	add	r5,r5,r5
10008c9c:	003f7b06 	br	10008a8c <__alt_data_end+0xf8008a8c>
10008ca0:	9c000217 	ldw	r16,8(r19)
10008ca4:	00bfff04 	movi	r2,-4
10008ca8:	80c00117 	ldw	r3,4(r16)
10008cac:	1886703a 	and	r3,r3,r2
10008cb0:	003f5306 	br	10008a00 <__alt_data_end+0xf8008a00>
10008cb4:	3083ffcc 	andi	r2,r6,4095
10008cb8:	103f181e 	bne	r2,zero,1000891c <__alt_data_end+0xf800891c>
10008cbc:	99000217 	ldw	r4,8(r19)
10008cc0:	b545883a 	add	r2,r22,r21
10008cc4:	10800054 	ori	r2,r2,1
10008cc8:	20800115 	stw	r2,4(r4)
10008ccc:	003f3e06 	br	100089c8 <__alt_data_end+0xf80089c8>
10008cd0:	01003f84 	movi	r4,254
10008cd4:	02001fc4 	movi	r8,127
10008cd8:	01c01f84 	movi	r7,126
10008cdc:	003e4006 	br	100085e0 <__alt_data_end+0xf80085e0>
10008ce0:	00840074 	movhi	r2,4097
10008ce4:	10980c04 	addi	r2,r2,24624
10008ce8:	15000015 	stw	r20,0(r2)
10008cec:	003f1106 	br	10008934 <__alt_data_end+0xf8008934>
10008cf0:	00800044 	movi	r2,1
10008cf4:	002b883a 	mov	r21,zero
10008cf8:	003f1f06 	br	10008978 <__alt_data_end+0xf8008978>
10008cfc:	81400204 	addi	r5,r16,8
10008d00:	9009883a 	mov	r4,r18
10008d04:	00079700 	call	10007970 <_free_r>
10008d08:	00840074 	movhi	r2,4097
10008d0c:	109f9c04 	addi	r2,r2,32368
10008d10:	10c00017 	ldw	r3,0(r2)
10008d14:	003f2c06 	br	100089c8 <__alt_data_end+0xf80089c8>
10008d18:	00c05504 	movi	r3,340
10008d1c:	18800536 	bltu	r3,r2,10008d34 <_malloc_r+0x7cc>
10008d20:	3804d3fa 	srli	r2,r7,15
10008d24:	11401e04 	addi	r5,r2,120
10008d28:	10c01dc4 	addi	r3,r2,119
10008d2c:	294b883a 	add	r5,r5,r5
10008d30:	003f5606 	br	10008a8c <__alt_data_end+0xf8008a8c>
10008d34:	00c15504 	movi	r3,1364
10008d38:	18800536 	bltu	r3,r2,10008d50 <_malloc_r+0x7e8>
10008d3c:	3804d4ba 	srli	r2,r7,18
10008d40:	11401f44 	addi	r5,r2,125
10008d44:	10c01f04 	addi	r3,r2,124
10008d48:	294b883a 	add	r5,r5,r5
10008d4c:	003f4f06 	br	10008a8c <__alt_data_end+0xf8008a8c>
10008d50:	01403f84 	movi	r5,254
10008d54:	00c01f84 	movi	r3,126
10008d58:	003f4c06 	br	10008a8c <__alt_data_end+0xf8008a8c>
10008d5c:	98800117 	ldw	r2,4(r19)
10008d60:	003fa006 	br	10008be4 <__alt_data_end+0xf8008be4>
10008d64:	8808d0fa 	srli	r4,r17,3
10008d68:	20800044 	addi	r2,r4,1
10008d6c:	1085883a 	add	r2,r2,r2
10008d70:	003e9006 	br	100087b4 <__alt_data_end+0xf80087b4>

10008d74 <memchr>:
10008d74:	208000cc 	andi	r2,r4,3
10008d78:	280f883a 	mov	r7,r5
10008d7c:	10003426 	beq	r2,zero,10008e50 <memchr+0xdc>
10008d80:	30bfffc4 	addi	r2,r6,-1
10008d84:	30001a26 	beq	r6,zero,10008df0 <memchr+0x7c>
10008d88:	20c00003 	ldbu	r3,0(r4)
10008d8c:	29803fcc 	andi	r6,r5,255
10008d90:	30c0051e 	bne	r6,r3,10008da8 <memchr+0x34>
10008d94:	00001806 	br	10008df8 <memchr+0x84>
10008d98:	10001526 	beq	r2,zero,10008df0 <memchr+0x7c>
10008d9c:	20c00003 	ldbu	r3,0(r4)
10008da0:	10bfffc4 	addi	r2,r2,-1
10008da4:	30c01426 	beq	r6,r3,10008df8 <memchr+0x84>
10008da8:	21000044 	addi	r4,r4,1
10008dac:	20c000cc 	andi	r3,r4,3
10008db0:	183ff91e 	bne	r3,zero,10008d98 <__alt_data_end+0xf8008d98>
10008db4:	020000c4 	movi	r8,3
10008db8:	40801136 	bltu	r8,r2,10008e00 <memchr+0x8c>
10008dbc:	10000c26 	beq	r2,zero,10008df0 <memchr+0x7c>
10008dc0:	20c00003 	ldbu	r3,0(r4)
10008dc4:	29403fcc 	andi	r5,r5,255
10008dc8:	28c00b26 	beq	r5,r3,10008df8 <memchr+0x84>
10008dcc:	20c00044 	addi	r3,r4,1
10008dd0:	39803fcc 	andi	r6,r7,255
10008dd4:	2089883a 	add	r4,r4,r2
10008dd8:	00000306 	br	10008de8 <memchr+0x74>
10008ddc:	18c00044 	addi	r3,r3,1
10008de0:	197fffc3 	ldbu	r5,-1(r3)
10008de4:	31400526 	beq	r6,r5,10008dfc <memchr+0x88>
10008de8:	1805883a 	mov	r2,r3
10008dec:	20fffb1e 	bne	r4,r3,10008ddc <__alt_data_end+0xf8008ddc>
10008df0:	0005883a 	mov	r2,zero
10008df4:	f800283a 	ret
10008df8:	2005883a 	mov	r2,r4
10008dfc:	f800283a 	ret
10008e00:	28c03fcc 	andi	r3,r5,255
10008e04:	1812923a 	slli	r9,r3,8
10008e08:	02ffbff4 	movhi	r11,65279
10008e0c:	02a02074 	movhi	r10,32897
10008e10:	48d2b03a 	or	r9,r9,r3
10008e14:	4806943a 	slli	r3,r9,16
10008e18:	5affbfc4 	addi	r11,r11,-257
10008e1c:	52a02004 	addi	r10,r10,-32640
10008e20:	48d2b03a 	or	r9,r9,r3
10008e24:	20c00017 	ldw	r3,0(r4)
10008e28:	48c6f03a 	xor	r3,r9,r3
10008e2c:	1acd883a 	add	r6,r3,r11
10008e30:	00c6303a 	nor	r3,zero,r3
10008e34:	30c6703a 	and	r3,r6,r3
10008e38:	1a86703a 	and	r3,r3,r10
10008e3c:	183fe01e 	bne	r3,zero,10008dc0 <__alt_data_end+0xf8008dc0>
10008e40:	10bfff04 	addi	r2,r2,-4
10008e44:	21000104 	addi	r4,r4,4
10008e48:	40bff636 	bltu	r8,r2,10008e24 <__alt_data_end+0xf8008e24>
10008e4c:	003fdb06 	br	10008dbc <__alt_data_end+0xf8008dbc>
10008e50:	3005883a 	mov	r2,r6
10008e54:	003fd706 	br	10008db4 <__alt_data_end+0xf8008db4>

10008e58 <memcpy>:
10008e58:	defffd04 	addi	sp,sp,-12
10008e5c:	dfc00215 	stw	ra,8(sp)
10008e60:	dc400115 	stw	r17,4(sp)
10008e64:	dc000015 	stw	r16,0(sp)
10008e68:	00c003c4 	movi	r3,15
10008e6c:	2005883a 	mov	r2,r4
10008e70:	1980452e 	bgeu	r3,r6,10008f88 <memcpy+0x130>
10008e74:	2906b03a 	or	r3,r5,r4
10008e78:	18c000cc 	andi	r3,r3,3
10008e7c:	1800441e 	bne	r3,zero,10008f90 <memcpy+0x138>
10008e80:	347ffc04 	addi	r17,r6,-16
10008e84:	8822d13a 	srli	r17,r17,4
10008e88:	28c00104 	addi	r3,r5,4
10008e8c:	23400104 	addi	r13,r4,4
10008e90:	8820913a 	slli	r16,r17,4
10008e94:	2b000204 	addi	r12,r5,8
10008e98:	22c00204 	addi	r11,r4,8
10008e9c:	84000504 	addi	r16,r16,20
10008ea0:	2a800304 	addi	r10,r5,12
10008ea4:	22400304 	addi	r9,r4,12
10008ea8:	2c21883a 	add	r16,r5,r16
10008eac:	2811883a 	mov	r8,r5
10008eb0:	200f883a 	mov	r7,r4
10008eb4:	41000017 	ldw	r4,0(r8)
10008eb8:	1fc00017 	ldw	ra,0(r3)
10008ebc:	63c00017 	ldw	r15,0(r12)
10008ec0:	39000015 	stw	r4,0(r7)
10008ec4:	53800017 	ldw	r14,0(r10)
10008ec8:	6fc00015 	stw	ra,0(r13)
10008ecc:	5bc00015 	stw	r15,0(r11)
10008ed0:	4b800015 	stw	r14,0(r9)
10008ed4:	18c00404 	addi	r3,r3,16
10008ed8:	39c00404 	addi	r7,r7,16
10008edc:	42000404 	addi	r8,r8,16
10008ee0:	6b400404 	addi	r13,r13,16
10008ee4:	63000404 	addi	r12,r12,16
10008ee8:	5ac00404 	addi	r11,r11,16
10008eec:	52800404 	addi	r10,r10,16
10008ef0:	4a400404 	addi	r9,r9,16
10008ef4:	1c3fef1e 	bne	r3,r16,10008eb4 <__alt_data_end+0xf8008eb4>
10008ef8:	89c00044 	addi	r7,r17,1
10008efc:	380e913a 	slli	r7,r7,4
10008f00:	310003cc 	andi	r4,r6,15
10008f04:	02c000c4 	movi	r11,3
10008f08:	11c7883a 	add	r3,r2,r7
10008f0c:	29cb883a 	add	r5,r5,r7
10008f10:	5900212e 	bgeu	r11,r4,10008f98 <memcpy+0x140>
10008f14:	1813883a 	mov	r9,r3
10008f18:	2811883a 	mov	r8,r5
10008f1c:	200f883a 	mov	r7,r4
10008f20:	42800017 	ldw	r10,0(r8)
10008f24:	4a400104 	addi	r9,r9,4
10008f28:	39ffff04 	addi	r7,r7,-4
10008f2c:	4abfff15 	stw	r10,-4(r9)
10008f30:	42000104 	addi	r8,r8,4
10008f34:	59fffa36 	bltu	r11,r7,10008f20 <__alt_data_end+0xf8008f20>
10008f38:	213fff04 	addi	r4,r4,-4
10008f3c:	2008d0ba 	srli	r4,r4,2
10008f40:	318000cc 	andi	r6,r6,3
10008f44:	21000044 	addi	r4,r4,1
10008f48:	2109883a 	add	r4,r4,r4
10008f4c:	2109883a 	add	r4,r4,r4
10008f50:	1907883a 	add	r3,r3,r4
10008f54:	290b883a 	add	r5,r5,r4
10008f58:	30000626 	beq	r6,zero,10008f74 <memcpy+0x11c>
10008f5c:	198d883a 	add	r6,r3,r6
10008f60:	29c00003 	ldbu	r7,0(r5)
10008f64:	18c00044 	addi	r3,r3,1
10008f68:	29400044 	addi	r5,r5,1
10008f6c:	19ffffc5 	stb	r7,-1(r3)
10008f70:	19bffb1e 	bne	r3,r6,10008f60 <__alt_data_end+0xf8008f60>
10008f74:	dfc00217 	ldw	ra,8(sp)
10008f78:	dc400117 	ldw	r17,4(sp)
10008f7c:	dc000017 	ldw	r16,0(sp)
10008f80:	dec00304 	addi	sp,sp,12
10008f84:	f800283a 	ret
10008f88:	2007883a 	mov	r3,r4
10008f8c:	003ff206 	br	10008f58 <__alt_data_end+0xf8008f58>
10008f90:	2007883a 	mov	r3,r4
10008f94:	003ff106 	br	10008f5c <__alt_data_end+0xf8008f5c>
10008f98:	200d883a 	mov	r6,r4
10008f9c:	003fee06 	br	10008f58 <__alt_data_end+0xf8008f58>

10008fa0 <memmove>:
10008fa0:	2005883a 	mov	r2,r4
10008fa4:	29000b2e 	bgeu	r5,r4,10008fd4 <memmove+0x34>
10008fa8:	298f883a 	add	r7,r5,r6
10008fac:	21c0092e 	bgeu	r4,r7,10008fd4 <memmove+0x34>
10008fb0:	2187883a 	add	r3,r4,r6
10008fb4:	198bc83a 	sub	r5,r3,r6
10008fb8:	30004826 	beq	r6,zero,100090dc <memmove+0x13c>
10008fbc:	39ffffc4 	addi	r7,r7,-1
10008fc0:	39000003 	ldbu	r4,0(r7)
10008fc4:	18ffffc4 	addi	r3,r3,-1
10008fc8:	19000005 	stb	r4,0(r3)
10008fcc:	28fffb1e 	bne	r5,r3,10008fbc <__alt_data_end+0xf8008fbc>
10008fd0:	f800283a 	ret
10008fd4:	00c003c4 	movi	r3,15
10008fd8:	1980412e 	bgeu	r3,r6,100090e0 <memmove+0x140>
10008fdc:	2886b03a 	or	r3,r5,r2
10008fe0:	18c000cc 	andi	r3,r3,3
10008fe4:	1800401e 	bne	r3,zero,100090e8 <memmove+0x148>
10008fe8:	33fffc04 	addi	r15,r6,-16
10008fec:	781ed13a 	srli	r15,r15,4
10008ff0:	28c00104 	addi	r3,r5,4
10008ff4:	13400104 	addi	r13,r2,4
10008ff8:	781c913a 	slli	r14,r15,4
10008ffc:	2b000204 	addi	r12,r5,8
10009000:	12c00204 	addi	r11,r2,8
10009004:	73800504 	addi	r14,r14,20
10009008:	2a800304 	addi	r10,r5,12
1000900c:	12400304 	addi	r9,r2,12
10009010:	2b9d883a 	add	r14,r5,r14
10009014:	2811883a 	mov	r8,r5
10009018:	100f883a 	mov	r7,r2
1000901c:	41000017 	ldw	r4,0(r8)
10009020:	39c00404 	addi	r7,r7,16
10009024:	18c00404 	addi	r3,r3,16
10009028:	393ffc15 	stw	r4,-16(r7)
1000902c:	193ffc17 	ldw	r4,-16(r3)
10009030:	6b400404 	addi	r13,r13,16
10009034:	5ac00404 	addi	r11,r11,16
10009038:	693ffc15 	stw	r4,-16(r13)
1000903c:	61000017 	ldw	r4,0(r12)
10009040:	4a400404 	addi	r9,r9,16
10009044:	42000404 	addi	r8,r8,16
10009048:	593ffc15 	stw	r4,-16(r11)
1000904c:	51000017 	ldw	r4,0(r10)
10009050:	63000404 	addi	r12,r12,16
10009054:	52800404 	addi	r10,r10,16
10009058:	493ffc15 	stw	r4,-16(r9)
1000905c:	1bbfef1e 	bne	r3,r14,1000901c <__alt_data_end+0xf800901c>
10009060:	79000044 	addi	r4,r15,1
10009064:	2008913a 	slli	r4,r4,4
10009068:	328003cc 	andi	r10,r6,15
1000906c:	02c000c4 	movi	r11,3
10009070:	1107883a 	add	r3,r2,r4
10009074:	290b883a 	add	r5,r5,r4
10009078:	5a801e2e 	bgeu	r11,r10,100090f4 <memmove+0x154>
1000907c:	1813883a 	mov	r9,r3
10009080:	2811883a 	mov	r8,r5
10009084:	500f883a 	mov	r7,r10
10009088:	41000017 	ldw	r4,0(r8)
1000908c:	4a400104 	addi	r9,r9,4
10009090:	39ffff04 	addi	r7,r7,-4
10009094:	493fff15 	stw	r4,-4(r9)
10009098:	42000104 	addi	r8,r8,4
1000909c:	59fffa36 	bltu	r11,r7,10009088 <__alt_data_end+0xf8009088>
100090a0:	513fff04 	addi	r4,r10,-4
100090a4:	2008d0ba 	srli	r4,r4,2
100090a8:	318000cc 	andi	r6,r6,3
100090ac:	21000044 	addi	r4,r4,1
100090b0:	2109883a 	add	r4,r4,r4
100090b4:	2109883a 	add	r4,r4,r4
100090b8:	1907883a 	add	r3,r3,r4
100090bc:	290b883a 	add	r5,r5,r4
100090c0:	30000b26 	beq	r6,zero,100090f0 <memmove+0x150>
100090c4:	198d883a 	add	r6,r3,r6
100090c8:	29c00003 	ldbu	r7,0(r5)
100090cc:	18c00044 	addi	r3,r3,1
100090d0:	29400044 	addi	r5,r5,1
100090d4:	19ffffc5 	stb	r7,-1(r3)
100090d8:	19bffb1e 	bne	r3,r6,100090c8 <__alt_data_end+0xf80090c8>
100090dc:	f800283a 	ret
100090e0:	1007883a 	mov	r3,r2
100090e4:	003ff606 	br	100090c0 <__alt_data_end+0xf80090c0>
100090e8:	1007883a 	mov	r3,r2
100090ec:	003ff506 	br	100090c4 <__alt_data_end+0xf80090c4>
100090f0:	f800283a 	ret
100090f4:	500d883a 	mov	r6,r10
100090f8:	003ff106 	br	100090c0 <__alt_data_end+0xf80090c0>

100090fc <memset>:
100090fc:	20c000cc 	andi	r3,r4,3
10009100:	2005883a 	mov	r2,r4
10009104:	18004426 	beq	r3,zero,10009218 <memset+0x11c>
10009108:	31ffffc4 	addi	r7,r6,-1
1000910c:	30004026 	beq	r6,zero,10009210 <memset+0x114>
10009110:	2813883a 	mov	r9,r5
10009114:	200d883a 	mov	r6,r4
10009118:	2007883a 	mov	r3,r4
1000911c:	00000406 	br	10009130 <memset+0x34>
10009120:	3a3fffc4 	addi	r8,r7,-1
10009124:	31800044 	addi	r6,r6,1
10009128:	38003926 	beq	r7,zero,10009210 <memset+0x114>
1000912c:	400f883a 	mov	r7,r8
10009130:	18c00044 	addi	r3,r3,1
10009134:	32400005 	stb	r9,0(r6)
10009138:	1a0000cc 	andi	r8,r3,3
1000913c:	403ff81e 	bne	r8,zero,10009120 <__alt_data_end+0xf8009120>
10009140:	010000c4 	movi	r4,3
10009144:	21c02d2e 	bgeu	r4,r7,100091fc <memset+0x100>
10009148:	29003fcc 	andi	r4,r5,255
1000914c:	200c923a 	slli	r6,r4,8
10009150:	3108b03a 	or	r4,r6,r4
10009154:	200c943a 	slli	r6,r4,16
10009158:	218cb03a 	or	r6,r4,r6
1000915c:	010003c4 	movi	r4,15
10009160:	21c0182e 	bgeu	r4,r7,100091c4 <memset+0xc8>
10009164:	3b3ffc04 	addi	r12,r7,-16
10009168:	6018d13a 	srli	r12,r12,4
1000916c:	1a000104 	addi	r8,r3,4
10009170:	1ac00204 	addi	r11,r3,8
10009174:	6008913a 	slli	r4,r12,4
10009178:	1a800304 	addi	r10,r3,12
1000917c:	1813883a 	mov	r9,r3
10009180:	21000504 	addi	r4,r4,20
10009184:	1909883a 	add	r4,r3,r4
10009188:	49800015 	stw	r6,0(r9)
1000918c:	41800015 	stw	r6,0(r8)
10009190:	59800015 	stw	r6,0(r11)
10009194:	51800015 	stw	r6,0(r10)
10009198:	42000404 	addi	r8,r8,16
1000919c:	4a400404 	addi	r9,r9,16
100091a0:	5ac00404 	addi	r11,r11,16
100091a4:	52800404 	addi	r10,r10,16
100091a8:	413ff71e 	bne	r8,r4,10009188 <__alt_data_end+0xf8009188>
100091ac:	63000044 	addi	r12,r12,1
100091b0:	6018913a 	slli	r12,r12,4
100091b4:	39c003cc 	andi	r7,r7,15
100091b8:	010000c4 	movi	r4,3
100091bc:	1b07883a 	add	r3,r3,r12
100091c0:	21c00e2e 	bgeu	r4,r7,100091fc <memset+0x100>
100091c4:	1813883a 	mov	r9,r3
100091c8:	3811883a 	mov	r8,r7
100091cc:	010000c4 	movi	r4,3
100091d0:	49800015 	stw	r6,0(r9)
100091d4:	423fff04 	addi	r8,r8,-4
100091d8:	4a400104 	addi	r9,r9,4
100091dc:	223ffc36 	bltu	r4,r8,100091d0 <__alt_data_end+0xf80091d0>
100091e0:	393fff04 	addi	r4,r7,-4
100091e4:	2008d0ba 	srli	r4,r4,2
100091e8:	39c000cc 	andi	r7,r7,3
100091ec:	21000044 	addi	r4,r4,1
100091f0:	2109883a 	add	r4,r4,r4
100091f4:	2109883a 	add	r4,r4,r4
100091f8:	1907883a 	add	r3,r3,r4
100091fc:	38000526 	beq	r7,zero,10009214 <memset+0x118>
10009200:	19cf883a 	add	r7,r3,r7
10009204:	19400005 	stb	r5,0(r3)
10009208:	18c00044 	addi	r3,r3,1
1000920c:	38fffd1e 	bne	r7,r3,10009204 <__alt_data_end+0xf8009204>
10009210:	f800283a 	ret
10009214:	f800283a 	ret
10009218:	2007883a 	mov	r3,r4
1000921c:	300f883a 	mov	r7,r6
10009220:	003fc706 	br	10009140 <__alt_data_end+0xf8009140>

10009224 <_Balloc>:
10009224:	20801317 	ldw	r2,76(r4)
10009228:	defffc04 	addi	sp,sp,-16
1000922c:	dc400115 	stw	r17,4(sp)
10009230:	dc000015 	stw	r16,0(sp)
10009234:	dfc00315 	stw	ra,12(sp)
10009238:	dc800215 	stw	r18,8(sp)
1000923c:	2023883a 	mov	r17,r4
10009240:	2821883a 	mov	r16,r5
10009244:	10000f26 	beq	r2,zero,10009284 <_Balloc+0x60>
10009248:	8407883a 	add	r3,r16,r16
1000924c:	18c7883a 	add	r3,r3,r3
10009250:	10c7883a 	add	r3,r2,r3
10009254:	18800017 	ldw	r2,0(r3)
10009258:	10001126 	beq	r2,zero,100092a0 <_Balloc+0x7c>
1000925c:	11000017 	ldw	r4,0(r2)
10009260:	19000015 	stw	r4,0(r3)
10009264:	10000415 	stw	zero,16(r2)
10009268:	10000315 	stw	zero,12(r2)
1000926c:	dfc00317 	ldw	ra,12(sp)
10009270:	dc800217 	ldw	r18,8(sp)
10009274:	dc400117 	ldw	r17,4(sp)
10009278:	dc000017 	ldw	r16,0(sp)
1000927c:	dec00404 	addi	sp,sp,16
10009280:	f800283a 	ret
10009284:	01800844 	movi	r6,33
10009288:	01400104 	movi	r5,4
1000928c:	000d83c0 	call	1000d83c <_calloc_r>
10009290:	88801315 	stw	r2,76(r17)
10009294:	103fec1e 	bne	r2,zero,10009248 <__alt_data_end+0xf8009248>
10009298:	0005883a 	mov	r2,zero
1000929c:	003ff306 	br	1000926c <__alt_data_end+0xf800926c>
100092a0:	01400044 	movi	r5,1
100092a4:	2c24983a 	sll	r18,r5,r16
100092a8:	8809883a 	mov	r4,r17
100092ac:	91800144 	addi	r6,r18,5
100092b0:	318d883a 	add	r6,r6,r6
100092b4:	318d883a 	add	r6,r6,r6
100092b8:	000d83c0 	call	1000d83c <_calloc_r>
100092bc:	103ff626 	beq	r2,zero,10009298 <__alt_data_end+0xf8009298>
100092c0:	14000115 	stw	r16,4(r2)
100092c4:	14800215 	stw	r18,8(r2)
100092c8:	003fe606 	br	10009264 <__alt_data_end+0xf8009264>

100092cc <_Bfree>:
100092cc:	28000826 	beq	r5,zero,100092f0 <_Bfree+0x24>
100092d0:	28c00117 	ldw	r3,4(r5)
100092d4:	20801317 	ldw	r2,76(r4)
100092d8:	18c7883a 	add	r3,r3,r3
100092dc:	18c7883a 	add	r3,r3,r3
100092e0:	10c5883a 	add	r2,r2,r3
100092e4:	10c00017 	ldw	r3,0(r2)
100092e8:	28c00015 	stw	r3,0(r5)
100092ec:	11400015 	stw	r5,0(r2)
100092f0:	f800283a 	ret

100092f4 <__multadd>:
100092f4:	defff704 	addi	sp,sp,-36
100092f8:	dc800215 	stw	r18,8(sp)
100092fc:	2c800417 	ldw	r18,16(r5)
10009300:	dd800615 	stw	r22,24(sp)
10009304:	dd400515 	stw	r21,20(sp)
10009308:	dd000415 	stw	r20,16(sp)
1000930c:	dcc00315 	stw	r19,12(sp)
10009310:	dc400115 	stw	r17,4(sp)
10009314:	dc000015 	stw	r16,0(sp)
10009318:	dfc00815 	stw	ra,32(sp)
1000931c:	ddc00715 	stw	r23,28(sp)
10009320:	2827883a 	mov	r19,r5
10009324:	2029883a 	mov	r20,r4
10009328:	3023883a 	mov	r17,r6
1000932c:	3821883a 	mov	r16,r7
10009330:	2d400504 	addi	r21,r5,20
10009334:	002d883a 	mov	r22,zero
10009338:	adc00017 	ldw	r23,0(r21)
1000933c:	880b883a 	mov	r5,r17
10009340:	ad400104 	addi	r21,r21,4
10009344:	b93fffcc 	andi	r4,r23,65535
10009348:	0000e400 	call	10000e40 <__mulsi3>
1000934c:	b808d43a 	srli	r4,r23,16
10009350:	880b883a 	mov	r5,r17
10009354:	1421883a 	add	r16,r2,r16
10009358:	0000e400 	call	10000e40 <__mulsi3>
1000935c:	800ed43a 	srli	r7,r16,16
10009360:	80ffffcc 	andi	r3,r16,65535
10009364:	b5800044 	addi	r22,r22,1
10009368:	11c5883a 	add	r2,r2,r7
1000936c:	100e943a 	slli	r7,r2,16
10009370:	1020d43a 	srli	r16,r2,16
10009374:	38c7883a 	add	r3,r7,r3
10009378:	a8ffff15 	stw	r3,-4(r21)
1000937c:	b4bfee16 	blt	r22,r18,10009338 <__alt_data_end+0xf8009338>
10009380:	80000926 	beq	r16,zero,100093a8 <__multadd+0xb4>
10009384:	98800217 	ldw	r2,8(r19)
10009388:	9080130e 	bge	r18,r2,100093d8 <__multadd+0xe4>
1000938c:	90800144 	addi	r2,r18,5
10009390:	1085883a 	add	r2,r2,r2
10009394:	1085883a 	add	r2,r2,r2
10009398:	9885883a 	add	r2,r19,r2
1000939c:	14000015 	stw	r16,0(r2)
100093a0:	94800044 	addi	r18,r18,1
100093a4:	9c800415 	stw	r18,16(r19)
100093a8:	9805883a 	mov	r2,r19
100093ac:	dfc00817 	ldw	ra,32(sp)
100093b0:	ddc00717 	ldw	r23,28(sp)
100093b4:	dd800617 	ldw	r22,24(sp)
100093b8:	dd400517 	ldw	r21,20(sp)
100093bc:	dd000417 	ldw	r20,16(sp)
100093c0:	dcc00317 	ldw	r19,12(sp)
100093c4:	dc800217 	ldw	r18,8(sp)
100093c8:	dc400117 	ldw	r17,4(sp)
100093cc:	dc000017 	ldw	r16,0(sp)
100093d0:	dec00904 	addi	sp,sp,36
100093d4:	f800283a 	ret
100093d8:	99400117 	ldw	r5,4(r19)
100093dc:	a009883a 	mov	r4,r20
100093e0:	29400044 	addi	r5,r5,1
100093e4:	00092240 	call	10009224 <_Balloc>
100093e8:	99800417 	ldw	r6,16(r19)
100093ec:	99400304 	addi	r5,r19,12
100093f0:	11000304 	addi	r4,r2,12
100093f4:	31800084 	addi	r6,r6,2
100093f8:	318d883a 	add	r6,r6,r6
100093fc:	318d883a 	add	r6,r6,r6
10009400:	1023883a 	mov	r17,r2
10009404:	0008e580 	call	10008e58 <memcpy>
10009408:	98000a26 	beq	r19,zero,10009434 <__multadd+0x140>
1000940c:	98c00117 	ldw	r3,4(r19)
10009410:	a0801317 	ldw	r2,76(r20)
10009414:	18c7883a 	add	r3,r3,r3
10009418:	18c7883a 	add	r3,r3,r3
1000941c:	10c5883a 	add	r2,r2,r3
10009420:	10c00017 	ldw	r3,0(r2)
10009424:	98c00015 	stw	r3,0(r19)
10009428:	14c00015 	stw	r19,0(r2)
1000942c:	8827883a 	mov	r19,r17
10009430:	003fd606 	br	1000938c <__alt_data_end+0xf800938c>
10009434:	8827883a 	mov	r19,r17
10009438:	003fd406 	br	1000938c <__alt_data_end+0xf800938c>

1000943c <__s2b>:
1000943c:	defff904 	addi	sp,sp,-28
10009440:	dc400115 	stw	r17,4(sp)
10009444:	dc000015 	stw	r16,0(sp)
10009448:	2023883a 	mov	r17,r4
1000944c:	2821883a 	mov	r16,r5
10009450:	39000204 	addi	r4,r7,8
10009454:	01400244 	movi	r5,9
10009458:	dcc00315 	stw	r19,12(sp)
1000945c:	dc800215 	stw	r18,8(sp)
10009460:	dfc00615 	stw	ra,24(sp)
10009464:	dd400515 	stw	r21,20(sp)
10009468:	dd000415 	stw	r20,16(sp)
1000946c:	3825883a 	mov	r18,r7
10009470:	3027883a 	mov	r19,r6
10009474:	0000c8c0 	call	10000c8c <__divsi3>
10009478:	00c00044 	movi	r3,1
1000947c:	000b883a 	mov	r5,zero
10009480:	1880030e 	bge	r3,r2,10009490 <__s2b+0x54>
10009484:	18c7883a 	add	r3,r3,r3
10009488:	29400044 	addi	r5,r5,1
1000948c:	18bffd16 	blt	r3,r2,10009484 <__alt_data_end+0xf8009484>
10009490:	8809883a 	mov	r4,r17
10009494:	00092240 	call	10009224 <_Balloc>
10009498:	d8c00717 	ldw	r3,28(sp)
1000949c:	10c00515 	stw	r3,20(r2)
100094a0:	00c00044 	movi	r3,1
100094a4:	10c00415 	stw	r3,16(r2)
100094a8:	00c00244 	movi	r3,9
100094ac:	1cc0210e 	bge	r3,r19,10009534 <__s2b+0xf8>
100094b0:	80eb883a 	add	r21,r16,r3
100094b4:	a829883a 	mov	r20,r21
100094b8:	84e1883a 	add	r16,r16,r19
100094bc:	a1c00007 	ldb	r7,0(r20)
100094c0:	01800284 	movi	r6,10
100094c4:	a5000044 	addi	r20,r20,1
100094c8:	100b883a 	mov	r5,r2
100094cc:	39fff404 	addi	r7,r7,-48
100094d0:	8809883a 	mov	r4,r17
100094d4:	00092f40 	call	100092f4 <__multadd>
100094d8:	a43ff81e 	bne	r20,r16,100094bc <__alt_data_end+0xf80094bc>
100094dc:	ace1883a 	add	r16,r21,r19
100094e0:	843ffe04 	addi	r16,r16,-8
100094e4:	9c800a0e 	bge	r19,r18,10009510 <__s2b+0xd4>
100094e8:	94e5c83a 	sub	r18,r18,r19
100094ec:	84a5883a 	add	r18,r16,r18
100094f0:	81c00007 	ldb	r7,0(r16)
100094f4:	01800284 	movi	r6,10
100094f8:	84000044 	addi	r16,r16,1
100094fc:	100b883a 	mov	r5,r2
10009500:	39fff404 	addi	r7,r7,-48
10009504:	8809883a 	mov	r4,r17
10009508:	00092f40 	call	100092f4 <__multadd>
1000950c:	84bff81e 	bne	r16,r18,100094f0 <__alt_data_end+0xf80094f0>
10009510:	dfc00617 	ldw	ra,24(sp)
10009514:	dd400517 	ldw	r21,20(sp)
10009518:	dd000417 	ldw	r20,16(sp)
1000951c:	dcc00317 	ldw	r19,12(sp)
10009520:	dc800217 	ldw	r18,8(sp)
10009524:	dc400117 	ldw	r17,4(sp)
10009528:	dc000017 	ldw	r16,0(sp)
1000952c:	dec00704 	addi	sp,sp,28
10009530:	f800283a 	ret
10009534:	84000284 	addi	r16,r16,10
10009538:	1827883a 	mov	r19,r3
1000953c:	003fe906 	br	100094e4 <__alt_data_end+0xf80094e4>

10009540 <__hi0bits>:
10009540:	20bfffec 	andhi	r2,r4,65535
10009544:	1000141e 	bne	r2,zero,10009598 <__hi0bits+0x58>
10009548:	2008943a 	slli	r4,r4,16
1000954c:	00800404 	movi	r2,16
10009550:	20ffc02c 	andhi	r3,r4,65280
10009554:	1800021e 	bne	r3,zero,10009560 <__hi0bits+0x20>
10009558:	2008923a 	slli	r4,r4,8
1000955c:	10800204 	addi	r2,r2,8
10009560:	20fc002c 	andhi	r3,r4,61440
10009564:	1800021e 	bne	r3,zero,10009570 <__hi0bits+0x30>
10009568:	2008913a 	slli	r4,r4,4
1000956c:	10800104 	addi	r2,r2,4
10009570:	20f0002c 	andhi	r3,r4,49152
10009574:	1800031e 	bne	r3,zero,10009584 <__hi0bits+0x44>
10009578:	2109883a 	add	r4,r4,r4
1000957c:	10800084 	addi	r2,r2,2
10009580:	2109883a 	add	r4,r4,r4
10009584:	20000316 	blt	r4,zero,10009594 <__hi0bits+0x54>
10009588:	2110002c 	andhi	r4,r4,16384
1000958c:	2000041e 	bne	r4,zero,100095a0 <__hi0bits+0x60>
10009590:	00800804 	movi	r2,32
10009594:	f800283a 	ret
10009598:	0005883a 	mov	r2,zero
1000959c:	003fec06 	br	10009550 <__alt_data_end+0xf8009550>
100095a0:	10800044 	addi	r2,r2,1
100095a4:	f800283a 	ret

100095a8 <__lo0bits>:
100095a8:	20c00017 	ldw	r3,0(r4)
100095ac:	188001cc 	andi	r2,r3,7
100095b0:	10000826 	beq	r2,zero,100095d4 <__lo0bits+0x2c>
100095b4:	1880004c 	andi	r2,r3,1
100095b8:	1000211e 	bne	r2,zero,10009640 <__lo0bits+0x98>
100095bc:	1880008c 	andi	r2,r3,2
100095c0:	1000211e 	bne	r2,zero,10009648 <__lo0bits+0xa0>
100095c4:	1806d0ba 	srli	r3,r3,2
100095c8:	00800084 	movi	r2,2
100095cc:	20c00015 	stw	r3,0(r4)
100095d0:	f800283a 	ret
100095d4:	18bfffcc 	andi	r2,r3,65535
100095d8:	10001326 	beq	r2,zero,10009628 <__lo0bits+0x80>
100095dc:	0005883a 	mov	r2,zero
100095e0:	19403fcc 	andi	r5,r3,255
100095e4:	2800021e 	bne	r5,zero,100095f0 <__lo0bits+0x48>
100095e8:	1806d23a 	srli	r3,r3,8
100095ec:	10800204 	addi	r2,r2,8
100095f0:	194003cc 	andi	r5,r3,15
100095f4:	2800021e 	bne	r5,zero,10009600 <__lo0bits+0x58>
100095f8:	1806d13a 	srli	r3,r3,4
100095fc:	10800104 	addi	r2,r2,4
10009600:	194000cc 	andi	r5,r3,3
10009604:	2800021e 	bne	r5,zero,10009610 <__lo0bits+0x68>
10009608:	1806d0ba 	srli	r3,r3,2
1000960c:	10800084 	addi	r2,r2,2
10009610:	1940004c 	andi	r5,r3,1
10009614:	2800081e 	bne	r5,zero,10009638 <__lo0bits+0x90>
10009618:	1806d07a 	srli	r3,r3,1
1000961c:	1800051e 	bne	r3,zero,10009634 <__lo0bits+0x8c>
10009620:	00800804 	movi	r2,32
10009624:	f800283a 	ret
10009628:	1806d43a 	srli	r3,r3,16
1000962c:	00800404 	movi	r2,16
10009630:	003feb06 	br	100095e0 <__alt_data_end+0xf80095e0>
10009634:	10800044 	addi	r2,r2,1
10009638:	20c00015 	stw	r3,0(r4)
1000963c:	f800283a 	ret
10009640:	0005883a 	mov	r2,zero
10009644:	f800283a 	ret
10009648:	1806d07a 	srli	r3,r3,1
1000964c:	00800044 	movi	r2,1
10009650:	20c00015 	stw	r3,0(r4)
10009654:	f800283a 	ret

10009658 <__i2b>:
10009658:	defffd04 	addi	sp,sp,-12
1000965c:	dc000015 	stw	r16,0(sp)
10009660:	04000044 	movi	r16,1
10009664:	dc400115 	stw	r17,4(sp)
10009668:	2823883a 	mov	r17,r5
1000966c:	800b883a 	mov	r5,r16
10009670:	dfc00215 	stw	ra,8(sp)
10009674:	00092240 	call	10009224 <_Balloc>
10009678:	14400515 	stw	r17,20(r2)
1000967c:	14000415 	stw	r16,16(r2)
10009680:	dfc00217 	ldw	ra,8(sp)
10009684:	dc400117 	ldw	r17,4(sp)
10009688:	dc000017 	ldw	r16,0(sp)
1000968c:	dec00304 	addi	sp,sp,12
10009690:	f800283a 	ret

10009694 <__multiply>:
10009694:	deffef04 	addi	sp,sp,-68
10009698:	dc400815 	stw	r17,32(sp)
1000969c:	dc000715 	stw	r16,28(sp)
100096a0:	34400417 	ldw	r17,16(r6)
100096a4:	2c000417 	ldw	r16,16(r5)
100096a8:	dd800d15 	stw	r22,52(sp)
100096ac:	dc800915 	stw	r18,36(sp)
100096b0:	dfc01015 	stw	ra,64(sp)
100096b4:	df000f15 	stw	fp,60(sp)
100096b8:	ddc00e15 	stw	r23,56(sp)
100096bc:	dd400c15 	stw	r21,48(sp)
100096c0:	dd000b15 	stw	r20,44(sp)
100096c4:	dcc00a15 	stw	r19,40(sp)
100096c8:	2825883a 	mov	r18,r5
100096cc:	302d883a 	mov	r22,r6
100096d0:	8440050e 	bge	r16,r17,100096e8 <__multiply+0x54>
100096d4:	8007883a 	mov	r3,r16
100096d8:	3025883a 	mov	r18,r6
100096dc:	8821883a 	mov	r16,r17
100096e0:	282d883a 	mov	r22,r5
100096e4:	1823883a 	mov	r17,r3
100096e8:	90800217 	ldw	r2,8(r18)
100096ec:	8447883a 	add	r3,r16,r17
100096f0:	d8c00215 	stw	r3,8(sp)
100096f4:	91400117 	ldw	r5,4(r18)
100096f8:	10c0010e 	bge	r2,r3,10009700 <__multiply+0x6c>
100096fc:	29400044 	addi	r5,r5,1
10009700:	00092240 	call	10009224 <_Balloc>
10009704:	d8c00217 	ldw	r3,8(sp)
10009708:	d8800615 	stw	r2,24(sp)
1000970c:	18eb883a 	add	r21,r3,r3
10009710:	ad6b883a 	add	r21,r21,r21
10009714:	10c00504 	addi	r3,r2,20
10009718:	1d6b883a 	add	r21,r3,r21
1000971c:	d8c00115 	stw	r3,4(sp)
10009720:	dd400315 	stw	r21,12(sp)
10009724:	1805883a 	mov	r2,r3
10009728:	1d40042e 	bgeu	r3,r21,1000973c <__multiply+0xa8>
1000972c:	d8c00317 	ldw	r3,12(sp)
10009730:	10000015 	stw	zero,0(r2)
10009734:	10800104 	addi	r2,r2,4
10009738:	10fffc36 	bltu	r2,r3,1000972c <__alt_data_end+0xf800972c>
1000973c:	8c63883a 	add	r17,r17,r17
10009740:	b5800504 	addi	r22,r22,20
10009744:	8c63883a 	add	r17,r17,r17
10009748:	94800504 	addi	r18,r18,20
1000974c:	8421883a 	add	r16,r16,r16
10009750:	b463883a 	add	r17,r22,r17
10009754:	8421883a 	add	r16,r16,r16
10009758:	dd800015 	stw	r22,0(sp)
1000975c:	dc800415 	stw	r18,16(sp)
10009760:	dc400515 	stw	r17,20(sp)
10009764:	9429883a 	add	r20,r18,r16
10009768:	b4404f2e 	bgeu	r22,r17,100098a8 <__multiply+0x214>
1000976c:	d8c00017 	ldw	r3,0(sp)
10009770:	1c800017 	ldw	r18,0(r3)
10009774:	947fffcc 	andi	r17,r18,65535
10009778:	88001e26 	beq	r17,zero,100097f4 <__multiply+0x160>
1000977c:	dd800117 	ldw	r22,4(sp)
10009780:	dd400417 	ldw	r21,16(sp)
10009784:	0027883a 	mov	r19,zero
10009788:	ac800017 	ldw	r18,0(r21)
1000978c:	b4000017 	ldw	r16,0(r22)
10009790:	880b883a 	mov	r5,r17
10009794:	913fffcc 	andi	r4,r18,65535
10009798:	0000e400 	call	10000e40 <__mulsi3>
1000979c:	9008d43a 	srli	r4,r18,16
100097a0:	84bfffcc 	andi	r18,r16,65535
100097a4:	1485883a 	add	r2,r2,r18
100097a8:	14e5883a 	add	r18,r2,r19
100097ac:	8020d43a 	srli	r16,r16,16
100097b0:	9026d43a 	srli	r19,r18,16
100097b4:	880b883a 	mov	r5,r17
100097b8:	0000e400 	call	10000e40 <__mulsi3>
100097bc:	1405883a 	add	r2,r2,r16
100097c0:	14e1883a 	add	r16,r2,r19
100097c4:	90ffffcc 	andi	r3,r18,65535
100097c8:	8024943a 	slli	r18,r16,16
100097cc:	ad400104 	addi	r21,r21,4
100097d0:	b005883a 	mov	r2,r22
100097d4:	90c6b03a 	or	r3,r18,r3
100097d8:	b0c00015 	stw	r3,0(r22)
100097dc:	8026d43a 	srli	r19,r16,16
100097e0:	b5800104 	addi	r22,r22,4
100097e4:	ad3fe836 	bltu	r21,r20,10009788 <__alt_data_end+0xf8009788>
100097e8:	d8c00017 	ldw	r3,0(sp)
100097ec:	14c00115 	stw	r19,4(r2)
100097f0:	1c800017 	ldw	r18,0(r3)
100097f4:	9024d43a 	srli	r18,r18,16
100097f8:	90002226 	beq	r18,zero,10009884 <__multiply+0x1f0>
100097fc:	d8c00117 	ldw	r3,4(sp)
10009800:	dd800417 	ldw	r22,16(sp)
10009804:	002f883a 	mov	r23,zero
10009808:	1f000017 	ldw	fp,0(r3)
1000980c:	1823883a 	mov	r17,r3
10009810:	182b883a 	mov	r21,r3
10009814:	e021883a 	mov	r16,fp
10009818:	00000106 	br	10009820 <__multiply+0x18c>
1000981c:	982b883a 	mov	r21,r19
10009820:	b100000b 	ldhu	r4,0(r22)
10009824:	8020d43a 	srli	r16,r16,16
10009828:	900b883a 	mov	r5,r18
1000982c:	0000e400 	call	10000e40 <__mulsi3>
10009830:	1405883a 	add	r2,r2,r16
10009834:	15ef883a 	add	r23,r2,r23
10009838:	b804943a 	slli	r2,r23,16
1000983c:	e0ffffcc 	andi	r3,fp,65535
10009840:	8c400104 	addi	r17,r17,4
10009844:	10c6b03a 	or	r3,r2,r3
10009848:	88ffff15 	stw	r3,-4(r17)
1000984c:	b5800104 	addi	r22,r22,4
10009850:	b13fff17 	ldw	r4,-4(r22)
10009854:	acc00104 	addi	r19,r21,4
10009858:	900b883a 	mov	r5,r18
1000985c:	2008d43a 	srli	r4,r4,16
10009860:	9c000017 	ldw	r16,0(r19)
10009864:	0000e400 	call	10000e40 <__mulsi3>
10009868:	b806d43a 	srli	r3,r23,16
1000986c:	813fffcc 	andi	r4,r16,65535
10009870:	1105883a 	add	r2,r2,r4
10009874:	10f9883a 	add	fp,r2,r3
10009878:	e02ed43a 	srli	r23,fp,16
1000987c:	b53fe736 	bltu	r22,r20,1000981c <__alt_data_end+0xf800981c>
10009880:	af000115 	stw	fp,4(r21)
10009884:	d8c00017 	ldw	r3,0(sp)
10009888:	d9000517 	ldw	r4,20(sp)
1000988c:	18c00104 	addi	r3,r3,4
10009890:	d8c00015 	stw	r3,0(sp)
10009894:	d8c00117 	ldw	r3,4(sp)
10009898:	18c00104 	addi	r3,r3,4
1000989c:	d8c00115 	stw	r3,4(sp)
100098a0:	d8c00017 	ldw	r3,0(sp)
100098a4:	193fb136 	bltu	r3,r4,1000976c <__alt_data_end+0xf800976c>
100098a8:	d8c00217 	ldw	r3,8(sp)
100098ac:	00c00c0e 	bge	zero,r3,100098e0 <__multiply+0x24c>
100098b0:	d8c00317 	ldw	r3,12(sp)
100098b4:	18bfff17 	ldw	r2,-4(r3)
100098b8:	1d7fff04 	addi	r21,r3,-4
100098bc:	10000326 	beq	r2,zero,100098cc <__multiply+0x238>
100098c0:	00000706 	br	100098e0 <__multiply+0x24c>
100098c4:	a8800017 	ldw	r2,0(r21)
100098c8:	1000051e 	bne	r2,zero,100098e0 <__multiply+0x24c>
100098cc:	d8c00217 	ldw	r3,8(sp)
100098d0:	ad7fff04 	addi	r21,r21,-4
100098d4:	18ffffc4 	addi	r3,r3,-1
100098d8:	d8c00215 	stw	r3,8(sp)
100098dc:	183ff91e 	bne	r3,zero,100098c4 <__alt_data_end+0xf80098c4>
100098e0:	d8c00617 	ldw	r3,24(sp)
100098e4:	d9000217 	ldw	r4,8(sp)
100098e8:	1805883a 	mov	r2,r3
100098ec:	19000415 	stw	r4,16(r3)
100098f0:	dfc01017 	ldw	ra,64(sp)
100098f4:	df000f17 	ldw	fp,60(sp)
100098f8:	ddc00e17 	ldw	r23,56(sp)
100098fc:	dd800d17 	ldw	r22,52(sp)
10009900:	dd400c17 	ldw	r21,48(sp)
10009904:	dd000b17 	ldw	r20,44(sp)
10009908:	dcc00a17 	ldw	r19,40(sp)
1000990c:	dc800917 	ldw	r18,36(sp)
10009910:	dc400817 	ldw	r17,32(sp)
10009914:	dc000717 	ldw	r16,28(sp)
10009918:	dec01104 	addi	sp,sp,68
1000991c:	f800283a 	ret

10009920 <__pow5mult>:
10009920:	defffa04 	addi	sp,sp,-24
10009924:	dcc00315 	stw	r19,12(sp)
10009928:	dc000015 	stw	r16,0(sp)
1000992c:	dfc00515 	stw	ra,20(sp)
10009930:	dd000415 	stw	r20,16(sp)
10009934:	dc800215 	stw	r18,8(sp)
10009938:	dc400115 	stw	r17,4(sp)
1000993c:	308000cc 	andi	r2,r6,3
10009940:	3021883a 	mov	r16,r6
10009944:	2027883a 	mov	r19,r4
10009948:	10002f1e 	bne	r2,zero,10009a08 <__pow5mult+0xe8>
1000994c:	2825883a 	mov	r18,r5
10009950:	8021d0ba 	srai	r16,r16,2
10009954:	80001a26 	beq	r16,zero,100099c0 <__pow5mult+0xa0>
10009958:	9c401217 	ldw	r17,72(r19)
1000995c:	8800061e 	bne	r17,zero,10009978 <__pow5mult+0x58>
10009960:	00003406 	br	10009a34 <__pow5mult+0x114>
10009964:	8021d07a 	srai	r16,r16,1
10009968:	80001526 	beq	r16,zero,100099c0 <__pow5mult+0xa0>
1000996c:	88800017 	ldw	r2,0(r17)
10009970:	10001c26 	beq	r2,zero,100099e4 <__pow5mult+0xc4>
10009974:	1023883a 	mov	r17,r2
10009978:	8080004c 	andi	r2,r16,1
1000997c:	103ff926 	beq	r2,zero,10009964 <__alt_data_end+0xf8009964>
10009980:	880d883a 	mov	r6,r17
10009984:	900b883a 	mov	r5,r18
10009988:	9809883a 	mov	r4,r19
1000998c:	00096940 	call	10009694 <__multiply>
10009990:	90001b26 	beq	r18,zero,10009a00 <__pow5mult+0xe0>
10009994:	91000117 	ldw	r4,4(r18)
10009998:	98c01317 	ldw	r3,76(r19)
1000999c:	8021d07a 	srai	r16,r16,1
100099a0:	2109883a 	add	r4,r4,r4
100099a4:	2109883a 	add	r4,r4,r4
100099a8:	1907883a 	add	r3,r3,r4
100099ac:	19000017 	ldw	r4,0(r3)
100099b0:	91000015 	stw	r4,0(r18)
100099b4:	1c800015 	stw	r18,0(r3)
100099b8:	1025883a 	mov	r18,r2
100099bc:	803feb1e 	bne	r16,zero,1000996c <__alt_data_end+0xf800996c>
100099c0:	9005883a 	mov	r2,r18
100099c4:	dfc00517 	ldw	ra,20(sp)
100099c8:	dd000417 	ldw	r20,16(sp)
100099cc:	dcc00317 	ldw	r19,12(sp)
100099d0:	dc800217 	ldw	r18,8(sp)
100099d4:	dc400117 	ldw	r17,4(sp)
100099d8:	dc000017 	ldw	r16,0(sp)
100099dc:	dec00604 	addi	sp,sp,24
100099e0:	f800283a 	ret
100099e4:	880d883a 	mov	r6,r17
100099e8:	880b883a 	mov	r5,r17
100099ec:	9809883a 	mov	r4,r19
100099f0:	00096940 	call	10009694 <__multiply>
100099f4:	88800015 	stw	r2,0(r17)
100099f8:	10000015 	stw	zero,0(r2)
100099fc:	003fdd06 	br	10009974 <__alt_data_end+0xf8009974>
10009a00:	1025883a 	mov	r18,r2
10009a04:	003fd706 	br	10009964 <__alt_data_end+0xf8009964>
10009a08:	10bfffc4 	addi	r2,r2,-1
10009a0c:	1085883a 	add	r2,r2,r2
10009a10:	00c40074 	movhi	r3,4097
10009a14:	18cffe04 	addi	r3,r3,16376
10009a18:	1085883a 	add	r2,r2,r2
10009a1c:	1885883a 	add	r2,r3,r2
10009a20:	11800017 	ldw	r6,0(r2)
10009a24:	000f883a 	mov	r7,zero
10009a28:	00092f40 	call	100092f4 <__multadd>
10009a2c:	1025883a 	mov	r18,r2
10009a30:	003fc706 	br	10009950 <__alt_data_end+0xf8009950>
10009a34:	05000044 	movi	r20,1
10009a38:	a00b883a 	mov	r5,r20
10009a3c:	9809883a 	mov	r4,r19
10009a40:	00092240 	call	10009224 <_Balloc>
10009a44:	1023883a 	mov	r17,r2
10009a48:	00809c44 	movi	r2,625
10009a4c:	88800515 	stw	r2,20(r17)
10009a50:	8d000415 	stw	r20,16(r17)
10009a54:	9c401215 	stw	r17,72(r19)
10009a58:	88000015 	stw	zero,0(r17)
10009a5c:	003fc606 	br	10009978 <__alt_data_end+0xf8009978>

10009a60 <__lshift>:
10009a60:	defff904 	addi	sp,sp,-28
10009a64:	dd400515 	stw	r21,20(sp)
10009a68:	dcc00315 	stw	r19,12(sp)
10009a6c:	302bd17a 	srai	r21,r6,5
10009a70:	2cc00417 	ldw	r19,16(r5)
10009a74:	28800217 	ldw	r2,8(r5)
10009a78:	dd000415 	stw	r20,16(sp)
10009a7c:	ace7883a 	add	r19,r21,r19
10009a80:	dc800215 	stw	r18,8(sp)
10009a84:	dc400115 	stw	r17,4(sp)
10009a88:	dc000015 	stw	r16,0(sp)
10009a8c:	dfc00615 	stw	ra,24(sp)
10009a90:	9c000044 	addi	r16,r19,1
10009a94:	2823883a 	mov	r17,r5
10009a98:	3029883a 	mov	r20,r6
10009a9c:	2025883a 	mov	r18,r4
10009aa0:	29400117 	ldw	r5,4(r5)
10009aa4:	1400030e 	bge	r2,r16,10009ab4 <__lshift+0x54>
10009aa8:	1085883a 	add	r2,r2,r2
10009aac:	29400044 	addi	r5,r5,1
10009ab0:	143ffd16 	blt	r2,r16,10009aa8 <__alt_data_end+0xf8009aa8>
10009ab4:	9009883a 	mov	r4,r18
10009ab8:	00092240 	call	10009224 <_Balloc>
10009abc:	10c00504 	addi	r3,r2,20
10009ac0:	0540070e 	bge	zero,r21,10009ae0 <__lshift+0x80>
10009ac4:	ad6b883a 	add	r21,r21,r21
10009ac8:	ad6b883a 	add	r21,r21,r21
10009acc:	1809883a 	mov	r4,r3
10009ad0:	1d47883a 	add	r3,r3,r21
10009ad4:	20000015 	stw	zero,0(r4)
10009ad8:	21000104 	addi	r4,r4,4
10009adc:	193ffd1e 	bne	r3,r4,10009ad4 <__alt_data_end+0xf8009ad4>
10009ae0:	8a000417 	ldw	r8,16(r17)
10009ae4:	89000504 	addi	r4,r17,20
10009ae8:	a18007cc 	andi	r6,r20,31
10009aec:	4211883a 	add	r8,r8,r8
10009af0:	4211883a 	add	r8,r8,r8
10009af4:	2211883a 	add	r8,r4,r8
10009af8:	30002326 	beq	r6,zero,10009b88 <__lshift+0x128>
10009afc:	02400804 	movi	r9,32
10009b00:	4993c83a 	sub	r9,r9,r6
10009b04:	000b883a 	mov	r5,zero
10009b08:	21c00017 	ldw	r7,0(r4)
10009b0c:	1815883a 	mov	r10,r3
10009b10:	18c00104 	addi	r3,r3,4
10009b14:	398e983a 	sll	r7,r7,r6
10009b18:	21000104 	addi	r4,r4,4
10009b1c:	394ab03a 	or	r5,r7,r5
10009b20:	197fff15 	stw	r5,-4(r3)
10009b24:	217fff17 	ldw	r5,-4(r4)
10009b28:	2a4ad83a 	srl	r5,r5,r9
10009b2c:	223ff636 	bltu	r4,r8,10009b08 <__alt_data_end+0xf8009b08>
10009b30:	51400115 	stw	r5,4(r10)
10009b34:	28001a1e 	bne	r5,zero,10009ba0 <__lshift+0x140>
10009b38:	843fffc4 	addi	r16,r16,-1
10009b3c:	14000415 	stw	r16,16(r2)
10009b40:	88000826 	beq	r17,zero,10009b64 <__lshift+0x104>
10009b44:	89000117 	ldw	r4,4(r17)
10009b48:	90c01317 	ldw	r3,76(r18)
10009b4c:	2109883a 	add	r4,r4,r4
10009b50:	2109883a 	add	r4,r4,r4
10009b54:	1907883a 	add	r3,r3,r4
10009b58:	19000017 	ldw	r4,0(r3)
10009b5c:	89000015 	stw	r4,0(r17)
10009b60:	1c400015 	stw	r17,0(r3)
10009b64:	dfc00617 	ldw	ra,24(sp)
10009b68:	dd400517 	ldw	r21,20(sp)
10009b6c:	dd000417 	ldw	r20,16(sp)
10009b70:	dcc00317 	ldw	r19,12(sp)
10009b74:	dc800217 	ldw	r18,8(sp)
10009b78:	dc400117 	ldw	r17,4(sp)
10009b7c:	dc000017 	ldw	r16,0(sp)
10009b80:	dec00704 	addi	sp,sp,28
10009b84:	f800283a 	ret
10009b88:	21400017 	ldw	r5,0(r4)
10009b8c:	18c00104 	addi	r3,r3,4
10009b90:	21000104 	addi	r4,r4,4
10009b94:	197fff15 	stw	r5,-4(r3)
10009b98:	223ffb36 	bltu	r4,r8,10009b88 <__alt_data_end+0xf8009b88>
10009b9c:	003fe606 	br	10009b38 <__alt_data_end+0xf8009b38>
10009ba0:	9c000084 	addi	r16,r19,2
10009ba4:	003fe406 	br	10009b38 <__alt_data_end+0xf8009b38>

10009ba8 <__mcmp>:
10009ba8:	20800417 	ldw	r2,16(r4)
10009bac:	28c00417 	ldw	r3,16(r5)
10009bb0:	10c5c83a 	sub	r2,r2,r3
10009bb4:	1000111e 	bne	r2,zero,10009bfc <__mcmp+0x54>
10009bb8:	18c7883a 	add	r3,r3,r3
10009bbc:	18c7883a 	add	r3,r3,r3
10009bc0:	21000504 	addi	r4,r4,20
10009bc4:	29400504 	addi	r5,r5,20
10009bc8:	20c5883a 	add	r2,r4,r3
10009bcc:	28cb883a 	add	r5,r5,r3
10009bd0:	00000106 	br	10009bd8 <__mcmp+0x30>
10009bd4:	20800a2e 	bgeu	r4,r2,10009c00 <__mcmp+0x58>
10009bd8:	10bfff04 	addi	r2,r2,-4
10009bdc:	297fff04 	addi	r5,r5,-4
10009be0:	11800017 	ldw	r6,0(r2)
10009be4:	28c00017 	ldw	r3,0(r5)
10009be8:	30fffa26 	beq	r6,r3,10009bd4 <__alt_data_end+0xf8009bd4>
10009bec:	30c00236 	bltu	r6,r3,10009bf8 <__mcmp+0x50>
10009bf0:	00800044 	movi	r2,1
10009bf4:	f800283a 	ret
10009bf8:	00bfffc4 	movi	r2,-1
10009bfc:	f800283a 	ret
10009c00:	0005883a 	mov	r2,zero
10009c04:	f800283a 	ret

10009c08 <__mdiff>:
10009c08:	28c00417 	ldw	r3,16(r5)
10009c0c:	30800417 	ldw	r2,16(r6)
10009c10:	defffa04 	addi	sp,sp,-24
10009c14:	dcc00315 	stw	r19,12(sp)
10009c18:	dc800215 	stw	r18,8(sp)
10009c1c:	dfc00515 	stw	ra,20(sp)
10009c20:	dd000415 	stw	r20,16(sp)
10009c24:	dc400115 	stw	r17,4(sp)
10009c28:	dc000015 	stw	r16,0(sp)
10009c2c:	1887c83a 	sub	r3,r3,r2
10009c30:	2825883a 	mov	r18,r5
10009c34:	3027883a 	mov	r19,r6
10009c38:	1800141e 	bne	r3,zero,10009c8c <__mdiff+0x84>
10009c3c:	1085883a 	add	r2,r2,r2
10009c40:	1085883a 	add	r2,r2,r2
10009c44:	2a000504 	addi	r8,r5,20
10009c48:	34000504 	addi	r16,r6,20
10009c4c:	4087883a 	add	r3,r8,r2
10009c50:	8085883a 	add	r2,r16,r2
10009c54:	00000106 	br	10009c5c <__mdiff+0x54>
10009c58:	40c0592e 	bgeu	r8,r3,10009dc0 <__mdiff+0x1b8>
10009c5c:	18ffff04 	addi	r3,r3,-4
10009c60:	10bfff04 	addi	r2,r2,-4
10009c64:	19c00017 	ldw	r7,0(r3)
10009c68:	11400017 	ldw	r5,0(r2)
10009c6c:	397ffa26 	beq	r7,r5,10009c58 <__alt_data_end+0xf8009c58>
10009c70:	3940592e 	bgeu	r7,r5,10009dd8 <__mdiff+0x1d0>
10009c74:	9005883a 	mov	r2,r18
10009c78:	4023883a 	mov	r17,r8
10009c7c:	9825883a 	mov	r18,r19
10009c80:	05000044 	movi	r20,1
10009c84:	1027883a 	mov	r19,r2
10009c88:	00000406 	br	10009c9c <__mdiff+0x94>
10009c8c:	18005616 	blt	r3,zero,10009de8 <__mdiff+0x1e0>
10009c90:	34400504 	addi	r17,r6,20
10009c94:	2c000504 	addi	r16,r5,20
10009c98:	0029883a 	mov	r20,zero
10009c9c:	91400117 	ldw	r5,4(r18)
10009ca0:	00092240 	call	10009224 <_Balloc>
10009ca4:	92400417 	ldw	r9,16(r18)
10009ca8:	9b000417 	ldw	r12,16(r19)
10009cac:	12c00504 	addi	r11,r2,20
10009cb0:	4a51883a 	add	r8,r9,r9
10009cb4:	6319883a 	add	r12,r12,r12
10009cb8:	4211883a 	add	r8,r8,r8
10009cbc:	6319883a 	add	r12,r12,r12
10009cc0:	15000315 	stw	r20,12(r2)
10009cc4:	8211883a 	add	r8,r16,r8
10009cc8:	8b19883a 	add	r12,r17,r12
10009ccc:	0007883a 	mov	r3,zero
10009cd0:	81400017 	ldw	r5,0(r16)
10009cd4:	89c00017 	ldw	r7,0(r17)
10009cd8:	59800104 	addi	r6,r11,4
10009cdc:	293fffcc 	andi	r4,r5,65535
10009ce0:	20c7883a 	add	r3,r4,r3
10009ce4:	393fffcc 	andi	r4,r7,65535
10009ce8:	1909c83a 	sub	r4,r3,r4
10009cec:	280ad43a 	srli	r5,r5,16
10009cf0:	380ed43a 	srli	r7,r7,16
10009cf4:	2007d43a 	srai	r3,r4,16
10009cf8:	213fffcc 	andi	r4,r4,65535
10009cfc:	29cbc83a 	sub	r5,r5,r7
10009d00:	28c7883a 	add	r3,r5,r3
10009d04:	180a943a 	slli	r5,r3,16
10009d08:	8c400104 	addi	r17,r17,4
10009d0c:	84000104 	addi	r16,r16,4
10009d10:	2908b03a 	or	r4,r5,r4
10009d14:	59000015 	stw	r4,0(r11)
10009d18:	1807d43a 	srai	r3,r3,16
10009d1c:	3015883a 	mov	r10,r6
10009d20:	3017883a 	mov	r11,r6
10009d24:	8b3fea36 	bltu	r17,r12,10009cd0 <__alt_data_end+0xf8009cd0>
10009d28:	8200162e 	bgeu	r16,r8,10009d84 <__mdiff+0x17c>
10009d2c:	8017883a 	mov	r11,r16
10009d30:	59400017 	ldw	r5,0(r11)
10009d34:	31800104 	addi	r6,r6,4
10009d38:	5ac00104 	addi	r11,r11,4
10009d3c:	293fffcc 	andi	r4,r5,65535
10009d40:	20c7883a 	add	r3,r4,r3
10009d44:	280ed43a 	srli	r7,r5,16
10009d48:	180bd43a 	srai	r5,r3,16
10009d4c:	193fffcc 	andi	r4,r3,65535
10009d50:	3947883a 	add	r3,r7,r5
10009d54:	180a943a 	slli	r5,r3,16
10009d58:	1807d43a 	srai	r3,r3,16
10009d5c:	2908b03a 	or	r4,r5,r4
10009d60:	313fff15 	stw	r4,-4(r6)
10009d64:	5a3ff236 	bltu	r11,r8,10009d30 <__alt_data_end+0xf8009d30>
10009d68:	0406303a 	nor	r3,zero,r16
10009d6c:	1a07883a 	add	r3,r3,r8
10009d70:	1806d0ba 	srli	r3,r3,2
10009d74:	18c00044 	addi	r3,r3,1
10009d78:	18c7883a 	add	r3,r3,r3
10009d7c:	18c7883a 	add	r3,r3,r3
10009d80:	50d5883a 	add	r10,r10,r3
10009d84:	50ffff04 	addi	r3,r10,-4
10009d88:	2000041e 	bne	r4,zero,10009d9c <__mdiff+0x194>
10009d8c:	18ffff04 	addi	r3,r3,-4
10009d90:	19000017 	ldw	r4,0(r3)
10009d94:	4a7fffc4 	addi	r9,r9,-1
10009d98:	203ffc26 	beq	r4,zero,10009d8c <__alt_data_end+0xf8009d8c>
10009d9c:	12400415 	stw	r9,16(r2)
10009da0:	dfc00517 	ldw	ra,20(sp)
10009da4:	dd000417 	ldw	r20,16(sp)
10009da8:	dcc00317 	ldw	r19,12(sp)
10009dac:	dc800217 	ldw	r18,8(sp)
10009db0:	dc400117 	ldw	r17,4(sp)
10009db4:	dc000017 	ldw	r16,0(sp)
10009db8:	dec00604 	addi	sp,sp,24
10009dbc:	f800283a 	ret
10009dc0:	000b883a 	mov	r5,zero
10009dc4:	00092240 	call	10009224 <_Balloc>
10009dc8:	00c00044 	movi	r3,1
10009dcc:	10c00415 	stw	r3,16(r2)
10009dd0:	10000515 	stw	zero,20(r2)
10009dd4:	003ff206 	br	10009da0 <__alt_data_end+0xf8009da0>
10009dd8:	8023883a 	mov	r17,r16
10009ddc:	0029883a 	mov	r20,zero
10009de0:	4021883a 	mov	r16,r8
10009de4:	003fad06 	br	10009c9c <__alt_data_end+0xf8009c9c>
10009de8:	9005883a 	mov	r2,r18
10009dec:	94400504 	addi	r17,r18,20
10009df0:	9c000504 	addi	r16,r19,20
10009df4:	9825883a 	mov	r18,r19
10009df8:	05000044 	movi	r20,1
10009dfc:	1027883a 	mov	r19,r2
10009e00:	003fa606 	br	10009c9c <__alt_data_end+0xf8009c9c>

10009e04 <__ulp>:
10009e04:	295ffc2c 	andhi	r5,r5,32752
10009e08:	00bf3034 	movhi	r2,64704
10009e0c:	2887883a 	add	r3,r5,r2
10009e10:	00c0020e 	bge	zero,r3,10009e1c <__ulp+0x18>
10009e14:	0005883a 	mov	r2,zero
10009e18:	f800283a 	ret
10009e1c:	00c7c83a 	sub	r3,zero,r3
10009e20:	1807d53a 	srai	r3,r3,20
10009e24:	008004c4 	movi	r2,19
10009e28:	10c00b0e 	bge	r2,r3,10009e58 <__ulp+0x54>
10009e2c:	18bffb04 	addi	r2,r3,-20
10009e30:	01000784 	movi	r4,30
10009e34:	0007883a 	mov	r3,zero
10009e38:	20800516 	blt	r4,r2,10009e50 <__ulp+0x4c>
10009e3c:	010007c4 	movi	r4,31
10009e40:	2089c83a 	sub	r4,r4,r2
10009e44:	00800044 	movi	r2,1
10009e48:	1104983a 	sll	r2,r2,r4
10009e4c:	f800283a 	ret
10009e50:	00800044 	movi	r2,1
10009e54:	f800283a 	ret
10009e58:	01400234 	movhi	r5,8
10009e5c:	28c7d83a 	sra	r3,r5,r3
10009e60:	0005883a 	mov	r2,zero
10009e64:	f800283a 	ret

10009e68 <__b2d>:
10009e68:	defffa04 	addi	sp,sp,-24
10009e6c:	dc000015 	stw	r16,0(sp)
10009e70:	24000417 	ldw	r16,16(r4)
10009e74:	dc400115 	stw	r17,4(sp)
10009e78:	24400504 	addi	r17,r4,20
10009e7c:	8421883a 	add	r16,r16,r16
10009e80:	8421883a 	add	r16,r16,r16
10009e84:	8c21883a 	add	r16,r17,r16
10009e88:	dc800215 	stw	r18,8(sp)
10009e8c:	84bfff17 	ldw	r18,-4(r16)
10009e90:	dd000415 	stw	r20,16(sp)
10009e94:	dcc00315 	stw	r19,12(sp)
10009e98:	9009883a 	mov	r4,r18
10009e9c:	2829883a 	mov	r20,r5
10009ea0:	dfc00515 	stw	ra,20(sp)
10009ea4:	00095400 	call	10009540 <__hi0bits>
10009ea8:	00c00804 	movi	r3,32
10009eac:	1889c83a 	sub	r4,r3,r2
10009eb0:	a1000015 	stw	r4,0(r20)
10009eb4:	01000284 	movi	r4,10
10009eb8:	84ffff04 	addi	r19,r16,-4
10009ebc:	20801216 	blt	r4,r2,10009f08 <__b2d+0xa0>
10009ec0:	018002c4 	movi	r6,11
10009ec4:	308dc83a 	sub	r6,r6,r2
10009ec8:	9186d83a 	srl	r3,r18,r6
10009ecc:	18cffc34 	orhi	r3,r3,16368
10009ed0:	8cc0212e 	bgeu	r17,r19,10009f58 <__b2d+0xf0>
10009ed4:	813ffe17 	ldw	r4,-8(r16)
10009ed8:	218cd83a 	srl	r6,r4,r6
10009edc:	10800544 	addi	r2,r2,21
10009ee0:	9084983a 	sll	r2,r18,r2
10009ee4:	1184b03a 	or	r2,r2,r6
10009ee8:	dfc00517 	ldw	ra,20(sp)
10009eec:	dd000417 	ldw	r20,16(sp)
10009ef0:	dcc00317 	ldw	r19,12(sp)
10009ef4:	dc800217 	ldw	r18,8(sp)
10009ef8:	dc400117 	ldw	r17,4(sp)
10009efc:	dc000017 	ldw	r16,0(sp)
10009f00:	dec00604 	addi	sp,sp,24
10009f04:	f800283a 	ret
10009f08:	8cc00f2e 	bgeu	r17,r19,10009f48 <__b2d+0xe0>
10009f0c:	117ffd44 	addi	r5,r2,-11
10009f10:	80bffe17 	ldw	r2,-8(r16)
10009f14:	28000e26 	beq	r5,zero,10009f50 <__b2d+0xe8>
10009f18:	1949c83a 	sub	r4,r3,r5
10009f1c:	9164983a 	sll	r18,r18,r5
10009f20:	1106d83a 	srl	r3,r2,r4
10009f24:	81bffe04 	addi	r6,r16,-8
10009f28:	948ffc34 	orhi	r18,r18,16368
10009f2c:	90c6b03a 	or	r3,r18,r3
10009f30:	89800e2e 	bgeu	r17,r6,10009f6c <__b2d+0x104>
10009f34:	81bffd17 	ldw	r6,-12(r16)
10009f38:	1144983a 	sll	r2,r2,r5
10009f3c:	310ad83a 	srl	r5,r6,r4
10009f40:	2884b03a 	or	r2,r5,r2
10009f44:	003fe806 	br	10009ee8 <__alt_data_end+0xf8009ee8>
10009f48:	10bffd44 	addi	r2,r2,-11
10009f4c:	1000041e 	bne	r2,zero,10009f60 <__b2d+0xf8>
10009f50:	90cffc34 	orhi	r3,r18,16368
10009f54:	003fe406 	br	10009ee8 <__alt_data_end+0xf8009ee8>
10009f58:	000d883a 	mov	r6,zero
10009f5c:	003fdf06 	br	10009edc <__alt_data_end+0xf8009edc>
10009f60:	90a4983a 	sll	r18,r18,r2
10009f64:	0005883a 	mov	r2,zero
10009f68:	003ff906 	br	10009f50 <__alt_data_end+0xf8009f50>
10009f6c:	1144983a 	sll	r2,r2,r5
10009f70:	003fdd06 	br	10009ee8 <__alt_data_end+0xf8009ee8>

10009f74 <__d2b>:
10009f74:	defff804 	addi	sp,sp,-32
10009f78:	dc000215 	stw	r16,8(sp)
10009f7c:	3021883a 	mov	r16,r6
10009f80:	dc400315 	stw	r17,12(sp)
10009f84:	8022907a 	slli	r17,r16,1
10009f88:	dd000615 	stw	r20,24(sp)
10009f8c:	2829883a 	mov	r20,r5
10009f90:	01400044 	movi	r5,1
10009f94:	dcc00515 	stw	r19,20(sp)
10009f98:	dc800415 	stw	r18,16(sp)
10009f9c:	dfc00715 	stw	ra,28(sp)
10009fa0:	3825883a 	mov	r18,r7
10009fa4:	8822d57a 	srli	r17,r17,21
10009fa8:	00092240 	call	10009224 <_Balloc>
10009fac:	1027883a 	mov	r19,r2
10009fb0:	00800434 	movhi	r2,16
10009fb4:	10bfffc4 	addi	r2,r2,-1
10009fb8:	808c703a 	and	r6,r16,r2
10009fbc:	88000126 	beq	r17,zero,10009fc4 <__d2b+0x50>
10009fc0:	31800434 	orhi	r6,r6,16
10009fc4:	d9800015 	stw	r6,0(sp)
10009fc8:	a0002426 	beq	r20,zero,1000a05c <__d2b+0xe8>
10009fcc:	d9000104 	addi	r4,sp,4
10009fd0:	dd000115 	stw	r20,4(sp)
10009fd4:	00095a80 	call	100095a8 <__lo0bits>
10009fd8:	d8c00017 	ldw	r3,0(sp)
10009fdc:	10002f1e 	bne	r2,zero,1000a09c <__d2b+0x128>
10009fe0:	d9000117 	ldw	r4,4(sp)
10009fe4:	99000515 	stw	r4,20(r19)
10009fe8:	1821003a 	cmpeq	r16,r3,zero
10009fec:	01000084 	movi	r4,2
10009ff0:	2421c83a 	sub	r16,r4,r16
10009ff4:	98c00615 	stw	r3,24(r19)
10009ff8:	9c000415 	stw	r16,16(r19)
10009ffc:	88001f1e 	bne	r17,zero,1000a07c <__d2b+0x108>
1000a000:	10bef384 	addi	r2,r2,-1074
1000a004:	90800015 	stw	r2,0(r18)
1000a008:	00900034 	movhi	r2,16384
1000a00c:	10bfffc4 	addi	r2,r2,-1
1000a010:	8085883a 	add	r2,r16,r2
1000a014:	1085883a 	add	r2,r2,r2
1000a018:	1085883a 	add	r2,r2,r2
1000a01c:	9885883a 	add	r2,r19,r2
1000a020:	11000517 	ldw	r4,20(r2)
1000a024:	8020917a 	slli	r16,r16,5
1000a028:	00095400 	call	10009540 <__hi0bits>
1000a02c:	d8c00817 	ldw	r3,32(sp)
1000a030:	8085c83a 	sub	r2,r16,r2
1000a034:	18800015 	stw	r2,0(r3)
1000a038:	9805883a 	mov	r2,r19
1000a03c:	dfc00717 	ldw	ra,28(sp)
1000a040:	dd000617 	ldw	r20,24(sp)
1000a044:	dcc00517 	ldw	r19,20(sp)
1000a048:	dc800417 	ldw	r18,16(sp)
1000a04c:	dc400317 	ldw	r17,12(sp)
1000a050:	dc000217 	ldw	r16,8(sp)
1000a054:	dec00804 	addi	sp,sp,32
1000a058:	f800283a 	ret
1000a05c:	d809883a 	mov	r4,sp
1000a060:	00095a80 	call	100095a8 <__lo0bits>
1000a064:	d8c00017 	ldw	r3,0(sp)
1000a068:	04000044 	movi	r16,1
1000a06c:	9c000415 	stw	r16,16(r19)
1000a070:	98c00515 	stw	r3,20(r19)
1000a074:	10800804 	addi	r2,r2,32
1000a078:	883fe126 	beq	r17,zero,1000a000 <__alt_data_end+0xf800a000>
1000a07c:	00c00d44 	movi	r3,53
1000a080:	8c7ef344 	addi	r17,r17,-1075
1000a084:	88a3883a 	add	r17,r17,r2
1000a088:	1885c83a 	sub	r2,r3,r2
1000a08c:	d8c00817 	ldw	r3,32(sp)
1000a090:	94400015 	stw	r17,0(r18)
1000a094:	18800015 	stw	r2,0(r3)
1000a098:	003fe706 	br	1000a038 <__alt_data_end+0xf800a038>
1000a09c:	01000804 	movi	r4,32
1000a0a0:	2089c83a 	sub	r4,r4,r2
1000a0a4:	1908983a 	sll	r4,r3,r4
1000a0a8:	d9400117 	ldw	r5,4(sp)
1000a0ac:	1886d83a 	srl	r3,r3,r2
1000a0b0:	2148b03a 	or	r4,r4,r5
1000a0b4:	99000515 	stw	r4,20(r19)
1000a0b8:	d8c00015 	stw	r3,0(sp)
1000a0bc:	003fca06 	br	10009fe8 <__alt_data_end+0xf8009fe8>

1000a0c0 <__ratio>:
1000a0c0:	defff904 	addi	sp,sp,-28
1000a0c4:	dc400315 	stw	r17,12(sp)
1000a0c8:	2823883a 	mov	r17,r5
1000a0cc:	d9400104 	addi	r5,sp,4
1000a0d0:	dfc00615 	stw	ra,24(sp)
1000a0d4:	dcc00515 	stw	r19,20(sp)
1000a0d8:	dc800415 	stw	r18,16(sp)
1000a0dc:	2027883a 	mov	r19,r4
1000a0e0:	dc000215 	stw	r16,8(sp)
1000a0e4:	0009e680 	call	10009e68 <__b2d>
1000a0e8:	d80b883a 	mov	r5,sp
1000a0ec:	8809883a 	mov	r4,r17
1000a0f0:	1025883a 	mov	r18,r2
1000a0f4:	1821883a 	mov	r16,r3
1000a0f8:	0009e680 	call	10009e68 <__b2d>
1000a0fc:	8a000417 	ldw	r8,16(r17)
1000a100:	99000417 	ldw	r4,16(r19)
1000a104:	d9400117 	ldw	r5,4(sp)
1000a108:	2209c83a 	sub	r4,r4,r8
1000a10c:	2010917a 	slli	r8,r4,5
1000a110:	d9000017 	ldw	r4,0(sp)
1000a114:	2909c83a 	sub	r4,r5,r4
1000a118:	4109883a 	add	r4,r8,r4
1000a11c:	01000e0e 	bge	zero,r4,1000a158 <__ratio+0x98>
1000a120:	2008953a 	slli	r4,r4,20
1000a124:	2421883a 	add	r16,r4,r16
1000a128:	100d883a 	mov	r6,r2
1000a12c:	180f883a 	mov	r7,r3
1000a130:	9009883a 	mov	r4,r18
1000a134:	800b883a 	mov	r5,r16
1000a138:	000f64c0 	call	1000f64c <__divdf3>
1000a13c:	dfc00617 	ldw	ra,24(sp)
1000a140:	dcc00517 	ldw	r19,20(sp)
1000a144:	dc800417 	ldw	r18,16(sp)
1000a148:	dc400317 	ldw	r17,12(sp)
1000a14c:	dc000217 	ldw	r16,8(sp)
1000a150:	dec00704 	addi	sp,sp,28
1000a154:	f800283a 	ret
1000a158:	2008953a 	slli	r4,r4,20
1000a15c:	1907c83a 	sub	r3,r3,r4
1000a160:	003ff106 	br	1000a128 <__alt_data_end+0xf800a128>

1000a164 <_mprec_log10>:
1000a164:	defffe04 	addi	sp,sp,-8
1000a168:	dc000015 	stw	r16,0(sp)
1000a16c:	dfc00115 	stw	ra,4(sp)
1000a170:	008005c4 	movi	r2,23
1000a174:	2021883a 	mov	r16,r4
1000a178:	11000d0e 	bge	r2,r4,1000a1b0 <_mprec_log10+0x4c>
1000a17c:	0005883a 	mov	r2,zero
1000a180:	00cffc34 	movhi	r3,16368
1000a184:	843fffc4 	addi	r16,r16,-1
1000a188:	000d883a 	mov	r6,zero
1000a18c:	01d00934 	movhi	r7,16420
1000a190:	1009883a 	mov	r4,r2
1000a194:	180b883a 	mov	r5,r3
1000a198:	00102740 	call	10010274 <__muldf3>
1000a19c:	803ff91e 	bne	r16,zero,1000a184 <__alt_data_end+0xf800a184>
1000a1a0:	dfc00117 	ldw	ra,4(sp)
1000a1a4:	dc000017 	ldw	r16,0(sp)
1000a1a8:	dec00204 	addi	sp,sp,8
1000a1ac:	f800283a 	ret
1000a1b0:	202090fa 	slli	r16,r4,3
1000a1b4:	00840074 	movhi	r2,4097
1000a1b8:	10901504 	addi	r2,r2,16468
1000a1bc:	1421883a 	add	r16,r2,r16
1000a1c0:	80800017 	ldw	r2,0(r16)
1000a1c4:	80c00117 	ldw	r3,4(r16)
1000a1c8:	dfc00117 	ldw	ra,4(sp)
1000a1cc:	dc000017 	ldw	r16,0(sp)
1000a1d0:	dec00204 	addi	sp,sp,8
1000a1d4:	f800283a 	ret

1000a1d8 <__copybits>:
1000a1d8:	297fffc4 	addi	r5,r5,-1
1000a1dc:	280fd17a 	srai	r7,r5,5
1000a1e0:	30c00417 	ldw	r3,16(r6)
1000a1e4:	30800504 	addi	r2,r6,20
1000a1e8:	39c00044 	addi	r7,r7,1
1000a1ec:	18c7883a 	add	r3,r3,r3
1000a1f0:	39cf883a 	add	r7,r7,r7
1000a1f4:	18c7883a 	add	r3,r3,r3
1000a1f8:	39cf883a 	add	r7,r7,r7
1000a1fc:	10c7883a 	add	r3,r2,r3
1000a200:	21cf883a 	add	r7,r4,r7
1000a204:	10c00d2e 	bgeu	r2,r3,1000a23c <__copybits+0x64>
1000a208:	200b883a 	mov	r5,r4
1000a20c:	12000017 	ldw	r8,0(r2)
1000a210:	29400104 	addi	r5,r5,4
1000a214:	10800104 	addi	r2,r2,4
1000a218:	2a3fff15 	stw	r8,-4(r5)
1000a21c:	10fffb36 	bltu	r2,r3,1000a20c <__alt_data_end+0xf800a20c>
1000a220:	1985c83a 	sub	r2,r3,r6
1000a224:	10bffac4 	addi	r2,r2,-21
1000a228:	1004d0ba 	srli	r2,r2,2
1000a22c:	10800044 	addi	r2,r2,1
1000a230:	1085883a 	add	r2,r2,r2
1000a234:	1085883a 	add	r2,r2,r2
1000a238:	2089883a 	add	r4,r4,r2
1000a23c:	21c0032e 	bgeu	r4,r7,1000a24c <__copybits+0x74>
1000a240:	20000015 	stw	zero,0(r4)
1000a244:	21000104 	addi	r4,r4,4
1000a248:	21fffd36 	bltu	r4,r7,1000a240 <__alt_data_end+0xf800a240>
1000a24c:	f800283a 	ret

1000a250 <__any_on>:
1000a250:	20c00417 	ldw	r3,16(r4)
1000a254:	2805d17a 	srai	r2,r5,5
1000a258:	21000504 	addi	r4,r4,20
1000a25c:	18800d0e 	bge	r3,r2,1000a294 <__any_on+0x44>
1000a260:	18c7883a 	add	r3,r3,r3
1000a264:	18c7883a 	add	r3,r3,r3
1000a268:	20c7883a 	add	r3,r4,r3
1000a26c:	20c0192e 	bgeu	r4,r3,1000a2d4 <__any_on+0x84>
1000a270:	18bfff17 	ldw	r2,-4(r3)
1000a274:	18ffff04 	addi	r3,r3,-4
1000a278:	1000041e 	bne	r2,zero,1000a28c <__any_on+0x3c>
1000a27c:	20c0142e 	bgeu	r4,r3,1000a2d0 <__any_on+0x80>
1000a280:	18ffff04 	addi	r3,r3,-4
1000a284:	19400017 	ldw	r5,0(r3)
1000a288:	283ffc26 	beq	r5,zero,1000a27c <__alt_data_end+0xf800a27c>
1000a28c:	00800044 	movi	r2,1
1000a290:	f800283a 	ret
1000a294:	10c00a0e 	bge	r2,r3,1000a2c0 <__any_on+0x70>
1000a298:	1085883a 	add	r2,r2,r2
1000a29c:	1085883a 	add	r2,r2,r2
1000a2a0:	294007cc 	andi	r5,r5,31
1000a2a4:	2087883a 	add	r3,r4,r2
1000a2a8:	283ff026 	beq	r5,zero,1000a26c <__alt_data_end+0xf800a26c>
1000a2ac:	19800017 	ldw	r6,0(r3)
1000a2b0:	3144d83a 	srl	r2,r6,r5
1000a2b4:	114a983a 	sll	r5,r2,r5
1000a2b8:	317ff41e 	bne	r6,r5,1000a28c <__alt_data_end+0xf800a28c>
1000a2bc:	003feb06 	br	1000a26c <__alt_data_end+0xf800a26c>
1000a2c0:	1085883a 	add	r2,r2,r2
1000a2c4:	1085883a 	add	r2,r2,r2
1000a2c8:	2087883a 	add	r3,r4,r2
1000a2cc:	003fe706 	br	1000a26c <__alt_data_end+0xf800a26c>
1000a2d0:	f800283a 	ret
1000a2d4:	0005883a 	mov	r2,zero
1000a2d8:	f800283a 	ret

1000a2dc <_realloc_r>:
1000a2dc:	defff604 	addi	sp,sp,-40
1000a2e0:	dc800215 	stw	r18,8(sp)
1000a2e4:	dfc00915 	stw	ra,36(sp)
1000a2e8:	df000815 	stw	fp,32(sp)
1000a2ec:	ddc00715 	stw	r23,28(sp)
1000a2f0:	dd800615 	stw	r22,24(sp)
1000a2f4:	dd400515 	stw	r21,20(sp)
1000a2f8:	dd000415 	stw	r20,16(sp)
1000a2fc:	dcc00315 	stw	r19,12(sp)
1000a300:	dc400115 	stw	r17,4(sp)
1000a304:	dc000015 	stw	r16,0(sp)
1000a308:	3025883a 	mov	r18,r6
1000a30c:	2800b726 	beq	r5,zero,1000a5ec <_realloc_r+0x310>
1000a310:	282b883a 	mov	r21,r5
1000a314:	2029883a 	mov	r20,r4
1000a318:	0011be00 	call	10011be0 <__malloc_lock>
1000a31c:	a8bfff17 	ldw	r2,-4(r21)
1000a320:	043fff04 	movi	r16,-4
1000a324:	90c002c4 	addi	r3,r18,11
1000a328:	01000584 	movi	r4,22
1000a32c:	acfffe04 	addi	r19,r21,-8
1000a330:	1420703a 	and	r16,r2,r16
1000a334:	20c0332e 	bgeu	r4,r3,1000a404 <_realloc_r+0x128>
1000a338:	047ffe04 	movi	r17,-8
1000a33c:	1c62703a 	and	r17,r3,r17
1000a340:	8807883a 	mov	r3,r17
1000a344:	88005816 	blt	r17,zero,1000a4a8 <_realloc_r+0x1cc>
1000a348:	8c805736 	bltu	r17,r18,1000a4a8 <_realloc_r+0x1cc>
1000a34c:	80c0300e 	bge	r16,r3,1000a410 <_realloc_r+0x134>
1000a350:	07040074 	movhi	fp,4097
1000a354:	e7128304 	addi	fp,fp,18956
1000a358:	e1c00217 	ldw	r7,8(fp)
1000a35c:	9c09883a 	add	r4,r19,r16
1000a360:	22000117 	ldw	r8,4(r4)
1000a364:	21c06326 	beq	r4,r7,1000a4f4 <_realloc_r+0x218>
1000a368:	017fff84 	movi	r5,-2
1000a36c:	414a703a 	and	r5,r8,r5
1000a370:	214b883a 	add	r5,r4,r5
1000a374:	29800117 	ldw	r6,4(r5)
1000a378:	3180004c 	andi	r6,r6,1
1000a37c:	30003f26 	beq	r6,zero,1000a47c <_realloc_r+0x1a0>
1000a380:	1080004c 	andi	r2,r2,1
1000a384:	10008326 	beq	r2,zero,1000a594 <_realloc_r+0x2b8>
1000a388:	900b883a 	mov	r5,r18
1000a38c:	a009883a 	mov	r4,r20
1000a390:	00085680 	call	10008568 <_malloc_r>
1000a394:	1025883a 	mov	r18,r2
1000a398:	10011e26 	beq	r2,zero,1000a814 <_realloc_r+0x538>
1000a39c:	a93fff17 	ldw	r4,-4(r21)
1000a3a0:	10fffe04 	addi	r3,r2,-8
1000a3a4:	00bfff84 	movi	r2,-2
1000a3a8:	2084703a 	and	r2,r4,r2
1000a3ac:	9885883a 	add	r2,r19,r2
1000a3b0:	1880ee26 	beq	r3,r2,1000a76c <_realloc_r+0x490>
1000a3b4:	81bfff04 	addi	r6,r16,-4
1000a3b8:	00800904 	movi	r2,36
1000a3bc:	1180b836 	bltu	r2,r6,1000a6a0 <_realloc_r+0x3c4>
1000a3c0:	00c004c4 	movi	r3,19
1000a3c4:	19809636 	bltu	r3,r6,1000a620 <_realloc_r+0x344>
1000a3c8:	9005883a 	mov	r2,r18
1000a3cc:	a807883a 	mov	r3,r21
1000a3d0:	19000017 	ldw	r4,0(r3)
1000a3d4:	11000015 	stw	r4,0(r2)
1000a3d8:	19000117 	ldw	r4,4(r3)
1000a3dc:	11000115 	stw	r4,4(r2)
1000a3e0:	18c00217 	ldw	r3,8(r3)
1000a3e4:	10c00215 	stw	r3,8(r2)
1000a3e8:	a80b883a 	mov	r5,r21
1000a3ec:	a009883a 	mov	r4,r20
1000a3f0:	00079700 	call	10007970 <_free_r>
1000a3f4:	a009883a 	mov	r4,r20
1000a3f8:	0011c040 	call	10011c04 <__malloc_unlock>
1000a3fc:	9005883a 	mov	r2,r18
1000a400:	00001206 	br	1000a44c <_realloc_r+0x170>
1000a404:	00c00404 	movi	r3,16
1000a408:	1823883a 	mov	r17,r3
1000a40c:	003fce06 	br	1000a348 <__alt_data_end+0xf800a348>
1000a410:	a825883a 	mov	r18,r21
1000a414:	8445c83a 	sub	r2,r16,r17
1000a418:	00c003c4 	movi	r3,15
1000a41c:	18802636 	bltu	r3,r2,1000a4b8 <_realloc_r+0x1dc>
1000a420:	99800117 	ldw	r6,4(r19)
1000a424:	9c07883a 	add	r3,r19,r16
1000a428:	3180004c 	andi	r6,r6,1
1000a42c:	3420b03a 	or	r16,r6,r16
1000a430:	9c000115 	stw	r16,4(r19)
1000a434:	18800117 	ldw	r2,4(r3)
1000a438:	10800054 	ori	r2,r2,1
1000a43c:	18800115 	stw	r2,4(r3)
1000a440:	a009883a 	mov	r4,r20
1000a444:	0011c040 	call	10011c04 <__malloc_unlock>
1000a448:	9005883a 	mov	r2,r18
1000a44c:	dfc00917 	ldw	ra,36(sp)
1000a450:	df000817 	ldw	fp,32(sp)
1000a454:	ddc00717 	ldw	r23,28(sp)
1000a458:	dd800617 	ldw	r22,24(sp)
1000a45c:	dd400517 	ldw	r21,20(sp)
1000a460:	dd000417 	ldw	r20,16(sp)
1000a464:	dcc00317 	ldw	r19,12(sp)
1000a468:	dc800217 	ldw	r18,8(sp)
1000a46c:	dc400117 	ldw	r17,4(sp)
1000a470:	dc000017 	ldw	r16,0(sp)
1000a474:	dec00a04 	addi	sp,sp,40
1000a478:	f800283a 	ret
1000a47c:	017fff04 	movi	r5,-4
1000a480:	414a703a 	and	r5,r8,r5
1000a484:	814d883a 	add	r6,r16,r5
1000a488:	30c01f16 	blt	r6,r3,1000a508 <_realloc_r+0x22c>
1000a48c:	20800317 	ldw	r2,12(r4)
1000a490:	20c00217 	ldw	r3,8(r4)
1000a494:	a825883a 	mov	r18,r21
1000a498:	3021883a 	mov	r16,r6
1000a49c:	18800315 	stw	r2,12(r3)
1000a4a0:	10c00215 	stw	r3,8(r2)
1000a4a4:	003fdb06 	br	1000a414 <__alt_data_end+0xf800a414>
1000a4a8:	00800304 	movi	r2,12
1000a4ac:	a0800015 	stw	r2,0(r20)
1000a4b0:	0005883a 	mov	r2,zero
1000a4b4:	003fe506 	br	1000a44c <__alt_data_end+0xf800a44c>
1000a4b8:	98c00117 	ldw	r3,4(r19)
1000a4bc:	9c4b883a 	add	r5,r19,r17
1000a4c0:	11000054 	ori	r4,r2,1
1000a4c4:	18c0004c 	andi	r3,r3,1
1000a4c8:	1c62b03a 	or	r17,r3,r17
1000a4cc:	9c400115 	stw	r17,4(r19)
1000a4d0:	29000115 	stw	r4,4(r5)
1000a4d4:	2885883a 	add	r2,r5,r2
1000a4d8:	10c00117 	ldw	r3,4(r2)
1000a4dc:	29400204 	addi	r5,r5,8
1000a4e0:	a009883a 	mov	r4,r20
1000a4e4:	18c00054 	ori	r3,r3,1
1000a4e8:	10c00115 	stw	r3,4(r2)
1000a4ec:	00079700 	call	10007970 <_free_r>
1000a4f0:	003fd306 	br	1000a440 <__alt_data_end+0xf800a440>
1000a4f4:	017fff04 	movi	r5,-4
1000a4f8:	414a703a 	and	r5,r8,r5
1000a4fc:	89800404 	addi	r6,r17,16
1000a500:	8151883a 	add	r8,r16,r5
1000a504:	4180590e 	bge	r8,r6,1000a66c <_realloc_r+0x390>
1000a508:	1080004c 	andi	r2,r2,1
1000a50c:	103f9e1e 	bne	r2,zero,1000a388 <__alt_data_end+0xf800a388>
1000a510:	adbffe17 	ldw	r22,-8(r21)
1000a514:	00bfff04 	movi	r2,-4
1000a518:	9dadc83a 	sub	r22,r19,r22
1000a51c:	b1800117 	ldw	r6,4(r22)
1000a520:	3084703a 	and	r2,r6,r2
1000a524:	20002026 	beq	r4,zero,1000a5a8 <_realloc_r+0x2cc>
1000a528:	80af883a 	add	r23,r16,r2
1000a52c:	b96f883a 	add	r23,r23,r5
1000a530:	21c05f26 	beq	r4,r7,1000a6b0 <_realloc_r+0x3d4>
1000a534:	b8c01c16 	blt	r23,r3,1000a5a8 <_realloc_r+0x2cc>
1000a538:	20800317 	ldw	r2,12(r4)
1000a53c:	20c00217 	ldw	r3,8(r4)
1000a540:	81bfff04 	addi	r6,r16,-4
1000a544:	01000904 	movi	r4,36
1000a548:	18800315 	stw	r2,12(r3)
1000a54c:	10c00215 	stw	r3,8(r2)
1000a550:	b0c00217 	ldw	r3,8(r22)
1000a554:	b0800317 	ldw	r2,12(r22)
1000a558:	b4800204 	addi	r18,r22,8
1000a55c:	18800315 	stw	r2,12(r3)
1000a560:	10c00215 	stw	r3,8(r2)
1000a564:	21801b36 	bltu	r4,r6,1000a5d4 <_realloc_r+0x2f8>
1000a568:	008004c4 	movi	r2,19
1000a56c:	1180352e 	bgeu	r2,r6,1000a644 <_realloc_r+0x368>
1000a570:	a8800017 	ldw	r2,0(r21)
1000a574:	b0800215 	stw	r2,8(r22)
1000a578:	a8800117 	ldw	r2,4(r21)
1000a57c:	b0800315 	stw	r2,12(r22)
1000a580:	008006c4 	movi	r2,27
1000a584:	11807f36 	bltu	r2,r6,1000a784 <_realloc_r+0x4a8>
1000a588:	b0800404 	addi	r2,r22,16
1000a58c:	ad400204 	addi	r21,r21,8
1000a590:	00002d06 	br	1000a648 <_realloc_r+0x36c>
1000a594:	adbffe17 	ldw	r22,-8(r21)
1000a598:	00bfff04 	movi	r2,-4
1000a59c:	9dadc83a 	sub	r22,r19,r22
1000a5a0:	b1000117 	ldw	r4,4(r22)
1000a5a4:	2084703a 	and	r2,r4,r2
1000a5a8:	b03f7726 	beq	r22,zero,1000a388 <__alt_data_end+0xf800a388>
1000a5ac:	80af883a 	add	r23,r16,r2
1000a5b0:	b8ff7516 	blt	r23,r3,1000a388 <__alt_data_end+0xf800a388>
1000a5b4:	b0800317 	ldw	r2,12(r22)
1000a5b8:	b0c00217 	ldw	r3,8(r22)
1000a5bc:	81bfff04 	addi	r6,r16,-4
1000a5c0:	01000904 	movi	r4,36
1000a5c4:	18800315 	stw	r2,12(r3)
1000a5c8:	10c00215 	stw	r3,8(r2)
1000a5cc:	b4800204 	addi	r18,r22,8
1000a5d0:	21bfe52e 	bgeu	r4,r6,1000a568 <__alt_data_end+0xf800a568>
1000a5d4:	a80b883a 	mov	r5,r21
1000a5d8:	9009883a 	mov	r4,r18
1000a5dc:	0008fa00 	call	10008fa0 <memmove>
1000a5e0:	b821883a 	mov	r16,r23
1000a5e4:	b027883a 	mov	r19,r22
1000a5e8:	003f8a06 	br	1000a414 <__alt_data_end+0xf800a414>
1000a5ec:	300b883a 	mov	r5,r6
1000a5f0:	dfc00917 	ldw	ra,36(sp)
1000a5f4:	df000817 	ldw	fp,32(sp)
1000a5f8:	ddc00717 	ldw	r23,28(sp)
1000a5fc:	dd800617 	ldw	r22,24(sp)
1000a600:	dd400517 	ldw	r21,20(sp)
1000a604:	dd000417 	ldw	r20,16(sp)
1000a608:	dcc00317 	ldw	r19,12(sp)
1000a60c:	dc800217 	ldw	r18,8(sp)
1000a610:	dc400117 	ldw	r17,4(sp)
1000a614:	dc000017 	ldw	r16,0(sp)
1000a618:	dec00a04 	addi	sp,sp,40
1000a61c:	00085681 	jmpi	10008568 <_malloc_r>
1000a620:	a8c00017 	ldw	r3,0(r21)
1000a624:	90c00015 	stw	r3,0(r18)
1000a628:	a8c00117 	ldw	r3,4(r21)
1000a62c:	90c00115 	stw	r3,4(r18)
1000a630:	00c006c4 	movi	r3,27
1000a634:	19804536 	bltu	r3,r6,1000a74c <_realloc_r+0x470>
1000a638:	90800204 	addi	r2,r18,8
1000a63c:	a8c00204 	addi	r3,r21,8
1000a640:	003f6306 	br	1000a3d0 <__alt_data_end+0xf800a3d0>
1000a644:	9005883a 	mov	r2,r18
1000a648:	a8c00017 	ldw	r3,0(r21)
1000a64c:	b821883a 	mov	r16,r23
1000a650:	b027883a 	mov	r19,r22
1000a654:	10c00015 	stw	r3,0(r2)
1000a658:	a8c00117 	ldw	r3,4(r21)
1000a65c:	10c00115 	stw	r3,4(r2)
1000a660:	a8c00217 	ldw	r3,8(r21)
1000a664:	10c00215 	stw	r3,8(r2)
1000a668:	003f6a06 	br	1000a414 <__alt_data_end+0xf800a414>
1000a66c:	9c67883a 	add	r19,r19,r17
1000a670:	4445c83a 	sub	r2,r8,r17
1000a674:	e4c00215 	stw	r19,8(fp)
1000a678:	10800054 	ori	r2,r2,1
1000a67c:	98800115 	stw	r2,4(r19)
1000a680:	a8bfff17 	ldw	r2,-4(r21)
1000a684:	a009883a 	mov	r4,r20
1000a688:	1080004c 	andi	r2,r2,1
1000a68c:	1462b03a 	or	r17,r2,r17
1000a690:	ac7fff15 	stw	r17,-4(r21)
1000a694:	0011c040 	call	10011c04 <__malloc_unlock>
1000a698:	a805883a 	mov	r2,r21
1000a69c:	003f6b06 	br	1000a44c <__alt_data_end+0xf800a44c>
1000a6a0:	a80b883a 	mov	r5,r21
1000a6a4:	9009883a 	mov	r4,r18
1000a6a8:	0008fa00 	call	10008fa0 <memmove>
1000a6ac:	003f4e06 	br	1000a3e8 <__alt_data_end+0xf800a3e8>
1000a6b0:	89000404 	addi	r4,r17,16
1000a6b4:	b93fbc16 	blt	r23,r4,1000a5a8 <__alt_data_end+0xf800a5a8>
1000a6b8:	b0800317 	ldw	r2,12(r22)
1000a6bc:	b0c00217 	ldw	r3,8(r22)
1000a6c0:	81bfff04 	addi	r6,r16,-4
1000a6c4:	01000904 	movi	r4,36
1000a6c8:	18800315 	stw	r2,12(r3)
1000a6cc:	10c00215 	stw	r3,8(r2)
1000a6d0:	b4800204 	addi	r18,r22,8
1000a6d4:	21804336 	bltu	r4,r6,1000a7e4 <_realloc_r+0x508>
1000a6d8:	008004c4 	movi	r2,19
1000a6dc:	11803f2e 	bgeu	r2,r6,1000a7dc <_realloc_r+0x500>
1000a6e0:	a8800017 	ldw	r2,0(r21)
1000a6e4:	b0800215 	stw	r2,8(r22)
1000a6e8:	a8800117 	ldw	r2,4(r21)
1000a6ec:	b0800315 	stw	r2,12(r22)
1000a6f0:	008006c4 	movi	r2,27
1000a6f4:	11803f36 	bltu	r2,r6,1000a7f4 <_realloc_r+0x518>
1000a6f8:	b0800404 	addi	r2,r22,16
1000a6fc:	ad400204 	addi	r21,r21,8
1000a700:	a8c00017 	ldw	r3,0(r21)
1000a704:	10c00015 	stw	r3,0(r2)
1000a708:	a8c00117 	ldw	r3,4(r21)
1000a70c:	10c00115 	stw	r3,4(r2)
1000a710:	a8c00217 	ldw	r3,8(r21)
1000a714:	10c00215 	stw	r3,8(r2)
1000a718:	b447883a 	add	r3,r22,r17
1000a71c:	bc45c83a 	sub	r2,r23,r17
1000a720:	e0c00215 	stw	r3,8(fp)
1000a724:	10800054 	ori	r2,r2,1
1000a728:	18800115 	stw	r2,4(r3)
1000a72c:	b0800117 	ldw	r2,4(r22)
1000a730:	a009883a 	mov	r4,r20
1000a734:	1080004c 	andi	r2,r2,1
1000a738:	1462b03a 	or	r17,r2,r17
1000a73c:	b4400115 	stw	r17,4(r22)
1000a740:	0011c040 	call	10011c04 <__malloc_unlock>
1000a744:	9005883a 	mov	r2,r18
1000a748:	003f4006 	br	1000a44c <__alt_data_end+0xf800a44c>
1000a74c:	a8c00217 	ldw	r3,8(r21)
1000a750:	90c00215 	stw	r3,8(r18)
1000a754:	a8c00317 	ldw	r3,12(r21)
1000a758:	90c00315 	stw	r3,12(r18)
1000a75c:	30801126 	beq	r6,r2,1000a7a4 <_realloc_r+0x4c8>
1000a760:	90800404 	addi	r2,r18,16
1000a764:	a8c00404 	addi	r3,r21,16
1000a768:	003f1906 	br	1000a3d0 <__alt_data_end+0xf800a3d0>
1000a76c:	90ffff17 	ldw	r3,-4(r18)
1000a770:	00bfff04 	movi	r2,-4
1000a774:	a825883a 	mov	r18,r21
1000a778:	1884703a 	and	r2,r3,r2
1000a77c:	80a1883a 	add	r16,r16,r2
1000a780:	003f2406 	br	1000a414 <__alt_data_end+0xf800a414>
1000a784:	a8800217 	ldw	r2,8(r21)
1000a788:	b0800415 	stw	r2,16(r22)
1000a78c:	a8800317 	ldw	r2,12(r21)
1000a790:	b0800515 	stw	r2,20(r22)
1000a794:	31000a26 	beq	r6,r4,1000a7c0 <_realloc_r+0x4e4>
1000a798:	b0800604 	addi	r2,r22,24
1000a79c:	ad400404 	addi	r21,r21,16
1000a7a0:	003fa906 	br	1000a648 <__alt_data_end+0xf800a648>
1000a7a4:	a9000417 	ldw	r4,16(r21)
1000a7a8:	90800604 	addi	r2,r18,24
1000a7ac:	a8c00604 	addi	r3,r21,24
1000a7b0:	91000415 	stw	r4,16(r18)
1000a7b4:	a9000517 	ldw	r4,20(r21)
1000a7b8:	91000515 	stw	r4,20(r18)
1000a7bc:	003f0406 	br	1000a3d0 <__alt_data_end+0xf800a3d0>
1000a7c0:	a8c00417 	ldw	r3,16(r21)
1000a7c4:	ad400604 	addi	r21,r21,24
1000a7c8:	b0800804 	addi	r2,r22,32
1000a7cc:	b0c00615 	stw	r3,24(r22)
1000a7d0:	a8ffff17 	ldw	r3,-4(r21)
1000a7d4:	b0c00715 	stw	r3,28(r22)
1000a7d8:	003f9b06 	br	1000a648 <__alt_data_end+0xf800a648>
1000a7dc:	9005883a 	mov	r2,r18
1000a7e0:	003fc706 	br	1000a700 <__alt_data_end+0xf800a700>
1000a7e4:	a80b883a 	mov	r5,r21
1000a7e8:	9009883a 	mov	r4,r18
1000a7ec:	0008fa00 	call	10008fa0 <memmove>
1000a7f0:	003fc906 	br	1000a718 <__alt_data_end+0xf800a718>
1000a7f4:	a8800217 	ldw	r2,8(r21)
1000a7f8:	b0800415 	stw	r2,16(r22)
1000a7fc:	a8800317 	ldw	r2,12(r21)
1000a800:	b0800515 	stw	r2,20(r22)
1000a804:	31000726 	beq	r6,r4,1000a824 <_realloc_r+0x548>
1000a808:	b0800604 	addi	r2,r22,24
1000a80c:	ad400404 	addi	r21,r21,16
1000a810:	003fbb06 	br	1000a700 <__alt_data_end+0xf800a700>
1000a814:	a009883a 	mov	r4,r20
1000a818:	0011c040 	call	10011c04 <__malloc_unlock>
1000a81c:	0005883a 	mov	r2,zero
1000a820:	003f0a06 	br	1000a44c <__alt_data_end+0xf800a44c>
1000a824:	a8c00417 	ldw	r3,16(r21)
1000a828:	ad400604 	addi	r21,r21,24
1000a82c:	b0800804 	addi	r2,r22,32
1000a830:	b0c00615 	stw	r3,24(r22)
1000a834:	a8ffff17 	ldw	r3,-4(r21)
1000a838:	b0c00715 	stw	r3,28(r22)
1000a83c:	003fb006 	br	1000a700 <__alt_data_end+0xf800a700>

1000a840 <__fpclassifyd>:
1000a840:	00a00034 	movhi	r2,32768
1000a844:	10bfffc4 	addi	r2,r2,-1
1000a848:	2884703a 	and	r2,r5,r2
1000a84c:	10000726 	beq	r2,zero,1000a86c <__fpclassifyd+0x2c>
1000a850:	00fffc34 	movhi	r3,65520
1000a854:	019ff834 	movhi	r6,32736
1000a858:	28c7883a 	add	r3,r5,r3
1000a85c:	31bfffc4 	addi	r6,r6,-1
1000a860:	30c00536 	bltu	r6,r3,1000a878 <__fpclassifyd+0x38>
1000a864:	00800104 	movi	r2,4
1000a868:	f800283a 	ret
1000a86c:	2000021e 	bne	r4,zero,1000a878 <__fpclassifyd+0x38>
1000a870:	00800084 	movi	r2,2
1000a874:	f800283a 	ret
1000a878:	00dffc34 	movhi	r3,32752
1000a87c:	019ff834 	movhi	r6,32736
1000a880:	28cb883a 	add	r5,r5,r3
1000a884:	31bfffc4 	addi	r6,r6,-1
1000a888:	317ff62e 	bgeu	r6,r5,1000a864 <__alt_data_end+0xf800a864>
1000a88c:	01400434 	movhi	r5,16
1000a890:	297fffc4 	addi	r5,r5,-1
1000a894:	28800236 	bltu	r5,r2,1000a8a0 <__fpclassifyd+0x60>
1000a898:	008000c4 	movi	r2,3
1000a89c:	f800283a 	ret
1000a8a0:	10c00226 	beq	r2,r3,1000a8ac <__fpclassifyd+0x6c>
1000a8a4:	0005883a 	mov	r2,zero
1000a8a8:	f800283a 	ret
1000a8ac:	2005003a 	cmpeq	r2,r4,zero
1000a8b0:	f800283a 	ret

1000a8b4 <_sbrk_r>:
1000a8b4:	defffd04 	addi	sp,sp,-12
1000a8b8:	dc000015 	stw	r16,0(sp)
1000a8bc:	04040074 	movhi	r16,4097
1000a8c0:	dc400115 	stw	r17,4(sp)
1000a8c4:	841f9404 	addi	r16,r16,32336
1000a8c8:	2023883a 	mov	r17,r4
1000a8cc:	2809883a 	mov	r4,r5
1000a8d0:	dfc00215 	stw	ra,8(sp)
1000a8d4:	80000015 	stw	zero,0(r16)
1000a8d8:	0011dec0 	call	10011dec <sbrk>
1000a8dc:	00ffffc4 	movi	r3,-1
1000a8e0:	10c00526 	beq	r2,r3,1000a8f8 <_sbrk_r+0x44>
1000a8e4:	dfc00217 	ldw	ra,8(sp)
1000a8e8:	dc400117 	ldw	r17,4(sp)
1000a8ec:	dc000017 	ldw	r16,0(sp)
1000a8f0:	dec00304 	addi	sp,sp,12
1000a8f4:	f800283a 	ret
1000a8f8:	80c00017 	ldw	r3,0(r16)
1000a8fc:	183ff926 	beq	r3,zero,1000a8e4 <__alt_data_end+0xf800a8e4>
1000a900:	88c00015 	stw	r3,0(r17)
1000a904:	003ff706 	br	1000a8e4 <__alt_data_end+0xf800a8e4>

1000a908 <__sread>:
1000a908:	defffe04 	addi	sp,sp,-8
1000a90c:	dc000015 	stw	r16,0(sp)
1000a910:	2821883a 	mov	r16,r5
1000a914:	2940038f 	ldh	r5,14(r5)
1000a918:	dfc00115 	stw	ra,4(sp)
1000a91c:	000dd340 	call	1000dd34 <_read_r>
1000a920:	10000716 	blt	r2,zero,1000a940 <__sread+0x38>
1000a924:	80c01417 	ldw	r3,80(r16)
1000a928:	1887883a 	add	r3,r3,r2
1000a92c:	80c01415 	stw	r3,80(r16)
1000a930:	dfc00117 	ldw	ra,4(sp)
1000a934:	dc000017 	ldw	r16,0(sp)
1000a938:	dec00204 	addi	sp,sp,8
1000a93c:	f800283a 	ret
1000a940:	80c0030b 	ldhu	r3,12(r16)
1000a944:	18fbffcc 	andi	r3,r3,61439
1000a948:	80c0030d 	sth	r3,12(r16)
1000a94c:	dfc00117 	ldw	ra,4(sp)
1000a950:	dc000017 	ldw	r16,0(sp)
1000a954:	dec00204 	addi	sp,sp,8
1000a958:	f800283a 	ret

1000a95c <__seofread>:
1000a95c:	0005883a 	mov	r2,zero
1000a960:	f800283a 	ret

1000a964 <__swrite>:
1000a964:	2880030b 	ldhu	r2,12(r5)
1000a968:	defffb04 	addi	sp,sp,-20
1000a96c:	dcc00315 	stw	r19,12(sp)
1000a970:	dc800215 	stw	r18,8(sp)
1000a974:	dc400115 	stw	r17,4(sp)
1000a978:	dc000015 	stw	r16,0(sp)
1000a97c:	dfc00415 	stw	ra,16(sp)
1000a980:	10c0400c 	andi	r3,r2,256
1000a984:	2821883a 	mov	r16,r5
1000a988:	2023883a 	mov	r17,r4
1000a98c:	3025883a 	mov	r18,r6
1000a990:	3827883a 	mov	r19,r7
1000a994:	18000526 	beq	r3,zero,1000a9ac <__swrite+0x48>
1000a998:	2940038f 	ldh	r5,14(r5)
1000a99c:	01c00084 	movi	r7,2
1000a9a0:	000d883a 	mov	r6,zero
1000a9a4:	000dcd40 	call	1000dcd4 <_lseek_r>
1000a9a8:	8080030b 	ldhu	r2,12(r16)
1000a9ac:	8140038f 	ldh	r5,14(r16)
1000a9b0:	10bbffcc 	andi	r2,r2,61439
1000a9b4:	980f883a 	mov	r7,r19
1000a9b8:	900d883a 	mov	r6,r18
1000a9bc:	8809883a 	mov	r4,r17
1000a9c0:	8080030d 	sth	r2,12(r16)
1000a9c4:	dfc00417 	ldw	ra,16(sp)
1000a9c8:	dcc00317 	ldw	r19,12(sp)
1000a9cc:	dc800217 	ldw	r18,8(sp)
1000a9d0:	dc400117 	ldw	r17,4(sp)
1000a9d4:	dc000017 	ldw	r16,0(sp)
1000a9d8:	dec00504 	addi	sp,sp,20
1000a9dc:	000d7881 	jmpi	1000d788 <_write_r>

1000a9e0 <__sseek>:
1000a9e0:	defffe04 	addi	sp,sp,-8
1000a9e4:	dc000015 	stw	r16,0(sp)
1000a9e8:	2821883a 	mov	r16,r5
1000a9ec:	2940038f 	ldh	r5,14(r5)
1000a9f0:	dfc00115 	stw	ra,4(sp)
1000a9f4:	000dcd40 	call	1000dcd4 <_lseek_r>
1000a9f8:	00ffffc4 	movi	r3,-1
1000a9fc:	10c00826 	beq	r2,r3,1000aa20 <__sseek+0x40>
1000aa00:	80c0030b 	ldhu	r3,12(r16)
1000aa04:	80801415 	stw	r2,80(r16)
1000aa08:	18c40014 	ori	r3,r3,4096
1000aa0c:	80c0030d 	sth	r3,12(r16)
1000aa10:	dfc00117 	ldw	ra,4(sp)
1000aa14:	dc000017 	ldw	r16,0(sp)
1000aa18:	dec00204 	addi	sp,sp,8
1000aa1c:	f800283a 	ret
1000aa20:	80c0030b 	ldhu	r3,12(r16)
1000aa24:	18fbffcc 	andi	r3,r3,61439
1000aa28:	80c0030d 	sth	r3,12(r16)
1000aa2c:	dfc00117 	ldw	ra,4(sp)
1000aa30:	dc000017 	ldw	r16,0(sp)
1000aa34:	dec00204 	addi	sp,sp,8
1000aa38:	f800283a 	ret

1000aa3c <__sclose>:
1000aa3c:	2940038f 	ldh	r5,14(r5)
1000aa40:	000d7e81 	jmpi	1000d7e8 <_close_r>

1000aa44 <strcmp>:
1000aa44:	2144b03a 	or	r2,r4,r5
1000aa48:	108000cc 	andi	r2,r2,3
1000aa4c:	1000171e 	bne	r2,zero,1000aaac <strcmp+0x68>
1000aa50:	20800017 	ldw	r2,0(r4)
1000aa54:	28c00017 	ldw	r3,0(r5)
1000aa58:	10c0141e 	bne	r2,r3,1000aaac <strcmp+0x68>
1000aa5c:	027fbff4 	movhi	r9,65279
1000aa60:	4a7fbfc4 	addi	r9,r9,-257
1000aa64:	0086303a 	nor	r3,zero,r2
1000aa68:	02202074 	movhi	r8,32897
1000aa6c:	1245883a 	add	r2,r2,r9
1000aa70:	42202004 	addi	r8,r8,-32640
1000aa74:	10c4703a 	and	r2,r2,r3
1000aa78:	1204703a 	and	r2,r2,r8
1000aa7c:	10000226 	beq	r2,zero,1000aa88 <strcmp+0x44>
1000aa80:	00002306 	br	1000ab10 <strcmp+0xcc>
1000aa84:	1000221e 	bne	r2,zero,1000ab10 <strcmp+0xcc>
1000aa88:	21000104 	addi	r4,r4,4
1000aa8c:	20c00017 	ldw	r3,0(r4)
1000aa90:	29400104 	addi	r5,r5,4
1000aa94:	29800017 	ldw	r6,0(r5)
1000aa98:	1a4f883a 	add	r7,r3,r9
1000aa9c:	00c4303a 	nor	r2,zero,r3
1000aaa0:	3884703a 	and	r2,r7,r2
1000aaa4:	1204703a 	and	r2,r2,r8
1000aaa8:	19bff626 	beq	r3,r6,1000aa84 <__alt_data_end+0xf800aa84>
1000aaac:	20800003 	ldbu	r2,0(r4)
1000aab0:	10c03fcc 	andi	r3,r2,255
1000aab4:	18c0201c 	xori	r3,r3,128
1000aab8:	18ffe004 	addi	r3,r3,-128
1000aabc:	18000c26 	beq	r3,zero,1000aaf0 <strcmp+0xac>
1000aac0:	29800007 	ldb	r6,0(r5)
1000aac4:	19800326 	beq	r3,r6,1000aad4 <strcmp+0x90>
1000aac8:	00001306 	br	1000ab18 <strcmp+0xd4>
1000aacc:	29800007 	ldb	r6,0(r5)
1000aad0:	11800b1e 	bne	r2,r6,1000ab00 <strcmp+0xbc>
1000aad4:	21000044 	addi	r4,r4,1
1000aad8:	20c00003 	ldbu	r3,0(r4)
1000aadc:	29400044 	addi	r5,r5,1
1000aae0:	18803fcc 	andi	r2,r3,255
1000aae4:	1080201c 	xori	r2,r2,128
1000aae8:	10bfe004 	addi	r2,r2,-128
1000aaec:	103ff71e 	bne	r2,zero,1000aacc <__alt_data_end+0xf800aacc>
1000aaf0:	0007883a 	mov	r3,zero
1000aaf4:	28800003 	ldbu	r2,0(r5)
1000aaf8:	1885c83a 	sub	r2,r3,r2
1000aafc:	f800283a 	ret
1000ab00:	28800003 	ldbu	r2,0(r5)
1000ab04:	18c03fcc 	andi	r3,r3,255
1000ab08:	1885c83a 	sub	r2,r3,r2
1000ab0c:	f800283a 	ret
1000ab10:	0005883a 	mov	r2,zero
1000ab14:	f800283a 	ret
1000ab18:	10c03fcc 	andi	r3,r2,255
1000ab1c:	003ff506 	br	1000aaf4 <__alt_data_end+0xf800aaf4>

1000ab20 <__ssprint_r>:
1000ab20:	30800217 	ldw	r2,8(r6)
1000ab24:	defff604 	addi	sp,sp,-40
1000ab28:	dc800215 	stw	r18,8(sp)
1000ab2c:	dfc00915 	stw	ra,36(sp)
1000ab30:	df000815 	stw	fp,32(sp)
1000ab34:	ddc00715 	stw	r23,28(sp)
1000ab38:	dd800615 	stw	r22,24(sp)
1000ab3c:	dd400515 	stw	r21,20(sp)
1000ab40:	dd000415 	stw	r20,16(sp)
1000ab44:	dcc00315 	stw	r19,12(sp)
1000ab48:	dc400115 	stw	r17,4(sp)
1000ab4c:	dc000015 	stw	r16,0(sp)
1000ab50:	3025883a 	mov	r18,r6
1000ab54:	10005826 	beq	r2,zero,1000acb8 <__ssprint_r+0x198>
1000ab58:	2027883a 	mov	r19,r4
1000ab5c:	35c00017 	ldw	r23,0(r6)
1000ab60:	29000017 	ldw	r4,0(r5)
1000ab64:	28800217 	ldw	r2,8(r5)
1000ab68:	2823883a 	mov	r17,r5
1000ab6c:	0039883a 	mov	fp,zero
1000ab70:	0021883a 	mov	r16,zero
1000ab74:	80003926 	beq	r16,zero,1000ac5c <__ssprint_r+0x13c>
1000ab78:	102b883a 	mov	r21,r2
1000ab7c:	102d883a 	mov	r22,r2
1000ab80:	80803a36 	bltu	r16,r2,1000ac6c <__ssprint_r+0x14c>
1000ab84:	88c0030b 	ldhu	r3,12(r17)
1000ab88:	1881200c 	andi	r2,r3,1152
1000ab8c:	10002626 	beq	r2,zero,1000ac28 <__ssprint_r+0x108>
1000ab90:	88800517 	ldw	r2,20(r17)
1000ab94:	89400417 	ldw	r5,16(r17)
1000ab98:	81800044 	addi	r6,r16,1
1000ab9c:	108f883a 	add	r7,r2,r2
1000aba0:	3885883a 	add	r2,r7,r2
1000aba4:	100ed7fa 	srli	r7,r2,31
1000aba8:	216dc83a 	sub	r22,r4,r5
1000abac:	3589883a 	add	r4,r6,r22
1000abb0:	3885883a 	add	r2,r7,r2
1000abb4:	102bd07a 	srai	r21,r2,1
1000abb8:	a80d883a 	mov	r6,r21
1000abbc:	a900022e 	bgeu	r21,r4,1000abc8 <__ssprint_r+0xa8>
1000abc0:	202b883a 	mov	r21,r4
1000abc4:	200d883a 	mov	r6,r4
1000abc8:	18c1000c 	andi	r3,r3,1024
1000abcc:	18002a26 	beq	r3,zero,1000ac78 <__ssprint_r+0x158>
1000abd0:	300b883a 	mov	r5,r6
1000abd4:	9809883a 	mov	r4,r19
1000abd8:	00085680 	call	10008568 <_malloc_r>
1000abdc:	1029883a 	mov	r20,r2
1000abe0:	10002c26 	beq	r2,zero,1000ac94 <__ssprint_r+0x174>
1000abe4:	89400417 	ldw	r5,16(r17)
1000abe8:	b00d883a 	mov	r6,r22
1000abec:	1009883a 	mov	r4,r2
1000abf0:	0008e580 	call	10008e58 <memcpy>
1000abf4:	8880030b 	ldhu	r2,12(r17)
1000abf8:	00fedfc4 	movi	r3,-1153
1000abfc:	10c4703a 	and	r2,r2,r3
1000ac00:	10802014 	ori	r2,r2,128
1000ac04:	8880030d 	sth	r2,12(r17)
1000ac08:	a589883a 	add	r4,r20,r22
1000ac0c:	adadc83a 	sub	r22,r21,r22
1000ac10:	8d400515 	stw	r21,20(r17)
1000ac14:	8d800215 	stw	r22,8(r17)
1000ac18:	8d000415 	stw	r20,16(r17)
1000ac1c:	89000015 	stw	r4,0(r17)
1000ac20:	802b883a 	mov	r21,r16
1000ac24:	802d883a 	mov	r22,r16
1000ac28:	b00d883a 	mov	r6,r22
1000ac2c:	e00b883a 	mov	r5,fp
1000ac30:	0008fa00 	call	10008fa0 <memmove>
1000ac34:	88800217 	ldw	r2,8(r17)
1000ac38:	89000017 	ldw	r4,0(r17)
1000ac3c:	90c00217 	ldw	r3,8(r18)
1000ac40:	1545c83a 	sub	r2,r2,r21
1000ac44:	2589883a 	add	r4,r4,r22
1000ac48:	88800215 	stw	r2,8(r17)
1000ac4c:	89000015 	stw	r4,0(r17)
1000ac50:	1c21c83a 	sub	r16,r3,r16
1000ac54:	94000215 	stw	r16,8(r18)
1000ac58:	80001726 	beq	r16,zero,1000acb8 <__ssprint_r+0x198>
1000ac5c:	bf000017 	ldw	fp,0(r23)
1000ac60:	bc000117 	ldw	r16,4(r23)
1000ac64:	bdc00204 	addi	r23,r23,8
1000ac68:	003fc206 	br	1000ab74 <__alt_data_end+0xf800ab74>
1000ac6c:	802b883a 	mov	r21,r16
1000ac70:	802d883a 	mov	r22,r16
1000ac74:	003fec06 	br	1000ac28 <__alt_data_end+0xf800ac28>
1000ac78:	9809883a 	mov	r4,r19
1000ac7c:	000a2dc0 	call	1000a2dc <_realloc_r>
1000ac80:	1029883a 	mov	r20,r2
1000ac84:	103fe01e 	bne	r2,zero,1000ac08 <__alt_data_end+0xf800ac08>
1000ac88:	89400417 	ldw	r5,16(r17)
1000ac8c:	9809883a 	mov	r4,r19
1000ac90:	00079700 	call	10007970 <_free_r>
1000ac94:	88c0030b 	ldhu	r3,12(r17)
1000ac98:	00800304 	movi	r2,12
1000ac9c:	98800015 	stw	r2,0(r19)
1000aca0:	18c01014 	ori	r3,r3,64
1000aca4:	88c0030d 	sth	r3,12(r17)
1000aca8:	00bfffc4 	movi	r2,-1
1000acac:	90000215 	stw	zero,8(r18)
1000acb0:	90000115 	stw	zero,4(r18)
1000acb4:	00000206 	br	1000acc0 <__ssprint_r+0x1a0>
1000acb8:	90000115 	stw	zero,4(r18)
1000acbc:	0005883a 	mov	r2,zero
1000acc0:	dfc00917 	ldw	ra,36(sp)
1000acc4:	df000817 	ldw	fp,32(sp)
1000acc8:	ddc00717 	ldw	r23,28(sp)
1000accc:	dd800617 	ldw	r22,24(sp)
1000acd0:	dd400517 	ldw	r21,20(sp)
1000acd4:	dd000417 	ldw	r20,16(sp)
1000acd8:	dcc00317 	ldw	r19,12(sp)
1000acdc:	dc800217 	ldw	r18,8(sp)
1000ace0:	dc400117 	ldw	r17,4(sp)
1000ace4:	dc000017 	ldw	r16,0(sp)
1000ace8:	dec00a04 	addi	sp,sp,40
1000acec:	f800283a 	ret

1000acf0 <___svfiprintf_internal_r>:
1000acf0:	2880030b 	ldhu	r2,12(r5)
1000acf4:	deffc804 	addi	sp,sp,-224
1000acf8:	dcc03115 	stw	r19,196(sp)
1000acfc:	dfc03715 	stw	ra,220(sp)
1000ad00:	df003615 	stw	fp,216(sp)
1000ad04:	ddc03515 	stw	r23,212(sp)
1000ad08:	dd803415 	stw	r22,208(sp)
1000ad0c:	dd403315 	stw	r21,204(sp)
1000ad10:	dd003215 	stw	r20,200(sp)
1000ad14:	dc803015 	stw	r18,192(sp)
1000ad18:	dc402f15 	stw	r17,188(sp)
1000ad1c:	dc002e15 	stw	r16,184(sp)
1000ad20:	d9402315 	stw	r5,140(sp)
1000ad24:	d9002715 	stw	r4,156(sp)
1000ad28:	1080200c 	andi	r2,r2,128
1000ad2c:	d9c02415 	stw	r7,144(sp)
1000ad30:	3027883a 	mov	r19,r6
1000ad34:	10000226 	beq	r2,zero,1000ad40 <___svfiprintf_internal_r+0x50>
1000ad38:	28800417 	ldw	r2,16(r5)
1000ad3c:	10046d26 	beq	r2,zero,1000bef4 <___svfiprintf_internal_r+0x1204>
1000ad40:	d8801a04 	addi	r2,sp,104
1000ad44:	d8c019c4 	addi	r3,sp,103
1000ad48:	05840074 	movhi	r22,4097
1000ad4c:	10c9c83a 	sub	r4,r2,r3
1000ad50:	b5904704 	addi	r22,r22,16668
1000ad54:	d8801e15 	stw	r2,120(sp)
1000ad58:	d8c01f15 	stw	r3,124(sp)
1000ad5c:	dec01a15 	stw	sp,104(sp)
1000ad60:	d8001c15 	stw	zero,112(sp)
1000ad64:	d8001b15 	stw	zero,108(sp)
1000ad68:	d811883a 	mov	r8,sp
1000ad6c:	d8002915 	stw	zero,164(sp)
1000ad70:	d8002615 	stw	zero,152(sp)
1000ad74:	d9002c15 	stw	r4,176(sp)
1000ad78:	98800007 	ldb	r2,0(r19)
1000ad7c:	10031426 	beq	r2,zero,1000b9d0 <___svfiprintf_internal_r+0xce0>
1000ad80:	00c00944 	movi	r3,37
1000ad84:	9825883a 	mov	r18,r19
1000ad88:	10c0021e 	bne	r2,r3,1000ad94 <___svfiprintf_internal_r+0xa4>
1000ad8c:	00001406 	br	1000ade0 <___svfiprintf_internal_r+0xf0>
1000ad90:	10c00326 	beq	r2,r3,1000ada0 <___svfiprintf_internal_r+0xb0>
1000ad94:	94800044 	addi	r18,r18,1
1000ad98:	90800007 	ldb	r2,0(r18)
1000ad9c:	103ffc1e 	bne	r2,zero,1000ad90 <__alt_data_end+0xf800ad90>
1000ada0:	94e1c83a 	sub	r16,r18,r19
1000ada4:	80000e26 	beq	r16,zero,1000ade0 <___svfiprintf_internal_r+0xf0>
1000ada8:	d8c01c17 	ldw	r3,112(sp)
1000adac:	d8801b17 	ldw	r2,108(sp)
1000adb0:	44c00015 	stw	r19,0(r8)
1000adb4:	1c07883a 	add	r3,r3,r16
1000adb8:	10800044 	addi	r2,r2,1
1000adbc:	d8c01c15 	stw	r3,112(sp)
1000adc0:	44000115 	stw	r16,4(r8)
1000adc4:	d8801b15 	stw	r2,108(sp)
1000adc8:	00c001c4 	movi	r3,7
1000adcc:	18835c16 	blt	r3,r2,1000bb40 <___svfiprintf_internal_r+0xe50>
1000add0:	42000204 	addi	r8,r8,8
1000add4:	d9402617 	ldw	r5,152(sp)
1000add8:	2c0b883a 	add	r5,r5,r16
1000addc:	d9402615 	stw	r5,152(sp)
1000ade0:	90800007 	ldb	r2,0(r18)
1000ade4:	1002fc26 	beq	r2,zero,1000b9d8 <___svfiprintf_internal_r+0xce8>
1000ade8:	0023883a 	mov	r17,zero
1000adec:	00bfffc4 	movi	r2,-1
1000adf0:	0021883a 	mov	r16,zero
1000adf4:	94c00044 	addi	r19,r18,1
1000adf8:	90c00047 	ldb	r3,1(r18)
1000adfc:	dc402105 	stb	r17,132(sp)
1000ae00:	d8001d85 	stb	zero,118(sp)
1000ae04:	002b883a 	mov	r21,zero
1000ae08:	d8802015 	stw	r2,128(sp)
1000ae0c:	d8002515 	stw	zero,148(sp)
1000ae10:	04801604 	movi	r18,88
1000ae14:	05000244 	movi	r20,9
1000ae18:	402f883a 	mov	r23,r8
1000ae1c:	8023883a 	mov	r17,r16
1000ae20:	9cc00044 	addi	r19,r19,1
1000ae24:	18bff804 	addi	r2,r3,-32
1000ae28:	9081fb36 	bltu	r18,r2,1000b618 <___svfiprintf_internal_r+0x928>
1000ae2c:	100490ba 	slli	r2,r2,2
1000ae30:	01040074 	movhi	r4,4097
1000ae34:	212b9104 	addi	r4,r4,-20924
1000ae38:	1105883a 	add	r2,r2,r4
1000ae3c:	10800017 	ldw	r2,0(r2)
1000ae40:	1000683a 	jmp	r2
1000ae44:	1000b044 	addi	zero,r2,705
1000ae48:	1000b618 	cmpnei	zero,r2,728
1000ae4c:	1000b618 	cmpnei	zero,r2,728
1000ae50:	1000b038 	rdprs	zero,r2,704
1000ae54:	1000b618 	cmpnei	zero,r2,728
1000ae58:	1000b618 	cmpnei	zero,r2,728
1000ae5c:	1000b618 	cmpnei	zero,r2,728
1000ae60:	1000b618 	cmpnei	zero,r2,728
1000ae64:	1000b618 	cmpnei	zero,r2,728
1000ae68:	1000b618 	cmpnei	zero,r2,728
1000ae6c:	1000afa8 	cmpgeui	zero,r2,702
1000ae70:	1000b1a4 	muli	zero,r2,710
1000ae74:	1000b618 	cmpnei	zero,r2,728
1000ae78:	1000afd0 	cmplti	zero,r2,703
1000ae7c:	1000b654 	ori	zero,r2,729
1000ae80:	1000b618 	cmpnei	zero,r2,728
1000ae84:	1000b648 	cmpgei	zero,r2,729
1000ae88:	1000b5dc 	xori	zero,r2,727
1000ae8c:	1000b5dc 	xori	zero,r2,727
1000ae90:	1000b5dc 	xori	zero,r2,727
1000ae94:	1000b5dc 	xori	zero,r2,727
1000ae98:	1000b5dc 	xori	zero,r2,727
1000ae9c:	1000b5dc 	xori	zero,r2,727
1000aea0:	1000b5dc 	xori	zero,r2,727
1000aea4:	1000b5dc 	xori	zero,r2,727
1000aea8:	1000b5dc 	xori	zero,r2,727
1000aeac:	1000b618 	cmpnei	zero,r2,728
1000aeb0:	1000b618 	cmpnei	zero,r2,728
1000aeb4:	1000b618 	cmpnei	zero,r2,728
1000aeb8:	1000b618 	cmpnei	zero,r2,728
1000aebc:	1000b618 	cmpnei	zero,r2,728
1000aec0:	1000b618 	cmpnei	zero,r2,728
1000aec4:	1000b618 	cmpnei	zero,r2,728
1000aec8:	1000b618 	cmpnei	zero,r2,728
1000aecc:	1000b618 	cmpnei	zero,r2,728
1000aed0:	1000b618 	cmpnei	zero,r2,728
1000aed4:	1000b560 	cmpeqi	zero,r2,725
1000aed8:	1000b618 	cmpnei	zero,r2,728
1000aedc:	1000b618 	cmpnei	zero,r2,728
1000aee0:	1000b618 	cmpnei	zero,r2,728
1000aee4:	1000b618 	cmpnei	zero,r2,728
1000aee8:	1000b618 	cmpnei	zero,r2,728
1000aeec:	1000b618 	cmpnei	zero,r2,728
1000aef0:	1000b618 	cmpnei	zero,r2,728
1000aef4:	1000b618 	cmpnei	zero,r2,728
1000aef8:	1000b618 	cmpnei	zero,r2,728
1000aefc:	1000b618 	cmpnei	zero,r2,728
1000af00:	1000b710 	cmplti	zero,r2,732
1000af04:	1000b618 	cmpnei	zero,r2,728
1000af08:	1000b618 	cmpnei	zero,r2,728
1000af0c:	1000b618 	cmpnei	zero,r2,728
1000af10:	1000b618 	cmpnei	zero,r2,728
1000af14:	1000b618 	cmpnei	zero,r2,728
1000af18:	1000b69c 	xori	zero,r2,730
1000af1c:	1000b618 	cmpnei	zero,r2,728
1000af20:	1000b618 	cmpnei	zero,r2,728
1000af24:	1000b39c 	xori	zero,r2,718
1000af28:	1000b618 	cmpnei	zero,r2,728
1000af2c:	1000b618 	cmpnei	zero,r2,728
1000af30:	1000b618 	cmpnei	zero,r2,728
1000af34:	1000b618 	cmpnei	zero,r2,728
1000af38:	1000b618 	cmpnei	zero,r2,728
1000af3c:	1000b618 	cmpnei	zero,r2,728
1000af40:	1000b618 	cmpnei	zero,r2,728
1000af44:	1000b618 	cmpnei	zero,r2,728
1000af48:	1000b618 	cmpnei	zero,r2,728
1000af4c:	1000b618 	cmpnei	zero,r2,728
1000af50:	1000b268 	cmpgeui	zero,r2,713
1000af54:	1000b44c 	andi	zero,r2,721
1000af58:	1000b618 	cmpnei	zero,r2,728
1000af5c:	1000b618 	cmpnei	zero,r2,728
1000af60:	1000b618 	cmpnei	zero,r2,728
1000af64:	1000b440 	call	11000b44 <_gp+0xfe2b28>
1000af68:	1000b44c 	andi	zero,r2,721
1000af6c:	1000b618 	cmpnei	zero,r2,728
1000af70:	1000b618 	cmpnei	zero,r2,728
1000af74:	1000b42c 	andhi	zero,r2,720
1000af78:	1000b618 	cmpnei	zero,r2,728
1000af7c:	1000b3ec 	andhi	zero,r2,719
1000af80:	1000b1b8 	rdprs	zero,r2,710
1000af84:	1000afdc 	xori	zero,r2,703
1000af88:	1000b554 	ori	zero,r2,725
1000af8c:	1000b618 	cmpnei	zero,r2,728
1000af90:	1000b500 	call	11000b50 <_gp+0xfe2b34>
1000af94:	1000b618 	cmpnei	zero,r2,728
1000af98:	1000b11c 	xori	zero,r2,708
1000af9c:	1000b618 	cmpnei	zero,r2,728
1000afa0:	1000b618 	cmpnei	zero,r2,728
1000afa4:	1000b068 	cmpgeui	zero,r2,705
1000afa8:	d9002417 	ldw	r4,144(sp)
1000afac:	d9402417 	ldw	r5,144(sp)
1000afb0:	21000017 	ldw	r4,0(r4)
1000afb4:	28800104 	addi	r2,r5,4
1000afb8:	d9002515 	stw	r4,148(sp)
1000afbc:	20032b0e 	bge	r4,zero,1000bc6c <___svfiprintf_internal_r+0xf7c>
1000afc0:	d8c02517 	ldw	r3,148(sp)
1000afc4:	d8802415 	stw	r2,144(sp)
1000afc8:	00c7c83a 	sub	r3,zero,r3
1000afcc:	d8c02515 	stw	r3,148(sp)
1000afd0:	8c400114 	ori	r17,r17,4
1000afd4:	98c00007 	ldb	r3,0(r19)
1000afd8:	003f9106 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000afdc:	00800c04 	movi	r2,48
1000afe0:	d9402417 	ldw	r5,144(sp)
1000afe4:	d9002017 	ldw	r4,128(sp)
1000afe8:	d8801d05 	stb	r2,116(sp)
1000afec:	00801e04 	movi	r2,120
1000aff0:	d8801d45 	stb	r2,117(sp)
1000aff4:	d8001d85 	stb	zero,118(sp)
1000aff8:	b811883a 	mov	r8,r23
1000affc:	28c00104 	addi	r3,r5,4
1000b000:	2c800017 	ldw	r18,0(r5)
1000b004:	0029883a 	mov	r20,zero
1000b008:	88800094 	ori	r2,r17,2
1000b00c:	20036316 	blt	r4,zero,1000bd9c <___svfiprintf_internal_r+0x10ac>
1000b010:	00bfdfc4 	movi	r2,-129
1000b014:	88a0703a 	and	r16,r17,r2
1000b018:	d8c02415 	stw	r3,144(sp)
1000b01c:	84000094 	ori	r16,r16,2
1000b020:	90031c26 	beq	r18,zero,1000bc94 <___svfiprintf_internal_r+0xfa4>
1000b024:	01440074 	movhi	r5,4097
1000b028:	294fde04 	addi	r5,r5,16248
1000b02c:	002b883a 	mov	r21,zero
1000b030:	d9402915 	stw	r5,164(sp)
1000b034:	00002906 	br	1000b0dc <___svfiprintf_internal_r+0x3ec>
1000b038:	8c400054 	ori	r17,r17,1
1000b03c:	98c00007 	ldb	r3,0(r19)
1000b040:	003f7706 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000b044:	a8803fcc 	andi	r2,r21,255
1000b048:	1080201c 	xori	r2,r2,128
1000b04c:	10bfe004 	addi	r2,r2,-128
1000b050:	10032a1e 	bne	r2,zero,1000bcfc <___svfiprintf_internal_r+0x100c>
1000b054:	00c00044 	movi	r3,1
1000b058:	d8c02105 	stb	r3,132(sp)
1000b05c:	05400804 	movi	r21,32
1000b060:	98c00007 	ldb	r3,0(r19)
1000b064:	003f6e06 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000b068:	8821883a 	mov	r16,r17
1000b06c:	dc402103 	ldbu	r17,132(sp)
1000b070:	b811883a 	mov	r8,r23
1000b074:	8c403fcc 	andi	r17,r17,255
1000b078:	8803f01e 	bne	r17,zero,1000c03c <___svfiprintf_internal_r+0x134c>
1000b07c:	00840074 	movhi	r2,4097
1000b080:	108fde04 	addi	r2,r2,16248
1000b084:	d8802915 	stw	r2,164(sp)
1000b088:	8080080c 	andi	r2,r16,32
1000b08c:	1000cd26 	beq	r2,zero,1000b3c4 <___svfiprintf_internal_r+0x6d4>
1000b090:	d9002417 	ldw	r4,144(sp)
1000b094:	24800017 	ldw	r18,0(r4)
1000b098:	25000117 	ldw	r20,4(r4)
1000b09c:	21000204 	addi	r4,r4,8
1000b0a0:	d9002415 	stw	r4,144(sp)
1000b0a4:	8080004c 	andi	r2,r16,1
1000b0a8:	1002c726 	beq	r2,zero,1000bbc8 <___svfiprintf_internal_r+0xed8>
1000b0ac:	9504b03a 	or	r2,r18,r20
1000b0b0:	1003061e 	bne	r2,zero,1000bccc <___svfiprintf_internal_r+0xfdc>
1000b0b4:	d9002017 	ldw	r4,128(sp)
1000b0b8:	d8001d85 	stb	zero,118(sp)
1000b0bc:	20033e16 	blt	r4,zero,1000bdb8 <___svfiprintf_internal_r+0x10c8>
1000b0c0:	00bfdfc4 	movi	r2,-129
1000b0c4:	80a0703a 	and	r16,r16,r2
1000b0c8:	d9402017 	ldw	r5,128(sp)
1000b0cc:	002b883a 	mov	r21,zero
1000b0d0:	28002826 	beq	r5,zero,1000b174 <___svfiprintf_internal_r+0x484>
1000b0d4:	0025883a 	mov	r18,zero
1000b0d8:	0029883a 	mov	r20,zero
1000b0dc:	d9002917 	ldw	r4,164(sp)
1000b0e0:	dc401a04 	addi	r17,sp,104
1000b0e4:	908003cc 	andi	r2,r18,15
1000b0e8:	a006973a 	slli	r3,r20,28
1000b0ec:	2085883a 	add	r2,r4,r2
1000b0f0:	9024d13a 	srli	r18,r18,4
1000b0f4:	10800003 	ldbu	r2,0(r2)
1000b0f8:	a028d13a 	srli	r20,r20,4
1000b0fc:	8c7fffc4 	addi	r17,r17,-1
1000b100:	1ca4b03a 	or	r18,r3,r18
1000b104:	88800005 	stb	r2,0(r17)
1000b108:	9504b03a 	or	r2,r18,r20
1000b10c:	103ff51e 	bne	r2,zero,1000b0e4 <__alt_data_end+0xf800b0e4>
1000b110:	d8801e17 	ldw	r2,120(sp)
1000b114:	1469c83a 	sub	r20,r2,r17
1000b118:	00001906 	br	1000b180 <___svfiprintf_internal_r+0x490>
1000b11c:	8821883a 	mov	r16,r17
1000b120:	dc402103 	ldbu	r17,132(sp)
1000b124:	b811883a 	mov	r8,r23
1000b128:	8c403fcc 	andi	r17,r17,255
1000b12c:	8803d01e 	bne	r17,zero,1000c070 <___svfiprintf_internal_r+0x1380>
1000b130:	8080080c 	andi	r2,r16,32
1000b134:	10016126 	beq	r2,zero,1000b6bc <___svfiprintf_internal_r+0x9cc>
1000b138:	d9002417 	ldw	r4,144(sp)
1000b13c:	d9402017 	ldw	r5,128(sp)
1000b140:	d8001d85 	stb	zero,118(sp)
1000b144:	20c00204 	addi	r3,r4,8
1000b148:	24800017 	ldw	r18,0(r4)
1000b14c:	25000117 	ldw	r20,4(r4)
1000b150:	28030f16 	blt	r5,zero,1000bd90 <___svfiprintf_internal_r+0x10a0>
1000b154:	013fdfc4 	movi	r4,-129
1000b158:	9504b03a 	or	r2,r18,r20
1000b15c:	d8c02415 	stw	r3,144(sp)
1000b160:	8120703a 	and	r16,r16,r4
1000b164:	002b883a 	mov	r21,zero
1000b168:	1000cd1e 	bne	r2,zero,1000b4a0 <___svfiprintf_internal_r+0x7b0>
1000b16c:	d8c02017 	ldw	r3,128(sp)
1000b170:	1803141e 	bne	r3,zero,1000bdc4 <___svfiprintf_internal_r+0x10d4>
1000b174:	d8002015 	stw	zero,128(sp)
1000b178:	0029883a 	mov	r20,zero
1000b17c:	dc401a04 	addi	r17,sp,104
1000b180:	dc802017 	ldw	r18,128(sp)
1000b184:	9500010e 	bge	r18,r20,1000b18c <___svfiprintf_internal_r+0x49c>
1000b188:	a025883a 	mov	r18,r20
1000b18c:	ad403fcc 	andi	r21,r21,255
1000b190:	ad40201c 	xori	r21,r21,128
1000b194:	ad7fe004 	addi	r21,r21,-128
1000b198:	a8003f26 	beq	r21,zero,1000b298 <___svfiprintf_internal_r+0x5a8>
1000b19c:	94800044 	addi	r18,r18,1
1000b1a0:	00003d06 	br	1000b298 <___svfiprintf_internal_r+0x5a8>
1000b1a4:	00c00044 	movi	r3,1
1000b1a8:	d8c02105 	stb	r3,132(sp)
1000b1ac:	05400ac4 	movi	r21,43
1000b1b0:	98c00007 	ldb	r3,0(r19)
1000b1b4:	003f1a06 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000b1b8:	8821883a 	mov	r16,r17
1000b1bc:	dc402103 	ldbu	r17,132(sp)
1000b1c0:	b811883a 	mov	r8,r23
1000b1c4:	8c403fcc 	andi	r17,r17,255
1000b1c8:	8803a71e 	bne	r17,zero,1000c068 <___svfiprintf_internal_r+0x1378>
1000b1cc:	8080080c 	andi	r2,r16,32
1000b1d0:	10015726 	beq	r2,zero,1000b730 <___svfiprintf_internal_r+0xa40>
1000b1d4:	d8c02417 	ldw	r3,144(sp)
1000b1d8:	d9002017 	ldw	r4,128(sp)
1000b1dc:	d8001d85 	stb	zero,118(sp)
1000b1e0:	18800204 	addi	r2,r3,8
1000b1e4:	1c800017 	ldw	r18,0(r3)
1000b1e8:	1d000117 	ldw	r20,4(r3)
1000b1ec:	2002db16 	blt	r4,zero,1000bd5c <___svfiprintf_internal_r+0x106c>
1000b1f0:	013fdfc4 	movi	r4,-129
1000b1f4:	9506b03a 	or	r3,r18,r20
1000b1f8:	d8802415 	stw	r2,144(sp)
1000b1fc:	8120703a 	and	r16,r16,r4
1000b200:	18015826 	beq	r3,zero,1000b764 <___svfiprintf_internal_r+0xa74>
1000b204:	002b883a 	mov	r21,zero
1000b208:	dc401a04 	addi	r17,sp,104
1000b20c:	9006d0fa 	srli	r3,r18,3
1000b210:	a008977a 	slli	r4,r20,29
1000b214:	a028d0fa 	srli	r20,r20,3
1000b218:	948001cc 	andi	r18,r18,7
1000b21c:	90800c04 	addi	r2,r18,48
1000b220:	8c7fffc4 	addi	r17,r17,-1
1000b224:	20e4b03a 	or	r18,r4,r3
1000b228:	88800005 	stb	r2,0(r17)
1000b22c:	9506b03a 	or	r3,r18,r20
1000b230:	183ff61e 	bne	r3,zero,1000b20c <__alt_data_end+0xf800b20c>
1000b234:	80c0004c 	andi	r3,r16,1
1000b238:	18028926 	beq	r3,zero,1000bc60 <___svfiprintf_internal_r+0xf70>
1000b23c:	10803fcc 	andi	r2,r2,255
1000b240:	1080201c 	xori	r2,r2,128
1000b244:	10bfe004 	addi	r2,r2,-128
1000b248:	00c00c04 	movi	r3,48
1000b24c:	10ffb026 	beq	r2,r3,1000b110 <__alt_data_end+0xf800b110>
1000b250:	88ffffc5 	stb	r3,-1(r17)
1000b254:	d8c01e17 	ldw	r3,120(sp)
1000b258:	88bfffc4 	addi	r2,r17,-1
1000b25c:	1023883a 	mov	r17,r2
1000b260:	18a9c83a 	sub	r20,r3,r2
1000b264:	003fc606 	br	1000b180 <__alt_data_end+0xf800b180>
1000b268:	d8c02417 	ldw	r3,144(sp)
1000b26c:	04800044 	movi	r18,1
1000b270:	8821883a 	mov	r16,r17
1000b274:	18800017 	ldw	r2,0(r3)
1000b278:	18c00104 	addi	r3,r3,4
1000b27c:	b811883a 	mov	r8,r23
1000b280:	d8001d85 	stb	zero,118(sp)
1000b284:	d8801005 	stb	r2,64(sp)
1000b288:	d8c02415 	stw	r3,144(sp)
1000b28c:	9029883a 	mov	r20,r18
1000b290:	dc401004 	addi	r17,sp,64
1000b294:	d8002015 	stw	zero,128(sp)
1000b298:	80c0008c 	andi	r3,r16,2
1000b29c:	d8c02115 	stw	r3,132(sp)
1000b2a0:	18000126 	beq	r3,zero,1000b2a8 <___svfiprintf_internal_r+0x5b8>
1000b2a4:	94800084 	addi	r18,r18,2
1000b2a8:	80c0210c 	andi	r3,r16,132
1000b2ac:	d8c02215 	stw	r3,136(sp)
1000b2b0:	1801321e 	bne	r3,zero,1000b77c <___svfiprintf_internal_r+0xa8c>
1000b2b4:	d9002517 	ldw	r4,148(sp)
1000b2b8:	24b9c83a 	sub	fp,r4,r18
1000b2bc:	07012f0e 	bge	zero,fp,1000b77c <___svfiprintf_internal_r+0xa8c>
1000b2c0:	02400404 	movi	r9,16
1000b2c4:	d8c01c17 	ldw	r3,112(sp)
1000b2c8:	d8801b17 	ldw	r2,108(sp)
1000b2cc:	4f03250e 	bge	r9,fp,1000bf64 <___svfiprintf_internal_r+0x1274>
1000b2d0:	01040074 	movhi	r4,4097
1000b2d4:	21104b04 	addi	r4,r4,16684
1000b2d8:	dc002a15 	stw	r16,168(sp)
1000b2dc:	dc402b15 	stw	r17,172(sp)
1000b2e0:	d9002815 	stw	r4,160(sp)
1000b2e4:	e023883a 	mov	r17,fp
1000b2e8:	482f883a 	mov	r23,r9
1000b2ec:	9839883a 	mov	fp,r19
1000b2f0:	054001c4 	movi	r21,7
1000b2f4:	9027883a 	mov	r19,r18
1000b2f8:	dc002717 	ldw	r16,156(sp)
1000b2fc:	dc802317 	ldw	r18,140(sp)
1000b300:	00000306 	br	1000b310 <___svfiprintf_internal_r+0x620>
1000b304:	8c7ffc04 	addi	r17,r17,-16
1000b308:	42000204 	addi	r8,r8,8
1000b30c:	bc40130e 	bge	r23,r17,1000b35c <___svfiprintf_internal_r+0x66c>
1000b310:	01440074 	movhi	r5,4097
1000b314:	18c00404 	addi	r3,r3,16
1000b318:	10800044 	addi	r2,r2,1
1000b31c:	29504b04 	addi	r5,r5,16684
1000b320:	41400015 	stw	r5,0(r8)
1000b324:	45c00115 	stw	r23,4(r8)
1000b328:	d8c01c15 	stw	r3,112(sp)
1000b32c:	d8801b15 	stw	r2,108(sp)
1000b330:	a8bff40e 	bge	r21,r2,1000b304 <__alt_data_end+0xf800b304>
1000b334:	d9801a04 	addi	r6,sp,104
1000b338:	900b883a 	mov	r5,r18
1000b33c:	8009883a 	mov	r4,r16
1000b340:	000ab200 	call	1000ab20 <__ssprint_r>
1000b344:	1001aa1e 	bne	r2,zero,1000b9f0 <___svfiprintf_internal_r+0xd00>
1000b348:	8c7ffc04 	addi	r17,r17,-16
1000b34c:	d8c01c17 	ldw	r3,112(sp)
1000b350:	d8801b17 	ldw	r2,108(sp)
1000b354:	d811883a 	mov	r8,sp
1000b358:	bc7fed16 	blt	r23,r17,1000b310 <__alt_data_end+0xf800b310>
1000b35c:	9825883a 	mov	r18,r19
1000b360:	dc002a17 	ldw	r16,168(sp)
1000b364:	e027883a 	mov	r19,fp
1000b368:	8839883a 	mov	fp,r17
1000b36c:	dc402b17 	ldw	r17,172(sp)
1000b370:	d9002817 	ldw	r4,160(sp)
1000b374:	e0c7883a 	add	r3,fp,r3
1000b378:	10800044 	addi	r2,r2,1
1000b37c:	41000015 	stw	r4,0(r8)
1000b380:	47000115 	stw	fp,4(r8)
1000b384:	d8c01c15 	stw	r3,112(sp)
1000b388:	d8801b15 	stw	r2,108(sp)
1000b38c:	010001c4 	movi	r4,7
1000b390:	20821616 	blt	r4,r2,1000bbec <___svfiprintf_internal_r+0xefc>
1000b394:	42000204 	addi	r8,r8,8
1000b398:	0000fa06 	br	1000b784 <___svfiprintf_internal_r+0xa94>
1000b39c:	8821883a 	mov	r16,r17
1000b3a0:	dc402103 	ldbu	r17,132(sp)
1000b3a4:	b811883a 	mov	r8,r23
1000b3a8:	8c403fcc 	andi	r17,r17,255
1000b3ac:	8803361e 	bne	r17,zero,1000c088 <___svfiprintf_internal_r+0x1398>
1000b3b0:	01440074 	movhi	r5,4097
1000b3b4:	294fd904 	addi	r5,r5,16228
1000b3b8:	d9402915 	stw	r5,164(sp)
1000b3bc:	8080080c 	andi	r2,r16,32
1000b3c0:	103f331e 	bne	r2,zero,1000b090 <__alt_data_end+0xf800b090>
1000b3c4:	8080040c 	andi	r2,r16,16
1000b3c8:	1002551e 	bne	r2,zero,1000bd20 <___svfiprintf_internal_r+0x1030>
1000b3cc:	8080100c 	andi	r2,r16,64
1000b3d0:	1002a626 	beq	r2,zero,1000be6c <___svfiprintf_internal_r+0x117c>
1000b3d4:	d8802417 	ldw	r2,144(sp)
1000b3d8:	0029883a 	mov	r20,zero
1000b3dc:	1480000b 	ldhu	r18,0(r2)
1000b3e0:	10800104 	addi	r2,r2,4
1000b3e4:	d8802415 	stw	r2,144(sp)
1000b3e8:	003f2e06 	br	1000b0a4 <__alt_data_end+0xf800b0a4>
1000b3ec:	8821883a 	mov	r16,r17
1000b3f0:	dc402103 	ldbu	r17,132(sp)
1000b3f4:	b811883a 	mov	r8,r23
1000b3f8:	8c403fcc 	andi	r17,r17,255
1000b3fc:	88030b1e 	bne	r17,zero,1000c02c <___svfiprintf_internal_r+0x133c>
1000b400:	8080080c 	andi	r2,r16,32
1000b404:	1002271e 	bne	r2,zero,1000bca4 <___svfiprintf_internal_r+0xfb4>
1000b408:	8080040c 	andi	r2,r16,16
1000b40c:	10028e26 	beq	r2,zero,1000be48 <___svfiprintf_internal_r+0x1158>
1000b410:	d8c02417 	ldw	r3,144(sp)
1000b414:	d9002617 	ldw	r4,152(sp)
1000b418:	18800017 	ldw	r2,0(r3)
1000b41c:	18c00104 	addi	r3,r3,4
1000b420:	d8c02415 	stw	r3,144(sp)
1000b424:	11000015 	stw	r4,0(r2)
1000b428:	003e5306 	br	1000ad78 <__alt_data_end+0xf800ad78>
1000b42c:	98c00007 	ldb	r3,0(r19)
1000b430:	01401b04 	movi	r5,108
1000b434:	19424f26 	beq	r3,r5,1000bd74 <___svfiprintf_internal_r+0x1084>
1000b438:	8c400414 	ori	r17,r17,16
1000b43c:	003e7806 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000b440:	8c401014 	ori	r17,r17,64
1000b444:	98c00007 	ldb	r3,0(r19)
1000b448:	003e7506 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000b44c:	8821883a 	mov	r16,r17
1000b450:	dc402103 	ldbu	r17,132(sp)
1000b454:	b811883a 	mov	r8,r23
1000b458:	8c403fcc 	andi	r17,r17,255
1000b45c:	8802fe1e 	bne	r17,zero,1000c058 <___svfiprintf_internal_r+0x1368>
1000b460:	8080080c 	andi	r2,r16,32
1000b464:	10004626 	beq	r2,zero,1000b580 <___svfiprintf_internal_r+0x890>
1000b468:	d9002417 	ldw	r4,144(sp)
1000b46c:	20800117 	ldw	r2,4(r4)
1000b470:	24800017 	ldw	r18,0(r4)
1000b474:	21000204 	addi	r4,r4,8
1000b478:	d9002415 	stw	r4,144(sp)
1000b47c:	1029883a 	mov	r20,r2
1000b480:	10004a16 	blt	r2,zero,1000b5ac <___svfiprintf_internal_r+0x8bc>
1000b484:	d9002017 	ldw	r4,128(sp)
1000b488:	dd401d83 	ldbu	r21,118(sp)
1000b48c:	2001eb16 	blt	r4,zero,1000bc3c <___svfiprintf_internal_r+0xf4c>
1000b490:	00ffdfc4 	movi	r3,-129
1000b494:	9504b03a 	or	r2,r18,r20
1000b498:	80e0703a 	and	r16,r16,r3
1000b49c:	103f3326 	beq	r2,zero,1000b16c <__alt_data_end+0xf800b16c>
1000b4a0:	a0009426 	beq	r20,zero,1000b6f4 <___svfiprintf_internal_r+0xa04>
1000b4a4:	dc401a04 	addi	r17,sp,104
1000b4a8:	402f883a 	mov	r23,r8
1000b4ac:	9009883a 	mov	r4,r18
1000b4b0:	a00b883a 	mov	r5,r20
1000b4b4:	01800284 	movi	r6,10
1000b4b8:	000f883a 	mov	r7,zero
1000b4bc:	000e7dc0 	call	1000e7dc <__umoddi3>
1000b4c0:	10800c04 	addi	r2,r2,48
1000b4c4:	8c7fffc4 	addi	r17,r17,-1
1000b4c8:	9009883a 	mov	r4,r18
1000b4cc:	a00b883a 	mov	r5,r20
1000b4d0:	88800005 	stb	r2,0(r17)
1000b4d4:	01800284 	movi	r6,10
1000b4d8:	000f883a 	mov	r7,zero
1000b4dc:	000e1e00 	call	1000e1e0 <__udivdi3>
1000b4e0:	1025883a 	mov	r18,r2
1000b4e4:	10c4b03a 	or	r2,r2,r3
1000b4e8:	1829883a 	mov	r20,r3
1000b4ec:	103fef1e 	bne	r2,zero,1000b4ac <__alt_data_end+0xf800b4ac>
1000b4f0:	d9001e17 	ldw	r4,120(sp)
1000b4f4:	b811883a 	mov	r8,r23
1000b4f8:	2469c83a 	sub	r20,r4,r17
1000b4fc:	003f2006 	br	1000b180 <__alt_data_end+0xf800b180>
1000b500:	d8802417 	ldw	r2,144(sp)
1000b504:	8821883a 	mov	r16,r17
1000b508:	d8001d85 	stb	zero,118(sp)
1000b50c:	14400017 	ldw	r17,0(r2)
1000b510:	b811883a 	mov	r8,r23
1000b514:	15c00104 	addi	r23,r2,4
1000b518:	88026c26 	beq	r17,zero,1000becc <___svfiprintf_internal_r+0x11dc>
1000b51c:	d8c02017 	ldw	r3,128(sp)
1000b520:	18025f16 	blt	r3,zero,1000bea0 <___svfiprintf_internal_r+0x11b0>
1000b524:	180d883a 	mov	r6,r3
1000b528:	000b883a 	mov	r5,zero
1000b52c:	8809883a 	mov	r4,r17
1000b530:	da002d15 	stw	r8,180(sp)
1000b534:	0008d740 	call	10008d74 <memchr>
1000b538:	da002d17 	ldw	r8,180(sp)
1000b53c:	1002a526 	beq	r2,zero,1000bfd4 <___svfiprintf_internal_r+0x12e4>
1000b540:	1469c83a 	sub	r20,r2,r17
1000b544:	dd401d83 	ldbu	r21,118(sp)
1000b548:	ddc02415 	stw	r23,144(sp)
1000b54c:	d8002015 	stw	zero,128(sp)
1000b550:	003f0b06 	br	1000b180 <__alt_data_end+0xf800b180>
1000b554:	8c400814 	ori	r17,r17,32
1000b558:	98c00007 	ldb	r3,0(r19)
1000b55c:	003e3006 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000b560:	8821883a 	mov	r16,r17
1000b564:	dc402103 	ldbu	r17,132(sp)
1000b568:	b811883a 	mov	r8,r23
1000b56c:	8c403fcc 	andi	r17,r17,255
1000b570:	8802b01e 	bne	r17,zero,1000c034 <___svfiprintf_internal_r+0x1344>
1000b574:	84000414 	ori	r16,r16,16
1000b578:	8080080c 	andi	r2,r16,32
1000b57c:	103fba1e 	bne	r2,zero,1000b468 <__alt_data_end+0xf800b468>
1000b580:	8080040c 	andi	r2,r16,16
1000b584:	1001df1e 	bne	r2,zero,1000bd04 <___svfiprintf_internal_r+0x1014>
1000b588:	8080100c 	andi	r2,r16,64
1000b58c:	10023d26 	beq	r2,zero,1000be84 <___svfiprintf_internal_r+0x1194>
1000b590:	d8802417 	ldw	r2,144(sp)
1000b594:	1480000f 	ldh	r18,0(r2)
1000b598:	10800104 	addi	r2,r2,4
1000b59c:	d8802415 	stw	r2,144(sp)
1000b5a0:	9029d7fa 	srai	r20,r18,31
1000b5a4:	a005883a 	mov	r2,r20
1000b5a8:	103fb60e 	bge	r2,zero,1000b484 <__alt_data_end+0xf800b484>
1000b5ac:	d9402017 	ldw	r5,128(sp)
1000b5b0:	04a5c83a 	sub	r18,zero,r18
1000b5b4:	05400b44 	movi	r21,45
1000b5b8:	9004c03a 	cmpne	r2,r18,zero
1000b5bc:	0529c83a 	sub	r20,zero,r20
1000b5c0:	dd401d85 	stb	r21,118(sp)
1000b5c4:	a0a9c83a 	sub	r20,r20,r2
1000b5c8:	28026c16 	blt	r5,zero,1000bf7c <___svfiprintf_internal_r+0x128c>
1000b5cc:	00bfdfc4 	movi	r2,-129
1000b5d0:	80a0703a 	and	r16,r16,r2
1000b5d4:	a03fb31e 	bne	r20,zero,1000b4a4 <__alt_data_end+0xf800b4a4>
1000b5d8:	00004606 	br	1000b6f4 <___svfiprintf_internal_r+0xa04>
1000b5dc:	9839883a 	mov	fp,r19
1000b5e0:	d8002515 	stw	zero,148(sp)
1000b5e4:	1c3ff404 	addi	r16,r3,-48
1000b5e8:	0009883a 	mov	r4,zero
1000b5ec:	01400284 	movi	r5,10
1000b5f0:	0000e400 	call	10000e40 <__mulsi3>
1000b5f4:	e0c00007 	ldb	r3,0(fp)
1000b5f8:	8089883a 	add	r4,r16,r2
1000b5fc:	9cc00044 	addi	r19,r19,1
1000b600:	1c3ff404 	addi	r16,r3,-48
1000b604:	9839883a 	mov	fp,r19
1000b608:	a43ff82e 	bgeu	r20,r16,1000b5ec <__alt_data_end+0xf800b5ec>
1000b60c:	d9002515 	stw	r4,148(sp)
1000b610:	18bff804 	addi	r2,r3,-32
1000b614:	90be052e 	bgeu	r18,r2,1000ae2c <__alt_data_end+0xf800ae2c>
1000b618:	8821883a 	mov	r16,r17
1000b61c:	dc402103 	ldbu	r17,132(sp)
1000b620:	b811883a 	mov	r8,r23
1000b624:	8c403fcc 	andi	r17,r17,255
1000b628:	88028d1e 	bne	r17,zero,1000c060 <___svfiprintf_internal_r+0x1370>
1000b62c:	1800ea26 	beq	r3,zero,1000b9d8 <___svfiprintf_internal_r+0xce8>
1000b630:	04800044 	movi	r18,1
1000b634:	d8c01005 	stb	r3,64(sp)
1000b638:	d8001d85 	stb	zero,118(sp)
1000b63c:	9029883a 	mov	r20,r18
1000b640:	dc401004 	addi	r17,sp,64
1000b644:	003f1306 	br	1000b294 <__alt_data_end+0xf800b294>
1000b648:	8c402014 	ori	r17,r17,128
1000b64c:	98c00007 	ldb	r3,0(r19)
1000b650:	003df306 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000b654:	98c00007 	ldb	r3,0(r19)
1000b658:	01000a84 	movi	r4,42
1000b65c:	9f000044 	addi	fp,r19,1
1000b660:	19026326 	beq	r3,r4,1000bff0 <___svfiprintf_internal_r+0x1300>
1000b664:	1c3ff404 	addi	r16,r3,-48
1000b668:	0009883a 	mov	r4,zero
1000b66c:	a4025636 	bltu	r20,r16,1000bfc8 <___svfiprintf_internal_r+0x12d8>
1000b670:	01400284 	movi	r5,10
1000b674:	0000e400 	call	10000e40 <__mulsi3>
1000b678:	e0c00007 	ldb	r3,0(fp)
1000b67c:	1409883a 	add	r4,r2,r16
1000b680:	e4c00044 	addi	r19,fp,1
1000b684:	1c3ff404 	addi	r16,r3,-48
1000b688:	9839883a 	mov	fp,r19
1000b68c:	a43ff82e 	bgeu	r20,r16,1000b670 <__alt_data_end+0xf800b670>
1000b690:	20020c16 	blt	r4,zero,1000bec4 <___svfiprintf_internal_r+0x11d4>
1000b694:	d9002015 	stw	r4,128(sp)
1000b698:	003de206 	br	1000ae24 <__alt_data_end+0xf800ae24>
1000b69c:	8821883a 	mov	r16,r17
1000b6a0:	dc402103 	ldbu	r17,132(sp)
1000b6a4:	b811883a 	mov	r8,r23
1000b6a8:	8c403fcc 	andi	r17,r17,255
1000b6ac:	8802721e 	bne	r17,zero,1000c078 <___svfiprintf_internal_r+0x1388>
1000b6b0:	84000414 	ori	r16,r16,16
1000b6b4:	8080080c 	andi	r2,r16,32
1000b6b8:	103e9f1e 	bne	r2,zero,1000b138 <__alt_data_end+0xf800b138>
1000b6bc:	8080040c 	andi	r2,r16,16
1000b6c0:	10015326 	beq	r2,zero,1000bc10 <___svfiprintf_internal_r+0xf20>
1000b6c4:	d8c02417 	ldw	r3,144(sp)
1000b6c8:	d9002017 	ldw	r4,128(sp)
1000b6cc:	d8001d85 	stb	zero,118(sp)
1000b6d0:	18800104 	addi	r2,r3,4
1000b6d4:	1c800017 	ldw	r18,0(r3)
1000b6d8:	0029883a 	mov	r20,zero
1000b6dc:	20015516 	blt	r4,zero,1000bc34 <___svfiprintf_internal_r+0xf44>
1000b6e0:	00ffdfc4 	movi	r3,-129
1000b6e4:	d8802415 	stw	r2,144(sp)
1000b6e8:	80e0703a 	and	r16,r16,r3
1000b6ec:	002b883a 	mov	r21,zero
1000b6f0:	903e9e26 	beq	r18,zero,1000b16c <__alt_data_end+0xf800b16c>
1000b6f4:	00800244 	movi	r2,9
1000b6f8:	14bf6a36 	bltu	r2,r18,1000b4a4 <__alt_data_end+0xf800b4a4>
1000b6fc:	94800c04 	addi	r18,r18,48
1000b700:	dc8019c5 	stb	r18,103(sp)
1000b704:	dd002c17 	ldw	r20,176(sp)
1000b708:	dc4019c4 	addi	r17,sp,103
1000b70c:	003e9c06 	br	1000b180 <__alt_data_end+0xf800b180>
1000b710:	8821883a 	mov	r16,r17
1000b714:	dc402103 	ldbu	r17,132(sp)
1000b718:	b811883a 	mov	r8,r23
1000b71c:	8c403fcc 	andi	r17,r17,255
1000b720:	8802571e 	bne	r17,zero,1000c080 <___svfiprintf_internal_r+0x1390>
1000b724:	84000414 	ori	r16,r16,16
1000b728:	8080080c 	andi	r2,r16,32
1000b72c:	103ea91e 	bne	r2,zero,1000b1d4 <__alt_data_end+0xf800b1d4>
1000b730:	8080040c 	andi	r2,r16,16
1000b734:	10018026 	beq	r2,zero,1000bd38 <___svfiprintf_internal_r+0x1048>
1000b738:	d9402417 	ldw	r5,144(sp)
1000b73c:	d8c02017 	ldw	r3,128(sp)
1000b740:	d8001d85 	stb	zero,118(sp)
1000b744:	28800104 	addi	r2,r5,4
1000b748:	2c800017 	ldw	r18,0(r5)
1000b74c:	0029883a 	mov	r20,zero
1000b750:	18018216 	blt	r3,zero,1000bd5c <___svfiprintf_internal_r+0x106c>
1000b754:	00ffdfc4 	movi	r3,-129
1000b758:	d8802415 	stw	r2,144(sp)
1000b75c:	80e0703a 	and	r16,r16,r3
1000b760:	903ea81e 	bne	r18,zero,1000b204 <__alt_data_end+0xf800b204>
1000b764:	d8802017 	ldw	r2,128(sp)
1000b768:	002b883a 	mov	r21,zero
1000b76c:	1001f226 	beq	r2,zero,1000bf38 <___svfiprintf_internal_r+0x1248>
1000b770:	0025883a 	mov	r18,zero
1000b774:	0029883a 	mov	r20,zero
1000b778:	003ea306 	br	1000b208 <__alt_data_end+0xf800b208>
1000b77c:	d8c01c17 	ldw	r3,112(sp)
1000b780:	d8801b17 	ldw	r2,108(sp)
1000b784:	d9001d87 	ldb	r4,118(sp)
1000b788:	20000b26 	beq	r4,zero,1000b7b8 <___svfiprintf_internal_r+0xac8>
1000b78c:	d9001d84 	addi	r4,sp,118
1000b790:	18c00044 	addi	r3,r3,1
1000b794:	10800044 	addi	r2,r2,1
1000b798:	41000015 	stw	r4,0(r8)
1000b79c:	01000044 	movi	r4,1
1000b7a0:	41000115 	stw	r4,4(r8)
1000b7a4:	d8c01c15 	stw	r3,112(sp)
1000b7a8:	d8801b15 	stw	r2,108(sp)
1000b7ac:	010001c4 	movi	r4,7
1000b7b0:	2080f316 	blt	r4,r2,1000bb80 <___svfiprintf_internal_r+0xe90>
1000b7b4:	42000204 	addi	r8,r8,8
1000b7b8:	d9402117 	ldw	r5,132(sp)
1000b7bc:	28000b26 	beq	r5,zero,1000b7ec <___svfiprintf_internal_r+0xafc>
1000b7c0:	d9001d04 	addi	r4,sp,116
1000b7c4:	18c00084 	addi	r3,r3,2
1000b7c8:	10800044 	addi	r2,r2,1
1000b7cc:	41000015 	stw	r4,0(r8)
1000b7d0:	01000084 	movi	r4,2
1000b7d4:	41000115 	stw	r4,4(r8)
1000b7d8:	d8c01c15 	stw	r3,112(sp)
1000b7dc:	d8801b15 	stw	r2,108(sp)
1000b7e0:	010001c4 	movi	r4,7
1000b7e4:	2080ef16 	blt	r4,r2,1000bba4 <___svfiprintf_internal_r+0xeb4>
1000b7e8:	42000204 	addi	r8,r8,8
1000b7ec:	d9402217 	ldw	r5,136(sp)
1000b7f0:	01002004 	movi	r4,128
1000b7f4:	29008f26 	beq	r5,r4,1000ba34 <___svfiprintf_internal_r+0xd44>
1000b7f8:	d9002017 	ldw	r4,128(sp)
1000b7fc:	252fc83a 	sub	r23,r4,r20
1000b800:	05c0310e 	bge	zero,r23,1000b8c8 <___svfiprintf_internal_r+0xbd8>
1000b804:	07000404 	movi	fp,16
1000b808:	e5c17d0e 	bge	fp,r23,1000be00 <___svfiprintf_internal_r+0x1110>
1000b80c:	01040074 	movhi	r4,4097
1000b810:	21104704 	addi	r4,r4,16668
1000b814:	dc002015 	stw	r16,128(sp)
1000b818:	dc402215 	stw	r17,136(sp)
1000b81c:	d9002115 	stw	r4,132(sp)
1000b820:	b823883a 	mov	r17,r23
1000b824:	054001c4 	movi	r21,7
1000b828:	982f883a 	mov	r23,r19
1000b82c:	dc002717 	ldw	r16,156(sp)
1000b830:	9027883a 	mov	r19,r18
1000b834:	dc802317 	ldw	r18,140(sp)
1000b838:	00000306 	br	1000b848 <___svfiprintf_internal_r+0xb58>
1000b83c:	8c7ffc04 	addi	r17,r17,-16
1000b840:	42000204 	addi	r8,r8,8
1000b844:	e440110e 	bge	fp,r17,1000b88c <___svfiprintf_internal_r+0xb9c>
1000b848:	18c00404 	addi	r3,r3,16
1000b84c:	10800044 	addi	r2,r2,1
1000b850:	45800015 	stw	r22,0(r8)
1000b854:	47000115 	stw	fp,4(r8)
1000b858:	d8c01c15 	stw	r3,112(sp)
1000b85c:	d8801b15 	stw	r2,108(sp)
1000b860:	a8bff60e 	bge	r21,r2,1000b83c <__alt_data_end+0xf800b83c>
1000b864:	d9801a04 	addi	r6,sp,104
1000b868:	900b883a 	mov	r5,r18
1000b86c:	8009883a 	mov	r4,r16
1000b870:	000ab200 	call	1000ab20 <__ssprint_r>
1000b874:	10005e1e 	bne	r2,zero,1000b9f0 <___svfiprintf_internal_r+0xd00>
1000b878:	8c7ffc04 	addi	r17,r17,-16
1000b87c:	d8c01c17 	ldw	r3,112(sp)
1000b880:	d8801b17 	ldw	r2,108(sp)
1000b884:	d811883a 	mov	r8,sp
1000b888:	e47fef16 	blt	fp,r17,1000b848 <__alt_data_end+0xf800b848>
1000b88c:	9825883a 	mov	r18,r19
1000b890:	dc002017 	ldw	r16,128(sp)
1000b894:	b827883a 	mov	r19,r23
1000b898:	882f883a 	mov	r23,r17
1000b89c:	dc402217 	ldw	r17,136(sp)
1000b8a0:	d9402117 	ldw	r5,132(sp)
1000b8a4:	1dc7883a 	add	r3,r3,r23
1000b8a8:	10800044 	addi	r2,r2,1
1000b8ac:	41400015 	stw	r5,0(r8)
1000b8b0:	45c00115 	stw	r23,4(r8)
1000b8b4:	d8c01c15 	stw	r3,112(sp)
1000b8b8:	d8801b15 	stw	r2,108(sp)
1000b8bc:	010001c4 	movi	r4,7
1000b8c0:	2080a616 	blt	r4,r2,1000bb5c <___svfiprintf_internal_r+0xe6c>
1000b8c4:	42000204 	addi	r8,r8,8
1000b8c8:	a0c7883a 	add	r3,r20,r3
1000b8cc:	10800044 	addi	r2,r2,1
1000b8d0:	44400015 	stw	r17,0(r8)
1000b8d4:	45000115 	stw	r20,4(r8)
1000b8d8:	d8c01c15 	stw	r3,112(sp)
1000b8dc:	d8801b15 	stw	r2,108(sp)
1000b8e0:	010001c4 	movi	r4,7
1000b8e4:	20808816 	blt	r4,r2,1000bb08 <___svfiprintf_internal_r+0xe18>
1000b8e8:	42000204 	addi	r8,r8,8
1000b8ec:	8400010c 	andi	r16,r16,4
1000b8f0:	80002c26 	beq	r16,zero,1000b9a4 <___svfiprintf_internal_r+0xcb4>
1000b8f4:	d8802517 	ldw	r2,148(sp)
1000b8f8:	14a1c83a 	sub	r16,r2,r18
1000b8fc:	0400290e 	bge	zero,r16,1000b9a4 <___svfiprintf_internal_r+0xcb4>
1000b900:	04400404 	movi	r17,16
1000b904:	d8801b17 	ldw	r2,108(sp)
1000b908:	8c01a70e 	bge	r17,r16,1000bfa8 <___svfiprintf_internal_r+0x12b8>
1000b90c:	01440074 	movhi	r5,4097
1000b910:	29504b04 	addi	r5,r5,16684
1000b914:	d9402815 	stw	r5,160(sp)
1000b918:	050001c4 	movi	r20,7
1000b91c:	dd402717 	ldw	r21,156(sp)
1000b920:	ddc02317 	ldw	r23,140(sp)
1000b924:	00000306 	br	1000b934 <___svfiprintf_internal_r+0xc44>
1000b928:	843ffc04 	addi	r16,r16,-16
1000b92c:	42000204 	addi	r8,r8,8
1000b930:	8c00130e 	bge	r17,r16,1000b980 <___svfiprintf_internal_r+0xc90>
1000b934:	01040074 	movhi	r4,4097
1000b938:	18c00404 	addi	r3,r3,16
1000b93c:	10800044 	addi	r2,r2,1
1000b940:	21104b04 	addi	r4,r4,16684
1000b944:	41000015 	stw	r4,0(r8)
1000b948:	44400115 	stw	r17,4(r8)
1000b94c:	d8c01c15 	stw	r3,112(sp)
1000b950:	d8801b15 	stw	r2,108(sp)
1000b954:	a0bff40e 	bge	r20,r2,1000b928 <__alt_data_end+0xf800b928>
1000b958:	d9801a04 	addi	r6,sp,104
1000b95c:	b80b883a 	mov	r5,r23
1000b960:	a809883a 	mov	r4,r21
1000b964:	000ab200 	call	1000ab20 <__ssprint_r>
1000b968:	1000211e 	bne	r2,zero,1000b9f0 <___svfiprintf_internal_r+0xd00>
1000b96c:	843ffc04 	addi	r16,r16,-16
1000b970:	d8c01c17 	ldw	r3,112(sp)
1000b974:	d8801b17 	ldw	r2,108(sp)
1000b978:	d811883a 	mov	r8,sp
1000b97c:	8c3fed16 	blt	r17,r16,1000b934 <__alt_data_end+0xf800b934>
1000b980:	d9402817 	ldw	r5,160(sp)
1000b984:	1c07883a 	add	r3,r3,r16
1000b988:	10800044 	addi	r2,r2,1
1000b98c:	41400015 	stw	r5,0(r8)
1000b990:	44000115 	stw	r16,4(r8)
1000b994:	d8c01c15 	stw	r3,112(sp)
1000b998:	d8801b15 	stw	r2,108(sp)
1000b99c:	010001c4 	movi	r4,7
1000b9a0:	2080b516 	blt	r4,r2,1000bc78 <___svfiprintf_internal_r+0xf88>
1000b9a4:	d8802517 	ldw	r2,148(sp)
1000b9a8:	1480010e 	bge	r2,r18,1000b9b0 <___svfiprintf_internal_r+0xcc0>
1000b9ac:	9005883a 	mov	r2,r18
1000b9b0:	d9002617 	ldw	r4,152(sp)
1000b9b4:	2089883a 	add	r4,r4,r2
1000b9b8:	d9002615 	stw	r4,152(sp)
1000b9bc:	18005a1e 	bne	r3,zero,1000bb28 <___svfiprintf_internal_r+0xe38>
1000b9c0:	98800007 	ldb	r2,0(r19)
1000b9c4:	d8001b15 	stw	zero,108(sp)
1000b9c8:	d811883a 	mov	r8,sp
1000b9cc:	103cec1e 	bne	r2,zero,1000ad80 <__alt_data_end+0xf800ad80>
1000b9d0:	9825883a 	mov	r18,r19
1000b9d4:	003d0206 	br	1000ade0 <__alt_data_end+0xf800ade0>
1000b9d8:	d8801c17 	ldw	r2,112(sp)
1000b9dc:	10000426 	beq	r2,zero,1000b9f0 <___svfiprintf_internal_r+0xd00>
1000b9e0:	d9402317 	ldw	r5,140(sp)
1000b9e4:	d9002717 	ldw	r4,156(sp)
1000b9e8:	d9801a04 	addi	r6,sp,104
1000b9ec:	000ab200 	call	1000ab20 <__ssprint_r>
1000b9f0:	d9402317 	ldw	r5,140(sp)
1000b9f4:	d8802617 	ldw	r2,152(sp)
1000b9f8:	28c0030b 	ldhu	r3,12(r5)
1000b9fc:	18c0100c 	andi	r3,r3,64
1000ba00:	18015c1e 	bne	r3,zero,1000bf74 <___svfiprintf_internal_r+0x1284>
1000ba04:	dfc03717 	ldw	ra,220(sp)
1000ba08:	df003617 	ldw	fp,216(sp)
1000ba0c:	ddc03517 	ldw	r23,212(sp)
1000ba10:	dd803417 	ldw	r22,208(sp)
1000ba14:	dd403317 	ldw	r21,204(sp)
1000ba18:	dd003217 	ldw	r20,200(sp)
1000ba1c:	dcc03117 	ldw	r19,196(sp)
1000ba20:	dc803017 	ldw	r18,192(sp)
1000ba24:	dc402f17 	ldw	r17,188(sp)
1000ba28:	dc002e17 	ldw	r16,184(sp)
1000ba2c:	dec03804 	addi	sp,sp,224
1000ba30:	f800283a 	ret
1000ba34:	d9002517 	ldw	r4,148(sp)
1000ba38:	24afc83a 	sub	r23,r4,r18
1000ba3c:	05ff6e0e 	bge	zero,r23,1000b7f8 <__alt_data_end+0xf800b7f8>
1000ba40:	07000404 	movi	fp,16
1000ba44:	e5c15c0e 	bge	fp,r23,1000bfb8 <___svfiprintf_internal_r+0x12c8>
1000ba48:	01040074 	movhi	r4,4097
1000ba4c:	21104704 	addi	r4,r4,16668
1000ba50:	dc002215 	stw	r16,136(sp)
1000ba54:	dc402815 	stw	r17,160(sp)
1000ba58:	d9002115 	stw	r4,132(sp)
1000ba5c:	b823883a 	mov	r17,r23
1000ba60:	054001c4 	movi	r21,7
1000ba64:	982f883a 	mov	r23,r19
1000ba68:	dc002717 	ldw	r16,156(sp)
1000ba6c:	9027883a 	mov	r19,r18
1000ba70:	dc802317 	ldw	r18,140(sp)
1000ba74:	00000306 	br	1000ba84 <___svfiprintf_internal_r+0xd94>
1000ba78:	8c7ffc04 	addi	r17,r17,-16
1000ba7c:	42000204 	addi	r8,r8,8
1000ba80:	e440110e 	bge	fp,r17,1000bac8 <___svfiprintf_internal_r+0xdd8>
1000ba84:	18c00404 	addi	r3,r3,16
1000ba88:	10800044 	addi	r2,r2,1
1000ba8c:	45800015 	stw	r22,0(r8)
1000ba90:	47000115 	stw	fp,4(r8)
1000ba94:	d8c01c15 	stw	r3,112(sp)
1000ba98:	d8801b15 	stw	r2,108(sp)
1000ba9c:	a8bff60e 	bge	r21,r2,1000ba78 <__alt_data_end+0xf800ba78>
1000baa0:	d9801a04 	addi	r6,sp,104
1000baa4:	900b883a 	mov	r5,r18
1000baa8:	8009883a 	mov	r4,r16
1000baac:	000ab200 	call	1000ab20 <__ssprint_r>
1000bab0:	103fcf1e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bab4:	8c7ffc04 	addi	r17,r17,-16
1000bab8:	d8c01c17 	ldw	r3,112(sp)
1000babc:	d8801b17 	ldw	r2,108(sp)
1000bac0:	d811883a 	mov	r8,sp
1000bac4:	e47fef16 	blt	fp,r17,1000ba84 <__alt_data_end+0xf800ba84>
1000bac8:	9825883a 	mov	r18,r19
1000bacc:	dc002217 	ldw	r16,136(sp)
1000bad0:	b827883a 	mov	r19,r23
1000bad4:	882f883a 	mov	r23,r17
1000bad8:	dc402817 	ldw	r17,160(sp)
1000badc:	d9402117 	ldw	r5,132(sp)
1000bae0:	1dc7883a 	add	r3,r3,r23
1000bae4:	10800044 	addi	r2,r2,1
1000bae8:	41400015 	stw	r5,0(r8)
1000baec:	45c00115 	stw	r23,4(r8)
1000baf0:	d8c01c15 	stw	r3,112(sp)
1000baf4:	d8801b15 	stw	r2,108(sp)
1000baf8:	010001c4 	movi	r4,7
1000bafc:	2080b716 	blt	r4,r2,1000bddc <___svfiprintf_internal_r+0x10ec>
1000bb00:	42000204 	addi	r8,r8,8
1000bb04:	003f3c06 	br	1000b7f8 <__alt_data_end+0xf800b7f8>
1000bb08:	d9402317 	ldw	r5,140(sp)
1000bb0c:	d9002717 	ldw	r4,156(sp)
1000bb10:	d9801a04 	addi	r6,sp,104
1000bb14:	000ab200 	call	1000ab20 <__ssprint_r>
1000bb18:	103fb51e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bb1c:	d8c01c17 	ldw	r3,112(sp)
1000bb20:	d811883a 	mov	r8,sp
1000bb24:	003f7106 	br	1000b8ec <__alt_data_end+0xf800b8ec>
1000bb28:	d9402317 	ldw	r5,140(sp)
1000bb2c:	d9002717 	ldw	r4,156(sp)
1000bb30:	d9801a04 	addi	r6,sp,104
1000bb34:	000ab200 	call	1000ab20 <__ssprint_r>
1000bb38:	103fa126 	beq	r2,zero,1000b9c0 <__alt_data_end+0xf800b9c0>
1000bb3c:	003fac06 	br	1000b9f0 <__alt_data_end+0xf800b9f0>
1000bb40:	d9402317 	ldw	r5,140(sp)
1000bb44:	d9002717 	ldw	r4,156(sp)
1000bb48:	d9801a04 	addi	r6,sp,104
1000bb4c:	000ab200 	call	1000ab20 <__ssprint_r>
1000bb50:	103fa71e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bb54:	d811883a 	mov	r8,sp
1000bb58:	003c9e06 	br	1000add4 <__alt_data_end+0xf800add4>
1000bb5c:	d9402317 	ldw	r5,140(sp)
1000bb60:	d9002717 	ldw	r4,156(sp)
1000bb64:	d9801a04 	addi	r6,sp,104
1000bb68:	000ab200 	call	1000ab20 <__ssprint_r>
1000bb6c:	103fa01e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bb70:	d8c01c17 	ldw	r3,112(sp)
1000bb74:	d8801b17 	ldw	r2,108(sp)
1000bb78:	d811883a 	mov	r8,sp
1000bb7c:	003f5206 	br	1000b8c8 <__alt_data_end+0xf800b8c8>
1000bb80:	d9402317 	ldw	r5,140(sp)
1000bb84:	d9002717 	ldw	r4,156(sp)
1000bb88:	d9801a04 	addi	r6,sp,104
1000bb8c:	000ab200 	call	1000ab20 <__ssprint_r>
1000bb90:	103f971e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bb94:	d8c01c17 	ldw	r3,112(sp)
1000bb98:	d8801b17 	ldw	r2,108(sp)
1000bb9c:	d811883a 	mov	r8,sp
1000bba0:	003f0506 	br	1000b7b8 <__alt_data_end+0xf800b7b8>
1000bba4:	d9402317 	ldw	r5,140(sp)
1000bba8:	d9002717 	ldw	r4,156(sp)
1000bbac:	d9801a04 	addi	r6,sp,104
1000bbb0:	000ab200 	call	1000ab20 <__ssprint_r>
1000bbb4:	103f8e1e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bbb8:	d8c01c17 	ldw	r3,112(sp)
1000bbbc:	d8801b17 	ldw	r2,108(sp)
1000bbc0:	d811883a 	mov	r8,sp
1000bbc4:	003f0906 	br	1000b7ec <__alt_data_end+0xf800b7ec>
1000bbc8:	d9402017 	ldw	r5,128(sp)
1000bbcc:	d8001d85 	stb	zero,118(sp)
1000bbd0:	28007716 	blt	r5,zero,1000bdb0 <___svfiprintf_internal_r+0x10c0>
1000bbd4:	00ffdfc4 	movi	r3,-129
1000bbd8:	9504b03a 	or	r2,r18,r20
1000bbdc:	80e0703a 	and	r16,r16,r3
1000bbe0:	103d3926 	beq	r2,zero,1000b0c8 <__alt_data_end+0xf800b0c8>
1000bbe4:	002b883a 	mov	r21,zero
1000bbe8:	003d3c06 	br	1000b0dc <__alt_data_end+0xf800b0dc>
1000bbec:	d9402317 	ldw	r5,140(sp)
1000bbf0:	d9002717 	ldw	r4,156(sp)
1000bbf4:	d9801a04 	addi	r6,sp,104
1000bbf8:	000ab200 	call	1000ab20 <__ssprint_r>
1000bbfc:	103f7c1e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bc00:	d8c01c17 	ldw	r3,112(sp)
1000bc04:	d8801b17 	ldw	r2,108(sp)
1000bc08:	d811883a 	mov	r8,sp
1000bc0c:	003edd06 	br	1000b784 <__alt_data_end+0xf800b784>
1000bc10:	8080100c 	andi	r2,r16,64
1000bc14:	d8001d85 	stb	zero,118(sp)
1000bc18:	10008426 	beq	r2,zero,1000be2c <___svfiprintf_internal_r+0x113c>
1000bc1c:	d9402417 	ldw	r5,144(sp)
1000bc20:	d8c02017 	ldw	r3,128(sp)
1000bc24:	0029883a 	mov	r20,zero
1000bc28:	28800104 	addi	r2,r5,4
1000bc2c:	2c80000b 	ldhu	r18,0(r5)
1000bc30:	183eab0e 	bge	r3,zero,1000b6e0 <__alt_data_end+0xf800b6e0>
1000bc34:	d8802415 	stw	r2,144(sp)
1000bc38:	002b883a 	mov	r21,zero
1000bc3c:	9504b03a 	or	r2,r18,r20
1000bc40:	103e171e 	bne	r2,zero,1000b4a0 <__alt_data_end+0xf800b4a0>
1000bc44:	00800044 	movi	r2,1
1000bc48:	10803fcc 	andi	r2,r2,255
1000bc4c:	00c00044 	movi	r3,1
1000bc50:	10c05c26 	beq	r2,r3,1000bdc4 <___svfiprintf_internal_r+0x10d4>
1000bc54:	00c00084 	movi	r3,2
1000bc58:	10fd1e26 	beq	r2,r3,1000b0d4 <__alt_data_end+0xf800b0d4>
1000bc5c:	003ec406 	br	1000b770 <__alt_data_end+0xf800b770>
1000bc60:	d9401e17 	ldw	r5,120(sp)
1000bc64:	2c69c83a 	sub	r20,r5,r17
1000bc68:	003d4506 	br	1000b180 <__alt_data_end+0xf800b180>
1000bc6c:	d8802415 	stw	r2,144(sp)
1000bc70:	98c00007 	ldb	r3,0(r19)
1000bc74:	003c6a06 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000bc78:	d9402317 	ldw	r5,140(sp)
1000bc7c:	d9002717 	ldw	r4,156(sp)
1000bc80:	d9801a04 	addi	r6,sp,104
1000bc84:	000ab200 	call	1000ab20 <__ssprint_r>
1000bc88:	103f591e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bc8c:	d8c01c17 	ldw	r3,112(sp)
1000bc90:	003f4406 	br	1000b9a4 <__alt_data_end+0xf800b9a4>
1000bc94:	01440074 	movhi	r5,4097
1000bc98:	294fde04 	addi	r5,r5,16248
1000bc9c:	d9402915 	stw	r5,164(sp)
1000bca0:	003d0906 	br	1000b0c8 <__alt_data_end+0xf800b0c8>
1000bca4:	d8c02417 	ldw	r3,144(sp)
1000bca8:	d9002617 	ldw	r4,152(sp)
1000bcac:	d9402417 	ldw	r5,144(sp)
1000bcb0:	18800017 	ldw	r2,0(r3)
1000bcb4:	2007d7fa 	srai	r3,r4,31
1000bcb8:	29400104 	addi	r5,r5,4
1000bcbc:	d9402415 	stw	r5,144(sp)
1000bcc0:	11000015 	stw	r4,0(r2)
1000bcc4:	10c00115 	stw	r3,4(r2)
1000bcc8:	003c2b06 	br	1000ad78 <__alt_data_end+0xf800ad78>
1000bccc:	d8c01d45 	stb	r3,117(sp)
1000bcd0:	d8c02017 	ldw	r3,128(sp)
1000bcd4:	00800c04 	movi	r2,48
1000bcd8:	d8801d05 	stb	r2,116(sp)
1000bcdc:	d8001d85 	stb	zero,118(sp)
1000bce0:	80800094 	ori	r2,r16,2
1000bce4:	1800ac16 	blt	r3,zero,1000bf98 <___svfiprintf_internal_r+0x12a8>
1000bce8:	00bfdfc4 	movi	r2,-129
1000bcec:	80a0703a 	and	r16,r16,r2
1000bcf0:	84000094 	ori	r16,r16,2
1000bcf4:	002b883a 	mov	r21,zero
1000bcf8:	003cf806 	br	1000b0dc <__alt_data_end+0xf800b0dc>
1000bcfc:	98c00007 	ldb	r3,0(r19)
1000bd00:	003c4706 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000bd04:	d9402417 	ldw	r5,144(sp)
1000bd08:	2c800017 	ldw	r18,0(r5)
1000bd0c:	29400104 	addi	r5,r5,4
1000bd10:	d9402415 	stw	r5,144(sp)
1000bd14:	9029d7fa 	srai	r20,r18,31
1000bd18:	a005883a 	mov	r2,r20
1000bd1c:	003dd806 	br	1000b480 <__alt_data_end+0xf800b480>
1000bd20:	d9402417 	ldw	r5,144(sp)
1000bd24:	0029883a 	mov	r20,zero
1000bd28:	2c800017 	ldw	r18,0(r5)
1000bd2c:	29400104 	addi	r5,r5,4
1000bd30:	d9402415 	stw	r5,144(sp)
1000bd34:	003cdb06 	br	1000b0a4 <__alt_data_end+0xf800b0a4>
1000bd38:	8080100c 	andi	r2,r16,64
1000bd3c:	d8001d85 	stb	zero,118(sp)
1000bd40:	10003326 	beq	r2,zero,1000be10 <___svfiprintf_internal_r+0x1120>
1000bd44:	d9002417 	ldw	r4,144(sp)
1000bd48:	d9402017 	ldw	r5,128(sp)
1000bd4c:	0029883a 	mov	r20,zero
1000bd50:	20800104 	addi	r2,r4,4
1000bd54:	2480000b 	ldhu	r18,0(r4)
1000bd58:	283e7e0e 	bge	r5,zero,1000b754 <__alt_data_end+0xf800b754>
1000bd5c:	9506b03a 	or	r3,r18,r20
1000bd60:	d8802415 	stw	r2,144(sp)
1000bd64:	183d271e 	bne	r3,zero,1000b204 <__alt_data_end+0xf800b204>
1000bd68:	002b883a 	mov	r21,zero
1000bd6c:	0005883a 	mov	r2,zero
1000bd70:	003fb506 	br	1000bc48 <__alt_data_end+0xf800bc48>
1000bd74:	98c00043 	ldbu	r3,1(r19)
1000bd78:	8c400814 	ori	r17,r17,32
1000bd7c:	9cc00044 	addi	r19,r19,1
1000bd80:	18c03fcc 	andi	r3,r3,255
1000bd84:	18c0201c 	xori	r3,r3,128
1000bd88:	18ffe004 	addi	r3,r3,-128
1000bd8c:	003c2406 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000bd90:	d8c02415 	stw	r3,144(sp)
1000bd94:	002b883a 	mov	r21,zero
1000bd98:	003fa806 	br	1000bc3c <__alt_data_end+0xf800bc3c>
1000bd9c:	01040074 	movhi	r4,4097
1000bda0:	210fde04 	addi	r4,r4,16248
1000bda4:	d9002915 	stw	r4,164(sp)
1000bda8:	d8c02415 	stw	r3,144(sp)
1000bdac:	1021883a 	mov	r16,r2
1000bdb0:	9504b03a 	or	r2,r18,r20
1000bdb4:	103f8b1e 	bne	r2,zero,1000bbe4 <__alt_data_end+0xf800bbe4>
1000bdb8:	002b883a 	mov	r21,zero
1000bdbc:	00800084 	movi	r2,2
1000bdc0:	003fa106 	br	1000bc48 <__alt_data_end+0xf800bc48>
1000bdc4:	0025883a 	mov	r18,zero
1000bdc8:	94800c04 	addi	r18,r18,48
1000bdcc:	dc8019c5 	stb	r18,103(sp)
1000bdd0:	dd002c17 	ldw	r20,176(sp)
1000bdd4:	dc4019c4 	addi	r17,sp,103
1000bdd8:	003ce906 	br	1000b180 <__alt_data_end+0xf800b180>
1000bddc:	d9402317 	ldw	r5,140(sp)
1000bde0:	d9002717 	ldw	r4,156(sp)
1000bde4:	d9801a04 	addi	r6,sp,104
1000bde8:	000ab200 	call	1000ab20 <__ssprint_r>
1000bdec:	103f001e 	bne	r2,zero,1000b9f0 <__alt_data_end+0xf800b9f0>
1000bdf0:	d8c01c17 	ldw	r3,112(sp)
1000bdf4:	d8801b17 	ldw	r2,108(sp)
1000bdf8:	d811883a 	mov	r8,sp
1000bdfc:	003e7e06 	br	1000b7f8 <__alt_data_end+0xf800b7f8>
1000be00:	01440074 	movhi	r5,4097
1000be04:	29504704 	addi	r5,r5,16668
1000be08:	d9402115 	stw	r5,132(sp)
1000be0c:	003ea406 	br	1000b8a0 <__alt_data_end+0xf800b8a0>
1000be10:	d8c02417 	ldw	r3,144(sp)
1000be14:	d9002017 	ldw	r4,128(sp)
1000be18:	0029883a 	mov	r20,zero
1000be1c:	18800104 	addi	r2,r3,4
1000be20:	1c800017 	ldw	r18,0(r3)
1000be24:	203e4b0e 	bge	r4,zero,1000b754 <__alt_data_end+0xf800b754>
1000be28:	003fcc06 	br	1000bd5c <__alt_data_end+0xf800bd5c>
1000be2c:	d9002417 	ldw	r4,144(sp)
1000be30:	d9402017 	ldw	r5,128(sp)
1000be34:	0029883a 	mov	r20,zero
1000be38:	20800104 	addi	r2,r4,4
1000be3c:	24800017 	ldw	r18,0(r4)
1000be40:	283e270e 	bge	r5,zero,1000b6e0 <__alt_data_end+0xf800b6e0>
1000be44:	003f7b06 	br	1000bc34 <__alt_data_end+0xf800bc34>
1000be48:	8400100c 	andi	r16,r16,64
1000be4c:	80003326 	beq	r16,zero,1000bf1c <___svfiprintf_internal_r+0x122c>
1000be50:	d9402417 	ldw	r5,144(sp)
1000be54:	d8c02617 	ldw	r3,152(sp)
1000be58:	28800017 	ldw	r2,0(r5)
1000be5c:	29400104 	addi	r5,r5,4
1000be60:	d9402415 	stw	r5,144(sp)
1000be64:	10c0000d 	sth	r3,0(r2)
1000be68:	003bc306 	br	1000ad78 <__alt_data_end+0xf800ad78>
1000be6c:	d9002417 	ldw	r4,144(sp)
1000be70:	0029883a 	mov	r20,zero
1000be74:	24800017 	ldw	r18,0(r4)
1000be78:	21000104 	addi	r4,r4,4
1000be7c:	d9002415 	stw	r4,144(sp)
1000be80:	003c8806 	br	1000b0a4 <__alt_data_end+0xf800b0a4>
1000be84:	d8c02417 	ldw	r3,144(sp)
1000be88:	1c800017 	ldw	r18,0(r3)
1000be8c:	18c00104 	addi	r3,r3,4
1000be90:	d8c02415 	stw	r3,144(sp)
1000be94:	9029d7fa 	srai	r20,r18,31
1000be98:	a005883a 	mov	r2,r20
1000be9c:	003d7806 	br	1000b480 <__alt_data_end+0xf800b480>
1000bea0:	8809883a 	mov	r4,r17
1000bea4:	da002d15 	stw	r8,180(sp)
1000bea8:	00010e80 	call	100010e8 <strlen>
1000beac:	1029883a 	mov	r20,r2
1000beb0:	dd401d83 	ldbu	r21,118(sp)
1000beb4:	ddc02415 	stw	r23,144(sp)
1000beb8:	d8002015 	stw	zero,128(sp)
1000bebc:	da002d17 	ldw	r8,180(sp)
1000bec0:	003caf06 	br	1000b180 <__alt_data_end+0xf800b180>
1000bec4:	013fffc4 	movi	r4,-1
1000bec8:	003df206 	br	1000b694 <__alt_data_end+0xf800b694>
1000becc:	dd002017 	ldw	r20,128(sp)
1000bed0:	00800184 	movi	r2,6
1000bed4:	1500012e 	bgeu	r2,r20,1000bedc <___svfiprintf_internal_r+0x11ec>
1000bed8:	1029883a 	mov	r20,r2
1000bedc:	a025883a 	mov	r18,r20
1000bee0:	a0004116 	blt	r20,zero,1000bfe8 <___svfiprintf_internal_r+0x12f8>
1000bee4:	04440074 	movhi	r17,4097
1000bee8:	ddc02415 	stw	r23,144(sp)
1000beec:	8c4fe304 	addi	r17,r17,16268
1000bef0:	003ce806 	br	1000b294 <__alt_data_end+0xf800b294>
1000bef4:	04001004 	movi	r16,64
1000bef8:	800b883a 	mov	r5,r16
1000befc:	00085680 	call	10008568 <_malloc_r>
1000bf00:	d8c02317 	ldw	r3,140(sp)
1000bf04:	18800015 	stw	r2,0(r3)
1000bf08:	18800415 	stw	r2,16(r3)
1000bf0c:	10004d26 	beq	r2,zero,1000c044 <___svfiprintf_internal_r+0x1354>
1000bf10:	d9402317 	ldw	r5,140(sp)
1000bf14:	2c000515 	stw	r16,20(r5)
1000bf18:	003b8906 	br	1000ad40 <__alt_data_end+0xf800ad40>
1000bf1c:	d9002417 	ldw	r4,144(sp)
1000bf20:	d9402617 	ldw	r5,152(sp)
1000bf24:	20800017 	ldw	r2,0(r4)
1000bf28:	21000104 	addi	r4,r4,4
1000bf2c:	d9002415 	stw	r4,144(sp)
1000bf30:	11400015 	stw	r5,0(r2)
1000bf34:	003b9006 	br	1000ad78 <__alt_data_end+0xf800ad78>
1000bf38:	8080004c 	andi	r2,r16,1
1000bf3c:	002b883a 	mov	r21,zero
1000bf40:	10000526 	beq	r2,zero,1000bf58 <___svfiprintf_internal_r+0x1268>
1000bf44:	00800c04 	movi	r2,48
1000bf48:	d88019c5 	stb	r2,103(sp)
1000bf4c:	dd002c17 	ldw	r20,176(sp)
1000bf50:	dc4019c4 	addi	r17,sp,103
1000bf54:	003c8a06 	br	1000b180 <__alt_data_end+0xf800b180>
1000bf58:	0029883a 	mov	r20,zero
1000bf5c:	dc401a04 	addi	r17,sp,104
1000bf60:	003c8706 	br	1000b180 <__alt_data_end+0xf800b180>
1000bf64:	01440074 	movhi	r5,4097
1000bf68:	29504b04 	addi	r5,r5,16684
1000bf6c:	d9402815 	stw	r5,160(sp)
1000bf70:	003cff06 	br	1000b370 <__alt_data_end+0xf800b370>
1000bf74:	00bfffc4 	movi	r2,-1
1000bf78:	003ea206 	br	1000ba04 <__alt_data_end+0xf800ba04>
1000bf7c:	00800044 	movi	r2,1
1000bf80:	10803fcc 	andi	r2,r2,255
1000bf84:	00c00044 	movi	r3,1
1000bf88:	10fd4526 	beq	r2,r3,1000b4a0 <__alt_data_end+0xf800b4a0>
1000bf8c:	00c00084 	movi	r3,2
1000bf90:	10fc5226 	beq	r2,r3,1000b0dc <__alt_data_end+0xf800b0dc>
1000bf94:	003c9c06 	br	1000b208 <__alt_data_end+0xf800b208>
1000bf98:	1021883a 	mov	r16,r2
1000bf9c:	002b883a 	mov	r21,zero
1000bfa0:	00800084 	movi	r2,2
1000bfa4:	003ff606 	br	1000bf80 <__alt_data_end+0xf800bf80>
1000bfa8:	01040074 	movhi	r4,4097
1000bfac:	21104b04 	addi	r4,r4,16684
1000bfb0:	d9002815 	stw	r4,160(sp)
1000bfb4:	003e7206 	br	1000b980 <__alt_data_end+0xf800b980>
1000bfb8:	01440074 	movhi	r5,4097
1000bfbc:	29504704 	addi	r5,r5,16668
1000bfc0:	d9402115 	stw	r5,132(sp)
1000bfc4:	003ec506 	br	1000badc <__alt_data_end+0xf800badc>
1000bfc8:	e027883a 	mov	r19,fp
1000bfcc:	d8002015 	stw	zero,128(sp)
1000bfd0:	003b9406 	br	1000ae24 <__alt_data_end+0xf800ae24>
1000bfd4:	dd002017 	ldw	r20,128(sp)
1000bfd8:	dd401d83 	ldbu	r21,118(sp)
1000bfdc:	ddc02415 	stw	r23,144(sp)
1000bfe0:	d8002015 	stw	zero,128(sp)
1000bfe4:	003c6606 	br	1000b180 <__alt_data_end+0xf800b180>
1000bfe8:	0025883a 	mov	r18,zero
1000bfec:	003fbd06 	br	1000bee4 <__alt_data_end+0xf800bee4>
1000bff0:	d9402417 	ldw	r5,144(sp)
1000bff4:	d8c02417 	ldw	r3,144(sp)
1000bff8:	29400017 	ldw	r5,0(r5)
1000bffc:	19000104 	addi	r4,r3,4
1000c000:	d9002415 	stw	r4,144(sp)
1000c004:	d9402015 	stw	r5,128(sp)
1000c008:	98c00043 	ldbu	r3,1(r19)
1000c00c:	e027883a 	mov	r19,fp
1000c010:	283f5b0e 	bge	r5,zero,1000bd80 <__alt_data_end+0xf800bd80>
1000c014:	18c03fcc 	andi	r3,r3,255
1000c018:	013fffc4 	movi	r4,-1
1000c01c:	18c0201c 	xori	r3,r3,128
1000c020:	d9002015 	stw	r4,128(sp)
1000c024:	18ffe004 	addi	r3,r3,-128
1000c028:	003b7d06 	br	1000ae20 <__alt_data_end+0xf800ae20>
1000c02c:	dd401d85 	stb	r21,118(sp)
1000c030:	003cf306 	br	1000b400 <__alt_data_end+0xf800b400>
1000c034:	dd401d85 	stb	r21,118(sp)
1000c038:	003d4e06 	br	1000b574 <__alt_data_end+0xf800b574>
1000c03c:	dd401d85 	stb	r21,118(sp)
1000c040:	003c0e06 	br	1000b07c <__alt_data_end+0xf800b07c>
1000c044:	d9002717 	ldw	r4,156(sp)
1000c048:	00800304 	movi	r2,12
1000c04c:	20800015 	stw	r2,0(r4)
1000c050:	00bfffc4 	movi	r2,-1
1000c054:	003e6b06 	br	1000ba04 <__alt_data_end+0xf800ba04>
1000c058:	dd401d85 	stb	r21,118(sp)
1000c05c:	003d0006 	br	1000b460 <__alt_data_end+0xf800b460>
1000c060:	dd401d85 	stb	r21,118(sp)
1000c064:	003d7106 	br	1000b62c <__alt_data_end+0xf800b62c>
1000c068:	dd401d85 	stb	r21,118(sp)
1000c06c:	003c5706 	br	1000b1cc <__alt_data_end+0xf800b1cc>
1000c070:	dd401d85 	stb	r21,118(sp)
1000c074:	003c2e06 	br	1000b130 <__alt_data_end+0xf800b130>
1000c078:	dd401d85 	stb	r21,118(sp)
1000c07c:	003d8c06 	br	1000b6b0 <__alt_data_end+0xf800b6b0>
1000c080:	dd401d85 	stb	r21,118(sp)
1000c084:	003da706 	br	1000b724 <__alt_data_end+0xf800b724>
1000c088:	dd401d85 	stb	r21,118(sp)
1000c08c:	003cc806 	br	1000b3b0 <__alt_data_end+0xf800b3b0>

1000c090 <__sprint_r.part.0>:
1000c090:	28801917 	ldw	r2,100(r5)
1000c094:	defff604 	addi	sp,sp,-40
1000c098:	dd400515 	stw	r21,20(sp)
1000c09c:	dfc00915 	stw	ra,36(sp)
1000c0a0:	df000815 	stw	fp,32(sp)
1000c0a4:	ddc00715 	stw	r23,28(sp)
1000c0a8:	dd800615 	stw	r22,24(sp)
1000c0ac:	dd000415 	stw	r20,16(sp)
1000c0b0:	dcc00315 	stw	r19,12(sp)
1000c0b4:	dc800215 	stw	r18,8(sp)
1000c0b8:	dc400115 	stw	r17,4(sp)
1000c0bc:	dc000015 	stw	r16,0(sp)
1000c0c0:	1088000c 	andi	r2,r2,8192
1000c0c4:	302b883a 	mov	r21,r6
1000c0c8:	10002e26 	beq	r2,zero,1000c184 <__sprint_r.part.0+0xf4>
1000c0cc:	30800217 	ldw	r2,8(r6)
1000c0d0:	35800017 	ldw	r22,0(r6)
1000c0d4:	10002926 	beq	r2,zero,1000c17c <__sprint_r.part.0+0xec>
1000c0d8:	2827883a 	mov	r19,r5
1000c0dc:	2029883a 	mov	r20,r4
1000c0e0:	b5c00104 	addi	r23,r22,4
1000c0e4:	04bfffc4 	movi	r18,-1
1000c0e8:	bc400017 	ldw	r17,0(r23)
1000c0ec:	b4000017 	ldw	r16,0(r22)
1000c0f0:	0039883a 	mov	fp,zero
1000c0f4:	8822d0ba 	srli	r17,r17,2
1000c0f8:	8800031e 	bne	r17,zero,1000c108 <__sprint_r.part.0+0x78>
1000c0fc:	00001806 	br	1000c160 <__sprint_r.part.0+0xd0>
1000c100:	84000104 	addi	r16,r16,4
1000c104:	8f001526 	beq	r17,fp,1000c15c <__sprint_r.part.0+0xcc>
1000c108:	81400017 	ldw	r5,0(r16)
1000c10c:	980d883a 	mov	r6,r19
1000c110:	a009883a 	mov	r4,r20
1000c114:	000db800 	call	1000db80 <_fputwc_r>
1000c118:	e7000044 	addi	fp,fp,1
1000c11c:	14bff81e 	bne	r2,r18,1000c100 <__alt_data_end+0xf800c100>
1000c120:	9005883a 	mov	r2,r18
1000c124:	a8000215 	stw	zero,8(r21)
1000c128:	a8000115 	stw	zero,4(r21)
1000c12c:	dfc00917 	ldw	ra,36(sp)
1000c130:	df000817 	ldw	fp,32(sp)
1000c134:	ddc00717 	ldw	r23,28(sp)
1000c138:	dd800617 	ldw	r22,24(sp)
1000c13c:	dd400517 	ldw	r21,20(sp)
1000c140:	dd000417 	ldw	r20,16(sp)
1000c144:	dcc00317 	ldw	r19,12(sp)
1000c148:	dc800217 	ldw	r18,8(sp)
1000c14c:	dc400117 	ldw	r17,4(sp)
1000c150:	dc000017 	ldw	r16,0(sp)
1000c154:	dec00a04 	addi	sp,sp,40
1000c158:	f800283a 	ret
1000c15c:	a8800217 	ldw	r2,8(r21)
1000c160:	8c63883a 	add	r17,r17,r17
1000c164:	8c63883a 	add	r17,r17,r17
1000c168:	1445c83a 	sub	r2,r2,r17
1000c16c:	a8800215 	stw	r2,8(r21)
1000c170:	b5800204 	addi	r22,r22,8
1000c174:	bdc00204 	addi	r23,r23,8
1000c178:	103fdb1e 	bne	r2,zero,1000c0e8 <__alt_data_end+0xf800c0e8>
1000c17c:	0005883a 	mov	r2,zero
1000c180:	003fe806 	br	1000c124 <__alt_data_end+0xf800c124>
1000c184:	0007c800 	call	10007c80 <__sfvwrite_r>
1000c188:	003fe606 	br	1000c124 <__alt_data_end+0xf800c124>

1000c18c <__sprint_r>:
1000c18c:	30c00217 	ldw	r3,8(r6)
1000c190:	18000126 	beq	r3,zero,1000c198 <__sprint_r+0xc>
1000c194:	000c0901 	jmpi	1000c090 <__sprint_r.part.0>
1000c198:	30000115 	stw	zero,4(r6)
1000c19c:	0005883a 	mov	r2,zero
1000c1a0:	f800283a 	ret

1000c1a4 <___vfiprintf_internal_r>:
1000c1a4:	deffca04 	addi	sp,sp,-216
1000c1a8:	dd403115 	stw	r21,196(sp)
1000c1ac:	dfc03515 	stw	ra,212(sp)
1000c1b0:	df003415 	stw	fp,208(sp)
1000c1b4:	ddc03315 	stw	r23,204(sp)
1000c1b8:	dd803215 	stw	r22,200(sp)
1000c1bc:	dd003015 	stw	r20,192(sp)
1000c1c0:	dcc02f15 	stw	r19,188(sp)
1000c1c4:	dc802e15 	stw	r18,184(sp)
1000c1c8:	dc402d15 	stw	r17,180(sp)
1000c1cc:	dc002c15 	stw	r16,176(sp)
1000c1d0:	d9002115 	stw	r4,132(sp)
1000c1d4:	d9402015 	stw	r5,128(sp)
1000c1d8:	d9c02215 	stw	r7,136(sp)
1000c1dc:	302b883a 	mov	r21,r6
1000c1e0:	20000226 	beq	r4,zero,1000c1ec <___vfiprintf_internal_r+0x48>
1000c1e4:	20800e17 	ldw	r2,56(r4)
1000c1e8:	1000cf26 	beq	r2,zero,1000c528 <___vfiprintf_internal_r+0x384>
1000c1ec:	d8c02017 	ldw	r3,128(sp)
1000c1f0:	1880030b 	ldhu	r2,12(r3)
1000c1f4:	10c8000c 	andi	r3,r2,8192
1000c1f8:	1800071e 	bne	r3,zero,1000c218 <___vfiprintf_internal_r+0x74>
1000c1fc:	d9402017 	ldw	r5,128(sp)
1000c200:	00f7ffc4 	movi	r3,-8193
1000c204:	10880014 	ori	r2,r2,8192
1000c208:	29001917 	ldw	r4,100(r5)
1000c20c:	2880030d 	sth	r2,12(r5)
1000c210:	20c6703a 	and	r3,r4,r3
1000c214:	28c01915 	stw	r3,100(r5)
1000c218:	10c0020c 	andi	r3,r2,8
1000c21c:	1800a526 	beq	r3,zero,1000c4b4 <___vfiprintf_internal_r+0x310>
1000c220:	d9002017 	ldw	r4,128(sp)
1000c224:	20c00417 	ldw	r3,16(r4)
1000c228:	1800a226 	beq	r3,zero,1000c4b4 <___vfiprintf_internal_r+0x310>
1000c22c:	1080068c 	andi	r2,r2,26
1000c230:	00c00284 	movi	r3,10
1000c234:	10c0a826 	beq	r2,r3,1000c4d8 <___vfiprintf_internal_r+0x334>
1000c238:	d9001a04 	addi	r4,sp,104
1000c23c:	d94019c4 	addi	r5,sp,103
1000c240:	04840074 	movhi	r18,4097
1000c244:	2145c83a 	sub	r2,r4,r5
1000c248:	94904f04 	addi	r18,r18,16700
1000c24c:	d9001e15 	stw	r4,120(sp)
1000c250:	d9401f15 	stw	r5,124(sp)
1000c254:	dec01a15 	stw	sp,104(sp)
1000c258:	d8001c15 	stw	zero,112(sp)
1000c25c:	d8001b15 	stw	zero,108(sp)
1000c260:	d811883a 	mov	r8,sp
1000c264:	d8002615 	stw	zero,152(sp)
1000c268:	d8002415 	stw	zero,144(sp)
1000c26c:	d8802815 	stw	r2,160(sp)
1000c270:	a82d883a 	mov	r22,r21
1000c274:	b0800007 	ldb	r2,0(r22)
1000c278:	10040d26 	beq	r2,zero,1000d2b0 <___vfiprintf_internal_r+0x110c>
1000c27c:	00c00944 	movi	r3,37
1000c280:	b029883a 	mov	r20,r22
1000c284:	10c0021e 	bne	r2,r3,1000c290 <___vfiprintf_internal_r+0xec>
1000c288:	00001606 	br	1000c2e4 <___vfiprintf_internal_r+0x140>
1000c28c:	10c00326 	beq	r2,r3,1000c29c <___vfiprintf_internal_r+0xf8>
1000c290:	a5000044 	addi	r20,r20,1
1000c294:	a0800007 	ldb	r2,0(r20)
1000c298:	103ffc1e 	bne	r2,zero,1000c28c <__alt_data_end+0xf800c28c>
1000c29c:	a5a1c83a 	sub	r16,r20,r22
1000c2a0:	80001026 	beq	r16,zero,1000c2e4 <___vfiprintf_internal_r+0x140>
1000c2a4:	d8c01c17 	ldw	r3,112(sp)
1000c2a8:	d8801b17 	ldw	r2,108(sp)
1000c2ac:	45800015 	stw	r22,0(r8)
1000c2b0:	80c7883a 	add	r3,r16,r3
1000c2b4:	10800044 	addi	r2,r2,1
1000c2b8:	44000115 	stw	r16,4(r8)
1000c2bc:	d8c01c15 	stw	r3,112(sp)
1000c2c0:	d8801b15 	stw	r2,108(sp)
1000c2c4:	010001c4 	movi	r4,7
1000c2c8:	2080750e 	bge	r4,r2,1000c4a0 <___vfiprintf_internal_r+0x2fc>
1000c2cc:	1803951e 	bne	r3,zero,1000d124 <___vfiprintf_internal_r+0xf80>
1000c2d0:	d8c02417 	ldw	r3,144(sp)
1000c2d4:	d8001b15 	stw	zero,108(sp)
1000c2d8:	d811883a 	mov	r8,sp
1000c2dc:	1c07883a 	add	r3,r3,r16
1000c2e0:	d8c02415 	stw	r3,144(sp)
1000c2e4:	a0800007 	ldb	r2,0(r20)
1000c2e8:	1002e026 	beq	r2,zero,1000ce6c <___vfiprintf_internal_r+0xcc8>
1000c2ec:	a5800044 	addi	r22,r20,1
1000c2f0:	a0c00047 	ldb	r3,1(r20)
1000c2f4:	d8001d85 	stb	zero,118(sp)
1000c2f8:	0027883a 	mov	r19,zero
1000c2fc:	d8002305 	stb	zero,140(sp)
1000c300:	043fffc4 	movi	r16,-1
1000c304:	d8002515 	stw	zero,148(sp)
1000c308:	0023883a 	mov	r17,zero
1000c30c:	05001604 	movi	r20,88
1000c310:	05400244 	movi	r21,9
1000c314:	402f883a 	mov	r23,r8
1000c318:	b5800044 	addi	r22,r22,1
1000c31c:	18bff804 	addi	r2,r3,-32
1000c320:	a0827736 	bltu	r20,r2,1000cd00 <___vfiprintf_internal_r+0xb5c>
1000c324:	100490ba 	slli	r2,r2,2
1000c328:	01040074 	movhi	r4,4097
1000c32c:	2130cf04 	addi	r4,r4,-15556
1000c330:	1105883a 	add	r2,r2,r4
1000c334:	10800017 	ldw	r2,0(r2)
1000c338:	1000683a 	jmp	r2
1000c33c:	1000ca00 	call	11000ca0 <_gp+0xfe2c84>
1000c340:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c344:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c348:	1000ca1c 	xori	zero,r2,808
1000c34c:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c350:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c354:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c358:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c35c:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c360:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c364:	1000cc24 	muli	zero,r2,816
1000c368:	1000cc48 	cmpgei	zero,r2,817
1000c36c:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c370:	1000c540 	call	11000c54 <_gp+0xfe2c38>
1000c374:	1000cc5c 	xori	zero,r2,817
1000c378:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c37c:	1000ca28 	cmpgeui	zero,r2,808
1000c380:	1000ca34 	orhi	zero,r2,808
1000c384:	1000ca34 	orhi	zero,r2,808
1000c388:	1000ca34 	orhi	zero,r2,808
1000c38c:	1000ca34 	orhi	zero,r2,808
1000c390:	1000ca34 	orhi	zero,r2,808
1000c394:	1000ca34 	orhi	zero,r2,808
1000c398:	1000ca34 	orhi	zero,r2,808
1000c39c:	1000ca34 	orhi	zero,r2,808
1000c3a0:	1000ca34 	orhi	zero,r2,808
1000c3a4:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3a8:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3ac:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3b0:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3b4:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3b8:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3bc:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3c0:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3c4:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3c8:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3cc:	1000ca74 	orhi	zero,r2,809
1000c3d0:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3d4:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3d8:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3dc:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3e0:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3e4:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3e8:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3ec:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3f0:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3f4:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c3f8:	1000cab0 	cmpltui	zero,r2,810
1000c3fc:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c400:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c404:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c408:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c40c:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c410:	1000cb0c 	andi	zero,r2,812
1000c414:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c418:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c41c:	1000cb80 	call	11000cb8 <_gp+0xfe2c9c>
1000c420:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c424:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c428:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c42c:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c430:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c434:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c438:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c43c:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c440:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c444:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c448:	1000c928 	cmpgeui	zero,r2,804
1000c44c:	1000c958 	cmpnei	zero,r2,805
1000c450:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c454:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c458:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c45c:	1000cca8 	cmpgeui	zero,r2,818
1000c460:	1000c958 	cmpnei	zero,r2,805
1000c464:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c468:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c46c:	1000c800 	call	11000c80 <_gp+0xfe2c64>
1000c470:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c474:	1000c814 	ori	zero,r2,800
1000c478:	1000c84c 	andi	zero,r2,801
1000c47c:	1000c54c 	andi	zero,r2,789
1000c480:	1000c7f4 	orhi	zero,r2,799
1000c484:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c488:	1000cbc0 	call	11000cbc <_gp+0xfe2ca0>
1000c48c:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c490:	1000cc0c 	andi	zero,r2,816
1000c494:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c498:	1000cd00 	call	11000cd0 <_gp+0xfe2cb4>
1000c49c:	1000c8d0 	cmplti	zero,r2,803
1000c4a0:	42000204 	addi	r8,r8,8
1000c4a4:	d8c02417 	ldw	r3,144(sp)
1000c4a8:	1c07883a 	add	r3,r3,r16
1000c4ac:	d8c02415 	stw	r3,144(sp)
1000c4b0:	003f8c06 	br	1000c2e4 <__alt_data_end+0xf800c2e4>
1000c4b4:	d9402017 	ldw	r5,128(sp)
1000c4b8:	d9002117 	ldw	r4,132(sp)
1000c4bc:	00057f00 	call	100057f0 <__swsetup_r>
1000c4c0:	1003c11e 	bne	r2,zero,1000d3c8 <___vfiprintf_internal_r+0x1224>
1000c4c4:	d9402017 	ldw	r5,128(sp)
1000c4c8:	00c00284 	movi	r3,10
1000c4cc:	2880030b 	ldhu	r2,12(r5)
1000c4d0:	1080068c 	andi	r2,r2,26
1000c4d4:	10ff581e 	bne	r2,r3,1000c238 <__alt_data_end+0xf800c238>
1000c4d8:	d8c02017 	ldw	r3,128(sp)
1000c4dc:	1880038f 	ldh	r2,14(r3)
1000c4e0:	103f5516 	blt	r2,zero,1000c238 <__alt_data_end+0xf800c238>
1000c4e4:	d9c02217 	ldw	r7,136(sp)
1000c4e8:	d9002117 	ldw	r4,132(sp)
1000c4ec:	a80d883a 	mov	r6,r21
1000c4f0:	180b883a 	mov	r5,r3
1000c4f4:	000d6cc0 	call	1000d6cc <__sbprintf>
1000c4f8:	dfc03517 	ldw	ra,212(sp)
1000c4fc:	df003417 	ldw	fp,208(sp)
1000c500:	ddc03317 	ldw	r23,204(sp)
1000c504:	dd803217 	ldw	r22,200(sp)
1000c508:	dd403117 	ldw	r21,196(sp)
1000c50c:	dd003017 	ldw	r20,192(sp)
1000c510:	dcc02f17 	ldw	r19,188(sp)
1000c514:	dc802e17 	ldw	r18,184(sp)
1000c518:	dc402d17 	ldw	r17,180(sp)
1000c51c:	dc002c17 	ldw	r16,176(sp)
1000c520:	dec03604 	addi	sp,sp,216
1000c524:	f800283a 	ret
1000c528:	00077fc0 	call	100077fc <__sinit>
1000c52c:	003f2f06 	br	1000c1ec <__alt_data_end+0xf800c1ec>
1000c530:	d8c02517 	ldw	r3,148(sp)
1000c534:	d8802215 	stw	r2,136(sp)
1000c538:	00c7c83a 	sub	r3,zero,r3
1000c53c:	d8c02515 	stw	r3,148(sp)
1000c540:	8c400114 	ori	r17,r17,4
1000c544:	b0c00007 	ldb	r3,0(r22)
1000c548:	003f7306 	br	1000c318 <__alt_data_end+0xf800c318>
1000c54c:	00800c04 	movi	r2,48
1000c550:	d9402217 	ldw	r5,136(sp)
1000c554:	d8801d05 	stb	r2,116(sp)
1000c558:	00801e04 	movi	r2,120
1000c55c:	d8801d45 	stb	r2,117(sp)
1000c560:	d8001d85 	stb	zero,118(sp)
1000c564:	b811883a 	mov	r8,r23
1000c568:	28c00104 	addi	r3,r5,4
1000c56c:	2cc00017 	ldw	r19,0(r5)
1000c570:	0029883a 	mov	r20,zero
1000c574:	88800094 	ori	r2,r17,2
1000c578:	80032516 	blt	r16,zero,1000d210 <___vfiprintf_internal_r+0x106c>
1000c57c:	00bfdfc4 	movi	r2,-129
1000c580:	88a2703a 	and	r17,r17,r2
1000c584:	d8c02215 	stw	r3,136(sp)
1000c588:	8c400094 	ori	r17,r17,2
1000c58c:	98032a1e 	bne	r19,zero,1000d238 <___vfiprintf_internal_r+0x1094>
1000c590:	00840074 	movhi	r2,4097
1000c594:	108fde04 	addi	r2,r2,16248
1000c598:	d8802615 	stw	r2,152(sp)
1000c59c:	002b883a 	mov	r21,zero
1000c5a0:	8001741e 	bne	r16,zero,1000cb74 <___vfiprintf_internal_r+0x9d0>
1000c5a4:	0021883a 	mov	r16,zero
1000c5a8:	0029883a 	mov	r20,zero
1000c5ac:	ddc01a04 	addi	r23,sp,104
1000c5b0:	8027883a 	mov	r19,r16
1000c5b4:	8500010e 	bge	r16,r20,1000c5bc <___vfiprintf_internal_r+0x418>
1000c5b8:	a027883a 	mov	r19,r20
1000c5bc:	ad403fcc 	andi	r21,r21,255
1000c5c0:	ad40201c 	xori	r21,r21,128
1000c5c4:	ad7fe004 	addi	r21,r21,-128
1000c5c8:	a8000126 	beq	r21,zero,1000c5d0 <___vfiprintf_internal_r+0x42c>
1000c5cc:	9cc00044 	addi	r19,r19,1
1000c5d0:	89c0008c 	andi	r7,r17,2
1000c5d4:	38000126 	beq	r7,zero,1000c5dc <___vfiprintf_internal_r+0x438>
1000c5d8:	9cc00084 	addi	r19,r19,2
1000c5dc:	88c0210c 	andi	r3,r17,132
1000c5e0:	1801dd1e 	bne	r3,zero,1000cd58 <___vfiprintf_internal_r+0xbb4>
1000c5e4:	d9402517 	ldw	r5,148(sp)
1000c5e8:	2cebc83a 	sub	r21,r5,r19
1000c5ec:	0541da0e 	bge	zero,r21,1000cd58 <___vfiprintf_internal_r+0xbb4>
1000c5f0:	07000404 	movi	fp,16
1000c5f4:	d8801c17 	ldw	r2,112(sp)
1000c5f8:	e543be0e 	bge	fp,r21,1000d4f4 <___vfiprintf_internal_r+0x1350>
1000c5fc:	01440074 	movhi	r5,4097
1000c600:	29505304 	addi	r5,r5,16716
1000c604:	dc002715 	stw	r16,156(sp)
1000c608:	d9801b17 	ldw	r6,108(sp)
1000c60c:	a821883a 	mov	r16,r21
1000c610:	d9402315 	stw	r5,140(sp)
1000c614:	028001c4 	movi	r10,7
1000c618:	d9c02915 	stw	r7,164(sp)
1000c61c:	182b883a 	mov	r21,r3
1000c620:	00000506 	br	1000c638 <___vfiprintf_internal_r+0x494>
1000c624:	31000084 	addi	r4,r6,2
1000c628:	42000204 	addi	r8,r8,8
1000c62c:	180d883a 	mov	r6,r3
1000c630:	843ffc04 	addi	r16,r16,-16
1000c634:	e4000f0e 	bge	fp,r16,1000c674 <___vfiprintf_internal_r+0x4d0>
1000c638:	01040074 	movhi	r4,4097
1000c63c:	10800404 	addi	r2,r2,16
1000c640:	30c00044 	addi	r3,r6,1
1000c644:	21105304 	addi	r4,r4,16716
1000c648:	41000015 	stw	r4,0(r8)
1000c64c:	47000115 	stw	fp,4(r8)
1000c650:	d8801c15 	stw	r2,112(sp)
1000c654:	d8c01b15 	stw	r3,108(sp)
1000c658:	50fff20e 	bge	r10,r3,1000c624 <__alt_data_end+0xf800c624>
1000c65c:	1001b21e 	bne	r2,zero,1000cd28 <___vfiprintf_internal_r+0xb84>
1000c660:	843ffc04 	addi	r16,r16,-16
1000c664:	000d883a 	mov	r6,zero
1000c668:	01000044 	movi	r4,1
1000c66c:	d811883a 	mov	r8,sp
1000c670:	e43ff116 	blt	fp,r16,1000c638 <__alt_data_end+0xf800c638>
1000c674:	a807883a 	mov	r3,r21
1000c678:	d9c02917 	ldw	r7,164(sp)
1000c67c:	802b883a 	mov	r21,r16
1000c680:	dc002717 	ldw	r16,156(sp)
1000c684:	d9402317 	ldw	r5,140(sp)
1000c688:	a885883a 	add	r2,r21,r2
1000c68c:	45400115 	stw	r21,4(r8)
1000c690:	41400015 	stw	r5,0(r8)
1000c694:	d8801c15 	stw	r2,112(sp)
1000c698:	d9001b15 	stw	r4,108(sp)
1000c69c:	014001c4 	movi	r5,7
1000c6a0:	29026216 	blt	r5,r4,1000d02c <___vfiprintf_internal_r+0xe88>
1000c6a4:	d9801d87 	ldb	r6,118(sp)
1000c6a8:	42000204 	addi	r8,r8,8
1000c6ac:	21400044 	addi	r5,r4,1
1000c6b0:	3001ae1e 	bne	r6,zero,1000cd6c <___vfiprintf_internal_r+0xbc8>
1000c6b4:	3801bb26 	beq	r7,zero,1000cda4 <___vfiprintf_internal_r+0xc00>
1000c6b8:	d9001d04 	addi	r4,sp,116
1000c6bc:	10800084 	addi	r2,r2,2
1000c6c0:	41000015 	stw	r4,0(r8)
1000c6c4:	01000084 	movi	r4,2
1000c6c8:	41000115 	stw	r4,4(r8)
1000c6cc:	d8801c15 	stw	r2,112(sp)
1000c6d0:	d9401b15 	stw	r5,108(sp)
1000c6d4:	010001c4 	movi	r4,7
1000c6d8:	2142680e 	bge	r4,r5,1000d07c <___vfiprintf_internal_r+0xed8>
1000c6dc:	1002b11e 	bne	r2,zero,1000d1a4 <___vfiprintf_internal_r+0x1000>
1000c6e0:	01802004 	movi	r6,128
1000c6e4:	01400044 	movi	r5,1
1000c6e8:	0009883a 	mov	r4,zero
1000c6ec:	d811883a 	mov	r8,sp
1000c6f0:	1981ae1e 	bne	r3,r6,1000cdac <___vfiprintf_internal_r+0xc08>
1000c6f4:	d8c02517 	ldw	r3,148(sp)
1000c6f8:	1cf9c83a 	sub	fp,r3,r19
1000c6fc:	0701ab0e 	bge	zero,fp,1000cdac <___vfiprintf_internal_r+0xc08>
1000c700:	05400404 	movi	r21,16
1000c704:	af03a90e 	bge	r21,fp,1000d5ac <___vfiprintf_internal_r+0x1408>
1000c708:	01440074 	movhi	r5,4097
1000c70c:	29504f04 	addi	r5,r5,16700
1000c710:	d9402315 	stw	r5,140(sp)
1000c714:	01c001c4 	movi	r7,7
1000c718:	00000506 	br	1000c730 <___vfiprintf_internal_r+0x58c>
1000c71c:	21800084 	addi	r6,r4,2
1000c720:	42000204 	addi	r8,r8,8
1000c724:	1809883a 	mov	r4,r3
1000c728:	e73ffc04 	addi	fp,fp,-16
1000c72c:	af000d0e 	bge	r21,fp,1000c764 <___vfiprintf_internal_r+0x5c0>
1000c730:	10800404 	addi	r2,r2,16
1000c734:	20c00044 	addi	r3,r4,1
1000c738:	44800015 	stw	r18,0(r8)
1000c73c:	45400115 	stw	r21,4(r8)
1000c740:	d8801c15 	stw	r2,112(sp)
1000c744:	d8c01b15 	stw	r3,108(sp)
1000c748:	38fff40e 	bge	r7,r3,1000c71c <__alt_data_end+0xf800c71c>
1000c74c:	10022b1e 	bne	r2,zero,1000cffc <___vfiprintf_internal_r+0xe58>
1000c750:	e73ffc04 	addi	fp,fp,-16
1000c754:	01800044 	movi	r6,1
1000c758:	0009883a 	mov	r4,zero
1000c75c:	d811883a 	mov	r8,sp
1000c760:	af3ff316 	blt	r21,fp,1000c730 <__alt_data_end+0xf800c730>
1000c764:	d8c02317 	ldw	r3,140(sp)
1000c768:	1705883a 	add	r2,r2,fp
1000c76c:	47000115 	stw	fp,4(r8)
1000c770:	40c00015 	stw	r3,0(r8)
1000c774:	d8801c15 	stw	r2,112(sp)
1000c778:	d9801b15 	stw	r6,108(sp)
1000c77c:	00c001c4 	movi	r3,7
1000c780:	19829416 	blt	r3,r6,1000d1d4 <___vfiprintf_internal_r+0x1030>
1000c784:	8521c83a 	sub	r16,r16,r20
1000c788:	42000204 	addi	r8,r8,8
1000c78c:	31400044 	addi	r5,r6,1
1000c790:	3009883a 	mov	r4,r6
1000c794:	04018716 	blt	zero,r16,1000cdb4 <___vfiprintf_internal_r+0xc10>
1000c798:	a085883a 	add	r2,r20,r2
1000c79c:	45c00015 	stw	r23,0(r8)
1000c7a0:	45000115 	stw	r20,4(r8)
1000c7a4:	d8801c15 	stw	r2,112(sp)
1000c7a8:	d9401b15 	stw	r5,108(sp)
1000c7ac:	00c001c4 	movi	r3,7
1000c7b0:	1941c20e 	bge	r3,r5,1000cebc <___vfiprintf_internal_r+0xd18>
1000c7b4:	1002531e 	bne	r2,zero,1000d104 <___vfiprintf_internal_r+0xf60>
1000c7b8:	d8001b15 	stw	zero,108(sp)
1000c7bc:	8c40010c 	andi	r17,r17,4
1000c7c0:	88023226 	beq	r17,zero,1000d08c <___vfiprintf_internal_r+0xee8>
1000c7c4:	d9002517 	ldw	r4,148(sp)
1000c7c8:	24e3c83a 	sub	r17,r4,r19
1000c7cc:	04432916 	blt	zero,r17,1000d474 <___vfiprintf_internal_r+0x12d0>
1000c7d0:	d8802517 	ldw	r2,148(sp)
1000c7d4:	14c0010e 	bge	r2,r19,1000c7dc <___vfiprintf_internal_r+0x638>
1000c7d8:	9805883a 	mov	r2,r19
1000c7dc:	d8c02417 	ldw	r3,144(sp)
1000c7e0:	1887883a 	add	r3,r3,r2
1000c7e4:	d8c02415 	stw	r3,144(sp)
1000c7e8:	d8001b15 	stw	zero,108(sp)
1000c7ec:	d811883a 	mov	r8,sp
1000c7f0:	003ea006 	br	1000c274 <__alt_data_end+0xf800c274>
1000c7f4:	8c400814 	ori	r17,r17,32
1000c7f8:	b0c00007 	ldb	r3,0(r22)
1000c7fc:	003ec606 	br	1000c318 <__alt_data_end+0xf800c318>
1000c800:	b0c00007 	ldb	r3,0(r22)
1000c804:	00801b04 	movi	r2,108
1000c808:	18832026 	beq	r3,r2,1000d48c <___vfiprintf_internal_r+0x12e8>
1000c80c:	8c400414 	ori	r17,r17,16
1000c810:	003ec106 	br	1000c318 <__alt_data_end+0xf800c318>
1000c814:	9cc03fcc 	andi	r19,r19,255
1000c818:	b811883a 	mov	r8,r23
1000c81c:	9803981e 	bne	r19,zero,1000d680 <___vfiprintf_internal_r+0x14dc>
1000c820:	8880080c 	andi	r2,r17,32
1000c824:	1002be26 	beq	r2,zero,1000d320 <___vfiprintf_internal_r+0x117c>
1000c828:	d9002217 	ldw	r4,136(sp)
1000c82c:	d9402417 	ldw	r5,144(sp)
1000c830:	20800017 	ldw	r2,0(r4)
1000c834:	2807d7fa 	srai	r3,r5,31
1000c838:	21000104 	addi	r4,r4,4
1000c83c:	d9002215 	stw	r4,136(sp)
1000c840:	11400015 	stw	r5,0(r2)
1000c844:	10c00115 	stw	r3,4(r2)
1000c848:	003e8a06 	br	1000c274 <__alt_data_end+0xf800c274>
1000c84c:	9cc03fcc 	andi	r19,r19,255
1000c850:	b811883a 	mov	r8,r23
1000c854:	9803871e 	bne	r19,zero,1000d674 <___vfiprintf_internal_r+0x14d0>
1000c858:	8880080c 	andi	r2,r17,32
1000c85c:	10009a26 	beq	r2,zero,1000cac8 <___vfiprintf_internal_r+0x924>
1000c860:	d9002217 	ldw	r4,136(sp)
1000c864:	d8001d85 	stb	zero,118(sp)
1000c868:	20800204 	addi	r2,r4,8
1000c86c:	24c00017 	ldw	r19,0(r4)
1000c870:	25000117 	ldw	r20,4(r4)
1000c874:	8002a416 	blt	r16,zero,1000d308 <___vfiprintf_internal_r+0x1164>
1000c878:	013fdfc4 	movi	r4,-129
1000c87c:	9d06b03a 	or	r3,r19,r20
1000c880:	d8802215 	stw	r2,136(sp)
1000c884:	8922703a 	and	r17,r17,r4
1000c888:	18009b26 	beq	r3,zero,1000caf8 <___vfiprintf_internal_r+0x954>
1000c88c:	002b883a 	mov	r21,zero
1000c890:	ddc01a04 	addi	r23,sp,104
1000c894:	9806d0fa 	srli	r3,r19,3
1000c898:	a008977a 	slli	r4,r20,29
1000c89c:	a028d0fa 	srli	r20,r20,3
1000c8a0:	9cc001cc 	andi	r19,r19,7
1000c8a4:	98800c04 	addi	r2,r19,48
1000c8a8:	bdffffc4 	addi	r23,r23,-1
1000c8ac:	20e6b03a 	or	r19,r4,r3
1000c8b0:	b8800005 	stb	r2,0(r23)
1000c8b4:	9d06b03a 	or	r3,r19,r20
1000c8b8:	183ff61e 	bne	r3,zero,1000c894 <__alt_data_end+0xf800c894>
1000c8bc:	88c0004c 	andi	r3,r17,1
1000c8c0:	18021f1e 	bne	r3,zero,1000d140 <___vfiprintf_internal_r+0xf9c>
1000c8c4:	d9401e17 	ldw	r5,120(sp)
1000c8c8:	2de9c83a 	sub	r20,r5,r23
1000c8cc:	003f3806 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000c8d0:	9cc03fcc 	andi	r19,r19,255
1000c8d4:	b811883a 	mov	r8,r23
1000c8d8:	98034f1e 	bne	r19,zero,1000d618 <___vfiprintf_internal_r+0x1474>
1000c8dc:	00840074 	movhi	r2,4097
1000c8e0:	108fde04 	addi	r2,r2,16248
1000c8e4:	d8802615 	stw	r2,152(sp)
1000c8e8:	8880080c 	andi	r2,r17,32
1000c8ec:	1000ac26 	beq	r2,zero,1000cba0 <___vfiprintf_internal_r+0x9fc>
1000c8f0:	d9002217 	ldw	r4,136(sp)
1000c8f4:	24c00017 	ldw	r19,0(r4)
1000c8f8:	25000117 	ldw	r20,4(r4)
1000c8fc:	21000204 	addi	r4,r4,8
1000c900:	d9002215 	stw	r4,136(sp)
1000c904:	8880004c 	andi	r2,r17,1
1000c908:	1001e726 	beq	r2,zero,1000d0a8 <___vfiprintf_internal_r+0xf04>
1000c90c:	9d04b03a 	or	r2,r19,r20
1000c910:	10025c1e 	bne	r2,zero,1000d284 <___vfiprintf_internal_r+0x10e0>
1000c914:	d8001d85 	stb	zero,118(sp)
1000c918:	80024416 	blt	r16,zero,1000d22c <___vfiprintf_internal_r+0x1088>
1000c91c:	00bfdfc4 	movi	r2,-129
1000c920:	88a2703a 	and	r17,r17,r2
1000c924:	003f1d06 	br	1000c59c <__alt_data_end+0xf800c59c>
1000c928:	d8c02217 	ldw	r3,136(sp)
1000c92c:	04c00044 	movi	r19,1
1000c930:	b811883a 	mov	r8,r23
1000c934:	18800017 	ldw	r2,0(r3)
1000c938:	18c00104 	addi	r3,r3,4
1000c93c:	d8001d85 	stb	zero,118(sp)
1000c940:	d8801005 	stb	r2,64(sp)
1000c944:	d8c02215 	stw	r3,136(sp)
1000c948:	9829883a 	mov	r20,r19
1000c94c:	ddc01004 	addi	r23,sp,64
1000c950:	0021883a 	mov	r16,zero
1000c954:	003f1e06 	br	1000c5d0 <__alt_data_end+0xf800c5d0>
1000c958:	9cc03fcc 	andi	r19,r19,255
1000c95c:	b811883a 	mov	r8,r23
1000c960:	9803331e 	bne	r19,zero,1000d630 <___vfiprintf_internal_r+0x148c>
1000c964:	8880080c 	andi	r2,r17,32
1000c968:	10004826 	beq	r2,zero,1000ca8c <___vfiprintf_internal_r+0x8e8>
1000c96c:	d9002217 	ldw	r4,136(sp)
1000c970:	20800117 	ldw	r2,4(r4)
1000c974:	24c00017 	ldw	r19,0(r4)
1000c978:	21000204 	addi	r4,r4,8
1000c97c:	d9002215 	stw	r4,136(sp)
1000c980:	1029883a 	mov	r20,r2
1000c984:	10024c16 	blt	r2,zero,1000d2b8 <___vfiprintf_internal_r+0x1114>
1000c988:	dd401d83 	ldbu	r21,118(sp)
1000c98c:	80007116 	blt	r16,zero,1000cb54 <___vfiprintf_internal_r+0x9b0>
1000c990:	00ffdfc4 	movi	r3,-129
1000c994:	9d04b03a 	or	r2,r19,r20
1000c998:	88e2703a 	and	r17,r17,r3
1000c99c:	1000d126 	beq	r2,zero,1000cce4 <___vfiprintf_internal_r+0xb40>
1000c9a0:	a0023526 	beq	r20,zero,1000d278 <___vfiprintf_internal_r+0x10d4>
1000c9a4:	ddc01a04 	addi	r23,sp,104
1000c9a8:	4039883a 	mov	fp,r8
1000c9ac:	9809883a 	mov	r4,r19
1000c9b0:	a00b883a 	mov	r5,r20
1000c9b4:	01800284 	movi	r6,10
1000c9b8:	000f883a 	mov	r7,zero
1000c9bc:	000e7dc0 	call	1000e7dc <__umoddi3>
1000c9c0:	10800c04 	addi	r2,r2,48
1000c9c4:	bdffffc4 	addi	r23,r23,-1
1000c9c8:	9809883a 	mov	r4,r19
1000c9cc:	a00b883a 	mov	r5,r20
1000c9d0:	b8800005 	stb	r2,0(r23)
1000c9d4:	01800284 	movi	r6,10
1000c9d8:	000f883a 	mov	r7,zero
1000c9dc:	000e1e00 	call	1000e1e0 <__udivdi3>
1000c9e0:	1027883a 	mov	r19,r2
1000c9e4:	10c4b03a 	or	r2,r2,r3
1000c9e8:	1829883a 	mov	r20,r3
1000c9ec:	103fef1e 	bne	r2,zero,1000c9ac <__alt_data_end+0xf800c9ac>
1000c9f0:	d9001e17 	ldw	r4,120(sp)
1000c9f4:	e011883a 	mov	r8,fp
1000c9f8:	25e9c83a 	sub	r20,r4,r23
1000c9fc:	003eec06 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000ca00:	d8802307 	ldb	r2,140(sp)
1000ca04:	1002361e 	bne	r2,zero,1000d2e0 <___vfiprintf_internal_r+0x113c>
1000ca08:	00c00804 	movi	r3,32
1000ca0c:	d8c02305 	stb	r3,140(sp)
1000ca10:	04c00044 	movi	r19,1
1000ca14:	b0c00007 	ldb	r3,0(r22)
1000ca18:	003e3f06 	br	1000c318 <__alt_data_end+0xf800c318>
1000ca1c:	8c400054 	ori	r17,r17,1
1000ca20:	b0c00007 	ldb	r3,0(r22)
1000ca24:	003e3c06 	br	1000c318 <__alt_data_end+0xf800c318>
1000ca28:	8c402014 	ori	r17,r17,128
1000ca2c:	b0c00007 	ldb	r3,0(r22)
1000ca30:	003e3906 	br	1000c318 <__alt_data_end+0xf800c318>
1000ca34:	dc002715 	stw	r16,156(sp)
1000ca38:	d8002515 	stw	zero,148(sp)
1000ca3c:	1f3ff404 	addi	fp,r3,-48
1000ca40:	0009883a 	mov	r4,zero
1000ca44:	b021883a 	mov	r16,r22
1000ca48:	01400284 	movi	r5,10
1000ca4c:	0000e400 	call	10000e40 <__mulsi3>
1000ca50:	80c00007 	ldb	r3,0(r16)
1000ca54:	e089883a 	add	r4,fp,r2
1000ca58:	b5800044 	addi	r22,r22,1
1000ca5c:	1f3ff404 	addi	fp,r3,-48
1000ca60:	b021883a 	mov	r16,r22
1000ca64:	af3ff82e 	bgeu	r21,fp,1000ca48 <__alt_data_end+0xf800ca48>
1000ca68:	d9002515 	stw	r4,148(sp)
1000ca6c:	dc002717 	ldw	r16,156(sp)
1000ca70:	003e2a06 	br	1000c31c <__alt_data_end+0xf800c31c>
1000ca74:	9cc03fcc 	andi	r19,r19,255
1000ca78:	b811883a 	mov	r8,r23
1000ca7c:	9802e91e 	bne	r19,zero,1000d624 <___vfiprintf_internal_r+0x1480>
1000ca80:	8c400414 	ori	r17,r17,16
1000ca84:	8880080c 	andi	r2,r17,32
1000ca88:	103fb81e 	bne	r2,zero,1000c96c <__alt_data_end+0xf800c96c>
1000ca8c:	8880040c 	andi	r2,r17,16
1000ca90:	10022e26 	beq	r2,zero,1000d34c <___vfiprintf_internal_r+0x11a8>
1000ca94:	d9402217 	ldw	r5,136(sp)
1000ca98:	2cc00017 	ldw	r19,0(r5)
1000ca9c:	29400104 	addi	r5,r5,4
1000caa0:	d9402215 	stw	r5,136(sp)
1000caa4:	9829d7fa 	srai	r20,r19,31
1000caa8:	a005883a 	mov	r2,r20
1000caac:	003fb506 	br	1000c984 <__alt_data_end+0xf800c984>
1000cab0:	9cc03fcc 	andi	r19,r19,255
1000cab4:	b811883a 	mov	r8,r23
1000cab8:	9802fa1e 	bne	r19,zero,1000d6a4 <___vfiprintf_internal_r+0x1500>
1000cabc:	8c400414 	ori	r17,r17,16
1000cac0:	8880080c 	andi	r2,r17,32
1000cac4:	103f661e 	bne	r2,zero,1000c860 <__alt_data_end+0xf800c860>
1000cac8:	8880040c 	andi	r2,r17,16
1000cacc:	10020626 	beq	r2,zero,1000d2e8 <___vfiprintf_internal_r+0x1144>
1000cad0:	d9402217 	ldw	r5,136(sp)
1000cad4:	d8001d85 	stb	zero,118(sp)
1000cad8:	0029883a 	mov	r20,zero
1000cadc:	28800104 	addi	r2,r5,4
1000cae0:	2cc00017 	ldw	r19,0(r5)
1000cae4:	80020816 	blt	r16,zero,1000d308 <___vfiprintf_internal_r+0x1164>
1000cae8:	00ffdfc4 	movi	r3,-129
1000caec:	d8802215 	stw	r2,136(sp)
1000caf0:	88e2703a 	and	r17,r17,r3
1000caf4:	983f651e 	bne	r19,zero,1000c88c <__alt_data_end+0xf800c88c>
1000caf8:	002b883a 	mov	r21,zero
1000cafc:	8002cf26 	beq	r16,zero,1000d63c <___vfiprintf_internal_r+0x1498>
1000cb00:	0027883a 	mov	r19,zero
1000cb04:	0029883a 	mov	r20,zero
1000cb08:	003f6106 	br	1000c890 <__alt_data_end+0xf800c890>
1000cb0c:	9cc03fcc 	andi	r19,r19,255
1000cb10:	b811883a 	mov	r8,r23
1000cb14:	9802e01e 	bne	r19,zero,1000d698 <___vfiprintf_internal_r+0x14f4>
1000cb18:	8c400414 	ori	r17,r17,16
1000cb1c:	8880080c 	andi	r2,r17,32
1000cb20:	1000641e 	bne	r2,zero,1000ccb4 <___vfiprintf_internal_r+0xb10>
1000cb24:	8880040c 	andi	r2,r17,16
1000cb28:	1001c81e 	bne	r2,zero,1000d24c <___vfiprintf_internal_r+0x10a8>
1000cb2c:	8880100c 	andi	r2,r17,64
1000cb30:	d8001d85 	stb	zero,118(sp)
1000cb34:	1002281e 	bne	r2,zero,1000d3d8 <___vfiprintf_internal_r+0x1234>
1000cb38:	d9002217 	ldw	r4,136(sp)
1000cb3c:	0029883a 	mov	r20,zero
1000cb40:	20800104 	addi	r2,r4,4
1000cb44:	24c00017 	ldw	r19,0(r4)
1000cb48:	8001c60e 	bge	r16,zero,1000d264 <___vfiprintf_internal_r+0x10c0>
1000cb4c:	d8802215 	stw	r2,136(sp)
1000cb50:	002b883a 	mov	r21,zero
1000cb54:	9d04b03a 	or	r2,r19,r20
1000cb58:	103f911e 	bne	r2,zero,1000c9a0 <__alt_data_end+0xf800c9a0>
1000cb5c:	00800044 	movi	r2,1
1000cb60:	10803fcc 	andi	r2,r2,255
1000cb64:	00c00044 	movi	r3,1
1000cb68:	10c05f26 	beq	r2,r3,1000cce8 <___vfiprintf_internal_r+0xb44>
1000cb6c:	00c00084 	movi	r3,2
1000cb70:	10ffe31e 	bne	r2,r3,1000cb00 <__alt_data_end+0xf800cb00>
1000cb74:	0027883a 	mov	r19,zero
1000cb78:	0029883a 	mov	r20,zero
1000cb7c:	00015106 	br	1000d0c4 <___vfiprintf_internal_r+0xf20>
1000cb80:	9cc03fcc 	andi	r19,r19,255
1000cb84:	b811883a 	mov	r8,r23
1000cb88:	9802c01e 	bne	r19,zero,1000d68c <___vfiprintf_internal_r+0x14e8>
1000cb8c:	01440074 	movhi	r5,4097
1000cb90:	294fd904 	addi	r5,r5,16228
1000cb94:	d9402615 	stw	r5,152(sp)
1000cb98:	8880080c 	andi	r2,r17,32
1000cb9c:	103f541e 	bne	r2,zero,1000c8f0 <__alt_data_end+0xf800c8f0>
1000cba0:	8880040c 	andi	r2,r17,16
1000cba4:	1001f226 	beq	r2,zero,1000d370 <___vfiprintf_internal_r+0x11cc>
1000cba8:	d9402217 	ldw	r5,136(sp)
1000cbac:	0029883a 	mov	r20,zero
1000cbb0:	2cc00017 	ldw	r19,0(r5)
1000cbb4:	29400104 	addi	r5,r5,4
1000cbb8:	d9402215 	stw	r5,136(sp)
1000cbbc:	003f5106 	br	1000c904 <__alt_data_end+0xf800c904>
1000cbc0:	d8c02217 	ldw	r3,136(sp)
1000cbc4:	b811883a 	mov	r8,r23
1000cbc8:	d8001d85 	stb	zero,118(sp)
1000cbcc:	1dc00017 	ldw	r23,0(r3)
1000cbd0:	1f000104 	addi	fp,r3,4
1000cbd4:	b8025926 	beq	r23,zero,1000d53c <___vfiprintf_internal_r+0x1398>
1000cbd8:	80023316 	blt	r16,zero,1000d4a8 <___vfiprintf_internal_r+0x1304>
1000cbdc:	800d883a 	mov	r6,r16
1000cbe0:	000b883a 	mov	r5,zero
1000cbe4:	b809883a 	mov	r4,r23
1000cbe8:	da002a15 	stw	r8,168(sp)
1000cbec:	0008d740 	call	10008d74 <memchr>
1000cbf0:	da002a17 	ldw	r8,168(sp)
1000cbf4:	10026826 	beq	r2,zero,1000d598 <___vfiprintf_internal_r+0x13f4>
1000cbf8:	15e9c83a 	sub	r20,r2,r23
1000cbfc:	dd401d83 	ldbu	r21,118(sp)
1000cc00:	df002215 	stw	fp,136(sp)
1000cc04:	0021883a 	mov	r16,zero
1000cc08:	003e6906 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000cc0c:	9cc03fcc 	andi	r19,r19,255
1000cc10:	b811883a 	mov	r8,r23
1000cc14:	983fc126 	beq	r19,zero,1000cb1c <__alt_data_end+0xf800cb1c>
1000cc18:	d8c02303 	ldbu	r3,140(sp)
1000cc1c:	d8c01d85 	stb	r3,118(sp)
1000cc20:	003fbe06 	br	1000cb1c <__alt_data_end+0xf800cb1c>
1000cc24:	d9002217 	ldw	r4,136(sp)
1000cc28:	d9402217 	ldw	r5,136(sp)
1000cc2c:	21000017 	ldw	r4,0(r4)
1000cc30:	28800104 	addi	r2,r5,4
1000cc34:	d9002515 	stw	r4,148(sp)
1000cc38:	203e3d16 	blt	r4,zero,1000c530 <__alt_data_end+0xf800c530>
1000cc3c:	d8802215 	stw	r2,136(sp)
1000cc40:	b0c00007 	ldb	r3,0(r22)
1000cc44:	003db406 	br	1000c318 <__alt_data_end+0xf800c318>
1000cc48:	00c00ac4 	movi	r3,43
1000cc4c:	d8c02305 	stb	r3,140(sp)
1000cc50:	04c00044 	movi	r19,1
1000cc54:	b0c00007 	ldb	r3,0(r22)
1000cc58:	003daf06 	br	1000c318 <__alt_data_end+0xf800c318>
1000cc5c:	b0c00007 	ldb	r3,0(r22)
1000cc60:	01000a84 	movi	r4,42
1000cc64:	b4000044 	addi	r16,r22,1
1000cc68:	19025e26 	beq	r3,r4,1000d5e4 <___vfiprintf_internal_r+0x1440>
1000cc6c:	1f3ff404 	addi	fp,r3,-48
1000cc70:	0009883a 	mov	r4,zero
1000cc74:	af025236 	bltu	r21,fp,1000d5c0 <___vfiprintf_internal_r+0x141c>
1000cc78:	01400284 	movi	r5,10
1000cc7c:	0000e400 	call	10000e40 <__mulsi3>
1000cc80:	80c00007 	ldb	r3,0(r16)
1000cc84:	1709883a 	add	r4,r2,fp
1000cc88:	85800044 	addi	r22,r16,1
1000cc8c:	1f3ff404 	addi	fp,r3,-48
1000cc90:	b021883a 	mov	r16,r22
1000cc94:	af3ff82e 	bgeu	r21,fp,1000cc78 <__alt_data_end+0xf800cc78>
1000cc98:	2021883a 	mov	r16,r4
1000cc9c:	203d9f0e 	bge	r4,zero,1000c31c <__alt_data_end+0xf800c31c>
1000cca0:	043fffc4 	movi	r16,-1
1000cca4:	003d9d06 	br	1000c31c <__alt_data_end+0xf800c31c>
1000cca8:	8c401014 	ori	r17,r17,64
1000ccac:	b0c00007 	ldb	r3,0(r22)
1000ccb0:	003d9906 	br	1000c318 <__alt_data_end+0xf800c318>
1000ccb4:	d9002217 	ldw	r4,136(sp)
1000ccb8:	d8001d85 	stb	zero,118(sp)
1000ccbc:	20c00204 	addi	r3,r4,8
1000ccc0:	24c00017 	ldw	r19,0(r4)
1000ccc4:	25000117 	ldw	r20,4(r4)
1000ccc8:	8001e716 	blt	r16,zero,1000d468 <___vfiprintf_internal_r+0x12c4>
1000cccc:	013fdfc4 	movi	r4,-129
1000ccd0:	9d04b03a 	or	r2,r19,r20
1000ccd4:	d8c02215 	stw	r3,136(sp)
1000ccd8:	8922703a 	and	r17,r17,r4
1000ccdc:	002b883a 	mov	r21,zero
1000cce0:	103f2f1e 	bne	r2,zero,1000c9a0 <__alt_data_end+0xf800c9a0>
1000cce4:	803e2f26 	beq	r16,zero,1000c5a4 <__alt_data_end+0xf800c5a4>
1000cce8:	0027883a 	mov	r19,zero
1000ccec:	9cc00c04 	addi	r19,r19,48
1000ccf0:	dcc019c5 	stb	r19,103(sp)
1000ccf4:	dd002817 	ldw	r20,160(sp)
1000ccf8:	ddc019c4 	addi	r23,sp,103
1000ccfc:	003e2c06 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000cd00:	9cc03fcc 	andi	r19,r19,255
1000cd04:	b811883a 	mov	r8,r23
1000cd08:	9802571e 	bne	r19,zero,1000d668 <___vfiprintf_internal_r+0x14c4>
1000cd0c:	18005726 	beq	r3,zero,1000ce6c <___vfiprintf_internal_r+0xcc8>
1000cd10:	04c00044 	movi	r19,1
1000cd14:	d8c01005 	stb	r3,64(sp)
1000cd18:	d8001d85 	stb	zero,118(sp)
1000cd1c:	9829883a 	mov	r20,r19
1000cd20:	ddc01004 	addi	r23,sp,64
1000cd24:	003f0a06 	br	1000c950 <__alt_data_end+0xf800c950>
1000cd28:	d9402017 	ldw	r5,128(sp)
1000cd2c:	d9002117 	ldw	r4,132(sp)
1000cd30:	d9801a04 	addi	r6,sp,104
1000cd34:	da802a15 	stw	r10,168(sp)
1000cd38:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000cd3c:	da802a17 	ldw	r10,168(sp)
1000cd40:	1000501e 	bne	r2,zero,1000ce84 <___vfiprintf_internal_r+0xce0>
1000cd44:	d9801b17 	ldw	r6,108(sp)
1000cd48:	d8801c17 	ldw	r2,112(sp)
1000cd4c:	d811883a 	mov	r8,sp
1000cd50:	31000044 	addi	r4,r6,1
1000cd54:	003e3606 	br	1000c630 <__alt_data_end+0xf800c630>
1000cd58:	d9001b17 	ldw	r4,108(sp)
1000cd5c:	d8801c17 	ldw	r2,112(sp)
1000cd60:	21400044 	addi	r5,r4,1
1000cd64:	d9801d87 	ldb	r6,118(sp)
1000cd68:	303e5226 	beq	r6,zero,1000c6b4 <__alt_data_end+0xf800c6b4>
1000cd6c:	01800044 	movi	r6,1
1000cd70:	d9001d84 	addi	r4,sp,118
1000cd74:	1185883a 	add	r2,r2,r6
1000cd78:	41000015 	stw	r4,0(r8)
1000cd7c:	41800115 	stw	r6,4(r8)
1000cd80:	d8801c15 	stw	r2,112(sp)
1000cd84:	d9401b15 	stw	r5,108(sp)
1000cd88:	010001c4 	movi	r4,7
1000cd8c:	2140b00e 	bge	r4,r5,1000d050 <___vfiprintf_internal_r+0xeac>
1000cd90:	1000f61e 	bne	r2,zero,1000d16c <___vfiprintf_internal_r+0xfc8>
1000cd94:	3800b31e 	bne	r7,zero,1000d064 <___vfiprintf_internal_r+0xec0>
1000cd98:	0009883a 	mov	r4,zero
1000cd9c:	300b883a 	mov	r5,r6
1000cda0:	d811883a 	mov	r8,sp
1000cda4:	01802004 	movi	r6,128
1000cda8:	19be5226 	beq	r3,r6,1000c6f4 <__alt_data_end+0xf800c6f4>
1000cdac:	8521c83a 	sub	r16,r16,r20
1000cdb0:	043e790e 	bge	zero,r16,1000c798 <__alt_data_end+0xf800c798>
1000cdb4:	05400404 	movi	r21,16
1000cdb8:	ac01b00e 	bge	r21,r16,1000d47c <___vfiprintf_internal_r+0x12d8>
1000cdbc:	01440074 	movhi	r5,4097
1000cdc0:	29504f04 	addi	r5,r5,16700
1000cdc4:	d9402315 	stw	r5,140(sp)
1000cdc8:	070001c4 	movi	fp,7
1000cdcc:	00000506 	br	1000cde4 <___vfiprintf_internal_r+0xc40>
1000cdd0:	21400084 	addi	r5,r4,2
1000cdd4:	42000204 	addi	r8,r8,8
1000cdd8:	1809883a 	mov	r4,r3
1000cddc:	843ffc04 	addi	r16,r16,-16
1000cde0:	ac000d0e 	bge	r21,r16,1000ce18 <___vfiprintf_internal_r+0xc74>
1000cde4:	10800404 	addi	r2,r2,16
1000cde8:	20c00044 	addi	r3,r4,1
1000cdec:	44800015 	stw	r18,0(r8)
1000cdf0:	45400115 	stw	r21,4(r8)
1000cdf4:	d8801c15 	stw	r2,112(sp)
1000cdf8:	d8c01b15 	stw	r3,108(sp)
1000cdfc:	e0fff40e 	bge	fp,r3,1000cdd0 <__alt_data_end+0xf800cdd0>
1000ce00:	1000101e 	bne	r2,zero,1000ce44 <___vfiprintf_internal_r+0xca0>
1000ce04:	843ffc04 	addi	r16,r16,-16
1000ce08:	01400044 	movi	r5,1
1000ce0c:	0009883a 	mov	r4,zero
1000ce10:	d811883a 	mov	r8,sp
1000ce14:	ac3ff316 	blt	r21,r16,1000cde4 <__alt_data_end+0xf800cde4>
1000ce18:	d8c02317 	ldw	r3,140(sp)
1000ce1c:	1405883a 	add	r2,r2,r16
1000ce20:	44000115 	stw	r16,4(r8)
1000ce24:	40c00015 	stw	r3,0(r8)
1000ce28:	d8801c15 	stw	r2,112(sp)
1000ce2c:	d9401b15 	stw	r5,108(sp)
1000ce30:	00c001c4 	movi	r3,7
1000ce34:	19401916 	blt	r3,r5,1000ce9c <___vfiprintf_internal_r+0xcf8>
1000ce38:	42000204 	addi	r8,r8,8
1000ce3c:	29400044 	addi	r5,r5,1
1000ce40:	003e5506 	br	1000c798 <__alt_data_end+0xf800c798>
1000ce44:	d9402017 	ldw	r5,128(sp)
1000ce48:	d9002117 	ldw	r4,132(sp)
1000ce4c:	d9801a04 	addi	r6,sp,104
1000ce50:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000ce54:	10000b1e 	bne	r2,zero,1000ce84 <___vfiprintf_internal_r+0xce0>
1000ce58:	d9001b17 	ldw	r4,108(sp)
1000ce5c:	d8801c17 	ldw	r2,112(sp)
1000ce60:	d811883a 	mov	r8,sp
1000ce64:	21400044 	addi	r5,r4,1
1000ce68:	003fdc06 	br	1000cddc <__alt_data_end+0xf800cddc>
1000ce6c:	d8801c17 	ldw	r2,112(sp)
1000ce70:	10000426 	beq	r2,zero,1000ce84 <___vfiprintf_internal_r+0xce0>
1000ce74:	d9402017 	ldw	r5,128(sp)
1000ce78:	d9002117 	ldw	r4,132(sp)
1000ce7c:	d9801a04 	addi	r6,sp,104
1000ce80:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000ce84:	d9402017 	ldw	r5,128(sp)
1000ce88:	2880030b 	ldhu	r2,12(r5)
1000ce8c:	1080100c 	andi	r2,r2,64
1000ce90:	10014d1e 	bne	r2,zero,1000d3c8 <___vfiprintf_internal_r+0x1224>
1000ce94:	d8802417 	ldw	r2,144(sp)
1000ce98:	003d9706 	br	1000c4f8 <__alt_data_end+0xf800c4f8>
1000ce9c:	1000d21e 	bne	r2,zero,1000d1e8 <___vfiprintf_internal_r+0x1044>
1000cea0:	00c00044 	movi	r3,1
1000cea4:	a005883a 	mov	r2,r20
1000cea8:	ddc00015 	stw	r23,0(sp)
1000ceac:	dd000115 	stw	r20,4(sp)
1000ceb0:	dd001c15 	stw	r20,112(sp)
1000ceb4:	d8c01b15 	stw	r3,108(sp)
1000ceb8:	d811883a 	mov	r8,sp
1000cebc:	42000204 	addi	r8,r8,8
1000cec0:	8c40010c 	andi	r17,r17,4
1000cec4:	88004026 	beq	r17,zero,1000cfc8 <___vfiprintf_internal_r+0xe24>
1000cec8:	d9002517 	ldw	r4,148(sp)
1000cecc:	24e3c83a 	sub	r17,r4,r19
1000ced0:	04403d0e 	bge	zero,r17,1000cfc8 <___vfiprintf_internal_r+0xe24>
1000ced4:	04000404 	movi	r16,16
1000ced8:	8441a90e 	bge	r16,r17,1000d580 <___vfiprintf_internal_r+0x13dc>
1000cedc:	00c40074 	movhi	r3,4097
1000cee0:	18d05304 	addi	r3,r3,16716
1000cee4:	d9001b17 	ldw	r4,108(sp)
1000cee8:	d8c02315 	stw	r3,140(sp)
1000ceec:	050001c4 	movi	r20,7
1000cef0:	dd402117 	ldw	r21,132(sp)
1000cef4:	ddc02017 	ldw	r23,128(sp)
1000cef8:	00000506 	br	1000cf10 <___vfiprintf_internal_r+0xd6c>
1000cefc:	21400084 	addi	r5,r4,2
1000cf00:	42000204 	addi	r8,r8,8
1000cf04:	1809883a 	mov	r4,r3
1000cf08:	8c7ffc04 	addi	r17,r17,-16
1000cf0c:	84400f0e 	bge	r16,r17,1000cf4c <___vfiprintf_internal_r+0xda8>
1000cf10:	01440074 	movhi	r5,4097
1000cf14:	10800404 	addi	r2,r2,16
1000cf18:	20c00044 	addi	r3,r4,1
1000cf1c:	29505304 	addi	r5,r5,16716
1000cf20:	41400015 	stw	r5,0(r8)
1000cf24:	44000115 	stw	r16,4(r8)
1000cf28:	d8801c15 	stw	r2,112(sp)
1000cf2c:	d8c01b15 	stw	r3,108(sp)
1000cf30:	a0fff20e 	bge	r20,r3,1000cefc <__alt_data_end+0xf800cefc>
1000cf34:	1000141e 	bne	r2,zero,1000cf88 <___vfiprintf_internal_r+0xde4>
1000cf38:	8c7ffc04 	addi	r17,r17,-16
1000cf3c:	01400044 	movi	r5,1
1000cf40:	0009883a 	mov	r4,zero
1000cf44:	d811883a 	mov	r8,sp
1000cf48:	847ff116 	blt	r16,r17,1000cf10 <__alt_data_end+0xf800cf10>
1000cf4c:	d8c02317 	ldw	r3,140(sp)
1000cf50:	1445883a 	add	r2,r2,r17
1000cf54:	44400115 	stw	r17,4(r8)
1000cf58:	40c00015 	stw	r3,0(r8)
1000cf5c:	d8801c15 	stw	r2,112(sp)
1000cf60:	d9401b15 	stw	r5,108(sp)
1000cf64:	00c001c4 	movi	r3,7
1000cf68:	1940170e 	bge	r3,r5,1000cfc8 <___vfiprintf_internal_r+0xe24>
1000cf6c:	1000101e 	bne	r2,zero,1000cfb0 <___vfiprintf_internal_r+0xe0c>
1000cf70:	d8802517 	ldw	r2,148(sp)
1000cf74:	14c11616 	blt	r2,r19,1000d3d0 <___vfiprintf_internal_r+0x122c>
1000cf78:	d9002417 	ldw	r4,144(sp)
1000cf7c:	2089883a 	add	r4,r4,r2
1000cf80:	d9002415 	stw	r4,144(sp)
1000cf84:	003e1806 	br	1000c7e8 <__alt_data_end+0xf800c7e8>
1000cf88:	d9801a04 	addi	r6,sp,104
1000cf8c:	b80b883a 	mov	r5,r23
1000cf90:	a809883a 	mov	r4,r21
1000cf94:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000cf98:	103fba1e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000cf9c:	d9001b17 	ldw	r4,108(sp)
1000cfa0:	d8801c17 	ldw	r2,112(sp)
1000cfa4:	d811883a 	mov	r8,sp
1000cfa8:	21400044 	addi	r5,r4,1
1000cfac:	003fd606 	br	1000cf08 <__alt_data_end+0xf800cf08>
1000cfb0:	d9402017 	ldw	r5,128(sp)
1000cfb4:	d9002117 	ldw	r4,132(sp)
1000cfb8:	d9801a04 	addi	r6,sp,104
1000cfbc:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000cfc0:	103fb01e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000cfc4:	d8801c17 	ldw	r2,112(sp)
1000cfc8:	d8c02517 	ldw	r3,148(sp)
1000cfcc:	1cc0010e 	bge	r3,r19,1000cfd4 <___vfiprintf_internal_r+0xe30>
1000cfd0:	9807883a 	mov	r3,r19
1000cfd4:	d9002417 	ldw	r4,144(sp)
1000cfd8:	20c9883a 	add	r4,r4,r3
1000cfdc:	d9002415 	stw	r4,144(sp)
1000cfe0:	103e0126 	beq	r2,zero,1000c7e8 <__alt_data_end+0xf800c7e8>
1000cfe4:	d9402017 	ldw	r5,128(sp)
1000cfe8:	d9002117 	ldw	r4,132(sp)
1000cfec:	d9801a04 	addi	r6,sp,104
1000cff0:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000cff4:	103dfc26 	beq	r2,zero,1000c7e8 <__alt_data_end+0xf800c7e8>
1000cff8:	003fa206 	br	1000ce84 <__alt_data_end+0xf800ce84>
1000cffc:	d9402017 	ldw	r5,128(sp)
1000d000:	d9002117 	ldw	r4,132(sp)
1000d004:	d9801a04 	addi	r6,sp,104
1000d008:	d9c02b15 	stw	r7,172(sp)
1000d00c:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d010:	d9c02b17 	ldw	r7,172(sp)
1000d014:	103f9b1e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d018:	d9001b17 	ldw	r4,108(sp)
1000d01c:	d8801c17 	ldw	r2,112(sp)
1000d020:	d811883a 	mov	r8,sp
1000d024:	21800044 	addi	r6,r4,1
1000d028:	003dbf06 	br	1000c728 <__alt_data_end+0xf800c728>
1000d02c:	1000d81e 	bne	r2,zero,1000d390 <___vfiprintf_internal_r+0x11ec>
1000d030:	d9001d87 	ldb	r4,118(sp)
1000d034:	20000a26 	beq	r4,zero,1000d060 <___vfiprintf_internal_r+0xebc>
1000d038:	00800044 	movi	r2,1
1000d03c:	d9001d84 	addi	r4,sp,118
1000d040:	100b883a 	mov	r5,r2
1000d044:	d9000015 	stw	r4,0(sp)
1000d048:	d8800115 	stw	r2,4(sp)
1000d04c:	d811883a 	mov	r8,sp
1000d050:	2809883a 	mov	r4,r5
1000d054:	42000204 	addi	r8,r8,8
1000d058:	29400044 	addi	r5,r5,1
1000d05c:	003d9506 	br	1000c6b4 <__alt_data_end+0xf800c6b4>
1000d060:	3800fd26 	beq	r7,zero,1000d458 <___vfiprintf_internal_r+0x12b4>
1000d064:	00800084 	movi	r2,2
1000d068:	d9001d04 	addi	r4,sp,116
1000d06c:	d9000015 	stw	r4,0(sp)
1000d070:	d8800115 	stw	r2,4(sp)
1000d074:	01400044 	movi	r5,1
1000d078:	d811883a 	mov	r8,sp
1000d07c:	2809883a 	mov	r4,r5
1000d080:	42000204 	addi	r8,r8,8
1000d084:	29400044 	addi	r5,r5,1
1000d088:	003f4606 	br	1000cda4 <__alt_data_end+0xf800cda4>
1000d08c:	d8802517 	ldw	r2,148(sp)
1000d090:	14c0010e 	bge	r2,r19,1000d098 <___vfiprintf_internal_r+0xef4>
1000d094:	9805883a 	mov	r2,r19
1000d098:	d9402417 	ldw	r5,144(sp)
1000d09c:	288b883a 	add	r5,r5,r2
1000d0a0:	d9402415 	stw	r5,144(sp)
1000d0a4:	003dd006 	br	1000c7e8 <__alt_data_end+0xf800c7e8>
1000d0a8:	d8001d85 	stb	zero,118(sp)
1000d0ac:	80005d16 	blt	r16,zero,1000d224 <___vfiprintf_internal_r+0x1080>
1000d0b0:	00ffdfc4 	movi	r3,-129
1000d0b4:	9d04b03a 	or	r2,r19,r20
1000d0b8:	88e2703a 	and	r17,r17,r3
1000d0bc:	103d3726 	beq	r2,zero,1000c59c <__alt_data_end+0xf800c59c>
1000d0c0:	002b883a 	mov	r21,zero
1000d0c4:	d9002617 	ldw	r4,152(sp)
1000d0c8:	ddc01a04 	addi	r23,sp,104
1000d0cc:	988003cc 	andi	r2,r19,15
1000d0d0:	a006973a 	slli	r3,r20,28
1000d0d4:	2085883a 	add	r2,r4,r2
1000d0d8:	9826d13a 	srli	r19,r19,4
1000d0dc:	10800003 	ldbu	r2,0(r2)
1000d0e0:	a028d13a 	srli	r20,r20,4
1000d0e4:	bdffffc4 	addi	r23,r23,-1
1000d0e8:	1ce6b03a 	or	r19,r3,r19
1000d0ec:	b8800005 	stb	r2,0(r23)
1000d0f0:	9d04b03a 	or	r2,r19,r20
1000d0f4:	103ff51e 	bne	r2,zero,1000d0cc <__alt_data_end+0xf800d0cc>
1000d0f8:	d8801e17 	ldw	r2,120(sp)
1000d0fc:	15e9c83a 	sub	r20,r2,r23
1000d100:	003d2b06 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000d104:	d9402017 	ldw	r5,128(sp)
1000d108:	d9002117 	ldw	r4,132(sp)
1000d10c:	d9801a04 	addi	r6,sp,104
1000d110:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d114:	103f5b1e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d118:	d8801c17 	ldw	r2,112(sp)
1000d11c:	d811883a 	mov	r8,sp
1000d120:	003f6706 	br	1000cec0 <__alt_data_end+0xf800cec0>
1000d124:	d9402017 	ldw	r5,128(sp)
1000d128:	d9002117 	ldw	r4,132(sp)
1000d12c:	d9801a04 	addi	r6,sp,104
1000d130:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d134:	103f531e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d138:	d811883a 	mov	r8,sp
1000d13c:	003cd906 	br	1000c4a4 <__alt_data_end+0xf800c4a4>
1000d140:	10803fcc 	andi	r2,r2,255
1000d144:	1080201c 	xori	r2,r2,128
1000d148:	10bfe004 	addi	r2,r2,-128
1000d14c:	00c00c04 	movi	r3,48
1000d150:	10ffe926 	beq	r2,r3,1000d0f8 <__alt_data_end+0xf800d0f8>
1000d154:	b8ffffc5 	stb	r3,-1(r23)
1000d158:	d8c01e17 	ldw	r3,120(sp)
1000d15c:	b8bfffc4 	addi	r2,r23,-1
1000d160:	102f883a 	mov	r23,r2
1000d164:	18a9c83a 	sub	r20,r3,r2
1000d168:	003d1106 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000d16c:	d9402017 	ldw	r5,128(sp)
1000d170:	d9002117 	ldw	r4,132(sp)
1000d174:	d9801a04 	addi	r6,sp,104
1000d178:	d8c02a15 	stw	r3,168(sp)
1000d17c:	d9c02b15 	stw	r7,172(sp)
1000d180:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d184:	d8c02a17 	ldw	r3,168(sp)
1000d188:	d9c02b17 	ldw	r7,172(sp)
1000d18c:	103f3d1e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d190:	d9001b17 	ldw	r4,108(sp)
1000d194:	d8801c17 	ldw	r2,112(sp)
1000d198:	d811883a 	mov	r8,sp
1000d19c:	21400044 	addi	r5,r4,1
1000d1a0:	003d4406 	br	1000c6b4 <__alt_data_end+0xf800c6b4>
1000d1a4:	d9402017 	ldw	r5,128(sp)
1000d1a8:	d9002117 	ldw	r4,132(sp)
1000d1ac:	d9801a04 	addi	r6,sp,104
1000d1b0:	d8c02a15 	stw	r3,168(sp)
1000d1b4:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d1b8:	d8c02a17 	ldw	r3,168(sp)
1000d1bc:	103f311e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d1c0:	d9001b17 	ldw	r4,108(sp)
1000d1c4:	d8801c17 	ldw	r2,112(sp)
1000d1c8:	d811883a 	mov	r8,sp
1000d1cc:	21400044 	addi	r5,r4,1
1000d1d0:	003ef406 	br	1000cda4 <__alt_data_end+0xf800cda4>
1000d1d4:	1000bd1e 	bne	r2,zero,1000d4cc <___vfiprintf_internal_r+0x1328>
1000d1d8:	01400044 	movi	r5,1
1000d1dc:	0009883a 	mov	r4,zero
1000d1e0:	d811883a 	mov	r8,sp
1000d1e4:	003ef106 	br	1000cdac <__alt_data_end+0xf800cdac>
1000d1e8:	d9402017 	ldw	r5,128(sp)
1000d1ec:	d9002117 	ldw	r4,132(sp)
1000d1f0:	d9801a04 	addi	r6,sp,104
1000d1f4:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d1f8:	103f221e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d1fc:	d9401b17 	ldw	r5,108(sp)
1000d200:	d8801c17 	ldw	r2,112(sp)
1000d204:	d811883a 	mov	r8,sp
1000d208:	29400044 	addi	r5,r5,1
1000d20c:	003d6206 	br	1000c798 <__alt_data_end+0xf800c798>
1000d210:	01440074 	movhi	r5,4097
1000d214:	294fde04 	addi	r5,r5,16248
1000d218:	d9402615 	stw	r5,152(sp)
1000d21c:	d8c02215 	stw	r3,136(sp)
1000d220:	1023883a 	mov	r17,r2
1000d224:	9d04b03a 	or	r2,r19,r20
1000d228:	103fa51e 	bne	r2,zero,1000d0c0 <__alt_data_end+0xf800d0c0>
1000d22c:	002b883a 	mov	r21,zero
1000d230:	00800084 	movi	r2,2
1000d234:	003e4a06 	br	1000cb60 <__alt_data_end+0xf800cb60>
1000d238:	01440074 	movhi	r5,4097
1000d23c:	294fde04 	addi	r5,r5,16248
1000d240:	002b883a 	mov	r21,zero
1000d244:	d9402615 	stw	r5,152(sp)
1000d248:	003f9e06 	br	1000d0c4 <__alt_data_end+0xf800d0c4>
1000d24c:	d9402217 	ldw	r5,136(sp)
1000d250:	d8001d85 	stb	zero,118(sp)
1000d254:	0029883a 	mov	r20,zero
1000d258:	28800104 	addi	r2,r5,4
1000d25c:	2cc00017 	ldw	r19,0(r5)
1000d260:	803e3a16 	blt	r16,zero,1000cb4c <__alt_data_end+0xf800cb4c>
1000d264:	00ffdfc4 	movi	r3,-129
1000d268:	d8802215 	stw	r2,136(sp)
1000d26c:	88e2703a 	and	r17,r17,r3
1000d270:	002b883a 	mov	r21,zero
1000d274:	983e9b26 	beq	r19,zero,1000cce4 <__alt_data_end+0xf800cce4>
1000d278:	00800244 	movi	r2,9
1000d27c:	14fdc936 	bltu	r2,r19,1000c9a4 <__alt_data_end+0xf800c9a4>
1000d280:	003e9a06 	br	1000ccec <__alt_data_end+0xf800ccec>
1000d284:	00800c04 	movi	r2,48
1000d288:	d8c01d45 	stb	r3,117(sp)
1000d28c:	d8801d05 	stb	r2,116(sp)
1000d290:	d8001d85 	stb	zero,118(sp)
1000d294:	88c00094 	ori	r3,r17,2
1000d298:	80009c16 	blt	r16,zero,1000d50c <___vfiprintf_internal_r+0x1368>
1000d29c:	00bfdfc4 	movi	r2,-129
1000d2a0:	88a2703a 	and	r17,r17,r2
1000d2a4:	8c400094 	ori	r17,r17,2
1000d2a8:	002b883a 	mov	r21,zero
1000d2ac:	003f8506 	br	1000d0c4 <__alt_data_end+0xf800d0c4>
1000d2b0:	b029883a 	mov	r20,r22
1000d2b4:	003c0b06 	br	1000c2e4 <__alt_data_end+0xf800c2e4>
1000d2b8:	04e7c83a 	sub	r19,zero,r19
1000d2bc:	05400b44 	movi	r21,45
1000d2c0:	9804c03a 	cmpne	r2,r19,zero
1000d2c4:	0529c83a 	sub	r20,zero,r20
1000d2c8:	dd401d85 	stb	r21,118(sp)
1000d2cc:	a0a9c83a 	sub	r20,r20,r2
1000d2d0:	80009716 	blt	r16,zero,1000d530 <___vfiprintf_internal_r+0x138c>
1000d2d4:	00bfdfc4 	movi	r2,-129
1000d2d8:	88a2703a 	and	r17,r17,r2
1000d2dc:	003db006 	br	1000c9a0 <__alt_data_end+0xf800c9a0>
1000d2e0:	b0c00007 	ldb	r3,0(r22)
1000d2e4:	003c0c06 	br	1000c318 <__alt_data_end+0xf800c318>
1000d2e8:	8880100c 	andi	r2,r17,64
1000d2ec:	d8001d85 	stb	zero,118(sp)
1000d2f0:	1000461e 	bne	r2,zero,1000d40c <___vfiprintf_internal_r+0x1268>
1000d2f4:	d9002217 	ldw	r4,136(sp)
1000d2f8:	0029883a 	mov	r20,zero
1000d2fc:	20800104 	addi	r2,r4,4
1000d300:	24c00017 	ldw	r19,0(r4)
1000d304:	803df80e 	bge	r16,zero,1000cae8 <__alt_data_end+0xf800cae8>
1000d308:	9d06b03a 	or	r3,r19,r20
1000d30c:	d8802215 	stw	r2,136(sp)
1000d310:	183d5e1e 	bne	r3,zero,1000c88c <__alt_data_end+0xf800c88c>
1000d314:	002b883a 	mov	r21,zero
1000d318:	0005883a 	mov	r2,zero
1000d31c:	003e1006 	br	1000cb60 <__alt_data_end+0xf800cb60>
1000d320:	8880040c 	andi	r2,r17,16
1000d324:	1000321e 	bne	r2,zero,1000d3f0 <___vfiprintf_internal_r+0x124c>
1000d328:	8c40100c 	andi	r17,r17,64
1000d32c:	88008d26 	beq	r17,zero,1000d564 <___vfiprintf_internal_r+0x13c0>
1000d330:	d9402217 	ldw	r5,136(sp)
1000d334:	d8c02417 	ldw	r3,144(sp)
1000d338:	28800017 	ldw	r2,0(r5)
1000d33c:	29400104 	addi	r5,r5,4
1000d340:	d9402215 	stw	r5,136(sp)
1000d344:	10c0000d 	sth	r3,0(r2)
1000d348:	003bca06 	br	1000c274 <__alt_data_end+0xf800c274>
1000d34c:	8880100c 	andi	r2,r17,64
1000d350:	10003a26 	beq	r2,zero,1000d43c <___vfiprintf_internal_r+0x1298>
1000d354:	d8802217 	ldw	r2,136(sp)
1000d358:	14c0000f 	ldh	r19,0(r2)
1000d35c:	10800104 	addi	r2,r2,4
1000d360:	d8802215 	stw	r2,136(sp)
1000d364:	9829d7fa 	srai	r20,r19,31
1000d368:	a005883a 	mov	r2,r20
1000d36c:	003d8506 	br	1000c984 <__alt_data_end+0xf800c984>
1000d370:	8880100c 	andi	r2,r17,64
1000d374:	10002b26 	beq	r2,zero,1000d424 <___vfiprintf_internal_r+0x1280>
1000d378:	d8802217 	ldw	r2,136(sp)
1000d37c:	0029883a 	mov	r20,zero
1000d380:	14c0000b 	ldhu	r19,0(r2)
1000d384:	10800104 	addi	r2,r2,4
1000d388:	d8802215 	stw	r2,136(sp)
1000d38c:	003d5d06 	br	1000c904 <__alt_data_end+0xf800c904>
1000d390:	d9402017 	ldw	r5,128(sp)
1000d394:	d9002117 	ldw	r4,132(sp)
1000d398:	d9801a04 	addi	r6,sp,104
1000d39c:	d8c02a15 	stw	r3,168(sp)
1000d3a0:	d9c02b15 	stw	r7,172(sp)
1000d3a4:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d3a8:	d8c02a17 	ldw	r3,168(sp)
1000d3ac:	d9c02b17 	ldw	r7,172(sp)
1000d3b0:	103eb41e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d3b4:	d9001b17 	ldw	r4,108(sp)
1000d3b8:	d8801c17 	ldw	r2,112(sp)
1000d3bc:	d811883a 	mov	r8,sp
1000d3c0:	21400044 	addi	r5,r4,1
1000d3c4:	003e6706 	br	1000cd64 <__alt_data_end+0xf800cd64>
1000d3c8:	00bfffc4 	movi	r2,-1
1000d3cc:	003c4a06 	br	1000c4f8 <__alt_data_end+0xf800c4f8>
1000d3d0:	9805883a 	mov	r2,r19
1000d3d4:	003ee806 	br	1000cf78 <__alt_data_end+0xf800cf78>
1000d3d8:	d8c02217 	ldw	r3,136(sp)
1000d3dc:	0029883a 	mov	r20,zero
1000d3e0:	18800104 	addi	r2,r3,4
1000d3e4:	1cc0000b 	ldhu	r19,0(r3)
1000d3e8:	803f9e0e 	bge	r16,zero,1000d264 <__alt_data_end+0xf800d264>
1000d3ec:	003dd706 	br	1000cb4c <__alt_data_end+0xf800cb4c>
1000d3f0:	d8c02217 	ldw	r3,136(sp)
1000d3f4:	d9002417 	ldw	r4,144(sp)
1000d3f8:	18800017 	ldw	r2,0(r3)
1000d3fc:	18c00104 	addi	r3,r3,4
1000d400:	d8c02215 	stw	r3,136(sp)
1000d404:	11000015 	stw	r4,0(r2)
1000d408:	003b9a06 	br	1000c274 <__alt_data_end+0xf800c274>
1000d40c:	d8c02217 	ldw	r3,136(sp)
1000d410:	0029883a 	mov	r20,zero
1000d414:	18800104 	addi	r2,r3,4
1000d418:	1cc0000b 	ldhu	r19,0(r3)
1000d41c:	803db20e 	bge	r16,zero,1000cae8 <__alt_data_end+0xf800cae8>
1000d420:	003fb906 	br	1000d308 <__alt_data_end+0xf800d308>
1000d424:	d9002217 	ldw	r4,136(sp)
1000d428:	0029883a 	mov	r20,zero
1000d42c:	24c00017 	ldw	r19,0(r4)
1000d430:	21000104 	addi	r4,r4,4
1000d434:	d9002215 	stw	r4,136(sp)
1000d438:	003d3206 	br	1000c904 <__alt_data_end+0xf800c904>
1000d43c:	d8c02217 	ldw	r3,136(sp)
1000d440:	1cc00017 	ldw	r19,0(r3)
1000d444:	18c00104 	addi	r3,r3,4
1000d448:	d8c02215 	stw	r3,136(sp)
1000d44c:	9829d7fa 	srai	r20,r19,31
1000d450:	a005883a 	mov	r2,r20
1000d454:	003d4b06 	br	1000c984 <__alt_data_end+0xf800c984>
1000d458:	0009883a 	mov	r4,zero
1000d45c:	01400044 	movi	r5,1
1000d460:	d811883a 	mov	r8,sp
1000d464:	003e4f06 	br	1000cda4 <__alt_data_end+0xf800cda4>
1000d468:	d8c02215 	stw	r3,136(sp)
1000d46c:	002b883a 	mov	r21,zero
1000d470:	003db806 	br	1000cb54 <__alt_data_end+0xf800cb54>
1000d474:	d811883a 	mov	r8,sp
1000d478:	003e9606 	br	1000ced4 <__alt_data_end+0xf800ced4>
1000d47c:	01040074 	movhi	r4,4097
1000d480:	21104f04 	addi	r4,r4,16700
1000d484:	d9002315 	stw	r4,140(sp)
1000d488:	003e6306 	br	1000ce18 <__alt_data_end+0xf800ce18>
1000d48c:	b0c00043 	ldbu	r3,1(r22)
1000d490:	8c400814 	ori	r17,r17,32
1000d494:	b5800044 	addi	r22,r22,1
1000d498:	18c03fcc 	andi	r3,r3,255
1000d49c:	18c0201c 	xori	r3,r3,128
1000d4a0:	18ffe004 	addi	r3,r3,-128
1000d4a4:	003b9c06 	br	1000c318 <__alt_data_end+0xf800c318>
1000d4a8:	b809883a 	mov	r4,r23
1000d4ac:	da002a15 	stw	r8,168(sp)
1000d4b0:	00010e80 	call	100010e8 <strlen>
1000d4b4:	1029883a 	mov	r20,r2
1000d4b8:	dd401d83 	ldbu	r21,118(sp)
1000d4bc:	df002215 	stw	fp,136(sp)
1000d4c0:	0021883a 	mov	r16,zero
1000d4c4:	da002a17 	ldw	r8,168(sp)
1000d4c8:	003c3906 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000d4cc:	d9402017 	ldw	r5,128(sp)
1000d4d0:	d9002117 	ldw	r4,132(sp)
1000d4d4:	d9801a04 	addi	r6,sp,104
1000d4d8:	000c0900 	call	1000c090 <__sprint_r.part.0>
1000d4dc:	103e691e 	bne	r2,zero,1000ce84 <__alt_data_end+0xf800ce84>
1000d4e0:	d9001b17 	ldw	r4,108(sp)
1000d4e4:	d8801c17 	ldw	r2,112(sp)
1000d4e8:	d811883a 	mov	r8,sp
1000d4ec:	21400044 	addi	r5,r4,1
1000d4f0:	003e2e06 	br	1000cdac <__alt_data_end+0xf800cdac>
1000d4f4:	01040074 	movhi	r4,4097
1000d4f8:	21105304 	addi	r4,r4,16716
1000d4fc:	d9002315 	stw	r4,140(sp)
1000d500:	d9001b17 	ldw	r4,108(sp)
1000d504:	21000044 	addi	r4,r4,1
1000d508:	003c5e06 	br	1000c684 <__alt_data_end+0xf800c684>
1000d50c:	002b883a 	mov	r21,zero
1000d510:	00800084 	movi	r2,2
1000d514:	10803fcc 	andi	r2,r2,255
1000d518:	01000044 	movi	r4,1
1000d51c:	11002b26 	beq	r2,r4,1000d5cc <___vfiprintf_internal_r+0x1428>
1000d520:	01000084 	movi	r4,2
1000d524:	11002b1e 	bne	r2,r4,1000d5d4 <___vfiprintf_internal_r+0x1430>
1000d528:	1823883a 	mov	r17,r3
1000d52c:	003ee506 	br	1000d0c4 <__alt_data_end+0xf800d0c4>
1000d530:	8807883a 	mov	r3,r17
1000d534:	00800044 	movi	r2,1
1000d538:	003ff606 	br	1000d514 <__alt_data_end+0xf800d514>
1000d53c:	00800184 	movi	r2,6
1000d540:	1400012e 	bgeu	r2,r16,1000d548 <___vfiprintf_internal_r+0x13a4>
1000d544:	1021883a 	mov	r16,r2
1000d548:	8029883a 	mov	r20,r16
1000d54c:	8027883a 	mov	r19,r16
1000d550:	80002216 	blt	r16,zero,1000d5dc <___vfiprintf_internal_r+0x1438>
1000d554:	05c40074 	movhi	r23,4097
1000d558:	df002215 	stw	fp,136(sp)
1000d55c:	bdcfe304 	addi	r23,r23,16268
1000d560:	003cfb06 	br	1000c950 <__alt_data_end+0xf800c950>
1000d564:	d9002217 	ldw	r4,136(sp)
1000d568:	d9402417 	ldw	r5,144(sp)
1000d56c:	20800017 	ldw	r2,0(r4)
1000d570:	21000104 	addi	r4,r4,4
1000d574:	d9002215 	stw	r4,136(sp)
1000d578:	11400015 	stw	r5,0(r2)
1000d57c:	003b3d06 	br	1000c274 <__alt_data_end+0xf800c274>
1000d580:	01440074 	movhi	r5,4097
1000d584:	29505304 	addi	r5,r5,16716
1000d588:	d9402315 	stw	r5,140(sp)
1000d58c:	d9401b17 	ldw	r5,108(sp)
1000d590:	29400044 	addi	r5,r5,1
1000d594:	003e6d06 	br	1000cf4c <__alt_data_end+0xf800cf4c>
1000d598:	8029883a 	mov	r20,r16
1000d59c:	dd401d83 	ldbu	r21,118(sp)
1000d5a0:	df002215 	stw	fp,136(sp)
1000d5a4:	0021883a 	mov	r16,zero
1000d5a8:	003c0106 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000d5ac:	00c40074 	movhi	r3,4097
1000d5b0:	18d04f04 	addi	r3,r3,16700
1000d5b4:	d8c02315 	stw	r3,140(sp)
1000d5b8:	280d883a 	mov	r6,r5
1000d5bc:	003c6906 	br	1000c764 <__alt_data_end+0xf800c764>
1000d5c0:	802d883a 	mov	r22,r16
1000d5c4:	0021883a 	mov	r16,zero
1000d5c8:	003b5406 	br	1000c31c <__alt_data_end+0xf800c31c>
1000d5cc:	1823883a 	mov	r17,r3
1000d5d0:	003cf306 	br	1000c9a0 <__alt_data_end+0xf800c9a0>
1000d5d4:	1823883a 	mov	r17,r3
1000d5d8:	003cad06 	br	1000c890 <__alt_data_end+0xf800c890>
1000d5dc:	0027883a 	mov	r19,zero
1000d5e0:	003fdc06 	br	1000d554 <__alt_data_end+0xf800d554>
1000d5e4:	d9402217 	ldw	r5,136(sp)
1000d5e8:	8005883a 	mov	r2,r16
1000d5ec:	b0c00043 	ldbu	r3,1(r22)
1000d5f0:	2c000017 	ldw	r16,0(r5)
1000d5f4:	29000104 	addi	r4,r5,4
1000d5f8:	d9002215 	stw	r4,136(sp)
1000d5fc:	102d883a 	mov	r22,r2
1000d600:	803fa50e 	bge	r16,zero,1000d498 <__alt_data_end+0xf800d498>
1000d604:	18c03fcc 	andi	r3,r3,255
1000d608:	18c0201c 	xori	r3,r3,128
1000d60c:	043fffc4 	movi	r16,-1
1000d610:	18ffe004 	addi	r3,r3,-128
1000d614:	003b4006 	br	1000c318 <__alt_data_end+0xf800c318>
1000d618:	d9402303 	ldbu	r5,140(sp)
1000d61c:	d9401d85 	stb	r5,118(sp)
1000d620:	003cae06 	br	1000c8dc <__alt_data_end+0xf800c8dc>
1000d624:	d8c02303 	ldbu	r3,140(sp)
1000d628:	d8c01d85 	stb	r3,118(sp)
1000d62c:	003d1406 	br	1000ca80 <__alt_data_end+0xf800ca80>
1000d630:	d8c02303 	ldbu	r3,140(sp)
1000d634:	d8c01d85 	stb	r3,118(sp)
1000d638:	003cca06 	br	1000c964 <__alt_data_end+0xf800c964>
1000d63c:	8880004c 	andi	r2,r17,1
1000d640:	002b883a 	mov	r21,zero
1000d644:	10000526 	beq	r2,zero,1000d65c <___vfiprintf_internal_r+0x14b8>
1000d648:	00800c04 	movi	r2,48
1000d64c:	d88019c5 	stb	r2,103(sp)
1000d650:	dd002817 	ldw	r20,160(sp)
1000d654:	ddc019c4 	addi	r23,sp,103
1000d658:	003bd506 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000d65c:	0029883a 	mov	r20,zero
1000d660:	ddc01a04 	addi	r23,sp,104
1000d664:	003bd206 	br	1000c5b0 <__alt_data_end+0xf800c5b0>
1000d668:	d9002303 	ldbu	r4,140(sp)
1000d66c:	d9001d85 	stb	r4,118(sp)
1000d670:	003da606 	br	1000cd0c <__alt_data_end+0xf800cd0c>
1000d674:	d8c02303 	ldbu	r3,140(sp)
1000d678:	d8c01d85 	stb	r3,118(sp)
1000d67c:	003c7606 	br	1000c858 <__alt_data_end+0xf800c858>
1000d680:	d8c02303 	ldbu	r3,140(sp)
1000d684:	d8c01d85 	stb	r3,118(sp)
1000d688:	003c6506 	br	1000c820 <__alt_data_end+0xf800c820>
1000d68c:	d9002303 	ldbu	r4,140(sp)
1000d690:	d9001d85 	stb	r4,118(sp)
1000d694:	003d3d06 	br	1000cb8c <__alt_data_end+0xf800cb8c>
1000d698:	d8c02303 	ldbu	r3,140(sp)
1000d69c:	d8c01d85 	stb	r3,118(sp)
1000d6a0:	003d1d06 	br	1000cb18 <__alt_data_end+0xf800cb18>
1000d6a4:	d8c02303 	ldbu	r3,140(sp)
1000d6a8:	d8c01d85 	stb	r3,118(sp)
1000d6ac:	003d0306 	br	1000cabc <__alt_data_end+0xf800cabc>

1000d6b0 <__vfiprintf_internal>:
1000d6b0:	00840074 	movhi	r2,4097
1000d6b4:	10980a04 	addi	r2,r2,24616
1000d6b8:	300f883a 	mov	r7,r6
1000d6bc:	280d883a 	mov	r6,r5
1000d6c0:	200b883a 	mov	r5,r4
1000d6c4:	11000017 	ldw	r4,0(r2)
1000d6c8:	000c1a41 	jmpi	1000c1a4 <___vfiprintf_internal_r>

1000d6cc <__sbprintf>:
1000d6cc:	2880030b 	ldhu	r2,12(r5)
1000d6d0:	2ac01917 	ldw	r11,100(r5)
1000d6d4:	2a80038b 	ldhu	r10,14(r5)
1000d6d8:	2a400717 	ldw	r9,28(r5)
1000d6dc:	2a000917 	ldw	r8,36(r5)
1000d6e0:	defee204 	addi	sp,sp,-1144
1000d6e4:	00c10004 	movi	r3,1024
1000d6e8:	dc011a15 	stw	r16,1128(sp)
1000d6ec:	10bfff4c 	andi	r2,r2,65533
1000d6f0:	2821883a 	mov	r16,r5
1000d6f4:	d8cb883a 	add	r5,sp,r3
1000d6f8:	dc811c15 	stw	r18,1136(sp)
1000d6fc:	dc411b15 	stw	r17,1132(sp)
1000d700:	dfc11d15 	stw	ra,1140(sp)
1000d704:	2025883a 	mov	r18,r4
1000d708:	d881030d 	sth	r2,1036(sp)
1000d70c:	dac11915 	stw	r11,1124(sp)
1000d710:	da81038d 	sth	r10,1038(sp)
1000d714:	da410715 	stw	r9,1052(sp)
1000d718:	da010915 	stw	r8,1060(sp)
1000d71c:	dec10015 	stw	sp,1024(sp)
1000d720:	dec10415 	stw	sp,1040(sp)
1000d724:	d8c10215 	stw	r3,1032(sp)
1000d728:	d8c10515 	stw	r3,1044(sp)
1000d72c:	d8010615 	stw	zero,1048(sp)
1000d730:	000c1a40 	call	1000c1a4 <___vfiprintf_internal_r>
1000d734:	1023883a 	mov	r17,r2
1000d738:	10000416 	blt	r2,zero,1000d74c <__sbprintf+0x80>
1000d73c:	d9410004 	addi	r5,sp,1024
1000d740:	9009883a 	mov	r4,r18
1000d744:	00074100 	call	10007410 <_fflush_r>
1000d748:	10000d1e 	bne	r2,zero,1000d780 <__sbprintf+0xb4>
1000d74c:	d881030b 	ldhu	r2,1036(sp)
1000d750:	1080100c 	andi	r2,r2,64
1000d754:	10000326 	beq	r2,zero,1000d764 <__sbprintf+0x98>
1000d758:	8080030b 	ldhu	r2,12(r16)
1000d75c:	10801014 	ori	r2,r2,64
1000d760:	8080030d 	sth	r2,12(r16)
1000d764:	8805883a 	mov	r2,r17
1000d768:	dfc11d17 	ldw	ra,1140(sp)
1000d76c:	dc811c17 	ldw	r18,1136(sp)
1000d770:	dc411b17 	ldw	r17,1132(sp)
1000d774:	dc011a17 	ldw	r16,1128(sp)
1000d778:	dec11e04 	addi	sp,sp,1144
1000d77c:	f800283a 	ret
1000d780:	047fffc4 	movi	r17,-1
1000d784:	003ff106 	br	1000d74c <__alt_data_end+0xf800d74c>

1000d788 <_write_r>:
1000d788:	defffd04 	addi	sp,sp,-12
1000d78c:	2805883a 	mov	r2,r5
1000d790:	dc000015 	stw	r16,0(sp)
1000d794:	04040074 	movhi	r16,4097
1000d798:	dc400115 	stw	r17,4(sp)
1000d79c:	300b883a 	mov	r5,r6
1000d7a0:	841f9404 	addi	r16,r16,32336
1000d7a4:	2023883a 	mov	r17,r4
1000d7a8:	380d883a 	mov	r6,r7
1000d7ac:	1009883a 	mov	r4,r2
1000d7b0:	dfc00215 	stw	ra,8(sp)
1000d7b4:	80000015 	stw	zero,0(r16)
1000d7b8:	0011f080 	call	10011f08 <write>
1000d7bc:	00ffffc4 	movi	r3,-1
1000d7c0:	10c00526 	beq	r2,r3,1000d7d8 <_write_r+0x50>
1000d7c4:	dfc00217 	ldw	ra,8(sp)
1000d7c8:	dc400117 	ldw	r17,4(sp)
1000d7cc:	dc000017 	ldw	r16,0(sp)
1000d7d0:	dec00304 	addi	sp,sp,12
1000d7d4:	f800283a 	ret
1000d7d8:	80c00017 	ldw	r3,0(r16)
1000d7dc:	183ff926 	beq	r3,zero,1000d7c4 <__alt_data_end+0xf800d7c4>
1000d7e0:	88c00015 	stw	r3,0(r17)
1000d7e4:	003ff706 	br	1000d7c4 <__alt_data_end+0xf800d7c4>

1000d7e8 <_close_r>:
1000d7e8:	defffd04 	addi	sp,sp,-12
1000d7ec:	dc000015 	stw	r16,0(sp)
1000d7f0:	04040074 	movhi	r16,4097
1000d7f4:	dc400115 	stw	r17,4(sp)
1000d7f8:	841f9404 	addi	r16,r16,32336
1000d7fc:	2023883a 	mov	r17,r4
1000d800:	2809883a 	mov	r4,r5
1000d804:	dfc00215 	stw	ra,8(sp)
1000d808:	80000015 	stw	zero,0(r16)
1000d80c:	00116800 	call	10011680 <close>
1000d810:	00ffffc4 	movi	r3,-1
1000d814:	10c00526 	beq	r2,r3,1000d82c <_close_r+0x44>
1000d818:	dfc00217 	ldw	ra,8(sp)
1000d81c:	dc400117 	ldw	r17,4(sp)
1000d820:	dc000017 	ldw	r16,0(sp)
1000d824:	dec00304 	addi	sp,sp,12
1000d828:	f800283a 	ret
1000d82c:	80c00017 	ldw	r3,0(r16)
1000d830:	183ff926 	beq	r3,zero,1000d818 <__alt_data_end+0xf800d818>
1000d834:	88c00015 	stw	r3,0(r17)
1000d838:	003ff706 	br	1000d818 <__alt_data_end+0xf800d818>

1000d83c <_calloc_r>:
1000d83c:	defffe04 	addi	sp,sp,-8
1000d840:	2805883a 	mov	r2,r5
1000d844:	dc000015 	stw	r16,0(sp)
1000d848:	300b883a 	mov	r5,r6
1000d84c:	2021883a 	mov	r16,r4
1000d850:	1009883a 	mov	r4,r2
1000d854:	dfc00115 	stw	ra,4(sp)
1000d858:	0000e400 	call	10000e40 <__mulsi3>
1000d85c:	100b883a 	mov	r5,r2
1000d860:	8009883a 	mov	r4,r16
1000d864:	00085680 	call	10008568 <_malloc_r>
1000d868:	10002926 	beq	r2,zero,1000d910 <_calloc_r+0xd4>
1000d86c:	11bfff17 	ldw	r6,-4(r2)
1000d870:	1021883a 	mov	r16,r2
1000d874:	00bfff04 	movi	r2,-4
1000d878:	308c703a 	and	r6,r6,r2
1000d87c:	00c00904 	movi	r3,36
1000d880:	308d883a 	add	r6,r6,r2
1000d884:	19801636 	bltu	r3,r6,1000d8e0 <_calloc_r+0xa4>
1000d888:	008004c4 	movi	r2,19
1000d88c:	11800b2e 	bgeu	r2,r6,1000d8bc <_calloc_r+0x80>
1000d890:	80000015 	stw	zero,0(r16)
1000d894:	80000115 	stw	zero,4(r16)
1000d898:	008006c4 	movi	r2,27
1000d89c:	11801a2e 	bgeu	r2,r6,1000d908 <_calloc_r+0xcc>
1000d8a0:	80000215 	stw	zero,8(r16)
1000d8a4:	80000315 	stw	zero,12(r16)
1000d8a8:	30c0151e 	bne	r6,r3,1000d900 <_calloc_r+0xc4>
1000d8ac:	80000415 	stw	zero,16(r16)
1000d8b0:	80800604 	addi	r2,r16,24
1000d8b4:	80000515 	stw	zero,20(r16)
1000d8b8:	00000106 	br	1000d8c0 <_calloc_r+0x84>
1000d8bc:	8005883a 	mov	r2,r16
1000d8c0:	10000015 	stw	zero,0(r2)
1000d8c4:	10000115 	stw	zero,4(r2)
1000d8c8:	10000215 	stw	zero,8(r2)
1000d8cc:	8005883a 	mov	r2,r16
1000d8d0:	dfc00117 	ldw	ra,4(sp)
1000d8d4:	dc000017 	ldw	r16,0(sp)
1000d8d8:	dec00204 	addi	sp,sp,8
1000d8dc:	f800283a 	ret
1000d8e0:	000b883a 	mov	r5,zero
1000d8e4:	8009883a 	mov	r4,r16
1000d8e8:	00090fc0 	call	100090fc <memset>
1000d8ec:	8005883a 	mov	r2,r16
1000d8f0:	dfc00117 	ldw	ra,4(sp)
1000d8f4:	dc000017 	ldw	r16,0(sp)
1000d8f8:	dec00204 	addi	sp,sp,8
1000d8fc:	f800283a 	ret
1000d900:	80800404 	addi	r2,r16,16
1000d904:	003fee06 	br	1000d8c0 <__alt_data_end+0xf800d8c0>
1000d908:	80800204 	addi	r2,r16,8
1000d90c:	003fec06 	br	1000d8c0 <__alt_data_end+0xf800d8c0>
1000d910:	0005883a 	mov	r2,zero
1000d914:	003fee06 	br	1000d8d0 <__alt_data_end+0xf800d8d0>

1000d918 <_fclose_r>:
1000d918:	28003926 	beq	r5,zero,1000da00 <_fclose_r+0xe8>
1000d91c:	defffc04 	addi	sp,sp,-16
1000d920:	dc400115 	stw	r17,4(sp)
1000d924:	dc000015 	stw	r16,0(sp)
1000d928:	dfc00315 	stw	ra,12(sp)
1000d92c:	dc800215 	stw	r18,8(sp)
1000d930:	2023883a 	mov	r17,r4
1000d934:	2821883a 	mov	r16,r5
1000d938:	20000226 	beq	r4,zero,1000d944 <_fclose_r+0x2c>
1000d93c:	20800e17 	ldw	r2,56(r4)
1000d940:	10002726 	beq	r2,zero,1000d9e0 <_fclose_r+0xc8>
1000d944:	8080030f 	ldh	r2,12(r16)
1000d948:	1000071e 	bne	r2,zero,1000d968 <_fclose_r+0x50>
1000d94c:	0005883a 	mov	r2,zero
1000d950:	dfc00317 	ldw	ra,12(sp)
1000d954:	dc800217 	ldw	r18,8(sp)
1000d958:	dc400117 	ldw	r17,4(sp)
1000d95c:	dc000017 	ldw	r16,0(sp)
1000d960:	dec00404 	addi	sp,sp,16
1000d964:	f800283a 	ret
1000d968:	800b883a 	mov	r5,r16
1000d96c:	8809883a 	mov	r4,r17
1000d970:	00071f40 	call	100071f4 <__sflush_r>
1000d974:	1025883a 	mov	r18,r2
1000d978:	80800b17 	ldw	r2,44(r16)
1000d97c:	10000426 	beq	r2,zero,1000d990 <_fclose_r+0x78>
1000d980:	81400717 	ldw	r5,28(r16)
1000d984:	8809883a 	mov	r4,r17
1000d988:	103ee83a 	callr	r2
1000d98c:	10001616 	blt	r2,zero,1000d9e8 <_fclose_r+0xd0>
1000d990:	8080030b 	ldhu	r2,12(r16)
1000d994:	1080200c 	andi	r2,r2,128
1000d998:	1000151e 	bne	r2,zero,1000d9f0 <_fclose_r+0xd8>
1000d99c:	81400c17 	ldw	r5,48(r16)
1000d9a0:	28000526 	beq	r5,zero,1000d9b8 <_fclose_r+0xa0>
1000d9a4:	80801004 	addi	r2,r16,64
1000d9a8:	28800226 	beq	r5,r2,1000d9b4 <_fclose_r+0x9c>
1000d9ac:	8809883a 	mov	r4,r17
1000d9b0:	00079700 	call	10007970 <_free_r>
1000d9b4:	80000c15 	stw	zero,48(r16)
1000d9b8:	81401117 	ldw	r5,68(r16)
1000d9bc:	28000326 	beq	r5,zero,1000d9cc <_fclose_r+0xb4>
1000d9c0:	8809883a 	mov	r4,r17
1000d9c4:	00079700 	call	10007970 <_free_r>
1000d9c8:	80001115 	stw	zero,68(r16)
1000d9cc:	000780c0 	call	1000780c <__sfp_lock_acquire>
1000d9d0:	8000030d 	sth	zero,12(r16)
1000d9d4:	00078100 	call	10007810 <__sfp_lock_release>
1000d9d8:	9005883a 	mov	r2,r18
1000d9dc:	003fdc06 	br	1000d950 <__alt_data_end+0xf800d950>
1000d9e0:	00077fc0 	call	100077fc <__sinit>
1000d9e4:	003fd706 	br	1000d944 <__alt_data_end+0xf800d944>
1000d9e8:	04bfffc4 	movi	r18,-1
1000d9ec:	003fe806 	br	1000d990 <__alt_data_end+0xf800d990>
1000d9f0:	81400417 	ldw	r5,16(r16)
1000d9f4:	8809883a 	mov	r4,r17
1000d9f8:	00079700 	call	10007970 <_free_r>
1000d9fc:	003fe706 	br	1000d99c <__alt_data_end+0xf800d99c>
1000da00:	0005883a 	mov	r2,zero
1000da04:	f800283a 	ret

1000da08 <fclose>:
1000da08:	00840074 	movhi	r2,4097
1000da0c:	10980a04 	addi	r2,r2,24616
1000da10:	200b883a 	mov	r5,r4
1000da14:	11000017 	ldw	r4,0(r2)
1000da18:	000d9181 	jmpi	1000d918 <_fclose_r>

1000da1c <__fputwc>:
1000da1c:	defff804 	addi	sp,sp,-32
1000da20:	dcc00415 	stw	r19,16(sp)
1000da24:	dc800315 	stw	r18,12(sp)
1000da28:	dc000115 	stw	r16,4(sp)
1000da2c:	dfc00715 	stw	ra,28(sp)
1000da30:	dd400615 	stw	r21,24(sp)
1000da34:	dd000515 	stw	r20,20(sp)
1000da38:	dc400215 	stw	r17,8(sp)
1000da3c:	2027883a 	mov	r19,r4
1000da40:	2825883a 	mov	r18,r5
1000da44:	3021883a 	mov	r16,r6
1000da48:	00083580 	call	10008358 <__locale_mb_cur_max>
1000da4c:	00c00044 	movi	r3,1
1000da50:	10c03e26 	beq	r2,r3,1000db4c <__fputwc+0x130>
1000da54:	81c01704 	addi	r7,r16,92
1000da58:	900d883a 	mov	r6,r18
1000da5c:	d80b883a 	mov	r5,sp
1000da60:	9809883a 	mov	r4,r19
1000da64:	000deec0 	call	1000deec <_wcrtomb_r>
1000da68:	1029883a 	mov	r20,r2
1000da6c:	00bfffc4 	movi	r2,-1
1000da70:	a0802026 	beq	r20,r2,1000daf4 <__fputwc+0xd8>
1000da74:	d9400003 	ldbu	r5,0(sp)
1000da78:	a0001c26 	beq	r20,zero,1000daec <__fputwc+0xd0>
1000da7c:	0023883a 	mov	r17,zero
1000da80:	05400284 	movi	r21,10
1000da84:	00000906 	br	1000daac <__fputwc+0x90>
1000da88:	80800017 	ldw	r2,0(r16)
1000da8c:	11400005 	stb	r5,0(r2)
1000da90:	80c00017 	ldw	r3,0(r16)
1000da94:	18c00044 	addi	r3,r3,1
1000da98:	80c00015 	stw	r3,0(r16)
1000da9c:	8c400044 	addi	r17,r17,1
1000daa0:	dc45883a 	add	r2,sp,r17
1000daa4:	8d00112e 	bgeu	r17,r20,1000daec <__fputwc+0xd0>
1000daa8:	11400003 	ldbu	r5,0(r2)
1000daac:	80c00217 	ldw	r3,8(r16)
1000dab0:	18ffffc4 	addi	r3,r3,-1
1000dab4:	80c00215 	stw	r3,8(r16)
1000dab8:	183ff30e 	bge	r3,zero,1000da88 <__alt_data_end+0xf800da88>
1000dabc:	80800617 	ldw	r2,24(r16)
1000dac0:	18801916 	blt	r3,r2,1000db28 <__fputwc+0x10c>
1000dac4:	80800017 	ldw	r2,0(r16)
1000dac8:	11400005 	stb	r5,0(r2)
1000dacc:	80800017 	ldw	r2,0(r16)
1000dad0:	10c00003 	ldbu	r3,0(r2)
1000dad4:	10800044 	addi	r2,r2,1
1000dad8:	1d402326 	beq	r3,r21,1000db68 <__fputwc+0x14c>
1000dadc:	80800015 	stw	r2,0(r16)
1000dae0:	8c400044 	addi	r17,r17,1
1000dae4:	dc45883a 	add	r2,sp,r17
1000dae8:	8d3fef36 	bltu	r17,r20,1000daa8 <__alt_data_end+0xf800daa8>
1000daec:	9005883a 	mov	r2,r18
1000daf0:	00000406 	br	1000db04 <__fputwc+0xe8>
1000daf4:	80c0030b 	ldhu	r3,12(r16)
1000daf8:	a005883a 	mov	r2,r20
1000dafc:	18c01014 	ori	r3,r3,64
1000db00:	80c0030d 	sth	r3,12(r16)
1000db04:	dfc00717 	ldw	ra,28(sp)
1000db08:	dd400617 	ldw	r21,24(sp)
1000db0c:	dd000517 	ldw	r20,20(sp)
1000db10:	dcc00417 	ldw	r19,16(sp)
1000db14:	dc800317 	ldw	r18,12(sp)
1000db18:	dc400217 	ldw	r17,8(sp)
1000db1c:	dc000117 	ldw	r16,4(sp)
1000db20:	dec00804 	addi	sp,sp,32
1000db24:	f800283a 	ret
1000db28:	800d883a 	mov	r6,r16
1000db2c:	29403fcc 	andi	r5,r5,255
1000db30:	9809883a 	mov	r4,r19
1000db34:	000dd940 	call	1000dd94 <__swbuf_r>
1000db38:	10bfffe0 	cmpeqi	r2,r2,-1
1000db3c:	10803fcc 	andi	r2,r2,255
1000db40:	103fd626 	beq	r2,zero,1000da9c <__alt_data_end+0xf800da9c>
1000db44:	00bfffc4 	movi	r2,-1
1000db48:	003fee06 	br	1000db04 <__alt_data_end+0xf800db04>
1000db4c:	90ffffc4 	addi	r3,r18,-1
1000db50:	01003f84 	movi	r4,254
1000db54:	20ffbf36 	bltu	r4,r3,1000da54 <__alt_data_end+0xf800da54>
1000db58:	900b883a 	mov	r5,r18
1000db5c:	dc800005 	stb	r18,0(sp)
1000db60:	1029883a 	mov	r20,r2
1000db64:	003fc506 	br	1000da7c <__alt_data_end+0xf800da7c>
1000db68:	800d883a 	mov	r6,r16
1000db6c:	a80b883a 	mov	r5,r21
1000db70:	9809883a 	mov	r4,r19
1000db74:	000dd940 	call	1000dd94 <__swbuf_r>
1000db78:	10bfffe0 	cmpeqi	r2,r2,-1
1000db7c:	003fef06 	br	1000db3c <__alt_data_end+0xf800db3c>

1000db80 <_fputwc_r>:
1000db80:	3080030b 	ldhu	r2,12(r6)
1000db84:	10c8000c 	andi	r3,r2,8192
1000db88:	1800051e 	bne	r3,zero,1000dba0 <_fputwc_r+0x20>
1000db8c:	30c01917 	ldw	r3,100(r6)
1000db90:	10880014 	ori	r2,r2,8192
1000db94:	3080030d 	sth	r2,12(r6)
1000db98:	18880014 	ori	r2,r3,8192
1000db9c:	30801915 	stw	r2,100(r6)
1000dba0:	000da1c1 	jmpi	1000da1c <__fputwc>

1000dba4 <fputwc>:
1000dba4:	00840074 	movhi	r2,4097
1000dba8:	defffc04 	addi	sp,sp,-16
1000dbac:	10980a04 	addi	r2,r2,24616
1000dbb0:	dc000115 	stw	r16,4(sp)
1000dbb4:	14000017 	ldw	r16,0(r2)
1000dbb8:	dc400215 	stw	r17,8(sp)
1000dbbc:	dfc00315 	stw	ra,12(sp)
1000dbc0:	2023883a 	mov	r17,r4
1000dbc4:	80000226 	beq	r16,zero,1000dbd0 <fputwc+0x2c>
1000dbc8:	80800e17 	ldw	r2,56(r16)
1000dbcc:	10001026 	beq	r2,zero,1000dc10 <fputwc+0x6c>
1000dbd0:	2880030b 	ldhu	r2,12(r5)
1000dbd4:	10c8000c 	andi	r3,r2,8192
1000dbd8:	1800051e 	bne	r3,zero,1000dbf0 <fputwc+0x4c>
1000dbdc:	28c01917 	ldw	r3,100(r5)
1000dbe0:	10880014 	ori	r2,r2,8192
1000dbe4:	2880030d 	sth	r2,12(r5)
1000dbe8:	18880014 	ori	r2,r3,8192
1000dbec:	28801915 	stw	r2,100(r5)
1000dbf0:	280d883a 	mov	r6,r5
1000dbf4:	8009883a 	mov	r4,r16
1000dbf8:	880b883a 	mov	r5,r17
1000dbfc:	dfc00317 	ldw	ra,12(sp)
1000dc00:	dc400217 	ldw	r17,8(sp)
1000dc04:	dc000117 	ldw	r16,4(sp)
1000dc08:	dec00404 	addi	sp,sp,16
1000dc0c:	000da1c1 	jmpi	1000da1c <__fputwc>
1000dc10:	8009883a 	mov	r4,r16
1000dc14:	d9400015 	stw	r5,0(sp)
1000dc18:	00077fc0 	call	100077fc <__sinit>
1000dc1c:	d9400017 	ldw	r5,0(sp)
1000dc20:	003feb06 	br	1000dbd0 <__alt_data_end+0xf800dbd0>

1000dc24 <_fstat_r>:
1000dc24:	defffd04 	addi	sp,sp,-12
1000dc28:	2805883a 	mov	r2,r5
1000dc2c:	dc000015 	stw	r16,0(sp)
1000dc30:	04040074 	movhi	r16,4097
1000dc34:	dc400115 	stw	r17,4(sp)
1000dc38:	841f9404 	addi	r16,r16,32336
1000dc3c:	2023883a 	mov	r17,r4
1000dc40:	300b883a 	mov	r5,r6
1000dc44:	1009883a 	mov	r4,r2
1000dc48:	dfc00215 	stw	ra,8(sp)
1000dc4c:	80000015 	stw	zero,0(r16)
1000dc50:	00117c00 	call	100117c0 <fstat>
1000dc54:	00ffffc4 	movi	r3,-1
1000dc58:	10c00526 	beq	r2,r3,1000dc70 <_fstat_r+0x4c>
1000dc5c:	dfc00217 	ldw	ra,8(sp)
1000dc60:	dc400117 	ldw	r17,4(sp)
1000dc64:	dc000017 	ldw	r16,0(sp)
1000dc68:	dec00304 	addi	sp,sp,12
1000dc6c:	f800283a 	ret
1000dc70:	80c00017 	ldw	r3,0(r16)
1000dc74:	183ff926 	beq	r3,zero,1000dc5c <__alt_data_end+0xf800dc5c>
1000dc78:	88c00015 	stw	r3,0(r17)
1000dc7c:	003ff706 	br	1000dc5c <__alt_data_end+0xf800dc5c>

1000dc80 <_isatty_r>:
1000dc80:	defffd04 	addi	sp,sp,-12
1000dc84:	dc000015 	stw	r16,0(sp)
1000dc88:	04040074 	movhi	r16,4097
1000dc8c:	dc400115 	stw	r17,4(sp)
1000dc90:	841f9404 	addi	r16,r16,32336
1000dc94:	2023883a 	mov	r17,r4
1000dc98:	2809883a 	mov	r4,r5
1000dc9c:	dfc00215 	stw	ra,8(sp)
1000dca0:	80000015 	stw	zero,0(r16)
1000dca4:	00118b40 	call	100118b4 <isatty>
1000dca8:	00ffffc4 	movi	r3,-1
1000dcac:	10c00526 	beq	r2,r3,1000dcc4 <_isatty_r+0x44>
1000dcb0:	dfc00217 	ldw	ra,8(sp)
1000dcb4:	dc400117 	ldw	r17,4(sp)
1000dcb8:	dc000017 	ldw	r16,0(sp)
1000dcbc:	dec00304 	addi	sp,sp,12
1000dcc0:	f800283a 	ret
1000dcc4:	80c00017 	ldw	r3,0(r16)
1000dcc8:	183ff926 	beq	r3,zero,1000dcb0 <__alt_data_end+0xf800dcb0>
1000dccc:	88c00015 	stw	r3,0(r17)
1000dcd0:	003ff706 	br	1000dcb0 <__alt_data_end+0xf800dcb0>

1000dcd4 <_lseek_r>:
1000dcd4:	defffd04 	addi	sp,sp,-12
1000dcd8:	2805883a 	mov	r2,r5
1000dcdc:	dc000015 	stw	r16,0(sp)
1000dce0:	04040074 	movhi	r16,4097
1000dce4:	dc400115 	stw	r17,4(sp)
1000dce8:	300b883a 	mov	r5,r6
1000dcec:	841f9404 	addi	r16,r16,32336
1000dcf0:	2023883a 	mov	r17,r4
1000dcf4:	380d883a 	mov	r6,r7
1000dcf8:	1009883a 	mov	r4,r2
1000dcfc:	dfc00215 	stw	ra,8(sp)
1000dd00:	80000015 	stw	zero,0(r16)
1000dd04:	0011a880 	call	10011a88 <lseek>
1000dd08:	00ffffc4 	movi	r3,-1
1000dd0c:	10c00526 	beq	r2,r3,1000dd24 <_lseek_r+0x50>
1000dd10:	dfc00217 	ldw	ra,8(sp)
1000dd14:	dc400117 	ldw	r17,4(sp)
1000dd18:	dc000017 	ldw	r16,0(sp)
1000dd1c:	dec00304 	addi	sp,sp,12
1000dd20:	f800283a 	ret
1000dd24:	80c00017 	ldw	r3,0(r16)
1000dd28:	183ff926 	beq	r3,zero,1000dd10 <__alt_data_end+0xf800dd10>
1000dd2c:	88c00015 	stw	r3,0(r17)
1000dd30:	003ff706 	br	1000dd10 <__alt_data_end+0xf800dd10>

1000dd34 <_read_r>:
1000dd34:	defffd04 	addi	sp,sp,-12
1000dd38:	2805883a 	mov	r2,r5
1000dd3c:	dc000015 	stw	r16,0(sp)
1000dd40:	04040074 	movhi	r16,4097
1000dd44:	dc400115 	stw	r17,4(sp)
1000dd48:	300b883a 	mov	r5,r6
1000dd4c:	841f9404 	addi	r16,r16,32336
1000dd50:	2023883a 	mov	r17,r4
1000dd54:	380d883a 	mov	r6,r7
1000dd58:	1009883a 	mov	r4,r2
1000dd5c:	dfc00215 	stw	ra,8(sp)
1000dd60:	80000015 	stw	zero,0(r16)
1000dd64:	0011c640 	call	10011c64 <read>
1000dd68:	00ffffc4 	movi	r3,-1
1000dd6c:	10c00526 	beq	r2,r3,1000dd84 <_read_r+0x50>
1000dd70:	dfc00217 	ldw	ra,8(sp)
1000dd74:	dc400117 	ldw	r17,4(sp)
1000dd78:	dc000017 	ldw	r16,0(sp)
1000dd7c:	dec00304 	addi	sp,sp,12
1000dd80:	f800283a 	ret
1000dd84:	80c00017 	ldw	r3,0(r16)
1000dd88:	183ff926 	beq	r3,zero,1000dd70 <__alt_data_end+0xf800dd70>
1000dd8c:	88c00015 	stw	r3,0(r17)
1000dd90:	003ff706 	br	1000dd70 <__alt_data_end+0xf800dd70>

1000dd94 <__swbuf_r>:
1000dd94:	defffb04 	addi	sp,sp,-20
1000dd98:	dcc00315 	stw	r19,12(sp)
1000dd9c:	dc800215 	stw	r18,8(sp)
1000dda0:	dc000015 	stw	r16,0(sp)
1000dda4:	dfc00415 	stw	ra,16(sp)
1000dda8:	dc400115 	stw	r17,4(sp)
1000ddac:	2025883a 	mov	r18,r4
1000ddb0:	2827883a 	mov	r19,r5
1000ddb4:	3021883a 	mov	r16,r6
1000ddb8:	20000226 	beq	r4,zero,1000ddc4 <__swbuf_r+0x30>
1000ddbc:	20800e17 	ldw	r2,56(r4)
1000ddc0:	10004226 	beq	r2,zero,1000decc <__swbuf_r+0x138>
1000ddc4:	80800617 	ldw	r2,24(r16)
1000ddc8:	8100030b 	ldhu	r4,12(r16)
1000ddcc:	80800215 	stw	r2,8(r16)
1000ddd0:	2080020c 	andi	r2,r4,8
1000ddd4:	10003626 	beq	r2,zero,1000deb0 <__swbuf_r+0x11c>
1000ddd8:	80c00417 	ldw	r3,16(r16)
1000dddc:	18003426 	beq	r3,zero,1000deb0 <__swbuf_r+0x11c>
1000dde0:	2088000c 	andi	r2,r4,8192
1000dde4:	9c403fcc 	andi	r17,r19,255
1000dde8:	10001a26 	beq	r2,zero,1000de54 <__swbuf_r+0xc0>
1000ddec:	80800017 	ldw	r2,0(r16)
1000ddf0:	81000517 	ldw	r4,20(r16)
1000ddf4:	10c7c83a 	sub	r3,r2,r3
1000ddf8:	1900200e 	bge	r3,r4,1000de7c <__swbuf_r+0xe8>
1000ddfc:	18c00044 	addi	r3,r3,1
1000de00:	81000217 	ldw	r4,8(r16)
1000de04:	11400044 	addi	r5,r2,1
1000de08:	81400015 	stw	r5,0(r16)
1000de0c:	213fffc4 	addi	r4,r4,-1
1000de10:	81000215 	stw	r4,8(r16)
1000de14:	14c00005 	stb	r19,0(r2)
1000de18:	80800517 	ldw	r2,20(r16)
1000de1c:	10c01e26 	beq	r2,r3,1000de98 <__swbuf_r+0x104>
1000de20:	8080030b 	ldhu	r2,12(r16)
1000de24:	1080004c 	andi	r2,r2,1
1000de28:	10000226 	beq	r2,zero,1000de34 <__swbuf_r+0xa0>
1000de2c:	00800284 	movi	r2,10
1000de30:	88801926 	beq	r17,r2,1000de98 <__swbuf_r+0x104>
1000de34:	8805883a 	mov	r2,r17
1000de38:	dfc00417 	ldw	ra,16(sp)
1000de3c:	dcc00317 	ldw	r19,12(sp)
1000de40:	dc800217 	ldw	r18,8(sp)
1000de44:	dc400117 	ldw	r17,4(sp)
1000de48:	dc000017 	ldw	r16,0(sp)
1000de4c:	dec00504 	addi	sp,sp,20
1000de50:	f800283a 	ret
1000de54:	81401917 	ldw	r5,100(r16)
1000de58:	00b7ffc4 	movi	r2,-8193
1000de5c:	21080014 	ori	r4,r4,8192
1000de60:	2884703a 	and	r2,r5,r2
1000de64:	80801915 	stw	r2,100(r16)
1000de68:	80800017 	ldw	r2,0(r16)
1000de6c:	8100030d 	sth	r4,12(r16)
1000de70:	81000517 	ldw	r4,20(r16)
1000de74:	10c7c83a 	sub	r3,r2,r3
1000de78:	193fe016 	blt	r3,r4,1000ddfc <__alt_data_end+0xf800ddfc>
1000de7c:	800b883a 	mov	r5,r16
1000de80:	9009883a 	mov	r4,r18
1000de84:	00074100 	call	10007410 <_fflush_r>
1000de88:	1000071e 	bne	r2,zero,1000dea8 <__swbuf_r+0x114>
1000de8c:	80800017 	ldw	r2,0(r16)
1000de90:	00c00044 	movi	r3,1
1000de94:	003fda06 	br	1000de00 <__alt_data_end+0xf800de00>
1000de98:	800b883a 	mov	r5,r16
1000de9c:	9009883a 	mov	r4,r18
1000dea0:	00074100 	call	10007410 <_fflush_r>
1000dea4:	103fe326 	beq	r2,zero,1000de34 <__alt_data_end+0xf800de34>
1000dea8:	00bfffc4 	movi	r2,-1
1000deac:	003fe206 	br	1000de38 <__alt_data_end+0xf800de38>
1000deb0:	800b883a 	mov	r5,r16
1000deb4:	9009883a 	mov	r4,r18
1000deb8:	00057f00 	call	100057f0 <__swsetup_r>
1000debc:	103ffa1e 	bne	r2,zero,1000dea8 <__alt_data_end+0xf800dea8>
1000dec0:	8100030b 	ldhu	r4,12(r16)
1000dec4:	80c00417 	ldw	r3,16(r16)
1000dec8:	003fc506 	br	1000dde0 <__alt_data_end+0xf800dde0>
1000decc:	00077fc0 	call	100077fc <__sinit>
1000ded0:	003fbc06 	br	1000ddc4 <__alt_data_end+0xf800ddc4>

1000ded4 <__swbuf>:
1000ded4:	00840074 	movhi	r2,4097
1000ded8:	10980a04 	addi	r2,r2,24616
1000dedc:	280d883a 	mov	r6,r5
1000dee0:	200b883a 	mov	r5,r4
1000dee4:	11000017 	ldw	r4,0(r2)
1000dee8:	000dd941 	jmpi	1000dd94 <__swbuf_r>

1000deec <_wcrtomb_r>:
1000deec:	defff604 	addi	sp,sp,-40
1000def0:	00840074 	movhi	r2,4097
1000def4:	dc800815 	stw	r18,32(sp)
1000def8:	dc400715 	stw	r17,28(sp)
1000defc:	dc000615 	stw	r16,24(sp)
1000df00:	10980e04 	addi	r2,r2,24632
1000df04:	dfc00915 	stw	ra,36(sp)
1000df08:	2021883a 	mov	r16,r4
1000df0c:	3823883a 	mov	r17,r7
1000df10:	14800017 	ldw	r18,0(r2)
1000df14:	28001426 	beq	r5,zero,1000df68 <_wcrtomb_r+0x7c>
1000df18:	d9400415 	stw	r5,16(sp)
1000df1c:	d9800515 	stw	r6,20(sp)
1000df20:	000834c0 	call	1000834c <__locale_charset>
1000df24:	d9800517 	ldw	r6,20(sp)
1000df28:	d9400417 	ldw	r5,16(sp)
1000df2c:	100f883a 	mov	r7,r2
1000df30:	dc400015 	stw	r17,0(sp)
1000df34:	8009883a 	mov	r4,r16
1000df38:	903ee83a 	callr	r18
1000df3c:	00ffffc4 	movi	r3,-1
1000df40:	10c0031e 	bne	r2,r3,1000df50 <_wcrtomb_r+0x64>
1000df44:	88000015 	stw	zero,0(r17)
1000df48:	00c02284 	movi	r3,138
1000df4c:	80c00015 	stw	r3,0(r16)
1000df50:	dfc00917 	ldw	ra,36(sp)
1000df54:	dc800817 	ldw	r18,32(sp)
1000df58:	dc400717 	ldw	r17,28(sp)
1000df5c:	dc000617 	ldw	r16,24(sp)
1000df60:	dec00a04 	addi	sp,sp,40
1000df64:	f800283a 	ret
1000df68:	000834c0 	call	1000834c <__locale_charset>
1000df6c:	100f883a 	mov	r7,r2
1000df70:	dc400015 	stw	r17,0(sp)
1000df74:	000d883a 	mov	r6,zero
1000df78:	d9400104 	addi	r5,sp,4
1000df7c:	8009883a 	mov	r4,r16
1000df80:	903ee83a 	callr	r18
1000df84:	003fed06 	br	1000df3c <__alt_data_end+0xf800df3c>

1000df88 <wcrtomb>:
1000df88:	defff604 	addi	sp,sp,-40
1000df8c:	00840074 	movhi	r2,4097
1000df90:	dc800615 	stw	r18,24(sp)
1000df94:	dc400515 	stw	r17,20(sp)
1000df98:	10980a04 	addi	r2,r2,24616
1000df9c:	dfc00915 	stw	ra,36(sp)
1000dfa0:	dd000815 	stw	r20,32(sp)
1000dfa4:	dcc00715 	stw	r19,28(sp)
1000dfa8:	dc000415 	stw	r16,16(sp)
1000dfac:	3025883a 	mov	r18,r6
1000dfb0:	14400017 	ldw	r17,0(r2)
1000dfb4:	20001926 	beq	r4,zero,1000e01c <wcrtomb+0x94>
1000dfb8:	00840074 	movhi	r2,4097
1000dfbc:	10980e04 	addi	r2,r2,24632
1000dfc0:	15000017 	ldw	r20,0(r2)
1000dfc4:	2021883a 	mov	r16,r4
1000dfc8:	2827883a 	mov	r19,r5
1000dfcc:	000834c0 	call	1000834c <__locale_charset>
1000dfd0:	100f883a 	mov	r7,r2
1000dfd4:	dc800015 	stw	r18,0(sp)
1000dfd8:	980d883a 	mov	r6,r19
1000dfdc:	800b883a 	mov	r5,r16
1000dfe0:	8809883a 	mov	r4,r17
1000dfe4:	a03ee83a 	callr	r20
1000dfe8:	00ffffc4 	movi	r3,-1
1000dfec:	10c0031e 	bne	r2,r3,1000dffc <wcrtomb+0x74>
1000dff0:	90000015 	stw	zero,0(r18)
1000dff4:	00c02284 	movi	r3,138
1000dff8:	88c00015 	stw	r3,0(r17)
1000dffc:	dfc00917 	ldw	ra,36(sp)
1000e000:	dd000817 	ldw	r20,32(sp)
1000e004:	dcc00717 	ldw	r19,28(sp)
1000e008:	dc800617 	ldw	r18,24(sp)
1000e00c:	dc400517 	ldw	r17,20(sp)
1000e010:	dc000417 	ldw	r16,16(sp)
1000e014:	dec00a04 	addi	sp,sp,40
1000e018:	f800283a 	ret
1000e01c:	00840074 	movhi	r2,4097
1000e020:	10980e04 	addi	r2,r2,24632
1000e024:	14000017 	ldw	r16,0(r2)
1000e028:	000834c0 	call	1000834c <__locale_charset>
1000e02c:	100f883a 	mov	r7,r2
1000e030:	dc800015 	stw	r18,0(sp)
1000e034:	000d883a 	mov	r6,zero
1000e038:	d9400104 	addi	r5,sp,4
1000e03c:	8809883a 	mov	r4,r17
1000e040:	803ee83a 	callr	r16
1000e044:	003fe806 	br	1000dfe8 <__alt_data_end+0xf800dfe8>

1000e048 <__ascii_wctomb>:
1000e048:	28000526 	beq	r5,zero,1000e060 <__ascii_wctomb+0x18>
1000e04c:	00803fc4 	movi	r2,255
1000e050:	11800536 	bltu	r2,r6,1000e068 <__ascii_wctomb+0x20>
1000e054:	29800005 	stb	r6,0(r5)
1000e058:	00800044 	movi	r2,1
1000e05c:	f800283a 	ret
1000e060:	0005883a 	mov	r2,zero
1000e064:	f800283a 	ret
1000e068:	00802284 	movi	r2,138
1000e06c:	20800015 	stw	r2,0(r4)
1000e070:	00bfffc4 	movi	r2,-1
1000e074:	f800283a 	ret

1000e078 <_wctomb_r>:
1000e078:	00840074 	movhi	r2,4097
1000e07c:	defff904 	addi	sp,sp,-28
1000e080:	10980e04 	addi	r2,r2,24632
1000e084:	dfc00615 	stw	ra,24(sp)
1000e088:	dc400515 	stw	r17,20(sp)
1000e08c:	dc000415 	stw	r16,16(sp)
1000e090:	3823883a 	mov	r17,r7
1000e094:	14000017 	ldw	r16,0(r2)
1000e098:	d9000115 	stw	r4,4(sp)
1000e09c:	d9400215 	stw	r5,8(sp)
1000e0a0:	d9800315 	stw	r6,12(sp)
1000e0a4:	000834c0 	call	1000834c <__locale_charset>
1000e0a8:	d9800317 	ldw	r6,12(sp)
1000e0ac:	d9400217 	ldw	r5,8(sp)
1000e0b0:	d9000117 	ldw	r4,4(sp)
1000e0b4:	100f883a 	mov	r7,r2
1000e0b8:	dc400015 	stw	r17,0(sp)
1000e0bc:	803ee83a 	callr	r16
1000e0c0:	dfc00617 	ldw	ra,24(sp)
1000e0c4:	dc400517 	ldw	r17,20(sp)
1000e0c8:	dc000417 	ldw	r16,16(sp)
1000e0cc:	dec00704 	addi	sp,sp,28
1000e0d0:	f800283a 	ret

1000e0d4 <__muldi3>:
1000e0d4:	defff604 	addi	sp,sp,-40
1000e0d8:	dd800615 	stw	r22,24(sp)
1000e0dc:	dd400515 	stw	r21,20(sp)
1000e0e0:	dc400115 	stw	r17,4(sp)
1000e0e4:	357fffcc 	andi	r21,r6,65535
1000e0e8:	2022d43a 	srli	r17,r4,16
1000e0ec:	25bfffcc 	andi	r22,r4,65535
1000e0f0:	dcc00315 	stw	r19,12(sp)
1000e0f4:	dc800215 	stw	r18,8(sp)
1000e0f8:	2027883a 	mov	r19,r4
1000e0fc:	2825883a 	mov	r18,r5
1000e100:	b009883a 	mov	r4,r22
1000e104:	a80b883a 	mov	r5,r21
1000e108:	dfc00915 	stw	ra,36(sp)
1000e10c:	df000815 	stw	fp,32(sp)
1000e110:	ddc00715 	stw	r23,28(sp)
1000e114:	3839883a 	mov	fp,r7
1000e118:	302ed43a 	srli	r23,r6,16
1000e11c:	dd000415 	stw	r20,16(sp)
1000e120:	dc000015 	stw	r16,0(sp)
1000e124:	3029883a 	mov	r20,r6
1000e128:	0000e400 	call	10000e40 <__mulsi3>
1000e12c:	a80b883a 	mov	r5,r21
1000e130:	8809883a 	mov	r4,r17
1000e134:	1021883a 	mov	r16,r2
1000e138:	0000e400 	call	10000e40 <__mulsi3>
1000e13c:	8809883a 	mov	r4,r17
1000e140:	b80b883a 	mov	r5,r23
1000e144:	102b883a 	mov	r21,r2
1000e148:	0000e400 	call	10000e40 <__mulsi3>
1000e14c:	b80b883a 	mov	r5,r23
1000e150:	b009883a 	mov	r4,r22
1000e154:	1023883a 	mov	r17,r2
1000e158:	0000e400 	call	10000e40 <__mulsi3>
1000e15c:	8006d43a 	srli	r3,r16,16
1000e160:	1545883a 	add	r2,r2,r21
1000e164:	1885883a 	add	r2,r3,r2
1000e168:	1540022e 	bgeu	r2,r21,1000e174 <__muldi3+0xa0>
1000e16c:	00c00074 	movhi	r3,1
1000e170:	88e3883a 	add	r17,r17,r3
1000e174:	1006d43a 	srli	r3,r2,16
1000e178:	1004943a 	slli	r2,r2,16
1000e17c:	e00b883a 	mov	r5,fp
1000e180:	9809883a 	mov	r4,r19
1000e184:	843fffcc 	andi	r16,r16,65535
1000e188:	1c63883a 	add	r17,r3,r17
1000e18c:	1421883a 	add	r16,r2,r16
1000e190:	0000e400 	call	10000e40 <__mulsi3>
1000e194:	900b883a 	mov	r5,r18
1000e198:	a009883a 	mov	r4,r20
1000e19c:	1027883a 	mov	r19,r2
1000e1a0:	0000e400 	call	10000e40 <__mulsi3>
1000e1a4:	9885883a 	add	r2,r19,r2
1000e1a8:	1447883a 	add	r3,r2,r17
1000e1ac:	8005883a 	mov	r2,r16
1000e1b0:	dfc00917 	ldw	ra,36(sp)
1000e1b4:	df000817 	ldw	fp,32(sp)
1000e1b8:	ddc00717 	ldw	r23,28(sp)
1000e1bc:	dd800617 	ldw	r22,24(sp)
1000e1c0:	dd400517 	ldw	r21,20(sp)
1000e1c4:	dd000417 	ldw	r20,16(sp)
1000e1c8:	dcc00317 	ldw	r19,12(sp)
1000e1cc:	dc800217 	ldw	r18,8(sp)
1000e1d0:	dc400117 	ldw	r17,4(sp)
1000e1d4:	dc000017 	ldw	r16,0(sp)
1000e1d8:	dec00a04 	addi	sp,sp,40
1000e1dc:	f800283a 	ret

1000e1e0 <__udivdi3>:
1000e1e0:	defff404 	addi	sp,sp,-48
1000e1e4:	dcc00515 	stw	r19,20(sp)
1000e1e8:	dc000215 	stw	r16,8(sp)
1000e1ec:	dfc00b15 	stw	ra,44(sp)
1000e1f0:	df000a15 	stw	fp,40(sp)
1000e1f4:	ddc00915 	stw	r23,36(sp)
1000e1f8:	dd800815 	stw	r22,32(sp)
1000e1fc:	dd400715 	stw	r21,28(sp)
1000e200:	dd000615 	stw	r20,24(sp)
1000e204:	dc800415 	stw	r18,16(sp)
1000e208:	dc400315 	stw	r17,12(sp)
1000e20c:	2027883a 	mov	r19,r4
1000e210:	2821883a 	mov	r16,r5
1000e214:	3800461e 	bne	r7,zero,1000e330 <__udivdi3+0x150>
1000e218:	3023883a 	mov	r17,r6
1000e21c:	2025883a 	mov	r18,r4
1000e220:	2980572e 	bgeu	r5,r6,1000e380 <__udivdi3+0x1a0>
1000e224:	00bfffd4 	movui	r2,65535
1000e228:	282d883a 	mov	r22,r5
1000e22c:	1180b236 	bltu	r2,r6,1000e4f8 <__udivdi3+0x318>
1000e230:	00803fc4 	movi	r2,255
1000e234:	1185803a 	cmpltu	r2,r2,r6
1000e238:	100490fa 	slli	r2,r2,3
1000e23c:	3086d83a 	srl	r3,r6,r2
1000e240:	01040074 	movhi	r4,4097
1000e244:	21105704 	addi	r4,r4,16732
1000e248:	20c7883a 	add	r3,r4,r3
1000e24c:	18c00003 	ldbu	r3,0(r3)
1000e250:	1885883a 	add	r2,r3,r2
1000e254:	00c00804 	movi	r3,32
1000e258:	1887c83a 	sub	r3,r3,r2
1000e25c:	18000526 	beq	r3,zero,1000e274 <__udivdi3+0x94>
1000e260:	80e0983a 	sll	r16,r16,r3
1000e264:	9884d83a 	srl	r2,r19,r2
1000e268:	30e2983a 	sll	r17,r6,r3
1000e26c:	98e4983a 	sll	r18,r19,r3
1000e270:	142cb03a 	or	r22,r2,r16
1000e274:	882ad43a 	srli	r21,r17,16
1000e278:	b009883a 	mov	r4,r22
1000e27c:	8d3fffcc 	andi	r20,r17,65535
1000e280:	a80b883a 	mov	r5,r21
1000e284:	0000de80 	call	10000de8 <__umodsi3>
1000e288:	b009883a 	mov	r4,r22
1000e28c:	a80b883a 	mov	r5,r21
1000e290:	1027883a 	mov	r19,r2
1000e294:	0000d840 	call	10000d84 <__udivsi3>
1000e298:	100b883a 	mov	r5,r2
1000e29c:	a009883a 	mov	r4,r20
1000e2a0:	102d883a 	mov	r22,r2
1000e2a4:	0000e400 	call	10000e40 <__mulsi3>
1000e2a8:	9826943a 	slli	r19,r19,16
1000e2ac:	9006d43a 	srli	r3,r18,16
1000e2b0:	1cc6b03a 	or	r3,r3,r19
1000e2b4:	1880052e 	bgeu	r3,r2,1000e2cc <__udivdi3+0xec>
1000e2b8:	1c47883a 	add	r3,r3,r17
1000e2bc:	b13fffc4 	addi	r4,r22,-1
1000e2c0:	1c400136 	bltu	r3,r17,1000e2c8 <__udivdi3+0xe8>
1000e2c4:	18814236 	bltu	r3,r2,1000e7d0 <__udivdi3+0x5f0>
1000e2c8:	202d883a 	mov	r22,r4
1000e2cc:	18a1c83a 	sub	r16,r3,r2
1000e2d0:	8009883a 	mov	r4,r16
1000e2d4:	a80b883a 	mov	r5,r21
1000e2d8:	0000de80 	call	10000de8 <__umodsi3>
1000e2dc:	1027883a 	mov	r19,r2
1000e2e0:	8009883a 	mov	r4,r16
1000e2e4:	a80b883a 	mov	r5,r21
1000e2e8:	9826943a 	slli	r19,r19,16
1000e2ec:	0000d840 	call	10000d84 <__udivsi3>
1000e2f0:	100b883a 	mov	r5,r2
1000e2f4:	a009883a 	mov	r4,r20
1000e2f8:	94bfffcc 	andi	r18,r18,65535
1000e2fc:	1021883a 	mov	r16,r2
1000e300:	94e4b03a 	or	r18,r18,r19
1000e304:	0000e400 	call	10000e40 <__mulsi3>
1000e308:	9080052e 	bgeu	r18,r2,1000e320 <__udivdi3+0x140>
1000e30c:	8ca5883a 	add	r18,r17,r18
1000e310:	80ffffc4 	addi	r3,r16,-1
1000e314:	94410c36 	bltu	r18,r17,1000e748 <__udivdi3+0x568>
1000e318:	90810b2e 	bgeu	r18,r2,1000e748 <__udivdi3+0x568>
1000e31c:	843fff84 	addi	r16,r16,-2
1000e320:	b004943a 	slli	r2,r22,16
1000e324:	0007883a 	mov	r3,zero
1000e328:	1404b03a 	or	r2,r2,r16
1000e32c:	00005e06 	br	1000e4a8 <__udivdi3+0x2c8>
1000e330:	29c05b36 	bltu	r5,r7,1000e4a0 <__udivdi3+0x2c0>
1000e334:	00bfffd4 	movui	r2,65535
1000e338:	11c0672e 	bgeu	r2,r7,1000e4d8 <__udivdi3+0x2f8>
1000e33c:	00804034 	movhi	r2,256
1000e340:	10bfffc4 	addi	r2,r2,-1
1000e344:	11c10a36 	bltu	r2,r7,1000e770 <__udivdi3+0x590>
1000e348:	00800404 	movi	r2,16
1000e34c:	3886d83a 	srl	r3,r7,r2
1000e350:	01040074 	movhi	r4,4097
1000e354:	21105704 	addi	r4,r4,16732
1000e358:	20c7883a 	add	r3,r4,r3
1000e35c:	18c00003 	ldbu	r3,0(r3)
1000e360:	05c00804 	movi	r23,32
1000e364:	1885883a 	add	r2,r3,r2
1000e368:	b8afc83a 	sub	r23,r23,r2
1000e36c:	b800671e 	bne	r23,zero,1000e50c <__udivdi3+0x32c>
1000e370:	3c010536 	bltu	r7,r16,1000e788 <__udivdi3+0x5a8>
1000e374:	9985403a 	cmpgeu	r2,r19,r6
1000e378:	0007883a 	mov	r3,zero
1000e37c:	00004a06 	br	1000e4a8 <__udivdi3+0x2c8>
1000e380:	3000041e 	bne	r6,zero,1000e394 <__udivdi3+0x1b4>
1000e384:	000b883a 	mov	r5,zero
1000e388:	01000044 	movi	r4,1
1000e38c:	0000d840 	call	10000d84 <__udivsi3>
1000e390:	1023883a 	mov	r17,r2
1000e394:	00bfffd4 	movui	r2,65535
1000e398:	1440532e 	bgeu	r2,r17,1000e4e8 <__udivdi3+0x308>
1000e39c:	00804034 	movhi	r2,256
1000e3a0:	10bfffc4 	addi	r2,r2,-1
1000e3a4:	1440f436 	bltu	r2,r17,1000e778 <__udivdi3+0x598>
1000e3a8:	00800404 	movi	r2,16
1000e3ac:	8886d83a 	srl	r3,r17,r2
1000e3b0:	01040074 	movhi	r4,4097
1000e3b4:	21105704 	addi	r4,r4,16732
1000e3b8:	20c7883a 	add	r3,r4,r3
1000e3bc:	18c00003 	ldbu	r3,0(r3)
1000e3c0:	1885883a 	add	r2,r3,r2
1000e3c4:	00c00804 	movi	r3,32
1000e3c8:	1887c83a 	sub	r3,r3,r2
1000e3cc:	1800a51e 	bne	r3,zero,1000e664 <__udivdi3+0x484>
1000e3d0:	882ad43a 	srli	r21,r17,16
1000e3d4:	8461c83a 	sub	r16,r16,r17
1000e3d8:	8d3fffcc 	andi	r20,r17,65535
1000e3dc:	00c00044 	movi	r3,1
1000e3e0:	a80b883a 	mov	r5,r21
1000e3e4:	8009883a 	mov	r4,r16
1000e3e8:	d8c00115 	stw	r3,4(sp)
1000e3ec:	0000de80 	call	10000de8 <__umodsi3>
1000e3f0:	a80b883a 	mov	r5,r21
1000e3f4:	8009883a 	mov	r4,r16
1000e3f8:	1027883a 	mov	r19,r2
1000e3fc:	0000d840 	call	10000d84 <__udivsi3>
1000e400:	a00b883a 	mov	r5,r20
1000e404:	1009883a 	mov	r4,r2
1000e408:	102d883a 	mov	r22,r2
1000e40c:	0000e400 	call	10000e40 <__mulsi3>
1000e410:	9826943a 	slli	r19,r19,16
1000e414:	900ed43a 	srli	r7,r18,16
1000e418:	d8c00117 	ldw	r3,4(sp)
1000e41c:	3cceb03a 	or	r7,r7,r19
1000e420:	3880052e 	bgeu	r7,r2,1000e438 <__udivdi3+0x258>
1000e424:	3c4f883a 	add	r7,r7,r17
1000e428:	b13fffc4 	addi	r4,r22,-1
1000e42c:	3c400136 	bltu	r7,r17,1000e434 <__udivdi3+0x254>
1000e430:	3880e436 	bltu	r7,r2,1000e7c4 <__udivdi3+0x5e4>
1000e434:	202d883a 	mov	r22,r4
1000e438:	38a1c83a 	sub	r16,r7,r2
1000e43c:	8009883a 	mov	r4,r16
1000e440:	a80b883a 	mov	r5,r21
1000e444:	d8c00115 	stw	r3,4(sp)
1000e448:	0000de80 	call	10000de8 <__umodsi3>
1000e44c:	1027883a 	mov	r19,r2
1000e450:	8009883a 	mov	r4,r16
1000e454:	a80b883a 	mov	r5,r21
1000e458:	9826943a 	slli	r19,r19,16
1000e45c:	0000d840 	call	10000d84 <__udivsi3>
1000e460:	a00b883a 	mov	r5,r20
1000e464:	1009883a 	mov	r4,r2
1000e468:	94bfffcc 	andi	r18,r18,65535
1000e46c:	1021883a 	mov	r16,r2
1000e470:	94e4b03a 	or	r18,r18,r19
1000e474:	0000e400 	call	10000e40 <__mulsi3>
1000e478:	d8c00117 	ldw	r3,4(sp)
1000e47c:	9080052e 	bgeu	r18,r2,1000e494 <__udivdi3+0x2b4>
1000e480:	8ca5883a 	add	r18,r17,r18
1000e484:	813fffc4 	addi	r4,r16,-1
1000e488:	9440ad36 	bltu	r18,r17,1000e740 <__udivdi3+0x560>
1000e48c:	9080ac2e 	bgeu	r18,r2,1000e740 <__udivdi3+0x560>
1000e490:	843fff84 	addi	r16,r16,-2
1000e494:	b004943a 	slli	r2,r22,16
1000e498:	1404b03a 	or	r2,r2,r16
1000e49c:	00000206 	br	1000e4a8 <__udivdi3+0x2c8>
1000e4a0:	0007883a 	mov	r3,zero
1000e4a4:	0005883a 	mov	r2,zero
1000e4a8:	dfc00b17 	ldw	ra,44(sp)
1000e4ac:	df000a17 	ldw	fp,40(sp)
1000e4b0:	ddc00917 	ldw	r23,36(sp)
1000e4b4:	dd800817 	ldw	r22,32(sp)
1000e4b8:	dd400717 	ldw	r21,28(sp)
1000e4bc:	dd000617 	ldw	r20,24(sp)
1000e4c0:	dcc00517 	ldw	r19,20(sp)
1000e4c4:	dc800417 	ldw	r18,16(sp)
1000e4c8:	dc400317 	ldw	r17,12(sp)
1000e4cc:	dc000217 	ldw	r16,8(sp)
1000e4d0:	dec00c04 	addi	sp,sp,48
1000e4d4:	f800283a 	ret
1000e4d8:	00803fc4 	movi	r2,255
1000e4dc:	11c5803a 	cmpltu	r2,r2,r7
1000e4e0:	100490fa 	slli	r2,r2,3
1000e4e4:	003f9906 	br	1000e34c <__alt_data_end+0xf800e34c>
1000e4e8:	00803fc4 	movi	r2,255
1000e4ec:	1445803a 	cmpltu	r2,r2,r17
1000e4f0:	100490fa 	slli	r2,r2,3
1000e4f4:	003fad06 	br	1000e3ac <__alt_data_end+0xf800e3ac>
1000e4f8:	00804034 	movhi	r2,256
1000e4fc:	10bfffc4 	addi	r2,r2,-1
1000e500:	11809f36 	bltu	r2,r6,1000e780 <__udivdi3+0x5a0>
1000e504:	00800404 	movi	r2,16
1000e508:	003f4c06 	br	1000e23c <__alt_data_end+0xf800e23c>
1000e50c:	3dce983a 	sll	r7,r7,r23
1000e510:	30b8d83a 	srl	fp,r6,r2
1000e514:	80a2d83a 	srl	r17,r16,r2
1000e518:	35cc983a 	sll	r6,r6,r23
1000e51c:	3f38b03a 	or	fp,r7,fp
1000e520:	e024d43a 	srli	r18,fp,16
1000e524:	9884d83a 	srl	r2,r19,r2
1000e528:	85e0983a 	sll	r16,r16,r23
1000e52c:	8809883a 	mov	r4,r17
1000e530:	900b883a 	mov	r5,r18
1000e534:	d9800015 	stw	r6,0(sp)
1000e538:	1420b03a 	or	r16,r2,r16
1000e53c:	0000de80 	call	10000de8 <__umodsi3>
1000e540:	900b883a 	mov	r5,r18
1000e544:	8809883a 	mov	r4,r17
1000e548:	1029883a 	mov	r20,r2
1000e54c:	e5bfffcc 	andi	r22,fp,65535
1000e550:	0000d840 	call	10000d84 <__udivsi3>
1000e554:	100b883a 	mov	r5,r2
1000e558:	b009883a 	mov	r4,r22
1000e55c:	102b883a 	mov	r21,r2
1000e560:	0000e400 	call	10000e40 <__mulsi3>
1000e564:	a028943a 	slli	r20,r20,16
1000e568:	8006d43a 	srli	r3,r16,16
1000e56c:	1d06b03a 	or	r3,r3,r20
1000e570:	1880042e 	bgeu	r3,r2,1000e584 <__udivdi3+0x3a4>
1000e574:	1f07883a 	add	r3,r3,fp
1000e578:	a93fffc4 	addi	r4,r21,-1
1000e57c:	1f00892e 	bgeu	r3,fp,1000e7a4 <__udivdi3+0x5c4>
1000e580:	202b883a 	mov	r21,r4
1000e584:	18a3c83a 	sub	r17,r3,r2
1000e588:	8809883a 	mov	r4,r17
1000e58c:	900b883a 	mov	r5,r18
1000e590:	0000de80 	call	10000de8 <__umodsi3>
1000e594:	1029883a 	mov	r20,r2
1000e598:	8809883a 	mov	r4,r17
1000e59c:	900b883a 	mov	r5,r18
1000e5a0:	a028943a 	slli	r20,r20,16
1000e5a4:	0000d840 	call	10000d84 <__udivsi3>
1000e5a8:	100b883a 	mov	r5,r2
1000e5ac:	b009883a 	mov	r4,r22
1000e5b0:	843fffcc 	andi	r16,r16,65535
1000e5b4:	1023883a 	mov	r17,r2
1000e5b8:	8520b03a 	or	r16,r16,r20
1000e5bc:	0000e400 	call	10000e40 <__mulsi3>
1000e5c0:	8080042e 	bgeu	r16,r2,1000e5d4 <__udivdi3+0x3f4>
1000e5c4:	8721883a 	add	r16,r16,fp
1000e5c8:	88ffffc4 	addi	r3,r17,-1
1000e5cc:	8700712e 	bgeu	r16,fp,1000e794 <__udivdi3+0x5b4>
1000e5d0:	1823883a 	mov	r17,r3
1000e5d4:	a80e943a 	slli	r7,r21,16
1000e5d8:	d8c00017 	ldw	r3,0(sp)
1000e5dc:	80a1c83a 	sub	r16,r16,r2
1000e5e0:	3c64b03a 	or	r18,r7,r17
1000e5e4:	1d3fffcc 	andi	r20,r3,65535
1000e5e8:	9022d43a 	srli	r17,r18,16
1000e5ec:	95bfffcc 	andi	r22,r18,65535
1000e5f0:	a00b883a 	mov	r5,r20
1000e5f4:	b009883a 	mov	r4,r22
1000e5f8:	182ad43a 	srli	r21,r3,16
1000e5fc:	0000e400 	call	10000e40 <__mulsi3>
1000e600:	a00b883a 	mov	r5,r20
1000e604:	8809883a 	mov	r4,r17
1000e608:	1039883a 	mov	fp,r2
1000e60c:	0000e400 	call	10000e40 <__mulsi3>
1000e610:	8809883a 	mov	r4,r17
1000e614:	a80b883a 	mov	r5,r21
1000e618:	1029883a 	mov	r20,r2
1000e61c:	0000e400 	call	10000e40 <__mulsi3>
1000e620:	a80b883a 	mov	r5,r21
1000e624:	b009883a 	mov	r4,r22
1000e628:	1023883a 	mov	r17,r2
1000e62c:	0000e400 	call	10000e40 <__mulsi3>
1000e630:	e006d43a 	srli	r3,fp,16
1000e634:	1505883a 	add	r2,r2,r20
1000e638:	1887883a 	add	r3,r3,r2
1000e63c:	1d00022e 	bgeu	r3,r20,1000e648 <__udivdi3+0x468>
1000e640:	00800074 	movhi	r2,1
1000e644:	88a3883a 	add	r17,r17,r2
1000e648:	1804d43a 	srli	r2,r3,16
1000e64c:	1463883a 	add	r17,r2,r17
1000e650:	84404436 	bltu	r16,r17,1000e764 <__udivdi3+0x584>
1000e654:	84403e26 	beq	r16,r17,1000e750 <__udivdi3+0x570>
1000e658:	9005883a 	mov	r2,r18
1000e65c:	0007883a 	mov	r3,zero
1000e660:	003f9106 	br	1000e4a8 <__alt_data_end+0xf800e4a8>
1000e664:	88e2983a 	sll	r17,r17,r3
1000e668:	80aed83a 	srl	r23,r16,r2
1000e66c:	80e0983a 	sll	r16,r16,r3
1000e670:	882ad43a 	srli	r21,r17,16
1000e674:	9884d83a 	srl	r2,r19,r2
1000e678:	b809883a 	mov	r4,r23
1000e67c:	a80b883a 	mov	r5,r21
1000e680:	98e4983a 	sll	r18,r19,r3
1000e684:	142cb03a 	or	r22,r2,r16
1000e688:	0000de80 	call	10000de8 <__umodsi3>
1000e68c:	b809883a 	mov	r4,r23
1000e690:	a80b883a 	mov	r5,r21
1000e694:	1027883a 	mov	r19,r2
1000e698:	8d3fffcc 	andi	r20,r17,65535
1000e69c:	0000d840 	call	10000d84 <__udivsi3>
1000e6a0:	a009883a 	mov	r4,r20
1000e6a4:	100b883a 	mov	r5,r2
1000e6a8:	102f883a 	mov	r23,r2
1000e6ac:	0000e400 	call	10000e40 <__mulsi3>
1000e6b0:	9826943a 	slli	r19,r19,16
1000e6b4:	b008d43a 	srli	r4,r22,16
1000e6b8:	24c8b03a 	or	r4,r4,r19
1000e6bc:	2080062e 	bgeu	r4,r2,1000e6d8 <__udivdi3+0x4f8>
1000e6c0:	2449883a 	add	r4,r4,r17
1000e6c4:	b8ffffc4 	addi	r3,r23,-1
1000e6c8:	24403c36 	bltu	r4,r17,1000e7bc <__udivdi3+0x5dc>
1000e6cc:	20803b2e 	bgeu	r4,r2,1000e7bc <__udivdi3+0x5dc>
1000e6d0:	bdffff84 	addi	r23,r23,-2
1000e6d4:	2449883a 	add	r4,r4,r17
1000e6d8:	20a1c83a 	sub	r16,r4,r2
1000e6dc:	a80b883a 	mov	r5,r21
1000e6e0:	8009883a 	mov	r4,r16
1000e6e4:	0000de80 	call	10000de8 <__umodsi3>
1000e6e8:	a80b883a 	mov	r5,r21
1000e6ec:	8009883a 	mov	r4,r16
1000e6f0:	1027883a 	mov	r19,r2
1000e6f4:	0000d840 	call	10000d84 <__udivsi3>
1000e6f8:	a009883a 	mov	r4,r20
1000e6fc:	100b883a 	mov	r5,r2
1000e700:	9826943a 	slli	r19,r19,16
1000e704:	1039883a 	mov	fp,r2
1000e708:	0000e400 	call	10000e40 <__mulsi3>
1000e70c:	b13fffcc 	andi	r4,r22,65535
1000e710:	24c8b03a 	or	r4,r4,r19
1000e714:	2080062e 	bgeu	r4,r2,1000e730 <__udivdi3+0x550>
1000e718:	2449883a 	add	r4,r4,r17
1000e71c:	e0ffffc4 	addi	r3,fp,-1
1000e720:	24402436 	bltu	r4,r17,1000e7b4 <__udivdi3+0x5d4>
1000e724:	2080232e 	bgeu	r4,r2,1000e7b4 <__udivdi3+0x5d4>
1000e728:	e73fff84 	addi	fp,fp,-2
1000e72c:	2449883a 	add	r4,r4,r17
1000e730:	b82e943a 	slli	r23,r23,16
1000e734:	20a1c83a 	sub	r16,r4,r2
1000e738:	bf06b03a 	or	r3,r23,fp
1000e73c:	003f2806 	br	1000e3e0 <__alt_data_end+0xf800e3e0>
1000e740:	2021883a 	mov	r16,r4
1000e744:	003f5306 	br	1000e494 <__alt_data_end+0xf800e494>
1000e748:	1821883a 	mov	r16,r3
1000e74c:	003ef406 	br	1000e320 <__alt_data_end+0xf800e320>
1000e750:	1806943a 	slli	r3,r3,16
1000e754:	9de6983a 	sll	r19,r19,r23
1000e758:	e73fffcc 	andi	fp,fp,65535
1000e75c:	1f07883a 	add	r3,r3,fp
1000e760:	98ffbd2e 	bgeu	r19,r3,1000e658 <__alt_data_end+0xf800e658>
1000e764:	90bfffc4 	addi	r2,r18,-1
1000e768:	0007883a 	mov	r3,zero
1000e76c:	003f4e06 	br	1000e4a8 <__alt_data_end+0xf800e4a8>
1000e770:	00800604 	movi	r2,24
1000e774:	003ef506 	br	1000e34c <__alt_data_end+0xf800e34c>
1000e778:	00800604 	movi	r2,24
1000e77c:	003f0b06 	br	1000e3ac <__alt_data_end+0xf800e3ac>
1000e780:	00800604 	movi	r2,24
1000e784:	003ead06 	br	1000e23c <__alt_data_end+0xf800e23c>
1000e788:	0007883a 	mov	r3,zero
1000e78c:	00800044 	movi	r2,1
1000e790:	003f4506 	br	1000e4a8 <__alt_data_end+0xf800e4a8>
1000e794:	80bf8e2e 	bgeu	r16,r2,1000e5d0 <__alt_data_end+0xf800e5d0>
1000e798:	8c7fff84 	addi	r17,r17,-2
1000e79c:	8721883a 	add	r16,r16,fp
1000e7a0:	003f8c06 	br	1000e5d4 <__alt_data_end+0xf800e5d4>
1000e7a4:	18bf762e 	bgeu	r3,r2,1000e580 <__alt_data_end+0xf800e580>
1000e7a8:	ad7fff84 	addi	r21,r21,-2
1000e7ac:	1f07883a 	add	r3,r3,fp
1000e7b0:	003f7406 	br	1000e584 <__alt_data_end+0xf800e584>
1000e7b4:	1839883a 	mov	fp,r3
1000e7b8:	003fdd06 	br	1000e730 <__alt_data_end+0xf800e730>
1000e7bc:	182f883a 	mov	r23,r3
1000e7c0:	003fc506 	br	1000e6d8 <__alt_data_end+0xf800e6d8>
1000e7c4:	b5bfff84 	addi	r22,r22,-2
1000e7c8:	3c4f883a 	add	r7,r7,r17
1000e7cc:	003f1a06 	br	1000e438 <__alt_data_end+0xf800e438>
1000e7d0:	b5bfff84 	addi	r22,r22,-2
1000e7d4:	1c47883a 	add	r3,r3,r17
1000e7d8:	003ebc06 	br	1000e2cc <__alt_data_end+0xf800e2cc>

1000e7dc <__umoddi3>:
1000e7dc:	defff304 	addi	sp,sp,-52
1000e7e0:	df000b15 	stw	fp,44(sp)
1000e7e4:	dc400415 	stw	r17,16(sp)
1000e7e8:	dc000315 	stw	r16,12(sp)
1000e7ec:	dfc00c15 	stw	ra,48(sp)
1000e7f0:	ddc00a15 	stw	r23,40(sp)
1000e7f4:	dd800915 	stw	r22,36(sp)
1000e7f8:	dd400815 	stw	r21,32(sp)
1000e7fc:	dd000715 	stw	r20,28(sp)
1000e800:	dcc00615 	stw	r19,24(sp)
1000e804:	dc800515 	stw	r18,20(sp)
1000e808:	2021883a 	mov	r16,r4
1000e80c:	2823883a 	mov	r17,r5
1000e810:	2839883a 	mov	fp,r5
1000e814:	3800401e 	bne	r7,zero,1000e918 <__umoddi3+0x13c>
1000e818:	3027883a 	mov	r19,r6
1000e81c:	2029883a 	mov	r20,r4
1000e820:	2980552e 	bgeu	r5,r6,1000e978 <__umoddi3+0x19c>
1000e824:	00bfffd4 	movui	r2,65535
1000e828:	1180a236 	bltu	r2,r6,1000eab4 <__umoddi3+0x2d8>
1000e82c:	01003fc4 	movi	r4,255
1000e830:	2189803a 	cmpltu	r4,r4,r6
1000e834:	200890fa 	slli	r4,r4,3
1000e838:	3104d83a 	srl	r2,r6,r4
1000e83c:	00c40074 	movhi	r3,4097
1000e840:	18d05704 	addi	r3,r3,16732
1000e844:	1885883a 	add	r2,r3,r2
1000e848:	10c00003 	ldbu	r3,0(r2)
1000e84c:	00800804 	movi	r2,32
1000e850:	1909883a 	add	r4,r3,r4
1000e854:	1125c83a 	sub	r18,r2,r4
1000e858:	90000526 	beq	r18,zero,1000e870 <__umoddi3+0x94>
1000e85c:	8ca2983a 	sll	r17,r17,r18
1000e860:	8108d83a 	srl	r4,r16,r4
1000e864:	34a6983a 	sll	r19,r6,r18
1000e868:	84a8983a 	sll	r20,r16,r18
1000e86c:	2478b03a 	or	fp,r4,r17
1000e870:	982cd43a 	srli	r22,r19,16
1000e874:	e009883a 	mov	r4,fp
1000e878:	9dffffcc 	andi	r23,r19,65535
1000e87c:	b00b883a 	mov	r5,r22
1000e880:	0000de80 	call	10000de8 <__umodsi3>
1000e884:	b00b883a 	mov	r5,r22
1000e888:	e009883a 	mov	r4,fp
1000e88c:	102b883a 	mov	r21,r2
1000e890:	0000d840 	call	10000d84 <__udivsi3>
1000e894:	100b883a 	mov	r5,r2
1000e898:	b809883a 	mov	r4,r23
1000e89c:	0000e400 	call	10000e40 <__mulsi3>
1000e8a0:	a82a943a 	slli	r21,r21,16
1000e8a4:	a006d43a 	srli	r3,r20,16
1000e8a8:	1d46b03a 	or	r3,r3,r21
1000e8ac:	1880032e 	bgeu	r3,r2,1000e8bc <__umoddi3+0xe0>
1000e8b0:	1cc7883a 	add	r3,r3,r19
1000e8b4:	1cc00136 	bltu	r3,r19,1000e8bc <__umoddi3+0xe0>
1000e8b8:	18813136 	bltu	r3,r2,1000ed80 <__umoddi3+0x5a4>
1000e8bc:	18a1c83a 	sub	r16,r3,r2
1000e8c0:	b00b883a 	mov	r5,r22
1000e8c4:	8009883a 	mov	r4,r16
1000e8c8:	0000de80 	call	10000de8 <__umodsi3>
1000e8cc:	b00b883a 	mov	r5,r22
1000e8d0:	8009883a 	mov	r4,r16
1000e8d4:	1023883a 	mov	r17,r2
1000e8d8:	0000d840 	call	10000d84 <__udivsi3>
1000e8dc:	100b883a 	mov	r5,r2
1000e8e0:	b809883a 	mov	r4,r23
1000e8e4:	8822943a 	slli	r17,r17,16
1000e8e8:	0000e400 	call	10000e40 <__mulsi3>
1000e8ec:	a0ffffcc 	andi	r3,r20,65535
1000e8f0:	1c46b03a 	or	r3,r3,r17
1000e8f4:	1880042e 	bgeu	r3,r2,1000e908 <__umoddi3+0x12c>
1000e8f8:	1cc7883a 	add	r3,r3,r19
1000e8fc:	1cc00236 	bltu	r3,r19,1000e908 <__umoddi3+0x12c>
1000e900:	1880012e 	bgeu	r3,r2,1000e908 <__umoddi3+0x12c>
1000e904:	1cc7883a 	add	r3,r3,r19
1000e908:	1885c83a 	sub	r2,r3,r2
1000e90c:	1484d83a 	srl	r2,r2,r18
1000e910:	0007883a 	mov	r3,zero
1000e914:	00005306 	br	1000ea64 <__umoddi3+0x288>
1000e918:	29c05036 	bltu	r5,r7,1000ea5c <__umoddi3+0x280>
1000e91c:	00bfffd4 	movui	r2,65535
1000e920:	11c05c2e 	bgeu	r2,r7,1000ea94 <__umoddi3+0x2b8>
1000e924:	00804034 	movhi	r2,256
1000e928:	10bfffc4 	addi	r2,r2,-1
1000e92c:	11c10636 	bltu	r2,r7,1000ed48 <__umoddi3+0x56c>
1000e930:	01000404 	movi	r4,16
1000e934:	3904d83a 	srl	r2,r7,r4
1000e938:	00c40074 	movhi	r3,4097
1000e93c:	18d05704 	addi	r3,r3,16732
1000e940:	1885883a 	add	r2,r3,r2
1000e944:	14c00003 	ldbu	r19,0(r2)
1000e948:	00c00804 	movi	r3,32
1000e94c:	9927883a 	add	r19,r19,r4
1000e950:	1ce9c83a 	sub	r20,r3,r19
1000e954:	a0005c1e 	bne	r20,zero,1000eac8 <__umoddi3+0x2ec>
1000e958:	3c400136 	bltu	r7,r17,1000e960 <__umoddi3+0x184>
1000e95c:	81810a36 	bltu	r16,r6,1000ed88 <__umoddi3+0x5ac>
1000e960:	8185c83a 	sub	r2,r16,r6
1000e964:	89e3c83a 	sub	r17,r17,r7
1000e968:	8089803a 	cmpltu	r4,r16,r2
1000e96c:	8939c83a 	sub	fp,r17,r4
1000e970:	e007883a 	mov	r3,fp
1000e974:	00003b06 	br	1000ea64 <__umoddi3+0x288>
1000e978:	3000041e 	bne	r6,zero,1000e98c <__umoddi3+0x1b0>
1000e97c:	000b883a 	mov	r5,zero
1000e980:	01000044 	movi	r4,1
1000e984:	0000d840 	call	10000d84 <__udivsi3>
1000e988:	1027883a 	mov	r19,r2
1000e98c:	00bfffd4 	movui	r2,65535
1000e990:	14c0442e 	bgeu	r2,r19,1000eaa4 <__umoddi3+0x2c8>
1000e994:	00804034 	movhi	r2,256
1000e998:	10bfffc4 	addi	r2,r2,-1
1000e99c:	14c0ec36 	bltu	r2,r19,1000ed50 <__umoddi3+0x574>
1000e9a0:	00800404 	movi	r2,16
1000e9a4:	9886d83a 	srl	r3,r19,r2
1000e9a8:	01040074 	movhi	r4,4097
1000e9ac:	21105704 	addi	r4,r4,16732
1000e9b0:	20c7883a 	add	r3,r4,r3
1000e9b4:	18c00003 	ldbu	r3,0(r3)
1000e9b8:	1887883a 	add	r3,r3,r2
1000e9bc:	00800804 	movi	r2,32
1000e9c0:	10e5c83a 	sub	r18,r2,r3
1000e9c4:	9000ab1e 	bne	r18,zero,1000ec74 <__umoddi3+0x498>
1000e9c8:	982cd43a 	srli	r22,r19,16
1000e9cc:	8ce3c83a 	sub	r17,r17,r19
1000e9d0:	9dffffcc 	andi	r23,r19,65535
1000e9d4:	b00b883a 	mov	r5,r22
1000e9d8:	8809883a 	mov	r4,r17
1000e9dc:	0000de80 	call	10000de8 <__umodsi3>
1000e9e0:	b00b883a 	mov	r5,r22
1000e9e4:	8809883a 	mov	r4,r17
1000e9e8:	102b883a 	mov	r21,r2
1000e9ec:	0000d840 	call	10000d84 <__udivsi3>
1000e9f0:	b80b883a 	mov	r5,r23
1000e9f4:	1009883a 	mov	r4,r2
1000e9f8:	0000e400 	call	10000e40 <__mulsi3>
1000e9fc:	a82a943a 	slli	r21,r21,16
1000ea00:	a006d43a 	srli	r3,r20,16
1000ea04:	1d46b03a 	or	r3,r3,r21
1000ea08:	1880042e 	bgeu	r3,r2,1000ea1c <__umoddi3+0x240>
1000ea0c:	1cc7883a 	add	r3,r3,r19
1000ea10:	1cc00236 	bltu	r3,r19,1000ea1c <__umoddi3+0x240>
1000ea14:	1880012e 	bgeu	r3,r2,1000ea1c <__umoddi3+0x240>
1000ea18:	1cc7883a 	add	r3,r3,r19
1000ea1c:	18a1c83a 	sub	r16,r3,r2
1000ea20:	b00b883a 	mov	r5,r22
1000ea24:	8009883a 	mov	r4,r16
1000ea28:	0000de80 	call	10000de8 <__umodsi3>
1000ea2c:	1023883a 	mov	r17,r2
1000ea30:	b00b883a 	mov	r5,r22
1000ea34:	8009883a 	mov	r4,r16
1000ea38:	0000d840 	call	10000d84 <__udivsi3>
1000ea3c:	8822943a 	slli	r17,r17,16
1000ea40:	b80b883a 	mov	r5,r23
1000ea44:	1009883a 	mov	r4,r2
1000ea48:	0000e400 	call	10000e40 <__mulsi3>
1000ea4c:	a53fffcc 	andi	r20,r20,65535
1000ea50:	a446b03a 	or	r3,r20,r17
1000ea54:	18bfac2e 	bgeu	r3,r2,1000e908 <__alt_data_end+0xf800e908>
1000ea58:	003fa706 	br	1000e8f8 <__alt_data_end+0xf800e8f8>
1000ea5c:	2005883a 	mov	r2,r4
1000ea60:	2807883a 	mov	r3,r5
1000ea64:	dfc00c17 	ldw	ra,48(sp)
1000ea68:	df000b17 	ldw	fp,44(sp)
1000ea6c:	ddc00a17 	ldw	r23,40(sp)
1000ea70:	dd800917 	ldw	r22,36(sp)
1000ea74:	dd400817 	ldw	r21,32(sp)
1000ea78:	dd000717 	ldw	r20,28(sp)
1000ea7c:	dcc00617 	ldw	r19,24(sp)
1000ea80:	dc800517 	ldw	r18,20(sp)
1000ea84:	dc400417 	ldw	r17,16(sp)
1000ea88:	dc000317 	ldw	r16,12(sp)
1000ea8c:	dec00d04 	addi	sp,sp,52
1000ea90:	f800283a 	ret
1000ea94:	04c03fc4 	movi	r19,255
1000ea98:	99c9803a 	cmpltu	r4,r19,r7
1000ea9c:	200890fa 	slli	r4,r4,3
1000eaa0:	003fa406 	br	1000e934 <__alt_data_end+0xf800e934>
1000eaa4:	00803fc4 	movi	r2,255
1000eaa8:	14c5803a 	cmpltu	r2,r2,r19
1000eaac:	100490fa 	slli	r2,r2,3
1000eab0:	003fbc06 	br	1000e9a4 <__alt_data_end+0xf800e9a4>
1000eab4:	00804034 	movhi	r2,256
1000eab8:	10bfffc4 	addi	r2,r2,-1
1000eabc:	1180a636 	bltu	r2,r6,1000ed58 <__umoddi3+0x57c>
1000eac0:	01000404 	movi	r4,16
1000eac4:	003f5c06 	br	1000e838 <__alt_data_end+0xf800e838>
1000eac8:	3d0e983a 	sll	r7,r7,r20
1000eacc:	34ead83a 	srl	r21,r6,r19
1000ead0:	8cc6d83a 	srl	r3,r17,r19
1000ead4:	8d10983a 	sll	r8,r17,r20
1000ead8:	3d6ab03a 	or	r21,r7,r21
1000eadc:	a82cd43a 	srli	r22,r21,16
1000eae0:	84e2d83a 	srl	r17,r16,r19
1000eae4:	1809883a 	mov	r4,r3
1000eae8:	b00b883a 	mov	r5,r22
1000eaec:	8a22b03a 	or	r17,r17,r8
1000eaf0:	3524983a 	sll	r18,r6,r20
1000eaf4:	dc400015 	stw	r17,0(sp)
1000eaf8:	d8c00115 	stw	r3,4(sp)
1000eafc:	0000de80 	call	10000de8 <__umodsi3>
1000eb00:	d8c00117 	ldw	r3,4(sp)
1000eb04:	b00b883a 	mov	r5,r22
1000eb08:	1039883a 	mov	fp,r2
1000eb0c:	1809883a 	mov	r4,r3
1000eb10:	0000d840 	call	10000d84 <__udivsi3>
1000eb14:	adffffcc 	andi	r23,r21,65535
1000eb18:	100b883a 	mov	r5,r2
1000eb1c:	b809883a 	mov	r4,r23
1000eb20:	1023883a 	mov	r17,r2
1000eb24:	0000e400 	call	10000e40 <__mulsi3>
1000eb28:	d9400017 	ldw	r5,0(sp)
1000eb2c:	e008943a 	slli	r4,fp,16
1000eb30:	8520983a 	sll	r16,r16,r20
1000eb34:	2806d43a 	srli	r3,r5,16
1000eb38:	1906b03a 	or	r3,r3,r4
1000eb3c:	1880042e 	bgeu	r3,r2,1000eb50 <__umoddi3+0x374>
1000eb40:	1d47883a 	add	r3,r3,r21
1000eb44:	893fffc4 	addi	r4,r17,-1
1000eb48:	1d40892e 	bgeu	r3,r21,1000ed70 <__umoddi3+0x594>
1000eb4c:	2023883a 	mov	r17,r4
1000eb50:	18b9c83a 	sub	fp,r3,r2
1000eb54:	b00b883a 	mov	r5,r22
1000eb58:	e009883a 	mov	r4,fp
1000eb5c:	0000de80 	call	10000de8 <__umodsi3>
1000eb60:	b00b883a 	mov	r5,r22
1000eb64:	e009883a 	mov	r4,fp
1000eb68:	d8800215 	stw	r2,8(sp)
1000eb6c:	0000d840 	call	10000d84 <__udivsi3>
1000eb70:	100b883a 	mov	r5,r2
1000eb74:	b809883a 	mov	r4,r23
1000eb78:	102d883a 	mov	r22,r2
1000eb7c:	0000e400 	call	10000e40 <__mulsi3>
1000eb80:	d9800217 	ldw	r6,8(sp)
1000eb84:	d8c00017 	ldw	r3,0(sp)
1000eb88:	300c943a 	slli	r6,r6,16
1000eb8c:	1a3fffcc 	andi	r8,r3,65535
1000eb90:	4190b03a 	or	r8,r8,r6
1000eb94:	4080042e 	bgeu	r8,r2,1000eba8 <__umoddi3+0x3cc>
1000eb98:	4551883a 	add	r8,r8,r21
1000eb9c:	b0ffffc4 	addi	r3,r22,-1
1000eba0:	45406f2e 	bgeu	r8,r21,1000ed60 <__umoddi3+0x584>
1000eba4:	182d883a 	mov	r22,r3
1000eba8:	880e943a 	slli	r7,r17,16
1000ebac:	9006d43a 	srli	r3,r18,16
1000ebb0:	91bfffcc 	andi	r6,r18,65535
1000ebb4:	3dacb03a 	or	r22,r7,r22
1000ebb8:	b02ed43a 	srli	r23,r22,16
1000ebbc:	b5bfffcc 	andi	r22,r22,65535
1000ebc0:	300b883a 	mov	r5,r6
1000ebc4:	b009883a 	mov	r4,r22
1000ebc8:	40a3c83a 	sub	r17,r8,r2
1000ebcc:	d8c00115 	stw	r3,4(sp)
1000ebd0:	d9800215 	stw	r6,8(sp)
1000ebd4:	0000e400 	call	10000e40 <__mulsi3>
1000ebd8:	d9800217 	ldw	r6,8(sp)
1000ebdc:	b809883a 	mov	r4,r23
1000ebe0:	1039883a 	mov	fp,r2
1000ebe4:	300b883a 	mov	r5,r6
1000ebe8:	0000e400 	call	10000e40 <__mulsi3>
1000ebec:	d8c00117 	ldw	r3,4(sp)
1000ebf0:	b809883a 	mov	r4,r23
1000ebf4:	d8800215 	stw	r2,8(sp)
1000ebf8:	180b883a 	mov	r5,r3
1000ebfc:	0000e400 	call	10000e40 <__mulsi3>
1000ec00:	d8c00117 	ldw	r3,4(sp)
1000ec04:	b009883a 	mov	r4,r22
1000ec08:	102f883a 	mov	r23,r2
1000ec0c:	180b883a 	mov	r5,r3
1000ec10:	0000e400 	call	10000e40 <__mulsi3>
1000ec14:	d9800217 	ldw	r6,8(sp)
1000ec18:	e006d43a 	srli	r3,fp,16
1000ec1c:	1185883a 	add	r2,r2,r6
1000ec20:	1885883a 	add	r2,r3,r2
1000ec24:	1180022e 	bgeu	r2,r6,1000ec30 <__umoddi3+0x454>
1000ec28:	00c00074 	movhi	r3,1
1000ec2c:	b8ef883a 	add	r23,r23,r3
1000ec30:	1006d43a 	srli	r3,r2,16
1000ec34:	1004943a 	slli	r2,r2,16
1000ec38:	e73fffcc 	andi	fp,fp,65535
1000ec3c:	1dc7883a 	add	r3,r3,r23
1000ec40:	1739883a 	add	fp,r2,fp
1000ec44:	88c03a36 	bltu	r17,r3,1000ed30 <__umoddi3+0x554>
1000ec48:	88c05126 	beq	r17,r3,1000ed90 <__umoddi3+0x5b4>
1000ec4c:	88c9c83a 	sub	r4,r17,r3
1000ec50:	e00f883a 	mov	r7,fp
1000ec54:	81cfc83a 	sub	r7,r16,r7
1000ec58:	81c7803a 	cmpltu	r3,r16,r7
1000ec5c:	20c7c83a 	sub	r3,r4,r3
1000ec60:	1cc4983a 	sll	r2,r3,r19
1000ec64:	3d0ed83a 	srl	r7,r7,r20
1000ec68:	1d06d83a 	srl	r3,r3,r20
1000ec6c:	11c4b03a 	or	r2,r2,r7
1000ec70:	003f7c06 	br	1000ea64 <__alt_data_end+0xf800ea64>
1000ec74:	9ca6983a 	sll	r19,r19,r18
1000ec78:	88f8d83a 	srl	fp,r17,r3
1000ec7c:	80c4d83a 	srl	r2,r16,r3
1000ec80:	982cd43a 	srli	r22,r19,16
1000ec84:	8ca2983a 	sll	r17,r17,r18
1000ec88:	e009883a 	mov	r4,fp
1000ec8c:	b00b883a 	mov	r5,r22
1000ec90:	146ab03a 	or	r21,r2,r17
1000ec94:	0000de80 	call	10000de8 <__umodsi3>
1000ec98:	b00b883a 	mov	r5,r22
1000ec9c:	e009883a 	mov	r4,fp
1000eca0:	1029883a 	mov	r20,r2
1000eca4:	9dffffcc 	andi	r23,r19,65535
1000eca8:	0000d840 	call	10000d84 <__udivsi3>
1000ecac:	b809883a 	mov	r4,r23
1000ecb0:	100b883a 	mov	r5,r2
1000ecb4:	0000e400 	call	10000e40 <__mulsi3>
1000ecb8:	a008943a 	slli	r4,r20,16
1000ecbc:	a806d43a 	srli	r3,r21,16
1000ecc0:	84a8983a 	sll	r20,r16,r18
1000ecc4:	1906b03a 	or	r3,r3,r4
1000ecc8:	1880042e 	bgeu	r3,r2,1000ecdc <__umoddi3+0x500>
1000eccc:	1cc7883a 	add	r3,r3,r19
1000ecd0:	1cc00236 	bltu	r3,r19,1000ecdc <__umoddi3+0x500>
1000ecd4:	1880012e 	bgeu	r3,r2,1000ecdc <__umoddi3+0x500>
1000ecd8:	1cc7883a 	add	r3,r3,r19
1000ecdc:	18a3c83a 	sub	r17,r3,r2
1000ece0:	b00b883a 	mov	r5,r22
1000ece4:	8809883a 	mov	r4,r17
1000ece8:	0000de80 	call	10000de8 <__umodsi3>
1000ecec:	b00b883a 	mov	r5,r22
1000ecf0:	8809883a 	mov	r4,r17
1000ecf4:	1021883a 	mov	r16,r2
1000ecf8:	0000d840 	call	10000d84 <__udivsi3>
1000ecfc:	100b883a 	mov	r5,r2
1000ed00:	b809883a 	mov	r4,r23
1000ed04:	8020943a 	slli	r16,r16,16
1000ed08:	0000e400 	call	10000e40 <__mulsi3>
1000ed0c:	a8ffffcc 	andi	r3,r21,65535
1000ed10:	1c06b03a 	or	r3,r3,r16
1000ed14:	1880042e 	bgeu	r3,r2,1000ed28 <__umoddi3+0x54c>
1000ed18:	1cc7883a 	add	r3,r3,r19
1000ed1c:	1cc00236 	bltu	r3,r19,1000ed28 <__umoddi3+0x54c>
1000ed20:	1880012e 	bgeu	r3,r2,1000ed28 <__umoddi3+0x54c>
1000ed24:	1cc7883a 	add	r3,r3,r19
1000ed28:	18a3c83a 	sub	r17,r3,r2
1000ed2c:	003f2906 	br	1000e9d4 <__alt_data_end+0xf800e9d4>
1000ed30:	e48fc83a 	sub	r7,fp,r18
1000ed34:	1d49c83a 	sub	r4,r3,r21
1000ed38:	e1f9803a 	cmpltu	fp,fp,r7
1000ed3c:	2739c83a 	sub	fp,r4,fp
1000ed40:	8f09c83a 	sub	r4,r17,fp
1000ed44:	003fc306 	br	1000ec54 <__alt_data_end+0xf800ec54>
1000ed48:	01000604 	movi	r4,24
1000ed4c:	003ef906 	br	1000e934 <__alt_data_end+0xf800e934>
1000ed50:	00800604 	movi	r2,24
1000ed54:	003f1306 	br	1000e9a4 <__alt_data_end+0xf800e9a4>
1000ed58:	01000604 	movi	r4,24
1000ed5c:	003eb606 	br	1000e838 <__alt_data_end+0xf800e838>
1000ed60:	40bf902e 	bgeu	r8,r2,1000eba4 <__alt_data_end+0xf800eba4>
1000ed64:	b5bfff84 	addi	r22,r22,-2
1000ed68:	4551883a 	add	r8,r8,r21
1000ed6c:	003f8e06 	br	1000eba8 <__alt_data_end+0xf800eba8>
1000ed70:	18bf762e 	bgeu	r3,r2,1000eb4c <__alt_data_end+0xf800eb4c>
1000ed74:	8c7fff84 	addi	r17,r17,-2
1000ed78:	1d47883a 	add	r3,r3,r21
1000ed7c:	003f7406 	br	1000eb50 <__alt_data_end+0xf800eb50>
1000ed80:	1cc7883a 	add	r3,r3,r19
1000ed84:	003ecd06 	br	1000e8bc <__alt_data_end+0xf800e8bc>
1000ed88:	8005883a 	mov	r2,r16
1000ed8c:	003ef806 	br	1000e970 <__alt_data_end+0xf800e970>
1000ed90:	873fe736 	bltu	r16,fp,1000ed30 <__alt_data_end+0xf800ed30>
1000ed94:	e00f883a 	mov	r7,fp
1000ed98:	0009883a 	mov	r4,zero
1000ed9c:	003fad06 	br	1000ec54 <__alt_data_end+0xf800ec54>

1000eda0 <__adddf3>:
1000eda0:	02c00434 	movhi	r11,16
1000eda4:	5affffc4 	addi	r11,r11,-1
1000eda8:	2806d7fa 	srli	r3,r5,31
1000edac:	2ad4703a 	and	r10,r5,r11
1000edb0:	3ad2703a 	and	r9,r7,r11
1000edb4:	3804d53a 	srli	r2,r7,20
1000edb8:	3018d77a 	srli	r12,r6,29
1000edbc:	280ad53a 	srli	r5,r5,20
1000edc0:	501490fa 	slli	r10,r10,3
1000edc4:	2010d77a 	srli	r8,r4,29
1000edc8:	481290fa 	slli	r9,r9,3
1000edcc:	380ed7fa 	srli	r7,r7,31
1000edd0:	defffb04 	addi	sp,sp,-20
1000edd4:	dc800215 	stw	r18,8(sp)
1000edd8:	dc400115 	stw	r17,4(sp)
1000eddc:	dc000015 	stw	r16,0(sp)
1000ede0:	dfc00415 	stw	ra,16(sp)
1000ede4:	dcc00315 	stw	r19,12(sp)
1000ede8:	1c803fcc 	andi	r18,r3,255
1000edec:	2c01ffcc 	andi	r16,r5,2047
1000edf0:	5210b03a 	or	r8,r10,r8
1000edf4:	202290fa 	slli	r17,r4,3
1000edf8:	1081ffcc 	andi	r2,r2,2047
1000edfc:	4b12b03a 	or	r9,r9,r12
1000ee00:	300c90fa 	slli	r6,r6,3
1000ee04:	91c07526 	beq	r18,r7,1000efdc <__adddf3+0x23c>
1000ee08:	8087c83a 	sub	r3,r16,r2
1000ee0c:	00c0ab0e 	bge	zero,r3,1000f0bc <__adddf3+0x31c>
1000ee10:	10002a1e 	bne	r2,zero,1000eebc <__adddf3+0x11c>
1000ee14:	4984b03a 	or	r2,r9,r6
1000ee18:	1000961e 	bne	r2,zero,1000f074 <__adddf3+0x2d4>
1000ee1c:	888001cc 	andi	r2,r17,7
1000ee20:	10000726 	beq	r2,zero,1000ee40 <__adddf3+0xa0>
1000ee24:	888003cc 	andi	r2,r17,15
1000ee28:	00c00104 	movi	r3,4
1000ee2c:	10c00426 	beq	r2,r3,1000ee40 <__adddf3+0xa0>
1000ee30:	88c7883a 	add	r3,r17,r3
1000ee34:	1c63803a 	cmpltu	r17,r3,r17
1000ee38:	4451883a 	add	r8,r8,r17
1000ee3c:	1823883a 	mov	r17,r3
1000ee40:	4080202c 	andhi	r2,r8,128
1000ee44:	10005926 	beq	r2,zero,1000efac <__adddf3+0x20c>
1000ee48:	84000044 	addi	r16,r16,1
1000ee4c:	0081ffc4 	movi	r2,2047
1000ee50:	8080ba26 	beq	r16,r2,1000f13c <__adddf3+0x39c>
1000ee54:	00bfe034 	movhi	r2,65408
1000ee58:	10bfffc4 	addi	r2,r2,-1
1000ee5c:	4090703a 	and	r8,r8,r2
1000ee60:	4004977a 	slli	r2,r8,29
1000ee64:	4010927a 	slli	r8,r8,9
1000ee68:	8822d0fa 	srli	r17,r17,3
1000ee6c:	8401ffcc 	andi	r16,r16,2047
1000ee70:	4010d33a 	srli	r8,r8,12
1000ee74:	9007883a 	mov	r3,r18
1000ee78:	1444b03a 	or	r2,r2,r17
1000ee7c:	8401ffcc 	andi	r16,r16,2047
1000ee80:	8020953a 	slli	r16,r16,20
1000ee84:	18c03fcc 	andi	r3,r3,255
1000ee88:	01000434 	movhi	r4,16
1000ee8c:	213fffc4 	addi	r4,r4,-1
1000ee90:	180697fa 	slli	r3,r3,31
1000ee94:	4110703a 	and	r8,r8,r4
1000ee98:	4410b03a 	or	r8,r8,r16
1000ee9c:	40c6b03a 	or	r3,r8,r3
1000eea0:	dfc00417 	ldw	ra,16(sp)
1000eea4:	dcc00317 	ldw	r19,12(sp)
1000eea8:	dc800217 	ldw	r18,8(sp)
1000eeac:	dc400117 	ldw	r17,4(sp)
1000eeb0:	dc000017 	ldw	r16,0(sp)
1000eeb4:	dec00504 	addi	sp,sp,20
1000eeb8:	f800283a 	ret
1000eebc:	0081ffc4 	movi	r2,2047
1000eec0:	80bfd626 	beq	r16,r2,1000ee1c <__alt_data_end+0xf800ee1c>
1000eec4:	4a402034 	orhi	r9,r9,128
1000eec8:	00800e04 	movi	r2,56
1000eecc:	10c09f16 	blt	r2,r3,1000f14c <__adddf3+0x3ac>
1000eed0:	008007c4 	movi	r2,31
1000eed4:	10c0c216 	blt	r2,r3,1000f1e0 <__adddf3+0x440>
1000eed8:	00800804 	movi	r2,32
1000eedc:	10c5c83a 	sub	r2,r2,r3
1000eee0:	488a983a 	sll	r5,r9,r2
1000eee4:	30c8d83a 	srl	r4,r6,r3
1000eee8:	3084983a 	sll	r2,r6,r2
1000eeec:	48c6d83a 	srl	r3,r9,r3
1000eef0:	290cb03a 	or	r6,r5,r4
1000eef4:	1004c03a 	cmpne	r2,r2,zero
1000eef8:	308cb03a 	or	r6,r6,r2
1000eefc:	898dc83a 	sub	r6,r17,r6
1000ef00:	89a3803a 	cmpltu	r17,r17,r6
1000ef04:	40d1c83a 	sub	r8,r8,r3
1000ef08:	4451c83a 	sub	r8,r8,r17
1000ef0c:	3023883a 	mov	r17,r6
1000ef10:	4080202c 	andhi	r2,r8,128
1000ef14:	10002326 	beq	r2,zero,1000efa4 <__adddf3+0x204>
1000ef18:	04c02034 	movhi	r19,128
1000ef1c:	9cffffc4 	addi	r19,r19,-1
1000ef20:	44e6703a 	and	r19,r8,r19
1000ef24:	98007626 	beq	r19,zero,1000f100 <__adddf3+0x360>
1000ef28:	9809883a 	mov	r4,r19
1000ef2c:	00115e00 	call	100115e0 <__clzsi2>
1000ef30:	10fffe04 	addi	r3,r2,-8
1000ef34:	010007c4 	movi	r4,31
1000ef38:	20c07716 	blt	r4,r3,1000f118 <__adddf3+0x378>
1000ef3c:	00800804 	movi	r2,32
1000ef40:	10c5c83a 	sub	r2,r2,r3
1000ef44:	8884d83a 	srl	r2,r17,r2
1000ef48:	98d0983a 	sll	r8,r19,r3
1000ef4c:	88e2983a 	sll	r17,r17,r3
1000ef50:	1204b03a 	or	r2,r2,r8
1000ef54:	1c007416 	blt	r3,r16,1000f128 <__adddf3+0x388>
1000ef58:	1c21c83a 	sub	r16,r3,r16
1000ef5c:	82000044 	addi	r8,r16,1
1000ef60:	00c007c4 	movi	r3,31
1000ef64:	1a009116 	blt	r3,r8,1000f1ac <__adddf3+0x40c>
1000ef68:	00c00804 	movi	r3,32
1000ef6c:	1a07c83a 	sub	r3,r3,r8
1000ef70:	8a08d83a 	srl	r4,r17,r8
1000ef74:	88e2983a 	sll	r17,r17,r3
1000ef78:	10c6983a 	sll	r3,r2,r3
1000ef7c:	1210d83a 	srl	r8,r2,r8
1000ef80:	8804c03a 	cmpne	r2,r17,zero
1000ef84:	1906b03a 	or	r3,r3,r4
1000ef88:	18a2b03a 	or	r17,r3,r2
1000ef8c:	0021883a 	mov	r16,zero
1000ef90:	003fa206 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000ef94:	1890b03a 	or	r8,r3,r2
1000ef98:	40017d26 	beq	r8,zero,1000f590 <__adddf3+0x7f0>
1000ef9c:	1011883a 	mov	r8,r2
1000efa0:	1823883a 	mov	r17,r3
1000efa4:	888001cc 	andi	r2,r17,7
1000efa8:	103f9e1e 	bne	r2,zero,1000ee24 <__alt_data_end+0xf800ee24>
1000efac:	4004977a 	slli	r2,r8,29
1000efb0:	8822d0fa 	srli	r17,r17,3
1000efb4:	4010d0fa 	srli	r8,r8,3
1000efb8:	9007883a 	mov	r3,r18
1000efbc:	1444b03a 	or	r2,r2,r17
1000efc0:	0101ffc4 	movi	r4,2047
1000efc4:	81002426 	beq	r16,r4,1000f058 <__adddf3+0x2b8>
1000efc8:	8120703a 	and	r16,r16,r4
1000efcc:	01000434 	movhi	r4,16
1000efd0:	213fffc4 	addi	r4,r4,-1
1000efd4:	4110703a 	and	r8,r8,r4
1000efd8:	003fa806 	br	1000ee7c <__alt_data_end+0xf800ee7c>
1000efdc:	8089c83a 	sub	r4,r16,r2
1000efe0:	01005e0e 	bge	zero,r4,1000f15c <__adddf3+0x3bc>
1000efe4:	10002b26 	beq	r2,zero,1000f094 <__adddf3+0x2f4>
1000efe8:	0081ffc4 	movi	r2,2047
1000efec:	80bf8b26 	beq	r16,r2,1000ee1c <__alt_data_end+0xf800ee1c>
1000eff0:	4a402034 	orhi	r9,r9,128
1000eff4:	00800e04 	movi	r2,56
1000eff8:	1100a40e 	bge	r2,r4,1000f28c <__adddf3+0x4ec>
1000effc:	498cb03a 	or	r6,r9,r6
1000f000:	300ac03a 	cmpne	r5,r6,zero
1000f004:	0013883a 	mov	r9,zero
1000f008:	2c4b883a 	add	r5,r5,r17
1000f00c:	2c63803a 	cmpltu	r17,r5,r17
1000f010:	4a11883a 	add	r8,r9,r8
1000f014:	8a11883a 	add	r8,r17,r8
1000f018:	2823883a 	mov	r17,r5
1000f01c:	4080202c 	andhi	r2,r8,128
1000f020:	103fe026 	beq	r2,zero,1000efa4 <__alt_data_end+0xf800efa4>
1000f024:	84000044 	addi	r16,r16,1
1000f028:	0081ffc4 	movi	r2,2047
1000f02c:	8080d226 	beq	r16,r2,1000f378 <__adddf3+0x5d8>
1000f030:	00bfe034 	movhi	r2,65408
1000f034:	10bfffc4 	addi	r2,r2,-1
1000f038:	4090703a 	and	r8,r8,r2
1000f03c:	880ad07a 	srli	r5,r17,1
1000f040:	400897fa 	slli	r4,r8,31
1000f044:	88c0004c 	andi	r3,r17,1
1000f048:	28e2b03a 	or	r17,r5,r3
1000f04c:	4010d07a 	srli	r8,r8,1
1000f050:	2462b03a 	or	r17,r4,r17
1000f054:	003f7106 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f058:	4088b03a 	or	r4,r8,r2
1000f05c:	20014526 	beq	r4,zero,1000f574 <__adddf3+0x7d4>
1000f060:	01000434 	movhi	r4,16
1000f064:	42000234 	orhi	r8,r8,8
1000f068:	213fffc4 	addi	r4,r4,-1
1000f06c:	4110703a 	and	r8,r8,r4
1000f070:	003f8206 	br	1000ee7c <__alt_data_end+0xf800ee7c>
1000f074:	18ffffc4 	addi	r3,r3,-1
1000f078:	1800491e 	bne	r3,zero,1000f1a0 <__adddf3+0x400>
1000f07c:	898bc83a 	sub	r5,r17,r6
1000f080:	8963803a 	cmpltu	r17,r17,r5
1000f084:	4251c83a 	sub	r8,r8,r9
1000f088:	4451c83a 	sub	r8,r8,r17
1000f08c:	2823883a 	mov	r17,r5
1000f090:	003f9f06 	br	1000ef10 <__alt_data_end+0xf800ef10>
1000f094:	4984b03a 	or	r2,r9,r6
1000f098:	103f6026 	beq	r2,zero,1000ee1c <__alt_data_end+0xf800ee1c>
1000f09c:	213fffc4 	addi	r4,r4,-1
1000f0a0:	2000931e 	bne	r4,zero,1000f2f0 <__adddf3+0x550>
1000f0a4:	898d883a 	add	r6,r17,r6
1000f0a8:	3463803a 	cmpltu	r17,r6,r17
1000f0ac:	4251883a 	add	r8,r8,r9
1000f0b0:	8a11883a 	add	r8,r17,r8
1000f0b4:	3023883a 	mov	r17,r6
1000f0b8:	003fd806 	br	1000f01c <__alt_data_end+0xf800f01c>
1000f0bc:	1800541e 	bne	r3,zero,1000f210 <__adddf3+0x470>
1000f0c0:	80800044 	addi	r2,r16,1
1000f0c4:	1081ffcc 	andi	r2,r2,2047
1000f0c8:	00c00044 	movi	r3,1
1000f0cc:	1880a00e 	bge	r3,r2,1000f350 <__adddf3+0x5b0>
1000f0d0:	8989c83a 	sub	r4,r17,r6
1000f0d4:	8905803a 	cmpltu	r2,r17,r4
1000f0d8:	4267c83a 	sub	r19,r8,r9
1000f0dc:	98a7c83a 	sub	r19,r19,r2
1000f0e0:	9880202c 	andhi	r2,r19,128
1000f0e4:	10006326 	beq	r2,zero,1000f274 <__adddf3+0x4d4>
1000f0e8:	3463c83a 	sub	r17,r6,r17
1000f0ec:	4a07c83a 	sub	r3,r9,r8
1000f0f0:	344d803a 	cmpltu	r6,r6,r17
1000f0f4:	19a7c83a 	sub	r19,r3,r6
1000f0f8:	3825883a 	mov	r18,r7
1000f0fc:	983f8a1e 	bne	r19,zero,1000ef28 <__alt_data_end+0xf800ef28>
1000f100:	8809883a 	mov	r4,r17
1000f104:	00115e00 	call	100115e0 <__clzsi2>
1000f108:	10800804 	addi	r2,r2,32
1000f10c:	10fffe04 	addi	r3,r2,-8
1000f110:	010007c4 	movi	r4,31
1000f114:	20ff890e 	bge	r4,r3,1000ef3c <__alt_data_end+0xf800ef3c>
1000f118:	10bff604 	addi	r2,r2,-40
1000f11c:	8884983a 	sll	r2,r17,r2
1000f120:	0023883a 	mov	r17,zero
1000f124:	1c3f8c0e 	bge	r3,r16,1000ef58 <__alt_data_end+0xf800ef58>
1000f128:	023fe034 	movhi	r8,65408
1000f12c:	423fffc4 	addi	r8,r8,-1
1000f130:	80e1c83a 	sub	r16,r16,r3
1000f134:	1210703a 	and	r8,r2,r8
1000f138:	003f3806 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f13c:	9007883a 	mov	r3,r18
1000f140:	0011883a 	mov	r8,zero
1000f144:	0005883a 	mov	r2,zero
1000f148:	003f4c06 	br	1000ee7c <__alt_data_end+0xf800ee7c>
1000f14c:	498cb03a 	or	r6,r9,r6
1000f150:	300cc03a 	cmpne	r6,r6,zero
1000f154:	0007883a 	mov	r3,zero
1000f158:	003f6806 	br	1000eefc <__alt_data_end+0xf800eefc>
1000f15c:	20009c1e 	bne	r4,zero,1000f3d0 <__adddf3+0x630>
1000f160:	80800044 	addi	r2,r16,1
1000f164:	1141ffcc 	andi	r5,r2,2047
1000f168:	01000044 	movi	r4,1
1000f16c:	2140670e 	bge	r4,r5,1000f30c <__adddf3+0x56c>
1000f170:	0101ffc4 	movi	r4,2047
1000f174:	11007f26 	beq	r2,r4,1000f374 <__adddf3+0x5d4>
1000f178:	898d883a 	add	r6,r17,r6
1000f17c:	4247883a 	add	r3,r8,r9
1000f180:	3451803a 	cmpltu	r8,r6,r17
1000f184:	40d1883a 	add	r8,r8,r3
1000f188:	402297fa 	slli	r17,r8,31
1000f18c:	300cd07a 	srli	r6,r6,1
1000f190:	4010d07a 	srli	r8,r8,1
1000f194:	1021883a 	mov	r16,r2
1000f198:	89a2b03a 	or	r17,r17,r6
1000f19c:	003f1f06 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f1a0:	0081ffc4 	movi	r2,2047
1000f1a4:	80bf481e 	bne	r16,r2,1000eec8 <__alt_data_end+0xf800eec8>
1000f1a8:	003f1c06 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f1ac:	843ff844 	addi	r16,r16,-31
1000f1b0:	01000804 	movi	r4,32
1000f1b4:	1406d83a 	srl	r3,r2,r16
1000f1b8:	41005026 	beq	r8,r4,1000f2fc <__adddf3+0x55c>
1000f1bc:	01001004 	movi	r4,64
1000f1c0:	2211c83a 	sub	r8,r4,r8
1000f1c4:	1204983a 	sll	r2,r2,r8
1000f1c8:	88a2b03a 	or	r17,r17,r2
1000f1cc:	8822c03a 	cmpne	r17,r17,zero
1000f1d0:	1c62b03a 	or	r17,r3,r17
1000f1d4:	0011883a 	mov	r8,zero
1000f1d8:	0021883a 	mov	r16,zero
1000f1dc:	003f7106 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f1e0:	193ff804 	addi	r4,r3,-32
1000f1e4:	00800804 	movi	r2,32
1000f1e8:	4908d83a 	srl	r4,r9,r4
1000f1ec:	18804526 	beq	r3,r2,1000f304 <__adddf3+0x564>
1000f1f0:	00801004 	movi	r2,64
1000f1f4:	10c5c83a 	sub	r2,r2,r3
1000f1f8:	4886983a 	sll	r3,r9,r2
1000f1fc:	198cb03a 	or	r6,r3,r6
1000f200:	300cc03a 	cmpne	r6,r6,zero
1000f204:	218cb03a 	or	r6,r4,r6
1000f208:	0007883a 	mov	r3,zero
1000f20c:	003f3b06 	br	1000eefc <__alt_data_end+0xf800eefc>
1000f210:	80002a26 	beq	r16,zero,1000f2bc <__adddf3+0x51c>
1000f214:	0101ffc4 	movi	r4,2047
1000f218:	11006826 	beq	r2,r4,1000f3bc <__adddf3+0x61c>
1000f21c:	00c7c83a 	sub	r3,zero,r3
1000f220:	42002034 	orhi	r8,r8,128
1000f224:	01000e04 	movi	r4,56
1000f228:	20c07c16 	blt	r4,r3,1000f41c <__adddf3+0x67c>
1000f22c:	010007c4 	movi	r4,31
1000f230:	20c0da16 	blt	r4,r3,1000f59c <__adddf3+0x7fc>
1000f234:	01000804 	movi	r4,32
1000f238:	20c9c83a 	sub	r4,r4,r3
1000f23c:	4114983a 	sll	r10,r8,r4
1000f240:	88cad83a 	srl	r5,r17,r3
1000f244:	8908983a 	sll	r4,r17,r4
1000f248:	40c6d83a 	srl	r3,r8,r3
1000f24c:	5162b03a 	or	r17,r10,r5
1000f250:	2008c03a 	cmpne	r4,r4,zero
1000f254:	8922b03a 	or	r17,r17,r4
1000f258:	3463c83a 	sub	r17,r6,r17
1000f25c:	48c7c83a 	sub	r3,r9,r3
1000f260:	344d803a 	cmpltu	r6,r6,r17
1000f264:	1991c83a 	sub	r8,r3,r6
1000f268:	1021883a 	mov	r16,r2
1000f26c:	3825883a 	mov	r18,r7
1000f270:	003f2706 	br	1000ef10 <__alt_data_end+0xf800ef10>
1000f274:	24d0b03a 	or	r8,r4,r19
1000f278:	40001b1e 	bne	r8,zero,1000f2e8 <__adddf3+0x548>
1000f27c:	0005883a 	mov	r2,zero
1000f280:	0007883a 	mov	r3,zero
1000f284:	0021883a 	mov	r16,zero
1000f288:	003f4d06 	br	1000efc0 <__alt_data_end+0xf800efc0>
1000f28c:	008007c4 	movi	r2,31
1000f290:	11003c16 	blt	r2,r4,1000f384 <__adddf3+0x5e4>
1000f294:	00800804 	movi	r2,32
1000f298:	1105c83a 	sub	r2,r2,r4
1000f29c:	488e983a 	sll	r7,r9,r2
1000f2a0:	310ad83a 	srl	r5,r6,r4
1000f2a4:	3084983a 	sll	r2,r6,r2
1000f2a8:	4912d83a 	srl	r9,r9,r4
1000f2ac:	394ab03a 	or	r5,r7,r5
1000f2b0:	1004c03a 	cmpne	r2,r2,zero
1000f2b4:	288ab03a 	or	r5,r5,r2
1000f2b8:	003f5306 	br	1000f008 <__alt_data_end+0xf800f008>
1000f2bc:	4448b03a 	or	r4,r8,r17
1000f2c0:	20003e26 	beq	r4,zero,1000f3bc <__adddf3+0x61c>
1000f2c4:	00c6303a 	nor	r3,zero,r3
1000f2c8:	18003a1e 	bne	r3,zero,1000f3b4 <__adddf3+0x614>
1000f2cc:	3463c83a 	sub	r17,r6,r17
1000f2d0:	4a07c83a 	sub	r3,r9,r8
1000f2d4:	344d803a 	cmpltu	r6,r6,r17
1000f2d8:	1991c83a 	sub	r8,r3,r6
1000f2dc:	1021883a 	mov	r16,r2
1000f2e0:	3825883a 	mov	r18,r7
1000f2e4:	003f0a06 	br	1000ef10 <__alt_data_end+0xf800ef10>
1000f2e8:	2023883a 	mov	r17,r4
1000f2ec:	003f0d06 	br	1000ef24 <__alt_data_end+0xf800ef24>
1000f2f0:	0081ffc4 	movi	r2,2047
1000f2f4:	80bf3f1e 	bne	r16,r2,1000eff4 <__alt_data_end+0xf800eff4>
1000f2f8:	003ec806 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f2fc:	0005883a 	mov	r2,zero
1000f300:	003fb106 	br	1000f1c8 <__alt_data_end+0xf800f1c8>
1000f304:	0007883a 	mov	r3,zero
1000f308:	003fbc06 	br	1000f1fc <__alt_data_end+0xf800f1fc>
1000f30c:	4444b03a 	or	r2,r8,r17
1000f310:	8000871e 	bne	r16,zero,1000f530 <__adddf3+0x790>
1000f314:	1000ba26 	beq	r2,zero,1000f600 <__adddf3+0x860>
1000f318:	4984b03a 	or	r2,r9,r6
1000f31c:	103ebf26 	beq	r2,zero,1000ee1c <__alt_data_end+0xf800ee1c>
1000f320:	8985883a 	add	r2,r17,r6
1000f324:	4247883a 	add	r3,r8,r9
1000f328:	1451803a 	cmpltu	r8,r2,r17
1000f32c:	40d1883a 	add	r8,r8,r3
1000f330:	40c0202c 	andhi	r3,r8,128
1000f334:	1023883a 	mov	r17,r2
1000f338:	183f1a26 	beq	r3,zero,1000efa4 <__alt_data_end+0xf800efa4>
1000f33c:	00bfe034 	movhi	r2,65408
1000f340:	10bfffc4 	addi	r2,r2,-1
1000f344:	2021883a 	mov	r16,r4
1000f348:	4090703a 	and	r8,r8,r2
1000f34c:	003eb306 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f350:	4444b03a 	or	r2,r8,r17
1000f354:	8000291e 	bne	r16,zero,1000f3fc <__adddf3+0x65c>
1000f358:	10004b1e 	bne	r2,zero,1000f488 <__adddf3+0x6e8>
1000f35c:	4990b03a 	or	r8,r9,r6
1000f360:	40008b26 	beq	r8,zero,1000f590 <__adddf3+0x7f0>
1000f364:	4811883a 	mov	r8,r9
1000f368:	3023883a 	mov	r17,r6
1000f36c:	3825883a 	mov	r18,r7
1000f370:	003eaa06 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f374:	1021883a 	mov	r16,r2
1000f378:	0011883a 	mov	r8,zero
1000f37c:	0005883a 	mov	r2,zero
1000f380:	003f0f06 	br	1000efc0 <__alt_data_end+0xf800efc0>
1000f384:	217ff804 	addi	r5,r4,-32
1000f388:	00800804 	movi	r2,32
1000f38c:	494ad83a 	srl	r5,r9,r5
1000f390:	20807d26 	beq	r4,r2,1000f588 <__adddf3+0x7e8>
1000f394:	00801004 	movi	r2,64
1000f398:	1109c83a 	sub	r4,r2,r4
1000f39c:	4912983a 	sll	r9,r9,r4
1000f3a0:	498cb03a 	or	r6,r9,r6
1000f3a4:	300cc03a 	cmpne	r6,r6,zero
1000f3a8:	298ab03a 	or	r5,r5,r6
1000f3ac:	0013883a 	mov	r9,zero
1000f3b0:	003f1506 	br	1000f008 <__alt_data_end+0xf800f008>
1000f3b4:	0101ffc4 	movi	r4,2047
1000f3b8:	113f9a1e 	bne	r2,r4,1000f224 <__alt_data_end+0xf800f224>
1000f3bc:	4811883a 	mov	r8,r9
1000f3c0:	3023883a 	mov	r17,r6
1000f3c4:	1021883a 	mov	r16,r2
1000f3c8:	3825883a 	mov	r18,r7
1000f3cc:	003e9306 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f3d0:	8000161e 	bne	r16,zero,1000f42c <__adddf3+0x68c>
1000f3d4:	444ab03a 	or	r5,r8,r17
1000f3d8:	28005126 	beq	r5,zero,1000f520 <__adddf3+0x780>
1000f3dc:	0108303a 	nor	r4,zero,r4
1000f3e0:	20004d1e 	bne	r4,zero,1000f518 <__adddf3+0x778>
1000f3e4:	89a3883a 	add	r17,r17,r6
1000f3e8:	4253883a 	add	r9,r8,r9
1000f3ec:	898d803a 	cmpltu	r6,r17,r6
1000f3f0:	3251883a 	add	r8,r6,r9
1000f3f4:	1021883a 	mov	r16,r2
1000f3f8:	003f0806 	br	1000f01c <__alt_data_end+0xf800f01c>
1000f3fc:	1000301e 	bne	r2,zero,1000f4c0 <__adddf3+0x720>
1000f400:	4984b03a 	or	r2,r9,r6
1000f404:	10007126 	beq	r2,zero,1000f5cc <__adddf3+0x82c>
1000f408:	4811883a 	mov	r8,r9
1000f40c:	3023883a 	mov	r17,r6
1000f410:	3825883a 	mov	r18,r7
1000f414:	0401ffc4 	movi	r16,2047
1000f418:	003e8006 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f41c:	4462b03a 	or	r17,r8,r17
1000f420:	8822c03a 	cmpne	r17,r17,zero
1000f424:	0007883a 	mov	r3,zero
1000f428:	003f8b06 	br	1000f258 <__alt_data_end+0xf800f258>
1000f42c:	0141ffc4 	movi	r5,2047
1000f430:	11403b26 	beq	r2,r5,1000f520 <__adddf3+0x780>
1000f434:	0109c83a 	sub	r4,zero,r4
1000f438:	42002034 	orhi	r8,r8,128
1000f43c:	01400e04 	movi	r5,56
1000f440:	29006716 	blt	r5,r4,1000f5e0 <__adddf3+0x840>
1000f444:	014007c4 	movi	r5,31
1000f448:	29007016 	blt	r5,r4,1000f60c <__adddf3+0x86c>
1000f44c:	01400804 	movi	r5,32
1000f450:	290bc83a 	sub	r5,r5,r4
1000f454:	4154983a 	sll	r10,r8,r5
1000f458:	890ed83a 	srl	r7,r17,r4
1000f45c:	894a983a 	sll	r5,r17,r5
1000f460:	4108d83a 	srl	r4,r8,r4
1000f464:	51e2b03a 	or	r17,r10,r7
1000f468:	280ac03a 	cmpne	r5,r5,zero
1000f46c:	8962b03a 	or	r17,r17,r5
1000f470:	89a3883a 	add	r17,r17,r6
1000f474:	2253883a 	add	r9,r4,r9
1000f478:	898d803a 	cmpltu	r6,r17,r6
1000f47c:	3251883a 	add	r8,r6,r9
1000f480:	1021883a 	mov	r16,r2
1000f484:	003ee506 	br	1000f01c <__alt_data_end+0xf800f01c>
1000f488:	4984b03a 	or	r2,r9,r6
1000f48c:	103e6326 	beq	r2,zero,1000ee1c <__alt_data_end+0xf800ee1c>
1000f490:	8987c83a 	sub	r3,r17,r6
1000f494:	88c9803a 	cmpltu	r4,r17,r3
1000f498:	4245c83a 	sub	r2,r8,r9
1000f49c:	1105c83a 	sub	r2,r2,r4
1000f4a0:	1100202c 	andhi	r4,r2,128
1000f4a4:	203ebb26 	beq	r4,zero,1000ef94 <__alt_data_end+0xf800ef94>
1000f4a8:	3463c83a 	sub	r17,r6,r17
1000f4ac:	4a07c83a 	sub	r3,r9,r8
1000f4b0:	344d803a 	cmpltu	r6,r6,r17
1000f4b4:	1991c83a 	sub	r8,r3,r6
1000f4b8:	3825883a 	mov	r18,r7
1000f4bc:	003e5706 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f4c0:	4984b03a 	or	r2,r9,r6
1000f4c4:	10002e26 	beq	r2,zero,1000f580 <__adddf3+0x7e0>
1000f4c8:	4004d0fa 	srli	r2,r8,3
1000f4cc:	8822d0fa 	srli	r17,r17,3
1000f4d0:	4010977a 	slli	r8,r8,29
1000f4d4:	10c0022c 	andhi	r3,r2,8
1000f4d8:	4462b03a 	or	r17,r8,r17
1000f4dc:	18000826 	beq	r3,zero,1000f500 <__adddf3+0x760>
1000f4e0:	4808d0fa 	srli	r4,r9,3
1000f4e4:	20c0022c 	andhi	r3,r4,8
1000f4e8:	1800051e 	bne	r3,zero,1000f500 <__adddf3+0x760>
1000f4ec:	300cd0fa 	srli	r6,r6,3
1000f4f0:	4806977a 	slli	r3,r9,29
1000f4f4:	2005883a 	mov	r2,r4
1000f4f8:	3825883a 	mov	r18,r7
1000f4fc:	19a2b03a 	or	r17,r3,r6
1000f500:	8810d77a 	srli	r8,r17,29
1000f504:	100490fa 	slli	r2,r2,3
1000f508:	882290fa 	slli	r17,r17,3
1000f50c:	0401ffc4 	movi	r16,2047
1000f510:	4090b03a 	or	r8,r8,r2
1000f514:	003e4106 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f518:	0141ffc4 	movi	r5,2047
1000f51c:	117fc71e 	bne	r2,r5,1000f43c <__alt_data_end+0xf800f43c>
1000f520:	4811883a 	mov	r8,r9
1000f524:	3023883a 	mov	r17,r6
1000f528:	1021883a 	mov	r16,r2
1000f52c:	003e3b06 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f530:	10002f26 	beq	r2,zero,1000f5f0 <__adddf3+0x850>
1000f534:	4984b03a 	or	r2,r9,r6
1000f538:	10001126 	beq	r2,zero,1000f580 <__adddf3+0x7e0>
1000f53c:	4004d0fa 	srli	r2,r8,3
1000f540:	8822d0fa 	srli	r17,r17,3
1000f544:	4010977a 	slli	r8,r8,29
1000f548:	10c0022c 	andhi	r3,r2,8
1000f54c:	4462b03a 	or	r17,r8,r17
1000f550:	183feb26 	beq	r3,zero,1000f500 <__alt_data_end+0xf800f500>
1000f554:	4808d0fa 	srli	r4,r9,3
1000f558:	20c0022c 	andhi	r3,r4,8
1000f55c:	183fe81e 	bne	r3,zero,1000f500 <__alt_data_end+0xf800f500>
1000f560:	300cd0fa 	srli	r6,r6,3
1000f564:	4806977a 	slli	r3,r9,29
1000f568:	2005883a 	mov	r2,r4
1000f56c:	19a2b03a 	or	r17,r3,r6
1000f570:	003fe306 	br	1000f500 <__alt_data_end+0xf800f500>
1000f574:	0011883a 	mov	r8,zero
1000f578:	0005883a 	mov	r2,zero
1000f57c:	003e3f06 	br	1000ee7c <__alt_data_end+0xf800ee7c>
1000f580:	0401ffc4 	movi	r16,2047
1000f584:	003e2506 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f588:	0013883a 	mov	r9,zero
1000f58c:	003f8406 	br	1000f3a0 <__alt_data_end+0xf800f3a0>
1000f590:	0005883a 	mov	r2,zero
1000f594:	0007883a 	mov	r3,zero
1000f598:	003e8906 	br	1000efc0 <__alt_data_end+0xf800efc0>
1000f59c:	197ff804 	addi	r5,r3,-32
1000f5a0:	01000804 	movi	r4,32
1000f5a4:	414ad83a 	srl	r5,r8,r5
1000f5a8:	19002426 	beq	r3,r4,1000f63c <__adddf3+0x89c>
1000f5ac:	01001004 	movi	r4,64
1000f5b0:	20c7c83a 	sub	r3,r4,r3
1000f5b4:	40c6983a 	sll	r3,r8,r3
1000f5b8:	1c46b03a 	or	r3,r3,r17
1000f5bc:	1806c03a 	cmpne	r3,r3,zero
1000f5c0:	28e2b03a 	or	r17,r5,r3
1000f5c4:	0007883a 	mov	r3,zero
1000f5c8:	003f2306 	br	1000f258 <__alt_data_end+0xf800f258>
1000f5cc:	0007883a 	mov	r3,zero
1000f5d0:	5811883a 	mov	r8,r11
1000f5d4:	00bfffc4 	movi	r2,-1
1000f5d8:	0401ffc4 	movi	r16,2047
1000f5dc:	003e7806 	br	1000efc0 <__alt_data_end+0xf800efc0>
1000f5e0:	4462b03a 	or	r17,r8,r17
1000f5e4:	8822c03a 	cmpne	r17,r17,zero
1000f5e8:	0009883a 	mov	r4,zero
1000f5ec:	003fa006 	br	1000f470 <__alt_data_end+0xf800f470>
1000f5f0:	4811883a 	mov	r8,r9
1000f5f4:	3023883a 	mov	r17,r6
1000f5f8:	0401ffc4 	movi	r16,2047
1000f5fc:	003e0706 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f600:	4811883a 	mov	r8,r9
1000f604:	3023883a 	mov	r17,r6
1000f608:	003e0406 	br	1000ee1c <__alt_data_end+0xf800ee1c>
1000f60c:	21fff804 	addi	r7,r4,-32
1000f610:	01400804 	movi	r5,32
1000f614:	41ced83a 	srl	r7,r8,r7
1000f618:	21400a26 	beq	r4,r5,1000f644 <__adddf3+0x8a4>
1000f61c:	01401004 	movi	r5,64
1000f620:	2909c83a 	sub	r4,r5,r4
1000f624:	4108983a 	sll	r4,r8,r4
1000f628:	2448b03a 	or	r4,r4,r17
1000f62c:	2008c03a 	cmpne	r4,r4,zero
1000f630:	3922b03a 	or	r17,r7,r4
1000f634:	0009883a 	mov	r4,zero
1000f638:	003f8d06 	br	1000f470 <__alt_data_end+0xf800f470>
1000f63c:	0007883a 	mov	r3,zero
1000f640:	003fdd06 	br	1000f5b8 <__alt_data_end+0xf800f5b8>
1000f644:	0009883a 	mov	r4,zero
1000f648:	003ff706 	br	1000f628 <__alt_data_end+0xf800f628>

1000f64c <__divdf3>:
1000f64c:	defff004 	addi	sp,sp,-64
1000f650:	dc800815 	stw	r18,32(sp)
1000f654:	2824d53a 	srli	r18,r5,20
1000f658:	dd800c15 	stw	r22,48(sp)
1000f65c:	282cd7fa 	srli	r22,r5,31
1000f660:	dc000615 	stw	r16,24(sp)
1000f664:	04000434 	movhi	r16,16
1000f668:	843fffc4 	addi	r16,r16,-1
1000f66c:	dfc00f15 	stw	ra,60(sp)
1000f670:	df000e15 	stw	fp,56(sp)
1000f674:	ddc00d15 	stw	r23,52(sp)
1000f678:	dd400b15 	stw	r21,44(sp)
1000f67c:	dd000a15 	stw	r20,40(sp)
1000f680:	dcc00915 	stw	r19,36(sp)
1000f684:	dc400715 	stw	r17,28(sp)
1000f688:	9481ffcc 	andi	r18,r18,2047
1000f68c:	2c20703a 	and	r16,r5,r16
1000f690:	b2003fcc 	andi	r8,r22,255
1000f694:	90006126 	beq	r18,zero,1000f81c <__divdf3+0x1d0>
1000f698:	0081ffc4 	movi	r2,2047
1000f69c:	202b883a 	mov	r21,r4
1000f6a0:	90803726 	beq	r18,r2,1000f780 <__divdf3+0x134>
1000f6a4:	80800434 	orhi	r2,r16,16
1000f6a8:	100490fa 	slli	r2,r2,3
1000f6ac:	2020d77a 	srli	r16,r4,29
1000f6b0:	202a90fa 	slli	r21,r4,3
1000f6b4:	94bf0044 	addi	r18,r18,-1023
1000f6b8:	80a0b03a 	or	r16,r16,r2
1000f6bc:	0013883a 	mov	r9,zero
1000f6c0:	000b883a 	mov	r5,zero
1000f6c4:	3806d53a 	srli	r3,r7,20
1000f6c8:	382ed7fa 	srli	r23,r7,31
1000f6cc:	04400434 	movhi	r17,16
1000f6d0:	8c7fffc4 	addi	r17,r17,-1
1000f6d4:	18c1ffcc 	andi	r3,r3,2047
1000f6d8:	3029883a 	mov	r20,r6
1000f6dc:	3c62703a 	and	r17,r7,r17
1000f6e0:	bf003fcc 	andi	fp,r23,255
1000f6e4:	18006e26 	beq	r3,zero,1000f8a0 <__divdf3+0x254>
1000f6e8:	0081ffc4 	movi	r2,2047
1000f6ec:	18806626 	beq	r3,r2,1000f888 <__divdf3+0x23c>
1000f6f0:	88800434 	orhi	r2,r17,16
1000f6f4:	100490fa 	slli	r2,r2,3
1000f6f8:	3022d77a 	srli	r17,r6,29
1000f6fc:	302890fa 	slli	r20,r6,3
1000f700:	18ff0044 	addi	r3,r3,-1023
1000f704:	88a2b03a 	or	r17,r17,r2
1000f708:	000f883a 	mov	r7,zero
1000f70c:	b5e6f03a 	xor	r19,r22,r23
1000f710:	3a4cb03a 	or	r6,r7,r9
1000f714:	008003c4 	movi	r2,15
1000f718:	9809883a 	mov	r4,r19
1000f71c:	90c7c83a 	sub	r3,r18,r3
1000f720:	9cc03fcc 	andi	r19,r19,255
1000f724:	11809636 	bltu	r2,r6,1000f980 <__divdf3+0x334>
1000f728:	300c90ba 	slli	r6,r6,2
1000f72c:	00840074 	movhi	r2,4097
1000f730:	10bdd004 	addi	r2,r2,-2240
1000f734:	308d883a 	add	r6,r6,r2
1000f738:	30800017 	ldw	r2,0(r6)
1000f73c:	1000683a 	jmp	r2
1000f740:	1000f980 	call	11000f98 <_gp+0xfe2f7c>
1000f744:	1000f7b8 	rdprs	zero,r2,990
1000f748:	1000f970 	cmpltui	zero,r2,997
1000f74c:	1000f7ac 	andhi	zero,r2,990
1000f750:	1000f970 	cmpltui	zero,r2,997
1000f754:	1000f944 	addi	zero,r2,997
1000f758:	1000f970 	cmpltui	zero,r2,997
1000f75c:	1000f7ac 	andhi	zero,r2,990
1000f760:	1000f7b8 	rdprs	zero,r2,990
1000f764:	1000f7b8 	rdprs	zero,r2,990
1000f768:	1000f944 	addi	zero,r2,997
1000f76c:	1000f7ac 	andhi	zero,r2,990
1000f770:	1000f79c 	xori	zero,r2,990
1000f774:	1000f79c 	xori	zero,r2,990
1000f778:	1000f79c 	xori	zero,r2,990
1000f77c:	1000fd08 	cmpgei	zero,r2,1012
1000f780:	2404b03a 	or	r2,r4,r16
1000f784:	10006c1e 	bne	r2,zero,1000f938 <__divdf3+0x2ec>
1000f788:	02400204 	movi	r9,8
1000f78c:	0021883a 	mov	r16,zero
1000f790:	002b883a 	mov	r21,zero
1000f794:	01400084 	movi	r5,2
1000f798:	003fca06 	br	1000f6c4 <__alt_data_end+0xf800f6c4>
1000f79c:	8023883a 	mov	r17,r16
1000f7a0:	a829883a 	mov	r20,r21
1000f7a4:	4039883a 	mov	fp,r8
1000f7a8:	280f883a 	mov	r7,r5
1000f7ac:	00800084 	movi	r2,2
1000f7b0:	3881601e 	bne	r7,r2,1000fd34 <__divdf3+0x6e8>
1000f7b4:	e027883a 	mov	r19,fp
1000f7b8:	9900004c 	andi	r4,r19,1
1000f7bc:	0081ffc4 	movi	r2,2047
1000f7c0:	0021883a 	mov	r16,zero
1000f7c4:	002b883a 	mov	r21,zero
1000f7c8:	1004953a 	slli	r2,r2,20
1000f7cc:	20c03fcc 	andi	r3,r4,255
1000f7d0:	01400434 	movhi	r5,16
1000f7d4:	297fffc4 	addi	r5,r5,-1
1000f7d8:	180697fa 	slli	r3,r3,31
1000f7dc:	8160703a 	and	r16,r16,r5
1000f7e0:	80a0b03a 	or	r16,r16,r2
1000f7e4:	80c6b03a 	or	r3,r16,r3
1000f7e8:	a805883a 	mov	r2,r21
1000f7ec:	dfc00f17 	ldw	ra,60(sp)
1000f7f0:	df000e17 	ldw	fp,56(sp)
1000f7f4:	ddc00d17 	ldw	r23,52(sp)
1000f7f8:	dd800c17 	ldw	r22,48(sp)
1000f7fc:	dd400b17 	ldw	r21,44(sp)
1000f800:	dd000a17 	ldw	r20,40(sp)
1000f804:	dcc00917 	ldw	r19,36(sp)
1000f808:	dc800817 	ldw	r18,32(sp)
1000f80c:	dc400717 	ldw	r17,28(sp)
1000f810:	dc000617 	ldw	r16,24(sp)
1000f814:	dec01004 	addi	sp,sp,64
1000f818:	f800283a 	ret
1000f81c:	2404b03a 	or	r2,r4,r16
1000f820:	2023883a 	mov	r17,r4
1000f824:	10003f26 	beq	r2,zero,1000f924 <__divdf3+0x2d8>
1000f828:	80015e26 	beq	r16,zero,1000fda4 <__divdf3+0x758>
1000f82c:	8009883a 	mov	r4,r16
1000f830:	d9800215 	stw	r6,8(sp)
1000f834:	d9c00515 	stw	r7,20(sp)
1000f838:	da000415 	stw	r8,16(sp)
1000f83c:	00115e00 	call	100115e0 <__clzsi2>
1000f840:	d9800217 	ldw	r6,8(sp)
1000f844:	d9c00517 	ldw	r7,20(sp)
1000f848:	da000417 	ldw	r8,16(sp)
1000f84c:	113ffd44 	addi	r4,r2,-11
1000f850:	00c00704 	movi	r3,28
1000f854:	19014f16 	blt	r3,r4,1000fd94 <__divdf3+0x748>
1000f858:	00c00744 	movi	r3,29
1000f85c:	157ffe04 	addi	r21,r2,-8
1000f860:	1907c83a 	sub	r3,r3,r4
1000f864:	8560983a 	sll	r16,r16,r21
1000f868:	88c6d83a 	srl	r3,r17,r3
1000f86c:	8d6a983a 	sll	r21,r17,r21
1000f870:	1c20b03a 	or	r16,r3,r16
1000f874:	1080fcc4 	addi	r2,r2,1011
1000f878:	00a5c83a 	sub	r18,zero,r2
1000f87c:	0013883a 	mov	r9,zero
1000f880:	000b883a 	mov	r5,zero
1000f884:	003f8f06 	br	1000f6c4 <__alt_data_end+0xf800f6c4>
1000f888:	3444b03a 	or	r2,r6,r17
1000f88c:	1000231e 	bne	r2,zero,1000f91c <__divdf3+0x2d0>
1000f890:	0023883a 	mov	r17,zero
1000f894:	0029883a 	mov	r20,zero
1000f898:	01c00084 	movi	r7,2
1000f89c:	003f9b06 	br	1000f70c <__alt_data_end+0xf800f70c>
1000f8a0:	3444b03a 	or	r2,r6,r17
1000f8a4:	10001926 	beq	r2,zero,1000f90c <__divdf3+0x2c0>
1000f8a8:	88014b26 	beq	r17,zero,1000fdd8 <__divdf3+0x78c>
1000f8ac:	8809883a 	mov	r4,r17
1000f8b0:	d9400115 	stw	r5,4(sp)
1000f8b4:	d9800215 	stw	r6,8(sp)
1000f8b8:	da000415 	stw	r8,16(sp)
1000f8bc:	da400315 	stw	r9,12(sp)
1000f8c0:	00115e00 	call	100115e0 <__clzsi2>
1000f8c4:	d9400117 	ldw	r5,4(sp)
1000f8c8:	d9800217 	ldw	r6,8(sp)
1000f8cc:	da000417 	ldw	r8,16(sp)
1000f8d0:	da400317 	ldw	r9,12(sp)
1000f8d4:	113ffd44 	addi	r4,r2,-11
1000f8d8:	00c00704 	movi	r3,28
1000f8dc:	19013a16 	blt	r3,r4,1000fdc8 <__divdf3+0x77c>
1000f8e0:	00c00744 	movi	r3,29
1000f8e4:	153ffe04 	addi	r20,r2,-8
1000f8e8:	1907c83a 	sub	r3,r3,r4
1000f8ec:	8d22983a 	sll	r17,r17,r20
1000f8f0:	30c6d83a 	srl	r3,r6,r3
1000f8f4:	3528983a 	sll	r20,r6,r20
1000f8f8:	1c62b03a 	or	r17,r3,r17
1000f8fc:	1080fcc4 	addi	r2,r2,1011
1000f900:	0087c83a 	sub	r3,zero,r2
1000f904:	000f883a 	mov	r7,zero
1000f908:	003f8006 	br	1000f70c <__alt_data_end+0xf800f70c>
1000f90c:	0023883a 	mov	r17,zero
1000f910:	0029883a 	mov	r20,zero
1000f914:	01c00044 	movi	r7,1
1000f918:	003f7c06 	br	1000f70c <__alt_data_end+0xf800f70c>
1000f91c:	01c000c4 	movi	r7,3
1000f920:	003f7a06 	br	1000f70c <__alt_data_end+0xf800f70c>
1000f924:	02400104 	movi	r9,4
1000f928:	0021883a 	mov	r16,zero
1000f92c:	002b883a 	mov	r21,zero
1000f930:	01400044 	movi	r5,1
1000f934:	003f6306 	br	1000f6c4 <__alt_data_end+0xf800f6c4>
1000f938:	02400304 	movi	r9,12
1000f93c:	014000c4 	movi	r5,3
1000f940:	003f6006 	br	1000f6c4 <__alt_data_end+0xf800f6c4>
1000f944:	04000434 	movhi	r16,16
1000f948:	0009883a 	mov	r4,zero
1000f94c:	843fffc4 	addi	r16,r16,-1
1000f950:	057fffc4 	movi	r21,-1
1000f954:	0081ffc4 	movi	r2,2047
1000f958:	003f9b06 	br	1000f7c8 <__alt_data_end+0xf800f7c8>
1000f95c:	00c00044 	movi	r3,1
1000f960:	1887c83a 	sub	r3,r3,r2
1000f964:	01000e04 	movi	r4,56
1000f968:	20c1530e 	bge	r4,r3,1000feb8 <__divdf3+0x86c>
1000f96c:	9900004c 	andi	r4,r19,1
1000f970:	0005883a 	mov	r2,zero
1000f974:	0021883a 	mov	r16,zero
1000f978:	002b883a 	mov	r21,zero
1000f97c:	003f9206 	br	1000f7c8 <__alt_data_end+0xf800f7c8>
1000f980:	8c012e36 	bltu	r17,r16,1000fe3c <__divdf3+0x7f0>
1000f984:	84412c26 	beq	r16,r17,1000fe38 <__divdf3+0x7ec>
1000f988:	a82f883a 	mov	r23,r21
1000f98c:	18ffffc4 	addi	r3,r3,-1
1000f990:	002b883a 	mov	r21,zero
1000f994:	a004d63a 	srli	r2,r20,24
1000f998:	8822923a 	slli	r17,r17,8
1000f99c:	a028923a 	slli	r20,r20,8
1000f9a0:	8009883a 	mov	r4,r16
1000f9a4:	88acb03a 	or	r22,r17,r2
1000f9a8:	dd000015 	stw	r20,0(sp)
1000f9ac:	b028d43a 	srli	r20,r22,16
1000f9b0:	d8c00215 	stw	r3,8(sp)
1000f9b4:	b4bfffcc 	andi	r18,r22,65535
1000f9b8:	a00b883a 	mov	r5,r20
1000f9bc:	0000d840 	call	10000d84 <__udivsi3>
1000f9c0:	100b883a 	mov	r5,r2
1000f9c4:	9009883a 	mov	r4,r18
1000f9c8:	1023883a 	mov	r17,r2
1000f9cc:	0000e400 	call	10000e40 <__mulsi3>
1000f9d0:	8009883a 	mov	r4,r16
1000f9d4:	a00b883a 	mov	r5,r20
1000f9d8:	1039883a 	mov	fp,r2
1000f9dc:	0000de80 	call	10000de8 <__umodsi3>
1000f9e0:	1004943a 	slli	r2,r2,16
1000f9e4:	b808d43a 	srli	r4,r23,16
1000f9e8:	d8c00217 	ldw	r3,8(sp)
1000f9ec:	2084b03a 	or	r2,r4,r2
1000f9f0:	1700062e 	bgeu	r2,fp,1000fa0c <__divdf3+0x3c0>
1000f9f4:	1585883a 	add	r2,r2,r22
1000f9f8:	893fffc4 	addi	r4,r17,-1
1000f9fc:	15811d36 	bltu	r2,r22,1000fe74 <__divdf3+0x828>
1000fa00:	17011c2e 	bgeu	r2,fp,1000fe74 <__divdf3+0x828>
1000fa04:	8c7fff84 	addi	r17,r17,-2
1000fa08:	1585883a 	add	r2,r2,r22
1000fa0c:	1739c83a 	sub	fp,r2,fp
1000fa10:	a00b883a 	mov	r5,r20
1000fa14:	e009883a 	mov	r4,fp
1000fa18:	d8c00215 	stw	r3,8(sp)
1000fa1c:	0000d840 	call	10000d84 <__udivsi3>
1000fa20:	100b883a 	mov	r5,r2
1000fa24:	9009883a 	mov	r4,r18
1000fa28:	1021883a 	mov	r16,r2
1000fa2c:	0000e400 	call	10000e40 <__mulsi3>
1000fa30:	a00b883a 	mov	r5,r20
1000fa34:	e009883a 	mov	r4,fp
1000fa38:	d8800415 	stw	r2,16(sp)
1000fa3c:	0000de80 	call	10000de8 <__umodsi3>
1000fa40:	1004943a 	slli	r2,r2,16
1000fa44:	da000417 	ldw	r8,16(sp)
1000fa48:	bdffffcc 	andi	r23,r23,65535
1000fa4c:	b884b03a 	or	r2,r23,r2
1000fa50:	d8c00217 	ldw	r3,8(sp)
1000fa54:	1200062e 	bgeu	r2,r8,1000fa70 <__divdf3+0x424>
1000fa58:	1585883a 	add	r2,r2,r22
1000fa5c:	813fffc4 	addi	r4,r16,-1
1000fa60:	15810236 	bltu	r2,r22,1000fe6c <__divdf3+0x820>
1000fa64:	1201012e 	bgeu	r2,r8,1000fe6c <__divdf3+0x820>
1000fa68:	843fff84 	addi	r16,r16,-2
1000fa6c:	1585883a 	add	r2,r2,r22
1000fa70:	8822943a 	slli	r17,r17,16
1000fa74:	d9800017 	ldw	r6,0(sp)
1000fa78:	1211c83a 	sub	r8,r2,r8
1000fa7c:	8c22b03a 	or	r17,r17,r16
1000fa80:	373fffcc 	andi	fp,r6,65535
1000fa84:	8abfffcc 	andi	r10,r17,65535
1000fa88:	8820d43a 	srli	r16,r17,16
1000fa8c:	5009883a 	mov	r4,r10
1000fa90:	e00b883a 	mov	r5,fp
1000fa94:	302ed43a 	srli	r23,r6,16
1000fa98:	d8c00215 	stw	r3,8(sp)
1000fa9c:	da000415 	stw	r8,16(sp)
1000faa0:	da800115 	stw	r10,4(sp)
1000faa4:	0000e400 	call	10000e40 <__mulsi3>
1000faa8:	800b883a 	mov	r5,r16
1000faac:	e009883a 	mov	r4,fp
1000fab0:	d8800515 	stw	r2,20(sp)
1000fab4:	0000e400 	call	10000e40 <__mulsi3>
1000fab8:	8009883a 	mov	r4,r16
1000fabc:	b80b883a 	mov	r5,r23
1000fac0:	d8800315 	stw	r2,12(sp)
1000fac4:	0000e400 	call	10000e40 <__mulsi3>
1000fac8:	da800117 	ldw	r10,4(sp)
1000facc:	b80b883a 	mov	r5,r23
1000fad0:	1021883a 	mov	r16,r2
1000fad4:	5009883a 	mov	r4,r10
1000fad8:	0000e400 	call	10000e40 <__mulsi3>
1000fadc:	d9c00517 	ldw	r7,20(sp)
1000fae0:	da400317 	ldw	r9,12(sp)
1000fae4:	d8c00217 	ldw	r3,8(sp)
1000fae8:	3808d43a 	srli	r4,r7,16
1000faec:	1245883a 	add	r2,r2,r9
1000faf0:	da000417 	ldw	r8,16(sp)
1000faf4:	2085883a 	add	r2,r4,r2
1000faf8:	1240022e 	bgeu	r2,r9,1000fb04 <__divdf3+0x4b8>
1000fafc:	01000074 	movhi	r4,1
1000fb00:	8121883a 	add	r16,r16,r4
1000fb04:	1008d43a 	srli	r4,r2,16
1000fb08:	1004943a 	slli	r2,r2,16
1000fb0c:	39ffffcc 	andi	r7,r7,65535
1000fb10:	2409883a 	add	r4,r4,r16
1000fb14:	11c5883a 	add	r2,r2,r7
1000fb18:	4100bb36 	bltu	r8,r4,1000fe08 <__divdf3+0x7bc>
1000fb1c:	4100d726 	beq	r8,r4,1000fe7c <__divdf3+0x830>
1000fb20:	4109c83a 	sub	r4,r8,r4
1000fb24:	a8a1c83a 	sub	r16,r21,r2
1000fb28:	ac2b803a 	cmpltu	r21,r21,r16
1000fb2c:	256bc83a 	sub	r21,r4,r21
1000fb30:	b540d926 	beq	r22,r21,1000fe98 <__divdf3+0x84c>
1000fb34:	a00b883a 	mov	r5,r20
1000fb38:	a809883a 	mov	r4,r21
1000fb3c:	d8c00215 	stw	r3,8(sp)
1000fb40:	0000d840 	call	10000d84 <__udivsi3>
1000fb44:	100b883a 	mov	r5,r2
1000fb48:	9009883a 	mov	r4,r18
1000fb4c:	d8800515 	stw	r2,20(sp)
1000fb50:	0000e400 	call	10000e40 <__mulsi3>
1000fb54:	a809883a 	mov	r4,r21
1000fb58:	a00b883a 	mov	r5,r20
1000fb5c:	d8800415 	stw	r2,16(sp)
1000fb60:	0000de80 	call	10000de8 <__umodsi3>
1000fb64:	1004943a 	slli	r2,r2,16
1000fb68:	8008d43a 	srli	r4,r16,16
1000fb6c:	da000417 	ldw	r8,16(sp)
1000fb70:	d8c00217 	ldw	r3,8(sp)
1000fb74:	2084b03a 	or	r2,r4,r2
1000fb78:	d9c00517 	ldw	r7,20(sp)
1000fb7c:	1200062e 	bgeu	r2,r8,1000fb98 <__divdf3+0x54c>
1000fb80:	1585883a 	add	r2,r2,r22
1000fb84:	393fffc4 	addi	r4,r7,-1
1000fb88:	1580c536 	bltu	r2,r22,1000fea0 <__divdf3+0x854>
1000fb8c:	1200c42e 	bgeu	r2,r8,1000fea0 <__divdf3+0x854>
1000fb90:	39ffff84 	addi	r7,r7,-2
1000fb94:	1585883a 	add	r2,r2,r22
1000fb98:	122bc83a 	sub	r21,r2,r8
1000fb9c:	a00b883a 	mov	r5,r20
1000fba0:	a809883a 	mov	r4,r21
1000fba4:	d8c00215 	stw	r3,8(sp)
1000fba8:	d9c00515 	stw	r7,20(sp)
1000fbac:	0000d840 	call	10000d84 <__udivsi3>
1000fbb0:	9009883a 	mov	r4,r18
1000fbb4:	100b883a 	mov	r5,r2
1000fbb8:	d8800415 	stw	r2,16(sp)
1000fbbc:	0000e400 	call	10000e40 <__mulsi3>
1000fbc0:	a809883a 	mov	r4,r21
1000fbc4:	a00b883a 	mov	r5,r20
1000fbc8:	1025883a 	mov	r18,r2
1000fbcc:	0000de80 	call	10000de8 <__umodsi3>
1000fbd0:	1004943a 	slli	r2,r2,16
1000fbd4:	813fffcc 	andi	r4,r16,65535
1000fbd8:	d8c00217 	ldw	r3,8(sp)
1000fbdc:	20a0b03a 	or	r16,r4,r2
1000fbe0:	d9c00517 	ldw	r7,20(sp)
1000fbe4:	da000417 	ldw	r8,16(sp)
1000fbe8:	8480062e 	bgeu	r16,r18,1000fc04 <__divdf3+0x5b8>
1000fbec:	85a1883a 	add	r16,r16,r22
1000fbf0:	40bfffc4 	addi	r2,r8,-1
1000fbf4:	8580ac36 	bltu	r16,r22,1000fea8 <__divdf3+0x85c>
1000fbf8:	8480ab2e 	bgeu	r16,r18,1000fea8 <__divdf3+0x85c>
1000fbfc:	423fff84 	addi	r8,r8,-2
1000fc00:	85a1883a 	add	r16,r16,r22
1000fc04:	3804943a 	slli	r2,r7,16
1000fc08:	84a1c83a 	sub	r16,r16,r18
1000fc0c:	e009883a 	mov	r4,fp
1000fc10:	1228b03a 	or	r20,r2,r8
1000fc14:	a1ffffcc 	andi	r7,r20,65535
1000fc18:	a024d43a 	srli	r18,r20,16
1000fc1c:	380b883a 	mov	r5,r7
1000fc20:	d8c00215 	stw	r3,8(sp)
1000fc24:	d9c00515 	stw	r7,20(sp)
1000fc28:	0000e400 	call	10000e40 <__mulsi3>
1000fc2c:	900b883a 	mov	r5,r18
1000fc30:	e009883a 	mov	r4,fp
1000fc34:	102b883a 	mov	r21,r2
1000fc38:	0000e400 	call	10000e40 <__mulsi3>
1000fc3c:	900b883a 	mov	r5,r18
1000fc40:	b809883a 	mov	r4,r23
1000fc44:	1039883a 	mov	fp,r2
1000fc48:	0000e400 	call	10000e40 <__mulsi3>
1000fc4c:	d9c00517 	ldw	r7,20(sp)
1000fc50:	b80b883a 	mov	r5,r23
1000fc54:	1025883a 	mov	r18,r2
1000fc58:	3809883a 	mov	r4,r7
1000fc5c:	0000e400 	call	10000e40 <__mulsi3>
1000fc60:	a808d43a 	srli	r4,r21,16
1000fc64:	1705883a 	add	r2,r2,fp
1000fc68:	d8c00217 	ldw	r3,8(sp)
1000fc6c:	2085883a 	add	r2,r4,r2
1000fc70:	1700022e 	bgeu	r2,fp,1000fc7c <__divdf3+0x630>
1000fc74:	01000074 	movhi	r4,1
1000fc78:	9125883a 	add	r18,r18,r4
1000fc7c:	1008d43a 	srli	r4,r2,16
1000fc80:	1004943a 	slli	r2,r2,16
1000fc84:	ad7fffcc 	andi	r21,r21,65535
1000fc88:	2489883a 	add	r4,r4,r18
1000fc8c:	1545883a 	add	r2,r2,r21
1000fc90:	81003836 	bltu	r16,r4,1000fd74 <__divdf3+0x728>
1000fc94:	81003626 	beq	r16,r4,1000fd70 <__divdf3+0x724>
1000fc98:	a5000054 	ori	r20,r20,1
1000fc9c:	1880ffc4 	addi	r2,r3,1023
1000fca0:	00bf2e0e 	bge	zero,r2,1000f95c <__alt_data_end+0xf800f95c>
1000fca4:	a10001cc 	andi	r4,r20,7
1000fca8:	20000726 	beq	r4,zero,1000fcc8 <__divdf3+0x67c>
1000fcac:	a10003cc 	andi	r4,r20,15
1000fcb0:	01400104 	movi	r5,4
1000fcb4:	21400426 	beq	r4,r5,1000fcc8 <__divdf3+0x67c>
1000fcb8:	a149883a 	add	r4,r20,r5
1000fcbc:	2529803a 	cmpltu	r20,r4,r20
1000fcc0:	8d23883a 	add	r17,r17,r20
1000fcc4:	2029883a 	mov	r20,r4
1000fcc8:	8900402c 	andhi	r4,r17,256
1000fccc:	20000426 	beq	r4,zero,1000fce0 <__divdf3+0x694>
1000fcd0:	18810004 	addi	r2,r3,1024
1000fcd4:	00ffc034 	movhi	r3,65280
1000fcd8:	18ffffc4 	addi	r3,r3,-1
1000fcdc:	88e2703a 	and	r17,r17,r3
1000fce0:	00c1ff84 	movi	r3,2046
1000fce4:	18beb416 	blt	r3,r2,1000f7b8 <__alt_data_end+0xf800f7b8>
1000fce8:	a028d0fa 	srli	r20,r20,3
1000fcec:	882a977a 	slli	r21,r17,29
1000fcf0:	8820927a 	slli	r16,r17,9
1000fcf4:	1081ffcc 	andi	r2,r2,2047
1000fcf8:	ad2ab03a 	or	r21,r21,r20
1000fcfc:	8020d33a 	srli	r16,r16,12
1000fd00:	9900004c 	andi	r4,r19,1
1000fd04:	003eb006 	br	1000f7c8 <__alt_data_end+0xf800f7c8>
1000fd08:	8080022c 	andhi	r2,r16,8
1000fd0c:	10001226 	beq	r2,zero,1000fd58 <__divdf3+0x70c>
1000fd10:	8880022c 	andhi	r2,r17,8
1000fd14:	1000101e 	bne	r2,zero,1000fd58 <__divdf3+0x70c>
1000fd18:	00800434 	movhi	r2,16
1000fd1c:	8c000234 	orhi	r16,r17,8
1000fd20:	10bfffc4 	addi	r2,r2,-1
1000fd24:	b809883a 	mov	r4,r23
1000fd28:	80a0703a 	and	r16,r16,r2
1000fd2c:	a02b883a 	mov	r21,r20
1000fd30:	003f0806 	br	1000f954 <__alt_data_end+0xf800f954>
1000fd34:	008000c4 	movi	r2,3
1000fd38:	3880b126 	beq	r7,r2,10010000 <__divdf3+0x9b4>
1000fd3c:	00800044 	movi	r2,1
1000fd40:	38805b1e 	bne	r7,r2,1000feb0 <__divdf3+0x864>
1000fd44:	e009883a 	mov	r4,fp
1000fd48:	0005883a 	mov	r2,zero
1000fd4c:	0021883a 	mov	r16,zero
1000fd50:	002b883a 	mov	r21,zero
1000fd54:	003e9c06 	br	1000f7c8 <__alt_data_end+0xf800f7c8>
1000fd58:	00800434 	movhi	r2,16
1000fd5c:	84000234 	orhi	r16,r16,8
1000fd60:	10bfffc4 	addi	r2,r2,-1
1000fd64:	b009883a 	mov	r4,r22
1000fd68:	80a0703a 	and	r16,r16,r2
1000fd6c:	003ef906 	br	1000f954 <__alt_data_end+0xf800f954>
1000fd70:	103fca26 	beq	r2,zero,1000fc9c <__alt_data_end+0xf800fc9c>
1000fd74:	b421883a 	add	r16,r22,r16
1000fd78:	a17fffc4 	addi	r5,r20,-1
1000fd7c:	8580422e 	bgeu	r16,r22,1000fe88 <__divdf3+0x83c>
1000fd80:	2829883a 	mov	r20,r5
1000fd84:	813fc41e 	bne	r16,r4,1000fc98 <__alt_data_end+0xf800fc98>
1000fd88:	d9800017 	ldw	r6,0(sp)
1000fd8c:	30bfc21e 	bne	r6,r2,1000fc98 <__alt_data_end+0xf800fc98>
1000fd90:	003fc206 	br	1000fc9c <__alt_data_end+0xf800fc9c>
1000fd94:	143ff604 	addi	r16,r2,-40
1000fd98:	8c20983a 	sll	r16,r17,r16
1000fd9c:	002b883a 	mov	r21,zero
1000fda0:	003eb406 	br	1000f874 <__alt_data_end+0xf800f874>
1000fda4:	d9800215 	stw	r6,8(sp)
1000fda8:	d9c00515 	stw	r7,20(sp)
1000fdac:	da000415 	stw	r8,16(sp)
1000fdb0:	00115e00 	call	100115e0 <__clzsi2>
1000fdb4:	10800804 	addi	r2,r2,32
1000fdb8:	da000417 	ldw	r8,16(sp)
1000fdbc:	d9c00517 	ldw	r7,20(sp)
1000fdc0:	d9800217 	ldw	r6,8(sp)
1000fdc4:	003ea106 	br	1000f84c <__alt_data_end+0xf800f84c>
1000fdc8:	147ff604 	addi	r17,r2,-40
1000fdcc:	3462983a 	sll	r17,r6,r17
1000fdd0:	0029883a 	mov	r20,zero
1000fdd4:	003ec906 	br	1000f8fc <__alt_data_end+0xf800f8fc>
1000fdd8:	3009883a 	mov	r4,r6
1000fddc:	d9400115 	stw	r5,4(sp)
1000fde0:	d9800215 	stw	r6,8(sp)
1000fde4:	da000415 	stw	r8,16(sp)
1000fde8:	da400315 	stw	r9,12(sp)
1000fdec:	00115e00 	call	100115e0 <__clzsi2>
1000fdf0:	10800804 	addi	r2,r2,32
1000fdf4:	da400317 	ldw	r9,12(sp)
1000fdf8:	da000417 	ldw	r8,16(sp)
1000fdfc:	d9800217 	ldw	r6,8(sp)
1000fe00:	d9400117 	ldw	r5,4(sp)
1000fe04:	003eb306 	br	1000f8d4 <__alt_data_end+0xf800f8d4>
1000fe08:	d9800017 	ldw	r6,0(sp)
1000fe0c:	a9ab883a 	add	r21,r21,r6
1000fe10:	a98b803a 	cmpltu	r5,r21,r6
1000fe14:	2d8b883a 	add	r5,r5,r22
1000fe18:	2a11883a 	add	r8,r5,r8
1000fe1c:	897fffc4 	addi	r5,r17,-1
1000fe20:	b2000c2e 	bgeu	r22,r8,1000fe54 <__divdf3+0x808>
1000fe24:	41003f36 	bltu	r8,r4,1000ff24 <__divdf3+0x8d8>
1000fe28:	22006c26 	beq	r4,r8,1000ffdc <__divdf3+0x990>
1000fe2c:	4109c83a 	sub	r4,r8,r4
1000fe30:	2823883a 	mov	r17,r5
1000fe34:	003f3b06 	br	1000fb24 <__alt_data_end+0xf800fb24>
1000fe38:	ad3ed336 	bltu	r21,r20,1000f988 <__alt_data_end+0xf800f988>
1000fe3c:	a804d07a 	srli	r2,r21,1
1000fe40:	802e97fa 	slli	r23,r16,31
1000fe44:	a82a97fa 	slli	r21,r21,31
1000fe48:	8020d07a 	srli	r16,r16,1
1000fe4c:	b8aeb03a 	or	r23,r23,r2
1000fe50:	003ed006 	br	1000f994 <__alt_data_end+0xf800f994>
1000fe54:	b23ff51e 	bne	r22,r8,1000fe2c <__alt_data_end+0xf800fe2c>
1000fe58:	d9800017 	ldw	r6,0(sp)
1000fe5c:	a9bff12e 	bgeu	r21,r6,1000fe24 <__alt_data_end+0xf800fe24>
1000fe60:	b109c83a 	sub	r4,r22,r4
1000fe64:	2823883a 	mov	r17,r5
1000fe68:	003f2e06 	br	1000fb24 <__alt_data_end+0xf800fb24>
1000fe6c:	2021883a 	mov	r16,r4
1000fe70:	003eff06 	br	1000fa70 <__alt_data_end+0xf800fa70>
1000fe74:	2023883a 	mov	r17,r4
1000fe78:	003ee406 	br	1000fa0c <__alt_data_end+0xf800fa0c>
1000fe7c:	a8bfe236 	bltu	r21,r2,1000fe08 <__alt_data_end+0xf800fe08>
1000fe80:	0009883a 	mov	r4,zero
1000fe84:	003f2706 	br	1000fb24 <__alt_data_end+0xf800fb24>
1000fe88:	81002d36 	bltu	r16,r4,1000ff40 <__divdf3+0x8f4>
1000fe8c:	24005626 	beq	r4,r16,1000ffe8 <__divdf3+0x99c>
1000fe90:	2829883a 	mov	r20,r5
1000fe94:	003f8006 	br	1000fc98 <__alt_data_end+0xf800fc98>
1000fe98:	053fffc4 	movi	r20,-1
1000fe9c:	003f7f06 	br	1000fc9c <__alt_data_end+0xf800fc9c>
1000fea0:	200f883a 	mov	r7,r4
1000fea4:	003f3c06 	br	1000fb98 <__alt_data_end+0xf800fb98>
1000fea8:	1011883a 	mov	r8,r2
1000feac:	003f5506 	br	1000fc04 <__alt_data_end+0xf800fc04>
1000feb0:	e027883a 	mov	r19,fp
1000feb4:	003f7906 	br	1000fc9c <__alt_data_end+0xf800fc9c>
1000feb8:	010007c4 	movi	r4,31
1000febc:	20c02816 	blt	r4,r3,1000ff60 <__divdf3+0x914>
1000fec0:	00800804 	movi	r2,32
1000fec4:	10c5c83a 	sub	r2,r2,r3
1000fec8:	888a983a 	sll	r5,r17,r2
1000fecc:	a0c8d83a 	srl	r4,r20,r3
1000fed0:	a084983a 	sll	r2,r20,r2
1000fed4:	88e2d83a 	srl	r17,r17,r3
1000fed8:	2906b03a 	or	r3,r5,r4
1000fedc:	1004c03a 	cmpne	r2,r2,zero
1000fee0:	1886b03a 	or	r3,r3,r2
1000fee4:	188001cc 	andi	r2,r3,7
1000fee8:	10000726 	beq	r2,zero,1000ff08 <__divdf3+0x8bc>
1000feec:	188003cc 	andi	r2,r3,15
1000fef0:	01000104 	movi	r4,4
1000fef4:	11000426 	beq	r2,r4,1000ff08 <__divdf3+0x8bc>
1000fef8:	1805883a 	mov	r2,r3
1000fefc:	10c00104 	addi	r3,r2,4
1000ff00:	1885803a 	cmpltu	r2,r3,r2
1000ff04:	88a3883a 	add	r17,r17,r2
1000ff08:	8880202c 	andhi	r2,r17,128
1000ff0c:	10002926 	beq	r2,zero,1000ffb4 <__divdf3+0x968>
1000ff10:	9900004c 	andi	r4,r19,1
1000ff14:	00800044 	movi	r2,1
1000ff18:	0021883a 	mov	r16,zero
1000ff1c:	002b883a 	mov	r21,zero
1000ff20:	003e2906 	br	1000f7c8 <__alt_data_end+0xf800f7c8>
1000ff24:	d9800017 	ldw	r6,0(sp)
1000ff28:	8c7fff84 	addi	r17,r17,-2
1000ff2c:	a9ab883a 	add	r21,r21,r6
1000ff30:	a98b803a 	cmpltu	r5,r21,r6
1000ff34:	2d8b883a 	add	r5,r5,r22
1000ff38:	2a11883a 	add	r8,r5,r8
1000ff3c:	003ef806 	br	1000fb20 <__alt_data_end+0xf800fb20>
1000ff40:	d9800017 	ldw	r6,0(sp)
1000ff44:	318f883a 	add	r7,r6,r6
1000ff48:	398b803a 	cmpltu	r5,r7,r6
1000ff4c:	2d8d883a 	add	r6,r5,r22
1000ff50:	81a1883a 	add	r16,r16,r6
1000ff54:	a17fff84 	addi	r5,r20,-2
1000ff58:	d9c00015 	stw	r7,0(sp)
1000ff5c:	003f8806 	br	1000fd80 <__alt_data_end+0xf800fd80>
1000ff60:	013ff844 	movi	r4,-31
1000ff64:	2085c83a 	sub	r2,r4,r2
1000ff68:	8888d83a 	srl	r4,r17,r2
1000ff6c:	00800804 	movi	r2,32
1000ff70:	18802126 	beq	r3,r2,1000fff8 <__divdf3+0x9ac>
1000ff74:	04001004 	movi	r16,64
1000ff78:	80c7c83a 	sub	r3,r16,r3
1000ff7c:	88e0983a 	sll	r16,r17,r3
1000ff80:	8504b03a 	or	r2,r16,r20
1000ff84:	1004c03a 	cmpne	r2,r2,zero
1000ff88:	2084b03a 	or	r2,r4,r2
1000ff8c:	144001cc 	andi	r17,r2,7
1000ff90:	88000d1e 	bne	r17,zero,1000ffc8 <__divdf3+0x97c>
1000ff94:	0021883a 	mov	r16,zero
1000ff98:	102ad0fa 	srli	r21,r2,3
1000ff9c:	9900004c 	andi	r4,r19,1
1000ffa0:	0005883a 	mov	r2,zero
1000ffa4:	ac6ab03a 	or	r21,r21,r17
1000ffa8:	003e0706 	br	1000f7c8 <__alt_data_end+0xf800f7c8>
1000ffac:	1007883a 	mov	r3,r2
1000ffb0:	0023883a 	mov	r17,zero
1000ffb4:	8820927a 	slli	r16,r17,9
1000ffb8:	1805883a 	mov	r2,r3
1000ffbc:	8822977a 	slli	r17,r17,29
1000ffc0:	8020d33a 	srli	r16,r16,12
1000ffc4:	003ff406 	br	1000ff98 <__alt_data_end+0xf800ff98>
1000ffc8:	10c003cc 	andi	r3,r2,15
1000ffcc:	01000104 	movi	r4,4
1000ffd0:	193ff626 	beq	r3,r4,1000ffac <__alt_data_end+0xf800ffac>
1000ffd4:	0023883a 	mov	r17,zero
1000ffd8:	003fc806 	br	1000fefc <__alt_data_end+0xf800fefc>
1000ffdc:	a8bfd136 	bltu	r21,r2,1000ff24 <__alt_data_end+0xf800ff24>
1000ffe0:	2823883a 	mov	r17,r5
1000ffe4:	003fa606 	br	1000fe80 <__alt_data_end+0xf800fe80>
1000ffe8:	d9800017 	ldw	r6,0(sp)
1000ffec:	30bfd436 	bltu	r6,r2,1000ff40 <__alt_data_end+0xf800ff40>
1000fff0:	2829883a 	mov	r20,r5
1000fff4:	003f6406 	br	1000fd88 <__alt_data_end+0xf800fd88>
1000fff8:	0021883a 	mov	r16,zero
1000fffc:	003fe006 	br	1000ff80 <__alt_data_end+0xf800ff80>
10010000:	00800434 	movhi	r2,16
10010004:	8c000234 	orhi	r16,r17,8
10010008:	10bfffc4 	addi	r2,r2,-1
1001000c:	e009883a 	mov	r4,fp
10010010:	80a0703a 	and	r16,r16,r2
10010014:	a02b883a 	mov	r21,r20
10010018:	003e4e06 	br	1000f954 <__alt_data_end+0xf800f954>

1001001c <__eqdf2>:
1001001c:	2804d53a 	srli	r2,r5,20
10010020:	3806d53a 	srli	r3,r7,20
10010024:	02000434 	movhi	r8,16
10010028:	423fffc4 	addi	r8,r8,-1
1001002c:	1081ffcc 	andi	r2,r2,2047
10010030:	0281ffc4 	movi	r10,2047
10010034:	2a12703a 	and	r9,r5,r8
10010038:	18c1ffcc 	andi	r3,r3,2047
1001003c:	3a10703a 	and	r8,r7,r8
10010040:	280ad7fa 	srli	r5,r5,31
10010044:	380ed7fa 	srli	r7,r7,31
10010048:	12801026 	beq	r2,r10,1001008c <__eqdf2+0x70>
1001004c:	0281ffc4 	movi	r10,2047
10010050:	1a800a26 	beq	r3,r10,1001007c <__eqdf2+0x60>
10010054:	10c00226 	beq	r2,r3,10010060 <__eqdf2+0x44>
10010058:	00800044 	movi	r2,1
1001005c:	f800283a 	ret
10010060:	4a3ffd1e 	bne	r9,r8,10010058 <__alt_data_end+0xf8010058>
10010064:	21bffc1e 	bne	r4,r6,10010058 <__alt_data_end+0xf8010058>
10010068:	29c00c26 	beq	r5,r7,1001009c <__eqdf2+0x80>
1001006c:	103ffa1e 	bne	r2,zero,10010058 <__alt_data_end+0xf8010058>
10010070:	2244b03a 	or	r2,r4,r9
10010074:	1004c03a 	cmpne	r2,r2,zero
10010078:	f800283a 	ret
1001007c:	3214b03a 	or	r10,r6,r8
10010080:	503ff426 	beq	r10,zero,10010054 <__alt_data_end+0xf8010054>
10010084:	00800044 	movi	r2,1
10010088:	f800283a 	ret
1001008c:	2254b03a 	or	r10,r4,r9
10010090:	503fee26 	beq	r10,zero,1001004c <__alt_data_end+0xf801004c>
10010094:	00800044 	movi	r2,1
10010098:	f800283a 	ret
1001009c:	0005883a 	mov	r2,zero
100100a0:	f800283a 	ret

100100a4 <__gedf2>:
100100a4:	2804d53a 	srli	r2,r5,20
100100a8:	3806d53a 	srli	r3,r7,20
100100ac:	02000434 	movhi	r8,16
100100b0:	423fffc4 	addi	r8,r8,-1
100100b4:	1081ffcc 	andi	r2,r2,2047
100100b8:	0241ffc4 	movi	r9,2047
100100bc:	2a14703a 	and	r10,r5,r8
100100c0:	18c1ffcc 	andi	r3,r3,2047
100100c4:	3a10703a 	and	r8,r7,r8
100100c8:	280ad7fa 	srli	r5,r5,31
100100cc:	380ed7fa 	srli	r7,r7,31
100100d0:	12401d26 	beq	r2,r9,10010148 <__gedf2+0xa4>
100100d4:	0241ffc4 	movi	r9,2047
100100d8:	1a401226 	beq	r3,r9,10010124 <__gedf2+0x80>
100100dc:	1000081e 	bne	r2,zero,10010100 <__gedf2+0x5c>
100100e0:	2296b03a 	or	r11,r4,r10
100100e4:	5813003a 	cmpeq	r9,r11,zero
100100e8:	1800091e 	bne	r3,zero,10010110 <__gedf2+0x6c>
100100ec:	3218b03a 	or	r12,r6,r8
100100f0:	6000071e 	bne	r12,zero,10010110 <__gedf2+0x6c>
100100f4:	0005883a 	mov	r2,zero
100100f8:	5800101e 	bne	r11,zero,1001013c <__gedf2+0x98>
100100fc:	f800283a 	ret
10010100:	18000c1e 	bne	r3,zero,10010134 <__gedf2+0x90>
10010104:	3212b03a 	or	r9,r6,r8
10010108:	48000c26 	beq	r9,zero,1001013c <__gedf2+0x98>
1001010c:	0013883a 	mov	r9,zero
10010110:	39c03fcc 	andi	r7,r7,255
10010114:	48000826 	beq	r9,zero,10010138 <__gedf2+0x94>
10010118:	38000926 	beq	r7,zero,10010140 <__gedf2+0x9c>
1001011c:	00800044 	movi	r2,1
10010120:	f800283a 	ret
10010124:	3212b03a 	or	r9,r6,r8
10010128:	483fec26 	beq	r9,zero,100100dc <__alt_data_end+0xf80100dc>
1001012c:	00bfff84 	movi	r2,-2
10010130:	f800283a 	ret
10010134:	39c03fcc 	andi	r7,r7,255
10010138:	29c00626 	beq	r5,r7,10010154 <__gedf2+0xb0>
1001013c:	283ff726 	beq	r5,zero,1001011c <__alt_data_end+0xf801011c>
10010140:	00bfffc4 	movi	r2,-1
10010144:	f800283a 	ret
10010148:	2292b03a 	or	r9,r4,r10
1001014c:	483fe126 	beq	r9,zero,100100d4 <__alt_data_end+0xf80100d4>
10010150:	003ff606 	br	1001012c <__alt_data_end+0xf801012c>
10010154:	18bff916 	blt	r3,r2,1001013c <__alt_data_end+0xf801013c>
10010158:	10c00316 	blt	r2,r3,10010168 <__gedf2+0xc4>
1001015c:	42bff736 	bltu	r8,r10,1001013c <__alt_data_end+0xf801013c>
10010160:	52000326 	beq	r10,r8,10010170 <__gedf2+0xcc>
10010164:	5200042e 	bgeu	r10,r8,10010178 <__gedf2+0xd4>
10010168:	283fec1e 	bne	r5,zero,1001011c <__alt_data_end+0xf801011c>
1001016c:	003ff406 	br	10010140 <__alt_data_end+0xf8010140>
10010170:	313ff236 	bltu	r6,r4,1001013c <__alt_data_end+0xf801013c>
10010174:	21bffc36 	bltu	r4,r6,10010168 <__alt_data_end+0xf8010168>
10010178:	0005883a 	mov	r2,zero
1001017c:	f800283a 	ret

10010180 <__ledf2>:
10010180:	2804d53a 	srli	r2,r5,20
10010184:	3810d53a 	srli	r8,r7,20
10010188:	00c00434 	movhi	r3,16
1001018c:	18ffffc4 	addi	r3,r3,-1
10010190:	1081ffcc 	andi	r2,r2,2047
10010194:	0241ffc4 	movi	r9,2047
10010198:	28d4703a 	and	r10,r5,r3
1001019c:	4201ffcc 	andi	r8,r8,2047
100101a0:	38c6703a 	and	r3,r7,r3
100101a4:	280ad7fa 	srli	r5,r5,31
100101a8:	380ed7fa 	srli	r7,r7,31
100101ac:	12401f26 	beq	r2,r9,1001022c <__ledf2+0xac>
100101b0:	0241ffc4 	movi	r9,2047
100101b4:	42401426 	beq	r8,r9,10010208 <__ledf2+0x88>
100101b8:	1000091e 	bne	r2,zero,100101e0 <__ledf2+0x60>
100101bc:	2296b03a 	or	r11,r4,r10
100101c0:	5813003a 	cmpeq	r9,r11,zero
100101c4:	29403fcc 	andi	r5,r5,255
100101c8:	40000a1e 	bne	r8,zero,100101f4 <__ledf2+0x74>
100101cc:	30d8b03a 	or	r12,r6,r3
100101d0:	6000081e 	bne	r12,zero,100101f4 <__ledf2+0x74>
100101d4:	0005883a 	mov	r2,zero
100101d8:	5800111e 	bne	r11,zero,10010220 <__ledf2+0xa0>
100101dc:	f800283a 	ret
100101e0:	29403fcc 	andi	r5,r5,255
100101e4:	40000c1e 	bne	r8,zero,10010218 <__ledf2+0x98>
100101e8:	30d2b03a 	or	r9,r6,r3
100101ec:	48000c26 	beq	r9,zero,10010220 <__ledf2+0xa0>
100101f0:	0013883a 	mov	r9,zero
100101f4:	39c03fcc 	andi	r7,r7,255
100101f8:	48000826 	beq	r9,zero,1001021c <__ledf2+0x9c>
100101fc:	38001126 	beq	r7,zero,10010244 <__ledf2+0xc4>
10010200:	00800044 	movi	r2,1
10010204:	f800283a 	ret
10010208:	30d2b03a 	or	r9,r6,r3
1001020c:	483fea26 	beq	r9,zero,100101b8 <__alt_data_end+0xf80101b8>
10010210:	00800084 	movi	r2,2
10010214:	f800283a 	ret
10010218:	39c03fcc 	andi	r7,r7,255
1001021c:	39400726 	beq	r7,r5,1001023c <__ledf2+0xbc>
10010220:	2800081e 	bne	r5,zero,10010244 <__ledf2+0xc4>
10010224:	00800044 	movi	r2,1
10010228:	f800283a 	ret
1001022c:	2292b03a 	or	r9,r4,r10
10010230:	483fdf26 	beq	r9,zero,100101b0 <__alt_data_end+0xf80101b0>
10010234:	00800084 	movi	r2,2
10010238:	f800283a 	ret
1001023c:	4080030e 	bge	r8,r2,1001024c <__ledf2+0xcc>
10010240:	383fef26 	beq	r7,zero,10010200 <__alt_data_end+0xf8010200>
10010244:	00bfffc4 	movi	r2,-1
10010248:	f800283a 	ret
1001024c:	123feb16 	blt	r2,r8,100101fc <__alt_data_end+0xf80101fc>
10010250:	1abff336 	bltu	r3,r10,10010220 <__alt_data_end+0xf8010220>
10010254:	50c00326 	beq	r10,r3,10010264 <__ledf2+0xe4>
10010258:	50c0042e 	bgeu	r10,r3,1001026c <__ledf2+0xec>
1001025c:	283fe81e 	bne	r5,zero,10010200 <__alt_data_end+0xf8010200>
10010260:	003ff806 	br	10010244 <__alt_data_end+0xf8010244>
10010264:	313fee36 	bltu	r6,r4,10010220 <__alt_data_end+0xf8010220>
10010268:	21bffc36 	bltu	r4,r6,1001025c <__alt_data_end+0xf801025c>
1001026c:	0005883a 	mov	r2,zero
10010270:	f800283a 	ret

10010274 <__muldf3>:
10010274:	deffee04 	addi	sp,sp,-72
10010278:	dd000c15 	stw	r20,48(sp)
1001027c:	2828d53a 	srli	r20,r5,20
10010280:	ddc00f15 	stw	r23,60(sp)
10010284:	282ed7fa 	srli	r23,r5,31
10010288:	dc000815 	stw	r16,32(sp)
1001028c:	04000434 	movhi	r16,16
10010290:	dcc00b15 	stw	r19,44(sp)
10010294:	843fffc4 	addi	r16,r16,-1
10010298:	dfc01115 	stw	ra,68(sp)
1001029c:	df001015 	stw	fp,64(sp)
100102a0:	dd800e15 	stw	r22,56(sp)
100102a4:	dd400d15 	stw	r21,52(sp)
100102a8:	dc800a15 	stw	r18,40(sp)
100102ac:	dc400915 	stw	r17,36(sp)
100102b0:	a501ffcc 	andi	r20,r20,2047
100102b4:	2c20703a 	and	r16,r5,r16
100102b8:	b827883a 	mov	r19,r23
100102bc:	ba403fcc 	andi	r9,r23,255
100102c0:	a0006026 	beq	r20,zero,10010444 <__muldf3+0x1d0>
100102c4:	0081ffc4 	movi	r2,2047
100102c8:	202d883a 	mov	r22,r4
100102cc:	a0803626 	beq	r20,r2,100103a8 <__muldf3+0x134>
100102d0:	84000434 	orhi	r16,r16,16
100102d4:	200ad77a 	srli	r5,r4,29
100102d8:	800490fa 	slli	r2,r16,3
100102dc:	202c90fa 	slli	r22,r4,3
100102e0:	a53f0044 	addi	r20,r20,-1023
100102e4:	28a0b03a 	or	r16,r5,r2
100102e8:	002b883a 	mov	r21,zero
100102ec:	000b883a 	mov	r5,zero
100102f0:	3804d53a 	srli	r2,r7,20
100102f4:	3838d7fa 	srli	fp,r7,31
100102f8:	04400434 	movhi	r17,16
100102fc:	8c7fffc4 	addi	r17,r17,-1
10010300:	1081ffcc 	andi	r2,r2,2047
10010304:	3025883a 	mov	r18,r6
10010308:	3c62703a 	and	r17,r7,r17
1001030c:	e2803fcc 	andi	r10,fp,255
10010310:	10006d26 	beq	r2,zero,100104c8 <__muldf3+0x254>
10010314:	00c1ffc4 	movi	r3,2047
10010318:	10c06526 	beq	r2,r3,100104b0 <__muldf3+0x23c>
1001031c:	8c400434 	orhi	r17,r17,16
10010320:	300ed77a 	srli	r7,r6,29
10010324:	880690fa 	slli	r3,r17,3
10010328:	302490fa 	slli	r18,r6,3
1001032c:	10bf0044 	addi	r2,r2,-1023
10010330:	38e2b03a 	or	r17,r7,r3
10010334:	000f883a 	mov	r7,zero
10010338:	a087883a 	add	r3,r20,r2
1001033c:	010003c4 	movi	r4,15
10010340:	3d44b03a 	or	r2,r7,r21
10010344:	e5ccf03a 	xor	r6,fp,r23
10010348:	1a000044 	addi	r8,r3,1
1001034c:	20809b36 	bltu	r4,r2,100105bc <__muldf3+0x348>
10010350:	100490ba 	slli	r2,r2,2
10010354:	01040074 	movhi	r4,4097
10010358:	2100da04 	addi	r4,r4,872
1001035c:	1105883a 	add	r2,r2,r4
10010360:	10800017 	ldw	r2,0(r2)
10010364:	1000683a 	jmp	r2
10010368:	100105bc 	xorhi	zero,r2,1046
1001036c:	100103c8 	cmpgei	zero,r2,1039
10010370:	100103c8 	cmpgei	zero,r2,1039
10010374:	100103c4 	addi	zero,r2,1039
10010378:	10010598 	cmpnei	zero,r2,1046
1001037c:	10010598 	cmpnei	zero,r2,1046
10010380:	10010580 	call	11001058 <_gp+0xfe303c>
10010384:	100103c4 	addi	zero,r2,1039
10010388:	10010598 	cmpnei	zero,r2,1046
1001038c:	10010580 	call	11001058 <_gp+0xfe303c>
10010390:	10010598 	cmpnei	zero,r2,1046
10010394:	100103c4 	addi	zero,r2,1039
10010398:	100105a8 	cmpgeui	zero,r2,1046
1001039c:	100105a8 	cmpgeui	zero,r2,1046
100103a0:	100105a8 	cmpgeui	zero,r2,1046
100103a4:	10010908 	cmpgei	zero,r2,1060
100103a8:	2404b03a 	or	r2,r4,r16
100103ac:	1000711e 	bne	r2,zero,10010574 <__muldf3+0x300>
100103b0:	05400204 	movi	r21,8
100103b4:	0021883a 	mov	r16,zero
100103b8:	002d883a 	mov	r22,zero
100103bc:	01400084 	movi	r5,2
100103c0:	003fcb06 	br	100102f0 <__alt_data_end+0xf80102f0>
100103c4:	500d883a 	mov	r6,r10
100103c8:	00800084 	movi	r2,2
100103cc:	38805926 	beq	r7,r2,10010534 <__muldf3+0x2c0>
100103d0:	008000c4 	movi	r2,3
100103d4:	3881bb26 	beq	r7,r2,10010ac4 <__muldf3+0x850>
100103d8:	00800044 	movi	r2,1
100103dc:	3881961e 	bne	r7,r2,10010a38 <__muldf3+0x7c4>
100103e0:	3027883a 	mov	r19,r6
100103e4:	0005883a 	mov	r2,zero
100103e8:	0021883a 	mov	r16,zero
100103ec:	002d883a 	mov	r22,zero
100103f0:	1004953a 	slli	r2,r2,20
100103f4:	98c03fcc 	andi	r3,r19,255
100103f8:	04400434 	movhi	r17,16
100103fc:	8c7fffc4 	addi	r17,r17,-1
10010400:	180697fa 	slli	r3,r3,31
10010404:	8460703a 	and	r16,r16,r17
10010408:	80a0b03a 	or	r16,r16,r2
1001040c:	80c6b03a 	or	r3,r16,r3
10010410:	b005883a 	mov	r2,r22
10010414:	dfc01117 	ldw	ra,68(sp)
10010418:	df001017 	ldw	fp,64(sp)
1001041c:	ddc00f17 	ldw	r23,60(sp)
10010420:	dd800e17 	ldw	r22,56(sp)
10010424:	dd400d17 	ldw	r21,52(sp)
10010428:	dd000c17 	ldw	r20,48(sp)
1001042c:	dcc00b17 	ldw	r19,44(sp)
10010430:	dc800a17 	ldw	r18,40(sp)
10010434:	dc400917 	ldw	r17,36(sp)
10010438:	dc000817 	ldw	r16,32(sp)
1001043c:	dec01204 	addi	sp,sp,72
10010440:	f800283a 	ret
10010444:	2404b03a 	or	r2,r4,r16
10010448:	202b883a 	mov	r21,r4
1001044c:	10004426 	beq	r2,zero,10010560 <__muldf3+0x2ec>
10010450:	80015126 	beq	r16,zero,10010998 <__muldf3+0x724>
10010454:	8009883a 	mov	r4,r16
10010458:	d9800715 	stw	r6,28(sp)
1001045c:	d9c00215 	stw	r7,8(sp)
10010460:	da400415 	stw	r9,16(sp)
10010464:	00115e00 	call	100115e0 <__clzsi2>
10010468:	d9800717 	ldw	r6,28(sp)
1001046c:	d9c00217 	ldw	r7,8(sp)
10010470:	da400417 	ldw	r9,16(sp)
10010474:	113ffd44 	addi	r4,r2,-11
10010478:	00c00704 	movi	r3,28
1001047c:	19014216 	blt	r3,r4,10010988 <__muldf3+0x714>
10010480:	00c00744 	movi	r3,29
10010484:	15bffe04 	addi	r22,r2,-8
10010488:	1907c83a 	sub	r3,r3,r4
1001048c:	85a0983a 	sll	r16,r16,r22
10010490:	a8c6d83a 	srl	r3,r21,r3
10010494:	adac983a 	sll	r22,r21,r22
10010498:	1c20b03a 	or	r16,r3,r16
1001049c:	1080fcc4 	addi	r2,r2,1011
100104a0:	00a9c83a 	sub	r20,zero,r2
100104a4:	002b883a 	mov	r21,zero
100104a8:	000b883a 	mov	r5,zero
100104ac:	003f9006 	br	100102f0 <__alt_data_end+0xf80102f0>
100104b0:	3446b03a 	or	r3,r6,r17
100104b4:	1800281e 	bne	r3,zero,10010558 <__muldf3+0x2e4>
100104b8:	0023883a 	mov	r17,zero
100104bc:	0025883a 	mov	r18,zero
100104c0:	01c00084 	movi	r7,2
100104c4:	003f9c06 	br	10010338 <__alt_data_end+0xf8010338>
100104c8:	3446b03a 	or	r3,r6,r17
100104cc:	18001e26 	beq	r3,zero,10010548 <__muldf3+0x2d4>
100104d0:	88012126 	beq	r17,zero,10010958 <__muldf3+0x6e4>
100104d4:	8809883a 	mov	r4,r17
100104d8:	d9400215 	stw	r5,8(sp)
100104dc:	d9800715 	stw	r6,28(sp)
100104e0:	da400415 	stw	r9,16(sp)
100104e4:	da800315 	stw	r10,12(sp)
100104e8:	00115e00 	call	100115e0 <__clzsi2>
100104ec:	d9400217 	ldw	r5,8(sp)
100104f0:	d9800717 	ldw	r6,28(sp)
100104f4:	da400417 	ldw	r9,16(sp)
100104f8:	da800317 	ldw	r10,12(sp)
100104fc:	113ffd44 	addi	r4,r2,-11
10010500:	00c00704 	movi	r3,28
10010504:	19011016 	blt	r3,r4,10010948 <__muldf3+0x6d4>
10010508:	00c00744 	movi	r3,29
1001050c:	14bffe04 	addi	r18,r2,-8
10010510:	1907c83a 	sub	r3,r3,r4
10010514:	8ca2983a 	sll	r17,r17,r18
10010518:	30c6d83a 	srl	r3,r6,r3
1001051c:	34a4983a 	sll	r18,r6,r18
10010520:	1c62b03a 	or	r17,r3,r17
10010524:	1080fcc4 	addi	r2,r2,1011
10010528:	0085c83a 	sub	r2,zero,r2
1001052c:	000f883a 	mov	r7,zero
10010530:	003f8106 	br	10010338 <__alt_data_end+0xf8010338>
10010534:	3027883a 	mov	r19,r6
10010538:	0081ffc4 	movi	r2,2047
1001053c:	0021883a 	mov	r16,zero
10010540:	002d883a 	mov	r22,zero
10010544:	003faa06 	br	100103f0 <__alt_data_end+0xf80103f0>
10010548:	0023883a 	mov	r17,zero
1001054c:	0025883a 	mov	r18,zero
10010550:	01c00044 	movi	r7,1
10010554:	003f7806 	br	10010338 <__alt_data_end+0xf8010338>
10010558:	01c000c4 	movi	r7,3
1001055c:	003f7606 	br	10010338 <__alt_data_end+0xf8010338>
10010560:	05400104 	movi	r21,4
10010564:	0021883a 	mov	r16,zero
10010568:	002d883a 	mov	r22,zero
1001056c:	01400044 	movi	r5,1
10010570:	003f5f06 	br	100102f0 <__alt_data_end+0xf80102f0>
10010574:	05400304 	movi	r21,12
10010578:	014000c4 	movi	r5,3
1001057c:	003f5c06 	br	100102f0 <__alt_data_end+0xf80102f0>
10010580:	04000434 	movhi	r16,16
10010584:	0027883a 	mov	r19,zero
10010588:	843fffc4 	addi	r16,r16,-1
1001058c:	05bfffc4 	movi	r22,-1
10010590:	0081ffc4 	movi	r2,2047
10010594:	003f9606 	br	100103f0 <__alt_data_end+0xf80103f0>
10010598:	8023883a 	mov	r17,r16
1001059c:	b025883a 	mov	r18,r22
100105a0:	280f883a 	mov	r7,r5
100105a4:	003f8806 	br	100103c8 <__alt_data_end+0xf80103c8>
100105a8:	8023883a 	mov	r17,r16
100105ac:	b025883a 	mov	r18,r22
100105b0:	480d883a 	mov	r6,r9
100105b4:	280f883a 	mov	r7,r5
100105b8:	003f8306 	br	100103c8 <__alt_data_end+0xf80103c8>
100105bc:	b026d43a 	srli	r19,r22,16
100105c0:	902ed43a 	srli	r23,r18,16
100105c4:	b5bfffcc 	andi	r22,r22,65535
100105c8:	94bfffcc 	andi	r18,r18,65535
100105cc:	b00b883a 	mov	r5,r22
100105d0:	9009883a 	mov	r4,r18
100105d4:	d8c00515 	stw	r3,20(sp)
100105d8:	d9800715 	stw	r6,28(sp)
100105dc:	da000615 	stw	r8,24(sp)
100105e0:	0000e400 	call	10000e40 <__mulsi3>
100105e4:	980b883a 	mov	r5,r19
100105e8:	9009883a 	mov	r4,r18
100105ec:	1029883a 	mov	r20,r2
100105f0:	0000e400 	call	10000e40 <__mulsi3>
100105f4:	b80b883a 	mov	r5,r23
100105f8:	9809883a 	mov	r4,r19
100105fc:	102b883a 	mov	r21,r2
10010600:	0000e400 	call	10000e40 <__mulsi3>
10010604:	b809883a 	mov	r4,r23
10010608:	b00b883a 	mov	r5,r22
1001060c:	1039883a 	mov	fp,r2
10010610:	0000e400 	call	10000e40 <__mulsi3>
10010614:	a008d43a 	srli	r4,r20,16
10010618:	1545883a 	add	r2,r2,r21
1001061c:	d8c00517 	ldw	r3,20(sp)
10010620:	2085883a 	add	r2,r4,r2
10010624:	d9800717 	ldw	r6,28(sp)
10010628:	da000617 	ldw	r8,24(sp)
1001062c:	1540022e 	bgeu	r2,r21,10010638 <__muldf3+0x3c4>
10010630:	01000074 	movhi	r4,1
10010634:	e139883a 	add	fp,fp,r4
10010638:	100e943a 	slli	r7,r2,16
1001063c:	1004d43a 	srli	r2,r2,16
10010640:	882ad43a 	srli	r21,r17,16
10010644:	a53fffcc 	andi	r20,r20,65535
10010648:	8c7fffcc 	andi	r17,r17,65535
1001064c:	3d29883a 	add	r20,r7,r20
10010650:	b00b883a 	mov	r5,r22
10010654:	8809883a 	mov	r4,r17
10010658:	d8c00515 	stw	r3,20(sp)
1001065c:	d9800715 	stw	r6,28(sp)
10010660:	da000615 	stw	r8,24(sp)
10010664:	dd000115 	stw	r20,4(sp)
10010668:	d8800015 	stw	r2,0(sp)
1001066c:	0000e400 	call	10000e40 <__mulsi3>
10010670:	980b883a 	mov	r5,r19
10010674:	8809883a 	mov	r4,r17
10010678:	d8800215 	stw	r2,8(sp)
1001067c:	0000e400 	call	10000e40 <__mulsi3>
10010680:	9809883a 	mov	r4,r19
10010684:	a80b883a 	mov	r5,r21
10010688:	1029883a 	mov	r20,r2
1001068c:	0000e400 	call	10000e40 <__mulsi3>
10010690:	b00b883a 	mov	r5,r22
10010694:	a809883a 	mov	r4,r21
10010698:	d8800415 	stw	r2,16(sp)
1001069c:	0000e400 	call	10000e40 <__mulsi3>
100106a0:	d9c00217 	ldw	r7,8(sp)
100106a4:	1505883a 	add	r2,r2,r20
100106a8:	d8c00517 	ldw	r3,20(sp)
100106ac:	3826d43a 	srli	r19,r7,16
100106b0:	d9800717 	ldw	r6,28(sp)
100106b4:	da000617 	ldw	r8,24(sp)
100106b8:	9885883a 	add	r2,r19,r2
100106bc:	da400417 	ldw	r9,16(sp)
100106c0:	1500022e 	bgeu	r2,r20,100106cc <__muldf3+0x458>
100106c4:	01000074 	movhi	r4,1
100106c8:	4913883a 	add	r9,r9,r4
100106cc:	1028d43a 	srli	r20,r2,16
100106d0:	1004943a 	slli	r2,r2,16
100106d4:	802cd43a 	srli	r22,r16,16
100106d8:	843fffcc 	andi	r16,r16,65535
100106dc:	3cffffcc 	andi	r19,r7,65535
100106e0:	9009883a 	mov	r4,r18
100106e4:	800b883a 	mov	r5,r16
100106e8:	a269883a 	add	r20,r20,r9
100106ec:	d8c00515 	stw	r3,20(sp)
100106f0:	d9800715 	stw	r6,28(sp)
100106f4:	da000615 	stw	r8,24(sp)
100106f8:	14e7883a 	add	r19,r2,r19
100106fc:	0000e400 	call	10000e40 <__mulsi3>
10010700:	9009883a 	mov	r4,r18
10010704:	b00b883a 	mov	r5,r22
10010708:	d8800315 	stw	r2,12(sp)
1001070c:	0000e400 	call	10000e40 <__mulsi3>
10010710:	b809883a 	mov	r4,r23
10010714:	b00b883a 	mov	r5,r22
10010718:	d8800215 	stw	r2,8(sp)
1001071c:	0000e400 	call	10000e40 <__mulsi3>
10010720:	b80b883a 	mov	r5,r23
10010724:	8009883a 	mov	r4,r16
10010728:	d8800415 	stw	r2,16(sp)
1001072c:	0000e400 	call	10000e40 <__mulsi3>
10010730:	da800317 	ldw	r10,12(sp)
10010734:	d9c00217 	ldw	r7,8(sp)
10010738:	d9000017 	ldw	r4,0(sp)
1001073c:	502ed43a 	srli	r23,r10,16
10010740:	11c5883a 	add	r2,r2,r7
10010744:	24e5883a 	add	r18,r4,r19
10010748:	b885883a 	add	r2,r23,r2
1001074c:	d8c00517 	ldw	r3,20(sp)
10010750:	d9800717 	ldw	r6,28(sp)
10010754:	da000617 	ldw	r8,24(sp)
10010758:	da400417 	ldw	r9,16(sp)
1001075c:	11c0022e 	bgeu	r2,r7,10010768 <__muldf3+0x4f4>
10010760:	01000074 	movhi	r4,1
10010764:	4913883a 	add	r9,r9,r4
10010768:	100ed43a 	srli	r7,r2,16
1001076c:	1004943a 	slli	r2,r2,16
10010770:	55ffffcc 	andi	r23,r10,65535
10010774:	3a53883a 	add	r9,r7,r9
10010778:	8809883a 	mov	r4,r17
1001077c:	800b883a 	mov	r5,r16
10010780:	d8c00515 	stw	r3,20(sp)
10010784:	d9800715 	stw	r6,28(sp)
10010788:	da000615 	stw	r8,24(sp)
1001078c:	da400415 	stw	r9,16(sp)
10010790:	15ef883a 	add	r23,r2,r23
10010794:	0000e400 	call	10000e40 <__mulsi3>
10010798:	8809883a 	mov	r4,r17
1001079c:	b00b883a 	mov	r5,r22
100107a0:	d8800215 	stw	r2,8(sp)
100107a4:	0000e400 	call	10000e40 <__mulsi3>
100107a8:	b00b883a 	mov	r5,r22
100107ac:	a809883a 	mov	r4,r21
100107b0:	d8800315 	stw	r2,12(sp)
100107b4:	0000e400 	call	10000e40 <__mulsi3>
100107b8:	8009883a 	mov	r4,r16
100107bc:	a80b883a 	mov	r5,r21
100107c0:	1023883a 	mov	r17,r2
100107c4:	0000e400 	call	10000e40 <__mulsi3>
100107c8:	d9c00217 	ldw	r7,8(sp)
100107cc:	da800317 	ldw	r10,12(sp)
100107d0:	d8c00517 	ldw	r3,20(sp)
100107d4:	3808d43a 	srli	r4,r7,16
100107d8:	1285883a 	add	r2,r2,r10
100107dc:	d9800717 	ldw	r6,28(sp)
100107e0:	2085883a 	add	r2,r4,r2
100107e4:	da000617 	ldw	r8,24(sp)
100107e8:	da400417 	ldw	r9,16(sp)
100107ec:	1280022e 	bgeu	r2,r10,100107f8 <__muldf3+0x584>
100107f0:	01000074 	movhi	r4,1
100107f4:	8923883a 	add	r17,r17,r4
100107f8:	1008943a 	slli	r4,r2,16
100107fc:	39ffffcc 	andi	r7,r7,65535
10010800:	e4b9883a 	add	fp,fp,r18
10010804:	21cf883a 	add	r7,r4,r7
10010808:	e4e7803a 	cmpltu	r19,fp,r19
1001080c:	3d0f883a 	add	r7,r7,r20
10010810:	bf39883a 	add	fp,r23,fp
10010814:	99c9883a 	add	r4,r19,r7
10010818:	e5ef803a 	cmpltu	r23,fp,r23
1001081c:	490b883a 	add	r5,r9,r4
10010820:	1004d43a 	srli	r2,r2,16
10010824:	b965883a 	add	r18,r23,r5
10010828:	24c9803a 	cmpltu	r4,r4,r19
1001082c:	3d29803a 	cmpltu	r20,r7,r20
10010830:	a128b03a 	or	r20,r20,r4
10010834:	95ef803a 	cmpltu	r23,r18,r23
10010838:	2a53803a 	cmpltu	r9,r5,r9
1001083c:	a0a9883a 	add	r20,r20,r2
10010840:	4deeb03a 	or	r23,r9,r23
10010844:	a5ef883a 	add	r23,r20,r23
10010848:	bc63883a 	add	r17,r23,r17
1001084c:	e004927a 	slli	r2,fp,9
10010850:	d9000117 	ldw	r4,4(sp)
10010854:	882e927a 	slli	r23,r17,9
10010858:	9022d5fa 	srli	r17,r18,23
1001085c:	e038d5fa 	srli	fp,fp,23
10010860:	1104b03a 	or	r2,r2,r4
10010864:	9024927a 	slli	r18,r18,9
10010868:	1004c03a 	cmpne	r2,r2,zero
1001086c:	bc62b03a 	or	r17,r23,r17
10010870:	1738b03a 	or	fp,r2,fp
10010874:	8880402c 	andhi	r2,r17,256
10010878:	e4a4b03a 	or	r18,fp,r18
1001087c:	10000726 	beq	r2,zero,1001089c <__muldf3+0x628>
10010880:	9006d07a 	srli	r3,r18,1
10010884:	880497fa 	slli	r2,r17,31
10010888:	9480004c 	andi	r18,r18,1
1001088c:	8822d07a 	srli	r17,r17,1
10010890:	1ca4b03a 	or	r18,r3,r18
10010894:	14a4b03a 	or	r18,r2,r18
10010898:	4007883a 	mov	r3,r8
1001089c:	1880ffc4 	addi	r2,r3,1023
100108a0:	0080460e 	bge	zero,r2,100109bc <__muldf3+0x748>
100108a4:	910001cc 	andi	r4,r18,7
100108a8:	20000726 	beq	r4,zero,100108c8 <__muldf3+0x654>
100108ac:	910003cc 	andi	r4,r18,15
100108b0:	01400104 	movi	r5,4
100108b4:	21400426 	beq	r4,r5,100108c8 <__muldf3+0x654>
100108b8:	9149883a 	add	r4,r18,r5
100108bc:	24a5803a 	cmpltu	r18,r4,r18
100108c0:	8ca3883a 	add	r17,r17,r18
100108c4:	2025883a 	mov	r18,r4
100108c8:	8900402c 	andhi	r4,r17,256
100108cc:	20000426 	beq	r4,zero,100108e0 <__muldf3+0x66c>
100108d0:	18810004 	addi	r2,r3,1024
100108d4:	00ffc034 	movhi	r3,65280
100108d8:	18ffffc4 	addi	r3,r3,-1
100108dc:	88e2703a 	and	r17,r17,r3
100108e0:	00c1ff84 	movi	r3,2046
100108e4:	18bf1316 	blt	r3,r2,10010534 <__alt_data_end+0xf8010534>
100108e8:	882c977a 	slli	r22,r17,29
100108ec:	9024d0fa 	srli	r18,r18,3
100108f0:	8822927a 	slli	r17,r17,9
100108f4:	1081ffcc 	andi	r2,r2,2047
100108f8:	b4acb03a 	or	r22,r22,r18
100108fc:	8820d33a 	srli	r16,r17,12
10010900:	3027883a 	mov	r19,r6
10010904:	003eba06 	br	100103f0 <__alt_data_end+0xf80103f0>
10010908:	8080022c 	andhi	r2,r16,8
1001090c:	10000926 	beq	r2,zero,10010934 <__muldf3+0x6c0>
10010910:	8880022c 	andhi	r2,r17,8
10010914:	1000071e 	bne	r2,zero,10010934 <__muldf3+0x6c0>
10010918:	00800434 	movhi	r2,16
1001091c:	8c000234 	orhi	r16,r17,8
10010920:	10bfffc4 	addi	r2,r2,-1
10010924:	e027883a 	mov	r19,fp
10010928:	80a0703a 	and	r16,r16,r2
1001092c:	902d883a 	mov	r22,r18
10010930:	003f1706 	br	10010590 <__alt_data_end+0xf8010590>
10010934:	00800434 	movhi	r2,16
10010938:	84000234 	orhi	r16,r16,8
1001093c:	10bfffc4 	addi	r2,r2,-1
10010940:	80a0703a 	and	r16,r16,r2
10010944:	003f1206 	br	10010590 <__alt_data_end+0xf8010590>
10010948:	147ff604 	addi	r17,r2,-40
1001094c:	3462983a 	sll	r17,r6,r17
10010950:	0025883a 	mov	r18,zero
10010954:	003ef306 	br	10010524 <__alt_data_end+0xf8010524>
10010958:	3009883a 	mov	r4,r6
1001095c:	d9400215 	stw	r5,8(sp)
10010960:	d9800715 	stw	r6,28(sp)
10010964:	da400415 	stw	r9,16(sp)
10010968:	da800315 	stw	r10,12(sp)
1001096c:	00115e00 	call	100115e0 <__clzsi2>
10010970:	10800804 	addi	r2,r2,32
10010974:	da800317 	ldw	r10,12(sp)
10010978:	da400417 	ldw	r9,16(sp)
1001097c:	d9800717 	ldw	r6,28(sp)
10010980:	d9400217 	ldw	r5,8(sp)
10010984:	003edd06 	br	100104fc <__alt_data_end+0xf80104fc>
10010988:	143ff604 	addi	r16,r2,-40
1001098c:	ac20983a 	sll	r16,r21,r16
10010990:	002d883a 	mov	r22,zero
10010994:	003ec106 	br	1001049c <__alt_data_end+0xf801049c>
10010998:	d9800715 	stw	r6,28(sp)
1001099c:	d9c00215 	stw	r7,8(sp)
100109a0:	da400415 	stw	r9,16(sp)
100109a4:	00115e00 	call	100115e0 <__clzsi2>
100109a8:	10800804 	addi	r2,r2,32
100109ac:	da400417 	ldw	r9,16(sp)
100109b0:	d9c00217 	ldw	r7,8(sp)
100109b4:	d9800717 	ldw	r6,28(sp)
100109b8:	003eae06 	br	10010474 <__alt_data_end+0xf8010474>
100109bc:	00c00044 	movi	r3,1
100109c0:	1887c83a 	sub	r3,r3,r2
100109c4:	01000e04 	movi	r4,56
100109c8:	20fe8516 	blt	r4,r3,100103e0 <__alt_data_end+0xf80103e0>
100109cc:	010007c4 	movi	r4,31
100109d0:	20c01b16 	blt	r4,r3,10010a40 <__muldf3+0x7cc>
100109d4:	00800804 	movi	r2,32
100109d8:	10c5c83a 	sub	r2,r2,r3
100109dc:	888a983a 	sll	r5,r17,r2
100109e0:	90c8d83a 	srl	r4,r18,r3
100109e4:	9084983a 	sll	r2,r18,r2
100109e8:	88e2d83a 	srl	r17,r17,r3
100109ec:	2906b03a 	or	r3,r5,r4
100109f0:	1004c03a 	cmpne	r2,r2,zero
100109f4:	1886b03a 	or	r3,r3,r2
100109f8:	188001cc 	andi	r2,r3,7
100109fc:	10000726 	beq	r2,zero,10010a1c <__muldf3+0x7a8>
10010a00:	188003cc 	andi	r2,r3,15
10010a04:	01000104 	movi	r4,4
10010a08:	11000426 	beq	r2,r4,10010a1c <__muldf3+0x7a8>
10010a0c:	1805883a 	mov	r2,r3
10010a10:	10c00104 	addi	r3,r2,4
10010a14:	1885803a 	cmpltu	r2,r3,r2
10010a18:	88a3883a 	add	r17,r17,r2
10010a1c:	8880202c 	andhi	r2,r17,128
10010a20:	10001c26 	beq	r2,zero,10010a94 <__muldf3+0x820>
10010a24:	3027883a 	mov	r19,r6
10010a28:	00800044 	movi	r2,1
10010a2c:	0021883a 	mov	r16,zero
10010a30:	002d883a 	mov	r22,zero
10010a34:	003e6e06 	br	100103f0 <__alt_data_end+0xf80103f0>
10010a38:	4007883a 	mov	r3,r8
10010a3c:	003f9706 	br	1001089c <__alt_data_end+0xf801089c>
10010a40:	017ff844 	movi	r5,-31
10010a44:	2885c83a 	sub	r2,r5,r2
10010a48:	888ad83a 	srl	r5,r17,r2
10010a4c:	00800804 	movi	r2,32
10010a50:	18801a26 	beq	r3,r2,10010abc <__muldf3+0x848>
10010a54:	01001004 	movi	r4,64
10010a58:	20c7c83a 	sub	r3,r4,r3
10010a5c:	88e2983a 	sll	r17,r17,r3
10010a60:	8ca4b03a 	or	r18,r17,r18
10010a64:	9004c03a 	cmpne	r2,r18,zero
10010a68:	2884b03a 	or	r2,r5,r2
10010a6c:	144001cc 	andi	r17,r2,7
10010a70:	88000d1e 	bne	r17,zero,10010aa8 <__muldf3+0x834>
10010a74:	0021883a 	mov	r16,zero
10010a78:	102cd0fa 	srli	r22,r2,3
10010a7c:	3027883a 	mov	r19,r6
10010a80:	0005883a 	mov	r2,zero
10010a84:	b46cb03a 	or	r22,r22,r17
10010a88:	003e5906 	br	100103f0 <__alt_data_end+0xf80103f0>
10010a8c:	1007883a 	mov	r3,r2
10010a90:	0023883a 	mov	r17,zero
10010a94:	8820927a 	slli	r16,r17,9
10010a98:	1805883a 	mov	r2,r3
10010a9c:	8822977a 	slli	r17,r17,29
10010aa0:	8020d33a 	srli	r16,r16,12
10010aa4:	003ff406 	br	10010a78 <__alt_data_end+0xf8010a78>
10010aa8:	10c003cc 	andi	r3,r2,15
10010aac:	01000104 	movi	r4,4
10010ab0:	193ff626 	beq	r3,r4,10010a8c <__alt_data_end+0xf8010a8c>
10010ab4:	0023883a 	mov	r17,zero
10010ab8:	003fd506 	br	10010a10 <__alt_data_end+0xf8010a10>
10010abc:	0023883a 	mov	r17,zero
10010ac0:	003fe706 	br	10010a60 <__alt_data_end+0xf8010a60>
10010ac4:	00800434 	movhi	r2,16
10010ac8:	8c000234 	orhi	r16,r17,8
10010acc:	10bfffc4 	addi	r2,r2,-1
10010ad0:	3027883a 	mov	r19,r6
10010ad4:	80a0703a 	and	r16,r16,r2
10010ad8:	902d883a 	mov	r22,r18
10010adc:	003eac06 	br	10010590 <__alt_data_end+0xf8010590>

10010ae0 <__subdf3>:
10010ae0:	02000434 	movhi	r8,16
10010ae4:	423fffc4 	addi	r8,r8,-1
10010ae8:	defffb04 	addi	sp,sp,-20
10010aec:	2a14703a 	and	r10,r5,r8
10010af0:	3812d53a 	srli	r9,r7,20
10010af4:	3a10703a 	and	r8,r7,r8
10010af8:	2006d77a 	srli	r3,r4,29
10010afc:	3004d77a 	srli	r2,r6,29
10010b00:	dc000015 	stw	r16,0(sp)
10010b04:	501490fa 	slli	r10,r10,3
10010b08:	2820d53a 	srli	r16,r5,20
10010b0c:	401090fa 	slli	r8,r8,3
10010b10:	dc800215 	stw	r18,8(sp)
10010b14:	dc400115 	stw	r17,4(sp)
10010b18:	dfc00415 	stw	ra,16(sp)
10010b1c:	202290fa 	slli	r17,r4,3
10010b20:	dcc00315 	stw	r19,12(sp)
10010b24:	4a41ffcc 	andi	r9,r9,2047
10010b28:	0101ffc4 	movi	r4,2047
10010b2c:	2824d7fa 	srli	r18,r5,31
10010b30:	8401ffcc 	andi	r16,r16,2047
10010b34:	50c6b03a 	or	r3,r10,r3
10010b38:	380ed7fa 	srli	r7,r7,31
10010b3c:	408ab03a 	or	r5,r8,r2
10010b40:	300c90fa 	slli	r6,r6,3
10010b44:	49009626 	beq	r9,r4,10010da0 <__subdf3+0x2c0>
10010b48:	39c0005c 	xori	r7,r7,1
10010b4c:	8245c83a 	sub	r2,r16,r9
10010b50:	3c807426 	beq	r7,r18,10010d24 <__subdf3+0x244>
10010b54:	0080af0e 	bge	zero,r2,10010e14 <__subdf3+0x334>
10010b58:	48002a1e 	bne	r9,zero,10010c04 <__subdf3+0x124>
10010b5c:	2988b03a 	or	r4,r5,r6
10010b60:	20009a1e 	bne	r4,zero,10010dcc <__subdf3+0x2ec>
10010b64:	888001cc 	andi	r2,r17,7
10010b68:	10000726 	beq	r2,zero,10010b88 <__subdf3+0xa8>
10010b6c:	888003cc 	andi	r2,r17,15
10010b70:	01000104 	movi	r4,4
10010b74:	11000426 	beq	r2,r4,10010b88 <__subdf3+0xa8>
10010b78:	890b883a 	add	r5,r17,r4
10010b7c:	2c63803a 	cmpltu	r17,r5,r17
10010b80:	1c47883a 	add	r3,r3,r17
10010b84:	2823883a 	mov	r17,r5
10010b88:	1880202c 	andhi	r2,r3,128
10010b8c:	10005926 	beq	r2,zero,10010cf4 <__subdf3+0x214>
10010b90:	84000044 	addi	r16,r16,1
10010b94:	0081ffc4 	movi	r2,2047
10010b98:	8080be26 	beq	r16,r2,10010e94 <__subdf3+0x3b4>
10010b9c:	017fe034 	movhi	r5,65408
10010ba0:	297fffc4 	addi	r5,r5,-1
10010ba4:	1946703a 	and	r3,r3,r5
10010ba8:	1804977a 	slli	r2,r3,29
10010bac:	1806927a 	slli	r3,r3,9
10010bb0:	8822d0fa 	srli	r17,r17,3
10010bb4:	8401ffcc 	andi	r16,r16,2047
10010bb8:	180ad33a 	srli	r5,r3,12
10010bbc:	9100004c 	andi	r4,r18,1
10010bc0:	1444b03a 	or	r2,r2,r17
10010bc4:	80c1ffcc 	andi	r3,r16,2047
10010bc8:	1820953a 	slli	r16,r3,20
10010bcc:	20c03fcc 	andi	r3,r4,255
10010bd0:	180897fa 	slli	r4,r3,31
10010bd4:	00c00434 	movhi	r3,16
10010bd8:	18ffffc4 	addi	r3,r3,-1
10010bdc:	28c6703a 	and	r3,r5,r3
10010be0:	1c06b03a 	or	r3,r3,r16
10010be4:	1906b03a 	or	r3,r3,r4
10010be8:	dfc00417 	ldw	ra,16(sp)
10010bec:	dcc00317 	ldw	r19,12(sp)
10010bf0:	dc800217 	ldw	r18,8(sp)
10010bf4:	dc400117 	ldw	r17,4(sp)
10010bf8:	dc000017 	ldw	r16,0(sp)
10010bfc:	dec00504 	addi	sp,sp,20
10010c00:	f800283a 	ret
10010c04:	0101ffc4 	movi	r4,2047
10010c08:	813fd626 	beq	r16,r4,10010b64 <__alt_data_end+0xf8010b64>
10010c0c:	29402034 	orhi	r5,r5,128
10010c10:	01000e04 	movi	r4,56
10010c14:	2080a316 	blt	r4,r2,10010ea4 <__subdf3+0x3c4>
10010c18:	010007c4 	movi	r4,31
10010c1c:	2080c616 	blt	r4,r2,10010f38 <__subdf3+0x458>
10010c20:	01000804 	movi	r4,32
10010c24:	2089c83a 	sub	r4,r4,r2
10010c28:	2910983a 	sll	r8,r5,r4
10010c2c:	308ed83a 	srl	r7,r6,r2
10010c30:	3108983a 	sll	r4,r6,r4
10010c34:	2884d83a 	srl	r2,r5,r2
10010c38:	41ccb03a 	or	r6,r8,r7
10010c3c:	2008c03a 	cmpne	r4,r4,zero
10010c40:	310cb03a 	or	r6,r6,r4
10010c44:	898dc83a 	sub	r6,r17,r6
10010c48:	89a3803a 	cmpltu	r17,r17,r6
10010c4c:	1887c83a 	sub	r3,r3,r2
10010c50:	1c47c83a 	sub	r3,r3,r17
10010c54:	3023883a 	mov	r17,r6
10010c58:	1880202c 	andhi	r2,r3,128
10010c5c:	10002326 	beq	r2,zero,10010cec <__subdf3+0x20c>
10010c60:	04c02034 	movhi	r19,128
10010c64:	9cffffc4 	addi	r19,r19,-1
10010c68:	1ce6703a 	and	r19,r3,r19
10010c6c:	98007a26 	beq	r19,zero,10010e58 <__subdf3+0x378>
10010c70:	9809883a 	mov	r4,r19
10010c74:	00115e00 	call	100115e0 <__clzsi2>
10010c78:	113ffe04 	addi	r4,r2,-8
10010c7c:	00c007c4 	movi	r3,31
10010c80:	19007b16 	blt	r3,r4,10010e70 <__subdf3+0x390>
10010c84:	00800804 	movi	r2,32
10010c88:	1105c83a 	sub	r2,r2,r4
10010c8c:	8884d83a 	srl	r2,r17,r2
10010c90:	9906983a 	sll	r3,r19,r4
10010c94:	8922983a 	sll	r17,r17,r4
10010c98:	10c4b03a 	or	r2,r2,r3
10010c9c:	24007816 	blt	r4,r16,10010e80 <__subdf3+0x3a0>
10010ca0:	2421c83a 	sub	r16,r4,r16
10010ca4:	80c00044 	addi	r3,r16,1
10010ca8:	010007c4 	movi	r4,31
10010cac:	20c09516 	blt	r4,r3,10010f04 <__subdf3+0x424>
10010cb0:	01400804 	movi	r5,32
10010cb4:	28cbc83a 	sub	r5,r5,r3
10010cb8:	88c8d83a 	srl	r4,r17,r3
10010cbc:	8962983a 	sll	r17,r17,r5
10010cc0:	114a983a 	sll	r5,r2,r5
10010cc4:	10c6d83a 	srl	r3,r2,r3
10010cc8:	8804c03a 	cmpne	r2,r17,zero
10010ccc:	290ab03a 	or	r5,r5,r4
10010cd0:	28a2b03a 	or	r17,r5,r2
10010cd4:	0021883a 	mov	r16,zero
10010cd8:	003fa206 	br	10010b64 <__alt_data_end+0xf8010b64>
10010cdc:	2090b03a 	or	r8,r4,r2
10010ce0:	40018e26 	beq	r8,zero,1001131c <__subdf3+0x83c>
10010ce4:	1007883a 	mov	r3,r2
10010ce8:	2023883a 	mov	r17,r4
10010cec:	888001cc 	andi	r2,r17,7
10010cf0:	103f9e1e 	bne	r2,zero,10010b6c <__alt_data_end+0xf8010b6c>
10010cf4:	1804977a 	slli	r2,r3,29
10010cf8:	8822d0fa 	srli	r17,r17,3
10010cfc:	1810d0fa 	srli	r8,r3,3
10010d00:	9100004c 	andi	r4,r18,1
10010d04:	1444b03a 	or	r2,r2,r17
10010d08:	00c1ffc4 	movi	r3,2047
10010d0c:	80c02826 	beq	r16,r3,10010db0 <__subdf3+0x2d0>
10010d10:	01400434 	movhi	r5,16
10010d14:	297fffc4 	addi	r5,r5,-1
10010d18:	80e0703a 	and	r16,r16,r3
10010d1c:	414a703a 	and	r5,r8,r5
10010d20:	003fa806 	br	10010bc4 <__alt_data_end+0xf8010bc4>
10010d24:	0080630e 	bge	zero,r2,10010eb4 <__subdf3+0x3d4>
10010d28:	48003026 	beq	r9,zero,10010dec <__subdf3+0x30c>
10010d2c:	0101ffc4 	movi	r4,2047
10010d30:	813f8c26 	beq	r16,r4,10010b64 <__alt_data_end+0xf8010b64>
10010d34:	29402034 	orhi	r5,r5,128
10010d38:	01000e04 	movi	r4,56
10010d3c:	2080a90e 	bge	r4,r2,10010fe4 <__subdf3+0x504>
10010d40:	298cb03a 	or	r6,r5,r6
10010d44:	3012c03a 	cmpne	r9,r6,zero
10010d48:	0005883a 	mov	r2,zero
10010d4c:	4c53883a 	add	r9,r9,r17
10010d50:	4c63803a 	cmpltu	r17,r9,r17
10010d54:	10c7883a 	add	r3,r2,r3
10010d58:	88c7883a 	add	r3,r17,r3
10010d5c:	4823883a 	mov	r17,r9
10010d60:	1880202c 	andhi	r2,r3,128
10010d64:	1000d026 	beq	r2,zero,100110a8 <__subdf3+0x5c8>
10010d68:	84000044 	addi	r16,r16,1
10010d6c:	0081ffc4 	movi	r2,2047
10010d70:	8080fe26 	beq	r16,r2,1001116c <__subdf3+0x68c>
10010d74:	00bfe034 	movhi	r2,65408
10010d78:	10bfffc4 	addi	r2,r2,-1
10010d7c:	1886703a 	and	r3,r3,r2
10010d80:	880ad07a 	srli	r5,r17,1
10010d84:	180497fa 	slli	r2,r3,31
10010d88:	8900004c 	andi	r4,r17,1
10010d8c:	2922b03a 	or	r17,r5,r4
10010d90:	1806d07a 	srli	r3,r3,1
10010d94:	1462b03a 	or	r17,r2,r17
10010d98:	3825883a 	mov	r18,r7
10010d9c:	003f7106 	br	10010b64 <__alt_data_end+0xf8010b64>
10010da0:	2984b03a 	or	r2,r5,r6
10010da4:	103f6826 	beq	r2,zero,10010b48 <__alt_data_end+0xf8010b48>
10010da8:	39c03fcc 	andi	r7,r7,255
10010dac:	003f6706 	br	10010b4c <__alt_data_end+0xf8010b4c>
10010db0:	4086b03a 	or	r3,r8,r2
10010db4:	18015226 	beq	r3,zero,10011300 <__subdf3+0x820>
10010db8:	00c00434 	movhi	r3,16
10010dbc:	41400234 	orhi	r5,r8,8
10010dc0:	18ffffc4 	addi	r3,r3,-1
10010dc4:	28ca703a 	and	r5,r5,r3
10010dc8:	003f7e06 	br	10010bc4 <__alt_data_end+0xf8010bc4>
10010dcc:	10bfffc4 	addi	r2,r2,-1
10010dd0:	1000491e 	bne	r2,zero,10010ef8 <__subdf3+0x418>
10010dd4:	898fc83a 	sub	r7,r17,r6
10010dd8:	89e3803a 	cmpltu	r17,r17,r7
10010ddc:	1947c83a 	sub	r3,r3,r5
10010de0:	1c47c83a 	sub	r3,r3,r17
10010de4:	3823883a 	mov	r17,r7
10010de8:	003f9b06 	br	10010c58 <__alt_data_end+0xf8010c58>
10010dec:	2988b03a 	or	r4,r5,r6
10010df0:	203f5c26 	beq	r4,zero,10010b64 <__alt_data_end+0xf8010b64>
10010df4:	10bfffc4 	addi	r2,r2,-1
10010df8:	1000931e 	bne	r2,zero,10011048 <__subdf3+0x568>
10010dfc:	898d883a 	add	r6,r17,r6
10010e00:	3463803a 	cmpltu	r17,r6,r17
10010e04:	1947883a 	add	r3,r3,r5
10010e08:	88c7883a 	add	r3,r17,r3
10010e0c:	3023883a 	mov	r17,r6
10010e10:	003fd306 	br	10010d60 <__alt_data_end+0xf8010d60>
10010e14:	1000541e 	bne	r2,zero,10010f68 <__subdf3+0x488>
10010e18:	80800044 	addi	r2,r16,1
10010e1c:	1081ffcc 	andi	r2,r2,2047
10010e20:	01000044 	movi	r4,1
10010e24:	2080a20e 	bge	r4,r2,100110b0 <__subdf3+0x5d0>
10010e28:	8989c83a 	sub	r4,r17,r6
10010e2c:	8905803a 	cmpltu	r2,r17,r4
10010e30:	1967c83a 	sub	r19,r3,r5
10010e34:	98a7c83a 	sub	r19,r19,r2
10010e38:	9880202c 	andhi	r2,r19,128
10010e3c:	10006326 	beq	r2,zero,10010fcc <__subdf3+0x4ec>
10010e40:	3463c83a 	sub	r17,r6,r17
10010e44:	28c7c83a 	sub	r3,r5,r3
10010e48:	344d803a 	cmpltu	r6,r6,r17
10010e4c:	19a7c83a 	sub	r19,r3,r6
10010e50:	3825883a 	mov	r18,r7
10010e54:	983f861e 	bne	r19,zero,10010c70 <__alt_data_end+0xf8010c70>
10010e58:	8809883a 	mov	r4,r17
10010e5c:	00115e00 	call	100115e0 <__clzsi2>
10010e60:	10800804 	addi	r2,r2,32
10010e64:	113ffe04 	addi	r4,r2,-8
10010e68:	00c007c4 	movi	r3,31
10010e6c:	193f850e 	bge	r3,r4,10010c84 <__alt_data_end+0xf8010c84>
10010e70:	10bff604 	addi	r2,r2,-40
10010e74:	8884983a 	sll	r2,r17,r2
10010e78:	0023883a 	mov	r17,zero
10010e7c:	243f880e 	bge	r4,r16,10010ca0 <__alt_data_end+0xf8010ca0>
10010e80:	00ffe034 	movhi	r3,65408
10010e84:	18ffffc4 	addi	r3,r3,-1
10010e88:	8121c83a 	sub	r16,r16,r4
10010e8c:	10c6703a 	and	r3,r2,r3
10010e90:	003f3406 	br	10010b64 <__alt_data_end+0xf8010b64>
10010e94:	9100004c 	andi	r4,r18,1
10010e98:	000b883a 	mov	r5,zero
10010e9c:	0005883a 	mov	r2,zero
10010ea0:	003f4806 	br	10010bc4 <__alt_data_end+0xf8010bc4>
10010ea4:	298cb03a 	or	r6,r5,r6
10010ea8:	300cc03a 	cmpne	r6,r6,zero
10010eac:	0005883a 	mov	r2,zero
10010eb0:	003f6406 	br	10010c44 <__alt_data_end+0xf8010c44>
10010eb4:	10009a1e 	bne	r2,zero,10011120 <__subdf3+0x640>
10010eb8:	82400044 	addi	r9,r16,1
10010ebc:	4881ffcc 	andi	r2,r9,2047
10010ec0:	02800044 	movi	r10,1
10010ec4:	5080670e 	bge	r10,r2,10011064 <__subdf3+0x584>
10010ec8:	0081ffc4 	movi	r2,2047
10010ecc:	4880af26 	beq	r9,r2,1001118c <__subdf3+0x6ac>
10010ed0:	898d883a 	add	r6,r17,r6
10010ed4:	1945883a 	add	r2,r3,r5
10010ed8:	3447803a 	cmpltu	r3,r6,r17
10010edc:	1887883a 	add	r3,r3,r2
10010ee0:	182297fa 	slli	r17,r3,31
10010ee4:	300cd07a 	srli	r6,r6,1
10010ee8:	1806d07a 	srli	r3,r3,1
10010eec:	4821883a 	mov	r16,r9
10010ef0:	89a2b03a 	or	r17,r17,r6
10010ef4:	003f1b06 	br	10010b64 <__alt_data_end+0xf8010b64>
10010ef8:	0101ffc4 	movi	r4,2047
10010efc:	813f441e 	bne	r16,r4,10010c10 <__alt_data_end+0xf8010c10>
10010f00:	003f1806 	br	10010b64 <__alt_data_end+0xf8010b64>
10010f04:	843ff844 	addi	r16,r16,-31
10010f08:	01400804 	movi	r5,32
10010f0c:	1408d83a 	srl	r4,r2,r16
10010f10:	19405026 	beq	r3,r5,10011054 <__subdf3+0x574>
10010f14:	01401004 	movi	r5,64
10010f18:	28c7c83a 	sub	r3,r5,r3
10010f1c:	10c4983a 	sll	r2,r2,r3
10010f20:	88a2b03a 	or	r17,r17,r2
10010f24:	8822c03a 	cmpne	r17,r17,zero
10010f28:	2462b03a 	or	r17,r4,r17
10010f2c:	0007883a 	mov	r3,zero
10010f30:	0021883a 	mov	r16,zero
10010f34:	003f6d06 	br	10010cec <__alt_data_end+0xf8010cec>
10010f38:	11fff804 	addi	r7,r2,-32
10010f3c:	01000804 	movi	r4,32
10010f40:	29ced83a 	srl	r7,r5,r7
10010f44:	11004526 	beq	r2,r4,1001105c <__subdf3+0x57c>
10010f48:	01001004 	movi	r4,64
10010f4c:	2089c83a 	sub	r4,r4,r2
10010f50:	2904983a 	sll	r2,r5,r4
10010f54:	118cb03a 	or	r6,r2,r6
10010f58:	300cc03a 	cmpne	r6,r6,zero
10010f5c:	398cb03a 	or	r6,r7,r6
10010f60:	0005883a 	mov	r2,zero
10010f64:	003f3706 	br	10010c44 <__alt_data_end+0xf8010c44>
10010f68:	80002a26 	beq	r16,zero,10011014 <__subdf3+0x534>
10010f6c:	0101ffc4 	movi	r4,2047
10010f70:	49006626 	beq	r9,r4,1001110c <__subdf3+0x62c>
10010f74:	0085c83a 	sub	r2,zero,r2
10010f78:	18c02034 	orhi	r3,r3,128
10010f7c:	01000e04 	movi	r4,56
10010f80:	20807e16 	blt	r4,r2,1001117c <__subdf3+0x69c>
10010f84:	010007c4 	movi	r4,31
10010f88:	2080e716 	blt	r4,r2,10011328 <__subdf3+0x848>
10010f8c:	01000804 	movi	r4,32
10010f90:	2089c83a 	sub	r4,r4,r2
10010f94:	1914983a 	sll	r10,r3,r4
10010f98:	8890d83a 	srl	r8,r17,r2
10010f9c:	8908983a 	sll	r4,r17,r4
10010fa0:	1884d83a 	srl	r2,r3,r2
10010fa4:	5222b03a 	or	r17,r10,r8
10010fa8:	2006c03a 	cmpne	r3,r4,zero
10010fac:	88e2b03a 	or	r17,r17,r3
10010fb0:	3463c83a 	sub	r17,r6,r17
10010fb4:	2885c83a 	sub	r2,r5,r2
10010fb8:	344d803a 	cmpltu	r6,r6,r17
10010fbc:	1187c83a 	sub	r3,r2,r6
10010fc0:	4821883a 	mov	r16,r9
10010fc4:	3825883a 	mov	r18,r7
10010fc8:	003f2306 	br	10010c58 <__alt_data_end+0xf8010c58>
10010fcc:	24d0b03a 	or	r8,r4,r19
10010fd0:	40001b1e 	bne	r8,zero,10011040 <__subdf3+0x560>
10010fd4:	0005883a 	mov	r2,zero
10010fd8:	0009883a 	mov	r4,zero
10010fdc:	0021883a 	mov	r16,zero
10010fe0:	003f4906 	br	10010d08 <__alt_data_end+0xf8010d08>
10010fe4:	010007c4 	movi	r4,31
10010fe8:	20803a16 	blt	r4,r2,100110d4 <__subdf3+0x5f4>
10010fec:	01000804 	movi	r4,32
10010ff0:	2089c83a 	sub	r4,r4,r2
10010ff4:	2912983a 	sll	r9,r5,r4
10010ff8:	3090d83a 	srl	r8,r6,r2
10010ffc:	3108983a 	sll	r4,r6,r4
10011000:	2884d83a 	srl	r2,r5,r2
10011004:	4a12b03a 	or	r9,r9,r8
10011008:	2008c03a 	cmpne	r4,r4,zero
1001100c:	4912b03a 	or	r9,r9,r4
10011010:	003f4e06 	br	10010d4c <__alt_data_end+0xf8010d4c>
10011014:	1c48b03a 	or	r4,r3,r17
10011018:	20003c26 	beq	r4,zero,1001110c <__subdf3+0x62c>
1001101c:	0084303a 	nor	r2,zero,r2
10011020:	1000381e 	bne	r2,zero,10011104 <__subdf3+0x624>
10011024:	3463c83a 	sub	r17,r6,r17
10011028:	28c5c83a 	sub	r2,r5,r3
1001102c:	344d803a 	cmpltu	r6,r6,r17
10011030:	1187c83a 	sub	r3,r2,r6
10011034:	4821883a 	mov	r16,r9
10011038:	3825883a 	mov	r18,r7
1001103c:	003f0606 	br	10010c58 <__alt_data_end+0xf8010c58>
10011040:	2023883a 	mov	r17,r4
10011044:	003f0906 	br	10010c6c <__alt_data_end+0xf8010c6c>
10011048:	0101ffc4 	movi	r4,2047
1001104c:	813f3a1e 	bne	r16,r4,10010d38 <__alt_data_end+0xf8010d38>
10011050:	003ec406 	br	10010b64 <__alt_data_end+0xf8010b64>
10011054:	0005883a 	mov	r2,zero
10011058:	003fb106 	br	10010f20 <__alt_data_end+0xf8010f20>
1001105c:	0005883a 	mov	r2,zero
10011060:	003fbc06 	br	10010f54 <__alt_data_end+0xf8010f54>
10011064:	1c44b03a 	or	r2,r3,r17
10011068:	80008e1e 	bne	r16,zero,100112a4 <__subdf3+0x7c4>
1001106c:	1000c826 	beq	r2,zero,10011390 <__subdf3+0x8b0>
10011070:	2984b03a 	or	r2,r5,r6
10011074:	103ebb26 	beq	r2,zero,10010b64 <__alt_data_end+0xf8010b64>
10011078:	8989883a 	add	r4,r17,r6
1001107c:	1945883a 	add	r2,r3,r5
10011080:	2447803a 	cmpltu	r3,r4,r17
10011084:	1887883a 	add	r3,r3,r2
10011088:	1880202c 	andhi	r2,r3,128
1001108c:	2023883a 	mov	r17,r4
10011090:	103f1626 	beq	r2,zero,10010cec <__alt_data_end+0xf8010cec>
10011094:	00bfe034 	movhi	r2,65408
10011098:	10bfffc4 	addi	r2,r2,-1
1001109c:	5021883a 	mov	r16,r10
100110a0:	1886703a 	and	r3,r3,r2
100110a4:	003eaf06 	br	10010b64 <__alt_data_end+0xf8010b64>
100110a8:	3825883a 	mov	r18,r7
100110ac:	003f0f06 	br	10010cec <__alt_data_end+0xf8010cec>
100110b0:	1c44b03a 	or	r2,r3,r17
100110b4:	8000251e 	bne	r16,zero,1001114c <__subdf3+0x66c>
100110b8:	1000661e 	bne	r2,zero,10011254 <__subdf3+0x774>
100110bc:	2990b03a 	or	r8,r5,r6
100110c0:	40009626 	beq	r8,zero,1001131c <__subdf3+0x83c>
100110c4:	2807883a 	mov	r3,r5
100110c8:	3023883a 	mov	r17,r6
100110cc:	3825883a 	mov	r18,r7
100110d0:	003ea406 	br	10010b64 <__alt_data_end+0xf8010b64>
100110d4:	127ff804 	addi	r9,r2,-32
100110d8:	01000804 	movi	r4,32
100110dc:	2a52d83a 	srl	r9,r5,r9
100110e0:	11008c26 	beq	r2,r4,10011314 <__subdf3+0x834>
100110e4:	01001004 	movi	r4,64
100110e8:	2085c83a 	sub	r2,r4,r2
100110ec:	2884983a 	sll	r2,r5,r2
100110f0:	118cb03a 	or	r6,r2,r6
100110f4:	300cc03a 	cmpne	r6,r6,zero
100110f8:	4992b03a 	or	r9,r9,r6
100110fc:	0005883a 	mov	r2,zero
10011100:	003f1206 	br	10010d4c <__alt_data_end+0xf8010d4c>
10011104:	0101ffc4 	movi	r4,2047
10011108:	493f9c1e 	bne	r9,r4,10010f7c <__alt_data_end+0xf8010f7c>
1001110c:	2807883a 	mov	r3,r5
10011110:	3023883a 	mov	r17,r6
10011114:	4821883a 	mov	r16,r9
10011118:	3825883a 	mov	r18,r7
1001111c:	003e9106 	br	10010b64 <__alt_data_end+0xf8010b64>
10011120:	80001f1e 	bne	r16,zero,100111a0 <__subdf3+0x6c0>
10011124:	1c48b03a 	or	r4,r3,r17
10011128:	20005a26 	beq	r4,zero,10011294 <__subdf3+0x7b4>
1001112c:	0084303a 	nor	r2,zero,r2
10011130:	1000561e 	bne	r2,zero,1001128c <__subdf3+0x7ac>
10011134:	89a3883a 	add	r17,r17,r6
10011138:	1945883a 	add	r2,r3,r5
1001113c:	898d803a 	cmpltu	r6,r17,r6
10011140:	3087883a 	add	r3,r6,r2
10011144:	4821883a 	mov	r16,r9
10011148:	003f0506 	br	10010d60 <__alt_data_end+0xf8010d60>
1001114c:	10002b1e 	bne	r2,zero,100111fc <__subdf3+0x71c>
10011150:	2984b03a 	or	r2,r5,r6
10011154:	10008026 	beq	r2,zero,10011358 <__subdf3+0x878>
10011158:	2807883a 	mov	r3,r5
1001115c:	3023883a 	mov	r17,r6
10011160:	3825883a 	mov	r18,r7
10011164:	0401ffc4 	movi	r16,2047
10011168:	003e7e06 	br	10010b64 <__alt_data_end+0xf8010b64>
1001116c:	3809883a 	mov	r4,r7
10011170:	0011883a 	mov	r8,zero
10011174:	0005883a 	mov	r2,zero
10011178:	003ee306 	br	10010d08 <__alt_data_end+0xf8010d08>
1001117c:	1c62b03a 	or	r17,r3,r17
10011180:	8822c03a 	cmpne	r17,r17,zero
10011184:	0005883a 	mov	r2,zero
10011188:	003f8906 	br	10010fb0 <__alt_data_end+0xf8010fb0>
1001118c:	3809883a 	mov	r4,r7
10011190:	4821883a 	mov	r16,r9
10011194:	0011883a 	mov	r8,zero
10011198:	0005883a 	mov	r2,zero
1001119c:	003eda06 	br	10010d08 <__alt_data_end+0xf8010d08>
100111a0:	0101ffc4 	movi	r4,2047
100111a4:	49003b26 	beq	r9,r4,10011294 <__subdf3+0x7b4>
100111a8:	0085c83a 	sub	r2,zero,r2
100111ac:	18c02034 	orhi	r3,r3,128
100111b0:	01000e04 	movi	r4,56
100111b4:	20806e16 	blt	r4,r2,10011370 <__subdf3+0x890>
100111b8:	010007c4 	movi	r4,31
100111bc:	20807716 	blt	r4,r2,1001139c <__subdf3+0x8bc>
100111c0:	01000804 	movi	r4,32
100111c4:	2089c83a 	sub	r4,r4,r2
100111c8:	1914983a 	sll	r10,r3,r4
100111cc:	8890d83a 	srl	r8,r17,r2
100111d0:	8908983a 	sll	r4,r17,r4
100111d4:	1884d83a 	srl	r2,r3,r2
100111d8:	5222b03a 	or	r17,r10,r8
100111dc:	2006c03a 	cmpne	r3,r4,zero
100111e0:	88e2b03a 	or	r17,r17,r3
100111e4:	89a3883a 	add	r17,r17,r6
100111e8:	1145883a 	add	r2,r2,r5
100111ec:	898d803a 	cmpltu	r6,r17,r6
100111f0:	3087883a 	add	r3,r6,r2
100111f4:	4821883a 	mov	r16,r9
100111f8:	003ed906 	br	10010d60 <__alt_data_end+0xf8010d60>
100111fc:	2984b03a 	or	r2,r5,r6
10011200:	10004226 	beq	r2,zero,1001130c <__subdf3+0x82c>
10011204:	1808d0fa 	srli	r4,r3,3
10011208:	8822d0fa 	srli	r17,r17,3
1001120c:	1806977a 	slli	r3,r3,29
10011210:	2080022c 	andhi	r2,r4,8
10011214:	1c62b03a 	or	r17,r3,r17
10011218:	10000826 	beq	r2,zero,1001123c <__subdf3+0x75c>
1001121c:	2812d0fa 	srli	r9,r5,3
10011220:	4880022c 	andhi	r2,r9,8
10011224:	1000051e 	bne	r2,zero,1001123c <__subdf3+0x75c>
10011228:	300cd0fa 	srli	r6,r6,3
1001122c:	2804977a 	slli	r2,r5,29
10011230:	4809883a 	mov	r4,r9
10011234:	3825883a 	mov	r18,r7
10011238:	11a2b03a 	or	r17,r2,r6
1001123c:	8806d77a 	srli	r3,r17,29
10011240:	200890fa 	slli	r4,r4,3
10011244:	882290fa 	slli	r17,r17,3
10011248:	0401ffc4 	movi	r16,2047
1001124c:	1906b03a 	or	r3,r3,r4
10011250:	003e4406 	br	10010b64 <__alt_data_end+0xf8010b64>
10011254:	2984b03a 	or	r2,r5,r6
10011258:	103e4226 	beq	r2,zero,10010b64 <__alt_data_end+0xf8010b64>
1001125c:	8989c83a 	sub	r4,r17,r6
10011260:	8911803a 	cmpltu	r8,r17,r4
10011264:	1945c83a 	sub	r2,r3,r5
10011268:	1205c83a 	sub	r2,r2,r8
1001126c:	1200202c 	andhi	r8,r2,128
10011270:	403e9a26 	beq	r8,zero,10010cdc <__alt_data_end+0xf8010cdc>
10011274:	3463c83a 	sub	r17,r6,r17
10011278:	28c5c83a 	sub	r2,r5,r3
1001127c:	344d803a 	cmpltu	r6,r6,r17
10011280:	1187c83a 	sub	r3,r2,r6
10011284:	3825883a 	mov	r18,r7
10011288:	003e3606 	br	10010b64 <__alt_data_end+0xf8010b64>
1001128c:	0101ffc4 	movi	r4,2047
10011290:	493fc71e 	bne	r9,r4,100111b0 <__alt_data_end+0xf80111b0>
10011294:	2807883a 	mov	r3,r5
10011298:	3023883a 	mov	r17,r6
1001129c:	4821883a 	mov	r16,r9
100112a0:	003e3006 	br	10010b64 <__alt_data_end+0xf8010b64>
100112a4:	10003626 	beq	r2,zero,10011380 <__subdf3+0x8a0>
100112a8:	2984b03a 	or	r2,r5,r6
100112ac:	10001726 	beq	r2,zero,1001130c <__subdf3+0x82c>
100112b0:	1808d0fa 	srli	r4,r3,3
100112b4:	8822d0fa 	srli	r17,r17,3
100112b8:	1806977a 	slli	r3,r3,29
100112bc:	2080022c 	andhi	r2,r4,8
100112c0:	1c62b03a 	or	r17,r3,r17
100112c4:	10000726 	beq	r2,zero,100112e4 <__subdf3+0x804>
100112c8:	2812d0fa 	srli	r9,r5,3
100112cc:	4880022c 	andhi	r2,r9,8
100112d0:	1000041e 	bne	r2,zero,100112e4 <__subdf3+0x804>
100112d4:	300cd0fa 	srli	r6,r6,3
100112d8:	2804977a 	slli	r2,r5,29
100112dc:	4809883a 	mov	r4,r9
100112e0:	11a2b03a 	or	r17,r2,r6
100112e4:	8806d77a 	srli	r3,r17,29
100112e8:	200890fa 	slli	r4,r4,3
100112ec:	882290fa 	slli	r17,r17,3
100112f0:	3825883a 	mov	r18,r7
100112f4:	1906b03a 	or	r3,r3,r4
100112f8:	0401ffc4 	movi	r16,2047
100112fc:	003e1906 	br	10010b64 <__alt_data_end+0xf8010b64>
10011300:	000b883a 	mov	r5,zero
10011304:	0005883a 	mov	r2,zero
10011308:	003e2e06 	br	10010bc4 <__alt_data_end+0xf8010bc4>
1001130c:	0401ffc4 	movi	r16,2047
10011310:	003e1406 	br	10010b64 <__alt_data_end+0xf8010b64>
10011314:	0005883a 	mov	r2,zero
10011318:	003f7506 	br	100110f0 <__alt_data_end+0xf80110f0>
1001131c:	0005883a 	mov	r2,zero
10011320:	0009883a 	mov	r4,zero
10011324:	003e7806 	br	10010d08 <__alt_data_end+0xf8010d08>
10011328:	123ff804 	addi	r8,r2,-32
1001132c:	01000804 	movi	r4,32
10011330:	1a10d83a 	srl	r8,r3,r8
10011334:	11002526 	beq	r2,r4,100113cc <__subdf3+0x8ec>
10011338:	01001004 	movi	r4,64
1001133c:	2085c83a 	sub	r2,r4,r2
10011340:	1884983a 	sll	r2,r3,r2
10011344:	1444b03a 	or	r2,r2,r17
10011348:	1004c03a 	cmpne	r2,r2,zero
1001134c:	40a2b03a 	or	r17,r8,r2
10011350:	0005883a 	mov	r2,zero
10011354:	003f1606 	br	10010fb0 <__alt_data_end+0xf8010fb0>
10011358:	02000434 	movhi	r8,16
1001135c:	0009883a 	mov	r4,zero
10011360:	423fffc4 	addi	r8,r8,-1
10011364:	00bfffc4 	movi	r2,-1
10011368:	0401ffc4 	movi	r16,2047
1001136c:	003e6606 	br	10010d08 <__alt_data_end+0xf8010d08>
10011370:	1c62b03a 	or	r17,r3,r17
10011374:	8822c03a 	cmpne	r17,r17,zero
10011378:	0005883a 	mov	r2,zero
1001137c:	003f9906 	br	100111e4 <__alt_data_end+0xf80111e4>
10011380:	2807883a 	mov	r3,r5
10011384:	3023883a 	mov	r17,r6
10011388:	0401ffc4 	movi	r16,2047
1001138c:	003df506 	br	10010b64 <__alt_data_end+0xf8010b64>
10011390:	2807883a 	mov	r3,r5
10011394:	3023883a 	mov	r17,r6
10011398:	003df206 	br	10010b64 <__alt_data_end+0xf8010b64>
1001139c:	123ff804 	addi	r8,r2,-32
100113a0:	01000804 	movi	r4,32
100113a4:	1a10d83a 	srl	r8,r3,r8
100113a8:	11000a26 	beq	r2,r4,100113d4 <__subdf3+0x8f4>
100113ac:	01001004 	movi	r4,64
100113b0:	2085c83a 	sub	r2,r4,r2
100113b4:	1884983a 	sll	r2,r3,r2
100113b8:	1444b03a 	or	r2,r2,r17
100113bc:	1004c03a 	cmpne	r2,r2,zero
100113c0:	40a2b03a 	or	r17,r8,r2
100113c4:	0005883a 	mov	r2,zero
100113c8:	003f8606 	br	100111e4 <__alt_data_end+0xf80111e4>
100113cc:	0005883a 	mov	r2,zero
100113d0:	003fdc06 	br	10011344 <__alt_data_end+0xf8011344>
100113d4:	0005883a 	mov	r2,zero
100113d8:	003ff706 	br	100113b8 <__alt_data_end+0xf80113b8>

100113dc <__fixdfsi>:
100113dc:	280cd53a 	srli	r6,r5,20
100113e0:	00c00434 	movhi	r3,16
100113e4:	18ffffc4 	addi	r3,r3,-1
100113e8:	3181ffcc 	andi	r6,r6,2047
100113ec:	01c0ff84 	movi	r7,1022
100113f0:	28c6703a 	and	r3,r5,r3
100113f4:	280ad7fa 	srli	r5,r5,31
100113f8:	3980120e 	bge	r7,r6,10011444 <__fixdfsi+0x68>
100113fc:	00810744 	movi	r2,1053
10011400:	11800c16 	blt	r2,r6,10011434 <__fixdfsi+0x58>
10011404:	00810cc4 	movi	r2,1075
10011408:	1185c83a 	sub	r2,r2,r6
1001140c:	01c007c4 	movi	r7,31
10011410:	18c00434 	orhi	r3,r3,16
10011414:	38800d16 	blt	r7,r2,1001144c <__fixdfsi+0x70>
10011418:	31befb44 	addi	r6,r6,-1043
1001141c:	2084d83a 	srl	r2,r4,r2
10011420:	1986983a 	sll	r3,r3,r6
10011424:	1884b03a 	or	r2,r3,r2
10011428:	28000726 	beq	r5,zero,10011448 <__fixdfsi+0x6c>
1001142c:	0085c83a 	sub	r2,zero,r2
10011430:	f800283a 	ret
10011434:	00a00034 	movhi	r2,32768
10011438:	10bfffc4 	addi	r2,r2,-1
1001143c:	2885883a 	add	r2,r5,r2
10011440:	f800283a 	ret
10011444:	0005883a 	mov	r2,zero
10011448:	f800283a 	ret
1001144c:	008104c4 	movi	r2,1043
10011450:	1185c83a 	sub	r2,r2,r6
10011454:	1884d83a 	srl	r2,r3,r2
10011458:	003ff306 	br	10011428 <__alt_data_end+0xf8011428>

1001145c <__floatsidf>:
1001145c:	defffd04 	addi	sp,sp,-12
10011460:	dfc00215 	stw	ra,8(sp)
10011464:	dc400115 	stw	r17,4(sp)
10011468:	dc000015 	stw	r16,0(sp)
1001146c:	20002b26 	beq	r4,zero,1001151c <__floatsidf+0xc0>
10011470:	2023883a 	mov	r17,r4
10011474:	2020d7fa 	srli	r16,r4,31
10011478:	20002d16 	blt	r4,zero,10011530 <__floatsidf+0xd4>
1001147c:	8809883a 	mov	r4,r17
10011480:	00115e00 	call	100115e0 <__clzsi2>
10011484:	01410784 	movi	r5,1054
10011488:	288bc83a 	sub	r5,r5,r2
1001148c:	01010cc4 	movi	r4,1075
10011490:	2149c83a 	sub	r4,r4,r5
10011494:	00c007c4 	movi	r3,31
10011498:	1900160e 	bge	r3,r4,100114f4 <__floatsidf+0x98>
1001149c:	00c104c4 	movi	r3,1043
100114a0:	1947c83a 	sub	r3,r3,r5
100114a4:	88c6983a 	sll	r3,r17,r3
100114a8:	00800434 	movhi	r2,16
100114ac:	10bfffc4 	addi	r2,r2,-1
100114b0:	1886703a 	and	r3,r3,r2
100114b4:	2941ffcc 	andi	r5,r5,2047
100114b8:	800d883a 	mov	r6,r16
100114bc:	0005883a 	mov	r2,zero
100114c0:	280a953a 	slli	r5,r5,20
100114c4:	31803fcc 	andi	r6,r6,255
100114c8:	01000434 	movhi	r4,16
100114cc:	300c97fa 	slli	r6,r6,31
100114d0:	213fffc4 	addi	r4,r4,-1
100114d4:	1906703a 	and	r3,r3,r4
100114d8:	1946b03a 	or	r3,r3,r5
100114dc:	1986b03a 	or	r3,r3,r6
100114e0:	dfc00217 	ldw	ra,8(sp)
100114e4:	dc400117 	ldw	r17,4(sp)
100114e8:	dc000017 	ldw	r16,0(sp)
100114ec:	dec00304 	addi	sp,sp,12
100114f0:	f800283a 	ret
100114f4:	00c002c4 	movi	r3,11
100114f8:	1887c83a 	sub	r3,r3,r2
100114fc:	88c6d83a 	srl	r3,r17,r3
10011500:	8904983a 	sll	r2,r17,r4
10011504:	01000434 	movhi	r4,16
10011508:	213fffc4 	addi	r4,r4,-1
1001150c:	2941ffcc 	andi	r5,r5,2047
10011510:	1906703a 	and	r3,r3,r4
10011514:	800d883a 	mov	r6,r16
10011518:	003fe906 	br	100114c0 <__alt_data_end+0xf80114c0>
1001151c:	000d883a 	mov	r6,zero
10011520:	000b883a 	mov	r5,zero
10011524:	0007883a 	mov	r3,zero
10011528:	0005883a 	mov	r2,zero
1001152c:	003fe406 	br	100114c0 <__alt_data_end+0xf80114c0>
10011530:	0123c83a 	sub	r17,zero,r4
10011534:	003fd106 	br	1001147c <__alt_data_end+0xf801147c>

10011538 <__floatunsidf>:
10011538:	defffe04 	addi	sp,sp,-8
1001153c:	dc000015 	stw	r16,0(sp)
10011540:	dfc00115 	stw	ra,4(sp)
10011544:	2021883a 	mov	r16,r4
10011548:	20002226 	beq	r4,zero,100115d4 <__floatunsidf+0x9c>
1001154c:	00115e00 	call	100115e0 <__clzsi2>
10011550:	01010784 	movi	r4,1054
10011554:	2089c83a 	sub	r4,r4,r2
10011558:	01810cc4 	movi	r6,1075
1001155c:	310dc83a 	sub	r6,r6,r4
10011560:	00c007c4 	movi	r3,31
10011564:	1980120e 	bge	r3,r6,100115b0 <__floatunsidf+0x78>
10011568:	00c104c4 	movi	r3,1043
1001156c:	1907c83a 	sub	r3,r3,r4
10011570:	80ca983a 	sll	r5,r16,r3
10011574:	00800434 	movhi	r2,16
10011578:	10bfffc4 	addi	r2,r2,-1
1001157c:	2101ffcc 	andi	r4,r4,2047
10011580:	0021883a 	mov	r16,zero
10011584:	288a703a 	and	r5,r5,r2
10011588:	2008953a 	slli	r4,r4,20
1001158c:	00c00434 	movhi	r3,16
10011590:	18ffffc4 	addi	r3,r3,-1
10011594:	28c6703a 	and	r3,r5,r3
10011598:	8005883a 	mov	r2,r16
1001159c:	1906b03a 	or	r3,r3,r4
100115a0:	dfc00117 	ldw	ra,4(sp)
100115a4:	dc000017 	ldw	r16,0(sp)
100115a8:	dec00204 	addi	sp,sp,8
100115ac:	f800283a 	ret
100115b0:	00c002c4 	movi	r3,11
100115b4:	188bc83a 	sub	r5,r3,r2
100115b8:	814ad83a 	srl	r5,r16,r5
100115bc:	00c00434 	movhi	r3,16
100115c0:	18ffffc4 	addi	r3,r3,-1
100115c4:	81a0983a 	sll	r16,r16,r6
100115c8:	2101ffcc 	andi	r4,r4,2047
100115cc:	28ca703a 	and	r5,r5,r3
100115d0:	003fed06 	br	10011588 <__alt_data_end+0xf8011588>
100115d4:	0009883a 	mov	r4,zero
100115d8:	000b883a 	mov	r5,zero
100115dc:	003fea06 	br	10011588 <__alt_data_end+0xf8011588>

100115e0 <__clzsi2>:
100115e0:	00bfffd4 	movui	r2,65535
100115e4:	11000536 	bltu	r2,r4,100115fc <__clzsi2+0x1c>
100115e8:	00803fc4 	movi	r2,255
100115ec:	11000f36 	bltu	r2,r4,1001162c <__clzsi2+0x4c>
100115f0:	00800804 	movi	r2,32
100115f4:	0007883a 	mov	r3,zero
100115f8:	00000506 	br	10011610 <__clzsi2+0x30>
100115fc:	00804034 	movhi	r2,256
10011600:	10bfffc4 	addi	r2,r2,-1
10011604:	11000c2e 	bgeu	r2,r4,10011638 <__clzsi2+0x58>
10011608:	00800204 	movi	r2,8
1001160c:	00c00604 	movi	r3,24
10011610:	20c8d83a 	srl	r4,r4,r3
10011614:	00c40074 	movhi	r3,4097
10011618:	18d05704 	addi	r3,r3,16732
1001161c:	1909883a 	add	r4,r3,r4
10011620:	20c00003 	ldbu	r3,0(r4)
10011624:	10c5c83a 	sub	r2,r2,r3
10011628:	f800283a 	ret
1001162c:	00800604 	movi	r2,24
10011630:	00c00204 	movi	r3,8
10011634:	003ff606 	br	10011610 <__alt_data_end+0xf8011610>
10011638:	00800404 	movi	r2,16
1001163c:	1007883a 	mov	r3,r2
10011640:	003ff306 	br	10011610 <__alt_data_end+0xf8011610>

10011644 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011644:	defffe04 	addi	sp,sp,-8
10011648:	dfc00115 	stw	ra,4(sp)
1001164c:	df000015 	stw	fp,0(sp)
10011650:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011654:	d0a00d17 	ldw	r2,-32716(gp)
10011658:	10000326 	beq	r2,zero,10011668 <alt_get_errno+0x24>
1001165c:	d0a00d17 	ldw	r2,-32716(gp)
10011660:	103ee83a 	callr	r2
10011664:	00000106 	br	1001166c <alt_get_errno+0x28>
10011668:	d0a78d04 	addi	r2,gp,-25036
}
1001166c:	e037883a 	mov	sp,fp
10011670:	dfc00117 	ldw	ra,4(sp)
10011674:	df000017 	ldw	fp,0(sp)
10011678:	dec00204 	addi	sp,sp,8
1001167c:	f800283a 	ret

10011680 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
10011680:	defffb04 	addi	sp,sp,-20
10011684:	dfc00415 	stw	ra,16(sp)
10011688:	df000315 	stw	fp,12(sp)
1001168c:	df000304 	addi	fp,sp,12
10011690:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
10011694:	e0bfff17 	ldw	r2,-4(fp)
10011698:	10000816 	blt	r2,zero,100116bc <close+0x3c>
1001169c:	01400304 	movi	r5,12
100116a0:	e13fff17 	ldw	r4,-4(fp)
100116a4:	0000e400 	call	10000e40 <__mulsi3>
100116a8:	1007883a 	mov	r3,r2
100116ac:	00840074 	movhi	r2,4097
100116b0:	10938f04 	addi	r2,r2,20028
100116b4:	1885883a 	add	r2,r3,r2
100116b8:	00000106 	br	100116c0 <close+0x40>
100116bc:	0005883a 	mov	r2,zero
100116c0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
100116c4:	e0bffd17 	ldw	r2,-12(fp)
100116c8:	10001926 	beq	r2,zero,10011730 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
100116cc:	e0bffd17 	ldw	r2,-12(fp)
100116d0:	10800017 	ldw	r2,0(r2)
100116d4:	10800417 	ldw	r2,16(r2)
100116d8:	10000626 	beq	r2,zero,100116f4 <close+0x74>
100116dc:	e0bffd17 	ldw	r2,-12(fp)
100116e0:	10800017 	ldw	r2,0(r2)
100116e4:	10800417 	ldw	r2,16(r2)
100116e8:	e13ffd17 	ldw	r4,-12(fp)
100116ec:	103ee83a 	callr	r2
100116f0:	00000106 	br	100116f8 <close+0x78>
100116f4:	0005883a 	mov	r2,zero
100116f8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
100116fc:	e13fff17 	ldw	r4,-4(fp)
10011700:	0011d680 	call	10011d68 <alt_release_fd>
    if (rval < 0)
10011704:	e0bffe17 	ldw	r2,-8(fp)
10011708:	1000070e 	bge	r2,zero,10011728 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1001170c:	00116440 	call	10011644 <alt_get_errno>
10011710:	1007883a 	mov	r3,r2
10011714:	e0bffe17 	ldw	r2,-8(fp)
10011718:	0085c83a 	sub	r2,zero,r2
1001171c:	18800015 	stw	r2,0(r3)
      return -1;
10011720:	00bfffc4 	movi	r2,-1
10011724:	00000706 	br	10011744 <close+0xc4>
    }
    return 0;
10011728:	0005883a 	mov	r2,zero
1001172c:	00000506 	br	10011744 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
10011730:	00116440 	call	10011644 <alt_get_errno>
10011734:	1007883a 	mov	r3,r2
10011738:	00801444 	movi	r2,81
1001173c:	18800015 	stw	r2,0(r3)
    return -1;
10011740:	00bfffc4 	movi	r2,-1
  }
}
10011744:	e037883a 	mov	sp,fp
10011748:	dfc00117 	ldw	ra,4(sp)
1001174c:	df000017 	ldw	fp,0(sp)
10011750:	dec00204 	addi	sp,sp,8
10011754:	f800283a 	ret

10011758 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
10011758:	defffc04 	addi	sp,sp,-16
1001175c:	df000315 	stw	fp,12(sp)
10011760:	df000304 	addi	fp,sp,12
10011764:	e13ffd15 	stw	r4,-12(fp)
10011768:	e17ffe15 	stw	r5,-8(fp)
1001176c:	e1bfff15 	stw	r6,-4(fp)
  return len;
10011770:	e0bfff17 	ldw	r2,-4(fp)
}
10011774:	e037883a 	mov	sp,fp
10011778:	df000017 	ldw	fp,0(sp)
1001177c:	dec00104 	addi	sp,sp,4
10011780:	f800283a 	ret

10011784 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011784:	defffe04 	addi	sp,sp,-8
10011788:	dfc00115 	stw	ra,4(sp)
1001178c:	df000015 	stw	fp,0(sp)
10011790:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011794:	d0a00d17 	ldw	r2,-32716(gp)
10011798:	10000326 	beq	r2,zero,100117a8 <alt_get_errno+0x24>
1001179c:	d0a00d17 	ldw	r2,-32716(gp)
100117a0:	103ee83a 	callr	r2
100117a4:	00000106 	br	100117ac <alt_get_errno+0x28>
100117a8:	d0a78d04 	addi	r2,gp,-25036
}
100117ac:	e037883a 	mov	sp,fp
100117b0:	dfc00117 	ldw	ra,4(sp)
100117b4:	df000017 	ldw	fp,0(sp)
100117b8:	dec00204 	addi	sp,sp,8
100117bc:	f800283a 	ret

100117c0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
100117c0:	defffb04 	addi	sp,sp,-20
100117c4:	dfc00415 	stw	ra,16(sp)
100117c8:	df000315 	stw	fp,12(sp)
100117cc:	df000304 	addi	fp,sp,12
100117d0:	e13ffe15 	stw	r4,-8(fp)
100117d4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
100117d8:	e0bffe17 	ldw	r2,-8(fp)
100117dc:	10000816 	blt	r2,zero,10011800 <fstat+0x40>
100117e0:	01400304 	movi	r5,12
100117e4:	e13ffe17 	ldw	r4,-8(fp)
100117e8:	0000e400 	call	10000e40 <__mulsi3>
100117ec:	1007883a 	mov	r3,r2
100117f0:	00840074 	movhi	r2,4097
100117f4:	10938f04 	addi	r2,r2,20028
100117f8:	1885883a 	add	r2,r3,r2
100117fc:	00000106 	br	10011804 <fstat+0x44>
10011800:	0005883a 	mov	r2,zero
10011804:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
10011808:	e0bffd17 	ldw	r2,-12(fp)
1001180c:	10001026 	beq	r2,zero,10011850 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
10011810:	e0bffd17 	ldw	r2,-12(fp)
10011814:	10800017 	ldw	r2,0(r2)
10011818:	10800817 	ldw	r2,32(r2)
1001181c:	10000726 	beq	r2,zero,1001183c <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
10011820:	e0bffd17 	ldw	r2,-12(fp)
10011824:	10800017 	ldw	r2,0(r2)
10011828:	10800817 	ldw	r2,32(r2)
1001182c:	e17fff17 	ldw	r5,-4(fp)
10011830:	e13ffd17 	ldw	r4,-12(fp)
10011834:	103ee83a 	callr	r2
10011838:	00000a06 	br	10011864 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1001183c:	e0bfff17 	ldw	r2,-4(fp)
10011840:	00c80004 	movi	r3,8192
10011844:	10c00115 	stw	r3,4(r2)
      return 0;
10011848:	0005883a 	mov	r2,zero
1001184c:	00000506 	br	10011864 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10011850:	00117840 	call	10011784 <alt_get_errno>
10011854:	1007883a 	mov	r3,r2
10011858:	00801444 	movi	r2,81
1001185c:	18800015 	stw	r2,0(r3)
    return -1;
10011860:	00bfffc4 	movi	r2,-1
  }
}
10011864:	e037883a 	mov	sp,fp
10011868:	dfc00117 	ldw	ra,4(sp)
1001186c:	df000017 	ldw	fp,0(sp)
10011870:	dec00204 	addi	sp,sp,8
10011874:	f800283a 	ret

10011878 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011878:	defffe04 	addi	sp,sp,-8
1001187c:	dfc00115 	stw	ra,4(sp)
10011880:	df000015 	stw	fp,0(sp)
10011884:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011888:	d0a00d17 	ldw	r2,-32716(gp)
1001188c:	10000326 	beq	r2,zero,1001189c <alt_get_errno+0x24>
10011890:	d0a00d17 	ldw	r2,-32716(gp)
10011894:	103ee83a 	callr	r2
10011898:	00000106 	br	100118a0 <alt_get_errno+0x28>
1001189c:	d0a78d04 	addi	r2,gp,-25036
}
100118a0:	e037883a 	mov	sp,fp
100118a4:	dfc00117 	ldw	ra,4(sp)
100118a8:	df000017 	ldw	fp,0(sp)
100118ac:	dec00204 	addi	sp,sp,8
100118b0:	f800283a 	ret

100118b4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
100118b4:	deffed04 	addi	sp,sp,-76
100118b8:	dfc01215 	stw	ra,72(sp)
100118bc:	df001115 	stw	fp,68(sp)
100118c0:	df001104 	addi	fp,sp,68
100118c4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
100118c8:	e0bfff17 	ldw	r2,-4(fp)
100118cc:	10000816 	blt	r2,zero,100118f0 <isatty+0x3c>
100118d0:	01400304 	movi	r5,12
100118d4:	e13fff17 	ldw	r4,-4(fp)
100118d8:	0000e400 	call	10000e40 <__mulsi3>
100118dc:	1007883a 	mov	r3,r2
100118e0:	00840074 	movhi	r2,4097
100118e4:	10938f04 	addi	r2,r2,20028
100118e8:	1885883a 	add	r2,r3,r2
100118ec:	00000106 	br	100118f4 <isatty+0x40>
100118f0:	0005883a 	mov	r2,zero
100118f4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
100118f8:	e0bfef17 	ldw	r2,-68(fp)
100118fc:	10000e26 	beq	r2,zero,10011938 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
10011900:	e0bfef17 	ldw	r2,-68(fp)
10011904:	10800017 	ldw	r2,0(r2)
10011908:	10800817 	ldw	r2,32(r2)
1001190c:	1000021e 	bne	r2,zero,10011918 <isatty+0x64>
    {
      return 1;
10011910:	00800044 	movi	r2,1
10011914:	00000d06 	br	1001194c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
10011918:	e0bff004 	addi	r2,fp,-64
1001191c:	100b883a 	mov	r5,r2
10011920:	e13fff17 	ldw	r4,-4(fp)
10011924:	00117c00 	call	100117c0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
10011928:	e0bff117 	ldw	r2,-60(fp)
1001192c:	10880020 	cmpeqi	r2,r2,8192
10011930:	10803fcc 	andi	r2,r2,255
10011934:	00000506 	br	1001194c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10011938:	00118780 	call	10011878 <alt_get_errno>
1001193c:	1007883a 	mov	r3,r2
10011940:	00801444 	movi	r2,81
10011944:	18800015 	stw	r2,0(r3)
    return 0;
10011948:	0005883a 	mov	r2,zero
  }
}
1001194c:	e037883a 	mov	sp,fp
10011950:	dfc00117 	ldw	ra,4(sp)
10011954:	df000017 	ldw	fp,0(sp)
10011958:	dec00204 	addi	sp,sp,8
1001195c:	f800283a 	ret

10011960 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
10011960:	defffc04 	addi	sp,sp,-16
10011964:	df000315 	stw	fp,12(sp)
10011968:	df000304 	addi	fp,sp,12
1001196c:	e13ffd15 	stw	r4,-12(fp)
10011970:	e17ffe15 	stw	r5,-8(fp)
10011974:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
10011978:	e0fffe17 	ldw	r3,-8(fp)
1001197c:	e0bffd17 	ldw	r2,-12(fp)
10011980:	18800c26 	beq	r3,r2,100119b4 <alt_load_section+0x54>
  {
    while( to != end )
10011984:	00000806 	br	100119a8 <alt_load_section+0x48>
    {
      *to++ = *from++;
10011988:	e0bffe17 	ldw	r2,-8(fp)
1001198c:	10c00104 	addi	r3,r2,4
10011990:	e0fffe15 	stw	r3,-8(fp)
10011994:	e0fffd17 	ldw	r3,-12(fp)
10011998:	19000104 	addi	r4,r3,4
1001199c:	e13ffd15 	stw	r4,-12(fp)
100119a0:	18c00017 	ldw	r3,0(r3)
100119a4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
100119a8:	e0fffe17 	ldw	r3,-8(fp)
100119ac:	e0bfff17 	ldw	r2,-4(fp)
100119b0:	18bff51e 	bne	r3,r2,10011988 <__alt_data_end+0xf8011988>
    {
      *to++ = *from++;
    }
  }
}
100119b4:	0001883a 	nop
100119b8:	e037883a 	mov	sp,fp
100119bc:	df000017 	ldw	fp,0(sp)
100119c0:	dec00104 	addi	sp,sp,4
100119c4:	f800283a 	ret

100119c8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
100119c8:	defffe04 	addi	sp,sp,-8
100119cc:	dfc00115 	stw	ra,4(sp)
100119d0:	df000015 	stw	fp,0(sp)
100119d4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
100119d8:	01840074 	movhi	r6,4097
100119dc:	31981904 	addi	r6,r6,24676
100119e0:	01440074 	movhi	r5,4097
100119e4:	2950a404 	addi	r5,r5,17040
100119e8:	01040074 	movhi	r4,4097
100119ec:	21181904 	addi	r4,r4,24676
100119f0:	00119600 	call	10011960 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
100119f4:	01840034 	movhi	r6,4096
100119f8:	31808c04 	addi	r6,r6,560
100119fc:	01440034 	movhi	r5,4096
10011a00:	29400804 	addi	r5,r5,32
10011a04:	01040034 	movhi	r4,4096
10011a08:	21000804 	addi	r4,r4,32
10011a0c:	00119600 	call	10011960 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
10011a10:	01840074 	movhi	r6,4097
10011a14:	3190a404 	addi	r6,r6,17040
10011a18:	01440074 	movhi	r5,4097
10011a1c:	294f9904 	addi	r5,r5,15972
10011a20:	01040074 	movhi	r4,4097
10011a24:	210f9904 	addi	r4,r4,15972
10011a28:	00119600 	call	10011960 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
10011a2c:	0012dac0 	call	10012dac <alt_dcache_flush_all>
  alt_icache_flush_all();
10011a30:	0012f6c0 	call	10012f6c <alt_icache_flush_all>
}
10011a34:	0001883a 	nop
10011a38:	e037883a 	mov	sp,fp
10011a3c:	dfc00117 	ldw	ra,4(sp)
10011a40:	df000017 	ldw	fp,0(sp)
10011a44:	dec00204 	addi	sp,sp,8
10011a48:	f800283a 	ret

10011a4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011a4c:	defffe04 	addi	sp,sp,-8
10011a50:	dfc00115 	stw	ra,4(sp)
10011a54:	df000015 	stw	fp,0(sp)
10011a58:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011a5c:	d0a00d17 	ldw	r2,-32716(gp)
10011a60:	10000326 	beq	r2,zero,10011a70 <alt_get_errno+0x24>
10011a64:	d0a00d17 	ldw	r2,-32716(gp)
10011a68:	103ee83a 	callr	r2
10011a6c:	00000106 	br	10011a74 <alt_get_errno+0x28>
10011a70:	d0a78d04 	addi	r2,gp,-25036
}
10011a74:	e037883a 	mov	sp,fp
10011a78:	dfc00117 	ldw	ra,4(sp)
10011a7c:	df000017 	ldw	fp,0(sp)
10011a80:	dec00204 	addi	sp,sp,8
10011a84:	f800283a 	ret

10011a88 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
10011a88:	defff904 	addi	sp,sp,-28
10011a8c:	dfc00615 	stw	ra,24(sp)
10011a90:	df000515 	stw	fp,20(sp)
10011a94:	df000504 	addi	fp,sp,20
10011a98:	e13ffd15 	stw	r4,-12(fp)
10011a9c:	e17ffe15 	stw	r5,-8(fp)
10011aa0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
10011aa4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011aa8:	e0bffd17 	ldw	r2,-12(fp)
10011aac:	10000816 	blt	r2,zero,10011ad0 <lseek+0x48>
10011ab0:	01400304 	movi	r5,12
10011ab4:	e13ffd17 	ldw	r4,-12(fp)
10011ab8:	0000e400 	call	10000e40 <__mulsi3>
10011abc:	1007883a 	mov	r3,r2
10011ac0:	00840074 	movhi	r2,4097
10011ac4:	10938f04 	addi	r2,r2,20028
10011ac8:	1885883a 	add	r2,r3,r2
10011acc:	00000106 	br	10011ad4 <lseek+0x4c>
10011ad0:	0005883a 	mov	r2,zero
10011ad4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
10011ad8:	e0bffc17 	ldw	r2,-16(fp)
10011adc:	10001026 	beq	r2,zero,10011b20 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10011ae0:	e0bffc17 	ldw	r2,-16(fp)
10011ae4:	10800017 	ldw	r2,0(r2)
10011ae8:	10800717 	ldw	r2,28(r2)
10011aec:	10000926 	beq	r2,zero,10011b14 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10011af0:	e0bffc17 	ldw	r2,-16(fp)
10011af4:	10800017 	ldw	r2,0(r2)
10011af8:	10800717 	ldw	r2,28(r2)
10011afc:	e1bfff17 	ldw	r6,-4(fp)
10011b00:	e17ffe17 	ldw	r5,-8(fp)
10011b04:	e13ffc17 	ldw	r4,-16(fp)
10011b08:	103ee83a 	callr	r2
10011b0c:	e0bffb15 	stw	r2,-20(fp)
10011b10:	00000506 	br	10011b28 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
10011b14:	00bfde84 	movi	r2,-134
10011b18:	e0bffb15 	stw	r2,-20(fp)
10011b1c:	00000206 	br	10011b28 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
10011b20:	00bfebc4 	movi	r2,-81
10011b24:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
10011b28:	e0bffb17 	ldw	r2,-20(fp)
10011b2c:	1000070e 	bge	r2,zero,10011b4c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
10011b30:	0011a4c0 	call	10011a4c <alt_get_errno>
10011b34:	1007883a 	mov	r3,r2
10011b38:	e0bffb17 	ldw	r2,-20(fp)
10011b3c:	0085c83a 	sub	r2,zero,r2
10011b40:	18800015 	stw	r2,0(r3)
    rc = -1;
10011b44:	00bfffc4 	movi	r2,-1
10011b48:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
10011b4c:	e0bffb17 	ldw	r2,-20(fp)
}
10011b50:	e037883a 	mov	sp,fp
10011b54:	dfc00117 	ldw	ra,4(sp)
10011b58:	df000017 	ldw	fp,0(sp)
10011b5c:	dec00204 	addi	sp,sp,8
10011b60:	f800283a 	ret

10011b64 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
10011b64:	defffd04 	addi	sp,sp,-12
10011b68:	dfc00215 	stw	ra,8(sp)
10011b6c:	df000115 	stw	fp,4(sp)
10011b70:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
10011b74:	0009883a 	mov	r4,zero
10011b78:	001203c0 	call	1001203c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
10011b7c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
10011b80:	00120740 	call	10012074 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
10011b84:	01840074 	movhi	r6,4097
10011b88:	31909a04 	addi	r6,r6,17000
10011b8c:	01440074 	movhi	r5,4097
10011b90:	29509a04 	addi	r5,r5,17000
10011b94:	01040074 	movhi	r4,4097
10011b98:	21109a04 	addi	r4,r4,17000
10011b9c:	00133100 	call	10013310 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
10011ba0:	0012eac0 	call	10012eac <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
10011ba4:	01040074 	movhi	r4,4097
10011ba8:	210bc304 	addi	r4,r4,12044
10011bac:	0013ad00 	call	10013ad0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
10011bb0:	d0a78e17 	ldw	r2,-25032(gp)
10011bb4:	d0e78f17 	ldw	r3,-25028(gp)
10011bb8:	d1279017 	ldw	r4,-25024(gp)
10011bbc:	200d883a 	mov	r6,r4
10011bc0:	180b883a 	mov	r5,r3
10011bc4:	1009883a 	mov	r4,r2
10011bc8:	0000c400 	call	10000c40 <main>
10011bcc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10011bd0:	01000044 	movi	r4,1
10011bd4:	00116800 	call	10011680 <close>
  exit (result);
10011bd8:	e13fff17 	ldw	r4,-4(fp)
10011bdc:	0013ae40 	call	10013ae4 <exit>

10011be0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10011be0:	defffe04 	addi	sp,sp,-8
10011be4:	df000115 	stw	fp,4(sp)
10011be8:	df000104 	addi	fp,sp,4
10011bec:	e13fff15 	stw	r4,-4(fp)
}
10011bf0:	0001883a 	nop
10011bf4:	e037883a 	mov	sp,fp
10011bf8:	df000017 	ldw	fp,0(sp)
10011bfc:	dec00104 	addi	sp,sp,4
10011c00:	f800283a 	ret

10011c04 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
10011c04:	defffe04 	addi	sp,sp,-8
10011c08:	df000115 	stw	fp,4(sp)
10011c0c:	df000104 	addi	fp,sp,4
10011c10:	e13fff15 	stw	r4,-4(fp)
}
10011c14:	0001883a 	nop
10011c18:	e037883a 	mov	sp,fp
10011c1c:	df000017 	ldw	fp,0(sp)
10011c20:	dec00104 	addi	sp,sp,4
10011c24:	f800283a 	ret

10011c28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011c28:	defffe04 	addi	sp,sp,-8
10011c2c:	dfc00115 	stw	ra,4(sp)
10011c30:	df000015 	stw	fp,0(sp)
10011c34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011c38:	d0a00d17 	ldw	r2,-32716(gp)
10011c3c:	10000326 	beq	r2,zero,10011c4c <alt_get_errno+0x24>
10011c40:	d0a00d17 	ldw	r2,-32716(gp)
10011c44:	103ee83a 	callr	r2
10011c48:	00000106 	br	10011c50 <alt_get_errno+0x28>
10011c4c:	d0a78d04 	addi	r2,gp,-25036
}
10011c50:	e037883a 	mov	sp,fp
10011c54:	dfc00117 	ldw	ra,4(sp)
10011c58:	df000017 	ldw	fp,0(sp)
10011c5c:	dec00204 	addi	sp,sp,8
10011c60:	f800283a 	ret

10011c64 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
10011c64:	defff904 	addi	sp,sp,-28
10011c68:	dfc00615 	stw	ra,24(sp)
10011c6c:	df000515 	stw	fp,20(sp)
10011c70:	df000504 	addi	fp,sp,20
10011c74:	e13ffd15 	stw	r4,-12(fp)
10011c78:	e17ffe15 	stw	r5,-8(fp)
10011c7c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011c80:	e0bffd17 	ldw	r2,-12(fp)
10011c84:	10000816 	blt	r2,zero,10011ca8 <read+0x44>
10011c88:	01400304 	movi	r5,12
10011c8c:	e13ffd17 	ldw	r4,-12(fp)
10011c90:	0000e400 	call	10000e40 <__mulsi3>
10011c94:	1007883a 	mov	r3,r2
10011c98:	00840074 	movhi	r2,4097
10011c9c:	10938f04 	addi	r2,r2,20028
10011ca0:	1885883a 	add	r2,r3,r2
10011ca4:	00000106 	br	10011cac <read+0x48>
10011ca8:	0005883a 	mov	r2,zero
10011cac:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10011cb0:	e0bffb17 	ldw	r2,-20(fp)
10011cb4:	10002226 	beq	r2,zero,10011d40 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10011cb8:	e0bffb17 	ldw	r2,-20(fp)
10011cbc:	10800217 	ldw	r2,8(r2)
10011cc0:	108000cc 	andi	r2,r2,3
10011cc4:	10800060 	cmpeqi	r2,r2,1
10011cc8:	1000181e 	bne	r2,zero,10011d2c <read+0xc8>
        (fd->dev->read))
10011ccc:	e0bffb17 	ldw	r2,-20(fp)
10011cd0:	10800017 	ldw	r2,0(r2)
10011cd4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10011cd8:	10001426 	beq	r2,zero,10011d2c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
10011cdc:	e0bffb17 	ldw	r2,-20(fp)
10011ce0:	10800017 	ldw	r2,0(r2)
10011ce4:	10800517 	ldw	r2,20(r2)
10011ce8:	e0ffff17 	ldw	r3,-4(fp)
10011cec:	180d883a 	mov	r6,r3
10011cf0:	e17ffe17 	ldw	r5,-8(fp)
10011cf4:	e13ffb17 	ldw	r4,-20(fp)
10011cf8:	103ee83a 	callr	r2
10011cfc:	e0bffc15 	stw	r2,-16(fp)
10011d00:	e0bffc17 	ldw	r2,-16(fp)
10011d04:	1000070e 	bge	r2,zero,10011d24 <read+0xc0>
        {
          ALT_ERRNO = -rval;
10011d08:	0011c280 	call	10011c28 <alt_get_errno>
10011d0c:	1007883a 	mov	r3,r2
10011d10:	e0bffc17 	ldw	r2,-16(fp)
10011d14:	0085c83a 	sub	r2,zero,r2
10011d18:	18800015 	stw	r2,0(r3)
          return -1;
10011d1c:	00bfffc4 	movi	r2,-1
10011d20:	00000c06 	br	10011d54 <read+0xf0>
        }
        return rval;
10011d24:	e0bffc17 	ldw	r2,-16(fp)
10011d28:	00000a06 	br	10011d54 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
10011d2c:	0011c280 	call	10011c28 <alt_get_errno>
10011d30:	1007883a 	mov	r3,r2
10011d34:	00800344 	movi	r2,13
10011d38:	18800015 	stw	r2,0(r3)
10011d3c:	00000406 	br	10011d50 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
10011d40:	0011c280 	call	10011c28 <alt_get_errno>
10011d44:	1007883a 	mov	r3,r2
10011d48:	00801444 	movi	r2,81
10011d4c:	18800015 	stw	r2,0(r3)
  }
  return -1;
10011d50:	00bfffc4 	movi	r2,-1
}
10011d54:	e037883a 	mov	sp,fp
10011d58:	dfc00117 	ldw	ra,4(sp)
10011d5c:	df000017 	ldw	fp,0(sp)
10011d60:	dec00204 	addi	sp,sp,8
10011d64:	f800283a 	ret

10011d68 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
10011d68:	defffc04 	addi	sp,sp,-16
10011d6c:	dfc00315 	stw	ra,12(sp)
10011d70:	df000215 	stw	fp,8(sp)
10011d74:	dc000115 	stw	r16,4(sp)
10011d78:	df000204 	addi	fp,sp,8
10011d7c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
10011d80:	e0bffe17 	ldw	r2,-8(fp)
10011d84:	108000d0 	cmplti	r2,r2,3
10011d88:	1000111e 	bne	r2,zero,10011dd0 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
10011d8c:	04040074 	movhi	r16,4097
10011d90:	84138f04 	addi	r16,r16,20028
10011d94:	e0bffe17 	ldw	r2,-8(fp)
10011d98:	01400304 	movi	r5,12
10011d9c:	1009883a 	mov	r4,r2
10011da0:	0000e400 	call	10000e40 <__mulsi3>
10011da4:	8085883a 	add	r2,r16,r2
10011da8:	10800204 	addi	r2,r2,8
10011dac:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
10011db0:	04040074 	movhi	r16,4097
10011db4:	84138f04 	addi	r16,r16,20028
10011db8:	e0bffe17 	ldw	r2,-8(fp)
10011dbc:	01400304 	movi	r5,12
10011dc0:	1009883a 	mov	r4,r2
10011dc4:	0000e400 	call	10000e40 <__mulsi3>
10011dc8:	8085883a 	add	r2,r16,r2
10011dcc:	10000015 	stw	zero,0(r2)
  }
}
10011dd0:	0001883a 	nop
10011dd4:	e6ffff04 	addi	sp,fp,-4
10011dd8:	dfc00217 	ldw	ra,8(sp)
10011ddc:	df000117 	ldw	fp,4(sp)
10011de0:	dc000017 	ldw	r16,0(sp)
10011de4:	dec00304 	addi	sp,sp,12
10011de8:	f800283a 	ret

10011dec <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
10011dec:	defff904 	addi	sp,sp,-28
10011df0:	df000615 	stw	fp,24(sp)
10011df4:	df000604 	addi	fp,sp,24
10011df8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10011dfc:	0005303a 	rdctl	r2,status
10011e00:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10011e04:	e0fffe17 	ldw	r3,-8(fp)
10011e08:	00bfff84 	movi	r2,-2
10011e0c:	1884703a 	and	r2,r3,r2
10011e10:	1001703a 	wrctl	status,r2
  
  return context;
10011e14:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
10011e18:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
10011e1c:	d0a00e17 	ldw	r2,-32712(gp)
10011e20:	10c000c4 	addi	r3,r2,3
10011e24:	00bfff04 	movi	r2,-4
10011e28:	1884703a 	and	r2,r3,r2
10011e2c:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
10011e30:	d0e00e17 	ldw	r3,-32712(gp)
10011e34:	e0bfff17 	ldw	r2,-4(fp)
10011e38:	1887883a 	add	r3,r3,r2
10011e3c:	00860034 	movhi	r2,6144
10011e40:	10800004 	addi	r2,r2,0
10011e44:	10c0062e 	bgeu	r2,r3,10011e60 <sbrk+0x74>
10011e48:	e0bffb17 	ldw	r2,-20(fp)
10011e4c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10011e50:	e0bffa17 	ldw	r2,-24(fp)
10011e54:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
10011e58:	00bfffc4 	movi	r2,-1
10011e5c:	00000b06 	br	10011e8c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
10011e60:	d0a00e17 	ldw	r2,-32712(gp)
10011e64:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
10011e68:	d0e00e17 	ldw	r3,-32712(gp)
10011e6c:	e0bfff17 	ldw	r2,-4(fp)
10011e70:	1885883a 	add	r2,r3,r2
10011e74:	d0a00e15 	stw	r2,-32712(gp)
10011e78:	e0bffb17 	ldw	r2,-20(fp)
10011e7c:	e0bffc15 	stw	r2,-16(fp)
10011e80:	e0bffc17 	ldw	r2,-16(fp)
10011e84:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
10011e88:	e0bffd17 	ldw	r2,-12(fp)
} 
10011e8c:	e037883a 	mov	sp,fp
10011e90:	df000017 	ldw	fp,0(sp)
10011e94:	dec00104 	addi	sp,sp,4
10011e98:	f800283a 	ret

10011e9c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
10011e9c:	defffd04 	addi	sp,sp,-12
10011ea0:	dfc00215 	stw	ra,8(sp)
10011ea4:	df000115 	stw	fp,4(sp)
10011ea8:	df000104 	addi	fp,sp,4
10011eac:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
10011eb0:	e13fff17 	ldw	r4,-4(fp)
10011eb4:	0012c540 	call	10012c54 <alt_busy_sleep>
}
10011eb8:	e037883a 	mov	sp,fp
10011ebc:	dfc00117 	ldw	ra,4(sp)
10011ec0:	df000017 	ldw	fp,0(sp)
10011ec4:	dec00204 	addi	sp,sp,8
10011ec8:	f800283a 	ret

10011ecc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011ecc:	defffe04 	addi	sp,sp,-8
10011ed0:	dfc00115 	stw	ra,4(sp)
10011ed4:	df000015 	stw	fp,0(sp)
10011ed8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011edc:	d0a00d17 	ldw	r2,-32716(gp)
10011ee0:	10000326 	beq	r2,zero,10011ef0 <alt_get_errno+0x24>
10011ee4:	d0a00d17 	ldw	r2,-32716(gp)
10011ee8:	103ee83a 	callr	r2
10011eec:	00000106 	br	10011ef4 <alt_get_errno+0x28>
10011ef0:	d0a78d04 	addi	r2,gp,-25036
}
10011ef4:	e037883a 	mov	sp,fp
10011ef8:	dfc00117 	ldw	ra,4(sp)
10011efc:	df000017 	ldw	fp,0(sp)
10011f00:	dec00204 	addi	sp,sp,8
10011f04:	f800283a 	ret

10011f08 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
10011f08:	defff904 	addi	sp,sp,-28
10011f0c:	dfc00615 	stw	ra,24(sp)
10011f10:	df000515 	stw	fp,20(sp)
10011f14:	df000504 	addi	fp,sp,20
10011f18:	e13ffd15 	stw	r4,-12(fp)
10011f1c:	e17ffe15 	stw	r5,-8(fp)
10011f20:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011f24:	e0bffd17 	ldw	r2,-12(fp)
10011f28:	10000816 	blt	r2,zero,10011f4c <write+0x44>
10011f2c:	01400304 	movi	r5,12
10011f30:	e13ffd17 	ldw	r4,-12(fp)
10011f34:	0000e400 	call	10000e40 <__mulsi3>
10011f38:	1007883a 	mov	r3,r2
10011f3c:	00840074 	movhi	r2,4097
10011f40:	10938f04 	addi	r2,r2,20028
10011f44:	1885883a 	add	r2,r3,r2
10011f48:	00000106 	br	10011f50 <write+0x48>
10011f4c:	0005883a 	mov	r2,zero
10011f50:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10011f54:	e0bffb17 	ldw	r2,-20(fp)
10011f58:	10002126 	beq	r2,zero,10011fe0 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
10011f5c:	e0bffb17 	ldw	r2,-20(fp)
10011f60:	10800217 	ldw	r2,8(r2)
10011f64:	108000cc 	andi	r2,r2,3
10011f68:	10001826 	beq	r2,zero,10011fcc <write+0xc4>
10011f6c:	e0bffb17 	ldw	r2,-20(fp)
10011f70:	10800017 	ldw	r2,0(r2)
10011f74:	10800617 	ldw	r2,24(r2)
10011f78:	10001426 	beq	r2,zero,10011fcc <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
10011f7c:	e0bffb17 	ldw	r2,-20(fp)
10011f80:	10800017 	ldw	r2,0(r2)
10011f84:	10800617 	ldw	r2,24(r2)
10011f88:	e0ffff17 	ldw	r3,-4(fp)
10011f8c:	180d883a 	mov	r6,r3
10011f90:	e17ffe17 	ldw	r5,-8(fp)
10011f94:	e13ffb17 	ldw	r4,-20(fp)
10011f98:	103ee83a 	callr	r2
10011f9c:	e0bffc15 	stw	r2,-16(fp)
10011fa0:	e0bffc17 	ldw	r2,-16(fp)
10011fa4:	1000070e 	bge	r2,zero,10011fc4 <write+0xbc>
      {
        ALT_ERRNO = -rval;
10011fa8:	0011ecc0 	call	10011ecc <alt_get_errno>
10011fac:	1007883a 	mov	r3,r2
10011fb0:	e0bffc17 	ldw	r2,-16(fp)
10011fb4:	0085c83a 	sub	r2,zero,r2
10011fb8:	18800015 	stw	r2,0(r3)
        return -1;
10011fbc:	00bfffc4 	movi	r2,-1
10011fc0:	00000c06 	br	10011ff4 <write+0xec>
      }
      return rval;
10011fc4:	e0bffc17 	ldw	r2,-16(fp)
10011fc8:	00000a06 	br	10011ff4 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
10011fcc:	0011ecc0 	call	10011ecc <alt_get_errno>
10011fd0:	1007883a 	mov	r3,r2
10011fd4:	00800344 	movi	r2,13
10011fd8:	18800015 	stw	r2,0(r3)
10011fdc:	00000406 	br	10011ff0 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
10011fe0:	0011ecc0 	call	10011ecc <alt_get_errno>
10011fe4:	1007883a 	mov	r3,r2
10011fe8:	00801444 	movi	r2,81
10011fec:	18800015 	stw	r2,0(r3)
  }
  return -1;
10011ff0:	00bfffc4 	movi	r2,-1
}
10011ff4:	e037883a 	mov	sp,fp
10011ff8:	dfc00117 	ldw	ra,4(sp)
10011ffc:	df000017 	ldw	fp,0(sp)
10012000:	dec00204 	addi	sp,sp,8
10012004:	f800283a 	ret

10012008 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
10012008:	defffd04 	addi	sp,sp,-12
1001200c:	dfc00215 	stw	ra,8(sp)
10012010:	df000115 	stw	fp,4(sp)
10012014:	df000104 	addi	fp,sp,4
10012018:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1001201c:	d1600a04 	addi	r5,gp,-32728
10012020:	e13fff17 	ldw	r4,-4(fp)
10012024:	0012e080 	call	10012e08 <alt_dev_llist_insert>
}
10012028:	e037883a 	mov	sp,fp
1001202c:	dfc00117 	ldw	ra,4(sp)
10012030:	df000017 	ldw	fp,0(sp)
10012034:	dec00204 	addi	sp,sp,8
10012038:	f800283a 	ret

1001203c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1001203c:	defffd04 	addi	sp,sp,-12
10012040:	dfc00215 	stw	ra,8(sp)
10012044:	df000115 	stw	fp,4(sp)
10012048:	df000104 	addi	fp,sp,4
1001204c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
10012050:	00137b40 	call	100137b4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
10012054:	00800044 	movi	r2,1
10012058:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1001205c:	0001883a 	nop
10012060:	e037883a 	mov	sp,fp
10012064:	dfc00117 	ldw	ra,4(sp)
10012068:	df000017 	ldw	fp,0(sp)
1001206c:	dec00204 	addi	sp,sp,8
10012070:	f800283a 	ret

10012074 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
10012074:	defffe04 	addi	sp,sp,-8
10012078:	dfc00115 	stw	ra,4(sp)
1001207c:	df000015 	stw	fp,0(sp)
10012080:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
10012084:	01800144 	movi	r6,5
10012088:	000b883a 	mov	r5,zero
1001208c:	01040074 	movhi	r4,4097
10012090:	2113f904 	addi	r4,r4,20452
10012094:	00122240 	call	10012224 <altera_avalon_jtag_uart_init>
10012098:	01040074 	movhi	r4,4097
1001209c:	2113ef04 	addi	r4,r4,20412
100120a0:	00120080 	call	10012008 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
100120a4:	0001883a 	nop
}
100120a8:	0001883a 	nop
100120ac:	e037883a 	mov	sp,fp
100120b0:	dfc00117 	ldw	ra,4(sp)
100120b4:	df000017 	ldw	fp,0(sp)
100120b8:	dec00204 	addi	sp,sp,8
100120bc:	f800283a 	ret

100120c0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
100120c0:	defffa04 	addi	sp,sp,-24
100120c4:	dfc00515 	stw	ra,20(sp)
100120c8:	df000415 	stw	fp,16(sp)
100120cc:	df000404 	addi	fp,sp,16
100120d0:	e13ffd15 	stw	r4,-12(fp)
100120d4:	e17ffe15 	stw	r5,-8(fp)
100120d8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
100120dc:	e0bffd17 	ldw	r2,-12(fp)
100120e0:	10800017 	ldw	r2,0(r2)
100120e4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
100120e8:	e0bffc17 	ldw	r2,-16(fp)
100120ec:	10c00a04 	addi	r3,r2,40
100120f0:	e0bffd17 	ldw	r2,-12(fp)
100120f4:	10800217 	ldw	r2,8(r2)
100120f8:	100f883a 	mov	r7,r2
100120fc:	e1bfff17 	ldw	r6,-4(fp)
10012100:	e17ffe17 	ldw	r5,-8(fp)
10012104:	1809883a 	mov	r4,r3
10012108:	00126e80 	call	100126e8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1001210c:	e037883a 	mov	sp,fp
10012110:	dfc00117 	ldw	ra,4(sp)
10012114:	df000017 	ldw	fp,0(sp)
10012118:	dec00204 	addi	sp,sp,8
1001211c:	f800283a 	ret

10012120 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
10012120:	defffa04 	addi	sp,sp,-24
10012124:	dfc00515 	stw	ra,20(sp)
10012128:	df000415 	stw	fp,16(sp)
1001212c:	df000404 	addi	fp,sp,16
10012130:	e13ffd15 	stw	r4,-12(fp)
10012134:	e17ffe15 	stw	r5,-8(fp)
10012138:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001213c:	e0bffd17 	ldw	r2,-12(fp)
10012140:	10800017 	ldw	r2,0(r2)
10012144:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
10012148:	e0bffc17 	ldw	r2,-16(fp)
1001214c:	10c00a04 	addi	r3,r2,40
10012150:	e0bffd17 	ldw	r2,-12(fp)
10012154:	10800217 	ldw	r2,8(r2)
10012158:	100f883a 	mov	r7,r2
1001215c:	e1bfff17 	ldw	r6,-4(fp)
10012160:	e17ffe17 	ldw	r5,-8(fp)
10012164:	1809883a 	mov	r4,r3
10012168:	00129040 	call	10012904 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1001216c:	e037883a 	mov	sp,fp
10012170:	dfc00117 	ldw	ra,4(sp)
10012174:	df000017 	ldw	fp,0(sp)
10012178:	dec00204 	addi	sp,sp,8
1001217c:	f800283a 	ret

10012180 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
10012180:	defffc04 	addi	sp,sp,-16
10012184:	dfc00315 	stw	ra,12(sp)
10012188:	df000215 	stw	fp,8(sp)
1001218c:	df000204 	addi	fp,sp,8
10012190:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10012194:	e0bfff17 	ldw	r2,-4(fp)
10012198:	10800017 	ldw	r2,0(r2)
1001219c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
100121a0:	e0bffe17 	ldw	r2,-8(fp)
100121a4:	10c00a04 	addi	r3,r2,40
100121a8:	e0bfff17 	ldw	r2,-4(fp)
100121ac:	10800217 	ldw	r2,8(r2)
100121b0:	100b883a 	mov	r5,r2
100121b4:	1809883a 	mov	r4,r3
100121b8:	00125900 	call	10012590 <altera_avalon_jtag_uart_close>
}
100121bc:	e037883a 	mov	sp,fp
100121c0:	dfc00117 	ldw	ra,4(sp)
100121c4:	df000017 	ldw	fp,0(sp)
100121c8:	dec00204 	addi	sp,sp,8
100121cc:	f800283a 	ret

100121d0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
100121d0:	defffa04 	addi	sp,sp,-24
100121d4:	dfc00515 	stw	ra,20(sp)
100121d8:	df000415 	stw	fp,16(sp)
100121dc:	df000404 	addi	fp,sp,16
100121e0:	e13ffd15 	stw	r4,-12(fp)
100121e4:	e17ffe15 	stw	r5,-8(fp)
100121e8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
100121ec:	e0bffd17 	ldw	r2,-12(fp)
100121f0:	10800017 	ldw	r2,0(r2)
100121f4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
100121f8:	e0bffc17 	ldw	r2,-16(fp)
100121fc:	10800a04 	addi	r2,r2,40
10012200:	e1bfff17 	ldw	r6,-4(fp)
10012204:	e17ffe17 	ldw	r5,-8(fp)
10012208:	1009883a 	mov	r4,r2
1001220c:	00125f80 	call	100125f8 <altera_avalon_jtag_uart_ioctl>
}
10012210:	e037883a 	mov	sp,fp
10012214:	dfc00117 	ldw	ra,4(sp)
10012218:	df000017 	ldw	fp,0(sp)
1001221c:	dec00204 	addi	sp,sp,8
10012220:	f800283a 	ret

10012224 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
10012224:	defffa04 	addi	sp,sp,-24
10012228:	dfc00515 	stw	ra,20(sp)
1001222c:	df000415 	stw	fp,16(sp)
10012230:	df000404 	addi	fp,sp,16
10012234:	e13ffd15 	stw	r4,-12(fp)
10012238:	e17ffe15 	stw	r5,-8(fp)
1001223c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10012240:	e0bffd17 	ldw	r2,-12(fp)
10012244:	00c00044 	movi	r3,1
10012248:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1001224c:	e0bffd17 	ldw	r2,-12(fp)
10012250:	10800017 	ldw	r2,0(r2)
10012254:	10800104 	addi	r2,r2,4
10012258:	1007883a 	mov	r3,r2
1001225c:	e0bffd17 	ldw	r2,-12(fp)
10012260:	10800817 	ldw	r2,32(r2)
10012264:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
10012268:	e0bffe17 	ldw	r2,-8(fp)
1001226c:	e0ffff17 	ldw	r3,-4(fp)
10012270:	d8000015 	stw	zero,0(sp)
10012274:	e1fffd17 	ldw	r7,-12(fp)
10012278:	01840074 	movhi	r6,4097
1001227c:	3188b904 	addi	r6,r6,8932
10012280:	180b883a 	mov	r5,r3
10012284:	1009883a 	mov	r4,r2
10012288:	0012f8c0 	call	10012f8c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1001228c:	e0bffd17 	ldw	r2,-12(fp)
10012290:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
10012294:	e0bffd17 	ldw	r2,-12(fp)
10012298:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1001229c:	d0e79217 	ldw	r3,-25016(gp)
100122a0:	e1fffd17 	ldw	r7,-12(fp)
100122a4:	01840074 	movhi	r6,4097
100122a8:	31893c04 	addi	r6,r6,9456
100122ac:	180b883a 	mov	r5,r3
100122b0:	1009883a 	mov	r4,r2
100122b4:	0012b280 	call	10012b28 <alt_alarm_start>
100122b8:	1000040e 	bge	r2,zero,100122cc <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
100122bc:	e0fffd17 	ldw	r3,-12(fp)
100122c0:	00a00034 	movhi	r2,32768
100122c4:	10bfffc4 	addi	r2,r2,-1
100122c8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
100122cc:	0001883a 	nop
100122d0:	e037883a 	mov	sp,fp
100122d4:	dfc00117 	ldw	ra,4(sp)
100122d8:	df000017 	ldw	fp,0(sp)
100122dc:	dec00204 	addi	sp,sp,8
100122e0:	f800283a 	ret

100122e4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
100122e4:	defff804 	addi	sp,sp,-32
100122e8:	df000715 	stw	fp,28(sp)
100122ec:	df000704 	addi	fp,sp,28
100122f0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
100122f4:	e0bfff17 	ldw	r2,-4(fp)
100122f8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
100122fc:	e0bffb17 	ldw	r2,-20(fp)
10012300:	10800017 	ldw	r2,0(r2)
10012304:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10012308:	e0bffc17 	ldw	r2,-16(fp)
1001230c:	10800104 	addi	r2,r2,4
10012310:	10800037 	ldwio	r2,0(r2)
10012314:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
10012318:	e0bffd17 	ldw	r2,-12(fp)
1001231c:	1080c00c 	andi	r2,r2,768
10012320:	10006d26 	beq	r2,zero,100124d8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
10012324:	e0bffd17 	ldw	r2,-12(fp)
10012328:	1080400c 	andi	r2,r2,256
1001232c:	10003526 	beq	r2,zero,10012404 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
10012330:	00800074 	movhi	r2,1
10012334:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10012338:	e0bffb17 	ldw	r2,-20(fp)
1001233c:	10800a17 	ldw	r2,40(r2)
10012340:	10800044 	addi	r2,r2,1
10012344:	1081ffcc 	andi	r2,r2,2047
10012348:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1001234c:	e0bffb17 	ldw	r2,-20(fp)
10012350:	10c00b17 	ldw	r3,44(r2)
10012354:	e0bffe17 	ldw	r2,-8(fp)
10012358:	18801526 	beq	r3,r2,100123b0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1001235c:	e0bffc17 	ldw	r2,-16(fp)
10012360:	10800037 	ldwio	r2,0(r2)
10012364:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
10012368:	e0bff917 	ldw	r2,-28(fp)
1001236c:	10a0000c 	andi	r2,r2,32768
10012370:	10001126 	beq	r2,zero,100123b8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
10012374:	e0bffb17 	ldw	r2,-20(fp)
10012378:	10800a17 	ldw	r2,40(r2)
1001237c:	e0fff917 	ldw	r3,-28(fp)
10012380:	1809883a 	mov	r4,r3
10012384:	e0fffb17 	ldw	r3,-20(fp)
10012388:	1885883a 	add	r2,r3,r2
1001238c:	10800e04 	addi	r2,r2,56
10012390:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10012394:	e0bffb17 	ldw	r2,-20(fp)
10012398:	10800a17 	ldw	r2,40(r2)
1001239c:	10800044 	addi	r2,r2,1
100123a0:	10c1ffcc 	andi	r3,r2,2047
100123a4:	e0bffb17 	ldw	r2,-20(fp)
100123a8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
100123ac:	003fe206 	br	10012338 <__alt_data_end+0xf8012338>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
100123b0:	0001883a 	nop
100123b4:	00000106 	br	100123bc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
100123b8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
100123bc:	e0bff917 	ldw	r2,-28(fp)
100123c0:	10bfffec 	andhi	r2,r2,65535
100123c4:	10000f26 	beq	r2,zero,10012404 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
100123c8:	e0bffb17 	ldw	r2,-20(fp)
100123cc:	10c00817 	ldw	r3,32(r2)
100123d0:	00bfff84 	movi	r2,-2
100123d4:	1886703a 	and	r3,r3,r2
100123d8:	e0bffb17 	ldw	r2,-20(fp)
100123dc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
100123e0:	e0bffc17 	ldw	r2,-16(fp)
100123e4:	10800104 	addi	r2,r2,4
100123e8:	1007883a 	mov	r3,r2
100123ec:	e0bffb17 	ldw	r2,-20(fp)
100123f0:	10800817 	ldw	r2,32(r2)
100123f4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
100123f8:	e0bffc17 	ldw	r2,-16(fp)
100123fc:	10800104 	addi	r2,r2,4
10012400:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
10012404:	e0bffd17 	ldw	r2,-12(fp)
10012408:	1080800c 	andi	r2,r2,512
1001240c:	103fbe26 	beq	r2,zero,10012308 <__alt_data_end+0xf8012308>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
10012410:	e0bffd17 	ldw	r2,-12(fp)
10012414:	1004d43a 	srli	r2,r2,16
10012418:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1001241c:	00001406 	br	10012470 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
10012420:	e0bffc17 	ldw	r2,-16(fp)
10012424:	e0fffb17 	ldw	r3,-20(fp)
10012428:	18c00d17 	ldw	r3,52(r3)
1001242c:	e13ffb17 	ldw	r4,-20(fp)
10012430:	20c7883a 	add	r3,r4,r3
10012434:	18c20e04 	addi	r3,r3,2104
10012438:	18c00003 	ldbu	r3,0(r3)
1001243c:	18c03fcc 	andi	r3,r3,255
10012440:	18c0201c 	xori	r3,r3,128
10012444:	18ffe004 	addi	r3,r3,-128
10012448:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1001244c:	e0bffb17 	ldw	r2,-20(fp)
10012450:	10800d17 	ldw	r2,52(r2)
10012454:	10800044 	addi	r2,r2,1
10012458:	10c1ffcc 	andi	r3,r2,2047
1001245c:	e0bffb17 	ldw	r2,-20(fp)
10012460:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
10012464:	e0bffa17 	ldw	r2,-24(fp)
10012468:	10bfffc4 	addi	r2,r2,-1
1001246c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
10012470:	e0bffa17 	ldw	r2,-24(fp)
10012474:	10000526 	beq	r2,zero,1001248c <altera_avalon_jtag_uart_irq+0x1a8>
10012478:	e0bffb17 	ldw	r2,-20(fp)
1001247c:	10c00d17 	ldw	r3,52(r2)
10012480:	e0bffb17 	ldw	r2,-20(fp)
10012484:	10800c17 	ldw	r2,48(r2)
10012488:	18bfe51e 	bne	r3,r2,10012420 <__alt_data_end+0xf8012420>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1001248c:	e0bffa17 	ldw	r2,-24(fp)
10012490:	103f9d26 	beq	r2,zero,10012308 <__alt_data_end+0xf8012308>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10012494:	e0bffb17 	ldw	r2,-20(fp)
10012498:	10c00817 	ldw	r3,32(r2)
1001249c:	00bfff44 	movi	r2,-3
100124a0:	1886703a 	and	r3,r3,r2
100124a4:	e0bffb17 	ldw	r2,-20(fp)
100124a8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
100124ac:	e0bffb17 	ldw	r2,-20(fp)
100124b0:	10800017 	ldw	r2,0(r2)
100124b4:	10800104 	addi	r2,r2,4
100124b8:	1007883a 	mov	r3,r2
100124bc:	e0bffb17 	ldw	r2,-20(fp)
100124c0:	10800817 	ldw	r2,32(r2)
100124c4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
100124c8:	e0bffc17 	ldw	r2,-16(fp)
100124cc:	10800104 	addi	r2,r2,4
100124d0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
100124d4:	003f8c06 	br	10012308 <__alt_data_end+0xf8012308>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
100124d8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
100124dc:	0001883a 	nop
100124e0:	e037883a 	mov	sp,fp
100124e4:	df000017 	ldw	fp,0(sp)
100124e8:	dec00104 	addi	sp,sp,4
100124ec:	f800283a 	ret

100124f0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
100124f0:	defff804 	addi	sp,sp,-32
100124f4:	df000715 	stw	fp,28(sp)
100124f8:	df000704 	addi	fp,sp,28
100124fc:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
10012500:	e0bffb17 	ldw	r2,-20(fp)
10012504:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
10012508:	e0bff917 	ldw	r2,-28(fp)
1001250c:	10800017 	ldw	r2,0(r2)
10012510:	10800104 	addi	r2,r2,4
10012514:	10800037 	ldwio	r2,0(r2)
10012518:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1001251c:	e0bffa17 	ldw	r2,-24(fp)
10012520:	1081000c 	andi	r2,r2,1024
10012524:	10000b26 	beq	r2,zero,10012554 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
10012528:	e0bff917 	ldw	r2,-28(fp)
1001252c:	10800017 	ldw	r2,0(r2)
10012530:	10800104 	addi	r2,r2,4
10012534:	1007883a 	mov	r3,r2
10012538:	e0bff917 	ldw	r2,-28(fp)
1001253c:	10800817 	ldw	r2,32(r2)
10012540:	10810014 	ori	r2,r2,1024
10012544:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
10012548:	e0bff917 	ldw	r2,-28(fp)
1001254c:	10000915 	stw	zero,36(r2)
10012550:	00000a06 	br	1001257c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
10012554:	e0bff917 	ldw	r2,-28(fp)
10012558:	10c00917 	ldw	r3,36(r2)
1001255c:	00a00034 	movhi	r2,32768
10012560:	10bfff04 	addi	r2,r2,-4
10012564:	10c00536 	bltu	r2,r3,1001257c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
10012568:	e0bff917 	ldw	r2,-28(fp)
1001256c:	10800917 	ldw	r2,36(r2)
10012570:	10c00044 	addi	r3,r2,1
10012574:	e0bff917 	ldw	r2,-28(fp)
10012578:	10c00915 	stw	r3,36(r2)
1001257c:	d0a79217 	ldw	r2,-25016(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
10012580:	e037883a 	mov	sp,fp
10012584:	df000017 	ldw	fp,0(sp)
10012588:	dec00104 	addi	sp,sp,4
1001258c:	f800283a 	ret

10012590 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
10012590:	defffd04 	addi	sp,sp,-12
10012594:	df000215 	stw	fp,8(sp)
10012598:	df000204 	addi	fp,sp,8
1001259c:	e13ffe15 	stw	r4,-8(fp)
100125a0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
100125a4:	00000506 	br	100125bc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
100125a8:	e0bfff17 	ldw	r2,-4(fp)
100125ac:	1090000c 	andi	r2,r2,16384
100125b0:	10000226 	beq	r2,zero,100125bc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
100125b4:	00bffd44 	movi	r2,-11
100125b8:	00000b06 	br	100125e8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
100125bc:	e0bffe17 	ldw	r2,-8(fp)
100125c0:	10c00d17 	ldw	r3,52(r2)
100125c4:	e0bffe17 	ldw	r2,-8(fp)
100125c8:	10800c17 	ldw	r2,48(r2)
100125cc:	18800526 	beq	r3,r2,100125e4 <altera_avalon_jtag_uart_close+0x54>
100125d0:	e0bffe17 	ldw	r2,-8(fp)
100125d4:	10c00917 	ldw	r3,36(r2)
100125d8:	e0bffe17 	ldw	r2,-8(fp)
100125dc:	10800117 	ldw	r2,4(r2)
100125e0:	18bff136 	bltu	r3,r2,100125a8 <__alt_data_end+0xf80125a8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
100125e4:	0005883a 	mov	r2,zero
}
100125e8:	e037883a 	mov	sp,fp
100125ec:	df000017 	ldw	fp,0(sp)
100125f0:	dec00104 	addi	sp,sp,4
100125f4:	f800283a 	ret

100125f8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
100125f8:	defffa04 	addi	sp,sp,-24
100125fc:	df000515 	stw	fp,20(sp)
10012600:	df000504 	addi	fp,sp,20
10012604:	e13ffd15 	stw	r4,-12(fp)
10012608:	e17ffe15 	stw	r5,-8(fp)
1001260c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
10012610:	00bff9c4 	movi	r2,-25
10012614:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
10012618:	e0bffe17 	ldw	r2,-8(fp)
1001261c:	10da8060 	cmpeqi	r3,r2,27137
10012620:	1800031e 	bne	r3,zero,10012630 <altera_avalon_jtag_uart_ioctl+0x38>
10012624:	109a80a0 	cmpeqi	r2,r2,27138
10012628:	1000181e 	bne	r2,zero,1001268c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1001262c:	00002906 	br	100126d4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
10012630:	e0bffd17 	ldw	r2,-12(fp)
10012634:	10c00117 	ldw	r3,4(r2)
10012638:	00a00034 	movhi	r2,32768
1001263c:	10bfffc4 	addi	r2,r2,-1
10012640:	18802126 	beq	r3,r2,100126c8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
10012644:	e0bfff17 	ldw	r2,-4(fp)
10012648:	10800017 	ldw	r2,0(r2)
1001264c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
10012650:	e0bffc17 	ldw	r2,-16(fp)
10012654:	10800090 	cmplti	r2,r2,2
10012658:	1000061e 	bne	r2,zero,10012674 <altera_avalon_jtag_uart_ioctl+0x7c>
1001265c:	e0fffc17 	ldw	r3,-16(fp)
10012660:	00a00034 	movhi	r2,32768
10012664:	10bfffc4 	addi	r2,r2,-1
10012668:	18800226 	beq	r3,r2,10012674 <altera_avalon_jtag_uart_ioctl+0x7c>
1001266c:	e0bffc17 	ldw	r2,-16(fp)
10012670:	00000206 	br	1001267c <altera_avalon_jtag_uart_ioctl+0x84>
10012674:	00a00034 	movhi	r2,32768
10012678:	10bfff84 	addi	r2,r2,-2
1001267c:	e0fffd17 	ldw	r3,-12(fp)
10012680:	18800115 	stw	r2,4(r3)
      rc = 0;
10012684:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
10012688:	00000f06 	br	100126c8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1001268c:	e0bffd17 	ldw	r2,-12(fp)
10012690:	10c00117 	ldw	r3,4(r2)
10012694:	00a00034 	movhi	r2,32768
10012698:	10bfffc4 	addi	r2,r2,-1
1001269c:	18800c26 	beq	r3,r2,100126d0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
100126a0:	e0bffd17 	ldw	r2,-12(fp)
100126a4:	10c00917 	ldw	r3,36(r2)
100126a8:	e0bffd17 	ldw	r2,-12(fp)
100126ac:	10800117 	ldw	r2,4(r2)
100126b0:	1885803a 	cmpltu	r2,r3,r2
100126b4:	10c03fcc 	andi	r3,r2,255
100126b8:	e0bfff17 	ldw	r2,-4(fp)
100126bc:	10c00015 	stw	r3,0(r2)
      rc = 0;
100126c0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
100126c4:	00000206 	br	100126d0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
100126c8:	0001883a 	nop
100126cc:	00000106 	br	100126d4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
100126d0:	0001883a 	nop

  default:
    break;
  }

  return rc;
100126d4:	e0bffb17 	ldw	r2,-20(fp)
}
100126d8:	e037883a 	mov	sp,fp
100126dc:	df000017 	ldw	fp,0(sp)
100126e0:	dec00104 	addi	sp,sp,4
100126e4:	f800283a 	ret

100126e8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
100126e8:	defff304 	addi	sp,sp,-52
100126ec:	dfc00c15 	stw	ra,48(sp)
100126f0:	df000b15 	stw	fp,44(sp)
100126f4:	df000b04 	addi	fp,sp,44
100126f8:	e13ffc15 	stw	r4,-16(fp)
100126fc:	e17ffd15 	stw	r5,-12(fp)
10012700:	e1bffe15 	stw	r6,-8(fp)
10012704:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
10012708:	e0bffd17 	ldw	r2,-12(fp)
1001270c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
10012710:	00004706 	br	10012830 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
10012714:	e0bffc17 	ldw	r2,-16(fp)
10012718:	10800a17 	ldw	r2,40(r2)
1001271c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
10012720:	e0bffc17 	ldw	r2,-16(fp)
10012724:	10800b17 	ldw	r2,44(r2)
10012728:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1001272c:	e0fff717 	ldw	r3,-36(fp)
10012730:	e0bff817 	ldw	r2,-32(fp)
10012734:	18800536 	bltu	r3,r2,1001274c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
10012738:	e0fff717 	ldw	r3,-36(fp)
1001273c:	e0bff817 	ldw	r2,-32(fp)
10012740:	1885c83a 	sub	r2,r3,r2
10012744:	e0bff615 	stw	r2,-40(fp)
10012748:	00000406 	br	1001275c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1001274c:	00c20004 	movi	r3,2048
10012750:	e0bff817 	ldw	r2,-32(fp)
10012754:	1885c83a 	sub	r2,r3,r2
10012758:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1001275c:	e0bff617 	ldw	r2,-40(fp)
10012760:	10001e26 	beq	r2,zero,100127dc <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
10012764:	e0fffe17 	ldw	r3,-8(fp)
10012768:	e0bff617 	ldw	r2,-40(fp)
1001276c:	1880022e 	bgeu	r3,r2,10012778 <altera_avalon_jtag_uart_read+0x90>
        n = space;
10012770:	e0bffe17 	ldw	r2,-8(fp)
10012774:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
10012778:	e0bffc17 	ldw	r2,-16(fp)
1001277c:	10c00e04 	addi	r3,r2,56
10012780:	e0bff817 	ldw	r2,-32(fp)
10012784:	1885883a 	add	r2,r3,r2
10012788:	e1bff617 	ldw	r6,-40(fp)
1001278c:	100b883a 	mov	r5,r2
10012790:	e13ff517 	ldw	r4,-44(fp)
10012794:	0008e580 	call	10008e58 <memcpy>
      ptr   += n;
10012798:	e0fff517 	ldw	r3,-44(fp)
1001279c:	e0bff617 	ldw	r2,-40(fp)
100127a0:	1885883a 	add	r2,r3,r2
100127a4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
100127a8:	e0fffe17 	ldw	r3,-8(fp)
100127ac:	e0bff617 	ldw	r2,-40(fp)
100127b0:	1885c83a 	sub	r2,r3,r2
100127b4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100127b8:	e0fff817 	ldw	r3,-32(fp)
100127bc:	e0bff617 	ldw	r2,-40(fp)
100127c0:	1885883a 	add	r2,r3,r2
100127c4:	10c1ffcc 	andi	r3,r2,2047
100127c8:	e0bffc17 	ldw	r2,-16(fp)
100127cc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
100127d0:	e0bffe17 	ldw	r2,-8(fp)
100127d4:	00bfcf16 	blt	zero,r2,10012714 <__alt_data_end+0xf8012714>
100127d8:	00000106 	br	100127e0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
100127dc:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
100127e0:	e0fff517 	ldw	r3,-44(fp)
100127e4:	e0bffd17 	ldw	r2,-12(fp)
100127e8:	1880141e 	bne	r3,r2,1001283c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
100127ec:	e0bfff17 	ldw	r2,-4(fp)
100127f0:	1090000c 	andi	r2,r2,16384
100127f4:	1000131e 	bne	r2,zero,10012844 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
100127f8:	0001883a 	nop
100127fc:	e0bffc17 	ldw	r2,-16(fp)
10012800:	10c00a17 	ldw	r3,40(r2)
10012804:	e0bff717 	ldw	r2,-36(fp)
10012808:	1880051e 	bne	r3,r2,10012820 <altera_avalon_jtag_uart_read+0x138>
1001280c:	e0bffc17 	ldw	r2,-16(fp)
10012810:	10c00917 	ldw	r3,36(r2)
10012814:	e0bffc17 	ldw	r2,-16(fp)
10012818:	10800117 	ldw	r2,4(r2)
1001281c:	18bff736 	bltu	r3,r2,100127fc <__alt_data_end+0xf80127fc>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
10012820:	e0bffc17 	ldw	r2,-16(fp)
10012824:	10c00a17 	ldw	r3,40(r2)
10012828:	e0bff717 	ldw	r2,-36(fp)
1001282c:	18800726 	beq	r3,r2,1001284c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
10012830:	e0bffe17 	ldw	r2,-8(fp)
10012834:	00bfb716 	blt	zero,r2,10012714 <__alt_data_end+0xf8012714>
10012838:	00000506 	br	10012850 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1001283c:	0001883a 	nop
10012840:	00000306 	br	10012850 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
10012844:	0001883a 	nop
10012848:	00000106 	br	10012850 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1001284c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
10012850:	e0fff517 	ldw	r3,-44(fp)
10012854:	e0bffd17 	ldw	r2,-12(fp)
10012858:	18801826 	beq	r3,r2,100128bc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001285c:	0005303a 	rdctl	r2,status
10012860:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10012864:	e0fffb17 	ldw	r3,-20(fp)
10012868:	00bfff84 	movi	r2,-2
1001286c:	1884703a 	and	r2,r3,r2
10012870:	1001703a 	wrctl	status,r2
  
  return context;
10012874:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
10012878:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1001287c:	e0bffc17 	ldw	r2,-16(fp)
10012880:	10800817 	ldw	r2,32(r2)
10012884:	10c00054 	ori	r3,r2,1
10012888:	e0bffc17 	ldw	r2,-16(fp)
1001288c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10012890:	e0bffc17 	ldw	r2,-16(fp)
10012894:	10800017 	ldw	r2,0(r2)
10012898:	10800104 	addi	r2,r2,4
1001289c:	1007883a 	mov	r3,r2
100128a0:	e0bffc17 	ldw	r2,-16(fp)
100128a4:	10800817 	ldw	r2,32(r2)
100128a8:	18800035 	stwio	r2,0(r3)
100128ac:	e0bffa17 	ldw	r2,-24(fp)
100128b0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
100128b4:	e0bff917 	ldw	r2,-28(fp)
100128b8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
100128bc:	e0fff517 	ldw	r3,-44(fp)
100128c0:	e0bffd17 	ldw	r2,-12(fp)
100128c4:	18800426 	beq	r3,r2,100128d8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
100128c8:	e0fff517 	ldw	r3,-44(fp)
100128cc:	e0bffd17 	ldw	r2,-12(fp)
100128d0:	1885c83a 	sub	r2,r3,r2
100128d4:	00000606 	br	100128f0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
100128d8:	e0bfff17 	ldw	r2,-4(fp)
100128dc:	1090000c 	andi	r2,r2,16384
100128e0:	10000226 	beq	r2,zero,100128ec <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
100128e4:	00bffd44 	movi	r2,-11
100128e8:	00000106 	br	100128f0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
100128ec:	00bffec4 	movi	r2,-5
}
100128f0:	e037883a 	mov	sp,fp
100128f4:	dfc00117 	ldw	ra,4(sp)
100128f8:	df000017 	ldw	fp,0(sp)
100128fc:	dec00204 	addi	sp,sp,8
10012900:	f800283a 	ret

10012904 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
10012904:	defff304 	addi	sp,sp,-52
10012908:	dfc00c15 	stw	ra,48(sp)
1001290c:	df000b15 	stw	fp,44(sp)
10012910:	df000b04 	addi	fp,sp,44
10012914:	e13ffc15 	stw	r4,-16(fp)
10012918:	e17ffd15 	stw	r5,-12(fp)
1001291c:	e1bffe15 	stw	r6,-8(fp)
10012920:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
10012924:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
10012928:	e0bffd17 	ldw	r2,-12(fp)
1001292c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
10012930:	00003706 	br	10012a10 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
10012934:	e0bffc17 	ldw	r2,-16(fp)
10012938:	10800c17 	ldw	r2,48(r2)
1001293c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
10012940:	e0bffc17 	ldw	r2,-16(fp)
10012944:	10800d17 	ldw	r2,52(r2)
10012948:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1001294c:	e0fff917 	ldw	r3,-28(fp)
10012950:	e0bff517 	ldw	r2,-44(fp)
10012954:	1880062e 	bgeu	r3,r2,10012970 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
10012958:	e0fff517 	ldw	r3,-44(fp)
1001295c:	e0bff917 	ldw	r2,-28(fp)
10012960:	1885c83a 	sub	r2,r3,r2
10012964:	10bfffc4 	addi	r2,r2,-1
10012968:	e0bff615 	stw	r2,-40(fp)
1001296c:	00000b06 	br	1001299c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
10012970:	e0bff517 	ldw	r2,-44(fp)
10012974:	10000526 	beq	r2,zero,1001298c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
10012978:	00c20004 	movi	r3,2048
1001297c:	e0bff917 	ldw	r2,-28(fp)
10012980:	1885c83a 	sub	r2,r3,r2
10012984:	e0bff615 	stw	r2,-40(fp)
10012988:	00000406 	br	1001299c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1001298c:	00c1ffc4 	movi	r3,2047
10012990:	e0bff917 	ldw	r2,-28(fp)
10012994:	1885c83a 	sub	r2,r3,r2
10012998:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1001299c:	e0bff617 	ldw	r2,-40(fp)
100129a0:	10001e26 	beq	r2,zero,10012a1c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
100129a4:	e0fffe17 	ldw	r3,-8(fp)
100129a8:	e0bff617 	ldw	r2,-40(fp)
100129ac:	1880022e 	bgeu	r3,r2,100129b8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
100129b0:	e0bffe17 	ldw	r2,-8(fp)
100129b4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
100129b8:	e0bffc17 	ldw	r2,-16(fp)
100129bc:	10c20e04 	addi	r3,r2,2104
100129c0:	e0bff917 	ldw	r2,-28(fp)
100129c4:	1885883a 	add	r2,r3,r2
100129c8:	e1bff617 	ldw	r6,-40(fp)
100129cc:	e17ffd17 	ldw	r5,-12(fp)
100129d0:	1009883a 	mov	r4,r2
100129d4:	0008e580 	call	10008e58 <memcpy>
      ptr   += n;
100129d8:	e0fffd17 	ldw	r3,-12(fp)
100129dc:	e0bff617 	ldw	r2,-40(fp)
100129e0:	1885883a 	add	r2,r3,r2
100129e4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
100129e8:	e0fffe17 	ldw	r3,-8(fp)
100129ec:	e0bff617 	ldw	r2,-40(fp)
100129f0:	1885c83a 	sub	r2,r3,r2
100129f4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100129f8:	e0fff917 	ldw	r3,-28(fp)
100129fc:	e0bff617 	ldw	r2,-40(fp)
10012a00:	1885883a 	add	r2,r3,r2
10012a04:	10c1ffcc 	andi	r3,r2,2047
10012a08:	e0bffc17 	ldw	r2,-16(fp)
10012a0c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
10012a10:	e0bffe17 	ldw	r2,-8(fp)
10012a14:	00bfc716 	blt	zero,r2,10012934 <__alt_data_end+0xf8012934>
10012a18:	00000106 	br	10012a20 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
10012a1c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10012a20:	0005303a 	rdctl	r2,status
10012a24:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10012a28:	e0fffb17 	ldw	r3,-20(fp)
10012a2c:	00bfff84 	movi	r2,-2
10012a30:	1884703a 	and	r2,r3,r2
10012a34:	1001703a 	wrctl	status,r2
  
  return context;
10012a38:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
10012a3c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10012a40:	e0bffc17 	ldw	r2,-16(fp)
10012a44:	10800817 	ldw	r2,32(r2)
10012a48:	10c00094 	ori	r3,r2,2
10012a4c:	e0bffc17 	ldw	r2,-16(fp)
10012a50:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10012a54:	e0bffc17 	ldw	r2,-16(fp)
10012a58:	10800017 	ldw	r2,0(r2)
10012a5c:	10800104 	addi	r2,r2,4
10012a60:	1007883a 	mov	r3,r2
10012a64:	e0bffc17 	ldw	r2,-16(fp)
10012a68:	10800817 	ldw	r2,32(r2)
10012a6c:	18800035 	stwio	r2,0(r3)
10012a70:	e0bffa17 	ldw	r2,-24(fp)
10012a74:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012a78:	e0bff817 	ldw	r2,-32(fp)
10012a7c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
10012a80:	e0bffe17 	ldw	r2,-8(fp)
10012a84:	0080100e 	bge	zero,r2,10012ac8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
10012a88:	e0bfff17 	ldw	r2,-4(fp)
10012a8c:	1090000c 	andi	r2,r2,16384
10012a90:	1000101e 	bne	r2,zero,10012ad4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
10012a94:	0001883a 	nop
10012a98:	e0bffc17 	ldw	r2,-16(fp)
10012a9c:	10c00d17 	ldw	r3,52(r2)
10012aa0:	e0bff517 	ldw	r2,-44(fp)
10012aa4:	1880051e 	bne	r3,r2,10012abc <altera_avalon_jtag_uart_write+0x1b8>
10012aa8:	e0bffc17 	ldw	r2,-16(fp)
10012aac:	10c00917 	ldw	r3,36(r2)
10012ab0:	e0bffc17 	ldw	r2,-16(fp)
10012ab4:	10800117 	ldw	r2,4(r2)
10012ab8:	18bff736 	bltu	r3,r2,10012a98 <__alt_data_end+0xf8012a98>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
10012abc:	e0bffc17 	ldw	r2,-16(fp)
10012ac0:	10800917 	ldw	r2,36(r2)
10012ac4:	1000051e 	bne	r2,zero,10012adc <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
10012ac8:	e0bffe17 	ldw	r2,-8(fp)
10012acc:	00bfd016 	blt	zero,r2,10012a10 <__alt_data_end+0xf8012a10>
10012ad0:	00000306 	br	10012ae0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
10012ad4:	0001883a 	nop
10012ad8:	00000106 	br	10012ae0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
10012adc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
10012ae0:	e0fffd17 	ldw	r3,-12(fp)
10012ae4:	e0bff717 	ldw	r2,-36(fp)
10012ae8:	18800426 	beq	r3,r2,10012afc <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
10012aec:	e0fffd17 	ldw	r3,-12(fp)
10012af0:	e0bff717 	ldw	r2,-36(fp)
10012af4:	1885c83a 	sub	r2,r3,r2
10012af8:	00000606 	br	10012b14 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
10012afc:	e0bfff17 	ldw	r2,-4(fp)
10012b00:	1090000c 	andi	r2,r2,16384
10012b04:	10000226 	beq	r2,zero,10012b10 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
10012b08:	00bffd44 	movi	r2,-11
10012b0c:	00000106 	br	10012b14 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
10012b10:	00bffec4 	movi	r2,-5
}
10012b14:	e037883a 	mov	sp,fp
10012b18:	dfc00117 	ldw	ra,4(sp)
10012b1c:	df000017 	ldw	fp,0(sp)
10012b20:	dec00204 	addi	sp,sp,8
10012b24:	f800283a 	ret

10012b28 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
10012b28:	defff504 	addi	sp,sp,-44
10012b2c:	df000a15 	stw	fp,40(sp)
10012b30:	df000a04 	addi	fp,sp,40
10012b34:	e13ffc15 	stw	r4,-16(fp)
10012b38:	e17ffd15 	stw	r5,-12(fp)
10012b3c:	e1bffe15 	stw	r6,-8(fp)
10012b40:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
10012b44:	e03ff615 	stw	zero,-40(fp)
10012b48:	d0a79217 	ldw	r2,-25016(gp)
  
  if (alt_ticks_per_second ())
10012b4c:	10003c26 	beq	r2,zero,10012c40 <alt_alarm_start+0x118>
  {
    if (alarm)
10012b50:	e0bffc17 	ldw	r2,-16(fp)
10012b54:	10003826 	beq	r2,zero,10012c38 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
10012b58:	e0bffc17 	ldw	r2,-16(fp)
10012b5c:	e0fffe17 	ldw	r3,-8(fp)
10012b60:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
10012b64:	e0bffc17 	ldw	r2,-16(fp)
10012b68:	e0ffff17 	ldw	r3,-4(fp)
10012b6c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10012b70:	0005303a 	rdctl	r2,status
10012b74:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10012b78:	e0fff917 	ldw	r3,-28(fp)
10012b7c:	00bfff84 	movi	r2,-2
10012b80:	1884703a 	and	r2,r3,r2
10012b84:	1001703a 	wrctl	status,r2
  
  return context;
10012b88:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
10012b8c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
10012b90:	d0a79317 	ldw	r2,-25012(gp)
      
      current_nticks = alt_nticks();
10012b94:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
10012b98:	e0fffd17 	ldw	r3,-12(fp)
10012b9c:	e0bff617 	ldw	r2,-40(fp)
10012ba0:	1885883a 	add	r2,r3,r2
10012ba4:	10c00044 	addi	r3,r2,1
10012ba8:	e0bffc17 	ldw	r2,-16(fp)
10012bac:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
10012bb0:	e0bffc17 	ldw	r2,-16(fp)
10012bb4:	10c00217 	ldw	r3,8(r2)
10012bb8:	e0bff617 	ldw	r2,-40(fp)
10012bbc:	1880042e 	bgeu	r3,r2,10012bd0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
10012bc0:	e0bffc17 	ldw	r2,-16(fp)
10012bc4:	00c00044 	movi	r3,1
10012bc8:	10c00405 	stb	r3,16(r2)
10012bcc:	00000206 	br	10012bd8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
10012bd0:	e0bffc17 	ldw	r2,-16(fp)
10012bd4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
10012bd8:	e0bffc17 	ldw	r2,-16(fp)
10012bdc:	d0e01004 	addi	r3,gp,-32704
10012be0:	e0fffa15 	stw	r3,-24(fp)
10012be4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10012be8:	e0bffb17 	ldw	r2,-20(fp)
10012bec:	e0fffa17 	ldw	r3,-24(fp)
10012bf0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10012bf4:	e0bffa17 	ldw	r2,-24(fp)
10012bf8:	10c00017 	ldw	r3,0(r2)
10012bfc:	e0bffb17 	ldw	r2,-20(fp)
10012c00:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10012c04:	e0bffa17 	ldw	r2,-24(fp)
10012c08:	10800017 	ldw	r2,0(r2)
10012c0c:	e0fffb17 	ldw	r3,-20(fp)
10012c10:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10012c14:	e0bffa17 	ldw	r2,-24(fp)
10012c18:	e0fffb17 	ldw	r3,-20(fp)
10012c1c:	10c00015 	stw	r3,0(r2)
10012c20:	e0bff817 	ldw	r2,-32(fp)
10012c24:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012c28:	e0bff717 	ldw	r2,-36(fp)
10012c2c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
10012c30:	0005883a 	mov	r2,zero
10012c34:	00000306 	br	10012c44 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
10012c38:	00bffa84 	movi	r2,-22
10012c3c:	00000106 	br	10012c44 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
10012c40:	00bfde84 	movi	r2,-134
  }
}
10012c44:	e037883a 	mov	sp,fp
10012c48:	df000017 	ldw	fp,0(sp)
10012c4c:	dec00104 	addi	sp,sp,4
10012c50:	f800283a 	ret

10012c54 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
10012c54:	defffa04 	addi	sp,sp,-24
10012c58:	dfc00515 	stw	ra,20(sp)
10012c5c:	df000415 	stw	fp,16(sp)
10012c60:	df000404 	addi	fp,sp,16
10012c64:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
10012c68:	00800244 	movi	r2,9
10012c6c:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
10012c70:	014003f4 	movhi	r5,15
10012c74:	29509004 	addi	r5,r5,16960
10012c78:	e13ffd17 	ldw	r4,-12(fp)
10012c7c:	0000e400 	call	10000e40 <__mulsi3>
10012c80:	100b883a 	mov	r5,r2
10012c84:	0100bef4 	movhi	r4,763
10012c88:	213c2004 	addi	r4,r4,-3968
10012c8c:	0000d840 	call	10000d84 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
10012c90:	100b883a 	mov	r5,r2
10012c94:	01200034 	movhi	r4,32768
10012c98:	213fffc4 	addi	r4,r4,-1
10012c9c:	0000d840 	call	10000d84 <__udivsi3>
10012ca0:	100b883a 	mov	r5,r2
10012ca4:	e13fff17 	ldw	r4,-4(fp)
10012ca8:	0000d840 	call	10000d84 <__udivsi3>
10012cac:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
10012cb0:	e0bffe17 	ldw	r2,-8(fp)
10012cb4:	10002a26 	beq	r2,zero,10012d60 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
10012cb8:	e03ffc15 	stw	zero,-16(fp)
10012cbc:	00001706 	br	10012d1c <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
10012cc0:	00a00034 	movhi	r2,32768
10012cc4:	10bfffc4 	addi	r2,r2,-1
10012cc8:	10bfffc4 	addi	r2,r2,-1
10012ccc:	103ffe1e 	bne	r2,zero,10012cc8 <__alt_data_end+0xf8012cc8>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
10012cd0:	014003f4 	movhi	r5,15
10012cd4:	29509004 	addi	r5,r5,16960
10012cd8:	e13ffd17 	ldw	r4,-12(fp)
10012cdc:	0000e400 	call	10000e40 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
10012ce0:	100b883a 	mov	r5,r2
10012ce4:	0100bef4 	movhi	r4,763
10012ce8:	213c2004 	addi	r4,r4,-3968
10012cec:	0000d840 	call	10000d84 <__udivsi3>
10012cf0:	100b883a 	mov	r5,r2
10012cf4:	01200034 	movhi	r4,32768
10012cf8:	213fffc4 	addi	r4,r4,-1
10012cfc:	0000d840 	call	10000d84 <__udivsi3>
10012d00:	1007883a 	mov	r3,r2
10012d04:	e0bfff17 	ldw	r2,-4(fp)
10012d08:	10c5c83a 	sub	r2,r2,r3
10012d0c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
10012d10:	e0bffc17 	ldw	r2,-16(fp)
10012d14:	10800044 	addi	r2,r2,1
10012d18:	e0bffc15 	stw	r2,-16(fp)
10012d1c:	e0fffc17 	ldw	r3,-16(fp)
10012d20:	e0bffe17 	ldw	r2,-8(fp)
10012d24:	18bfe616 	blt	r3,r2,10012cc0 <__alt_data_end+0xf8012cc0>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
10012d28:	014003f4 	movhi	r5,15
10012d2c:	29509004 	addi	r5,r5,16960
10012d30:	e13ffd17 	ldw	r4,-12(fp)
10012d34:	0000e400 	call	10000e40 <__mulsi3>
10012d38:	100b883a 	mov	r5,r2
10012d3c:	0100bef4 	movhi	r4,763
10012d40:	213c2004 	addi	r4,r4,-3968
10012d44:	0000d840 	call	10000d84 <__udivsi3>
10012d48:	e17fff17 	ldw	r5,-4(fp)
10012d4c:	1009883a 	mov	r4,r2
10012d50:	0000e400 	call	10000e40 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
10012d54:	10bfffc4 	addi	r2,r2,-1
10012d58:	103ffe1e 	bne	r2,zero,10012d54 <__alt_data_end+0xf8012d54>
10012d5c:	00000d06 	br	10012d94 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
10012d60:	014003f4 	movhi	r5,15
10012d64:	29509004 	addi	r5,r5,16960
10012d68:	e13ffd17 	ldw	r4,-12(fp)
10012d6c:	0000e400 	call	10000e40 <__mulsi3>
10012d70:	100b883a 	mov	r5,r2
10012d74:	0100bef4 	movhi	r4,763
10012d78:	213c2004 	addi	r4,r4,-3968
10012d7c:	0000d840 	call	10000d84 <__udivsi3>
10012d80:	e17fff17 	ldw	r5,-4(fp)
10012d84:	1009883a 	mov	r4,r2
10012d88:	0000e400 	call	10000e40 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
10012d8c:	10bfffc4 	addi	r2,r2,-1
10012d90:	00bffe16 	blt	zero,r2,10012d8c <__alt_data_end+0xf8012d8c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
10012d94:	0005883a 	mov	r2,zero
}
10012d98:	e037883a 	mov	sp,fp
10012d9c:	dfc00117 	ldw	ra,4(sp)
10012da0:	df000017 	ldw	fp,0(sp)
10012da4:	dec00204 	addi	sp,sp,8
10012da8:	f800283a 	ret

10012dac <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
10012dac:	deffff04 	addi	sp,sp,-4
10012db0:	df000015 	stw	fp,0(sp)
10012db4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
10012db8:	0001883a 	nop
10012dbc:	e037883a 	mov	sp,fp
10012dc0:	df000017 	ldw	fp,0(sp)
10012dc4:	dec00104 	addi	sp,sp,4
10012dc8:	f800283a 	ret

10012dcc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10012dcc:	defffe04 	addi	sp,sp,-8
10012dd0:	dfc00115 	stw	ra,4(sp)
10012dd4:	df000015 	stw	fp,0(sp)
10012dd8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10012ddc:	d0a00d17 	ldw	r2,-32716(gp)
10012de0:	10000326 	beq	r2,zero,10012df0 <alt_get_errno+0x24>
10012de4:	d0a00d17 	ldw	r2,-32716(gp)
10012de8:	103ee83a 	callr	r2
10012dec:	00000106 	br	10012df4 <alt_get_errno+0x28>
10012df0:	d0a78d04 	addi	r2,gp,-25036
}
10012df4:	e037883a 	mov	sp,fp
10012df8:	dfc00117 	ldw	ra,4(sp)
10012dfc:	df000017 	ldw	fp,0(sp)
10012e00:	dec00204 	addi	sp,sp,8
10012e04:	f800283a 	ret

10012e08 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
10012e08:	defffa04 	addi	sp,sp,-24
10012e0c:	dfc00515 	stw	ra,20(sp)
10012e10:	df000415 	stw	fp,16(sp)
10012e14:	df000404 	addi	fp,sp,16
10012e18:	e13ffe15 	stw	r4,-8(fp)
10012e1c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
10012e20:	e0bffe17 	ldw	r2,-8(fp)
10012e24:	10000326 	beq	r2,zero,10012e34 <alt_dev_llist_insert+0x2c>
10012e28:	e0bffe17 	ldw	r2,-8(fp)
10012e2c:	10800217 	ldw	r2,8(r2)
10012e30:	1000061e 	bne	r2,zero,10012e4c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
10012e34:	0012dcc0 	call	10012dcc <alt_get_errno>
10012e38:	1007883a 	mov	r3,r2
10012e3c:	00800584 	movi	r2,22
10012e40:	18800015 	stw	r2,0(r3)
    return -EINVAL;
10012e44:	00bffa84 	movi	r2,-22
10012e48:	00001306 	br	10012e98 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
10012e4c:	e0bffe17 	ldw	r2,-8(fp)
10012e50:	e0ffff17 	ldw	r3,-4(fp)
10012e54:	e0fffc15 	stw	r3,-16(fp)
10012e58:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10012e5c:	e0bffd17 	ldw	r2,-12(fp)
10012e60:	e0fffc17 	ldw	r3,-16(fp)
10012e64:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10012e68:	e0bffc17 	ldw	r2,-16(fp)
10012e6c:	10c00017 	ldw	r3,0(r2)
10012e70:	e0bffd17 	ldw	r2,-12(fp)
10012e74:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10012e78:	e0bffc17 	ldw	r2,-16(fp)
10012e7c:	10800017 	ldw	r2,0(r2)
10012e80:	e0fffd17 	ldw	r3,-12(fp)
10012e84:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10012e88:	e0bffc17 	ldw	r2,-16(fp)
10012e8c:	e0fffd17 	ldw	r3,-12(fp)
10012e90:	10c00015 	stw	r3,0(r2)

  return 0;  
10012e94:	0005883a 	mov	r2,zero
}
10012e98:	e037883a 	mov	sp,fp
10012e9c:	dfc00117 	ldw	ra,4(sp)
10012ea0:	df000017 	ldw	fp,0(sp)
10012ea4:	dec00204 	addi	sp,sp,8
10012ea8:	f800283a 	ret

10012eac <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
10012eac:	defffd04 	addi	sp,sp,-12
10012eb0:	dfc00215 	stw	ra,8(sp)
10012eb4:	df000115 	stw	fp,4(sp)
10012eb8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10012ebc:	00840074 	movhi	r2,4097
10012ec0:	108f9804 	addi	r2,r2,15968
10012ec4:	e0bfff15 	stw	r2,-4(fp)
10012ec8:	00000606 	br	10012ee4 <_do_ctors+0x38>
        (*ctor) (); 
10012ecc:	e0bfff17 	ldw	r2,-4(fp)
10012ed0:	10800017 	ldw	r2,0(r2)
10012ed4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10012ed8:	e0bfff17 	ldw	r2,-4(fp)
10012edc:	10bfff04 	addi	r2,r2,-4
10012ee0:	e0bfff15 	stw	r2,-4(fp)
10012ee4:	e0ffff17 	ldw	r3,-4(fp)
10012ee8:	00840074 	movhi	r2,4097
10012eec:	108f9904 	addi	r2,r2,15972
10012ef0:	18bff62e 	bgeu	r3,r2,10012ecc <__alt_data_end+0xf8012ecc>
        (*ctor) (); 
}
10012ef4:	0001883a 	nop
10012ef8:	e037883a 	mov	sp,fp
10012efc:	dfc00117 	ldw	ra,4(sp)
10012f00:	df000017 	ldw	fp,0(sp)
10012f04:	dec00204 	addi	sp,sp,8
10012f08:	f800283a 	ret

10012f0c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
10012f0c:	defffd04 	addi	sp,sp,-12
10012f10:	dfc00215 	stw	ra,8(sp)
10012f14:	df000115 	stw	fp,4(sp)
10012f18:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
10012f1c:	00840074 	movhi	r2,4097
10012f20:	108f9804 	addi	r2,r2,15968
10012f24:	e0bfff15 	stw	r2,-4(fp)
10012f28:	00000606 	br	10012f44 <_do_dtors+0x38>
        (*dtor) (); 
10012f2c:	e0bfff17 	ldw	r2,-4(fp)
10012f30:	10800017 	ldw	r2,0(r2)
10012f34:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
10012f38:	e0bfff17 	ldw	r2,-4(fp)
10012f3c:	10bfff04 	addi	r2,r2,-4
10012f40:	e0bfff15 	stw	r2,-4(fp)
10012f44:	e0ffff17 	ldw	r3,-4(fp)
10012f48:	00840074 	movhi	r2,4097
10012f4c:	108f9904 	addi	r2,r2,15972
10012f50:	18bff62e 	bgeu	r3,r2,10012f2c <__alt_data_end+0xf8012f2c>
        (*dtor) (); 
}
10012f54:	0001883a 	nop
10012f58:	e037883a 	mov	sp,fp
10012f5c:	dfc00117 	ldw	ra,4(sp)
10012f60:	df000017 	ldw	fp,0(sp)
10012f64:	dec00204 	addi	sp,sp,8
10012f68:	f800283a 	ret

10012f6c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
10012f6c:	deffff04 	addi	sp,sp,-4
10012f70:	df000015 	stw	fp,0(sp)
10012f74:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
10012f78:	0001883a 	nop
10012f7c:	e037883a 	mov	sp,fp
10012f80:	df000017 	ldw	fp,0(sp)
10012f84:	dec00104 	addi	sp,sp,4
10012f88:	f800283a 	ret

10012f8c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10012f8c:	defff904 	addi	sp,sp,-28
10012f90:	dfc00615 	stw	ra,24(sp)
10012f94:	df000515 	stw	fp,20(sp)
10012f98:	df000504 	addi	fp,sp,20
10012f9c:	e13ffc15 	stw	r4,-16(fp)
10012fa0:	e17ffd15 	stw	r5,-12(fp)
10012fa4:	e1bffe15 	stw	r6,-8(fp)
10012fa8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
10012fac:	e0800217 	ldw	r2,8(fp)
10012fb0:	d8800015 	stw	r2,0(sp)
10012fb4:	e1ffff17 	ldw	r7,-4(fp)
10012fb8:	e1bffe17 	ldw	r6,-8(fp)
10012fbc:	e17ffd17 	ldw	r5,-12(fp)
10012fc0:	e13ffc17 	ldw	r4,-16(fp)
10012fc4:	001313c0 	call	1001313c <alt_iic_isr_register>
}  
10012fc8:	e037883a 	mov	sp,fp
10012fcc:	dfc00117 	ldw	ra,4(sp)
10012fd0:	df000017 	ldw	fp,0(sp)
10012fd4:	dec00204 	addi	sp,sp,8
10012fd8:	f800283a 	ret

10012fdc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
10012fdc:	defff904 	addi	sp,sp,-28
10012fe0:	df000615 	stw	fp,24(sp)
10012fe4:	df000604 	addi	fp,sp,24
10012fe8:	e13ffe15 	stw	r4,-8(fp)
10012fec:	e17fff15 	stw	r5,-4(fp)
10012ff0:	e0bfff17 	ldw	r2,-4(fp)
10012ff4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10012ff8:	0005303a 	rdctl	r2,status
10012ffc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013000:	e0fffb17 	ldw	r3,-20(fp)
10013004:	00bfff84 	movi	r2,-2
10013008:	1884703a 	and	r2,r3,r2
1001300c:	1001703a 	wrctl	status,r2
  
  return context;
10013010:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
10013014:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
10013018:	00c00044 	movi	r3,1
1001301c:	e0bffa17 	ldw	r2,-24(fp)
10013020:	1884983a 	sll	r2,r3,r2
10013024:	1007883a 	mov	r3,r2
10013028:	d0a79117 	ldw	r2,-25020(gp)
1001302c:	1884b03a 	or	r2,r3,r2
10013030:	d0a79115 	stw	r2,-25020(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10013034:	d0a79117 	ldw	r2,-25020(gp)
10013038:	100170fa 	wrctl	ienable,r2
1001303c:	e0bffc17 	ldw	r2,-16(fp)
10013040:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10013044:	e0bffd17 	ldw	r2,-12(fp)
10013048:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1001304c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
10013050:	0001883a 	nop
}
10013054:	e037883a 	mov	sp,fp
10013058:	df000017 	ldw	fp,0(sp)
1001305c:	dec00104 	addi	sp,sp,4
10013060:	f800283a 	ret

10013064 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
10013064:	defff904 	addi	sp,sp,-28
10013068:	df000615 	stw	fp,24(sp)
1001306c:	df000604 	addi	fp,sp,24
10013070:	e13ffe15 	stw	r4,-8(fp)
10013074:	e17fff15 	stw	r5,-4(fp)
10013078:	e0bfff17 	ldw	r2,-4(fp)
1001307c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013080:	0005303a 	rdctl	r2,status
10013084:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013088:	e0fffb17 	ldw	r3,-20(fp)
1001308c:	00bfff84 	movi	r2,-2
10013090:	1884703a 	and	r2,r3,r2
10013094:	1001703a 	wrctl	status,r2
  
  return context;
10013098:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1001309c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
100130a0:	00c00044 	movi	r3,1
100130a4:	e0bffa17 	ldw	r2,-24(fp)
100130a8:	1884983a 	sll	r2,r3,r2
100130ac:	0084303a 	nor	r2,zero,r2
100130b0:	1007883a 	mov	r3,r2
100130b4:	d0a79117 	ldw	r2,-25020(gp)
100130b8:	1884703a 	and	r2,r3,r2
100130bc:	d0a79115 	stw	r2,-25020(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
100130c0:	d0a79117 	ldw	r2,-25020(gp)
100130c4:	100170fa 	wrctl	ienable,r2
100130c8:	e0bffc17 	ldw	r2,-16(fp)
100130cc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
100130d0:	e0bffd17 	ldw	r2,-12(fp)
100130d4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
100130d8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
100130dc:	0001883a 	nop
}
100130e0:	e037883a 	mov	sp,fp
100130e4:	df000017 	ldw	fp,0(sp)
100130e8:	dec00104 	addi	sp,sp,4
100130ec:	f800283a 	ret

100130f0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
100130f0:	defffc04 	addi	sp,sp,-16
100130f4:	df000315 	stw	fp,12(sp)
100130f8:	df000304 	addi	fp,sp,12
100130fc:	e13ffe15 	stw	r4,-8(fp)
10013100:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
10013104:	000530fa 	rdctl	r2,ienable
10013108:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1001310c:	00c00044 	movi	r3,1
10013110:	e0bfff17 	ldw	r2,-4(fp)
10013114:	1884983a 	sll	r2,r3,r2
10013118:	1007883a 	mov	r3,r2
1001311c:	e0bffd17 	ldw	r2,-12(fp)
10013120:	1884703a 	and	r2,r3,r2
10013124:	1004c03a 	cmpne	r2,r2,zero
10013128:	10803fcc 	andi	r2,r2,255
}
1001312c:	e037883a 	mov	sp,fp
10013130:	df000017 	ldw	fp,0(sp)
10013134:	dec00104 	addi	sp,sp,4
10013138:	f800283a 	ret

1001313c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1001313c:	defff504 	addi	sp,sp,-44
10013140:	dfc00a15 	stw	ra,40(sp)
10013144:	df000915 	stw	fp,36(sp)
10013148:	df000904 	addi	fp,sp,36
1001314c:	e13ffc15 	stw	r4,-16(fp)
10013150:	e17ffd15 	stw	r5,-12(fp)
10013154:	e1bffe15 	stw	r6,-8(fp)
10013158:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1001315c:	00bffa84 	movi	r2,-22
10013160:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
10013164:	e0bffd17 	ldw	r2,-12(fp)
10013168:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1001316c:	e0bff817 	ldw	r2,-32(fp)
10013170:	10800808 	cmpgei	r2,r2,32
10013174:	1000271e 	bne	r2,zero,10013214 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013178:	0005303a 	rdctl	r2,status
1001317c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013180:	e0fffb17 	ldw	r3,-20(fp)
10013184:	00bfff84 	movi	r2,-2
10013188:	1884703a 	and	r2,r3,r2
1001318c:	1001703a 	wrctl	status,r2
  
  return context;
10013190:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
10013194:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
10013198:	00840074 	movhi	r2,4097
1001319c:	109fa604 	addi	r2,r2,32408
100131a0:	e0fff817 	ldw	r3,-32(fp)
100131a4:	180690fa 	slli	r3,r3,3
100131a8:	10c5883a 	add	r2,r2,r3
100131ac:	e0fffe17 	ldw	r3,-8(fp)
100131b0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
100131b4:	00840074 	movhi	r2,4097
100131b8:	109fa604 	addi	r2,r2,32408
100131bc:	e0fff817 	ldw	r3,-32(fp)
100131c0:	180690fa 	slli	r3,r3,3
100131c4:	10c5883a 	add	r2,r2,r3
100131c8:	10800104 	addi	r2,r2,4
100131cc:	e0ffff17 	ldw	r3,-4(fp)
100131d0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
100131d4:	e0bffe17 	ldw	r2,-8(fp)
100131d8:	10000526 	beq	r2,zero,100131f0 <alt_iic_isr_register+0xb4>
100131dc:	e0bff817 	ldw	r2,-32(fp)
100131e0:	100b883a 	mov	r5,r2
100131e4:	e13ffc17 	ldw	r4,-16(fp)
100131e8:	0012fdc0 	call	10012fdc <alt_ic_irq_enable>
100131ec:	00000406 	br	10013200 <alt_iic_isr_register+0xc4>
100131f0:	e0bff817 	ldw	r2,-32(fp)
100131f4:	100b883a 	mov	r5,r2
100131f8:	e13ffc17 	ldw	r4,-16(fp)
100131fc:	00130640 	call	10013064 <alt_ic_irq_disable>
10013200:	e0bff715 	stw	r2,-36(fp)
10013204:	e0bffa17 	ldw	r2,-24(fp)
10013208:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001320c:	e0bff917 	ldw	r2,-28(fp)
10013210:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
10013214:	e0bff717 	ldw	r2,-36(fp)
}
10013218:	e037883a 	mov	sp,fp
1001321c:	dfc00117 	ldw	ra,4(sp)
10013220:	df000017 	ldw	fp,0(sp)
10013224:	dec00204 	addi	sp,sp,8
10013228:	f800283a 	ret

1001322c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1001322c:	defff804 	addi	sp,sp,-32
10013230:	dfc00715 	stw	ra,28(sp)
10013234:	df000615 	stw	fp,24(sp)
10013238:	dc000515 	stw	r16,20(sp)
1001323c:	df000604 	addi	fp,sp,24
10013240:	e13ffb15 	stw	r4,-20(fp)
10013244:	e17ffc15 	stw	r5,-16(fp)
10013248:	e1bffd15 	stw	r6,-12(fp)
1001324c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
10013250:	e1bffe17 	ldw	r6,-8(fp)
10013254:	e17ffd17 	ldw	r5,-12(fp)
10013258:	e13ffc17 	ldw	r4,-16(fp)
1001325c:	00134b40 	call	100134b4 <open>
10013260:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
10013264:	e0bffa17 	ldw	r2,-24(fp)
10013268:	10002216 	blt	r2,zero,100132f4 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1001326c:	04040074 	movhi	r16,4097
10013270:	84138f04 	addi	r16,r16,20028
10013274:	e0bffa17 	ldw	r2,-24(fp)
10013278:	01400304 	movi	r5,12
1001327c:	1009883a 	mov	r4,r2
10013280:	0000e400 	call	10000e40 <__mulsi3>
10013284:	8085883a 	add	r2,r16,r2
10013288:	10c00017 	ldw	r3,0(r2)
1001328c:	e0bffb17 	ldw	r2,-20(fp)
10013290:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
10013294:	04040074 	movhi	r16,4097
10013298:	84138f04 	addi	r16,r16,20028
1001329c:	e0bffa17 	ldw	r2,-24(fp)
100132a0:	01400304 	movi	r5,12
100132a4:	1009883a 	mov	r4,r2
100132a8:	0000e400 	call	10000e40 <__mulsi3>
100132ac:	8085883a 	add	r2,r16,r2
100132b0:	10800104 	addi	r2,r2,4
100132b4:	10c00017 	ldw	r3,0(r2)
100132b8:	e0bffb17 	ldw	r2,-20(fp)
100132bc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
100132c0:	04040074 	movhi	r16,4097
100132c4:	84138f04 	addi	r16,r16,20028
100132c8:	e0bffa17 	ldw	r2,-24(fp)
100132cc:	01400304 	movi	r5,12
100132d0:	1009883a 	mov	r4,r2
100132d4:	0000e400 	call	10000e40 <__mulsi3>
100132d8:	8085883a 	add	r2,r16,r2
100132dc:	10800204 	addi	r2,r2,8
100132e0:	10c00017 	ldw	r3,0(r2)
100132e4:	e0bffb17 	ldw	r2,-20(fp)
100132e8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
100132ec:	e13ffa17 	ldw	r4,-24(fp)
100132f0:	0011d680 	call	10011d68 <alt_release_fd>
  }
} 
100132f4:	0001883a 	nop
100132f8:	e6ffff04 	addi	sp,fp,-4
100132fc:	dfc00217 	ldw	ra,8(sp)
10013300:	df000117 	ldw	fp,4(sp)
10013304:	dc000017 	ldw	r16,0(sp)
10013308:	dec00304 	addi	sp,sp,12
1001330c:	f800283a 	ret

10013310 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
10013310:	defffb04 	addi	sp,sp,-20
10013314:	dfc00415 	stw	ra,16(sp)
10013318:	df000315 	stw	fp,12(sp)
1001331c:	df000304 	addi	fp,sp,12
10013320:	e13ffd15 	stw	r4,-12(fp)
10013324:	e17ffe15 	stw	r5,-8(fp)
10013328:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1001332c:	01c07fc4 	movi	r7,511
10013330:	01800044 	movi	r6,1
10013334:	e17ffd17 	ldw	r5,-12(fp)
10013338:	01040074 	movhi	r4,4097
1001333c:	21139204 	addi	r4,r4,20040
10013340:	001322c0 	call	1001322c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
10013344:	01c07fc4 	movi	r7,511
10013348:	000d883a 	mov	r6,zero
1001334c:	e17ffe17 	ldw	r5,-8(fp)
10013350:	01040074 	movhi	r4,4097
10013354:	21138f04 	addi	r4,r4,20028
10013358:	001322c0 	call	1001322c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1001335c:	01c07fc4 	movi	r7,511
10013360:	01800044 	movi	r6,1
10013364:	e17fff17 	ldw	r5,-4(fp)
10013368:	01040074 	movhi	r4,4097
1001336c:	21139504 	addi	r4,r4,20052
10013370:	001322c0 	call	1001322c <alt_open_fd>
}  
10013374:	0001883a 	nop
10013378:	e037883a 	mov	sp,fp
1001337c:	dfc00117 	ldw	ra,4(sp)
10013380:	df000017 	ldw	fp,0(sp)
10013384:	dec00204 	addi	sp,sp,8
10013388:	f800283a 	ret

1001338c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1001338c:	defffe04 	addi	sp,sp,-8
10013390:	dfc00115 	stw	ra,4(sp)
10013394:	df000015 	stw	fp,0(sp)
10013398:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1001339c:	d0a00d17 	ldw	r2,-32716(gp)
100133a0:	10000326 	beq	r2,zero,100133b0 <alt_get_errno+0x24>
100133a4:	d0a00d17 	ldw	r2,-32716(gp)
100133a8:	103ee83a 	callr	r2
100133ac:	00000106 	br	100133b4 <alt_get_errno+0x28>
100133b0:	d0a78d04 	addi	r2,gp,-25036
}
100133b4:	e037883a 	mov	sp,fp
100133b8:	dfc00117 	ldw	ra,4(sp)
100133bc:	df000017 	ldw	fp,0(sp)
100133c0:	dec00204 	addi	sp,sp,8
100133c4:	f800283a 	ret

100133c8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
100133c8:	defffb04 	addi	sp,sp,-20
100133cc:	dfc00415 	stw	ra,16(sp)
100133d0:	df000315 	stw	fp,12(sp)
100133d4:	dc000215 	stw	r16,8(sp)
100133d8:	df000304 	addi	fp,sp,12
100133dc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
100133e0:	e0bffe17 	ldw	r2,-8(fp)
100133e4:	10800217 	ldw	r2,8(r2)
100133e8:	10d00034 	orhi	r3,r2,16384
100133ec:	e0bffe17 	ldw	r2,-8(fp)
100133f0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
100133f4:	e03ffd15 	stw	zero,-12(fp)
100133f8:	00002306 	br	10013488 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
100133fc:	04040074 	movhi	r16,4097
10013400:	84138f04 	addi	r16,r16,20028
10013404:	e0bffd17 	ldw	r2,-12(fp)
10013408:	01400304 	movi	r5,12
1001340c:	1009883a 	mov	r4,r2
10013410:	0000e400 	call	10000e40 <__mulsi3>
10013414:	8085883a 	add	r2,r16,r2
10013418:	10c00017 	ldw	r3,0(r2)
1001341c:	e0bffe17 	ldw	r2,-8(fp)
10013420:	10800017 	ldw	r2,0(r2)
10013424:	1880151e 	bne	r3,r2,1001347c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10013428:	04040074 	movhi	r16,4097
1001342c:	84138f04 	addi	r16,r16,20028
10013430:	e0bffd17 	ldw	r2,-12(fp)
10013434:	01400304 	movi	r5,12
10013438:	1009883a 	mov	r4,r2
1001343c:	0000e400 	call	10000e40 <__mulsi3>
10013440:	8085883a 	add	r2,r16,r2
10013444:	10800204 	addi	r2,r2,8
10013448:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1001344c:	10000b0e 	bge	r2,zero,1001347c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
10013450:	01400304 	movi	r5,12
10013454:	e13ffd17 	ldw	r4,-12(fp)
10013458:	0000e400 	call	10000e40 <__mulsi3>
1001345c:	1007883a 	mov	r3,r2
10013460:	00840074 	movhi	r2,4097
10013464:	10938f04 	addi	r2,r2,20028
10013468:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1001346c:	e0bffe17 	ldw	r2,-8(fp)
10013470:	18800226 	beq	r3,r2,1001347c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
10013474:	00bffcc4 	movi	r2,-13
10013478:	00000806 	br	1001349c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1001347c:	e0bffd17 	ldw	r2,-12(fp)
10013480:	10800044 	addi	r2,r2,1
10013484:	e0bffd15 	stw	r2,-12(fp)
10013488:	d0a00c17 	ldw	r2,-32720(gp)
1001348c:	1007883a 	mov	r3,r2
10013490:	e0bffd17 	ldw	r2,-12(fp)
10013494:	18bfd92e 	bgeu	r3,r2,100133fc <__alt_data_end+0xf80133fc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
10013498:	0005883a 	mov	r2,zero
}
1001349c:	e6ffff04 	addi	sp,fp,-4
100134a0:	dfc00217 	ldw	ra,8(sp)
100134a4:	df000117 	ldw	fp,4(sp)
100134a8:	dc000017 	ldw	r16,0(sp)
100134ac:	dec00304 	addi	sp,sp,12
100134b0:	f800283a 	ret

100134b4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
100134b4:	defff604 	addi	sp,sp,-40
100134b8:	dfc00915 	stw	ra,36(sp)
100134bc:	df000815 	stw	fp,32(sp)
100134c0:	df000804 	addi	fp,sp,32
100134c4:	e13ffd15 	stw	r4,-12(fp)
100134c8:	e17ffe15 	stw	r5,-8(fp)
100134cc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
100134d0:	00bfffc4 	movi	r2,-1
100134d4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
100134d8:	00bffb44 	movi	r2,-19
100134dc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
100134e0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
100134e4:	d1600a04 	addi	r5,gp,-32728
100134e8:	e13ffd17 	ldw	r4,-12(fp)
100134ec:	00137d80 	call	100137d8 <alt_find_dev>
100134f0:	e0bff815 	stw	r2,-32(fp)
100134f4:	e0bff817 	ldw	r2,-32(fp)
100134f8:	1000051e 	bne	r2,zero,10013510 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
100134fc:	e13ffd17 	ldw	r4,-12(fp)
10013500:	00138680 	call	10013868 <alt_find_file>
10013504:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
10013508:	00800044 	movi	r2,1
1001350c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
10013510:	e0bff817 	ldw	r2,-32(fp)
10013514:	10002b26 	beq	r2,zero,100135c4 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
10013518:	e13ff817 	ldw	r4,-32(fp)
1001351c:	00139700 	call	10013970 <alt_get_fd>
10013520:	e0bff915 	stw	r2,-28(fp)
10013524:	e0bff917 	ldw	r2,-28(fp)
10013528:	1000030e 	bge	r2,zero,10013538 <open+0x84>
    {
      status = index;
1001352c:	e0bff917 	ldw	r2,-28(fp)
10013530:	e0bffa15 	stw	r2,-24(fp)
10013534:	00002506 	br	100135cc <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
10013538:	01400304 	movi	r5,12
1001353c:	e13ff917 	ldw	r4,-28(fp)
10013540:	0000e400 	call	10000e40 <__mulsi3>
10013544:	1007883a 	mov	r3,r2
10013548:	00840074 	movhi	r2,4097
1001354c:	10938f04 	addi	r2,r2,20028
10013550:	1885883a 	add	r2,r3,r2
10013554:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
10013558:	e0fffe17 	ldw	r3,-8(fp)
1001355c:	00900034 	movhi	r2,16384
10013560:	10bfffc4 	addi	r2,r2,-1
10013564:	1886703a 	and	r3,r3,r2
10013568:	e0bffc17 	ldw	r2,-16(fp)
1001356c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
10013570:	e0bffb17 	ldw	r2,-20(fp)
10013574:	1000051e 	bne	r2,zero,1001358c <open+0xd8>
10013578:	e13ffc17 	ldw	r4,-16(fp)
1001357c:	00133c80 	call	100133c8 <alt_file_locked>
10013580:	e0bffa15 	stw	r2,-24(fp)
10013584:	e0bffa17 	ldw	r2,-24(fp)
10013588:	10001016 	blt	r2,zero,100135cc <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1001358c:	e0bff817 	ldw	r2,-32(fp)
10013590:	10800317 	ldw	r2,12(r2)
10013594:	10000826 	beq	r2,zero,100135b8 <open+0x104>
10013598:	e0bff817 	ldw	r2,-32(fp)
1001359c:	10800317 	ldw	r2,12(r2)
100135a0:	e1ffff17 	ldw	r7,-4(fp)
100135a4:	e1bffe17 	ldw	r6,-8(fp)
100135a8:	e17ffd17 	ldw	r5,-12(fp)
100135ac:	e13ffc17 	ldw	r4,-16(fp)
100135b0:	103ee83a 	callr	r2
100135b4:	00000106 	br	100135bc <open+0x108>
100135b8:	0005883a 	mov	r2,zero
100135bc:	e0bffa15 	stw	r2,-24(fp)
100135c0:	00000206 	br	100135cc <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
100135c4:	00bffb44 	movi	r2,-19
100135c8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
100135cc:	e0bffa17 	ldw	r2,-24(fp)
100135d0:	1000090e 	bge	r2,zero,100135f8 <open+0x144>
  {
    alt_release_fd (index);  
100135d4:	e13ff917 	ldw	r4,-28(fp)
100135d8:	0011d680 	call	10011d68 <alt_release_fd>
    ALT_ERRNO = -status;
100135dc:	001338c0 	call	1001338c <alt_get_errno>
100135e0:	1007883a 	mov	r3,r2
100135e4:	e0bffa17 	ldw	r2,-24(fp)
100135e8:	0085c83a 	sub	r2,zero,r2
100135ec:	18800015 	stw	r2,0(r3)
    return -1;
100135f0:	00bfffc4 	movi	r2,-1
100135f4:	00000106 	br	100135fc <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
100135f8:	e0bff917 	ldw	r2,-28(fp)
}
100135fc:	e037883a 	mov	sp,fp
10013600:	dfc00117 	ldw	ra,4(sp)
10013604:	df000017 	ldw	fp,0(sp)
10013608:	dec00204 	addi	sp,sp,8
1001360c:	f800283a 	ret

10013610 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
10013610:	defffa04 	addi	sp,sp,-24
10013614:	df000515 	stw	fp,20(sp)
10013618:	df000504 	addi	fp,sp,20
1001361c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013620:	0005303a 	rdctl	r2,status
10013624:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013628:	e0fffc17 	ldw	r3,-16(fp)
1001362c:	00bfff84 	movi	r2,-2
10013630:	1884703a 	and	r2,r3,r2
10013634:	1001703a 	wrctl	status,r2
  
  return context;
10013638:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1001363c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
10013640:	e0bfff17 	ldw	r2,-4(fp)
10013644:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
10013648:	e0bffd17 	ldw	r2,-12(fp)
1001364c:	10800017 	ldw	r2,0(r2)
10013650:	e0fffd17 	ldw	r3,-12(fp)
10013654:	18c00117 	ldw	r3,4(r3)
10013658:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1001365c:	e0bffd17 	ldw	r2,-12(fp)
10013660:	10800117 	ldw	r2,4(r2)
10013664:	e0fffd17 	ldw	r3,-12(fp)
10013668:	18c00017 	ldw	r3,0(r3)
1001366c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
10013670:	e0bffd17 	ldw	r2,-12(fp)
10013674:	e0fffd17 	ldw	r3,-12(fp)
10013678:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1001367c:	e0bffd17 	ldw	r2,-12(fp)
10013680:	e0fffd17 	ldw	r3,-12(fp)
10013684:	10c00015 	stw	r3,0(r2)
10013688:	e0bffb17 	ldw	r2,-20(fp)
1001368c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10013690:	e0bffe17 	ldw	r2,-8(fp)
10013694:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
10013698:	0001883a 	nop
1001369c:	e037883a 	mov	sp,fp
100136a0:	df000017 	ldw	fp,0(sp)
100136a4:	dec00104 	addi	sp,sp,4
100136a8:	f800283a 	ret

100136ac <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
100136ac:	defffb04 	addi	sp,sp,-20
100136b0:	dfc00415 	stw	ra,16(sp)
100136b4:	df000315 	stw	fp,12(sp)
100136b8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
100136bc:	d0a01017 	ldw	r2,-32704(gp)
100136c0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
100136c4:	d0a79317 	ldw	r2,-25012(gp)
100136c8:	10800044 	addi	r2,r2,1
100136cc:	d0a79315 	stw	r2,-25012(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
100136d0:	00002e06 	br	1001378c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
100136d4:	e0bffd17 	ldw	r2,-12(fp)
100136d8:	10800017 	ldw	r2,0(r2)
100136dc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
100136e0:	e0bffd17 	ldw	r2,-12(fp)
100136e4:	10800403 	ldbu	r2,16(r2)
100136e8:	10803fcc 	andi	r2,r2,255
100136ec:	10000426 	beq	r2,zero,10013700 <alt_tick+0x54>
100136f0:	d0a79317 	ldw	r2,-25012(gp)
100136f4:	1000021e 	bne	r2,zero,10013700 <alt_tick+0x54>
    {
      alarm->rollover = 0;
100136f8:	e0bffd17 	ldw	r2,-12(fp)
100136fc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
10013700:	e0bffd17 	ldw	r2,-12(fp)
10013704:	10800217 	ldw	r2,8(r2)
10013708:	d0e79317 	ldw	r3,-25012(gp)
1001370c:	18801d36 	bltu	r3,r2,10013784 <alt_tick+0xd8>
10013710:	e0bffd17 	ldw	r2,-12(fp)
10013714:	10800403 	ldbu	r2,16(r2)
10013718:	10803fcc 	andi	r2,r2,255
1001371c:	1000191e 	bne	r2,zero,10013784 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
10013720:	e0bffd17 	ldw	r2,-12(fp)
10013724:	10800317 	ldw	r2,12(r2)
10013728:	e0fffd17 	ldw	r3,-12(fp)
1001372c:	18c00517 	ldw	r3,20(r3)
10013730:	1809883a 	mov	r4,r3
10013734:	103ee83a 	callr	r2
10013738:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1001373c:	e0bfff17 	ldw	r2,-4(fp)
10013740:	1000031e 	bne	r2,zero,10013750 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
10013744:	e13ffd17 	ldw	r4,-12(fp)
10013748:	00136100 	call	10013610 <alt_alarm_stop>
1001374c:	00000d06 	br	10013784 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
10013750:	e0bffd17 	ldw	r2,-12(fp)
10013754:	10c00217 	ldw	r3,8(r2)
10013758:	e0bfff17 	ldw	r2,-4(fp)
1001375c:	1887883a 	add	r3,r3,r2
10013760:	e0bffd17 	ldw	r2,-12(fp)
10013764:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
10013768:	e0bffd17 	ldw	r2,-12(fp)
1001376c:	10c00217 	ldw	r3,8(r2)
10013770:	d0a79317 	ldw	r2,-25012(gp)
10013774:	1880032e 	bgeu	r3,r2,10013784 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
10013778:	e0bffd17 	ldw	r2,-12(fp)
1001377c:	00c00044 	movi	r3,1
10013780:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
10013784:	e0bffe17 	ldw	r2,-8(fp)
10013788:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1001378c:	e0fffd17 	ldw	r3,-12(fp)
10013790:	d0a01004 	addi	r2,gp,-32704
10013794:	18bfcf1e 	bne	r3,r2,100136d4 <__alt_data_end+0xf80136d4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
10013798:	0001883a 	nop
}
1001379c:	0001883a 	nop
100137a0:	e037883a 	mov	sp,fp
100137a4:	dfc00117 	ldw	ra,4(sp)
100137a8:	df000017 	ldw	fp,0(sp)
100137ac:	dec00204 	addi	sp,sp,8
100137b0:	f800283a 	ret

100137b4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
100137b4:	deffff04 	addi	sp,sp,-4
100137b8:	df000015 	stw	fp,0(sp)
100137bc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
100137c0:	000170fa 	wrctl	ienable,zero
}
100137c4:	0001883a 	nop
100137c8:	e037883a 	mov	sp,fp
100137cc:	df000017 	ldw	fp,0(sp)
100137d0:	dec00104 	addi	sp,sp,4
100137d4:	f800283a 	ret

100137d8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
100137d8:	defffa04 	addi	sp,sp,-24
100137dc:	dfc00515 	stw	ra,20(sp)
100137e0:	df000415 	stw	fp,16(sp)
100137e4:	df000404 	addi	fp,sp,16
100137e8:	e13ffe15 	stw	r4,-8(fp)
100137ec:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
100137f0:	e0bfff17 	ldw	r2,-4(fp)
100137f4:	10800017 	ldw	r2,0(r2)
100137f8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
100137fc:	e13ffe17 	ldw	r4,-8(fp)
10013800:	00010e80 	call	100010e8 <strlen>
10013804:	10800044 	addi	r2,r2,1
10013808:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1001380c:	00000d06 	br	10013844 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
10013810:	e0bffc17 	ldw	r2,-16(fp)
10013814:	10800217 	ldw	r2,8(r2)
10013818:	e0fffd17 	ldw	r3,-12(fp)
1001381c:	180d883a 	mov	r6,r3
10013820:	e17ffe17 	ldw	r5,-8(fp)
10013824:	1009883a 	mov	r4,r2
10013828:	0013b1c0 	call	10013b1c <memcmp>
1001382c:	1000021e 	bne	r2,zero,10013838 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
10013830:	e0bffc17 	ldw	r2,-16(fp)
10013834:	00000706 	br	10013854 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
10013838:	e0bffc17 	ldw	r2,-16(fp)
1001383c:	10800017 	ldw	r2,0(r2)
10013840:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10013844:	e0fffc17 	ldw	r3,-16(fp)
10013848:	e0bfff17 	ldw	r2,-4(fp)
1001384c:	18bff01e 	bne	r3,r2,10013810 <__alt_data_end+0xf8013810>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
10013850:	0005883a 	mov	r2,zero
}
10013854:	e037883a 	mov	sp,fp
10013858:	dfc00117 	ldw	ra,4(sp)
1001385c:	df000017 	ldw	fp,0(sp)
10013860:	dec00204 	addi	sp,sp,8
10013864:	f800283a 	ret

10013868 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
10013868:	defffb04 	addi	sp,sp,-20
1001386c:	dfc00415 	stw	ra,16(sp)
10013870:	df000315 	stw	fp,12(sp)
10013874:	df000304 	addi	fp,sp,12
10013878:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1001387c:	d0a00817 	ldw	r2,-32736(gp)
10013880:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10013884:	00003106 	br	1001394c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
10013888:	e0bffd17 	ldw	r2,-12(fp)
1001388c:	10800217 	ldw	r2,8(r2)
10013890:	1009883a 	mov	r4,r2
10013894:	00010e80 	call	100010e8 <strlen>
10013898:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1001389c:	e0bffd17 	ldw	r2,-12(fp)
100138a0:	10c00217 	ldw	r3,8(r2)
100138a4:	e0bffe17 	ldw	r2,-8(fp)
100138a8:	10bfffc4 	addi	r2,r2,-1
100138ac:	1885883a 	add	r2,r3,r2
100138b0:	10800003 	ldbu	r2,0(r2)
100138b4:	10803fcc 	andi	r2,r2,255
100138b8:	1080201c 	xori	r2,r2,128
100138bc:	10bfe004 	addi	r2,r2,-128
100138c0:	10800bd8 	cmpnei	r2,r2,47
100138c4:	1000031e 	bne	r2,zero,100138d4 <alt_find_file+0x6c>
    {
      len -= 1;
100138c8:	e0bffe17 	ldw	r2,-8(fp)
100138cc:	10bfffc4 	addi	r2,r2,-1
100138d0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
100138d4:	e0bffe17 	ldw	r2,-8(fp)
100138d8:	e0ffff17 	ldw	r3,-4(fp)
100138dc:	1885883a 	add	r2,r3,r2
100138e0:	10800003 	ldbu	r2,0(r2)
100138e4:	10803fcc 	andi	r2,r2,255
100138e8:	1080201c 	xori	r2,r2,128
100138ec:	10bfe004 	addi	r2,r2,-128
100138f0:	10800be0 	cmpeqi	r2,r2,47
100138f4:	1000081e 	bne	r2,zero,10013918 <alt_find_file+0xb0>
100138f8:	e0bffe17 	ldw	r2,-8(fp)
100138fc:	e0ffff17 	ldw	r3,-4(fp)
10013900:	1885883a 	add	r2,r3,r2
10013904:	10800003 	ldbu	r2,0(r2)
10013908:	10803fcc 	andi	r2,r2,255
1001390c:	1080201c 	xori	r2,r2,128
10013910:	10bfe004 	addi	r2,r2,-128
10013914:	10000a1e 	bne	r2,zero,10013940 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
10013918:	e0bffd17 	ldw	r2,-12(fp)
1001391c:	10800217 	ldw	r2,8(r2)
10013920:	e0fffe17 	ldw	r3,-8(fp)
10013924:	180d883a 	mov	r6,r3
10013928:	e17fff17 	ldw	r5,-4(fp)
1001392c:	1009883a 	mov	r4,r2
10013930:	0013b1c0 	call	10013b1c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10013934:	1000021e 	bne	r2,zero,10013940 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
10013938:	e0bffd17 	ldw	r2,-12(fp)
1001393c:	00000706 	br	1001395c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
10013940:	e0bffd17 	ldw	r2,-12(fp)
10013944:	10800017 	ldw	r2,0(r2)
10013948:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1001394c:	e0fffd17 	ldw	r3,-12(fp)
10013950:	d0a00804 	addi	r2,gp,-32736
10013954:	18bfcc1e 	bne	r3,r2,10013888 <__alt_data_end+0xf8013888>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
10013958:	0005883a 	mov	r2,zero
}
1001395c:	e037883a 	mov	sp,fp
10013960:	dfc00117 	ldw	ra,4(sp)
10013964:	df000017 	ldw	fp,0(sp)
10013968:	dec00204 	addi	sp,sp,8
1001396c:	f800283a 	ret

10013970 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
10013970:	defffa04 	addi	sp,sp,-24
10013974:	dfc00515 	stw	ra,20(sp)
10013978:	df000415 	stw	fp,16(sp)
1001397c:	dc000315 	stw	r16,12(sp)
10013980:	df000404 	addi	fp,sp,16
10013984:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
10013988:	00bffa04 	movi	r2,-24
1001398c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10013990:	e03ffc15 	stw	zero,-16(fp)
10013994:	00001d06 	br	10013a0c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
10013998:	04040074 	movhi	r16,4097
1001399c:	84138f04 	addi	r16,r16,20028
100139a0:	e0bffc17 	ldw	r2,-16(fp)
100139a4:	01400304 	movi	r5,12
100139a8:	1009883a 	mov	r4,r2
100139ac:	0000e400 	call	10000e40 <__mulsi3>
100139b0:	8085883a 	add	r2,r16,r2
100139b4:	10800017 	ldw	r2,0(r2)
100139b8:	1000111e 	bne	r2,zero,10013a00 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
100139bc:	04040074 	movhi	r16,4097
100139c0:	84138f04 	addi	r16,r16,20028
100139c4:	e0bffc17 	ldw	r2,-16(fp)
100139c8:	01400304 	movi	r5,12
100139cc:	1009883a 	mov	r4,r2
100139d0:	0000e400 	call	10000e40 <__mulsi3>
100139d4:	8085883a 	add	r2,r16,r2
100139d8:	e0fffe17 	ldw	r3,-8(fp)
100139dc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
100139e0:	d0e00c17 	ldw	r3,-32720(gp)
100139e4:	e0bffc17 	ldw	r2,-16(fp)
100139e8:	1880020e 	bge	r3,r2,100139f4 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
100139ec:	e0bffc17 	ldw	r2,-16(fp)
100139f0:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
100139f4:	e0bffc17 	ldw	r2,-16(fp)
100139f8:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
100139fc:	00000606 	br	10013a18 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10013a00:	e0bffc17 	ldw	r2,-16(fp)
10013a04:	10800044 	addi	r2,r2,1
10013a08:	e0bffc15 	stw	r2,-16(fp)
10013a0c:	e0bffc17 	ldw	r2,-16(fp)
10013a10:	10800810 	cmplti	r2,r2,32
10013a14:	103fe01e 	bne	r2,zero,10013998 <__alt_data_end+0xf8013998>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
10013a18:	e0bffd17 	ldw	r2,-12(fp)
}
10013a1c:	e6ffff04 	addi	sp,fp,-4
10013a20:	dfc00217 	ldw	ra,8(sp)
10013a24:	df000117 	ldw	fp,4(sp)
10013a28:	dc000017 	ldw	r16,0(sp)
10013a2c:	dec00304 	addi	sp,sp,12
10013a30:	f800283a 	ret

10013a34 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10013a34:	defffe04 	addi	sp,sp,-8
10013a38:	df000115 	stw	fp,4(sp)
10013a3c:	df000104 	addi	fp,sp,4
10013a40:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
10013a44:	e0bfff17 	ldw	r2,-4(fp)
10013a48:	10bffe84 	addi	r2,r2,-6
10013a4c:	10c00428 	cmpgeui	r3,r2,16
10013a50:	18001a1e 	bne	r3,zero,10013abc <alt_exception_cause_generated_bad_addr+0x88>
10013a54:	100690ba 	slli	r3,r2,2
10013a58:	00840074 	movhi	r2,4097
10013a5c:	108e9b04 	addi	r2,r2,14956
10013a60:	1885883a 	add	r2,r3,r2
10013a64:	10800017 	ldw	r2,0(r2)
10013a68:	1000683a 	jmp	r2
10013a6c:	10013aac 	andhi	zero,r2,1258
10013a70:	10013aac 	andhi	zero,r2,1258
10013a74:	10013abc 	xorhi	zero,r2,1258
10013a78:	10013abc 	xorhi	zero,r2,1258
10013a7c:	10013abc 	xorhi	zero,r2,1258
10013a80:	10013aac 	andhi	zero,r2,1258
10013a84:	10013ab4 	orhi	zero,r2,1258
10013a88:	10013abc 	xorhi	zero,r2,1258
10013a8c:	10013aac 	andhi	zero,r2,1258
10013a90:	10013aac 	andhi	zero,r2,1258
10013a94:	10013abc 	xorhi	zero,r2,1258
10013a98:	10013aac 	andhi	zero,r2,1258
10013a9c:	10013ab4 	orhi	zero,r2,1258
10013aa0:	10013abc 	xorhi	zero,r2,1258
10013aa4:	10013abc 	xorhi	zero,r2,1258
10013aa8:	10013aac 	andhi	zero,r2,1258
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
10013aac:	00800044 	movi	r2,1
10013ab0:	00000306 	br	10013ac0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
10013ab4:	0005883a 	mov	r2,zero
10013ab8:	00000106 	br	10013ac0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
10013abc:	0005883a 	mov	r2,zero
  }
}
10013ac0:	e037883a 	mov	sp,fp
10013ac4:	df000017 	ldw	fp,0(sp)
10013ac8:	dec00104 	addi	sp,sp,4
10013acc:	f800283a 	ret

10013ad0 <atexit>:
10013ad0:	200b883a 	mov	r5,r4
10013ad4:	000f883a 	mov	r7,zero
10013ad8:	000d883a 	mov	r6,zero
10013adc:	0009883a 	mov	r4,zero
10013ae0:	0013b981 	jmpi	10013b98 <__register_exitproc>

10013ae4 <exit>:
10013ae4:	defffe04 	addi	sp,sp,-8
10013ae8:	000b883a 	mov	r5,zero
10013aec:	dc000015 	stw	r16,0(sp)
10013af0:	dfc00115 	stw	ra,4(sp)
10013af4:	2021883a 	mov	r16,r4
10013af8:	0013cb00 	call	10013cb0 <__call_exitprocs>
10013afc:	00840074 	movhi	r2,4097
10013b00:	10980904 	addi	r2,r2,24612
10013b04:	11000017 	ldw	r4,0(r2)
10013b08:	20800f17 	ldw	r2,60(r4)
10013b0c:	10000126 	beq	r2,zero,10013b14 <exit+0x30>
10013b10:	103ee83a 	callr	r2
10013b14:	8009883a 	mov	r4,r16
10013b18:	0013e300 	call	10013e30 <_exit>

10013b1c <memcmp>:
10013b1c:	01c000c4 	movi	r7,3
10013b20:	3980192e 	bgeu	r7,r6,10013b88 <memcmp+0x6c>
10013b24:	2144b03a 	or	r2,r4,r5
10013b28:	11c4703a 	and	r2,r2,r7
10013b2c:	10000f26 	beq	r2,zero,10013b6c <memcmp+0x50>
10013b30:	20800003 	ldbu	r2,0(r4)
10013b34:	28c00003 	ldbu	r3,0(r5)
10013b38:	10c0151e 	bne	r2,r3,10013b90 <memcmp+0x74>
10013b3c:	31bfff84 	addi	r6,r6,-2
10013b40:	01ffffc4 	movi	r7,-1
10013b44:	00000406 	br	10013b58 <memcmp+0x3c>
10013b48:	20800003 	ldbu	r2,0(r4)
10013b4c:	28c00003 	ldbu	r3,0(r5)
10013b50:	31bfffc4 	addi	r6,r6,-1
10013b54:	10c00e1e 	bne	r2,r3,10013b90 <memcmp+0x74>
10013b58:	21000044 	addi	r4,r4,1
10013b5c:	29400044 	addi	r5,r5,1
10013b60:	31fff91e 	bne	r6,r7,10013b48 <__alt_data_end+0xf8013b48>
10013b64:	0005883a 	mov	r2,zero
10013b68:	f800283a 	ret
10013b6c:	20c00017 	ldw	r3,0(r4)
10013b70:	28800017 	ldw	r2,0(r5)
10013b74:	18bfee1e 	bne	r3,r2,10013b30 <__alt_data_end+0xf8013b30>
10013b78:	31bfff04 	addi	r6,r6,-4
10013b7c:	21000104 	addi	r4,r4,4
10013b80:	29400104 	addi	r5,r5,4
10013b84:	39bff936 	bltu	r7,r6,10013b6c <__alt_data_end+0xf8013b6c>
10013b88:	303fe91e 	bne	r6,zero,10013b30 <__alt_data_end+0xf8013b30>
10013b8c:	003ff506 	br	10013b64 <__alt_data_end+0xf8013b64>
10013b90:	10c5c83a 	sub	r2,r2,r3
10013b94:	f800283a 	ret

10013b98 <__register_exitproc>:
10013b98:	defffa04 	addi	sp,sp,-24
10013b9c:	dc000315 	stw	r16,12(sp)
10013ba0:	04040074 	movhi	r16,4097
10013ba4:	84180904 	addi	r16,r16,24612
10013ba8:	80c00017 	ldw	r3,0(r16)
10013bac:	dc400415 	stw	r17,16(sp)
10013bb0:	dfc00515 	stw	ra,20(sp)
10013bb4:	18805217 	ldw	r2,328(r3)
10013bb8:	2023883a 	mov	r17,r4
10013bbc:	10003726 	beq	r2,zero,10013c9c <__register_exitproc+0x104>
10013bc0:	10c00117 	ldw	r3,4(r2)
10013bc4:	010007c4 	movi	r4,31
10013bc8:	20c00e16 	blt	r4,r3,10013c04 <__register_exitproc+0x6c>
10013bcc:	1a000044 	addi	r8,r3,1
10013bd0:	8800221e 	bne	r17,zero,10013c5c <__register_exitproc+0xc4>
10013bd4:	18c00084 	addi	r3,r3,2
10013bd8:	18c7883a 	add	r3,r3,r3
10013bdc:	18c7883a 	add	r3,r3,r3
10013be0:	12000115 	stw	r8,4(r2)
10013be4:	10c7883a 	add	r3,r2,r3
10013be8:	19400015 	stw	r5,0(r3)
10013bec:	0005883a 	mov	r2,zero
10013bf0:	dfc00517 	ldw	ra,20(sp)
10013bf4:	dc400417 	ldw	r17,16(sp)
10013bf8:	dc000317 	ldw	r16,12(sp)
10013bfc:	dec00604 	addi	sp,sp,24
10013c00:	f800283a 	ret
10013c04:	00800034 	movhi	r2,0
10013c08:	10800004 	addi	r2,r2,0
10013c0c:	10002626 	beq	r2,zero,10013ca8 <__register_exitproc+0x110>
10013c10:	01006404 	movi	r4,400
10013c14:	d9400015 	stw	r5,0(sp)
10013c18:	d9800115 	stw	r6,4(sp)
10013c1c:	d9c00215 	stw	r7,8(sp)
10013c20:	00000000 	call	10000000 <__alt_mem_sdram>
10013c24:	d9400017 	ldw	r5,0(sp)
10013c28:	d9800117 	ldw	r6,4(sp)
10013c2c:	d9c00217 	ldw	r7,8(sp)
10013c30:	10001d26 	beq	r2,zero,10013ca8 <__register_exitproc+0x110>
10013c34:	81000017 	ldw	r4,0(r16)
10013c38:	10000115 	stw	zero,4(r2)
10013c3c:	02000044 	movi	r8,1
10013c40:	22405217 	ldw	r9,328(r4)
10013c44:	0007883a 	mov	r3,zero
10013c48:	12400015 	stw	r9,0(r2)
10013c4c:	20805215 	stw	r2,328(r4)
10013c50:	10006215 	stw	zero,392(r2)
10013c54:	10006315 	stw	zero,396(r2)
10013c58:	883fde26 	beq	r17,zero,10013bd4 <__alt_data_end+0xf8013bd4>
10013c5c:	18c9883a 	add	r4,r3,r3
10013c60:	2109883a 	add	r4,r4,r4
10013c64:	1109883a 	add	r4,r2,r4
10013c68:	21802215 	stw	r6,136(r4)
10013c6c:	01800044 	movi	r6,1
10013c70:	12406217 	ldw	r9,392(r2)
10013c74:	30cc983a 	sll	r6,r6,r3
10013c78:	4992b03a 	or	r9,r9,r6
10013c7c:	12406215 	stw	r9,392(r2)
10013c80:	21c04215 	stw	r7,264(r4)
10013c84:	01000084 	movi	r4,2
10013c88:	893fd21e 	bne	r17,r4,10013bd4 <__alt_data_end+0xf8013bd4>
10013c8c:	11006317 	ldw	r4,396(r2)
10013c90:	218cb03a 	or	r6,r4,r6
10013c94:	11806315 	stw	r6,396(r2)
10013c98:	003fce06 	br	10013bd4 <__alt_data_end+0xf8013bd4>
10013c9c:	18805304 	addi	r2,r3,332
10013ca0:	18805215 	stw	r2,328(r3)
10013ca4:	003fc606 	br	10013bc0 <__alt_data_end+0xf8013bc0>
10013ca8:	00bfffc4 	movi	r2,-1
10013cac:	003fd006 	br	10013bf0 <__alt_data_end+0xf8013bf0>

10013cb0 <__call_exitprocs>:
10013cb0:	defff504 	addi	sp,sp,-44
10013cb4:	df000915 	stw	fp,36(sp)
10013cb8:	dd400615 	stw	r21,24(sp)
10013cbc:	dc800315 	stw	r18,12(sp)
10013cc0:	dfc00a15 	stw	ra,40(sp)
10013cc4:	ddc00815 	stw	r23,32(sp)
10013cc8:	dd800715 	stw	r22,28(sp)
10013ccc:	dd000515 	stw	r20,20(sp)
10013cd0:	dcc00415 	stw	r19,16(sp)
10013cd4:	dc400215 	stw	r17,8(sp)
10013cd8:	dc000115 	stw	r16,4(sp)
10013cdc:	d9000015 	stw	r4,0(sp)
10013ce0:	2839883a 	mov	fp,r5
10013ce4:	04800044 	movi	r18,1
10013ce8:	057fffc4 	movi	r21,-1
10013cec:	00840074 	movhi	r2,4097
10013cf0:	10980904 	addi	r2,r2,24612
10013cf4:	12000017 	ldw	r8,0(r2)
10013cf8:	45005217 	ldw	r20,328(r8)
10013cfc:	44c05204 	addi	r19,r8,328
10013d00:	a0001c26 	beq	r20,zero,10013d74 <__call_exitprocs+0xc4>
10013d04:	a0800117 	ldw	r2,4(r20)
10013d08:	15ffffc4 	addi	r23,r2,-1
10013d0c:	b8000d16 	blt	r23,zero,10013d44 <__call_exitprocs+0x94>
10013d10:	14000044 	addi	r16,r2,1
10013d14:	8421883a 	add	r16,r16,r16
10013d18:	8421883a 	add	r16,r16,r16
10013d1c:	84402004 	addi	r17,r16,128
10013d20:	a463883a 	add	r17,r20,r17
10013d24:	a421883a 	add	r16,r20,r16
10013d28:	e0001e26 	beq	fp,zero,10013da4 <__call_exitprocs+0xf4>
10013d2c:	80804017 	ldw	r2,256(r16)
10013d30:	e0801c26 	beq	fp,r2,10013da4 <__call_exitprocs+0xf4>
10013d34:	bdffffc4 	addi	r23,r23,-1
10013d38:	843fff04 	addi	r16,r16,-4
10013d3c:	8c7fff04 	addi	r17,r17,-4
10013d40:	bd7ff91e 	bne	r23,r21,10013d28 <__alt_data_end+0xf8013d28>
10013d44:	00800034 	movhi	r2,0
10013d48:	10800004 	addi	r2,r2,0
10013d4c:	10000926 	beq	r2,zero,10013d74 <__call_exitprocs+0xc4>
10013d50:	a0800117 	ldw	r2,4(r20)
10013d54:	1000301e 	bne	r2,zero,10013e18 <__call_exitprocs+0x168>
10013d58:	a0800017 	ldw	r2,0(r20)
10013d5c:	10003226 	beq	r2,zero,10013e28 <__call_exitprocs+0x178>
10013d60:	a009883a 	mov	r4,r20
10013d64:	98800015 	stw	r2,0(r19)
10013d68:	00000000 	call	10000000 <__alt_mem_sdram>
10013d6c:	9d000017 	ldw	r20,0(r19)
10013d70:	a03fe41e 	bne	r20,zero,10013d04 <__alt_data_end+0xf8013d04>
10013d74:	dfc00a17 	ldw	ra,40(sp)
10013d78:	df000917 	ldw	fp,36(sp)
10013d7c:	ddc00817 	ldw	r23,32(sp)
10013d80:	dd800717 	ldw	r22,28(sp)
10013d84:	dd400617 	ldw	r21,24(sp)
10013d88:	dd000517 	ldw	r20,20(sp)
10013d8c:	dcc00417 	ldw	r19,16(sp)
10013d90:	dc800317 	ldw	r18,12(sp)
10013d94:	dc400217 	ldw	r17,8(sp)
10013d98:	dc000117 	ldw	r16,4(sp)
10013d9c:	dec00b04 	addi	sp,sp,44
10013da0:	f800283a 	ret
10013da4:	a0800117 	ldw	r2,4(r20)
10013da8:	80c00017 	ldw	r3,0(r16)
10013dac:	10bfffc4 	addi	r2,r2,-1
10013db0:	15c01426 	beq	r2,r23,10013e04 <__call_exitprocs+0x154>
10013db4:	80000015 	stw	zero,0(r16)
10013db8:	183fde26 	beq	r3,zero,10013d34 <__alt_data_end+0xf8013d34>
10013dbc:	95c8983a 	sll	r4,r18,r23
10013dc0:	a0806217 	ldw	r2,392(r20)
10013dc4:	a5800117 	ldw	r22,4(r20)
10013dc8:	2084703a 	and	r2,r4,r2
10013dcc:	10000b26 	beq	r2,zero,10013dfc <__call_exitprocs+0x14c>
10013dd0:	a0806317 	ldw	r2,396(r20)
10013dd4:	2088703a 	and	r4,r4,r2
10013dd8:	20000c1e 	bne	r4,zero,10013e0c <__call_exitprocs+0x15c>
10013ddc:	89400017 	ldw	r5,0(r17)
10013de0:	d9000017 	ldw	r4,0(sp)
10013de4:	183ee83a 	callr	r3
10013de8:	a0800117 	ldw	r2,4(r20)
10013dec:	15bfbf1e 	bne	r2,r22,10013cec <__alt_data_end+0xf8013cec>
10013df0:	98800017 	ldw	r2,0(r19)
10013df4:	153fcf26 	beq	r2,r20,10013d34 <__alt_data_end+0xf8013d34>
10013df8:	003fbc06 	br	10013cec <__alt_data_end+0xf8013cec>
10013dfc:	183ee83a 	callr	r3
10013e00:	003ff906 	br	10013de8 <__alt_data_end+0xf8013de8>
10013e04:	a5c00115 	stw	r23,4(r20)
10013e08:	003feb06 	br	10013db8 <__alt_data_end+0xf8013db8>
10013e0c:	89000017 	ldw	r4,0(r17)
10013e10:	183ee83a 	callr	r3
10013e14:	003ff406 	br	10013de8 <__alt_data_end+0xf8013de8>
10013e18:	a0800017 	ldw	r2,0(r20)
10013e1c:	a027883a 	mov	r19,r20
10013e20:	1029883a 	mov	r20,r2
10013e24:	003fb606 	br	10013d00 <__alt_data_end+0xf8013d00>
10013e28:	0005883a 	mov	r2,zero
10013e2c:	003ffb06 	br	10013e1c <__alt_data_end+0xf8013e1c>

10013e30 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
10013e30:	defffd04 	addi	sp,sp,-12
10013e34:	df000215 	stw	fp,8(sp)
10013e38:	df000204 	addi	fp,sp,8
10013e3c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10013e40:	0001883a 	nop
10013e44:	e0bfff17 	ldw	r2,-4(fp)
10013e48:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
10013e4c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10013e50:	10000226 	beq	r2,zero,10013e5c <_exit+0x2c>
    ALT_SIM_FAIL();
10013e54:	002af070 	cmpltui	zero,zero,43969
10013e58:	00000106 	br	10013e60 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
10013e5c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10013e60:	003fff06 	br	10013e60 <__alt_data_end+0xf8013e60>

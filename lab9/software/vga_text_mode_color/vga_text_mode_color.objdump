
vga_text_mode_color.elf:     file format elf32-littlenios2
vga_text_mode_color.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000230

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x0001440c memsz 0x0001440c flags r-x
    LOAD off    0x0001542c vaddr 0x1001442c paddr 0x10016200 align 2**12
         filesz 0x00001dd4 memsz 0x00001dd4 flags rw-
    LOAD off    0x00017fd4 vaddr 0x10017fd4 paddr 0x10017fd4 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013dbc  10000230  10000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000440  10013fec  10013fec  00014fec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001dd4  1001442c  10016200  0001542c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10017fd4  10017fd4  00017fd4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00017200  2**0
                  CONTENTS
  7 .sdram        00000000  10018134  10018134  00017200  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00017200  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000fb0  00000000  00000000  00017228  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00027210  00000000  00000000  000181d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009c59  00000000  00000000  0003f3e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000d007  00000000  00000000  00049041  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000023b8  00000000  00000000  00056048  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003a4c  00000000  00000000  00058400  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001cae6  00000000  00000000  0005be4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00078934  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001ae0  00000000  00000000  00078978  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007d875  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0007d878  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007d884  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007d885  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0007d886  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007d88a  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0007d88e  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0007d892  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0007d89d  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0007d8a8  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  0007d8b3  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000000e  00000000  00000000  0007d8bb  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0004d794  00000000  00000000  0007d8c9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000230 l    d  .text	00000000 .text
10013fec l    d  .rodata	00000000 .rodata
1001442c l    d  .rwdata	00000000 .rwdata
10017fd4 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
10018134 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../vga_text_mode_color_bsp//obj/HAL/src/crt0.o
10000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 palette_test.c
100161b8 l     O .rwdata	00000004 vga_ctrl
1001442c l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
100161bc l     O .rwdata	00000004 vga_ctrl
1001459c l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
10014132 l     O .rodata	00000010 zeroes.4389
10014142 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
10014152 l     O .rodata	00000010 zeroes.4404
100058bc l     F .text	000000bc __sbprintf
10014162 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10005acc l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10007624 l     F .text	00000008 __fp_unlock
10007638 l     F .text	0000019c __sinit.part.1
100077d4 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1001470c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
10014b50 l     O .rwdata	00000020 lc_ctype_charset
10014b30 l     O .rwdata	00000020 lc_message_charset
10014b70 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
10014194 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
100142b8 l     O .rodata	00000010 zeroes.4333
100142c8 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfprintf.c
1000c218 l     F .text	000000fc __sprint_r.part.0
100142d8 l     O .rodata	00000010 zeroes.4349
1000d854 l     F .text	000000bc __sbprintf
100142e8 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
100117cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
100118e0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1001190c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
10011a00 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
10011ae8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
10011bd4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
10011db0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
100161f0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
10012054 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
10012190 l     F .text	00000034 alt_dev_reg
10015158 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1001246c l     F .text	0000020c altera_avalon_jtag_uart_irq
10012678 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
10012f54 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
100133b4 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
10013514 l     F .text	0000003c alt_get_errno
10013550 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10018008 g     O .bss	00000004 alt_instruction_exception_handler
1000a2ec g     F .text	00000074 _mprec_log10
1000a3d8 g     F .text	0000008c __any_on
1000de08 g     F .text	00000054 _isatty_r
100141a0 g     O .rodata	00000028 __mprec_tinytens
10011cec g     F .text	0000007c alt_main
1000105c g     F .text	000000c0 _puts_r
10018034 g     O .bss	00000100 alt_irq
1000de5c g     F .text	00000060 _lseek_r
10016200 g       *ABS*	00000000 __flash_rwdata_start
100101a4 g     F .text	00000088 .hidden __eqdf2
10018134 g       *ABS*	00000000 __alt_heap_start
10001020 g     F .text	0000003c printf
1000e074 g     F .text	0000009c _wcrtomb_r
1000ab68 g     F .text	0000005c __sseek
10007984 g     F .text	00000010 __sinit
1000df1c g     F .text	00000140 __swbuf_r
10008458 g     F .text	0000007c _setlocale_r
100077dc g     F .text	00000078 __sfmoreglue
10011d8c g     F .text	00000024 __malloc_unlock
10000764 g     F .text	0000026c textVGAColorScreenSaver
10009128 g     F .text	0000015c memmove
1000796c g     F .text	00000018 _cleanup
100093ac g     F .text	000000a8 _Balloc
1001022c g     F .text	000000dc .hidden __gtdf2
1001393c g     F .text	00000024 altera_nios2_gen2_irq_init
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
1000ddac g     F .text	0000005c _fstat_r
10017fec g     O .bss	00000004 errno
1000aae4 g     F .text	00000008 __seofread
1000ae78 g     F .text	000013a0 ___svfiprintf_internal_r
10017ff4 g     O .bss	00000004 alt_argv
1001e1b8 g       *ABS*	00000000 _gp
10012024 g     F .text	00000030 usleep
10000420 g     F .text	0000008c textVGAColorClr
10014fd8 g     O .rwdata	00000180 alt_fd_list
10013960 g     F .text	00000090 alt_find_dev
10008fe0 g     F .text	00000148 memcpy
1000762c g     F .text	0000000c _cleanup_r
100115e4 g     F .text	000000dc .hidden __floatsidf
10013498 g     F .text	0000007c alt_io_redirect
10010308 g     F .text	000000f4 .hidden __ltdf2
10013fec g       *ABS*	00000000 __DTOR_END__
1000111c g     F .text	00000014 puts
10013bbc g     F .text	0000009c alt_exception_cause_generated_bad_addr
1000a9c8 g     F .text	00000074 __fpclassifyd
1000a248 g     F .text	000000a4 __ratio
1000d838 g     F .text	0000001c __vfiprintf_internal
10012870 g     F .text	0000021c altera_avalon_jtag_uart_read
10000ff0 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10000f0c g     F .text	00000064 .hidden __udivsi3
10011a3c g     F .text	000000ac isatty
100141f0 g     O .rodata	000000c8 __mprec_tens
100084d4 g     F .text	0000000c __locale_charset
10017fe8 g     O .bss	00000004 __malloc_top_pad
100161c8 g     O .rwdata	00000004 __mb_cur_max
10008504 g     F .text	0000000c _localeconv_r
100097e0 g     F .text	0000003c __i2b
10007e08 g     F .text	000004c8 __sfvwrite_r
1000aa3c g     F .text	00000054 _sbrk_r
1000debc g     F .text	00000060 _read_r
100161e8 g     O .rwdata	00000004 alt_max_fd
1000daa0 g     F .text	000000f0 _fclose_r
100075f4 g     F .text	00000030 fflush
10017fe4 g     O .bss	00000004 __malloc_max_sbrked_mem
1000ef28 g     F .text	000008ac .hidden __adddf3
10009ff0 g     F .text	0000010c __b2d
1000e964 g     F .text	000005c4 .hidden __umoddi3
10011c10 g     F .text	000000dc lseek
100161c0 g     O .rwdata	00000004 _global_impure_ptr
1000a464 g     F .text	00000564 _realloc_r
10018134 g       *ABS*	00000000 __bss_end
100132c4 g     F .text	000000f0 alt_iic_isr_register
10013834 g     F .text	00000108 alt_tick
1000e368 g     F .text	000005fc .hidden __udivdi3
1000dd08 g     F .text	00000024 _fputwc_r
100141c8 g     O .rodata	00000028 __mprec_bigtens
100095c4 g     F .text	00000104 __s2b
100116c0 g     F .text	000000a8 .hidden __floatunsidf
10009d30 g     F .text	00000060 __mcmp
100079a4 g     F .text	00000018 __fp_lock_all
10013278 g     F .text	0000004c alt_ic_irq_enabled
10013798 g     F .text	0000009c alt_alarm_stop
10017ffc g     O .bss	00000004 alt_irq_active
100000fc g     F .exceptions	000000d4 alt_irq_handler
10014fb0 g     O .rwdata	00000028 alt_dev_null
10012f34 g     F .text	00000020 alt_dcache_flush_all
100096c8 g     F .text	00000068 __hi0bits
10011564 g     F .text	00000080 .hidden __fixdfsi
10016200 g       *ABS*	00000000 __ram_rwdata_end
100161e0 g     O .rwdata	00000008 alt_dev_list
10012090 g     F .text	00000100 write
1001442c g       *ABS*	00000000 __ram_rodata_end
10011948 g     F .text	000000b8 fstat
10010308 g     F .text	000000f4 .hidden __ledf2
10009aa8 g     F .text	00000140 __pow5mult
1000c32c g     F .text	0000150c ___vfiprintf_internal_r
10017fdc g     O .bss	00000004 __nlocale_changed
10000f70 g     F .text	00000058 .hidden __umodsi3
10018134 g       *ABS*	00000000 end
100123ac g     F .text	000000c0 altera_avalon_jtag_uart_init
100001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
10013fec g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
10011768 g     F .text	00000064 .hidden __clzsi2
10012a8c g     F .text	00000224 altera_avalon_jtag_uart_write
10007994 g     F .text	00000004 __sfp_lock_acquire
10008efc g     F .text	000000e4 memchr
100035c4 g     F .text	000022dc ___vfprintf_internal_r
100011ac g     F .text	00000058 _sprintf_r
10007af8 g     F .text	00000310 _free_r
100084e0 g     F .text	00000010 __locale_mb_cur_max
10013e38 g     F .text	00000180 __call_exitprocs
10017fd8 g     O .bss	00000004 __mlocale_changed
100161cc g     O .rwdata	00000004 __malloc_sbrk_base
10000230 g     F .text	0000003c _start
10018000 g     O .bss	00000004 _alt_tick_rate
10001148 g     F .text	00000064 rand
10009be8 g     F .text	00000148 __lshift
10018004 g     O .bss	00000004 _alt_nticks
10011dec g     F .text	00000104 read
100121fc g     F .text	0000004c alt_sys_init
1000aca8 g     F .text	000001d0 __ssprint_r
10013d20 g     F .text	00000118 __register_exitproc
1000981c g     F .text	0000028c __multiply
10012718 g     F .text	00000068 altera_avalon_jtag_uart_close
10000fc8 g     F .text	00000028 .hidden __mulsi3
1001442c g       *ABS*	00000000 __ram_rwdata_start
10013fec g       *ABS*	00000000 __ram_rodata_start
1001800c g     O .bss	00000028 __malloc_current_mallinfo
1000a0fc g     F .text	0000014c __d2b
10012248 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
10013af8 g     F .text	000000c4 alt_get_fd
10012ddc g     F .text	00000158 alt_busy_sleep
1000d970 g     F .text	00000054 _close_r
10013ca4 g     F .text	0000007c memcmp
10012308 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10018134 g       *ABS*	00000000 __alt_stack_base
10012358 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10005978 g     F .text	00000154 __swsetup_r
1000f7d4 g     F .text	000009d0 .hidden __divdf3
10007854 g     F .text	00000118 __sfp
1000a360 g     F .text	00000078 __copybits
10014ba8 g     O .rwdata	00000408 __malloc_av_
100079a0 g     F .text	00000004 __sinit_lock_release
100103fc g     F .text	0000086c .hidden __muldf3
1000aa90 g     F .text	00000054 __sread
100139f0 g     F .text	00000108 alt_find_file
10012f90 g     F .text	000000a4 alt_dev_llist_insert
10011d68 g     F .text	00000024 __malloc_lock
10011f74 g     F .text	000000b0 sbrk
10001308 g     F .text	000022bc ___svfprintf_internal_r
10007598 g     F .text	0000005c _fflush_r
1000d9c4 g     F .text	000000dc _calloc_r
10017fd4 g       *ABS*	00000000 __bss_start
10009284 g     F .text	00000128 memset
10000de4 g     F .text	00000030 main
10017ff8 g     O .bss	00000004 alt_envp
10017fe0 g     O .bss	00000004 __malloc_max_total_mem
100122a8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1000e05c g     F .text	00000018 __swbuf
10001130 g     F .text	00000018 srand
1000abc4 g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000db90 g     F .text	00000014 fclose
10005cf4 g     F .text	00001688 _dtoa_r
100086f0 g     F .text	0000080c _malloc_r
1000e1d0 g     F .text	00000030 __ascii_wctomb
100161ec g     O .rwdata	00000004 alt_errno
100082d0 g     F .text	000000c4 _fwalk
10000e14 g     F .text	00000084 .hidden __divsi3
100005bc g     F .text	000001a8 setColorPalette
100079d4 g     F .text	00000124 _malloc_trim_r
10013fec g       *ABS*	00000000 __CTOR_END__
1000abcc g     F .text	000000dc strcmp
10013fec g       *ABS*	00000000 __flash_rodata_start
10013fec g       *ABS*	00000000 __DTOR_LIST__
100101a4 g     F .text	00000088 .hidden __nedf2
100121c4 g     F .text	00000038 alt_irq_init
10011ef0 g     F .text	00000084 alt_release_fd
10001204 g     F .text	0000006c sprintf
100142f8 g     O .rodata	00000100 .hidden __clz_tab
10017fd4 g     O .bss	00000004 _PathLocale
10013c58 g     F .text	00000014 atexit
1000d910 g     F .text	00000060 _write_r
10008510 g     F .text	00000018 setlocale
100161c4 g     O .rwdata	00000004 _impure_ptr
10017ff0 g     O .bss	00000004 alt_argc
1000737c g     F .text	0000021c __sflush_r
10013094 g     F .text	00000060 _do_dtors
100084fc g     F .text	00000008 __locale_cjk_lang
10000020 g       .exceptions	00000000 alt_irq_entry
10009f8c g     F .text	00000064 __ulp
100079bc g     F .text	00000018 __fp_unlock_all
100161d8 g     O .rwdata	00000008 alt_fs_list
10000020 g       *ABS*	00000000 __ram_exceptions_start
10008528 g     F .text	0000000c localeconv
10000c40 g     F .text	000001a4 PaletteRegTest
10013114 g     F .text	00000050 alt_ic_isr_register
10016200 g       *ABS*	00000000 _edata
10018134 g       *ABS*	00000000 _end
100009d0 g     F .text	00000270 textVGAReadWriteTest
1000dba4 g     F .text	00000164 __fputwc
10000230 g       *ABS*	00000000 __ram_exceptions_end
10012780 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
100004ac g     F .text	00000110 textVGADrawColorText
100131ec g     F .text	0000008c alt_ic_irq_disable
1000aaec g     F .text	0000007c __swrite
100161d0 g     O .rwdata	00000004 __malloc_trim_threshold
100084f0 g     F .text	0000000c __locale_msgcharset
10013c6c g     F .text	00000038 exit
10008394 g     F .text	000000c4 _fwalk_reent
10009d90 g     F .text	000001fc __mdiff
10000e98 g     F .text	00000074 .hidden __modsi3
18000000 g       *ABS*	00000000 __alt_data_end
10000020 g     F .exceptions	00000000 alt_exception
10007998 g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
10013fb8 g     F .text	00000034 _exit
10012cb0 g     F .text	0000012c alt_alarm_start
1000e25c g     F .text	0000010c .hidden __muldi3
10008534 g     F .text	000001bc __smakebuf_r
10001270 g     F .text	00000098 strlen
1001363c g     F .text	0000015c open
1001022c g     F .text	000000dc .hidden __gedf2
100161d4 g     O .rwdata	00000004 __wctomb
1000c314 g     F .text	00000018 __sprint_r
100130f4 g     F .text	00000020 alt_icache_flush_all
100161f4 g     O .rwdata	00000004 alt_priority_mask
10013164 g     F .text	00000088 alt_ic_irq_enable
100058a0 g     F .text	0000001c __vfprintf_internal
1000e200 g     F .text	0000005c _wctomb_r
10010c68 g     F .text	000008fc .hidden __subdf3
10009730 g     F .text	000000b0 __lo0bits
100161f8 g     O .rwdata	00000008 alt_alarm_list
10013034 g     F .text	00000060 _do_ctors
1000e110 g     F .text	000000c0 wcrtomb
10011808 g     F .text	000000d8 close
1000026c g     F .text	000001b4 paletteTest
10011b50 g     F .text	00000084 alt_load
1000dd2c g     F .text	00000080 fputwc
1000799c g     F .text	00000004 __sinit_lock_acquire
1000947c g     F .text	00000148 __multadd
10009454 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08408c14 	ori	at,at,560
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001d00 	call	100001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0fffb17 	ldw	r3,-20(fp)
10000130:	e0bffc17 	ldw	r2,-16(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001426 	beq	r2,zero,1000018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	008400b4 	movhi	r2,4098
10000140:	10a00d04 	addi	r2,r2,-32716
10000144:	e0fffd17 	ldw	r3,-12(fp)
10000148:	180690fa 	slli	r3,r3,3
1000014c:	10c5883a 	add	r2,r2,r3
10000150:	10c00017 	ldw	r3,0(r2)
10000154:	008400b4 	movhi	r2,4098
10000158:	10a00d04 	addi	r2,r2,-32716
1000015c:	e13ffd17 	ldw	r4,-12(fp)
10000160:	200890fa 	slli	r4,r4,3
10000164:	1105883a 	add	r2,r2,r4
10000168:	10800104 	addi	r2,r2,4
1000016c:	10800017 	ldw	r2,0(r2)
10000170:	1009883a 	mov	r4,r2
10000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1000017c:	0005313a 	rdctl	r2,ipending
10000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10000184:	e0bfff17 	ldw	r2,-4(fp)
10000188:	00000706 	br	100001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1000018c:	e0bffc17 	ldw	r2,-16(fp)
10000190:	1085883a 	add	r2,r2,r2
10000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10000198:	e0bffd17 	ldw	r2,-12(fp)
1000019c:	10800044 	addi	r2,r2,1
100001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
100001a4:	003fe106 	br	1000012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
100001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
100001ac:	e0bffb17 	ldw	r2,-20(fp)
100001b0:	103fdb1e 	bne	r2,zero,10000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001b4:	0001883a 	nop
}
100001b8:	0001883a 	nop
100001bc:	e037883a 	mov	sp,fp
100001c0:	dfc00117 	ldw	ra,4(sp)
100001c4:	df000017 	ldw	fp,0(sp)
100001c8:	dec00204 	addi	sp,sp,8
100001cc:	f800283a 	ret

100001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001d0:	defffb04 	addi	sp,sp,-20
100001d4:	dfc00415 	stw	ra,16(sp)
100001d8:	df000315 	stw	fp,12(sp)
100001dc:	df000304 	addi	fp,sp,12
100001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
100001e4:	00bfffc4 	movi	r2,-1
100001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
100001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f0:	d0a79417 	ldw	r2,-25008(gp)
100001f4:	10000726 	beq	r2,zero,10000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
100001f8:	d0a79417 	ldw	r2,-25008(gp)
100001fc:	e0fffd17 	ldw	r3,-12(fp)
10000200:	e1bffe17 	ldw	r6,-8(fp)
10000204:	e17fff17 	ldw	r5,-4(fp)
10000208:	1809883a 	mov	r4,r3
1000020c:	103ee83a 	callr	r2
10000210:	00000206 	br	1000021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000218:	0005883a 	mov	r2,zero
}
1000021c:	e037883a 	mov	sp,fp
10000220:	dfc00117 	ldw	ra,4(sp)
10000224:	df000017 	ldw	fp,0(sp)
10000228:	dec00204 	addi	sp,sp,8
1000022c:	f800283a 	ret

Disassembly of section .text:

10000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000230:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
10000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000238:	06840074 	movhi	gp,4097
    ori gp, gp, %lo(_gp)
1000023c:	d6b86e14 	ori	gp,gp,57784
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000240:	00840074 	movhi	r2,4097
    ori r2, r2, %lo(__bss_start)
10000244:	109ff514 	ori	r2,r2,32724

    movhi r3, %hi(__bss_end)
10000248:	00c40074 	movhi	r3,4097
    ori r3, r3, %lo(__bss_end)
1000024c:	18e04d14 	ori	r3,r3,33076

    beq r2, r3, 1f
10000250:	10c00326 	beq	r2,r3,10000260 <_start+0x30>

0:
    stw zero, (r2)
10000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1000025c:	10fffd36 	bltu	r2,r3,10000254 <__alt_data_end+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000260:	0011b500 	call	10011b50 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10000264:	0011cec0 	call	10011cec <alt_main>

10000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000268:	003fff06 	br	10000268 <__alt_data_end+0xf8000268>

1000026c <paletteTest>:

#include "text_mode_vga_color.h"


void paletteTest()
{
1000026c:	defffa04 	addi	sp,sp,-24
10000270:	dfc00515 	stw	ra,20(sp)
10000274:	df000415 	stw	fp,16(sp)
10000278:	dc400315 	stw	r17,12(sp)
1000027c:	dc000215 	stw	r16,8(sp)
10000280:	df000404 	addi	fp,sp,16
	textVGAColorClr();
10000284:	00004200 	call	10000420 <textVGAColorClr>
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);
10000288:	00800044 	movi	r2,1
1000028c:	d8800015 	stw	r2,0(sp)
10000290:	000f883a 	mov	r7,zero
10000294:	000d883a 	mov	r6,zero
10000298:	000b883a 	mov	r5,zero
1000029c:	01040074 	movhi	r4,4097
100002a0:	210ffb04 	addi	r4,r4,16364
100002a4:	00004ac0 	call	100004ac <textVGADrawColorText>

	for (int i = 0; i < 100; i ++)
100002a8:	e03ffd15 	stw	zero,-12(fp)
100002ac:	00005106 	br	100003f4 <paletteTest+0x188>
	{
		usleep (20000);
100002b0:	01138804 	movi	r4,20000
100002b4:	00120240 	call	10012024 <usleep>
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
100002b8:	00011480 	call	10001148 <rand>
100002bc:	1007883a 	mov	r3,r2
100002c0:	00a00034 	movhi	r2,32768
100002c4:	108003c4 	addi	r2,r2,15
100002c8:	1884703a 	and	r2,r3,r2
100002cc:	1000040e 	bge	r2,zero,100002e0 <paletteTest+0x74>
100002d0:	10bfffc4 	addi	r2,r2,-1
100002d4:	00fffc04 	movi	r3,-16
100002d8:	10c4b03a 	or	r2,r2,r3
100002dc:	10800044 	addi	r2,r2,1
100002e0:	14003fcc 	andi	r16,r2,255
100002e4:	00011480 	call	10001148 <rand>
100002e8:	1007883a 	mov	r3,r2
100002ec:	00a00034 	movhi	r2,32768
100002f0:	108003c4 	addi	r2,r2,15
100002f4:	1884703a 	and	r2,r3,r2
100002f8:	1000040e 	bge	r2,zero,1000030c <paletteTest+0xa0>
100002fc:	10bfffc4 	addi	r2,r2,-1
10000300:	00fffc04 	movi	r3,-16
10000304:	10c4b03a 	or	r2,r2,r3
10000308:	10800044 	addi	r2,r2,1
1000030c:	14403fcc 	andi	r17,r2,255
10000310:	00011480 	call	10001148 <rand>
10000314:	1007883a 	mov	r3,r2
10000318:	00a00034 	movhi	r2,32768
1000031c:	108003c4 	addi	r2,r2,15
10000320:	1884703a 	and	r2,r3,r2
10000324:	1000040e 	bge	r2,zero,10000338 <paletteTest+0xcc>
10000328:	10bfffc4 	addi	r2,r2,-1
1000032c:	00fffc04 	movi	r3,-16
10000330:	10c4b03a 	or	r2,r2,r3
10000334:	10800044 	addi	r2,r2,1
10000338:	10803fcc 	andi	r2,r2,255
1000033c:	100f883a 	mov	r7,r2
10000340:	880d883a 	mov	r6,r17
10000344:	800b883a 	mov	r5,r16
10000348:	0009883a 	mov	r4,zero
1000034c:	00005bc0 	call	100005bc <setColorPalette>
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
10000350:	00011480 	call	10001148 <rand>
10000354:	1007883a 	mov	r3,r2
10000358:	00a00034 	movhi	r2,32768
1000035c:	108003c4 	addi	r2,r2,15
10000360:	1884703a 	and	r2,r3,r2
10000364:	1000040e 	bge	r2,zero,10000378 <paletteTest+0x10c>
10000368:	10bfffc4 	addi	r2,r2,-1
1000036c:	00fffc04 	movi	r3,-16
10000370:	10c4b03a 	or	r2,r2,r3
10000374:	10800044 	addi	r2,r2,1
10000378:	14003fcc 	andi	r16,r2,255
1000037c:	00011480 	call	10001148 <rand>
10000380:	1007883a 	mov	r3,r2
10000384:	00a00034 	movhi	r2,32768
10000388:	108003c4 	addi	r2,r2,15
1000038c:	1884703a 	and	r2,r3,r2
10000390:	1000040e 	bge	r2,zero,100003a4 <paletteTest+0x138>
10000394:	10bfffc4 	addi	r2,r2,-1
10000398:	00fffc04 	movi	r3,-16
1000039c:	10c4b03a 	or	r2,r2,r3
100003a0:	10800044 	addi	r2,r2,1
100003a4:	14403fcc 	andi	r17,r2,255
100003a8:	00011480 	call	10001148 <rand>
100003ac:	1007883a 	mov	r3,r2
100003b0:	00a00034 	movhi	r2,32768
100003b4:	108003c4 	addi	r2,r2,15
100003b8:	1884703a 	and	r2,r3,r2
100003bc:	1000040e 	bge	r2,zero,100003d0 <paletteTest+0x164>
100003c0:	10bfffc4 	addi	r2,r2,-1
100003c4:	00fffc04 	movi	r3,-16
100003c8:	10c4b03a 	or	r2,r2,r3
100003cc:	10800044 	addi	r2,r2,1
100003d0:	10803fcc 	andi	r2,r2,255
100003d4:	100f883a 	mov	r7,r2
100003d8:	880d883a 	mov	r6,r17
100003dc:	800b883a 	mov	r5,r16
100003e0:	01000044 	movi	r4,1
100003e4:	00005bc0 	call	100005bc <setColorPalette>
void paletteTest()
{
	textVGAColorClr();
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);

	for (int i = 0; i < 100; i ++)
100003e8:	e0bffd17 	ldw	r2,-12(fp)
100003ec:	10800044 	addi	r2,r2,1
100003f0:	e0bffd15 	stw	r2,-12(fp)
100003f4:	e0bffd17 	ldw	r2,-12(fp)
100003f8:	10801910 	cmplti	r2,r2,100
100003fc:	103fac1e 	bne	r2,zero,100002b0 <__alt_data_end+0xf80002b0>
		usleep (20000);
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
	}

}
10000400:	0001883a 	nop
10000404:	e6fffe04 	addi	sp,fp,-8
10000408:	dfc00317 	ldw	ra,12(sp)
1000040c:	df000217 	ldw	fp,8(sp)
10000410:	dc400117 	ldw	r17,4(sp)
10000414:	dc000017 	ldw	r16,0(sp)
10000418:	dec00404 	addi	sp,sp,16
1000041c:	f800283a 	ret

10000420 <textVGAColorClr>:
#include <alt_types.h>
#include "text_mode_vga_color.h"
#include "palette_test.h"

void textVGAColorClr()
{
10000420:	defffd04 	addi	sp,sp,-12
10000424:	df000215 	stw	fp,8(sp)
10000428:	df000204 	addi	fp,sp,8
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
1000042c:	e03ffe15 	stw	zero,-8(fp)
10000430:	00000706 	br	10000450 <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
10000434:	d0e00117 	ldw	r3,-32764(gp)
10000438:	e0bffe17 	ldw	r2,-8(fp)
1000043c:	1885883a 	add	r2,r3,r2
10000440:	10000005 	stb	zero,0(r2)
#include "text_mode_vga_color.h"
#include "palette_test.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
10000444:	e0bffe17 	ldw	r2,-8(fp)
10000448:	10800044 	addi	r2,r2,1
1000044c:	e0bffe15 	stw	r2,-8(fp)
10000450:	e0bffe17 	ldw	r2,-8(fp)
10000454:	1084b010 	cmplti	r2,r2,4800
10000458:	103ff61e 	bne	r2,zero,10000434 <__alt_data_end+0xf8000434>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
    for (int i = 0; i < 8; i++)
1000045c:	e03fff15 	stw	zero,-4(fp)
10000460:	00000a06 	br	1000048c <textVGAColorClr+0x6c>
        vga_ctrl->PALETTE[i] = 0x00000000;
10000464:	d0e00117 	ldw	r3,-32764(gp)
10000468:	e0bfff17 	ldw	r2,-4(fp)
1000046c:	10820004 	addi	r2,r2,2048
10000470:	1085883a 	add	r2,r2,r2
10000474:	1085883a 	add	r2,r2,r2
10000478:	1885883a 	add	r2,r3,r2
1000047c:	10000015 	stw	zero,0(r2)
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
    for (int i = 0; i < 8; i++)
10000480:	e0bfff17 	ldw	r2,-4(fp)
10000484:	10800044 	addi	r2,r2,1
10000488:	e0bfff15 	stw	r2,-4(fp)
1000048c:	e0bfff17 	ldw	r2,-4(fp)
10000490:	10800210 	cmplti	r2,r2,8
10000494:	103ff31e 	bne	r2,zero,10000464 <__alt_data_end+0xf8000464>
        vga_ctrl->PALETTE[i] = 0x00000000;
}
10000498:	0001883a 	nop
1000049c:	e037883a 	mov	sp,fp
100004a0:	df000017 	ldw	fp,0(sp)
100004a4:	dec00104 	addi	sp,sp,4
100004a8:	f800283a 	ret

100004ac <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
100004ac:	defff704 	addi	sp,sp,-36
100004b0:	dfc00815 	stw	ra,32(sp)
100004b4:	df000715 	stw	fp,28(sp)
100004b8:	dc000615 	stw	r16,24(sp)
100004bc:	df000704 	addi	fp,sp,28
100004c0:	e13ffa15 	stw	r4,-24(fp)
100004c4:	e17ffb15 	stw	r5,-20(fp)
100004c8:	e1bffc15 	stw	r6,-16(fp)
100004cc:	3807883a 	mov	r3,r7
100004d0:	e0800217 	ldw	r2,8(fp)
100004d4:	e0fffd05 	stb	r3,-12(fp)
100004d8:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
100004dc:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
100004e0:	00002706 	br	10000580 <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
100004e4:	d4200117 	ldw	r16,-32764(gp)
100004e8:	01401404 	movi	r5,80
100004ec:	e13ffc17 	ldw	r4,-16(fp)
100004f0:	0000fc80 	call	10000fc8 <__mulsi3>
100004f4:	1007883a 	mov	r3,r2
100004f8:	e0bffb17 	ldw	r2,-20(fp)
100004fc:	1887883a 	add	r3,r3,r2
10000500:	e0bff917 	ldw	r2,-28(fp)
10000504:	1885883a 	add	r2,r3,r2
10000508:	1085883a 	add	r2,r2,r2
1000050c:	1009883a 	mov	r4,r2
10000510:	e0bffe03 	ldbu	r2,-8(fp)
10000514:	1004913a 	slli	r2,r2,4
10000518:	1007883a 	mov	r3,r2
1000051c:	e0bffd03 	ldbu	r2,-12(fp)
10000520:	1884b03a 	or	r2,r3,r2
10000524:	1007883a 	mov	r3,r2
10000528:	8105883a 	add	r2,r16,r4
1000052c:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
10000530:	d4200117 	ldw	r16,-32764(gp)
10000534:	01401404 	movi	r5,80
10000538:	e13ffc17 	ldw	r4,-16(fp)
1000053c:	0000fc80 	call	10000fc8 <__mulsi3>
10000540:	1007883a 	mov	r3,r2
10000544:	e0bffb17 	ldw	r2,-20(fp)
10000548:	1887883a 	add	r3,r3,r2
1000054c:	e0bff917 	ldw	r2,-28(fp)
10000550:	1885883a 	add	r2,r3,r2
10000554:	1085883a 	add	r2,r2,r2
10000558:	10800044 	addi	r2,r2,1
1000055c:	e0fff917 	ldw	r3,-28(fp)
10000560:	e13ffa17 	ldw	r4,-24(fp)
10000564:	20c7883a 	add	r3,r4,r3
10000568:	18c00003 	ldbu	r3,0(r3)
1000056c:	8085883a 	add	r2,r16,r2
10000570:	10c00005 	stb	r3,0(r2)
		i++;
10000574:	e0bff917 	ldw	r2,-28(fp)
10000578:	10800044 	addi	r2,r2,1
1000057c:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
10000580:	e0bff917 	ldw	r2,-28(fp)
10000584:	e0fffa17 	ldw	r3,-24(fp)
10000588:	1885883a 	add	r2,r3,r2
1000058c:	10800003 	ldbu	r2,0(r2)
10000590:	10803fcc 	andi	r2,r2,255
10000594:	1080201c 	xori	r2,r2,128
10000598:	10bfe004 	addi	r2,r2,-128
1000059c:	103fd11e 	bne	r2,zero,100004e4 <__alt_data_end+0xf80004e4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
100005a0:	0001883a 	nop
100005a4:	e6ffff04 	addi	sp,fp,-4
100005a8:	dfc00217 	ldw	ra,8(sp)
100005ac:	df000117 	ldw	fp,4(sp)
100005b0:	dc000017 	ldw	r16,0(sp)
100005b4:	dec00304 	addi	sp,sp,12
100005b8:	f800283a 	ret

100005bc <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
100005bc:	defffb04 	addi	sp,sp,-20
100005c0:	df000415 	stw	fp,16(sp)
100005c4:	df000404 	addi	fp,sp,16
100005c8:	2011883a 	mov	r8,r4
100005cc:	2809883a 	mov	r4,r5
100005d0:	3007883a 	mov	r3,r6
100005d4:	3805883a 	mov	r2,r7
100005d8:	e23ffc05 	stb	r8,-16(fp)
100005dc:	e13ffd05 	stb	r4,-12(fp)
100005e0:	e0fffe05 	stb	r3,-8(fp)
100005e4:	e0bfff05 	stb	r2,-4(fp)
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	// If even, in letter 16 bits
    if (color % 2 == 0)
100005e8:	e0bffc03 	ldbu	r2,-16(fp)
100005ec:	1080004c 	andi	r2,r2,1
100005f0:	10803fcc 	andi	r2,r2,255
100005f4:	10002c1e 	bne	r2,zero,100006a8 <setColorPalette+0xec>
    {
    	vga_ctrl->PALETTE[color / 2] &= 0xFFFFE000;
100005f8:	d1200117 	ldw	r4,-32764(gp)
100005fc:	e0bffc03 	ldbu	r2,-16(fp)
10000600:	1004d07a 	srli	r2,r2,1
10000604:	11403fcc 	andi	r5,r2,255
10000608:	d0e00117 	ldw	r3,-32764(gp)
1000060c:	10803fcc 	andi	r2,r2,255
10000610:	10820004 	addi	r2,r2,2048
10000614:	1085883a 	add	r2,r2,r2
10000618:	1085883a 	add	r2,r2,r2
1000061c:	1885883a 	add	r2,r3,r2
10000620:	10c00017 	ldw	r3,0(r2)
10000624:	00b80004 	movi	r2,-8192
10000628:	1886703a 	and	r3,r3,r2
1000062c:	28820004 	addi	r2,r5,2048
10000630:	1085883a 	add	r2,r2,r2
10000634:	1085883a 	add	r2,r2,r2
10000638:	2085883a 	add	r2,r4,r2
1000063c:	10c00015 	stw	r3,0(r2)
        vga_ctrl->PALETTE[color / 2] |= red << 9 | green << 5 | blue << 1;
10000640:	d1200117 	ldw	r4,-32764(gp)
10000644:	e0bffc03 	ldbu	r2,-16(fp)
10000648:	1004d07a 	srli	r2,r2,1
1000064c:	11403fcc 	andi	r5,r2,255
10000650:	d0e00117 	ldw	r3,-32764(gp)
10000654:	10803fcc 	andi	r2,r2,255
10000658:	10820004 	addi	r2,r2,2048
1000065c:	1085883a 	add	r2,r2,r2
10000660:	1085883a 	add	r2,r2,r2
10000664:	1885883a 	add	r2,r3,r2
10000668:	10c00017 	ldw	r3,0(r2)
1000066c:	e0bffd03 	ldbu	r2,-12(fp)
10000670:	100c927a 	slli	r6,r2,9
10000674:	e0bffe03 	ldbu	r2,-8(fp)
10000678:	1004917a 	slli	r2,r2,5
1000067c:	308cb03a 	or	r6,r6,r2
10000680:	e0bfff03 	ldbu	r2,-4(fp)
10000684:	1085883a 	add	r2,r2,r2
10000688:	3084b03a 	or	r2,r6,r2
1000068c:	1886b03a 	or	r3,r3,r2
10000690:	28820004 	addi	r2,r5,2048
10000694:	1085883a 	add	r2,r2,r2
10000698:	1085883a 	add	r2,r2,r2
1000069c:	2085883a 	add	r2,r4,r2
100006a0:	10c00015 	stw	r3,0(r2)
//    {
//    	vga_ctrl->PALETTE[0] = 0x00000000;
//    }


}
100006a4:	00002a06 	br	10000750 <setColorPalette+0x194>
    	vga_ctrl->PALETTE[color / 2] &= 0xFFFFE000;
        vga_ctrl->PALETTE[color / 2] |= red << 9 | green << 5 | blue << 1;
    }
    else
    {
    	vga_ctrl->PALETTE[color / 2] &= 0x00001FFF;
100006a8:	d1200117 	ldw	r4,-32764(gp)
100006ac:	e0bffc03 	ldbu	r2,-16(fp)
100006b0:	1004d07a 	srli	r2,r2,1
100006b4:	11403fcc 	andi	r5,r2,255
100006b8:	d0e00117 	ldw	r3,-32764(gp)
100006bc:	10803fcc 	andi	r2,r2,255
100006c0:	10820004 	addi	r2,r2,2048
100006c4:	1085883a 	add	r2,r2,r2
100006c8:	1085883a 	add	r2,r2,r2
100006cc:	1885883a 	add	r2,r3,r2
100006d0:	10800017 	ldw	r2,0(r2)
100006d4:	10c7ffcc 	andi	r3,r2,8191
100006d8:	28820004 	addi	r2,r5,2048
100006dc:	1085883a 	add	r2,r2,r2
100006e0:	1085883a 	add	r2,r2,r2
100006e4:	2085883a 	add	r2,r4,r2
100006e8:	10c00015 	stw	r3,0(r2)
        vga_ctrl->PALETTE[color / 2] |= red << 21 | green << 17 | blue << 13;
100006ec:	d1200117 	ldw	r4,-32764(gp)
100006f0:	e0bffc03 	ldbu	r2,-16(fp)
100006f4:	1004d07a 	srli	r2,r2,1
100006f8:	11403fcc 	andi	r5,r2,255
100006fc:	d0e00117 	ldw	r3,-32764(gp)
10000700:	10803fcc 	andi	r2,r2,255
10000704:	10820004 	addi	r2,r2,2048
10000708:	1085883a 	add	r2,r2,r2
1000070c:	1085883a 	add	r2,r2,r2
10000710:	1885883a 	add	r2,r3,r2
10000714:	10800017 	ldw	r2,0(r2)
10000718:	e0fffd03 	ldbu	r3,-12(fp)
1000071c:	180c957a 	slli	r6,r3,21
10000720:	e0fffe03 	ldbu	r3,-8(fp)
10000724:	1806947a 	slli	r3,r3,17
10000728:	30ccb03a 	or	r6,r6,r3
1000072c:	e0ffff03 	ldbu	r3,-4(fp)
10000730:	1806937a 	slli	r3,r3,13
10000734:	30c6b03a 	or	r3,r6,r3
10000738:	10c6b03a 	or	r3,r2,r3
1000073c:	28820004 	addi	r2,r5,2048
10000740:	1085883a 	add	r2,r2,r2
10000744:	1085883a 	add	r2,r2,r2
10000748:	2085883a 	add	r2,r4,r2
1000074c:	10c00015 	stw	r3,0(r2)
//    {
//    	vga_ctrl->PALETTE[0] = 0x00000000;
//    }


}
10000750:	0001883a 	nop
10000754:	e037883a 	mov	sp,fp
10000758:	df000017 	ldw	fp,0(sp)
1000075c:	dec00104 	addi	sp,sp,4
10000760:	f800283a 	ret

10000764 <textVGAColorScreenSaver>:


void textVGAColorScreenSaver()
{
10000764:	deffe004 	addi	sp,sp,-128
10000768:	dfc01f15 	stw	ra,124(sp)
1000076c:	df001e15 	stw	fp,120(sp)
10000770:	dcc01d15 	stw	r19,116(sp)
10000774:	dc801c15 	stw	r18,112(sp)
10000778:	dc401b15 	stw	r17,108(sp)
1000077c:	dc001a15 	stw	r16,104(sp)
10000780:	df001e04 	addi	fp,sp,120
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
10000784:	00004200 	call	10000420 <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
10000788:	e03fe515 	stw	zero,-108(fp)
1000078c:	00002806 	br	10000830 <textVGAColorScreenSaver+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
10000790:	e0bfe517 	ldw	r2,-108(fp)
10000794:	14403fcc 	andi	r17,r2,255
10000798:	04040074 	movhi	r16,4097
1000079c:	84116704 	addi	r16,r16,17820
100007a0:	e0bfe517 	ldw	r2,-108(fp)
100007a4:	014005c4 	movi	r5,23
100007a8:	1009883a 	mov	r4,r2
100007ac:	0000fc80 	call	10000fc8 <__mulsi3>
100007b0:	8085883a 	add	r2,r16,r2
100007b4:	10800504 	addi	r2,r2,20
100007b8:	10800003 	ldbu	r2,0(r2)
100007bc:	14803fcc 	andi	r18,r2,255
100007c0:	04040074 	movhi	r16,4097
100007c4:	84116704 	addi	r16,r16,17820
100007c8:	e0bfe517 	ldw	r2,-108(fp)
100007cc:	014005c4 	movi	r5,23
100007d0:	1009883a 	mov	r4,r2
100007d4:	0000fc80 	call	10000fc8 <__mulsi3>
100007d8:	8085883a 	add	r2,r16,r2
100007dc:	10800544 	addi	r2,r2,21
100007e0:	10800003 	ldbu	r2,0(r2)
100007e4:	14c03fcc 	andi	r19,r2,255
100007e8:	04040074 	movhi	r16,4097
100007ec:	84116704 	addi	r16,r16,17820
100007f0:	e0bfe517 	ldw	r2,-108(fp)
100007f4:	014005c4 	movi	r5,23
100007f8:	1009883a 	mov	r4,r2
100007fc:	0000fc80 	call	10000fc8 <__mulsi3>
10000800:	8085883a 	add	r2,r16,r2
10000804:	10800584 	addi	r2,r2,22
10000808:	10800003 	ldbu	r2,0(r2)
1000080c:	10803fcc 	andi	r2,r2,255
10000810:	100f883a 	mov	r7,r2
10000814:	980d883a 	mov	r6,r19
10000818:	900b883a 	mov	r5,r18
1000081c:	8809883a 	mov	r4,r17
10000820:	00005bc0 	call	100005bc <setColorPalette>
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
10000824:	e0bfe517 	ldw	r2,-108(fp)
10000828:	10800044 	addi	r2,r2,1
1000082c:	e0bfe515 	stw	r2,-108(fp)
10000830:	e0bfe517 	ldw	r2,-108(fp)
10000834:	10800410 	cmplti	r2,r2,16
10000838:	103fd51e 	bne	r2,zero,10000790 <__alt_data_end+0xf8000790>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	while (1)
	{
		fg = rand() % 16;
1000083c:	00011480 	call	10001148 <rand>
10000840:	1007883a 	mov	r3,r2
10000844:	00a00034 	movhi	r2,32768
10000848:	108003c4 	addi	r2,r2,15
1000084c:	1884703a 	and	r2,r3,r2
10000850:	1000040e 	bge	r2,zero,10000864 <textVGAColorScreenSaver+0x100>
10000854:	10bfffc4 	addi	r2,r2,-1
10000858:	00fffc04 	movi	r3,-16
1000085c:	10c4b03a 	or	r2,r2,r3
10000860:	10800044 	addi	r2,r2,1
10000864:	e0bfe315 	stw	r2,-116(fp)
		bg = rand() % 16;
10000868:	00011480 	call	10001148 <rand>
1000086c:	1007883a 	mov	r3,r2
10000870:	00a00034 	movhi	r2,32768
10000874:	108003c4 	addi	r2,r2,15
10000878:	1884703a 	and	r2,r3,r2
1000087c:	1000040e 	bge	r2,zero,10000890 <textVGAColorScreenSaver+0x12c>
10000880:	10bfffc4 	addi	r2,r2,-1
10000884:	00fffc04 	movi	r3,-16
10000888:	10c4b03a 	or	r2,r2,r3
1000088c:	10800044 	addi	r2,r2,1
10000890:	e0bfe415 	stw	r2,-112(fp)
		while (fg == bg)
10000894:	00001606 	br	100008f0 <textVGAColorScreenSaver+0x18c>
		{
			fg = rand() % 16;
10000898:	00011480 	call	10001148 <rand>
1000089c:	1007883a 	mov	r3,r2
100008a0:	00a00034 	movhi	r2,32768
100008a4:	108003c4 	addi	r2,r2,15
100008a8:	1884703a 	and	r2,r3,r2
100008ac:	1000040e 	bge	r2,zero,100008c0 <textVGAColorScreenSaver+0x15c>
100008b0:	10bfffc4 	addi	r2,r2,-1
100008b4:	00fffc04 	movi	r3,-16
100008b8:	10c4b03a 	or	r2,r2,r3
100008bc:	10800044 	addi	r2,r2,1
100008c0:	e0bfe315 	stw	r2,-116(fp)
			bg = rand() % 16;
100008c4:	00011480 	call	10001148 <rand>
100008c8:	1007883a 	mov	r3,r2
100008cc:	00a00034 	movhi	r2,32768
100008d0:	108003c4 	addi	r2,r2,15
100008d4:	1884703a 	and	r2,r3,r2
100008d8:	1000040e 	bge	r2,zero,100008ec <textVGAColorScreenSaver+0x188>
100008dc:	10bfffc4 	addi	r2,r2,-1
100008e0:	00fffc04 	movi	r3,-16
100008e4:	10c4b03a 	or	r2,r2,r3
100008e8:	10800044 	addi	r2,r2,1
100008ec:	e0bfe415 	stw	r2,-112(fp)
	}
	while (1)
	{
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
100008f0:	e0ffe317 	ldw	r3,-116(fp)
100008f4:	e0bfe417 	ldw	r2,-112(fp)
100008f8:	18bfe726 	beq	r3,r2,10000898 <__alt_data_end+0xf8000898>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
100008fc:	014005c4 	movi	r5,23
10000900:	e13fe317 	ldw	r4,-116(fp)
10000904:	0000fc80 	call	10000fc8 <__mulsi3>
10000908:	1007883a 	mov	r3,r2
1000090c:	00840074 	movhi	r2,4097
10000910:	10916704 	addi	r2,r2,17820
10000914:	18a1883a 	add	r16,r3,r2
10000918:	014005c4 	movi	r5,23
1000091c:	e13fe417 	ldw	r4,-112(fp)
10000920:	0000fc80 	call	10000fc8 <__mulsi3>
10000924:	1007883a 	mov	r3,r2
10000928:	00840074 	movhi	r2,4097
1000092c:	10916704 	addi	r2,r2,17820
10000930:	1887883a 	add	r3,r3,r2
10000934:	e0bfe804 	addi	r2,fp,-96
10000938:	180f883a 	mov	r7,r3
1000093c:	800d883a 	mov	r6,r16
10000940:	01440074 	movhi	r5,4097
10000944:	29500704 	addi	r5,r5,16412
10000948:	1009883a 	mov	r4,r2
1000094c:	00012040 	call	10001204 <sprintf>
		x = rand() % (80-strlen(color_string));
10000950:	00011480 	call	10001148 <rand>
10000954:	1021883a 	mov	r16,r2
10000958:	e0bfe804 	addi	r2,fp,-96
1000095c:	1009883a 	mov	r4,r2
10000960:	00012700 	call	10001270 <strlen>
10000964:	1007883a 	mov	r3,r2
10000968:	00801404 	movi	r2,80
1000096c:	10c5c83a 	sub	r2,r2,r3
10000970:	100b883a 	mov	r5,r2
10000974:	8009883a 	mov	r4,r16
10000978:	0000f700 	call	10000f70 <__umodsi3>
1000097c:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 30;
10000980:	00011480 	call	10001148 <rand>
10000984:	01400784 	movi	r5,30
10000988:	1009883a 	mov	r4,r2
1000098c:	0000e980 	call	10000e98 <__modsi3>
10000990:	e0bfe715 	stw	r2,-100(fp)
		textVGADrawColorText (color_string, x, y, bg, fg);
10000994:	e0bfe417 	ldw	r2,-112(fp)
10000998:	11003fcc 	andi	r4,r2,255
1000099c:	e0bfe317 	ldw	r2,-116(fp)
100009a0:	10803fcc 	andi	r2,r2,255
100009a4:	e0ffe804 	addi	r3,fp,-96
100009a8:	d8800015 	stw	r2,0(sp)
100009ac:	200f883a 	mov	r7,r4
100009b0:	e1bfe717 	ldw	r6,-100(fp)
100009b4:	e17fe617 	ldw	r5,-104(fp)
100009b8:	1809883a 	mov	r4,r3
100009bc:	00004ac0 	call	100004ac <textVGADrawColorText>
		usleep (100000);
100009c0:	010000b4 	movhi	r4,2
100009c4:	2121a804 	addi	r4,r4,-31072
100009c8:	00120240 	call	10012024 <usleep>
	}
100009cc:	003f9b06 	br	1000083c <__alt_data_end+0xf800083c>

100009d0 <textVGAReadWriteTest>:
}

void textVGAReadWriteTest()
{
100009d0:	deffbd04 	addi	sp,sp,-268
100009d4:	dfc04215 	stw	ra,264(sp)
100009d8:	df004115 	stw	fp,260(sp)
100009dc:	dc004015 	stw	r16,256(sp)
100009e0:	df004104 	addi	fp,sp,260
	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
100009e4:	e03fbf15 	stw	zero,-260(fp)
100009e8:	00003106 	br	10000ab0 <textVGAReadWriteTest+0xe0>
	{
		checksum[j] = 0;
100009ec:	e0bfbf17 	ldw	r2,-260(fp)
100009f0:	1085883a 	add	r2,r2,r2
100009f4:	1085883a 	add	r2,r2,r2
100009f8:	e0ffbf04 	addi	r3,fp,-260
100009fc:	1885883a 	add	r2,r3,r2
10000a00:	10800404 	addi	r2,r2,16
10000a04:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
10000a08:	e03fc015 	stw	zero,-256(fp)
10000a0c:	00002206 	br	10000a98 <textVGAReadWriteTest+0xc8>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
10000a10:	d4200117 	ldw	r16,-32764(gp)
10000a14:	01401404 	movi	r5,80
10000a18:	e13fbf17 	ldw	r4,-260(fp)
10000a1c:	0000fc80 	call	10000fc8 <__mulsi3>
10000a20:	1007883a 	mov	r3,r2
10000a24:	e0bfc017 	ldw	r2,-256(fp)
10000a28:	1885883a 	add	r2,r3,r2
10000a2c:	e0ffc017 	ldw	r3,-256(fp)
10000a30:	1809883a 	mov	r4,r3
10000a34:	e0ffbf17 	ldw	r3,-260(fp)
10000a38:	20c7883a 	add	r3,r4,r3
10000a3c:	8085883a 	add	r2,r16,r2
10000a40:	10c00005 	stb	r3,0(r2)
			checksum[j] += i + j;
10000a44:	e0bfbf17 	ldw	r2,-260(fp)
10000a48:	1085883a 	add	r2,r2,r2
10000a4c:	1085883a 	add	r2,r2,r2
10000a50:	e13fbf04 	addi	r4,fp,-260
10000a54:	2085883a 	add	r2,r4,r2
10000a58:	10800404 	addi	r2,r2,16
10000a5c:	10800017 	ldw	r2,0(r2)
10000a60:	e13fc017 	ldw	r4,-256(fp)
10000a64:	e0ffbf17 	ldw	r3,-260(fp)
10000a68:	20c7883a 	add	r3,r4,r3
10000a6c:	10c7883a 	add	r3,r2,r3
10000a70:	e0bfbf17 	ldw	r2,-260(fp)
10000a74:	1085883a 	add	r2,r2,r2
10000a78:	1085883a 	add	r2,r2,r2
10000a7c:	e13fbf04 	addi	r4,fp,-260
10000a80:	2085883a 	add	r2,r4,r2
10000a84:	10800404 	addi	r2,r2,16
10000a88:	10c00015 	stw	r3,0(r2)
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
	{
		checksum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
10000a8c:	e0bfc017 	ldw	r2,-256(fp)
10000a90:	10800044 	addi	r2,r2,1
10000a94:	e0bfc015 	stw	r2,-256(fp)
10000a98:	e0bfc017 	ldw	r2,-256(fp)
10000a9c:	10801410 	cmplti	r2,r2,80
10000aa0:	103fdb1e 	bne	r2,zero,10000a10 <__alt_data_end+0xf8000a10>
void textVGAReadWriteTest()
{
	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
10000aa4:	e0bfbf17 	ldw	r2,-260(fp)
10000aa8:	10800044 	addi	r2,r2,1
10000aac:	e0bfbf15 	stw	r2,-260(fp)
10000ab0:	e0bfbf17 	ldw	r2,-260(fp)
10000ab4:	10800790 	cmplti	r2,r2,30
10000ab8:	103fcc1e 	bne	r2,zero,100009ec <__alt_data_end+0xf80009ec>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
10000abc:	e03fc115 	stw	zero,-252(fp)
10000ac0:	00005206 	br	10000c0c <textVGAReadWriteTest+0x23c>
	{
		readsum[j] = 0;
10000ac4:	e0bfc117 	ldw	r2,-252(fp)
10000ac8:	1085883a 	add	r2,r2,r2
10000acc:	1085883a 	add	r2,r2,r2
10000ad0:	e0ffbf04 	addi	r3,fp,-260
10000ad4:	1885883a 	add	r2,r3,r2
10000ad8:	10802204 	addi	r2,r2,136
10000adc:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
10000ae0:	e03fc215 	stw	zero,-248(fp)
10000ae4:	00001c06 	br	10000b58 <textVGAReadWriteTest+0x188>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
10000ae8:	d4200117 	ldw	r16,-32764(gp)
10000aec:	01401404 	movi	r5,80
10000af0:	e13fc117 	ldw	r4,-252(fp)
10000af4:	0000fc80 	call	10000fc8 <__mulsi3>
10000af8:	1007883a 	mov	r3,r2
10000afc:	e0bfc217 	ldw	r2,-248(fp)
10000b00:	1885883a 	add	r2,r3,r2
10000b04:	8085883a 	add	r2,r16,r2
10000b08:	11000003 	ldbu	r4,0(r2)
10000b0c:	e0bfc117 	ldw	r2,-252(fp)
10000b10:	1085883a 	add	r2,r2,r2
10000b14:	1085883a 	add	r2,r2,r2
10000b18:	e0ffbf04 	addi	r3,fp,-260
10000b1c:	1885883a 	add	r2,r3,r2
10000b20:	10802204 	addi	r2,r2,136
10000b24:	10c00017 	ldw	r3,0(r2)
10000b28:	20803fcc 	andi	r2,r4,255
10000b2c:	1887883a 	add	r3,r3,r2
10000b30:	e0bfc117 	ldw	r2,-252(fp)
10000b34:	1085883a 	add	r2,r2,r2
10000b38:	1085883a 	add	r2,r2,r2
10000b3c:	e13fbf04 	addi	r4,fp,-260
10000b40:	2085883a 	add	r2,r4,r2
10000b44:	10802204 	addi	r2,r2,136
10000b48:	10c00015 	stw	r3,0(r2)
		}
	}
	for (int j = 0; j < ROWS; j++)
	{
		readsum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
10000b4c:	e0bfc217 	ldw	r2,-248(fp)
10000b50:	10800044 	addi	r2,r2,1
10000b54:	e0bfc215 	stw	r2,-248(fp)
10000b58:	e0bfc217 	ldw	r2,-248(fp)
10000b5c:	10801410 	cmplti	r2,r2,80
10000b60:	103fe11e 	bne	r2,zero,10000ae8 <__alt_data_end+0xf8000ae8>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
			//printf ("%x \n\r", vga_ctrl->VRAM[j*COLUMNS + i]);
		}
		printf ("Row: %d, Checksum: %x, Read-back Checksum: %x\n\r", j, checksum[j], readsum[j]);
10000b64:	e0bfc117 	ldw	r2,-252(fp)
10000b68:	1085883a 	add	r2,r2,r2
10000b6c:	1085883a 	add	r2,r2,r2
10000b70:	e0ffbf04 	addi	r3,fp,-260
10000b74:	1885883a 	add	r2,r3,r2
10000b78:	10800404 	addi	r2,r2,16
10000b7c:	10c00017 	ldw	r3,0(r2)
10000b80:	e0bfc117 	ldw	r2,-252(fp)
10000b84:	1085883a 	add	r2,r2,r2
10000b88:	1085883a 	add	r2,r2,r2
10000b8c:	e13fbf04 	addi	r4,fp,-260
10000b90:	2085883a 	add	r2,r4,r2
10000b94:	10802204 	addi	r2,r2,136
10000b98:	10800017 	ldw	r2,0(r2)
10000b9c:	100f883a 	mov	r7,r2
10000ba0:	180d883a 	mov	r6,r3
10000ba4:	e17fc117 	ldw	r5,-252(fp)
10000ba8:	01040074 	movhi	r4,4097
10000bac:	21101004 	addi	r4,r4,16448
10000bb0:	00010200 	call	10001020 <printf>
		if (checksum[j] != readsum[j])
10000bb4:	e0bfc117 	ldw	r2,-252(fp)
10000bb8:	1085883a 	add	r2,r2,r2
10000bbc:	1085883a 	add	r2,r2,r2
10000bc0:	e0ffbf04 	addi	r3,fp,-260
10000bc4:	1885883a 	add	r2,r3,r2
10000bc8:	10800404 	addi	r2,r2,16
10000bcc:	10c00017 	ldw	r3,0(r2)
10000bd0:	e0bfc117 	ldw	r2,-252(fp)
10000bd4:	1085883a 	add	r2,r2,r2
10000bd8:	1085883a 	add	r2,r2,r2
10000bdc:	e13fbf04 	addi	r4,fp,-260
10000be0:	2085883a 	add	r2,r4,r2
10000be4:	10802204 	addi	r2,r2,136
10000be8:	10800017 	ldw	r2,0(r2)
10000bec:	18800426 	beq	r3,r2,10000c00 <textVGAReadWriteTest+0x230>
		{
			printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
10000bf0:	01040074 	movhi	r4,4097
10000bf4:	21101c04 	addi	r4,r4,16496
10000bf8:	00010200 	call	10001020 <printf>
			while (1){};
10000bfc:	003fff06 	br	10000bfc <__alt_data_end+0xf8000bfc>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
10000c00:	e0bfc117 	ldw	r2,-252(fp)
10000c04:	10800044 	addi	r2,r2,1
10000c08:	e0bfc115 	stw	r2,-252(fp)
10000c0c:	e0bfc117 	ldw	r2,-252(fp)
10000c10:	10800790 	cmplti	r2,r2,30
10000c14:	103fab1e 	bne	r2,zero,10000ac4 <__alt_data_end+0xf8000ac4>
		{
			printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
			while (1){};
		}
	}
	printf("Checksum match!\n");
10000c18:	01040074 	movhi	r4,4097
10000c1c:	21102804 	addi	r4,r4,16544
10000c20:	000111c0 	call	1000111c <puts>
}
10000c24:	0001883a 	nop
10000c28:	e6ffff04 	addi	sp,fp,-4
10000c2c:	dfc00217 	ldw	ra,8(sp)
10000c30:	df000117 	ldw	fp,4(sp)
10000c34:	dc000017 	ldw	r16,0(sp)
10000c38:	dec00304 	addi	sp,sp,12
10000c3c:	f800283a 	ret

10000c40 <PaletteRegTest>:

void PaletteRegTest()
{
10000c40:	deffeb04 	addi	sp,sp,-84
10000c44:	dfc01415 	stw	ra,80(sp)
10000c48:	df001315 	stw	fp,76(sp)
10000c4c:	df001304 	addi	fp,sp,76
	alt_u32 check[8], read[8];
	for (int i = 0; i < 8; i ++)
10000c50:	e03fed15 	stw	zero,-76(fp)
10000c54:	00001306 	br	10000ca4 <PaletteRegTest+0x64>
	{
		vga_ctrl->PALETTE[i] = i;
10000c58:	d1200117 	ldw	r4,-32764(gp)
10000c5c:	e0ffed17 	ldw	r3,-76(fp)
10000c60:	e0bfed17 	ldw	r2,-76(fp)
10000c64:	10820004 	addi	r2,r2,2048
10000c68:	1085883a 	add	r2,r2,r2
10000c6c:	1085883a 	add	r2,r2,r2
10000c70:	2085883a 	add	r2,r4,r2
10000c74:	10c00015 	stw	r3,0(r2)
		check[i] = i;
10000c78:	e0ffed17 	ldw	r3,-76(fp)
10000c7c:	e0bfed17 	ldw	r2,-76(fp)
10000c80:	1085883a 	add	r2,r2,r2
10000c84:	1085883a 	add	r2,r2,r2
10000c88:	e13fed04 	addi	r4,fp,-76
10000c8c:	2085883a 	add	r2,r4,r2
10000c90:	10800304 	addi	r2,r2,12
10000c94:	10c00015 	stw	r3,0(r2)
}

void PaletteRegTest()
{
	alt_u32 check[8], read[8];
	for (int i = 0; i < 8; i ++)
10000c98:	e0bfed17 	ldw	r2,-76(fp)
10000c9c:	10800044 	addi	r2,r2,1
10000ca0:	e0bfed15 	stw	r2,-76(fp)
10000ca4:	e0bfed17 	ldw	r2,-76(fp)
10000ca8:	10800210 	cmplti	r2,r2,8
10000cac:	103fea1e 	bne	r2,zero,10000c58 <__alt_data_end+0xf8000c58>
	{
		vga_ctrl->PALETTE[i] = i;
		check[i] = i;
	}
	for (int j = 0; j < 8; j++)
10000cb0:	e03fee15 	stw	zero,-72(fp)
10000cb4:	00001106 	br	10000cfc <PaletteRegTest+0xbc>
	{
		read[j] = vga_ctrl->PALETTE[j];
10000cb8:	d0e00117 	ldw	r3,-32764(gp)
10000cbc:	e0bfee17 	ldw	r2,-72(fp)
10000cc0:	10820004 	addi	r2,r2,2048
10000cc4:	1085883a 	add	r2,r2,r2
10000cc8:	1085883a 	add	r2,r2,r2
10000ccc:	1885883a 	add	r2,r3,r2
10000cd0:	10c00017 	ldw	r3,0(r2)
10000cd4:	e0bfee17 	ldw	r2,-72(fp)
10000cd8:	1085883a 	add	r2,r2,r2
10000cdc:	1085883a 	add	r2,r2,r2
10000ce0:	e13fed04 	addi	r4,fp,-76
10000ce4:	2085883a 	add	r2,r4,r2
10000ce8:	10800b04 	addi	r2,r2,44
10000cec:	10c00015 	stw	r3,0(r2)
	for (int i = 0; i < 8; i ++)
	{
		vga_ctrl->PALETTE[i] = i;
		check[i] = i;
	}
	for (int j = 0; j < 8; j++)
10000cf0:	e0bfee17 	ldw	r2,-72(fp)
10000cf4:	10800044 	addi	r2,r2,1
10000cf8:	e0bfee15 	stw	r2,-72(fp)
10000cfc:	e0bfee17 	ldw	r2,-72(fp)
10000d00:	10800210 	cmplti	r2,r2,8
10000d04:	103fec1e 	bne	r2,zero,10000cb8 <__alt_data_end+0xf8000cb8>
	{
		read[j] = vga_ctrl->PALETTE[j];
	}
	for (int i = 0; i < 8; i++)
10000d08:	e03fef15 	stw	zero,-68(fp)
10000d0c:	00002906 	br	10000db4 <PaletteRegTest+0x174>
	{
		printf("check: %x, read: %x\n", check[i],read[i]);
10000d10:	e0bfef17 	ldw	r2,-68(fp)
10000d14:	1085883a 	add	r2,r2,r2
10000d18:	1085883a 	add	r2,r2,r2
10000d1c:	e0ffed04 	addi	r3,fp,-76
10000d20:	1885883a 	add	r2,r3,r2
10000d24:	10800304 	addi	r2,r2,12
10000d28:	10c00017 	ldw	r3,0(r2)
10000d2c:	e0bfef17 	ldw	r2,-68(fp)
10000d30:	1085883a 	add	r2,r2,r2
10000d34:	1085883a 	add	r2,r2,r2
10000d38:	e13fed04 	addi	r4,fp,-76
10000d3c:	2085883a 	add	r2,r4,r2
10000d40:	10800b04 	addi	r2,r2,44
10000d44:	10800017 	ldw	r2,0(r2)
10000d48:	100d883a 	mov	r6,r2
10000d4c:	180b883a 	mov	r5,r3
10000d50:	01040074 	movhi	r4,4097
10000d54:	21102c04 	addi	r4,r4,16560
10000d58:	00010200 	call	10001020 <printf>
		if (check[i] != read[i])
10000d5c:	e0bfef17 	ldw	r2,-68(fp)
10000d60:	1085883a 	add	r2,r2,r2
10000d64:	1085883a 	add	r2,r2,r2
10000d68:	e0ffed04 	addi	r3,fp,-76
10000d6c:	1885883a 	add	r2,r3,r2
10000d70:	10800304 	addi	r2,r2,12
10000d74:	10c00017 	ldw	r3,0(r2)
10000d78:	e0bfef17 	ldw	r2,-68(fp)
10000d7c:	1085883a 	add	r2,r2,r2
10000d80:	1085883a 	add	r2,r2,r2
10000d84:	e13fed04 	addi	r4,fp,-76
10000d88:	2085883a 	add	r2,r4,r2
10000d8c:	10800b04 	addi	r2,r2,44
10000d90:	10800017 	ldw	r2,0(r2)
10000d94:	18800426 	beq	r3,r2,10000da8 <PaletteRegTest+0x168>
		{
			printf("Palette mismatch!\n");
10000d98:	01040074 	movhi	r4,4097
10000d9c:	21103204 	addi	r4,r4,16584
10000da0:	000111c0 	call	1000111c <puts>
			while (1){};
10000da4:	003fff06 	br	10000da4 <__alt_data_end+0xf8000da4>
	}
	for (int j = 0; j < 8; j++)
	{
		read[j] = vga_ctrl->PALETTE[j];
	}
	for (int i = 0; i < 8; i++)
10000da8:	e0bfef17 	ldw	r2,-68(fp)
10000dac:	10800044 	addi	r2,r2,1
10000db0:	e0bfef15 	stw	r2,-68(fp)
10000db4:	e0bfef17 	ldw	r2,-68(fp)
10000db8:	10800210 	cmplti	r2,r2,8
10000dbc:	103fd41e 	bne	r2,zero,10000d10 <__alt_data_end+0xf8000d10>
		{
			printf("Palette mismatch!\n");
			while (1){};
		}
	}
	printf("Palette match!\n");
10000dc0:	01040074 	movhi	r4,4097
10000dc4:	21103704 	addi	r4,r4,16604
10000dc8:	000111c0 	call	1000111c <puts>
}
10000dcc:	0001883a 	nop
10000dd0:	e037883a 	mov	sp,fp
10000dd4:	dfc00117 	ldw	ra,4(sp)
10000dd8:	df000017 	ldw	fp,0(sp)
10000ddc:	dec00204 	addi	sp,sp,8
10000de0:	f800283a 	ret

10000de4 <main>:
int main()
{
10000de4:	defffe04 	addi	sp,sp,-8
10000de8:	dfc00115 	stw	ra,4(sp)
10000dec:	df000015 	stw	fp,0(sp)
10000df0:	d839883a 	mov	fp,sp
//	PaletteRegTest();
//	textVGAReadWriteTest();
//	printf("Start Palette test\n");
    paletteTest();
10000df4:	000026c0 	call	1000026c <paletteTest>
//    printf("Palette Test end\n");

    textVGAColorScreenSaver();
10000df8:	00007640 	call	10000764 <textVGAColorScreenSaver>
10000dfc:	0005883a 	mov	r2,zero


}
10000e00:	e037883a 	mov	sp,fp
10000e04:	dfc00117 	ldw	ra,4(sp)
10000e08:	df000017 	ldw	fp,0(sp)
10000e0c:	dec00204 	addi	sp,sp,8
10000e10:	f800283a 	ret

10000e14 <__divsi3>:
10000e14:	20001b16 	blt	r4,zero,10000e84 <__divsi3+0x70>
10000e18:	000f883a 	mov	r7,zero
10000e1c:	28001616 	blt	r5,zero,10000e78 <__divsi3+0x64>
10000e20:	200d883a 	mov	r6,r4
10000e24:	29001a2e 	bgeu	r5,r4,10000e90 <__divsi3+0x7c>
10000e28:	00800804 	movi	r2,32
10000e2c:	00c00044 	movi	r3,1
10000e30:	00000106 	br	10000e38 <__divsi3+0x24>
10000e34:	10000d26 	beq	r2,zero,10000e6c <__divsi3+0x58>
10000e38:	294b883a 	add	r5,r5,r5
10000e3c:	10bfffc4 	addi	r2,r2,-1
10000e40:	18c7883a 	add	r3,r3,r3
10000e44:	293ffb36 	bltu	r5,r4,10000e34 <__alt_data_end+0xf8000e34>
10000e48:	0005883a 	mov	r2,zero
10000e4c:	18000726 	beq	r3,zero,10000e6c <__divsi3+0x58>
10000e50:	0005883a 	mov	r2,zero
10000e54:	31400236 	bltu	r6,r5,10000e60 <__divsi3+0x4c>
10000e58:	314dc83a 	sub	r6,r6,r5
10000e5c:	10c4b03a 	or	r2,r2,r3
10000e60:	1806d07a 	srli	r3,r3,1
10000e64:	280ad07a 	srli	r5,r5,1
10000e68:	183ffa1e 	bne	r3,zero,10000e54 <__alt_data_end+0xf8000e54>
10000e6c:	38000126 	beq	r7,zero,10000e74 <__divsi3+0x60>
10000e70:	0085c83a 	sub	r2,zero,r2
10000e74:	f800283a 	ret
10000e78:	014bc83a 	sub	r5,zero,r5
10000e7c:	39c0005c 	xori	r7,r7,1
10000e80:	003fe706 	br	10000e20 <__alt_data_end+0xf8000e20>
10000e84:	0109c83a 	sub	r4,zero,r4
10000e88:	01c00044 	movi	r7,1
10000e8c:	003fe306 	br	10000e1c <__alt_data_end+0xf8000e1c>
10000e90:	00c00044 	movi	r3,1
10000e94:	003fee06 	br	10000e50 <__alt_data_end+0xf8000e50>

10000e98 <__modsi3>:
10000e98:	20001716 	blt	r4,zero,10000ef8 <__modsi3+0x60>
10000e9c:	000f883a 	mov	r7,zero
10000ea0:	2005883a 	mov	r2,r4
10000ea4:	28001216 	blt	r5,zero,10000ef0 <__modsi3+0x58>
10000ea8:	2900162e 	bgeu	r5,r4,10000f04 <__modsi3+0x6c>
10000eac:	01800804 	movi	r6,32
10000eb0:	00c00044 	movi	r3,1
10000eb4:	00000106 	br	10000ebc <__modsi3+0x24>
10000eb8:	30000a26 	beq	r6,zero,10000ee4 <__modsi3+0x4c>
10000ebc:	294b883a 	add	r5,r5,r5
10000ec0:	31bfffc4 	addi	r6,r6,-1
10000ec4:	18c7883a 	add	r3,r3,r3
10000ec8:	293ffb36 	bltu	r5,r4,10000eb8 <__alt_data_end+0xf8000eb8>
10000ecc:	18000526 	beq	r3,zero,10000ee4 <__modsi3+0x4c>
10000ed0:	1806d07a 	srli	r3,r3,1
10000ed4:	11400136 	bltu	r2,r5,10000edc <__modsi3+0x44>
10000ed8:	1145c83a 	sub	r2,r2,r5
10000edc:	280ad07a 	srli	r5,r5,1
10000ee0:	183ffb1e 	bne	r3,zero,10000ed0 <__alt_data_end+0xf8000ed0>
10000ee4:	38000126 	beq	r7,zero,10000eec <__modsi3+0x54>
10000ee8:	0085c83a 	sub	r2,zero,r2
10000eec:	f800283a 	ret
10000ef0:	014bc83a 	sub	r5,zero,r5
10000ef4:	003fec06 	br	10000ea8 <__alt_data_end+0xf8000ea8>
10000ef8:	0109c83a 	sub	r4,zero,r4
10000efc:	01c00044 	movi	r7,1
10000f00:	003fe706 	br	10000ea0 <__alt_data_end+0xf8000ea0>
10000f04:	00c00044 	movi	r3,1
10000f08:	003ff106 	br	10000ed0 <__alt_data_end+0xf8000ed0>

10000f0c <__udivsi3>:
10000f0c:	200d883a 	mov	r6,r4
10000f10:	2900152e 	bgeu	r5,r4,10000f68 <__udivsi3+0x5c>
10000f14:	28001416 	blt	r5,zero,10000f68 <__udivsi3+0x5c>
10000f18:	00800804 	movi	r2,32
10000f1c:	00c00044 	movi	r3,1
10000f20:	00000206 	br	10000f2c <__udivsi3+0x20>
10000f24:	10000e26 	beq	r2,zero,10000f60 <__udivsi3+0x54>
10000f28:	28000516 	blt	r5,zero,10000f40 <__udivsi3+0x34>
10000f2c:	294b883a 	add	r5,r5,r5
10000f30:	10bfffc4 	addi	r2,r2,-1
10000f34:	18c7883a 	add	r3,r3,r3
10000f38:	293ffa36 	bltu	r5,r4,10000f24 <__alt_data_end+0xf8000f24>
10000f3c:	18000826 	beq	r3,zero,10000f60 <__udivsi3+0x54>
10000f40:	0005883a 	mov	r2,zero
10000f44:	31400236 	bltu	r6,r5,10000f50 <__udivsi3+0x44>
10000f48:	314dc83a 	sub	r6,r6,r5
10000f4c:	10c4b03a 	or	r2,r2,r3
10000f50:	1806d07a 	srli	r3,r3,1
10000f54:	280ad07a 	srli	r5,r5,1
10000f58:	183ffa1e 	bne	r3,zero,10000f44 <__alt_data_end+0xf8000f44>
10000f5c:	f800283a 	ret
10000f60:	0005883a 	mov	r2,zero
10000f64:	f800283a 	ret
10000f68:	00c00044 	movi	r3,1
10000f6c:	003ff406 	br	10000f40 <__alt_data_end+0xf8000f40>

10000f70 <__umodsi3>:
10000f70:	2005883a 	mov	r2,r4
10000f74:	2900122e 	bgeu	r5,r4,10000fc0 <__umodsi3+0x50>
10000f78:	28001116 	blt	r5,zero,10000fc0 <__umodsi3+0x50>
10000f7c:	01800804 	movi	r6,32
10000f80:	00c00044 	movi	r3,1
10000f84:	00000206 	br	10000f90 <__umodsi3+0x20>
10000f88:	30000c26 	beq	r6,zero,10000fbc <__umodsi3+0x4c>
10000f8c:	28000516 	blt	r5,zero,10000fa4 <__umodsi3+0x34>
10000f90:	294b883a 	add	r5,r5,r5
10000f94:	31bfffc4 	addi	r6,r6,-1
10000f98:	18c7883a 	add	r3,r3,r3
10000f9c:	293ffa36 	bltu	r5,r4,10000f88 <__alt_data_end+0xf8000f88>
10000fa0:	18000626 	beq	r3,zero,10000fbc <__umodsi3+0x4c>
10000fa4:	1806d07a 	srli	r3,r3,1
10000fa8:	11400136 	bltu	r2,r5,10000fb0 <__umodsi3+0x40>
10000fac:	1145c83a 	sub	r2,r2,r5
10000fb0:	280ad07a 	srli	r5,r5,1
10000fb4:	183ffb1e 	bne	r3,zero,10000fa4 <__alt_data_end+0xf8000fa4>
10000fb8:	f800283a 	ret
10000fbc:	f800283a 	ret
10000fc0:	00c00044 	movi	r3,1
10000fc4:	003ff706 	br	10000fa4 <__alt_data_end+0xf8000fa4>

10000fc8 <__mulsi3>:
10000fc8:	0005883a 	mov	r2,zero
10000fcc:	20000726 	beq	r4,zero,10000fec <__mulsi3+0x24>
10000fd0:	20c0004c 	andi	r3,r4,1
10000fd4:	2008d07a 	srli	r4,r4,1
10000fd8:	18000126 	beq	r3,zero,10000fe0 <__mulsi3+0x18>
10000fdc:	1145883a 	add	r2,r2,r5
10000fe0:	294b883a 	add	r5,r5,r5
10000fe4:	203ffa1e 	bne	r4,zero,10000fd0 <__alt_data_end+0xf8000fd0>
10000fe8:	f800283a 	ret
10000fec:	f800283a 	ret

10000ff0 <_printf_r>:
10000ff0:	defffd04 	addi	sp,sp,-12
10000ff4:	2805883a 	mov	r2,r5
10000ff8:	dfc00015 	stw	ra,0(sp)
10000ffc:	d9800115 	stw	r6,4(sp)
10001000:	d9c00215 	stw	r7,8(sp)
10001004:	21400217 	ldw	r5,8(r4)
10001008:	d9c00104 	addi	r7,sp,4
1000100c:	100d883a 	mov	r6,r2
10001010:	00035c40 	call	100035c4 <___vfprintf_internal_r>
10001014:	dfc00017 	ldw	ra,0(sp)
10001018:	dec00304 	addi	sp,sp,12
1000101c:	f800283a 	ret

10001020 <printf>:
10001020:	defffc04 	addi	sp,sp,-16
10001024:	dfc00015 	stw	ra,0(sp)
10001028:	d9400115 	stw	r5,4(sp)
1000102c:	d9800215 	stw	r6,8(sp)
10001030:	d9c00315 	stw	r7,12(sp)
10001034:	00840074 	movhi	r2,4097
10001038:	10987104 	addi	r2,r2,25028
1000103c:	10800017 	ldw	r2,0(r2)
10001040:	200b883a 	mov	r5,r4
10001044:	d9800104 	addi	r6,sp,4
10001048:	11000217 	ldw	r4,8(r2)
1000104c:	00058a00 	call	100058a0 <__vfprintf_internal>
10001050:	dfc00017 	ldw	ra,0(sp)
10001054:	dec00404 	addi	sp,sp,16
10001058:	f800283a 	ret

1000105c <_puts_r>:
1000105c:	defff604 	addi	sp,sp,-40
10001060:	dc000715 	stw	r16,28(sp)
10001064:	2021883a 	mov	r16,r4
10001068:	2809883a 	mov	r4,r5
1000106c:	dc400815 	stw	r17,32(sp)
10001070:	dfc00915 	stw	ra,36(sp)
10001074:	2823883a 	mov	r17,r5
10001078:	00012700 	call	10001270 <strlen>
1000107c:	10c00044 	addi	r3,r2,1
10001080:	d8800115 	stw	r2,4(sp)
10001084:	00840074 	movhi	r2,4097
10001088:	10903b04 	addi	r2,r2,16620
1000108c:	d8800215 	stw	r2,8(sp)
10001090:	00800044 	movi	r2,1
10001094:	d8800315 	stw	r2,12(sp)
10001098:	00800084 	movi	r2,2
1000109c:	dc400015 	stw	r17,0(sp)
100010a0:	d8c00615 	stw	r3,24(sp)
100010a4:	dec00415 	stw	sp,16(sp)
100010a8:	d8800515 	stw	r2,20(sp)
100010ac:	80000226 	beq	r16,zero,100010b8 <_puts_r+0x5c>
100010b0:	80800e17 	ldw	r2,56(r16)
100010b4:	10001426 	beq	r2,zero,10001108 <_puts_r+0xac>
100010b8:	81400217 	ldw	r5,8(r16)
100010bc:	2880030b 	ldhu	r2,12(r5)
100010c0:	10c8000c 	andi	r3,r2,8192
100010c4:	1800061e 	bne	r3,zero,100010e0 <_puts_r+0x84>
100010c8:	29001917 	ldw	r4,100(r5)
100010cc:	00f7ffc4 	movi	r3,-8193
100010d0:	10880014 	ori	r2,r2,8192
100010d4:	20c6703a 	and	r3,r4,r3
100010d8:	2880030d 	sth	r2,12(r5)
100010dc:	28c01915 	stw	r3,100(r5)
100010e0:	d9800404 	addi	r6,sp,16
100010e4:	8009883a 	mov	r4,r16
100010e8:	0007e080 	call	10007e08 <__sfvwrite_r>
100010ec:	1000091e 	bne	r2,zero,10001114 <_puts_r+0xb8>
100010f0:	00800284 	movi	r2,10
100010f4:	dfc00917 	ldw	ra,36(sp)
100010f8:	dc400817 	ldw	r17,32(sp)
100010fc:	dc000717 	ldw	r16,28(sp)
10001100:	dec00a04 	addi	sp,sp,40
10001104:	f800283a 	ret
10001108:	8009883a 	mov	r4,r16
1000110c:	00079840 	call	10007984 <__sinit>
10001110:	003fe906 	br	100010b8 <__alt_data_end+0xf80010b8>
10001114:	00bfffc4 	movi	r2,-1
10001118:	003ff606 	br	100010f4 <__alt_data_end+0xf80010f4>

1000111c <puts>:
1000111c:	00840074 	movhi	r2,4097
10001120:	10987104 	addi	r2,r2,25028
10001124:	200b883a 	mov	r5,r4
10001128:	11000017 	ldw	r4,0(r2)
1000112c:	000105c1 	jmpi	1000105c <_puts_r>

10001130 <srand>:
10001130:	00840074 	movhi	r2,4097
10001134:	10987104 	addi	r2,r2,25028
10001138:	10800017 	ldw	r2,0(r2)
1000113c:	11002915 	stw	r4,164(r2)
10001140:	10002a15 	stw	zero,168(r2)
10001144:	f800283a 	ret

10001148 <rand>:
10001148:	00840074 	movhi	r2,4097
1000114c:	defffe04 	addi	sp,sp,-8
10001150:	10987104 	addi	r2,r2,25028
10001154:	dc000015 	stw	r16,0(sp)
10001158:	14000017 	ldw	r16,0(r2)
1000115c:	dfc00115 	stw	ra,4(sp)
10001160:	01932574 	movhi	r6,19605
10001164:	81002917 	ldw	r4,164(r16)
10001168:	81402a17 	ldw	r5,168(r16)
1000116c:	01d614b4 	movhi	r7,22610
10001170:	319fcb44 	addi	r6,r6,32557
10001174:	39fd0b44 	addi	r7,r7,-3027
10001178:	000e25c0 	call	1000e25c <__muldi3>
1000117c:	11000044 	addi	r4,r2,1
10001180:	2085803a 	cmpltu	r2,r4,r2
10001184:	10c7883a 	add	r3,r2,r3
10001188:	00a00034 	movhi	r2,32768
1000118c:	10bfffc4 	addi	r2,r2,-1
10001190:	1884703a 	and	r2,r3,r2
10001194:	81002915 	stw	r4,164(r16)
10001198:	80c02a15 	stw	r3,168(r16)
1000119c:	dfc00117 	ldw	ra,4(sp)
100011a0:	dc000017 	ldw	r16,0(sp)
100011a4:	dec00204 	addi	sp,sp,8
100011a8:	f800283a 	ret

100011ac <_sprintf_r>:
100011ac:	deffe404 	addi	sp,sp,-112
100011b0:	2807883a 	mov	r3,r5
100011b4:	dfc01a15 	stw	ra,104(sp)
100011b8:	d9c01b15 	stw	r7,108(sp)
100011bc:	00a00034 	movhi	r2,32768
100011c0:	10bfffc4 	addi	r2,r2,-1
100011c4:	02008204 	movi	r8,520
100011c8:	d8800215 	stw	r2,8(sp)
100011cc:	d8800515 	stw	r2,20(sp)
100011d0:	d9c01b04 	addi	r7,sp,108
100011d4:	d80b883a 	mov	r5,sp
100011d8:	00bfffc4 	movi	r2,-1
100011dc:	d8c00015 	stw	r3,0(sp)
100011e0:	d8c00415 	stw	r3,16(sp)
100011e4:	da00030d 	sth	r8,12(sp)
100011e8:	d880038d 	sth	r2,14(sp)
100011ec:	00013080 	call	10001308 <___svfprintf_internal_r>
100011f0:	d8c00017 	ldw	r3,0(sp)
100011f4:	18000005 	stb	zero,0(r3)
100011f8:	dfc01a17 	ldw	ra,104(sp)
100011fc:	dec01c04 	addi	sp,sp,112
10001200:	f800283a 	ret

10001204 <sprintf>:
10001204:	deffe304 	addi	sp,sp,-116
10001208:	2007883a 	mov	r3,r4
1000120c:	dfc01a15 	stw	ra,104(sp)
10001210:	d9801b15 	stw	r6,108(sp)
10001214:	d9c01c15 	stw	r7,112(sp)
10001218:	01040074 	movhi	r4,4097
1000121c:	21187104 	addi	r4,r4,25028
10001220:	21000017 	ldw	r4,0(r4)
10001224:	00a00034 	movhi	r2,32768
10001228:	10bfffc4 	addi	r2,r2,-1
1000122c:	280d883a 	mov	r6,r5
10001230:	02008204 	movi	r8,520
10001234:	d8800215 	stw	r2,8(sp)
10001238:	d8800515 	stw	r2,20(sp)
1000123c:	d9c01b04 	addi	r7,sp,108
10001240:	d80b883a 	mov	r5,sp
10001244:	00bfffc4 	movi	r2,-1
10001248:	d8c00015 	stw	r3,0(sp)
1000124c:	d8c00415 	stw	r3,16(sp)
10001250:	da00030d 	sth	r8,12(sp)
10001254:	d880038d 	sth	r2,14(sp)
10001258:	00013080 	call	10001308 <___svfprintf_internal_r>
1000125c:	d8c00017 	ldw	r3,0(sp)
10001260:	18000005 	stb	zero,0(r3)
10001264:	dfc01a17 	ldw	ra,104(sp)
10001268:	dec01d04 	addi	sp,sp,116
1000126c:	f800283a 	ret

10001270 <strlen>:
10001270:	208000cc 	andi	r2,r4,3
10001274:	10002026 	beq	r2,zero,100012f8 <strlen+0x88>
10001278:	20800007 	ldb	r2,0(r4)
1000127c:	10002026 	beq	r2,zero,10001300 <strlen+0x90>
10001280:	2005883a 	mov	r2,r4
10001284:	00000206 	br	10001290 <strlen+0x20>
10001288:	10c00007 	ldb	r3,0(r2)
1000128c:	18001826 	beq	r3,zero,100012f0 <strlen+0x80>
10001290:	10800044 	addi	r2,r2,1
10001294:	10c000cc 	andi	r3,r2,3
10001298:	183ffb1e 	bne	r3,zero,10001288 <__alt_data_end+0xf8001288>
1000129c:	10c00017 	ldw	r3,0(r2)
100012a0:	01ffbff4 	movhi	r7,65279
100012a4:	39ffbfc4 	addi	r7,r7,-257
100012a8:	00ca303a 	nor	r5,zero,r3
100012ac:	01a02074 	movhi	r6,32897
100012b0:	19c7883a 	add	r3,r3,r7
100012b4:	31a02004 	addi	r6,r6,-32640
100012b8:	1946703a 	and	r3,r3,r5
100012bc:	1986703a 	and	r3,r3,r6
100012c0:	1800091e 	bne	r3,zero,100012e8 <strlen+0x78>
100012c4:	10800104 	addi	r2,r2,4
100012c8:	10c00017 	ldw	r3,0(r2)
100012cc:	19cb883a 	add	r5,r3,r7
100012d0:	00c6303a 	nor	r3,zero,r3
100012d4:	28c6703a 	and	r3,r5,r3
100012d8:	1986703a 	and	r3,r3,r6
100012dc:	183ff926 	beq	r3,zero,100012c4 <__alt_data_end+0xf80012c4>
100012e0:	00000106 	br	100012e8 <strlen+0x78>
100012e4:	10800044 	addi	r2,r2,1
100012e8:	10c00007 	ldb	r3,0(r2)
100012ec:	183ffd1e 	bne	r3,zero,100012e4 <__alt_data_end+0xf80012e4>
100012f0:	1105c83a 	sub	r2,r2,r4
100012f4:	f800283a 	ret
100012f8:	2005883a 	mov	r2,r4
100012fc:	003fe706 	br	1000129c <__alt_data_end+0xf800129c>
10001300:	0005883a 	mov	r2,zero
10001304:	f800283a 	ret

10001308 <___svfprintf_internal_r>:
10001308:	deffb704 	addi	sp,sp,-292
1000130c:	dfc04815 	stw	ra,288(sp)
10001310:	ddc04615 	stw	r23,280(sp)
10001314:	d9402d15 	stw	r5,180(sp)
10001318:	d9003915 	stw	r4,228(sp)
1000131c:	302f883a 	mov	r23,r6
10001320:	d9c02e15 	stw	r7,184(sp)
10001324:	df004715 	stw	fp,284(sp)
10001328:	dd804515 	stw	r22,276(sp)
1000132c:	dd404415 	stw	r21,272(sp)
10001330:	dd004315 	stw	r20,268(sp)
10001334:	dcc04215 	stw	r19,264(sp)
10001338:	dc804115 	stw	r18,260(sp)
1000133c:	dc404015 	stw	r17,256(sp)
10001340:	dc003f15 	stw	r16,252(sp)
10001344:	00085040 	call	10008504 <_localeconv_r>
10001348:	10800017 	ldw	r2,0(r2)
1000134c:	1009883a 	mov	r4,r2
10001350:	d8803415 	stw	r2,208(sp)
10001354:	00012700 	call	10001270 <strlen>
10001358:	d8c02d17 	ldw	r3,180(sp)
1000135c:	d8803815 	stw	r2,224(sp)
10001360:	1880030b 	ldhu	r2,12(r3)
10001364:	1080200c 	andi	r2,r2,128
10001368:	10000226 	beq	r2,zero,10001374 <___svfprintf_internal_r+0x6c>
1000136c:	18800417 	ldw	r2,16(r3)
10001370:	1006b126 	beq	r2,zero,10002e38 <___svfprintf_internal_r+0x1b30>
10001374:	dcc03917 	ldw	r19,228(sp)
10001378:	d8c00404 	addi	r3,sp,16
1000137c:	05440074 	movhi	r21,4097
10001380:	d9001e04 	addi	r4,sp,120
10001384:	ad504c84 	addi	r21,r21,16690
10001388:	d8c01e15 	stw	r3,120(sp)
1000138c:	d8002015 	stw	zero,128(sp)
10001390:	d8001f15 	stw	zero,124(sp)
10001394:	d8003315 	stw	zero,204(sp)
10001398:	d8003615 	stw	zero,216(sp)
1000139c:	d8003715 	stw	zero,220(sp)
100013a0:	1811883a 	mov	r8,r3
100013a4:	d8003a15 	stw	zero,232(sp)
100013a8:	d8003b15 	stw	zero,236(sp)
100013ac:	d8002f15 	stw	zero,188(sp)
100013b0:	d9002815 	stw	r4,160(sp)
100013b4:	b8800007 	ldb	r2,0(r23)
100013b8:	10027726 	beq	r2,zero,10001d98 <___svfprintf_internal_r+0xa90>
100013bc:	00c00944 	movi	r3,37
100013c0:	b823883a 	mov	r17,r23
100013c4:	10c0021e 	bne	r2,r3,100013d0 <___svfprintf_internal_r+0xc8>
100013c8:	00001406 	br	1000141c <___svfprintf_internal_r+0x114>
100013cc:	10c00326 	beq	r2,r3,100013dc <___svfprintf_internal_r+0xd4>
100013d0:	8c400044 	addi	r17,r17,1
100013d4:	88800007 	ldb	r2,0(r17)
100013d8:	103ffc1e 	bne	r2,zero,100013cc <__alt_data_end+0xf80013cc>
100013dc:	8de1c83a 	sub	r16,r17,r23
100013e0:	80000e26 	beq	r16,zero,1000141c <___svfprintf_internal_r+0x114>
100013e4:	d8c02017 	ldw	r3,128(sp)
100013e8:	d8801f17 	ldw	r2,124(sp)
100013ec:	45c00015 	stw	r23,0(r8)
100013f0:	1c07883a 	add	r3,r3,r16
100013f4:	10800044 	addi	r2,r2,1
100013f8:	d8c02015 	stw	r3,128(sp)
100013fc:	44000115 	stw	r16,4(r8)
10001400:	d8801f15 	stw	r2,124(sp)
10001404:	00c001c4 	movi	r3,7
10001408:	18809916 	blt	r3,r2,10001670 <___svfprintf_internal_r+0x368>
1000140c:	42000204 	addi	r8,r8,8
10001410:	d9402f17 	ldw	r5,188(sp)
10001414:	2c0b883a 	add	r5,r5,r16
10001418:	d9402f15 	stw	r5,188(sp)
1000141c:	88800007 	ldb	r2,0(r17)
10001420:	10009a26 	beq	r2,zero,1000168c <___svfprintf_internal_r+0x384>
10001424:	8dc00044 	addi	r23,r17,1
10001428:	8c400047 	ldb	r17,1(r17)
1000142c:	0021883a 	mov	r16,zero
10001430:	00bfffc4 	movi	r2,-1
10001434:	0025883a 	mov	r18,zero
10001438:	dc002905 	stb	r16,164(sp)
1000143c:	d8002785 	stb	zero,158(sp)
10001440:	d8002b05 	stb	zero,172(sp)
10001444:	d8802a15 	stw	r2,168(sp)
10001448:	d8003115 	stw	zero,196(sp)
1000144c:	05001604 	movi	r20,88
10001450:	05800244 	movi	r22,9
10001454:	4039883a 	mov	fp,r8
10001458:	9021883a 	mov	r16,r18
1000145c:	bdc00044 	addi	r23,r23,1
10001460:	88bff804 	addi	r2,r17,-32
10001464:	a0831e36 	bltu	r20,r2,100020e0 <___svfprintf_internal_r+0xdd8>
10001468:	100490ba 	slli	r2,r2,2
1000146c:	00c40034 	movhi	r3,4096
10001470:	18c52004 	addi	r3,r3,5248
10001474:	10c5883a 	add	r2,r2,r3
10001478:	10800017 	ldw	r2,0(r2)
1000147c:	1000683a 	jmp	r2
10001480:	10002028 	cmpgeui	zero,r2,128
10001484:	100020e0 	cmpeqi	zero,r2,131
10001488:	100020e0 	cmpeqi	zero,r2,131
1000148c:	1000201c 	xori	zero,r2,128
10001490:	100020e0 	cmpeqi	zero,r2,131
10001494:	100020e0 	cmpeqi	zero,r2,131
10001498:	100020e0 	cmpeqi	zero,r2,131
1000149c:	100020e0 	cmpeqi	zero,r2,131
100014a0:	100020e0 	cmpeqi	zero,r2,131
100014a4:	100020e0 	cmpeqi	zero,r2,131
100014a8:	100016e8 	cmpgeui	zero,r2,91
100014ac:	10001f2c 	andhi	zero,r2,124
100014b0:	100020e0 	cmpeqi	zero,r2,131
100014b4:	100015f4 	orhi	zero,r2,87
100014b8:	1000170c 	andi	zero,r2,92
100014bc:	100020e0 	cmpeqi	zero,r2,131
100014c0:	10001798 	cmpnei	zero,r2,94
100014c4:	1000175c 	xori	zero,r2,93
100014c8:	1000175c 	xori	zero,r2,93
100014cc:	1000175c 	xori	zero,r2,93
100014d0:	1000175c 	xori	zero,r2,93
100014d4:	1000175c 	xori	zero,r2,93
100014d8:	1000175c 	xori	zero,r2,93
100014dc:	1000175c 	xori	zero,r2,93
100014e0:	1000175c 	xori	zero,r2,93
100014e4:	1000175c 	xori	zero,r2,93
100014e8:	100020e0 	cmpeqi	zero,r2,131
100014ec:	100020e0 	cmpeqi	zero,r2,131
100014f0:	100020e0 	cmpeqi	zero,r2,131
100014f4:	100020e0 	cmpeqi	zero,r2,131
100014f8:	100020e0 	cmpeqi	zero,r2,131
100014fc:	100020e0 	cmpeqi	zero,r2,131
10001500:	100020e0 	cmpeqi	zero,r2,131
10001504:	100020e0 	cmpeqi	zero,r2,131
10001508:	100020e0 	cmpeqi	zero,r2,131
1000150c:	100020e0 	cmpeqi	zero,r2,131
10001510:	1000185c 	xori	zero,r2,97
10001514:	100017a4 	muli	zero,r2,94
10001518:	100020e0 	cmpeqi	zero,r2,131
1000151c:	100017a4 	muli	zero,r2,94
10001520:	100020e0 	cmpeqi	zero,r2,131
10001524:	100020e0 	cmpeqi	zero,r2,131
10001528:	100020e0 	cmpeqi	zero,r2,131
1000152c:	100020e0 	cmpeqi	zero,r2,131
10001530:	10001850 	cmplti	zero,r2,97
10001534:	100020e0 	cmpeqi	zero,r2,131
10001538:	100020e0 	cmpeqi	zero,r2,131
1000153c:	10001924 	muli	zero,r2,100
10001540:	100020e0 	cmpeqi	zero,r2,131
10001544:	100020e0 	cmpeqi	zero,r2,131
10001548:	100020e0 	cmpeqi	zero,r2,131
1000154c:	100020e0 	cmpeqi	zero,r2,131
10001550:	100020e0 	cmpeqi	zero,r2,131
10001554:	10001da0 	cmpeqi	zero,r2,118
10001558:	100020e0 	cmpeqi	zero,r2,131
1000155c:	100020e0 	cmpeqi	zero,r2,131
10001560:	10001e0c 	andi	zero,r2,120
10001564:	100020e0 	cmpeqi	zero,r2,131
10001568:	100020e0 	cmpeqi	zero,r2,131
1000156c:	100020e0 	cmpeqi	zero,r2,131
10001570:	100020e0 	cmpeqi	zero,r2,131
10001574:	100020e0 	cmpeqi	zero,r2,131
10001578:	100020e0 	cmpeqi	zero,r2,131
1000157c:	100020e0 	cmpeqi	zero,r2,131
10001580:	100020e0 	cmpeqi	zero,r2,131
10001584:	100020e0 	cmpeqi	zero,r2,131
10001588:	100020e0 	cmpeqi	zero,r2,131
1000158c:	10001ec8 	cmpgei	zero,r2,123
10001590:	10002048 	cmpgei	zero,r2,129
10001594:	100017a4 	muli	zero,r2,94
10001598:	100017a4 	muli	zero,r2,94
1000159c:	100017a4 	muli	zero,r2,94
100015a0:	100020bc 	xorhi	zero,r2,130
100015a4:	10002048 	cmpgei	zero,r2,129
100015a8:	100020e0 	cmpeqi	zero,r2,131
100015ac:	100020e0 	cmpeqi	zero,r2,131
100015b0:	10002068 	cmpgeui	zero,r2,129
100015b4:	100020e0 	cmpeqi	zero,r2,131
100015b8:	1000207c 	xorhi	zero,r2,129
100015bc:	10001f0c 	andi	zero,r2,124
100015c0:	10001600 	call	11000160 <_gp+0xfe1fa8>
100015c4:	10001f44 	addi	zero,r2,125
100015c8:	100020e0 	cmpeqi	zero,r2,131
100015cc:	10001f50 	cmplti	zero,r2,125
100015d0:	100020e0 	cmpeqi	zero,r2,131
100015d4:	10001fb4 	orhi	zero,r2,126
100015d8:	100020e0 	cmpeqi	zero,r2,131
100015dc:	100020e0 	cmpeqi	zero,r2,131
100015e0:	10001fd4 	ori	zero,r2,127
100015e4:	d8c03117 	ldw	r3,196(sp)
100015e8:	d8802e15 	stw	r2,184(sp)
100015ec:	00c7c83a 	sub	r3,zero,r3
100015f0:	d8c03115 	stw	r3,196(sp)
100015f4:	84000114 	ori	r16,r16,4
100015f8:	bc400007 	ldb	r17,0(r23)
100015fc:	003f9706 	br	1000145c <__alt_data_end+0xf800145c>
10001600:	00800c04 	movi	r2,48
10001604:	d8802705 	stb	r2,156(sp)
10001608:	00801e04 	movi	r2,120
1000160c:	d8802745 	stb	r2,157(sp)
10001610:	d9002a17 	ldw	r4,168(sp)
10001614:	d8802e17 	ldw	r2,184(sp)
10001618:	d8002785 	stb	zero,158(sp)
1000161c:	e011883a 	mov	r8,fp
10001620:	10c00104 	addi	r3,r2,4
10001624:	15000017 	ldw	r20,0(r2)
10001628:	002d883a 	mov	r22,zero
1000162c:	80800094 	ori	r2,r16,2
10001630:	2002b616 	blt	r4,zero,1000210c <___svfprintf_internal_r+0xe04>
10001634:	00bfdfc4 	movi	r2,-129
10001638:	80a4703a 	and	r18,r16,r2
1000163c:	d8c02e15 	stw	r3,184(sp)
10001640:	94800094 	ori	r18,r18,2
10001644:	a002a01e 	bne	r20,zero,100020c8 <___svfprintf_internal_r+0xdc0>
10001648:	01440074 	movhi	r5,4097
1000164c:	29504504 	addi	r5,r5,16660
10001650:	d9403a15 	stw	r5,232(sp)
10001654:	04401e04 	movi	r17,120
10001658:	d8c02a17 	ldw	r3,168(sp)
1000165c:	0039883a 	mov	fp,zero
10001660:	1801e626 	beq	r3,zero,10001dfc <___svfprintf_internal_r+0xaf4>
10001664:	0029883a 	mov	r20,zero
10001668:	002d883a 	mov	r22,zero
1000166c:	00020506 	br	10001e84 <___svfprintf_internal_r+0xb7c>
10001670:	d9402d17 	ldw	r5,180(sp)
10001674:	d9801e04 	addi	r6,sp,120
10001678:	9809883a 	mov	r4,r19
1000167c:	000aca80 	call	1000aca8 <__ssprint_r>
10001680:	1000081e 	bne	r2,zero,100016a4 <___svfprintf_internal_r+0x39c>
10001684:	da000404 	addi	r8,sp,16
10001688:	003f6106 	br	10001410 <__alt_data_end+0xf8001410>
1000168c:	d8802017 	ldw	r2,128(sp)
10001690:	10000426 	beq	r2,zero,100016a4 <___svfprintf_internal_r+0x39c>
10001694:	d9402d17 	ldw	r5,180(sp)
10001698:	d9003917 	ldw	r4,228(sp)
1000169c:	d9801e04 	addi	r6,sp,120
100016a0:	000aca80 	call	1000aca8 <__ssprint_r>
100016a4:	d8802d17 	ldw	r2,180(sp)
100016a8:	10c0030b 	ldhu	r3,12(r2)
100016ac:	d8802f17 	ldw	r2,188(sp)
100016b0:	18c0100c 	andi	r3,r3,64
100016b4:	1806251e 	bne	r3,zero,10002f4c <___svfprintf_internal_r+0x1c44>
100016b8:	dfc04817 	ldw	ra,288(sp)
100016bc:	df004717 	ldw	fp,284(sp)
100016c0:	ddc04617 	ldw	r23,280(sp)
100016c4:	dd804517 	ldw	r22,276(sp)
100016c8:	dd404417 	ldw	r21,272(sp)
100016cc:	dd004317 	ldw	r20,268(sp)
100016d0:	dcc04217 	ldw	r19,264(sp)
100016d4:	dc804117 	ldw	r18,260(sp)
100016d8:	dc404017 	ldw	r17,256(sp)
100016dc:	dc003f17 	ldw	r16,252(sp)
100016e0:	dec04904 	addi	sp,sp,292
100016e4:	f800283a 	ret
100016e8:	d9002e17 	ldw	r4,184(sp)
100016ec:	d9402e17 	ldw	r5,184(sp)
100016f0:	21000017 	ldw	r4,0(r4)
100016f4:	28800104 	addi	r2,r5,4
100016f8:	d9003115 	stw	r4,196(sp)
100016fc:	203fb916 	blt	r4,zero,100015e4 <__alt_data_end+0xf80015e4>
10001700:	d8802e15 	stw	r2,184(sp)
10001704:	bc400007 	ldb	r17,0(r23)
10001708:	003f5406 	br	1000145c <__alt_data_end+0xf800145c>
1000170c:	bc400007 	ldb	r17,0(r23)
10001710:	01000a84 	movi	r4,42
10001714:	b8c00044 	addi	r3,r23,1
10001718:	89076926 	beq	r17,r4,100034c0 <___svfprintf_internal_r+0x21b8>
1000171c:	8cbff404 	addi	r18,r17,-48
10001720:	b486b936 	bltu	r22,r18,10003208 <___svfprintf_internal_r+0x1f00>
10001724:	0009883a 	mov	r4,zero
10001728:	1823883a 	mov	r17,r3
1000172c:	01400284 	movi	r5,10
10001730:	0000fc80 	call	10000fc8 <__mulsi3>
10001734:	88c00007 	ldb	r3,0(r17)
10001738:	1489883a 	add	r4,r2,r18
1000173c:	8dc00044 	addi	r23,r17,1
10001740:	1cbff404 	addi	r18,r3,-48
10001744:	b823883a 	mov	r17,r23
10001748:	b4bff82e 	bgeu	r22,r18,1000172c <__alt_data_end+0xf800172c>
1000174c:	1823883a 	mov	r17,r3
10001750:	20060416 	blt	r4,zero,10002f64 <___svfprintf_internal_r+0x1c5c>
10001754:	d9002a15 	stw	r4,168(sp)
10001758:	003f4106 	br	10001460 <__alt_data_end+0xf8001460>
1000175c:	8cbff404 	addi	r18,r17,-48
10001760:	d8003115 	stw	zero,196(sp)
10001764:	0009883a 	mov	r4,zero
10001768:	b823883a 	mov	r17,r23
1000176c:	01400284 	movi	r5,10
10001770:	0000fc80 	call	10000fc8 <__mulsi3>
10001774:	88c00007 	ldb	r3,0(r17)
10001778:	9089883a 	add	r4,r18,r2
1000177c:	bdc00044 	addi	r23,r23,1
10001780:	1cbff404 	addi	r18,r3,-48
10001784:	b823883a 	mov	r17,r23
10001788:	b4bff82e 	bgeu	r22,r18,1000176c <__alt_data_end+0xf800176c>
1000178c:	1823883a 	mov	r17,r3
10001790:	d9003115 	stw	r4,196(sp)
10001794:	003f3206 	br	10001460 <__alt_data_end+0xf8001460>
10001798:	84002014 	ori	r16,r16,128
1000179c:	bc400007 	ldb	r17,0(r23)
100017a0:	003f2e06 	br	1000145c <__alt_data_end+0xf800145c>
100017a4:	8025883a 	mov	r18,r16
100017a8:	dc002903 	ldbu	r16,164(sp)
100017ac:	e011883a 	mov	r8,fp
100017b0:	84003fcc 	andi	r16,r16,255
100017b4:	8007721e 	bne	r16,zero,10003580 <___svfprintf_internal_r+0x2278>
100017b8:	9080020c 	andi	r2,r18,8
100017bc:	1004a526 	beq	r2,zero,10002a54 <___svfprintf_internal_r+0x174c>
100017c0:	d9002e17 	ldw	r4,184(sp)
100017c4:	d9402e17 	ldw	r5,184(sp)
100017c8:	d8802e17 	ldw	r2,184(sp)
100017cc:	21000017 	ldw	r4,0(r4)
100017d0:	29400117 	ldw	r5,4(r5)
100017d4:	10800204 	addi	r2,r2,8
100017d8:	d9003615 	stw	r4,216(sp)
100017dc:	d9403715 	stw	r5,220(sp)
100017e0:	d8802e15 	stw	r2,184(sp)
100017e4:	d9003617 	ldw	r4,216(sp)
100017e8:	d9403717 	ldw	r5,220(sp)
100017ec:	da003e15 	stw	r8,248(sp)
100017f0:	04000044 	movi	r16,1
100017f4:	000a9c80 	call	1000a9c8 <__fpclassifyd>
100017f8:	da003e17 	ldw	r8,248(sp)
100017fc:	1404731e 	bne	r2,r16,100029cc <___svfprintf_internal_r+0x16c4>
10001800:	d9003617 	ldw	r4,216(sp)
10001804:	d9403717 	ldw	r5,220(sp)
10001808:	000d883a 	mov	r6,zero
1000180c:	000f883a 	mov	r7,zero
10001810:	00103080 	call	10010308 <__ledf2>
10001814:	da003e17 	ldw	r8,248(sp)
10001818:	10061b16 	blt	r2,zero,10003088 <___svfprintf_internal_r+0x1d80>
1000181c:	df002783 	ldbu	fp,158(sp)
10001820:	008011c4 	movi	r2,71
10001824:	1445810e 	bge	r2,r17,10002e2c <___svfprintf_internal_r+0x1b24>
10001828:	04040074 	movhi	r16,4097
1000182c:	84103d04 	addi	r16,r16,16628
10001830:	00c000c4 	movi	r3,3
10001834:	00bfdfc4 	movi	r2,-129
10001838:	d8c02915 	stw	r3,164(sp)
1000183c:	90a4703a 	and	r18,r18,r2
10001840:	d8c02b15 	stw	r3,172(sp)
10001844:	d8002a15 	stw	zero,168(sp)
10001848:	d8003215 	stw	zero,200(sp)
1000184c:	00006c06 	br	10001a00 <___svfprintf_internal_r+0x6f8>
10001850:	84000214 	ori	r16,r16,8
10001854:	bc400007 	ldb	r17,0(r23)
10001858:	003f0006 	br	1000145c <__alt_data_end+0xf800145c>
1000185c:	8025883a 	mov	r18,r16
10001860:	dc002903 	ldbu	r16,164(sp)
10001864:	e011883a 	mov	r8,fp
10001868:	84003fcc 	andi	r16,r16,255
1000186c:	80073f1e 	bne	r16,zero,1000356c <___svfprintf_internal_r+0x2264>
10001870:	94800414 	ori	r18,r18,16
10001874:	9080080c 	andi	r2,r18,32
10001878:	1003bb26 	beq	r2,zero,10002768 <___svfprintf_internal_r+0x1460>
1000187c:	d9002e17 	ldw	r4,184(sp)
10001880:	20800117 	ldw	r2,4(r4)
10001884:	25000017 	ldw	r20,0(r4)
10001888:	21000204 	addi	r4,r4,8
1000188c:	d9002e15 	stw	r4,184(sp)
10001890:	102d883a 	mov	r22,r2
10001894:	1003bd16 	blt	r2,zero,1000278c <___svfprintf_internal_r+0x1484>
10001898:	d9002a17 	ldw	r4,168(sp)
1000189c:	df002783 	ldbu	fp,158(sp)
100018a0:	2003d016 	blt	r4,zero,100027e4 <___svfprintf_internal_r+0x14dc>
100018a4:	00ffdfc4 	movi	r3,-129
100018a8:	a584b03a 	or	r2,r20,r22
100018ac:	90e4703a 	and	r18,r18,r3
100018b0:	10015026 	beq	r2,zero,10001df4 <___svfprintf_internal_r+0xaec>
100018b4:	b0037026 	beq	r22,zero,10002678 <___svfprintf_internal_r+0x1370>
100018b8:	dc402915 	stw	r17,164(sp)
100018bc:	dc001e04 	addi	r16,sp,120
100018c0:	b023883a 	mov	r17,r22
100018c4:	402d883a 	mov	r22,r8
100018c8:	a009883a 	mov	r4,r20
100018cc:	880b883a 	mov	r5,r17
100018d0:	01800284 	movi	r6,10
100018d4:	000f883a 	mov	r7,zero
100018d8:	000e9640 	call	1000e964 <__umoddi3>
100018dc:	10800c04 	addi	r2,r2,48
100018e0:	843fffc4 	addi	r16,r16,-1
100018e4:	a009883a 	mov	r4,r20
100018e8:	880b883a 	mov	r5,r17
100018ec:	80800005 	stb	r2,0(r16)
100018f0:	01800284 	movi	r6,10
100018f4:	000f883a 	mov	r7,zero
100018f8:	000e3680 	call	1000e368 <__udivdi3>
100018fc:	1029883a 	mov	r20,r2
10001900:	10c4b03a 	or	r2,r2,r3
10001904:	1823883a 	mov	r17,r3
10001908:	103fef1e 	bne	r2,zero,100018c8 <__alt_data_end+0xf80018c8>
1000190c:	d8c02817 	ldw	r3,160(sp)
10001910:	dc402917 	ldw	r17,164(sp)
10001914:	b011883a 	mov	r8,r22
10001918:	1c07c83a 	sub	r3,r3,r16
1000191c:	d8c02b15 	stw	r3,172(sp)
10001920:	00003106 	br	100019e8 <___svfprintf_internal_r+0x6e0>
10001924:	8025883a 	mov	r18,r16
10001928:	dc002903 	ldbu	r16,164(sp)
1000192c:	e011883a 	mov	r8,fp
10001930:	84003fcc 	andi	r16,r16,255
10001934:	80070a1e 	bne	r16,zero,10003560 <___svfprintf_internal_r+0x2258>
10001938:	94800414 	ori	r18,r18,16
1000193c:	9080080c 	andi	r2,r18,32
10001940:	1002f626 	beq	r2,zero,1000251c <___svfprintf_internal_r+0x1214>
10001944:	d9002e17 	ldw	r4,184(sp)
10001948:	d9402a17 	ldw	r5,168(sp)
1000194c:	d8002785 	stb	zero,158(sp)
10001950:	20800204 	addi	r2,r4,8
10001954:	25000017 	ldw	r20,0(r4)
10001958:	25800117 	ldw	r22,4(r4)
1000195c:	28043716 	blt	r5,zero,10002a3c <___svfprintf_internal_r+0x1734>
10001960:	013fdfc4 	movi	r4,-129
10001964:	a586b03a 	or	r3,r20,r22
10001968:	d8802e15 	stw	r2,184(sp)
1000196c:	9124703a 	and	r18,r18,r4
10001970:	1802f71e 	bne	r3,zero,10002550 <___svfprintf_internal_r+0x1248>
10001974:	d9402a17 	ldw	r5,168(sp)
10001978:	0039883a 	mov	fp,zero
1000197c:	2806df26 	beq	r5,zero,100034fc <___svfprintf_internal_r+0x21f4>
10001980:	0029883a 	mov	r20,zero
10001984:	002d883a 	mov	r22,zero
10001988:	dc001e04 	addi	r16,sp,120
1000198c:	a006d0fa 	srli	r3,r20,3
10001990:	b008977a 	slli	r4,r22,29
10001994:	b02cd0fa 	srli	r22,r22,3
10001998:	a50001cc 	andi	r20,r20,7
1000199c:	a0800c04 	addi	r2,r20,48
100019a0:	843fffc4 	addi	r16,r16,-1
100019a4:	20e8b03a 	or	r20,r4,r3
100019a8:	80800005 	stb	r2,0(r16)
100019ac:	a586b03a 	or	r3,r20,r22
100019b0:	183ff61e 	bne	r3,zero,1000198c <__alt_data_end+0xf800198c>
100019b4:	90c0004c 	andi	r3,r18,1
100019b8:	18013f26 	beq	r3,zero,10001eb8 <___svfprintf_internal_r+0xbb0>
100019bc:	10803fcc 	andi	r2,r2,255
100019c0:	1080201c 	xori	r2,r2,128
100019c4:	10bfe004 	addi	r2,r2,-128
100019c8:	00c00c04 	movi	r3,48
100019cc:	10c13a26 	beq	r2,r3,10001eb8 <___svfprintf_internal_r+0xbb0>
100019d0:	80ffffc5 	stb	r3,-1(r16)
100019d4:	d8c02817 	ldw	r3,160(sp)
100019d8:	80bfffc4 	addi	r2,r16,-1
100019dc:	1021883a 	mov	r16,r2
100019e0:	1887c83a 	sub	r3,r3,r2
100019e4:	d8c02b15 	stw	r3,172(sp)
100019e8:	d8802b17 	ldw	r2,172(sp)
100019ec:	d9002a17 	ldw	r4,168(sp)
100019f0:	1100010e 	bge	r2,r4,100019f8 <___svfprintf_internal_r+0x6f0>
100019f4:	2005883a 	mov	r2,r4
100019f8:	d8802915 	stw	r2,164(sp)
100019fc:	d8003215 	stw	zero,200(sp)
10001a00:	e7003fcc 	andi	fp,fp,255
10001a04:	e700201c 	xori	fp,fp,128
10001a08:	e73fe004 	addi	fp,fp,-128
10001a0c:	e0000326 	beq	fp,zero,10001a1c <___svfprintf_internal_r+0x714>
10001a10:	d8c02917 	ldw	r3,164(sp)
10001a14:	18c00044 	addi	r3,r3,1
10001a18:	d8c02915 	stw	r3,164(sp)
10001a1c:	90c0008c 	andi	r3,r18,2
10001a20:	d8c02c15 	stw	r3,176(sp)
10001a24:	18000326 	beq	r3,zero,10001a34 <___svfprintf_internal_r+0x72c>
10001a28:	d8c02917 	ldw	r3,164(sp)
10001a2c:	18c00084 	addi	r3,r3,2
10001a30:	d8c02915 	stw	r3,164(sp)
10001a34:	90c0210c 	andi	r3,r18,132
10001a38:	d8c03015 	stw	r3,192(sp)
10001a3c:	1801c31e 	bne	r3,zero,1000214c <___svfprintf_internal_r+0xe44>
10001a40:	d9003117 	ldw	r4,196(sp)
10001a44:	d8c02917 	ldw	r3,164(sp)
10001a48:	20e9c83a 	sub	r20,r4,r3
10001a4c:	0501bf0e 	bge	zero,r20,1000214c <___svfprintf_internal_r+0xe44>
10001a50:	02400404 	movi	r9,16
10001a54:	d8c02017 	ldw	r3,128(sp)
10001a58:	d8801f17 	ldw	r2,124(sp)
10001a5c:	4d053d0e 	bge	r9,r20,10002f54 <___svfprintf_internal_r+0x1c4c>
10001a60:	01440074 	movhi	r5,4097
10001a64:	29505084 	addi	r5,r5,16706
10001a68:	dc403c15 	stw	r17,240(sp)
10001a6c:	d9403515 	stw	r5,212(sp)
10001a70:	a023883a 	mov	r17,r20
10001a74:	482d883a 	mov	r22,r9
10001a78:	9029883a 	mov	r20,r18
10001a7c:	070001c4 	movi	fp,7
10001a80:	8025883a 	mov	r18,r16
10001a84:	dc002d17 	ldw	r16,180(sp)
10001a88:	00000306 	br	10001a98 <___svfprintf_internal_r+0x790>
10001a8c:	8c7ffc04 	addi	r17,r17,-16
10001a90:	42000204 	addi	r8,r8,8
10001a94:	b440130e 	bge	r22,r17,10001ae4 <___svfprintf_internal_r+0x7dc>
10001a98:	01040074 	movhi	r4,4097
10001a9c:	18c00404 	addi	r3,r3,16
10001aa0:	10800044 	addi	r2,r2,1
10001aa4:	21105084 	addi	r4,r4,16706
10001aa8:	41000015 	stw	r4,0(r8)
10001aac:	45800115 	stw	r22,4(r8)
10001ab0:	d8c02015 	stw	r3,128(sp)
10001ab4:	d8801f15 	stw	r2,124(sp)
10001ab8:	e0bff40e 	bge	fp,r2,10001a8c <__alt_data_end+0xf8001a8c>
10001abc:	d9801e04 	addi	r6,sp,120
10001ac0:	800b883a 	mov	r5,r16
10001ac4:	9809883a 	mov	r4,r19
10001ac8:	000aca80 	call	1000aca8 <__ssprint_r>
10001acc:	103ef51e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10001ad0:	8c7ffc04 	addi	r17,r17,-16
10001ad4:	d8c02017 	ldw	r3,128(sp)
10001ad8:	d8801f17 	ldw	r2,124(sp)
10001adc:	da000404 	addi	r8,sp,16
10001ae0:	b47fed16 	blt	r22,r17,10001a98 <__alt_data_end+0xf8001a98>
10001ae4:	9021883a 	mov	r16,r18
10001ae8:	a025883a 	mov	r18,r20
10001aec:	8829883a 	mov	r20,r17
10001af0:	dc403c17 	ldw	r17,240(sp)
10001af4:	d9403517 	ldw	r5,212(sp)
10001af8:	a0c7883a 	add	r3,r20,r3
10001afc:	10800044 	addi	r2,r2,1
10001b00:	41400015 	stw	r5,0(r8)
10001b04:	45000115 	stw	r20,4(r8)
10001b08:	d8c02015 	stw	r3,128(sp)
10001b0c:	d8801f15 	stw	r2,124(sp)
10001b10:	010001c4 	movi	r4,7
10001b14:	2082c116 	blt	r4,r2,1000261c <___svfprintf_internal_r+0x1314>
10001b18:	df002787 	ldb	fp,158(sp)
10001b1c:	42000204 	addi	r8,r8,8
10001b20:	e0000c26 	beq	fp,zero,10001b54 <___svfprintf_internal_r+0x84c>
10001b24:	d8801f17 	ldw	r2,124(sp)
10001b28:	d9002784 	addi	r4,sp,158
10001b2c:	18c00044 	addi	r3,r3,1
10001b30:	10800044 	addi	r2,r2,1
10001b34:	41000015 	stw	r4,0(r8)
10001b38:	01000044 	movi	r4,1
10001b3c:	41000115 	stw	r4,4(r8)
10001b40:	d8c02015 	stw	r3,128(sp)
10001b44:	d8801f15 	stw	r2,124(sp)
10001b48:	010001c4 	movi	r4,7
10001b4c:	20825a16 	blt	r4,r2,100024b8 <___svfprintf_internal_r+0x11b0>
10001b50:	42000204 	addi	r8,r8,8
10001b54:	d8802c17 	ldw	r2,176(sp)
10001b58:	10000c26 	beq	r2,zero,10001b8c <___svfprintf_internal_r+0x884>
10001b5c:	d8801f17 	ldw	r2,124(sp)
10001b60:	d9002704 	addi	r4,sp,156
10001b64:	18c00084 	addi	r3,r3,2
10001b68:	10800044 	addi	r2,r2,1
10001b6c:	41000015 	stw	r4,0(r8)
10001b70:	01000084 	movi	r4,2
10001b74:	41000115 	stw	r4,4(r8)
10001b78:	d8c02015 	stw	r3,128(sp)
10001b7c:	d8801f15 	stw	r2,124(sp)
10001b80:	010001c4 	movi	r4,7
10001b84:	20825416 	blt	r4,r2,100024d8 <___svfprintf_internal_r+0x11d0>
10001b88:	42000204 	addi	r8,r8,8
10001b8c:	d9003017 	ldw	r4,192(sp)
10001b90:	00802004 	movi	r2,128
10001b94:	2081b926 	beq	r4,r2,1000227c <___svfprintf_internal_r+0xf74>
10001b98:	d9402a17 	ldw	r5,168(sp)
10001b9c:	d8802b17 	ldw	r2,172(sp)
10001ba0:	28adc83a 	sub	r22,r5,r2
10001ba4:	05802f0e 	bge	zero,r22,10001c64 <___svfprintf_internal_r+0x95c>
10001ba8:	07000404 	movi	fp,16
10001bac:	d8801f17 	ldw	r2,124(sp)
10001bb0:	e583e20e 	bge	fp,r22,10002b3c <___svfprintf_internal_r+0x1834>
10001bb4:	01440074 	movhi	r5,4097
10001bb8:	29504c84 	addi	r5,r5,16690
10001bbc:	dc402a15 	stw	r17,168(sp)
10001bc0:	d9402c15 	stw	r5,176(sp)
10001bc4:	b023883a 	mov	r17,r22
10001bc8:	050001c4 	movi	r20,7
10001bcc:	902d883a 	mov	r22,r18
10001bd0:	8025883a 	mov	r18,r16
10001bd4:	dc002d17 	ldw	r16,180(sp)
10001bd8:	00000306 	br	10001be8 <___svfprintf_internal_r+0x8e0>
10001bdc:	8c7ffc04 	addi	r17,r17,-16
10001be0:	42000204 	addi	r8,r8,8
10001be4:	e440110e 	bge	fp,r17,10001c2c <___svfprintf_internal_r+0x924>
10001be8:	18c00404 	addi	r3,r3,16
10001bec:	10800044 	addi	r2,r2,1
10001bf0:	45400015 	stw	r21,0(r8)
10001bf4:	47000115 	stw	fp,4(r8)
10001bf8:	d8c02015 	stw	r3,128(sp)
10001bfc:	d8801f15 	stw	r2,124(sp)
10001c00:	a0bff60e 	bge	r20,r2,10001bdc <__alt_data_end+0xf8001bdc>
10001c04:	d9801e04 	addi	r6,sp,120
10001c08:	800b883a 	mov	r5,r16
10001c0c:	9809883a 	mov	r4,r19
10001c10:	000aca80 	call	1000aca8 <__ssprint_r>
10001c14:	103ea31e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10001c18:	8c7ffc04 	addi	r17,r17,-16
10001c1c:	d8c02017 	ldw	r3,128(sp)
10001c20:	d8801f17 	ldw	r2,124(sp)
10001c24:	da000404 	addi	r8,sp,16
10001c28:	e47fef16 	blt	fp,r17,10001be8 <__alt_data_end+0xf8001be8>
10001c2c:	9021883a 	mov	r16,r18
10001c30:	b025883a 	mov	r18,r22
10001c34:	882d883a 	mov	r22,r17
10001c38:	dc402a17 	ldw	r17,168(sp)
10001c3c:	d9002c17 	ldw	r4,176(sp)
10001c40:	1d87883a 	add	r3,r3,r22
10001c44:	10800044 	addi	r2,r2,1
10001c48:	41000015 	stw	r4,0(r8)
10001c4c:	45800115 	stw	r22,4(r8)
10001c50:	d8c02015 	stw	r3,128(sp)
10001c54:	d8801f15 	stw	r2,124(sp)
10001c58:	010001c4 	movi	r4,7
10001c5c:	20820e16 	blt	r4,r2,10002498 <___svfprintf_internal_r+0x1190>
10001c60:	42000204 	addi	r8,r8,8
10001c64:	9080400c 	andi	r2,r18,256
10001c68:	10013a1e 	bne	r2,zero,10002154 <___svfprintf_internal_r+0xe4c>
10001c6c:	d9402b17 	ldw	r5,172(sp)
10001c70:	d8801f17 	ldw	r2,124(sp)
10001c74:	44000015 	stw	r16,0(r8)
10001c78:	1947883a 	add	r3,r3,r5
10001c7c:	10800044 	addi	r2,r2,1
10001c80:	41400115 	stw	r5,4(r8)
10001c84:	d8c02015 	stw	r3,128(sp)
10001c88:	d8801f15 	stw	r2,124(sp)
10001c8c:	010001c4 	movi	r4,7
10001c90:	2081f316 	blt	r4,r2,10002460 <___svfprintf_internal_r+0x1158>
10001c94:	42000204 	addi	r8,r8,8
10001c98:	9480010c 	andi	r18,r18,4
10001c9c:	90003226 	beq	r18,zero,10001d68 <___svfprintf_internal_r+0xa60>
10001ca0:	d9403117 	ldw	r5,196(sp)
10001ca4:	d8802917 	ldw	r2,164(sp)
10001ca8:	28a1c83a 	sub	r16,r5,r2
10001cac:	04002e0e 	bge	zero,r16,10001d68 <___svfprintf_internal_r+0xa60>
10001cb0:	04400404 	movi	r17,16
10001cb4:	d8801f17 	ldw	r2,124(sp)
10001cb8:	8c04db0e 	bge	r17,r16,10003028 <___svfprintf_internal_r+0x1d20>
10001cbc:	01440074 	movhi	r5,4097
10001cc0:	29505084 	addi	r5,r5,16706
10001cc4:	d9403515 	stw	r5,212(sp)
10001cc8:	048001c4 	movi	r18,7
10001ccc:	dd002d17 	ldw	r20,180(sp)
10001cd0:	00000306 	br	10001ce0 <___svfprintf_internal_r+0x9d8>
10001cd4:	843ffc04 	addi	r16,r16,-16
10001cd8:	42000204 	addi	r8,r8,8
10001cdc:	8c00130e 	bge	r17,r16,10001d2c <___svfprintf_internal_r+0xa24>
10001ce0:	01040074 	movhi	r4,4097
10001ce4:	18c00404 	addi	r3,r3,16
10001ce8:	10800044 	addi	r2,r2,1
10001cec:	21105084 	addi	r4,r4,16706
10001cf0:	41000015 	stw	r4,0(r8)
10001cf4:	44400115 	stw	r17,4(r8)
10001cf8:	d8c02015 	stw	r3,128(sp)
10001cfc:	d8801f15 	stw	r2,124(sp)
10001d00:	90bff40e 	bge	r18,r2,10001cd4 <__alt_data_end+0xf8001cd4>
10001d04:	d9801e04 	addi	r6,sp,120
10001d08:	a00b883a 	mov	r5,r20
10001d0c:	9809883a 	mov	r4,r19
10001d10:	000aca80 	call	1000aca8 <__ssprint_r>
10001d14:	103e631e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10001d18:	843ffc04 	addi	r16,r16,-16
10001d1c:	d8c02017 	ldw	r3,128(sp)
10001d20:	d8801f17 	ldw	r2,124(sp)
10001d24:	da000404 	addi	r8,sp,16
10001d28:	8c3fed16 	blt	r17,r16,10001ce0 <__alt_data_end+0xf8001ce0>
10001d2c:	d9403517 	ldw	r5,212(sp)
10001d30:	1c07883a 	add	r3,r3,r16
10001d34:	10800044 	addi	r2,r2,1
10001d38:	41400015 	stw	r5,0(r8)
10001d3c:	44000115 	stw	r16,4(r8)
10001d40:	d8c02015 	stw	r3,128(sp)
10001d44:	d8801f15 	stw	r2,124(sp)
10001d48:	010001c4 	movi	r4,7
10001d4c:	2080060e 	bge	r4,r2,10001d68 <___svfprintf_internal_r+0xa60>
10001d50:	d9402d17 	ldw	r5,180(sp)
10001d54:	d9801e04 	addi	r6,sp,120
10001d58:	9809883a 	mov	r4,r19
10001d5c:	000aca80 	call	1000aca8 <__ssprint_r>
10001d60:	103e501e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10001d64:	d8c02017 	ldw	r3,128(sp)
10001d68:	d8803117 	ldw	r2,196(sp)
10001d6c:	d9002917 	ldw	r4,164(sp)
10001d70:	1100010e 	bge	r2,r4,10001d78 <___svfprintf_internal_r+0xa70>
10001d74:	2005883a 	mov	r2,r4
10001d78:	d9402f17 	ldw	r5,188(sp)
10001d7c:	288b883a 	add	r5,r5,r2
10001d80:	d9402f15 	stw	r5,188(sp)
10001d84:	1801be1e 	bne	r3,zero,10002480 <___svfprintf_internal_r+0x1178>
10001d88:	b8800007 	ldb	r2,0(r23)
10001d8c:	d8001f15 	stw	zero,124(sp)
10001d90:	da000404 	addi	r8,sp,16
10001d94:	103d891e 	bne	r2,zero,100013bc <__alt_data_end+0xf80013bc>
10001d98:	b823883a 	mov	r17,r23
10001d9c:	003d9f06 	br	1000141c <__alt_data_end+0xf800141c>
10001da0:	8025883a 	mov	r18,r16
10001da4:	dc002903 	ldbu	r16,164(sp)
10001da8:	e011883a 	mov	r8,fp
10001dac:	84003fcc 	andi	r16,r16,255
10001db0:	8005e61e 	bne	r16,zero,1000354c <___svfprintf_internal_r+0x2244>
10001db4:	94800414 	ori	r18,r18,16
10001db8:	9080080c 	andi	r2,r18,32
10001dbc:	10022026 	beq	r2,zero,10002640 <___svfprintf_internal_r+0x1338>
10001dc0:	d9002e17 	ldw	r4,184(sp)
10001dc4:	d9402a17 	ldw	r5,168(sp)
10001dc8:	d8002785 	stb	zero,158(sp)
10001dcc:	20c00204 	addi	r3,r4,8
10001dd0:	25000017 	ldw	r20,0(r4)
10001dd4:	25800117 	ldw	r22,4(r4)
10001dd8:	2803ad16 	blt	r5,zero,10002c90 <___svfprintf_internal_r+0x1988>
10001ddc:	013fdfc4 	movi	r4,-129
10001de0:	a584b03a 	or	r2,r20,r22
10001de4:	d8c02e15 	stw	r3,184(sp)
10001de8:	9124703a 	and	r18,r18,r4
10001dec:	0039883a 	mov	fp,zero
10001df0:	103eb01e 	bne	r2,zero,100018b4 <__alt_data_end+0xf80018b4>
10001df4:	d8802a17 	ldw	r2,168(sp)
10001df8:	1002e71e 	bne	r2,zero,10002998 <___svfprintf_internal_r+0x1690>
10001dfc:	d8002a15 	stw	zero,168(sp)
10001e00:	d8002b15 	stw	zero,172(sp)
10001e04:	dc001e04 	addi	r16,sp,120
10001e08:	003ef706 	br	100019e8 <__alt_data_end+0xf80019e8>
10001e0c:	8025883a 	mov	r18,r16
10001e10:	dc002903 	ldbu	r16,164(sp)
10001e14:	e011883a 	mov	r8,fp
10001e18:	84003fcc 	andi	r16,r16,255
10001e1c:	8005c81e 	bne	r16,zero,10003540 <___svfprintf_internal_r+0x2238>
10001e20:	01040074 	movhi	r4,4097
10001e24:	21104004 	addi	r4,r4,16640
10001e28:	d9003a15 	stw	r4,232(sp)
10001e2c:	9080080c 	andi	r2,r18,32
10001e30:	10007226 	beq	r2,zero,10001ffc <___svfprintf_internal_r+0xcf4>
10001e34:	d9402e17 	ldw	r5,184(sp)
10001e38:	2d000017 	ldw	r20,0(r5)
10001e3c:	2d800117 	ldw	r22,4(r5)
10001e40:	29400204 	addi	r5,r5,8
10001e44:	d9402e15 	stw	r5,184(sp)
10001e48:	9080004c 	andi	r2,r18,1
10001e4c:	1001aa26 	beq	r2,zero,100024f8 <___svfprintf_internal_r+0x11f0>
10001e50:	a584b03a 	or	r2,r20,r22
10001e54:	10032526 	beq	r2,zero,10002aec <___svfprintf_internal_r+0x17e4>
10001e58:	d8c02a17 	ldw	r3,168(sp)
10001e5c:	00800c04 	movi	r2,48
10001e60:	d8802705 	stb	r2,156(sp)
10001e64:	dc402745 	stb	r17,157(sp)
10001e68:	d8002785 	stb	zero,158(sp)
10001e6c:	90800094 	ori	r2,r18,2
10001e70:	1804a316 	blt	r3,zero,10003100 <___svfprintf_internal_r+0x1df8>
10001e74:	00bfdfc4 	movi	r2,-129
10001e78:	90a4703a 	and	r18,r18,r2
10001e7c:	94800094 	ori	r18,r18,2
10001e80:	0039883a 	mov	fp,zero
10001e84:	d9003a17 	ldw	r4,232(sp)
10001e88:	dc001e04 	addi	r16,sp,120
10001e8c:	a08003cc 	andi	r2,r20,15
10001e90:	b006973a 	slli	r3,r22,28
10001e94:	2085883a 	add	r2,r4,r2
10001e98:	a028d13a 	srli	r20,r20,4
10001e9c:	10800003 	ldbu	r2,0(r2)
10001ea0:	b02cd13a 	srli	r22,r22,4
10001ea4:	843fffc4 	addi	r16,r16,-1
10001ea8:	1d28b03a 	or	r20,r3,r20
10001eac:	80800005 	stb	r2,0(r16)
10001eb0:	a584b03a 	or	r2,r20,r22
10001eb4:	103ff51e 	bne	r2,zero,10001e8c <__alt_data_end+0xf8001e8c>
10001eb8:	d8c02817 	ldw	r3,160(sp)
10001ebc:	1c07c83a 	sub	r3,r3,r16
10001ec0:	d8c02b15 	stw	r3,172(sp)
10001ec4:	003ec806 	br	100019e8 <__alt_data_end+0xf80019e8>
10001ec8:	d8c02e17 	ldw	r3,184(sp)
10001ecc:	d9002e17 	ldw	r4,184(sp)
10001ed0:	8025883a 	mov	r18,r16
10001ed4:	18800017 	ldw	r2,0(r3)
10001ed8:	21000104 	addi	r4,r4,4
10001edc:	00c00044 	movi	r3,1
10001ee0:	e011883a 	mov	r8,fp
10001ee4:	d8c02915 	stw	r3,164(sp)
10001ee8:	d8002785 	stb	zero,158(sp)
10001eec:	d8801405 	stb	r2,80(sp)
10001ef0:	d9002e15 	stw	r4,184(sp)
10001ef4:	d8c02b15 	stw	r3,172(sp)
10001ef8:	d8002a15 	stw	zero,168(sp)
10001efc:	d8003215 	stw	zero,200(sp)
10001f00:	dc001404 	addi	r16,sp,80
10001f04:	0039883a 	mov	fp,zero
10001f08:	003ec406 	br	10001a1c <__alt_data_end+0xf8001a1c>
10001f0c:	8025883a 	mov	r18,r16
10001f10:	dc002903 	ldbu	r16,164(sp)
10001f14:	e011883a 	mov	r8,fp
10001f18:	84003fcc 	andi	r16,r16,255
10001f1c:	803e8726 	beq	r16,zero,1000193c <__alt_data_end+0xf800193c>
10001f20:	d8c02b03 	ldbu	r3,172(sp)
10001f24:	d8c02785 	stb	r3,158(sp)
10001f28:	003e8406 	br	1000193c <__alt_data_end+0xf800193c>
10001f2c:	00c00044 	movi	r3,1
10001f30:	d8c02905 	stb	r3,164(sp)
10001f34:	00c00ac4 	movi	r3,43
10001f38:	d8c02b05 	stb	r3,172(sp)
10001f3c:	bc400007 	ldb	r17,0(r23)
10001f40:	003d4606 	br	1000145c <__alt_data_end+0xf800145c>
10001f44:	84000814 	ori	r16,r16,32
10001f48:	bc400007 	ldb	r17,0(r23)
10001f4c:	003d4306 	br	1000145c <__alt_data_end+0xf800145c>
10001f50:	d8802e17 	ldw	r2,184(sp)
10001f54:	8025883a 	mov	r18,r16
10001f58:	d8002785 	stb	zero,158(sp)
10001f5c:	14000017 	ldw	r16,0(r2)
10001f60:	e011883a 	mov	r8,fp
10001f64:	15000104 	addi	r20,r2,4
10001f68:	80042126 	beq	r16,zero,10002ff0 <___svfprintf_internal_r+0x1ce8>
10001f6c:	d8c02a17 	ldw	r3,168(sp)
10001f70:	1803ee16 	blt	r3,zero,10002f2c <___svfprintf_internal_r+0x1c24>
10001f74:	180d883a 	mov	r6,r3
10001f78:	000b883a 	mov	r5,zero
10001f7c:	8009883a 	mov	r4,r16
10001f80:	df003e15 	stw	fp,248(sp)
10001f84:	0008efc0 	call	10008efc <memchr>
10001f88:	da003e17 	ldw	r8,248(sp)
10001f8c:	10046a26 	beq	r2,zero,10003138 <___svfprintf_internal_r+0x1e30>
10001f90:	1405c83a 	sub	r2,r2,r16
10001f94:	d8802b15 	stw	r2,172(sp)
10001f98:	1003ea16 	blt	r2,zero,10002f44 <___svfprintf_internal_r+0x1c3c>
10001f9c:	df002783 	ldbu	fp,158(sp)
10001fa0:	d8802915 	stw	r2,164(sp)
10001fa4:	dd002e15 	stw	r20,184(sp)
10001fa8:	d8002a15 	stw	zero,168(sp)
10001fac:	d8003215 	stw	zero,200(sp)
10001fb0:	003e9306 	br	10001a00 <__alt_data_end+0xf8001a00>
10001fb4:	8025883a 	mov	r18,r16
10001fb8:	dc002903 	ldbu	r16,164(sp)
10001fbc:	e011883a 	mov	r8,fp
10001fc0:	84003fcc 	andi	r16,r16,255
10001fc4:	803f7c26 	beq	r16,zero,10001db8 <__alt_data_end+0xf8001db8>
10001fc8:	d8c02b03 	ldbu	r3,172(sp)
10001fcc:	d8c02785 	stb	r3,158(sp)
10001fd0:	003f7906 	br	10001db8 <__alt_data_end+0xf8001db8>
10001fd4:	8025883a 	mov	r18,r16
10001fd8:	dc002903 	ldbu	r16,164(sp)
10001fdc:	e011883a 	mov	r8,fp
10001fe0:	84003fcc 	andi	r16,r16,255
10001fe4:	8005741e 	bne	r16,zero,100035b8 <___svfprintf_internal_r+0x22b0>
10001fe8:	01040074 	movhi	r4,4097
10001fec:	21104504 	addi	r4,r4,16660
10001ff0:	d9003a15 	stw	r4,232(sp)
10001ff4:	9080080c 	andi	r2,r18,32
10001ff8:	103f8e1e 	bne	r2,zero,10001e34 <__alt_data_end+0xf8001e34>
10001ffc:	9080040c 	andi	r2,r18,16
10002000:	1002a726 	beq	r2,zero,10002aa0 <___svfprintf_internal_r+0x1798>
10002004:	d8802e17 	ldw	r2,184(sp)
10002008:	002d883a 	mov	r22,zero
1000200c:	15000017 	ldw	r20,0(r2)
10002010:	10800104 	addi	r2,r2,4
10002014:	d8802e15 	stw	r2,184(sp)
10002018:	003f8b06 	br	10001e48 <__alt_data_end+0xf8001e48>
1000201c:	84000054 	ori	r16,r16,1
10002020:	bc400007 	ldb	r17,0(r23)
10002024:	003d0d06 	br	1000145c <__alt_data_end+0xf800145c>
10002028:	d8802b07 	ldb	r2,172(sp)
1000202c:	1002a41e 	bne	r2,zero,10002ac0 <___svfprintf_internal_r+0x17b8>
10002030:	00c00044 	movi	r3,1
10002034:	d8c02905 	stb	r3,164(sp)
10002038:	00c00804 	movi	r3,32
1000203c:	d8c02b05 	stb	r3,172(sp)
10002040:	bc400007 	ldb	r17,0(r23)
10002044:	003d0506 	br	1000145c <__alt_data_end+0xf800145c>
10002048:	8025883a 	mov	r18,r16
1000204c:	dc002903 	ldbu	r16,164(sp)
10002050:	e011883a 	mov	r8,fp
10002054:	84003fcc 	andi	r16,r16,255
10002058:	803e0626 	beq	r16,zero,10001874 <__alt_data_end+0xf8001874>
1000205c:	d8c02b03 	ldbu	r3,172(sp)
10002060:	d8c02785 	stb	r3,158(sp)
10002064:	003e0306 	br	10001874 <__alt_data_end+0xf8001874>
10002068:	bc400007 	ldb	r17,0(r23)
1000206c:	00801b04 	movi	r2,108
10002070:	88830a26 	beq	r17,r2,10002c9c <___svfprintf_internal_r+0x1994>
10002074:	84000414 	ori	r16,r16,16
10002078:	003cf806 	br	1000145c <__alt_data_end+0xf800145c>
1000207c:	8025883a 	mov	r18,r16
10002080:	dc002903 	ldbu	r16,164(sp)
10002084:	e011883a 	mov	r8,fp
10002088:	84003fcc 	andi	r16,r16,255
1000208c:	8005471e 	bne	r16,zero,100035ac <___svfprintf_internal_r+0x22a4>
10002090:	9080080c 	andi	r2,r18,32
10002094:	10028c26 	beq	r2,zero,10002ac8 <___svfprintf_internal_r+0x17c0>
10002098:	d9002e17 	ldw	r4,184(sp)
1000209c:	d9402f17 	ldw	r5,188(sp)
100020a0:	20800017 	ldw	r2,0(r4)
100020a4:	2807d7fa 	srai	r3,r5,31
100020a8:	21000104 	addi	r4,r4,4
100020ac:	d9002e15 	stw	r4,184(sp)
100020b0:	11400015 	stw	r5,0(r2)
100020b4:	10c00115 	stw	r3,4(r2)
100020b8:	003cbe06 	br	100013b4 <__alt_data_end+0xf80013b4>
100020bc:	84001014 	ori	r16,r16,64
100020c0:	bc400007 	ldb	r17,0(r23)
100020c4:	003ce506 	br	1000145c <__alt_data_end+0xf800145c>
100020c8:	01040074 	movhi	r4,4097
100020cc:	21104504 	addi	r4,r4,16660
100020d0:	0039883a 	mov	fp,zero
100020d4:	d9003a15 	stw	r4,232(sp)
100020d8:	04401e04 	movi	r17,120
100020dc:	003f6906 	br	10001e84 <__alt_data_end+0xf8001e84>
100020e0:	8025883a 	mov	r18,r16
100020e4:	dc002903 	ldbu	r16,164(sp)
100020e8:	e011883a 	mov	r8,fp
100020ec:	84003fcc 	andi	r16,r16,255
100020f0:	8005261e 	bne	r16,zero,1000358c <___svfprintf_internal_r+0x2284>
100020f4:	883d6526 	beq	r17,zero,1000168c <__alt_data_end+0xf800168c>
100020f8:	00c00044 	movi	r3,1
100020fc:	d8c02915 	stw	r3,164(sp)
10002100:	dc401405 	stb	r17,80(sp)
10002104:	d8002785 	stb	zero,158(sp)
10002108:	003f7a06 	br	10001ef4 <__alt_data_end+0xf8001ef4>
1000210c:	01040074 	movhi	r4,4097
10002110:	21104504 	addi	r4,r4,16660
10002114:	d9003a15 	stw	r4,232(sp)
10002118:	d8c02e15 	stw	r3,184(sp)
1000211c:	1025883a 	mov	r18,r2
10002120:	04401e04 	movi	r17,120
10002124:	a584b03a 	or	r2,r20,r22
10002128:	1000fa1e 	bne	r2,zero,10002514 <___svfprintf_internal_r+0x120c>
1000212c:	0039883a 	mov	fp,zero
10002130:	00800084 	movi	r2,2
10002134:	10803fcc 	andi	r2,r2,255
10002138:	00c00044 	movi	r3,1
1000213c:	10c21626 	beq	r2,r3,10002998 <___svfprintf_internal_r+0x1690>
10002140:	00c00084 	movi	r3,2
10002144:	10fe0e1e 	bne	r2,r3,10001980 <__alt_data_end+0xf8001980>
10002148:	003d4606 	br	10001664 <__alt_data_end+0xf8001664>
1000214c:	d8c02017 	ldw	r3,128(sp)
10002150:	003e7306 	br	10001b20 <__alt_data_end+0xf8001b20>
10002154:	00801944 	movi	r2,101
10002158:	14407c0e 	bge	r2,r17,1000234c <___svfprintf_internal_r+0x1044>
1000215c:	d9003617 	ldw	r4,216(sp)
10002160:	d9403717 	ldw	r5,220(sp)
10002164:	000d883a 	mov	r6,zero
10002168:	000f883a 	mov	r7,zero
1000216c:	d8c03d15 	stw	r3,244(sp)
10002170:	da003e15 	stw	r8,248(sp)
10002174:	00101a40 	call	100101a4 <__eqdf2>
10002178:	d8c03d17 	ldw	r3,244(sp)
1000217c:	da003e17 	ldw	r8,248(sp)
10002180:	1000f51e 	bne	r2,zero,10002558 <___svfprintf_internal_r+0x1250>
10002184:	d8801f17 	ldw	r2,124(sp)
10002188:	01040074 	movhi	r4,4097
1000218c:	21104c04 	addi	r4,r4,16688
10002190:	18c00044 	addi	r3,r3,1
10002194:	10800044 	addi	r2,r2,1
10002198:	41000015 	stw	r4,0(r8)
1000219c:	01000044 	movi	r4,1
100021a0:	41000115 	stw	r4,4(r8)
100021a4:	d8c02015 	stw	r3,128(sp)
100021a8:	d8801f15 	stw	r2,124(sp)
100021ac:	010001c4 	movi	r4,7
100021b0:	20826616 	blt	r4,r2,10002b4c <___svfprintf_internal_r+0x1844>
100021b4:	42000204 	addi	r8,r8,8
100021b8:	d8802617 	ldw	r2,152(sp)
100021bc:	d9403317 	ldw	r5,204(sp)
100021c0:	11400216 	blt	r2,r5,100021cc <___svfprintf_internal_r+0xec4>
100021c4:	9080004c 	andi	r2,r18,1
100021c8:	103eb326 	beq	r2,zero,10001c98 <__alt_data_end+0xf8001c98>
100021cc:	d8803817 	ldw	r2,224(sp)
100021d0:	d9003417 	ldw	r4,208(sp)
100021d4:	d9403817 	ldw	r5,224(sp)
100021d8:	1887883a 	add	r3,r3,r2
100021dc:	d8801f17 	ldw	r2,124(sp)
100021e0:	41000015 	stw	r4,0(r8)
100021e4:	41400115 	stw	r5,4(r8)
100021e8:	10800044 	addi	r2,r2,1
100021ec:	d8c02015 	stw	r3,128(sp)
100021f0:	d8801f15 	stw	r2,124(sp)
100021f4:	010001c4 	movi	r4,7
100021f8:	2082af16 	blt	r4,r2,10002cb8 <___svfprintf_internal_r+0x19b0>
100021fc:	42000204 	addi	r8,r8,8
10002200:	d8803317 	ldw	r2,204(sp)
10002204:	143fffc4 	addi	r16,r2,-1
10002208:	043ea30e 	bge	zero,r16,10001c98 <__alt_data_end+0xf8001c98>
1000220c:	04400404 	movi	r17,16
10002210:	d8801f17 	ldw	r2,124(sp)
10002214:	8c00860e 	bge	r17,r16,10002430 <___svfprintf_internal_r+0x1128>
10002218:	01440074 	movhi	r5,4097
1000221c:	29504c84 	addi	r5,r5,16690
10002220:	d9402c15 	stw	r5,176(sp)
10002224:	058001c4 	movi	r22,7
10002228:	dd002d17 	ldw	r20,180(sp)
1000222c:	00000306 	br	1000223c <___svfprintf_internal_r+0xf34>
10002230:	42000204 	addi	r8,r8,8
10002234:	843ffc04 	addi	r16,r16,-16
10002238:	8c00800e 	bge	r17,r16,1000243c <___svfprintf_internal_r+0x1134>
1000223c:	18c00404 	addi	r3,r3,16
10002240:	10800044 	addi	r2,r2,1
10002244:	45400015 	stw	r21,0(r8)
10002248:	44400115 	stw	r17,4(r8)
1000224c:	d8c02015 	stw	r3,128(sp)
10002250:	d8801f15 	stw	r2,124(sp)
10002254:	b0bff60e 	bge	r22,r2,10002230 <__alt_data_end+0xf8002230>
10002258:	d9801e04 	addi	r6,sp,120
1000225c:	a00b883a 	mov	r5,r20
10002260:	9809883a 	mov	r4,r19
10002264:	000aca80 	call	1000aca8 <__ssprint_r>
10002268:	103d0e1e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
1000226c:	d8c02017 	ldw	r3,128(sp)
10002270:	d8801f17 	ldw	r2,124(sp)
10002274:	da000404 	addi	r8,sp,16
10002278:	003fee06 	br	10002234 <__alt_data_end+0xf8002234>
1000227c:	d9403117 	ldw	r5,196(sp)
10002280:	d8802917 	ldw	r2,164(sp)
10002284:	28adc83a 	sub	r22,r5,r2
10002288:	05be430e 	bge	zero,r22,10001b98 <__alt_data_end+0xf8001b98>
1000228c:	07000404 	movi	fp,16
10002290:	d8801f17 	ldw	r2,124(sp)
10002294:	e583a20e 	bge	fp,r22,10003120 <___svfprintf_internal_r+0x1e18>
10002298:	01440074 	movhi	r5,4097
1000229c:	29504c84 	addi	r5,r5,16690
100022a0:	dc403015 	stw	r17,192(sp)
100022a4:	d9402c15 	stw	r5,176(sp)
100022a8:	b023883a 	mov	r17,r22
100022ac:	050001c4 	movi	r20,7
100022b0:	902d883a 	mov	r22,r18
100022b4:	8025883a 	mov	r18,r16
100022b8:	dc002d17 	ldw	r16,180(sp)
100022bc:	00000306 	br	100022cc <___svfprintf_internal_r+0xfc4>
100022c0:	8c7ffc04 	addi	r17,r17,-16
100022c4:	42000204 	addi	r8,r8,8
100022c8:	e440110e 	bge	fp,r17,10002310 <___svfprintf_internal_r+0x1008>
100022cc:	18c00404 	addi	r3,r3,16
100022d0:	10800044 	addi	r2,r2,1
100022d4:	45400015 	stw	r21,0(r8)
100022d8:	47000115 	stw	fp,4(r8)
100022dc:	d8c02015 	stw	r3,128(sp)
100022e0:	d8801f15 	stw	r2,124(sp)
100022e4:	a0bff60e 	bge	r20,r2,100022c0 <__alt_data_end+0xf80022c0>
100022e8:	d9801e04 	addi	r6,sp,120
100022ec:	800b883a 	mov	r5,r16
100022f0:	9809883a 	mov	r4,r19
100022f4:	000aca80 	call	1000aca8 <__ssprint_r>
100022f8:	103cea1e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
100022fc:	8c7ffc04 	addi	r17,r17,-16
10002300:	d8c02017 	ldw	r3,128(sp)
10002304:	d8801f17 	ldw	r2,124(sp)
10002308:	da000404 	addi	r8,sp,16
1000230c:	e47fef16 	blt	fp,r17,100022cc <__alt_data_end+0xf80022cc>
10002310:	9021883a 	mov	r16,r18
10002314:	b025883a 	mov	r18,r22
10002318:	882d883a 	mov	r22,r17
1000231c:	dc403017 	ldw	r17,192(sp)
10002320:	d9002c17 	ldw	r4,176(sp)
10002324:	1d87883a 	add	r3,r3,r22
10002328:	10800044 	addi	r2,r2,1
1000232c:	41000015 	stw	r4,0(r8)
10002330:	45800115 	stw	r22,4(r8)
10002334:	d8c02015 	stw	r3,128(sp)
10002338:	d8801f15 	stw	r2,124(sp)
1000233c:	010001c4 	movi	r4,7
10002340:	20819a16 	blt	r4,r2,100029ac <___svfprintf_internal_r+0x16a4>
10002344:	42000204 	addi	r8,r8,8
10002348:	003e1306 	br	10001b98 <__alt_data_end+0xf8001b98>
1000234c:	d9403317 	ldw	r5,204(sp)
10002350:	00800044 	movi	r2,1
10002354:	18c00044 	addi	r3,r3,1
10002358:	1141710e 	bge	r2,r5,10002920 <___svfprintf_internal_r+0x1618>
1000235c:	dc401f17 	ldw	r17,124(sp)
10002360:	00800044 	movi	r2,1
10002364:	40800115 	stw	r2,4(r8)
10002368:	8c400044 	addi	r17,r17,1
1000236c:	44000015 	stw	r16,0(r8)
10002370:	d8c02015 	stw	r3,128(sp)
10002374:	dc401f15 	stw	r17,124(sp)
10002378:	008001c4 	movi	r2,7
1000237c:	14417416 	blt	r2,r17,10002950 <___svfprintf_internal_r+0x1648>
10002380:	42000204 	addi	r8,r8,8
10002384:	d8803817 	ldw	r2,224(sp)
10002388:	d9003417 	ldw	r4,208(sp)
1000238c:	8c400044 	addi	r17,r17,1
10002390:	10c7883a 	add	r3,r2,r3
10002394:	40800115 	stw	r2,4(r8)
10002398:	41000015 	stw	r4,0(r8)
1000239c:	d8c02015 	stw	r3,128(sp)
100023a0:	dc401f15 	stw	r17,124(sp)
100023a4:	008001c4 	movi	r2,7
100023a8:	14417216 	blt	r2,r17,10002974 <___svfprintf_internal_r+0x166c>
100023ac:	45800204 	addi	r22,r8,8
100023b0:	d9003617 	ldw	r4,216(sp)
100023b4:	d9403717 	ldw	r5,220(sp)
100023b8:	000d883a 	mov	r6,zero
100023bc:	000f883a 	mov	r7,zero
100023c0:	d8c03d15 	stw	r3,244(sp)
100023c4:	00101a40 	call	100101a4 <__eqdf2>
100023c8:	d8c03d17 	ldw	r3,244(sp)
100023cc:	1000b326 	beq	r2,zero,1000269c <___svfprintf_internal_r+0x1394>
100023d0:	d9403317 	ldw	r5,204(sp)
100023d4:	84000044 	addi	r16,r16,1
100023d8:	8c400044 	addi	r17,r17,1
100023dc:	28bfffc4 	addi	r2,r5,-1
100023e0:	1887883a 	add	r3,r3,r2
100023e4:	b0800115 	stw	r2,4(r22)
100023e8:	b4000015 	stw	r16,0(r22)
100023ec:	d8c02015 	stw	r3,128(sp)
100023f0:	dc401f15 	stw	r17,124(sp)
100023f4:	008001c4 	movi	r2,7
100023f8:	1440d216 	blt	r2,r17,10002744 <___svfprintf_internal_r+0x143c>
100023fc:	b5800204 	addi	r22,r22,8
10002400:	d9003b17 	ldw	r4,236(sp)
10002404:	df0022c4 	addi	fp,sp,139
10002408:	8c400044 	addi	r17,r17,1
1000240c:	20c7883a 	add	r3,r4,r3
10002410:	b7000015 	stw	fp,0(r22)
10002414:	b1000115 	stw	r4,4(r22)
10002418:	d8c02015 	stw	r3,128(sp)
1000241c:	dc401f15 	stw	r17,124(sp)
10002420:	008001c4 	movi	r2,7
10002424:	14400e16 	blt	r2,r17,10002460 <___svfprintf_internal_r+0x1158>
10002428:	b2000204 	addi	r8,r22,8
1000242c:	003e1a06 	br	10001c98 <__alt_data_end+0xf8001c98>
10002430:	01040074 	movhi	r4,4097
10002434:	21104c84 	addi	r4,r4,16690
10002438:	d9002c15 	stw	r4,176(sp)
1000243c:	d9002c17 	ldw	r4,176(sp)
10002440:	1c07883a 	add	r3,r3,r16
10002444:	44000115 	stw	r16,4(r8)
10002448:	41000015 	stw	r4,0(r8)
1000244c:	10800044 	addi	r2,r2,1
10002450:	d8c02015 	stw	r3,128(sp)
10002454:	d8801f15 	stw	r2,124(sp)
10002458:	010001c4 	movi	r4,7
1000245c:	20be0d0e 	bge	r4,r2,10001c94 <__alt_data_end+0xf8001c94>
10002460:	d9402d17 	ldw	r5,180(sp)
10002464:	d9801e04 	addi	r6,sp,120
10002468:	9809883a 	mov	r4,r19
1000246c:	000aca80 	call	1000aca8 <__ssprint_r>
10002470:	103c8c1e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002474:	d8c02017 	ldw	r3,128(sp)
10002478:	da000404 	addi	r8,sp,16
1000247c:	003e0606 	br	10001c98 <__alt_data_end+0xf8001c98>
10002480:	d9402d17 	ldw	r5,180(sp)
10002484:	d9801e04 	addi	r6,sp,120
10002488:	9809883a 	mov	r4,r19
1000248c:	000aca80 	call	1000aca8 <__ssprint_r>
10002490:	103e3d26 	beq	r2,zero,10001d88 <__alt_data_end+0xf8001d88>
10002494:	003c8306 	br	100016a4 <__alt_data_end+0xf80016a4>
10002498:	d9402d17 	ldw	r5,180(sp)
1000249c:	d9801e04 	addi	r6,sp,120
100024a0:	9809883a 	mov	r4,r19
100024a4:	000aca80 	call	1000aca8 <__ssprint_r>
100024a8:	103c7e1e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
100024ac:	d8c02017 	ldw	r3,128(sp)
100024b0:	da000404 	addi	r8,sp,16
100024b4:	003deb06 	br	10001c64 <__alt_data_end+0xf8001c64>
100024b8:	d9402d17 	ldw	r5,180(sp)
100024bc:	d9801e04 	addi	r6,sp,120
100024c0:	9809883a 	mov	r4,r19
100024c4:	000aca80 	call	1000aca8 <__ssprint_r>
100024c8:	103c761e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
100024cc:	d8c02017 	ldw	r3,128(sp)
100024d0:	da000404 	addi	r8,sp,16
100024d4:	003d9f06 	br	10001b54 <__alt_data_end+0xf8001b54>
100024d8:	d9402d17 	ldw	r5,180(sp)
100024dc:	d9801e04 	addi	r6,sp,120
100024e0:	9809883a 	mov	r4,r19
100024e4:	000aca80 	call	1000aca8 <__ssprint_r>
100024e8:	103c6e1e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
100024ec:	d8c02017 	ldw	r3,128(sp)
100024f0:	da000404 	addi	r8,sp,16
100024f4:	003da506 	br	10001b8c <__alt_data_end+0xf8001b8c>
100024f8:	d9402a17 	ldw	r5,168(sp)
100024fc:	d8002785 	stb	zero,158(sp)
10002500:	283f0816 	blt	r5,zero,10002124 <__alt_data_end+0xf8002124>
10002504:	00ffdfc4 	movi	r3,-129
10002508:	a584b03a 	or	r2,r20,r22
1000250c:	90e4703a 	and	r18,r18,r3
10002510:	103c5126 	beq	r2,zero,10001658 <__alt_data_end+0xf8001658>
10002514:	0039883a 	mov	fp,zero
10002518:	003e5a06 	br	10001e84 <__alt_data_end+0xf8001e84>
1000251c:	9080040c 	andi	r2,r18,16
10002520:	10013d26 	beq	r2,zero,10002a18 <___svfprintf_internal_r+0x1710>
10002524:	d8c02e17 	ldw	r3,184(sp)
10002528:	d9002a17 	ldw	r4,168(sp)
1000252c:	d8002785 	stb	zero,158(sp)
10002530:	18800104 	addi	r2,r3,4
10002534:	1d000017 	ldw	r20,0(r3)
10002538:	002d883a 	mov	r22,zero
1000253c:	20013f16 	blt	r4,zero,10002a3c <___svfprintf_internal_r+0x1734>
10002540:	00ffdfc4 	movi	r3,-129
10002544:	d8802e15 	stw	r2,184(sp)
10002548:	90e4703a 	and	r18,r18,r3
1000254c:	a03d0926 	beq	r20,zero,10001974 <__alt_data_end+0xf8001974>
10002550:	0039883a 	mov	fp,zero
10002554:	003d0c06 	br	10001988 <__alt_data_end+0xf8001988>
10002558:	dc402617 	ldw	r17,152(sp)
1000255c:	0441830e 	bge	zero,r17,10002b6c <___svfprintf_internal_r+0x1864>
10002560:	dc403217 	ldw	r17,200(sp)
10002564:	d8803317 	ldw	r2,204(sp)
10002568:	1440010e 	bge	r2,r17,10002570 <___svfprintf_internal_r+0x1268>
1000256c:	1023883a 	mov	r17,r2
10002570:	04400a0e 	bge	zero,r17,1000259c <___svfprintf_internal_r+0x1294>
10002574:	d8801f17 	ldw	r2,124(sp)
10002578:	1c47883a 	add	r3,r3,r17
1000257c:	44000015 	stw	r16,0(r8)
10002580:	10800044 	addi	r2,r2,1
10002584:	44400115 	stw	r17,4(r8)
10002588:	d8c02015 	stw	r3,128(sp)
1000258c:	d8801f15 	stw	r2,124(sp)
10002590:	010001c4 	movi	r4,7
10002594:	20827516 	blt	r4,r2,10002f6c <___svfprintf_internal_r+0x1c64>
10002598:	42000204 	addi	r8,r8,8
1000259c:	88027b16 	blt	r17,zero,10002f8c <___svfprintf_internal_r+0x1c84>
100025a0:	d9003217 	ldw	r4,200(sp)
100025a4:	2463c83a 	sub	r17,r4,r17
100025a8:	0440990e 	bge	zero,r17,10002810 <___svfprintf_internal_r+0x1508>
100025ac:	05800404 	movi	r22,16
100025b0:	d8801f17 	ldw	r2,124(sp)
100025b4:	b441530e 	bge	r22,r17,10002b04 <___svfprintf_internal_r+0x17fc>
100025b8:	01040074 	movhi	r4,4097
100025bc:	21104c84 	addi	r4,r4,16690
100025c0:	d9002c15 	stw	r4,176(sp)
100025c4:	070001c4 	movi	fp,7
100025c8:	dd002d17 	ldw	r20,180(sp)
100025cc:	00000306 	br	100025dc <___svfprintf_internal_r+0x12d4>
100025d0:	42000204 	addi	r8,r8,8
100025d4:	8c7ffc04 	addi	r17,r17,-16
100025d8:	b4414d0e 	bge	r22,r17,10002b10 <___svfprintf_internal_r+0x1808>
100025dc:	18c00404 	addi	r3,r3,16
100025e0:	10800044 	addi	r2,r2,1
100025e4:	45400015 	stw	r21,0(r8)
100025e8:	45800115 	stw	r22,4(r8)
100025ec:	d8c02015 	stw	r3,128(sp)
100025f0:	d8801f15 	stw	r2,124(sp)
100025f4:	e0bff60e 	bge	fp,r2,100025d0 <__alt_data_end+0xf80025d0>
100025f8:	d9801e04 	addi	r6,sp,120
100025fc:	a00b883a 	mov	r5,r20
10002600:	9809883a 	mov	r4,r19
10002604:	000aca80 	call	1000aca8 <__ssprint_r>
10002608:	103c261e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
1000260c:	d8c02017 	ldw	r3,128(sp)
10002610:	d8801f17 	ldw	r2,124(sp)
10002614:	da000404 	addi	r8,sp,16
10002618:	003fee06 	br	100025d4 <__alt_data_end+0xf80025d4>
1000261c:	d9402d17 	ldw	r5,180(sp)
10002620:	d9801e04 	addi	r6,sp,120
10002624:	9809883a 	mov	r4,r19
10002628:	000aca80 	call	1000aca8 <__ssprint_r>
1000262c:	103c1d1e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002630:	d8c02017 	ldw	r3,128(sp)
10002634:	df002787 	ldb	fp,158(sp)
10002638:	da000404 	addi	r8,sp,16
1000263c:	003d3806 	br	10001b20 <__alt_data_end+0xf8001b20>
10002640:	9080040c 	andi	r2,r18,16
10002644:	10005c26 	beq	r2,zero,100027b8 <___svfprintf_internal_r+0x14b0>
10002648:	d8c02e17 	ldw	r3,184(sp)
1000264c:	d9002a17 	ldw	r4,168(sp)
10002650:	d8002785 	stb	zero,158(sp)
10002654:	18800104 	addi	r2,r3,4
10002658:	1d000017 	ldw	r20,0(r3)
1000265c:	002d883a 	mov	r22,zero
10002660:	20005e16 	blt	r4,zero,100027dc <___svfprintf_internal_r+0x14d4>
10002664:	00ffdfc4 	movi	r3,-129
10002668:	d8802e15 	stw	r2,184(sp)
1000266c:	90e4703a 	and	r18,r18,r3
10002670:	0039883a 	mov	fp,zero
10002674:	a03ddf26 	beq	r20,zero,10001df4 <__alt_data_end+0xf8001df4>
10002678:	00800244 	movi	r2,9
1000267c:	153c8e36 	bltu	r2,r20,100018b8 <__alt_data_end+0xf80018b8>
10002680:	a5000c04 	addi	r20,r20,48
10002684:	dc001dc4 	addi	r16,sp,119
10002688:	dd001dc5 	stb	r20,119(sp)
1000268c:	d8c02817 	ldw	r3,160(sp)
10002690:	1c07c83a 	sub	r3,r3,r16
10002694:	d8c02b15 	stw	r3,172(sp)
10002698:	003cd306 	br	100019e8 <__alt_data_end+0xf80019e8>
1000269c:	d8803317 	ldw	r2,204(sp)
100026a0:	143fffc4 	addi	r16,r2,-1
100026a4:	043f560e 	bge	zero,r16,10002400 <__alt_data_end+0xf8002400>
100026a8:	07000404 	movi	fp,16
100026ac:	e403530e 	bge	fp,r16,100033fc <___svfprintf_internal_r+0x20f4>
100026b0:	01440074 	movhi	r5,4097
100026b4:	29504c84 	addi	r5,r5,16690
100026b8:	d9402c15 	stw	r5,176(sp)
100026bc:	01c001c4 	movi	r7,7
100026c0:	dd002d17 	ldw	r20,180(sp)
100026c4:	00000306 	br	100026d4 <___svfprintf_internal_r+0x13cc>
100026c8:	843ffc04 	addi	r16,r16,-16
100026cc:	b5800204 	addi	r22,r22,8
100026d0:	e400130e 	bge	fp,r16,10002720 <___svfprintf_internal_r+0x1418>
100026d4:	18c00404 	addi	r3,r3,16
100026d8:	8c400044 	addi	r17,r17,1
100026dc:	b5400015 	stw	r21,0(r22)
100026e0:	b7000115 	stw	fp,4(r22)
100026e4:	d8c02015 	stw	r3,128(sp)
100026e8:	dc401f15 	stw	r17,124(sp)
100026ec:	3c7ff60e 	bge	r7,r17,100026c8 <__alt_data_end+0xf80026c8>
100026f0:	d9801e04 	addi	r6,sp,120
100026f4:	a00b883a 	mov	r5,r20
100026f8:	9809883a 	mov	r4,r19
100026fc:	d9c03d15 	stw	r7,244(sp)
10002700:	000aca80 	call	1000aca8 <__ssprint_r>
10002704:	d9c03d17 	ldw	r7,244(sp)
10002708:	103be61e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
1000270c:	843ffc04 	addi	r16,r16,-16
10002710:	d8c02017 	ldw	r3,128(sp)
10002714:	dc401f17 	ldw	r17,124(sp)
10002718:	dd800404 	addi	r22,sp,16
1000271c:	e43fed16 	blt	fp,r16,100026d4 <__alt_data_end+0xf80026d4>
10002720:	d8802c17 	ldw	r2,176(sp)
10002724:	1c07883a 	add	r3,r3,r16
10002728:	8c400044 	addi	r17,r17,1
1000272c:	b0800015 	stw	r2,0(r22)
10002730:	b4000115 	stw	r16,4(r22)
10002734:	d8c02015 	stw	r3,128(sp)
10002738:	dc401f15 	stw	r17,124(sp)
1000273c:	008001c4 	movi	r2,7
10002740:	147f2e0e 	bge	r2,r17,100023fc <__alt_data_end+0xf80023fc>
10002744:	d9402d17 	ldw	r5,180(sp)
10002748:	d9801e04 	addi	r6,sp,120
1000274c:	9809883a 	mov	r4,r19
10002750:	000aca80 	call	1000aca8 <__ssprint_r>
10002754:	103bd31e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002758:	d8c02017 	ldw	r3,128(sp)
1000275c:	dc401f17 	ldw	r17,124(sp)
10002760:	dd800404 	addi	r22,sp,16
10002764:	003f2606 	br	10002400 <__alt_data_end+0xf8002400>
10002768:	9080040c 	andi	r2,r18,16
1000276c:	1000c326 	beq	r2,zero,10002a7c <___svfprintf_internal_r+0x1774>
10002770:	d9402e17 	ldw	r5,184(sp)
10002774:	2d000017 	ldw	r20,0(r5)
10002778:	29400104 	addi	r5,r5,4
1000277c:	d9402e15 	stw	r5,184(sp)
10002780:	a02dd7fa 	srai	r22,r20,31
10002784:	b005883a 	mov	r2,r22
10002788:	103c430e 	bge	r2,zero,10001898 <__alt_data_end+0xf8001898>
1000278c:	d9402a17 	ldw	r5,168(sp)
10002790:	0529c83a 	sub	r20,zero,r20
10002794:	07000b44 	movi	fp,45
10002798:	a004c03a 	cmpne	r2,r20,zero
1000279c:	05adc83a 	sub	r22,zero,r22
100027a0:	df002785 	stb	fp,158(sp)
100027a4:	b0adc83a 	sub	r22,r22,r2
100027a8:	28022e16 	blt	r5,zero,10003064 <___svfprintf_internal_r+0x1d5c>
100027ac:	00bfdfc4 	movi	r2,-129
100027b0:	90a4703a 	and	r18,r18,r2
100027b4:	003c3f06 	br	100018b4 <__alt_data_end+0xf80018b4>
100027b8:	9080100c 	andi	r2,r18,64
100027bc:	d8002785 	stb	zero,158(sp)
100027c0:	10012526 	beq	r2,zero,10002c58 <___svfprintf_internal_r+0x1950>
100027c4:	d9402e17 	ldw	r5,184(sp)
100027c8:	d8c02a17 	ldw	r3,168(sp)
100027cc:	002d883a 	mov	r22,zero
100027d0:	28800104 	addi	r2,r5,4
100027d4:	2d00000b 	ldhu	r20,0(r5)
100027d8:	183fa20e 	bge	r3,zero,10002664 <__alt_data_end+0xf8002664>
100027dc:	d8802e15 	stw	r2,184(sp)
100027e0:	0039883a 	mov	fp,zero
100027e4:	a584b03a 	or	r2,r20,r22
100027e8:	103c321e 	bne	r2,zero,100018b4 <__alt_data_end+0xf80018b4>
100027ec:	00800044 	movi	r2,1
100027f0:	003e5006 	br	10002134 <__alt_data_end+0xf8002134>
100027f4:	d9402d17 	ldw	r5,180(sp)
100027f8:	d9801e04 	addi	r6,sp,120
100027fc:	9809883a 	mov	r4,r19
10002800:	000aca80 	call	1000aca8 <__ssprint_r>
10002804:	103ba71e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002808:	d8c02017 	ldw	r3,128(sp)
1000280c:	da000404 	addi	r8,sp,16
10002810:	d9003217 	ldw	r4,200(sp)
10002814:	d8802617 	ldw	r2,152(sp)
10002818:	d9403317 	ldw	r5,204(sp)
1000281c:	8123883a 	add	r17,r16,r4
10002820:	11400216 	blt	r2,r5,1000282c <___svfprintf_internal_r+0x1524>
10002824:	9100004c 	andi	r4,r18,1
10002828:	20000d26 	beq	r4,zero,10002860 <___svfprintf_internal_r+0x1558>
1000282c:	d9003817 	ldw	r4,224(sp)
10002830:	d9403417 	ldw	r5,208(sp)
10002834:	1907883a 	add	r3,r3,r4
10002838:	d9001f17 	ldw	r4,124(sp)
1000283c:	41400015 	stw	r5,0(r8)
10002840:	d9403817 	ldw	r5,224(sp)
10002844:	21000044 	addi	r4,r4,1
10002848:	d8c02015 	stw	r3,128(sp)
1000284c:	41400115 	stw	r5,4(r8)
10002850:	d9001f15 	stw	r4,124(sp)
10002854:	014001c4 	movi	r5,7
10002858:	2901dc16 	blt	r5,r4,10002fcc <___svfprintf_internal_r+0x1cc4>
1000285c:	42000204 	addi	r8,r8,8
10002860:	d9003317 	ldw	r4,204(sp)
10002864:	8121883a 	add	r16,r16,r4
10002868:	2085c83a 	sub	r2,r4,r2
1000286c:	8461c83a 	sub	r16,r16,r17
10002870:	1400010e 	bge	r2,r16,10002878 <___svfprintf_internal_r+0x1570>
10002874:	1021883a 	mov	r16,r2
10002878:	04000a0e 	bge	zero,r16,100028a4 <___svfprintf_internal_r+0x159c>
1000287c:	d9001f17 	ldw	r4,124(sp)
10002880:	1c07883a 	add	r3,r3,r16
10002884:	44400015 	stw	r17,0(r8)
10002888:	21000044 	addi	r4,r4,1
1000288c:	44000115 	stw	r16,4(r8)
10002890:	d8c02015 	stw	r3,128(sp)
10002894:	d9001f15 	stw	r4,124(sp)
10002898:	014001c4 	movi	r5,7
1000289c:	2901e616 	blt	r5,r4,10003038 <___svfprintf_internal_r+0x1d30>
100028a0:	42000204 	addi	r8,r8,8
100028a4:	8001f616 	blt	r16,zero,10003080 <___svfprintf_internal_r+0x1d78>
100028a8:	1421c83a 	sub	r16,r2,r16
100028ac:	043cfa0e 	bge	zero,r16,10001c98 <__alt_data_end+0xf8001c98>
100028b0:	04400404 	movi	r17,16
100028b4:	d8801f17 	ldw	r2,124(sp)
100028b8:	8c3edd0e 	bge	r17,r16,10002430 <__alt_data_end+0xf8002430>
100028bc:	01440074 	movhi	r5,4097
100028c0:	29504c84 	addi	r5,r5,16690
100028c4:	d9402c15 	stw	r5,176(sp)
100028c8:	058001c4 	movi	r22,7
100028cc:	dd002d17 	ldw	r20,180(sp)
100028d0:	00000306 	br	100028e0 <___svfprintf_internal_r+0x15d8>
100028d4:	42000204 	addi	r8,r8,8
100028d8:	843ffc04 	addi	r16,r16,-16
100028dc:	8c3ed70e 	bge	r17,r16,1000243c <__alt_data_end+0xf800243c>
100028e0:	18c00404 	addi	r3,r3,16
100028e4:	10800044 	addi	r2,r2,1
100028e8:	45400015 	stw	r21,0(r8)
100028ec:	44400115 	stw	r17,4(r8)
100028f0:	d8c02015 	stw	r3,128(sp)
100028f4:	d8801f15 	stw	r2,124(sp)
100028f8:	b0bff60e 	bge	r22,r2,100028d4 <__alt_data_end+0xf80028d4>
100028fc:	d9801e04 	addi	r6,sp,120
10002900:	a00b883a 	mov	r5,r20
10002904:	9809883a 	mov	r4,r19
10002908:	000aca80 	call	1000aca8 <__ssprint_r>
1000290c:	103b651e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002910:	d8c02017 	ldw	r3,128(sp)
10002914:	d8801f17 	ldw	r2,124(sp)
10002918:	da000404 	addi	r8,sp,16
1000291c:	003fee06 	br	100028d8 <__alt_data_end+0xf80028d8>
10002920:	9088703a 	and	r4,r18,r2
10002924:	203e8d1e 	bne	r4,zero,1000235c <__alt_data_end+0xf800235c>
10002928:	dc401f17 	ldw	r17,124(sp)
1000292c:	40800115 	stw	r2,4(r8)
10002930:	44000015 	stw	r16,0(r8)
10002934:	8c400044 	addi	r17,r17,1
10002938:	d8c02015 	stw	r3,128(sp)
1000293c:	dc401f15 	stw	r17,124(sp)
10002940:	008001c4 	movi	r2,7
10002944:	147f7f16 	blt	r2,r17,10002744 <__alt_data_end+0xf8002744>
10002948:	45800204 	addi	r22,r8,8
1000294c:	003eac06 	br	10002400 <__alt_data_end+0xf8002400>
10002950:	d9402d17 	ldw	r5,180(sp)
10002954:	d9801e04 	addi	r6,sp,120
10002958:	9809883a 	mov	r4,r19
1000295c:	000aca80 	call	1000aca8 <__ssprint_r>
10002960:	103b501e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002964:	d8c02017 	ldw	r3,128(sp)
10002968:	dc401f17 	ldw	r17,124(sp)
1000296c:	da000404 	addi	r8,sp,16
10002970:	003e8406 	br	10002384 <__alt_data_end+0xf8002384>
10002974:	d9402d17 	ldw	r5,180(sp)
10002978:	d9801e04 	addi	r6,sp,120
1000297c:	9809883a 	mov	r4,r19
10002980:	000aca80 	call	1000aca8 <__ssprint_r>
10002984:	103b471e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002988:	d8c02017 	ldw	r3,128(sp)
1000298c:	dc401f17 	ldw	r17,124(sp)
10002990:	dd800404 	addi	r22,sp,16
10002994:	003e8606 	br	100023b0 <__alt_data_end+0xf80023b0>
10002998:	0029883a 	mov	r20,zero
1000299c:	a5000c04 	addi	r20,r20,48
100029a0:	dc001dc4 	addi	r16,sp,119
100029a4:	dd001dc5 	stb	r20,119(sp)
100029a8:	003f3806 	br	1000268c <__alt_data_end+0xf800268c>
100029ac:	d9402d17 	ldw	r5,180(sp)
100029b0:	d9801e04 	addi	r6,sp,120
100029b4:	9809883a 	mov	r4,r19
100029b8:	000aca80 	call	1000aca8 <__ssprint_r>
100029bc:	103b391e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
100029c0:	d8c02017 	ldw	r3,128(sp)
100029c4:	da000404 	addi	r8,sp,16
100029c8:	003c7306 	br	10001b98 <__alt_data_end+0xf8001b98>
100029cc:	d9003617 	ldw	r4,216(sp)
100029d0:	d9403717 	ldw	r5,220(sp)
100029d4:	da003e15 	stw	r8,248(sp)
100029d8:	000a9c80 	call	1000a9c8 <__fpclassifyd>
100029dc:	da003e17 	ldw	r8,248(sp)
100029e0:	1000bd1e 	bne	r2,zero,10002cd8 <___svfprintf_internal_r+0x19d0>
100029e4:	008011c4 	movi	r2,71
100029e8:	14411e0e 	bge	r2,r17,10002e64 <___svfprintf_internal_r+0x1b5c>
100029ec:	04040074 	movhi	r16,4097
100029f0:	84103f04 	addi	r16,r16,16636
100029f4:	00c000c4 	movi	r3,3
100029f8:	00bfdfc4 	movi	r2,-129
100029fc:	d8c02915 	stw	r3,164(sp)
10002a00:	90a4703a 	and	r18,r18,r2
10002a04:	df002783 	ldbu	fp,158(sp)
10002a08:	d8c02b15 	stw	r3,172(sp)
10002a0c:	d8002a15 	stw	zero,168(sp)
10002a10:	d8003215 	stw	zero,200(sp)
10002a14:	003bfa06 	br	10001a00 <__alt_data_end+0xf8001a00>
10002a18:	9080100c 	andi	r2,r18,64
10002a1c:	d8002785 	stb	zero,158(sp)
10002a20:	10009426 	beq	r2,zero,10002c74 <___svfprintf_internal_r+0x196c>
10002a24:	d9402e17 	ldw	r5,184(sp)
10002a28:	d8c02a17 	ldw	r3,168(sp)
10002a2c:	002d883a 	mov	r22,zero
10002a30:	28800104 	addi	r2,r5,4
10002a34:	2d00000b 	ldhu	r20,0(r5)
10002a38:	183ec10e 	bge	r3,zero,10002540 <__alt_data_end+0xf8002540>
10002a3c:	a586b03a 	or	r3,r20,r22
10002a40:	d8802e15 	stw	r2,184(sp)
10002a44:	183ec21e 	bne	r3,zero,10002550 <__alt_data_end+0xf8002550>
10002a48:	0039883a 	mov	fp,zero
10002a4c:	0005883a 	mov	r2,zero
10002a50:	003db806 	br	10002134 <__alt_data_end+0xf8002134>
10002a54:	d8c02e17 	ldw	r3,184(sp)
10002a58:	d9002e17 	ldw	r4,184(sp)
10002a5c:	d9402e17 	ldw	r5,184(sp)
10002a60:	18c00017 	ldw	r3,0(r3)
10002a64:	21000117 	ldw	r4,4(r4)
10002a68:	29400204 	addi	r5,r5,8
10002a6c:	d8c03615 	stw	r3,216(sp)
10002a70:	d9003715 	stw	r4,220(sp)
10002a74:	d9402e15 	stw	r5,184(sp)
10002a78:	003b5a06 	br	100017e4 <__alt_data_end+0xf80017e4>
10002a7c:	9080100c 	andi	r2,r18,64
10002a80:	10010726 	beq	r2,zero,10002ea0 <___svfprintf_internal_r+0x1b98>
10002a84:	d8802e17 	ldw	r2,184(sp)
10002a88:	1500000f 	ldh	r20,0(r2)
10002a8c:	10800104 	addi	r2,r2,4
10002a90:	d8802e15 	stw	r2,184(sp)
10002a94:	a02dd7fa 	srai	r22,r20,31
10002a98:	b005883a 	mov	r2,r22
10002a9c:	003b7d06 	br	10001894 <__alt_data_end+0xf8001894>
10002aa0:	9080100c 	andi	r2,r18,64
10002aa4:	10010526 	beq	r2,zero,10002ebc <___svfprintf_internal_r+0x1bb4>
10002aa8:	d8c02e17 	ldw	r3,184(sp)
10002aac:	002d883a 	mov	r22,zero
10002ab0:	1d00000b 	ldhu	r20,0(r3)
10002ab4:	18c00104 	addi	r3,r3,4
10002ab8:	d8c02e15 	stw	r3,184(sp)
10002abc:	003ce206 	br	10001e48 <__alt_data_end+0xf8001e48>
10002ac0:	bc400007 	ldb	r17,0(r23)
10002ac4:	003a6506 	br	1000145c <__alt_data_end+0xf800145c>
10002ac8:	9080040c 	andi	r2,r18,16
10002acc:	10010126 	beq	r2,zero,10002ed4 <___svfprintf_internal_r+0x1bcc>
10002ad0:	d8c02e17 	ldw	r3,184(sp)
10002ad4:	d9002f17 	ldw	r4,188(sp)
10002ad8:	18800017 	ldw	r2,0(r3)
10002adc:	18c00104 	addi	r3,r3,4
10002ae0:	d8c02e15 	stw	r3,184(sp)
10002ae4:	11000015 	stw	r4,0(r2)
10002ae8:	003a3206 	br	100013b4 <__alt_data_end+0xf80013b4>
10002aec:	d9002a17 	ldw	r4,168(sp)
10002af0:	d8002785 	stb	zero,158(sp)
10002af4:	203d8d16 	blt	r4,zero,1000212c <__alt_data_end+0xf800212c>
10002af8:	00bfdfc4 	movi	r2,-129
10002afc:	90a4703a 	and	r18,r18,r2
10002b00:	003ad506 	br	10001658 <__alt_data_end+0xf8001658>
10002b04:	01440074 	movhi	r5,4097
10002b08:	29504c84 	addi	r5,r5,16690
10002b0c:	d9402c15 	stw	r5,176(sp)
10002b10:	d9402c17 	ldw	r5,176(sp)
10002b14:	1c47883a 	add	r3,r3,r17
10002b18:	10800044 	addi	r2,r2,1
10002b1c:	41400015 	stw	r5,0(r8)
10002b20:	44400115 	stw	r17,4(r8)
10002b24:	d8c02015 	stw	r3,128(sp)
10002b28:	d8801f15 	stw	r2,124(sp)
10002b2c:	010001c4 	movi	r4,7
10002b30:	20bf3016 	blt	r4,r2,100027f4 <__alt_data_end+0xf80027f4>
10002b34:	42000204 	addi	r8,r8,8
10002b38:	003f3506 	br	10002810 <__alt_data_end+0xf8002810>
10002b3c:	01040074 	movhi	r4,4097
10002b40:	21104c84 	addi	r4,r4,16690
10002b44:	d9002c15 	stw	r4,176(sp)
10002b48:	003c3c06 	br	10001c3c <__alt_data_end+0xf8001c3c>
10002b4c:	d9402d17 	ldw	r5,180(sp)
10002b50:	d9801e04 	addi	r6,sp,120
10002b54:	9809883a 	mov	r4,r19
10002b58:	000aca80 	call	1000aca8 <__ssprint_r>
10002b5c:	103ad11e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002b60:	d8c02017 	ldw	r3,128(sp)
10002b64:	da000404 	addi	r8,sp,16
10002b68:	003d9306 	br	100021b8 <__alt_data_end+0xf80021b8>
10002b6c:	d8801f17 	ldw	r2,124(sp)
10002b70:	01440074 	movhi	r5,4097
10002b74:	01000044 	movi	r4,1
10002b78:	18c00044 	addi	r3,r3,1
10002b7c:	10800044 	addi	r2,r2,1
10002b80:	29504c04 	addi	r5,r5,16688
10002b84:	41000115 	stw	r4,4(r8)
10002b88:	41400015 	stw	r5,0(r8)
10002b8c:	d8c02015 	stw	r3,128(sp)
10002b90:	d8801f15 	stw	r2,124(sp)
10002b94:	010001c4 	movi	r4,7
10002b98:	2080b516 	blt	r4,r2,10002e70 <___svfprintf_internal_r+0x1b68>
10002b9c:	42000204 	addi	r8,r8,8
10002ba0:	8800041e 	bne	r17,zero,10002bb4 <___svfprintf_internal_r+0x18ac>
10002ba4:	d8803317 	ldw	r2,204(sp)
10002ba8:	1000021e 	bne	r2,zero,10002bb4 <___svfprintf_internal_r+0x18ac>
10002bac:	9080004c 	andi	r2,r18,1
10002bb0:	103c3926 	beq	r2,zero,10001c98 <__alt_data_end+0xf8001c98>
10002bb4:	d9003817 	ldw	r4,224(sp)
10002bb8:	d8801f17 	ldw	r2,124(sp)
10002bbc:	d9403417 	ldw	r5,208(sp)
10002bc0:	20c7883a 	add	r3,r4,r3
10002bc4:	10800044 	addi	r2,r2,1
10002bc8:	41000115 	stw	r4,4(r8)
10002bcc:	41400015 	stw	r5,0(r8)
10002bd0:	d8c02015 	stw	r3,128(sp)
10002bd4:	d8801f15 	stw	r2,124(sp)
10002bd8:	010001c4 	movi	r4,7
10002bdc:	20818016 	blt	r4,r2,100031e0 <___svfprintf_internal_r+0x1ed8>
10002be0:	42000204 	addi	r8,r8,8
10002be4:	0463c83a 	sub	r17,zero,r17
10002be8:	0440cb0e 	bge	zero,r17,10002f18 <___svfprintf_internal_r+0x1c10>
10002bec:	05800404 	movi	r22,16
10002bf0:	b440e80e 	bge	r22,r17,10002f94 <___svfprintf_internal_r+0x1c8c>
10002bf4:	01440074 	movhi	r5,4097
10002bf8:	29504c84 	addi	r5,r5,16690
10002bfc:	d9402c15 	stw	r5,176(sp)
10002c00:	070001c4 	movi	fp,7
10002c04:	dd002d17 	ldw	r20,180(sp)
10002c08:	00000306 	br	10002c18 <___svfprintf_internal_r+0x1910>
10002c0c:	42000204 	addi	r8,r8,8
10002c10:	8c7ffc04 	addi	r17,r17,-16
10002c14:	b440e20e 	bge	r22,r17,10002fa0 <___svfprintf_internal_r+0x1c98>
10002c18:	18c00404 	addi	r3,r3,16
10002c1c:	10800044 	addi	r2,r2,1
10002c20:	45400015 	stw	r21,0(r8)
10002c24:	45800115 	stw	r22,4(r8)
10002c28:	d8c02015 	stw	r3,128(sp)
10002c2c:	d8801f15 	stw	r2,124(sp)
10002c30:	e0bff60e 	bge	fp,r2,10002c0c <__alt_data_end+0xf8002c0c>
10002c34:	d9801e04 	addi	r6,sp,120
10002c38:	a00b883a 	mov	r5,r20
10002c3c:	9809883a 	mov	r4,r19
10002c40:	000aca80 	call	1000aca8 <__ssprint_r>
10002c44:	103a971e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002c48:	d8c02017 	ldw	r3,128(sp)
10002c4c:	d8801f17 	ldw	r2,124(sp)
10002c50:	da000404 	addi	r8,sp,16
10002c54:	003fee06 	br	10002c10 <__alt_data_end+0xf8002c10>
10002c58:	d9002e17 	ldw	r4,184(sp)
10002c5c:	d9402a17 	ldw	r5,168(sp)
10002c60:	002d883a 	mov	r22,zero
10002c64:	20800104 	addi	r2,r4,4
10002c68:	25000017 	ldw	r20,0(r4)
10002c6c:	283e7d0e 	bge	r5,zero,10002664 <__alt_data_end+0xf8002664>
10002c70:	003eda06 	br	100027dc <__alt_data_end+0xf80027dc>
10002c74:	d9002e17 	ldw	r4,184(sp)
10002c78:	d9402a17 	ldw	r5,168(sp)
10002c7c:	002d883a 	mov	r22,zero
10002c80:	20800104 	addi	r2,r4,4
10002c84:	25000017 	ldw	r20,0(r4)
10002c88:	283e2d0e 	bge	r5,zero,10002540 <__alt_data_end+0xf8002540>
10002c8c:	003f6b06 	br	10002a3c <__alt_data_end+0xf8002a3c>
10002c90:	d8c02e15 	stw	r3,184(sp)
10002c94:	0039883a 	mov	fp,zero
10002c98:	003ed206 	br	100027e4 <__alt_data_end+0xf80027e4>
10002c9c:	bc400043 	ldbu	r17,1(r23)
10002ca0:	84000814 	ori	r16,r16,32
10002ca4:	bdc00044 	addi	r23,r23,1
10002ca8:	8c403fcc 	andi	r17,r17,255
10002cac:	8c40201c 	xori	r17,r17,128
10002cb0:	8c7fe004 	addi	r17,r17,-128
10002cb4:	0039e906 	br	1000145c <__alt_data_end+0xf800145c>
10002cb8:	d9402d17 	ldw	r5,180(sp)
10002cbc:	d9801e04 	addi	r6,sp,120
10002cc0:	9809883a 	mov	r4,r19
10002cc4:	000aca80 	call	1000aca8 <__ssprint_r>
10002cc8:	103a761e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002ccc:	d8c02017 	ldw	r3,128(sp)
10002cd0:	da000404 	addi	r8,sp,16
10002cd4:	003d4a06 	br	10002200 <__alt_data_end+0xf8002200>
10002cd8:	d9002a17 	ldw	r4,168(sp)
10002cdc:	05bff7c4 	movi	r22,-33
10002ce0:	00bfffc4 	movi	r2,-1
10002ce4:	8dac703a 	and	r22,r17,r22
10002ce8:	20806a26 	beq	r4,r2,10002e94 <___svfprintf_internal_r+0x1b8c>
10002cec:	008011c4 	movi	r2,71
10002cf0:	b0813726 	beq	r22,r2,100031d0 <___svfprintf_internal_r+0x1ec8>
10002cf4:	d9003717 	ldw	r4,220(sp)
10002cf8:	90c04014 	ori	r3,r18,256
10002cfc:	d8c02c15 	stw	r3,176(sp)
10002d00:	20015d16 	blt	r4,zero,10003278 <___svfprintf_internal_r+0x1f70>
10002d04:	dd003717 	ldw	r20,220(sp)
10002d08:	d8002905 	stb	zero,164(sp)
10002d0c:	00801984 	movi	r2,102
10002d10:	88814026 	beq	r17,r2,10003214 <___svfprintf_internal_r+0x1f0c>
10002d14:	00801184 	movi	r2,70
10002d18:	88817126 	beq	r17,r2,100032e0 <___svfprintf_internal_r+0x1fd8>
10002d1c:	00801144 	movi	r2,69
10002d20:	b0816226 	beq	r22,r2,100032ac <___svfprintf_internal_r+0x1fa4>
10002d24:	d8c02a17 	ldw	r3,168(sp)
10002d28:	d8802104 	addi	r2,sp,132
10002d2c:	d8800315 	stw	r2,12(sp)
10002d30:	d9403617 	ldw	r5,216(sp)
10002d34:	d8802504 	addi	r2,sp,148
10002d38:	d8800215 	stw	r2,8(sp)
10002d3c:	d8802604 	addi	r2,sp,152
10002d40:	d8c00015 	stw	r3,0(sp)
10002d44:	d8800115 	stw	r2,4(sp)
10002d48:	01c00084 	movi	r7,2
10002d4c:	a00d883a 	mov	r6,r20
10002d50:	9809883a 	mov	r4,r19
10002d54:	d8c03d15 	stw	r3,244(sp)
10002d58:	da003e15 	stw	r8,248(sp)
10002d5c:	0005cf40 	call	10005cf4 <_dtoa_r>
10002d60:	1021883a 	mov	r16,r2
10002d64:	008019c4 	movi	r2,103
10002d68:	d8c03d17 	ldw	r3,244(sp)
10002d6c:	da003e17 	ldw	r8,248(sp)
10002d70:	8880e726 	beq	r17,r2,10003110 <___svfprintf_internal_r+0x1e08>
10002d74:	008011c4 	movi	r2,71
10002d78:	8880d426 	beq	r17,r2,100030cc <___svfprintf_internal_r+0x1dc4>
10002d7c:	80f9883a 	add	fp,r16,r3
10002d80:	d9003617 	ldw	r4,216(sp)
10002d84:	000d883a 	mov	r6,zero
10002d88:	000f883a 	mov	r7,zero
10002d8c:	a00b883a 	mov	r5,r20
10002d90:	da003e15 	stw	r8,248(sp)
10002d94:	00101a40 	call	100101a4 <__eqdf2>
10002d98:	da003e17 	ldw	r8,248(sp)
10002d9c:	1000e426 	beq	r2,zero,10003130 <___svfprintf_internal_r+0x1e28>
10002da0:	d8802117 	ldw	r2,132(sp)
10002da4:	1700062e 	bgeu	r2,fp,10002dc0 <___svfprintf_internal_r+0x1ab8>
10002da8:	01000c04 	movi	r4,48
10002dac:	10c00044 	addi	r3,r2,1
10002db0:	d8c02115 	stw	r3,132(sp)
10002db4:	11000005 	stb	r4,0(r2)
10002db8:	d8802117 	ldw	r2,132(sp)
10002dbc:	173ffb36 	bltu	r2,fp,10002dac <__alt_data_end+0xf8002dac>
10002dc0:	1405c83a 	sub	r2,r2,r16
10002dc4:	d8803315 	stw	r2,204(sp)
10002dc8:	008011c4 	movi	r2,71
10002dcc:	b080c526 	beq	r22,r2,100030e4 <___svfprintf_internal_r+0x1ddc>
10002dd0:	00801944 	movi	r2,101
10002dd4:	1441d80e 	bge	r2,r17,10003538 <___svfprintf_internal_r+0x2230>
10002dd8:	d8c02617 	ldw	r3,152(sp)
10002ddc:	00801984 	movi	r2,102
10002de0:	d8c03215 	stw	r3,200(sp)
10002de4:	88813426 	beq	r17,r2,100032b8 <___svfprintf_internal_r+0x1fb0>
10002de8:	d8c03217 	ldw	r3,200(sp)
10002dec:	d9003317 	ldw	r4,204(sp)
10002df0:	19012516 	blt	r3,r4,10003288 <___svfprintf_internal_r+0x1f80>
10002df4:	9480004c 	andi	r18,r18,1
10002df8:	9001841e 	bne	r18,zero,1000340c <___svfprintf_internal_r+0x2104>
10002dfc:	1805883a 	mov	r2,r3
10002e00:	1801cb16 	blt	r3,zero,10003530 <___svfprintf_internal_r+0x2228>
10002e04:	d8c03217 	ldw	r3,200(sp)
10002e08:	044019c4 	movi	r17,103
10002e0c:	d8c02b15 	stw	r3,172(sp)
10002e10:	df002907 	ldb	fp,164(sp)
10002e14:	e000a61e 	bne	fp,zero,100030b0 <___svfprintf_internal_r+0x1da8>
10002e18:	df002783 	ldbu	fp,158(sp)
10002e1c:	d8802915 	stw	r2,164(sp)
10002e20:	dc802c17 	ldw	r18,176(sp)
10002e24:	d8002a15 	stw	zero,168(sp)
10002e28:	003af506 	br	10001a00 <__alt_data_end+0xf8001a00>
10002e2c:	04040074 	movhi	r16,4097
10002e30:	84103c04 	addi	r16,r16,16624
10002e34:	003a7e06 	br	10001830 <__alt_data_end+0xf8001830>
10002e38:	d9003917 	ldw	r4,228(sp)
10002e3c:	04001004 	movi	r16,64
10002e40:	800b883a 	mov	r5,r16
10002e44:	00086f00 	call	100086f0 <_malloc_r>
10002e48:	d9002d17 	ldw	r4,180(sp)
10002e4c:	20800015 	stw	r2,0(r4)
10002e50:	20800415 	stw	r2,16(r4)
10002e54:	1001d026 	beq	r2,zero,10003598 <___svfprintf_internal_r+0x2290>
10002e58:	d8802d17 	ldw	r2,180(sp)
10002e5c:	14000515 	stw	r16,20(r2)
10002e60:	00394406 	br	10001374 <__alt_data_end+0xf8001374>
10002e64:	04040074 	movhi	r16,4097
10002e68:	84103e04 	addi	r16,r16,16632
10002e6c:	003ee106 	br	100029f4 <__alt_data_end+0xf80029f4>
10002e70:	d9402d17 	ldw	r5,180(sp)
10002e74:	d9801e04 	addi	r6,sp,120
10002e78:	9809883a 	mov	r4,r19
10002e7c:	000aca80 	call	1000aca8 <__ssprint_r>
10002e80:	103a081e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002e84:	dc402617 	ldw	r17,152(sp)
10002e88:	d8c02017 	ldw	r3,128(sp)
10002e8c:	da000404 	addi	r8,sp,16
10002e90:	003f4306 	br	10002ba0 <__alt_data_end+0xf8002ba0>
10002e94:	01400184 	movi	r5,6
10002e98:	d9402a15 	stw	r5,168(sp)
10002e9c:	003f9506 	br	10002cf4 <__alt_data_end+0xf8002cf4>
10002ea0:	d8c02e17 	ldw	r3,184(sp)
10002ea4:	1d000017 	ldw	r20,0(r3)
10002ea8:	18c00104 	addi	r3,r3,4
10002eac:	d8c02e15 	stw	r3,184(sp)
10002eb0:	a02dd7fa 	srai	r22,r20,31
10002eb4:	b005883a 	mov	r2,r22
10002eb8:	003a7606 	br	10001894 <__alt_data_end+0xf8001894>
10002ebc:	d9002e17 	ldw	r4,184(sp)
10002ec0:	002d883a 	mov	r22,zero
10002ec4:	25000017 	ldw	r20,0(r4)
10002ec8:	21000104 	addi	r4,r4,4
10002ecc:	d9002e15 	stw	r4,184(sp)
10002ed0:	003bdd06 	br	10001e48 <__alt_data_end+0xf8001e48>
10002ed4:	9480100c 	andi	r18,r18,64
10002ed8:	90006e26 	beq	r18,zero,10003094 <___svfprintf_internal_r+0x1d8c>
10002edc:	d9402e17 	ldw	r5,184(sp)
10002ee0:	d8c02f17 	ldw	r3,188(sp)
10002ee4:	28800017 	ldw	r2,0(r5)
10002ee8:	29400104 	addi	r5,r5,4
10002eec:	d9402e15 	stw	r5,184(sp)
10002ef0:	10c0000d 	sth	r3,0(r2)
10002ef4:	00392f06 	br	100013b4 <__alt_data_end+0xf80013b4>
10002ef8:	d9402d17 	ldw	r5,180(sp)
10002efc:	d9801e04 	addi	r6,sp,120
10002f00:	9809883a 	mov	r4,r19
10002f04:	000aca80 	call	1000aca8 <__ssprint_r>
10002f08:	1039e61e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002f0c:	d8c02017 	ldw	r3,128(sp)
10002f10:	d8801f17 	ldw	r2,124(sp)
10002f14:	da000404 	addi	r8,sp,16
10002f18:	d9403317 	ldw	r5,204(sp)
10002f1c:	10800044 	addi	r2,r2,1
10002f20:	44000015 	stw	r16,0(r8)
10002f24:	28c7883a 	add	r3,r5,r3
10002f28:	003b5506 	br	10001c80 <__alt_data_end+0xf8001c80>
10002f2c:	8009883a 	mov	r4,r16
10002f30:	df003e15 	stw	fp,248(sp)
10002f34:	00012700 	call	10001270 <strlen>
10002f38:	d8802b15 	stw	r2,172(sp)
10002f3c:	da003e17 	ldw	r8,248(sp)
10002f40:	103c160e 	bge	r2,zero,10001f9c <__alt_data_end+0xf8001f9c>
10002f44:	0005883a 	mov	r2,zero
10002f48:	003c1406 	br	10001f9c <__alt_data_end+0xf8001f9c>
10002f4c:	00bfffc4 	movi	r2,-1
10002f50:	0039d906 	br	100016b8 <__alt_data_end+0xf80016b8>
10002f54:	01040074 	movhi	r4,4097
10002f58:	21105084 	addi	r4,r4,16706
10002f5c:	d9003515 	stw	r4,212(sp)
10002f60:	003ae406 	br	10001af4 <__alt_data_end+0xf8001af4>
10002f64:	013fffc4 	movi	r4,-1
10002f68:	0039fa06 	br	10001754 <__alt_data_end+0xf8001754>
10002f6c:	d9402d17 	ldw	r5,180(sp)
10002f70:	d9801e04 	addi	r6,sp,120
10002f74:	9809883a 	mov	r4,r19
10002f78:	000aca80 	call	1000aca8 <__ssprint_r>
10002f7c:	1039c91e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002f80:	d8c02017 	ldw	r3,128(sp)
10002f84:	da000404 	addi	r8,sp,16
10002f88:	003d8406 	br	1000259c <__alt_data_end+0xf800259c>
10002f8c:	0023883a 	mov	r17,zero
10002f90:	003d8306 	br	100025a0 <__alt_data_end+0xf80025a0>
10002f94:	01040074 	movhi	r4,4097
10002f98:	21104c84 	addi	r4,r4,16690
10002f9c:	d9002c15 	stw	r4,176(sp)
10002fa0:	d9002c17 	ldw	r4,176(sp)
10002fa4:	1c47883a 	add	r3,r3,r17
10002fa8:	10800044 	addi	r2,r2,1
10002fac:	41000015 	stw	r4,0(r8)
10002fb0:	44400115 	stw	r17,4(r8)
10002fb4:	d8c02015 	stw	r3,128(sp)
10002fb8:	d8801f15 	stw	r2,124(sp)
10002fbc:	010001c4 	movi	r4,7
10002fc0:	20bfcd16 	blt	r4,r2,10002ef8 <__alt_data_end+0xf8002ef8>
10002fc4:	42000204 	addi	r8,r8,8
10002fc8:	003fd306 	br	10002f18 <__alt_data_end+0xf8002f18>
10002fcc:	d9402d17 	ldw	r5,180(sp)
10002fd0:	d9801e04 	addi	r6,sp,120
10002fd4:	9809883a 	mov	r4,r19
10002fd8:	000aca80 	call	1000aca8 <__ssprint_r>
10002fdc:	1039b11e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
10002fe0:	d8802617 	ldw	r2,152(sp)
10002fe4:	d8c02017 	ldw	r3,128(sp)
10002fe8:	da000404 	addi	r8,sp,16
10002fec:	003e1c06 	br	10002860 <__alt_data_end+0xf8002860>
10002ff0:	d8802a17 	ldw	r2,168(sp)
10002ff4:	00c00184 	movi	r3,6
10002ff8:	1880012e 	bgeu	r3,r2,10003000 <___svfprintf_internal_r+0x1cf8>
10002ffc:	1805883a 	mov	r2,r3
10003000:	d8802b15 	stw	r2,172(sp)
10003004:	1000f316 	blt	r2,zero,100033d4 <___svfprintf_internal_r+0x20cc>
10003008:	04040074 	movhi	r16,4097
1000300c:	d8802915 	stw	r2,164(sp)
10003010:	dd002e15 	stw	r20,184(sp)
10003014:	d8002a15 	stw	zero,168(sp)
10003018:	d8003215 	stw	zero,200(sp)
1000301c:	84104a04 	addi	r16,r16,16680
10003020:	0039883a 	mov	fp,zero
10003024:	003a7d06 	br	10001a1c <__alt_data_end+0xf8001a1c>
10003028:	01040074 	movhi	r4,4097
1000302c:	21105084 	addi	r4,r4,16706
10003030:	d9003515 	stw	r4,212(sp)
10003034:	003b3d06 	br	10001d2c <__alt_data_end+0xf8001d2c>
10003038:	d9402d17 	ldw	r5,180(sp)
1000303c:	d9801e04 	addi	r6,sp,120
10003040:	9809883a 	mov	r4,r19
10003044:	000aca80 	call	1000aca8 <__ssprint_r>
10003048:	1039961e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
1000304c:	d8802617 	ldw	r2,152(sp)
10003050:	d9403317 	ldw	r5,204(sp)
10003054:	d8c02017 	ldw	r3,128(sp)
10003058:	da000404 	addi	r8,sp,16
1000305c:	2885c83a 	sub	r2,r5,r2
10003060:	003e1006 	br	100028a4 <__alt_data_end+0xf80028a4>
10003064:	00800044 	movi	r2,1
10003068:	10803fcc 	andi	r2,r2,255
1000306c:	00c00044 	movi	r3,1
10003070:	10fa1026 	beq	r2,r3,100018b4 <__alt_data_end+0xf80018b4>
10003074:	00c00084 	movi	r3,2
10003078:	10fb8226 	beq	r2,r3,10001e84 <__alt_data_end+0xf8001e84>
1000307c:	003a4206 	br	10001988 <__alt_data_end+0xf8001988>
10003080:	0021883a 	mov	r16,zero
10003084:	003e0806 	br	100028a8 <__alt_data_end+0xf80028a8>
10003088:	07000b44 	movi	fp,45
1000308c:	df002785 	stb	fp,158(sp)
10003090:	0039e306 	br	10001820 <__alt_data_end+0xf8001820>
10003094:	d9002e17 	ldw	r4,184(sp)
10003098:	d9402f17 	ldw	r5,188(sp)
1000309c:	20800017 	ldw	r2,0(r4)
100030a0:	21000104 	addi	r4,r4,4
100030a4:	d9002e15 	stw	r4,184(sp)
100030a8:	11400015 	stw	r5,0(r2)
100030ac:	0038c106 	br	100013b4 <__alt_data_end+0xf80013b4>
100030b0:	00c00b44 	movi	r3,45
100030b4:	d8c02785 	stb	r3,158(sp)
100030b8:	d8802915 	stw	r2,164(sp)
100030bc:	dc802c17 	ldw	r18,176(sp)
100030c0:	d8002a15 	stw	zero,168(sp)
100030c4:	07000b44 	movi	fp,45
100030c8:	003a5106 	br	10001a10 <__alt_data_end+0xf8001a10>
100030cc:	9080004c 	andi	r2,r18,1
100030d0:	1000941e 	bne	r2,zero,10003324 <___svfprintf_internal_r+0x201c>
100030d4:	d8802117 	ldw	r2,132(sp)
100030d8:	1405c83a 	sub	r2,r2,r16
100030dc:	d8803315 	stw	r2,204(sp)
100030e0:	b441151e 	bne	r22,r17,10003538 <___svfprintf_internal_r+0x2230>
100030e4:	dd802617 	ldw	r22,152(sp)
100030e8:	00bfff44 	movi	r2,-3
100030ec:	b0801a16 	blt	r22,r2,10003158 <___svfprintf_internal_r+0x1e50>
100030f0:	d9402a17 	ldw	r5,168(sp)
100030f4:	2d801816 	blt	r5,r22,10003158 <___svfprintf_internal_r+0x1e50>
100030f8:	dd803215 	stw	r22,200(sp)
100030fc:	003f3a06 	br	10002de8 <__alt_data_end+0xf8002de8>
10003100:	1025883a 	mov	r18,r2
10003104:	0039883a 	mov	fp,zero
10003108:	00800084 	movi	r2,2
1000310c:	003fd606 	br	10003068 <__alt_data_end+0xf8003068>
10003110:	9080004c 	andi	r2,r18,1
10003114:	103f191e 	bne	r2,zero,10002d7c <__alt_data_end+0xf8002d7c>
10003118:	d8802117 	ldw	r2,132(sp)
1000311c:	003f2806 	br	10002dc0 <__alt_data_end+0xf8002dc0>
10003120:	01040074 	movhi	r4,4097
10003124:	21104c84 	addi	r4,r4,16690
10003128:	d9002c15 	stw	r4,176(sp)
1000312c:	003c7c06 	br	10002320 <__alt_data_end+0xf8002320>
10003130:	e005883a 	mov	r2,fp
10003134:	003f2206 	br	10002dc0 <__alt_data_end+0xf8002dc0>
10003138:	d9002a17 	ldw	r4,168(sp)
1000313c:	df002783 	ldbu	fp,158(sp)
10003140:	dd002e15 	stw	r20,184(sp)
10003144:	d9002915 	stw	r4,164(sp)
10003148:	d9002b15 	stw	r4,172(sp)
1000314c:	d8002a15 	stw	zero,168(sp)
10003150:	d8003215 	stw	zero,200(sp)
10003154:	003a2a06 	br	10001a00 <__alt_data_end+0xf8001a00>
10003158:	8c7fff84 	addi	r17,r17,-2
1000315c:	b5bfffc4 	addi	r22,r22,-1
10003160:	dd802615 	stw	r22,152(sp)
10003164:	dc4022c5 	stb	r17,139(sp)
10003168:	b000c316 	blt	r22,zero,10003478 <___svfprintf_internal_r+0x2170>
1000316c:	00800ac4 	movi	r2,43
10003170:	d8802305 	stb	r2,140(sp)
10003174:	00800244 	movi	r2,9
10003178:	15806e16 	blt	r2,r22,10003334 <___svfprintf_internal_r+0x202c>
1000317c:	00800c04 	movi	r2,48
10003180:	b5800c04 	addi	r22,r22,48
10003184:	d8802345 	stb	r2,141(sp)
10003188:	dd802385 	stb	r22,142(sp)
1000318c:	d88023c4 	addi	r2,sp,143
10003190:	df0022c4 	addi	fp,sp,139
10003194:	d8c03317 	ldw	r3,204(sp)
10003198:	1739c83a 	sub	fp,r2,fp
1000319c:	d9003317 	ldw	r4,204(sp)
100031a0:	e0c7883a 	add	r3,fp,r3
100031a4:	df003b15 	stw	fp,236(sp)
100031a8:	d8c02b15 	stw	r3,172(sp)
100031ac:	00800044 	movi	r2,1
100031b0:	1100b70e 	bge	r2,r4,10003490 <___svfprintf_internal_r+0x2188>
100031b4:	d8c02b17 	ldw	r3,172(sp)
100031b8:	18c00044 	addi	r3,r3,1
100031bc:	d8c02b15 	stw	r3,172(sp)
100031c0:	1805883a 	mov	r2,r3
100031c4:	1800b016 	blt	r3,zero,10003488 <___svfprintf_internal_r+0x2180>
100031c8:	d8003215 	stw	zero,200(sp)
100031cc:	003f1006 	br	10002e10 <__alt_data_end+0xf8002e10>
100031d0:	d8802a17 	ldw	r2,168(sp)
100031d4:	103ec71e 	bne	r2,zero,10002cf4 <__alt_data_end+0xf8002cf4>
100031d8:	dc002a15 	stw	r16,168(sp)
100031dc:	003ec506 	br	10002cf4 <__alt_data_end+0xf8002cf4>
100031e0:	d9402d17 	ldw	r5,180(sp)
100031e4:	d9801e04 	addi	r6,sp,120
100031e8:	9809883a 	mov	r4,r19
100031ec:	000aca80 	call	1000aca8 <__ssprint_r>
100031f0:	10392c1e 	bne	r2,zero,100016a4 <__alt_data_end+0xf80016a4>
100031f4:	dc402617 	ldw	r17,152(sp)
100031f8:	d8c02017 	ldw	r3,128(sp)
100031fc:	d8801f17 	ldw	r2,124(sp)
10003200:	da000404 	addi	r8,sp,16
10003204:	003e7706 	br	10002be4 <__alt_data_end+0xf8002be4>
10003208:	182f883a 	mov	r23,r3
1000320c:	d8002a15 	stw	zero,168(sp)
10003210:	00389306 	br	10001460 <__alt_data_end+0xf8001460>
10003214:	d8c02a17 	ldw	r3,168(sp)
10003218:	d8802104 	addi	r2,sp,132
1000321c:	d8800315 	stw	r2,12(sp)
10003220:	d9403617 	ldw	r5,216(sp)
10003224:	d8802504 	addi	r2,sp,148
10003228:	d8800215 	stw	r2,8(sp)
1000322c:	d8802604 	addi	r2,sp,152
10003230:	d8c00015 	stw	r3,0(sp)
10003234:	9809883a 	mov	r4,r19
10003238:	d8800115 	stw	r2,4(sp)
1000323c:	01c000c4 	movi	r7,3
10003240:	a00d883a 	mov	r6,r20
10003244:	da003e15 	stw	r8,248(sp)
10003248:	0005cf40 	call	10005cf4 <_dtoa_r>
1000324c:	d9002a17 	ldw	r4,168(sp)
10003250:	da003e17 	ldw	r8,248(sp)
10003254:	1021883a 	mov	r16,r2
10003258:	1139883a 	add	fp,r2,r4
1000325c:	2007883a 	mov	r3,r4
10003260:	81000007 	ldb	r4,0(r16)
10003264:	00800c04 	movi	r2,48
10003268:	20806f26 	beq	r4,r2,10003428 <___svfprintf_internal_r+0x2120>
1000326c:	d8c02617 	ldw	r3,152(sp)
10003270:	e0f9883a 	add	fp,fp,r3
10003274:	003ec206 	br	10002d80 <__alt_data_end+0xf8002d80>
10003278:	00c00b44 	movi	r3,45
1000327c:	2520003c 	xorhi	r20,r4,32768
10003280:	d8c02905 	stb	r3,164(sp)
10003284:	003ea106 	br	10002d0c <__alt_data_end+0xf8002d0c>
10003288:	d8c03217 	ldw	r3,200(sp)
1000328c:	00c0890e 	bge	zero,r3,100034b4 <___svfprintf_internal_r+0x21ac>
10003290:	00800044 	movi	r2,1
10003294:	d9003317 	ldw	r4,204(sp)
10003298:	1105883a 	add	r2,r2,r4
1000329c:	d8802b15 	stw	r2,172(sp)
100032a0:	10005f16 	blt	r2,zero,10003420 <___svfprintf_internal_r+0x2118>
100032a4:	044019c4 	movi	r17,103
100032a8:	003ed906 	br	10002e10 <__alt_data_end+0xf8002e10>
100032ac:	d9002a17 	ldw	r4,168(sp)
100032b0:	20c00044 	addi	r3,r4,1
100032b4:	003e9c06 	br	10002d28 <__alt_data_end+0xf8002d28>
100032b8:	d9002a17 	ldw	r4,168(sp)
100032bc:	00c0680e 	bge	zero,r3,10003460 <___svfprintf_internal_r+0x2158>
100032c0:	2000461e 	bne	r4,zero,100033dc <___svfprintf_internal_r+0x20d4>
100032c4:	9480004c 	andi	r18,r18,1
100032c8:	9000441e 	bne	r18,zero,100033dc <___svfprintf_internal_r+0x20d4>
100032cc:	1805883a 	mov	r2,r3
100032d0:	1800a116 	blt	r3,zero,10003558 <___svfprintf_internal_r+0x2250>
100032d4:	d8c03217 	ldw	r3,200(sp)
100032d8:	d8c02b15 	stw	r3,172(sp)
100032dc:	003ecc06 	br	10002e10 <__alt_data_end+0xf8002e10>
100032e0:	d9402a17 	ldw	r5,168(sp)
100032e4:	d8802104 	addi	r2,sp,132
100032e8:	d8800315 	stw	r2,12(sp)
100032ec:	d9400015 	stw	r5,0(sp)
100032f0:	d8802504 	addi	r2,sp,148
100032f4:	d9403617 	ldw	r5,216(sp)
100032f8:	d8800215 	stw	r2,8(sp)
100032fc:	d8802604 	addi	r2,sp,152
10003300:	d8800115 	stw	r2,4(sp)
10003304:	01c000c4 	movi	r7,3
10003308:	a00d883a 	mov	r6,r20
1000330c:	9809883a 	mov	r4,r19
10003310:	da003e15 	stw	r8,248(sp)
10003314:	0005cf40 	call	10005cf4 <_dtoa_r>
10003318:	d8c02a17 	ldw	r3,168(sp)
1000331c:	da003e17 	ldw	r8,248(sp)
10003320:	1021883a 	mov	r16,r2
10003324:	00801184 	movi	r2,70
10003328:	80f9883a 	add	fp,r16,r3
1000332c:	88bfcc26 	beq	r17,r2,10003260 <__alt_data_end+0xf8003260>
10003330:	003e9306 	br	10002d80 <__alt_data_end+0xf8002d80>
10003334:	df0022c4 	addi	fp,sp,139
10003338:	dc002a15 	stw	r16,168(sp)
1000333c:	9829883a 	mov	r20,r19
10003340:	e021883a 	mov	r16,fp
10003344:	4027883a 	mov	r19,r8
10003348:	b009883a 	mov	r4,r22
1000334c:	01400284 	movi	r5,10
10003350:	0000e980 	call	10000e98 <__modsi3>
10003354:	10800c04 	addi	r2,r2,48
10003358:	843fffc4 	addi	r16,r16,-1
1000335c:	b009883a 	mov	r4,r22
10003360:	01400284 	movi	r5,10
10003364:	80800005 	stb	r2,0(r16)
10003368:	0000e140 	call	10000e14 <__divsi3>
1000336c:	102d883a 	mov	r22,r2
10003370:	00800244 	movi	r2,9
10003374:	15bff416 	blt	r2,r22,10003348 <__alt_data_end+0xf8003348>
10003378:	9811883a 	mov	r8,r19
1000337c:	b0800c04 	addi	r2,r22,48
10003380:	a027883a 	mov	r19,r20
10003384:	8029883a 	mov	r20,r16
10003388:	a17fffc4 	addi	r5,r20,-1
1000338c:	a0bfffc5 	stb	r2,-1(r20)
10003390:	dc002a17 	ldw	r16,168(sp)
10003394:	2f00782e 	bgeu	r5,fp,10003578 <___svfprintf_internal_r+0x2270>
10003398:	d9c02384 	addi	r7,sp,142
1000339c:	3d0fc83a 	sub	r7,r7,r20
100033a0:	d9002344 	addi	r4,sp,141
100033a4:	e1cf883a 	add	r7,fp,r7
100033a8:	00000106 	br	100033b0 <___svfprintf_internal_r+0x20a8>
100033ac:	28800003 	ldbu	r2,0(r5)
100033b0:	20800005 	stb	r2,0(r4)
100033b4:	21000044 	addi	r4,r4,1
100033b8:	29400044 	addi	r5,r5,1
100033bc:	21fffb1e 	bne	r4,r7,100033ac <__alt_data_end+0xf80033ac>
100033c0:	d8802304 	addi	r2,sp,140
100033c4:	1505c83a 	sub	r2,r2,r20
100033c8:	d8c02344 	addi	r3,sp,141
100033cc:	1885883a 	add	r2,r3,r2
100033d0:	003f7006 	br	10003194 <__alt_data_end+0xf8003194>
100033d4:	0005883a 	mov	r2,zero
100033d8:	003f0b06 	br	10003008 <__alt_data_end+0xf8003008>
100033dc:	d9002a17 	ldw	r4,168(sp)
100033e0:	d8c03217 	ldw	r3,200(sp)
100033e4:	20800044 	addi	r2,r4,1
100033e8:	1885883a 	add	r2,r3,r2
100033ec:	d8802b15 	stw	r2,172(sp)
100033f0:	103e870e 	bge	r2,zero,10002e10 <__alt_data_end+0xf8002e10>
100033f4:	0005883a 	mov	r2,zero
100033f8:	003e8506 	br	10002e10 <__alt_data_end+0xf8002e10>
100033fc:	01040074 	movhi	r4,4097
10003400:	21104c84 	addi	r4,r4,16690
10003404:	d9002c15 	stw	r4,176(sp)
10003408:	003cc506 	br	10002720 <__alt_data_end+0xf8002720>
1000340c:	d8c03217 	ldw	r3,200(sp)
10003410:	18c00044 	addi	r3,r3,1
10003414:	d8c02b15 	stw	r3,172(sp)
10003418:	1805883a 	mov	r2,r3
1000341c:	183fa10e 	bge	r3,zero,100032a4 <__alt_data_end+0xf80032a4>
10003420:	0005883a 	mov	r2,zero
10003424:	003f9f06 	br	100032a4 <__alt_data_end+0xf80032a4>
10003428:	d9003617 	ldw	r4,216(sp)
1000342c:	000d883a 	mov	r6,zero
10003430:	000f883a 	mov	r7,zero
10003434:	a00b883a 	mov	r5,r20
10003438:	d8c03d15 	stw	r3,244(sp)
1000343c:	da003e15 	stw	r8,248(sp)
10003440:	00101a40 	call	100101a4 <__eqdf2>
10003444:	d8c03d17 	ldw	r3,244(sp)
10003448:	da003e17 	ldw	r8,248(sp)
1000344c:	103f8726 	beq	r2,zero,1000326c <__alt_data_end+0xf800326c>
10003450:	00800044 	movi	r2,1
10003454:	10c7c83a 	sub	r3,r2,r3
10003458:	d8c02615 	stw	r3,152(sp)
1000345c:	003f8406 	br	10003270 <__alt_data_end+0xf8003270>
10003460:	20000e1e 	bne	r4,zero,1000349c <___svfprintf_internal_r+0x2194>
10003464:	9480004c 	andi	r18,r18,1
10003468:	90000c1e 	bne	r18,zero,1000349c <___svfprintf_internal_r+0x2194>
1000346c:	00800044 	movi	r2,1
10003470:	d8802b15 	stw	r2,172(sp)
10003474:	003e6606 	br	10002e10 <__alt_data_end+0xf8002e10>
10003478:	00800b44 	movi	r2,45
1000347c:	05adc83a 	sub	r22,zero,r22
10003480:	d8802305 	stb	r2,140(sp)
10003484:	003f3b06 	br	10003174 <__alt_data_end+0xf8003174>
10003488:	0005883a 	mov	r2,zero
1000348c:	003f4e06 	br	100031c8 <__alt_data_end+0xf80031c8>
10003490:	90a4703a 	and	r18,r18,r2
10003494:	903f4a26 	beq	r18,zero,100031c0 <__alt_data_end+0xf80031c0>
10003498:	003f4606 	br	100031b4 <__alt_data_end+0xf80031b4>
1000349c:	d8c02a17 	ldw	r3,168(sp)
100034a0:	18c00084 	addi	r3,r3,2
100034a4:	d8c02b15 	stw	r3,172(sp)
100034a8:	1805883a 	mov	r2,r3
100034ac:	183e580e 	bge	r3,zero,10002e10 <__alt_data_end+0xf8002e10>
100034b0:	003fd006 	br	100033f4 <__alt_data_end+0xf80033f4>
100034b4:	00800084 	movi	r2,2
100034b8:	10c5c83a 	sub	r2,r2,r3
100034bc:	003f7506 	br	10003294 <__alt_data_end+0xf8003294>
100034c0:	d9402e17 	ldw	r5,184(sp)
100034c4:	d9002e17 	ldw	r4,184(sp)
100034c8:	bc400043 	ldbu	r17,1(r23)
100034cc:	29400017 	ldw	r5,0(r5)
100034d0:	20800104 	addi	r2,r4,4
100034d4:	d8802e15 	stw	r2,184(sp)
100034d8:	d9402a15 	stw	r5,168(sp)
100034dc:	182f883a 	mov	r23,r3
100034e0:	283df10e 	bge	r5,zero,10002ca8 <__alt_data_end+0xf8002ca8>
100034e4:	8c403fcc 	andi	r17,r17,255
100034e8:	017fffc4 	movi	r5,-1
100034ec:	8c40201c 	xori	r17,r17,128
100034f0:	d9402a15 	stw	r5,168(sp)
100034f4:	8c7fe004 	addi	r17,r17,-128
100034f8:	0037d806 	br	1000145c <__alt_data_end+0xf800145c>
100034fc:	9080004c 	andi	r2,r18,1
10003500:	0039883a 	mov	fp,zero
10003504:	10000726 	beq	r2,zero,10003524 <___svfprintf_internal_r+0x221c>
10003508:	d8c02817 	ldw	r3,160(sp)
1000350c:	dc001dc4 	addi	r16,sp,119
10003510:	00800c04 	movi	r2,48
10003514:	1c07c83a 	sub	r3,r3,r16
10003518:	d8801dc5 	stb	r2,119(sp)
1000351c:	d8c02b15 	stw	r3,172(sp)
10003520:	00393106 	br	100019e8 <__alt_data_end+0xf80019e8>
10003524:	d8002b15 	stw	zero,172(sp)
10003528:	dc001e04 	addi	r16,sp,120
1000352c:	00392e06 	br	100019e8 <__alt_data_end+0xf80019e8>
10003530:	0005883a 	mov	r2,zero
10003534:	003e3306 	br	10002e04 <__alt_data_end+0xf8002e04>
10003538:	dd802617 	ldw	r22,152(sp)
1000353c:	003f0706 	br	1000315c <__alt_data_end+0xf800315c>
10003540:	d8c02b03 	ldbu	r3,172(sp)
10003544:	d8c02785 	stb	r3,158(sp)
10003548:	003a3506 	br	10001e20 <__alt_data_end+0xf8001e20>
1000354c:	d8c02b03 	ldbu	r3,172(sp)
10003550:	d8c02785 	stb	r3,158(sp)
10003554:	003a1706 	br	10001db4 <__alt_data_end+0xf8001db4>
10003558:	0005883a 	mov	r2,zero
1000355c:	003f5d06 	br	100032d4 <__alt_data_end+0xf80032d4>
10003560:	d8c02b03 	ldbu	r3,172(sp)
10003564:	d8c02785 	stb	r3,158(sp)
10003568:	0038f306 	br	10001938 <__alt_data_end+0xf8001938>
1000356c:	d8c02b03 	ldbu	r3,172(sp)
10003570:	d8c02785 	stb	r3,158(sp)
10003574:	0038be06 	br	10001870 <__alt_data_end+0xf8001870>
10003578:	d8802344 	addi	r2,sp,141
1000357c:	003f0506 	br	10003194 <__alt_data_end+0xf8003194>
10003580:	d8c02b03 	ldbu	r3,172(sp)
10003584:	d8c02785 	stb	r3,158(sp)
10003588:	00388b06 	br	100017b8 <__alt_data_end+0xf80017b8>
1000358c:	d8c02b03 	ldbu	r3,172(sp)
10003590:	d8c02785 	stb	r3,158(sp)
10003594:	003ad706 	br	100020f4 <__alt_data_end+0xf80020f4>
10003598:	d9403917 	ldw	r5,228(sp)
1000359c:	00800304 	movi	r2,12
100035a0:	28800015 	stw	r2,0(r5)
100035a4:	00bfffc4 	movi	r2,-1
100035a8:	00384306 	br	100016b8 <__alt_data_end+0xf80016b8>
100035ac:	d8c02b03 	ldbu	r3,172(sp)
100035b0:	d8c02785 	stb	r3,158(sp)
100035b4:	003ab606 	br	10002090 <__alt_data_end+0xf8002090>
100035b8:	d8c02b03 	ldbu	r3,172(sp)
100035bc:	d8c02785 	stb	r3,158(sp)
100035c0:	003a8906 	br	10001fe8 <__alt_data_end+0xf8001fe8>

100035c4 <___vfprintf_internal_r>:
100035c4:	deffb804 	addi	sp,sp,-288
100035c8:	dfc04715 	stw	ra,284(sp)
100035cc:	ddc04515 	stw	r23,276(sp)
100035d0:	dd404315 	stw	r21,268(sp)
100035d4:	d9002d15 	stw	r4,180(sp)
100035d8:	282f883a 	mov	r23,r5
100035dc:	302b883a 	mov	r21,r6
100035e0:	d9c02e15 	stw	r7,184(sp)
100035e4:	df004615 	stw	fp,280(sp)
100035e8:	dd804415 	stw	r22,272(sp)
100035ec:	dd004215 	stw	r20,264(sp)
100035f0:	dcc04115 	stw	r19,260(sp)
100035f4:	dc804015 	stw	r18,256(sp)
100035f8:	dc403f15 	stw	r17,252(sp)
100035fc:	dc003e15 	stw	r16,248(sp)
10003600:	00085040 	call	10008504 <_localeconv_r>
10003604:	10800017 	ldw	r2,0(r2)
10003608:	1009883a 	mov	r4,r2
1000360c:	d8803415 	stw	r2,208(sp)
10003610:	00012700 	call	10001270 <strlen>
10003614:	d8803715 	stw	r2,220(sp)
10003618:	d8802d17 	ldw	r2,180(sp)
1000361c:	10000226 	beq	r2,zero,10003628 <___vfprintf_internal_r+0x64>
10003620:	10800e17 	ldw	r2,56(r2)
10003624:	1000fb26 	beq	r2,zero,10003a14 <___vfprintf_internal_r+0x450>
10003628:	b880030b 	ldhu	r2,12(r23)
1000362c:	10c8000c 	andi	r3,r2,8192
10003630:	1800061e 	bne	r3,zero,1000364c <___vfprintf_internal_r+0x88>
10003634:	b9001917 	ldw	r4,100(r23)
10003638:	00f7ffc4 	movi	r3,-8193
1000363c:	10880014 	ori	r2,r2,8192
10003640:	20c6703a 	and	r3,r4,r3
10003644:	b880030d 	sth	r2,12(r23)
10003648:	b8c01915 	stw	r3,100(r23)
1000364c:	10c0020c 	andi	r3,r2,8
10003650:	1800c326 	beq	r3,zero,10003960 <___vfprintf_internal_r+0x39c>
10003654:	b8c00417 	ldw	r3,16(r23)
10003658:	1800c126 	beq	r3,zero,10003960 <___vfprintf_internal_r+0x39c>
1000365c:	1080068c 	andi	r2,r2,26
10003660:	00c00284 	movi	r3,10
10003664:	10c0c626 	beq	r2,r3,10003980 <___vfprintf_internal_r+0x3bc>
10003668:	d8c00404 	addi	r3,sp,16
1000366c:	05040074 	movhi	r20,4097
10003670:	d9001e04 	addi	r4,sp,120
10003674:	a5105484 	addi	r20,r20,16722
10003678:	d8c01e15 	stw	r3,120(sp)
1000367c:	d8002015 	stw	zero,128(sp)
10003680:	d8001f15 	stw	zero,124(sp)
10003684:	d8003315 	stw	zero,204(sp)
10003688:	d8003615 	stw	zero,216(sp)
1000368c:	d8003815 	stw	zero,224(sp)
10003690:	1811883a 	mov	r8,r3
10003694:	d8003915 	stw	zero,228(sp)
10003698:	d8003a15 	stw	zero,232(sp)
1000369c:	d8002f15 	stw	zero,188(sp)
100036a0:	d9002815 	stw	r4,160(sp)
100036a4:	a8800007 	ldb	r2,0(r21)
100036a8:	10028b26 	beq	r2,zero,100040d8 <___vfprintf_internal_r+0xb14>
100036ac:	00c00944 	movi	r3,37
100036b0:	a823883a 	mov	r17,r21
100036b4:	10c0021e 	bne	r2,r3,100036c0 <___vfprintf_internal_r+0xfc>
100036b8:	00001406 	br	1000370c <___vfprintf_internal_r+0x148>
100036bc:	10c00326 	beq	r2,r3,100036cc <___vfprintf_internal_r+0x108>
100036c0:	8c400044 	addi	r17,r17,1
100036c4:	88800007 	ldb	r2,0(r17)
100036c8:	103ffc1e 	bne	r2,zero,100036bc <__alt_data_end+0xf80036bc>
100036cc:	8d61c83a 	sub	r16,r17,r21
100036d0:	80000e26 	beq	r16,zero,1000370c <___vfprintf_internal_r+0x148>
100036d4:	d8c02017 	ldw	r3,128(sp)
100036d8:	d8801f17 	ldw	r2,124(sp)
100036dc:	45400015 	stw	r21,0(r8)
100036e0:	1c07883a 	add	r3,r3,r16
100036e4:	10800044 	addi	r2,r2,1
100036e8:	d8c02015 	stw	r3,128(sp)
100036ec:	44000115 	stw	r16,4(r8)
100036f0:	d8801f15 	stw	r2,124(sp)
100036f4:	00c001c4 	movi	r3,7
100036f8:	1880a916 	blt	r3,r2,100039a0 <___vfprintf_internal_r+0x3dc>
100036fc:	42000204 	addi	r8,r8,8
10003700:	d9402f17 	ldw	r5,188(sp)
10003704:	2c0b883a 	add	r5,r5,r16
10003708:	d9402f15 	stw	r5,188(sp)
1000370c:	88800007 	ldb	r2,0(r17)
10003710:	1000aa26 	beq	r2,zero,100039bc <___vfprintf_internal_r+0x3f8>
10003714:	8d400044 	addi	r21,r17,1
10003718:	8c400047 	ldb	r17,1(r17)
1000371c:	0021883a 	mov	r16,zero
10003720:	00bfffc4 	movi	r2,-1
10003724:	0025883a 	mov	r18,zero
10003728:	dc002905 	stb	r16,164(sp)
1000372c:	d8002785 	stb	zero,158(sp)
10003730:	d8002b05 	stb	zero,172(sp)
10003734:	d8802a15 	stw	r2,168(sp)
10003738:	d8003115 	stw	zero,196(sp)
1000373c:	04c01604 	movi	r19,88
10003740:	05800244 	movi	r22,9
10003744:	9021883a 	mov	r16,r18
10003748:	4039883a 	mov	fp,r8
1000374c:	ad400044 	addi	r21,r21,1
10003750:	88bff804 	addi	r2,r17,-32
10003754:	98833236 	bltu	r19,r2,10004420 <___vfprintf_internal_r+0xe5c>
10003758:	100490ba 	slli	r2,r2,2
1000375c:	00c40034 	movhi	r3,4096
10003760:	18cddc04 	addi	r3,r3,14192
10003764:	10c5883a 	add	r2,r2,r3
10003768:	10800017 	ldw	r2,0(r2)
1000376c:	1000683a 	jmp	r2
10003770:	10004318 	cmpnei	zero,r2,268
10003774:	10004420 	cmpeqi	zero,r2,272
10003778:	10004420 	cmpeqi	zero,r2,272
1000377c:	10004338 	rdprs	zero,r2,268
10003780:	10004420 	cmpeqi	zero,r2,272
10003784:	10004420 	cmpeqi	zero,r2,272
10003788:	10004420 	cmpeqi	zero,r2,272
1000378c:	10004420 	cmpeqi	zero,r2,272
10003790:	10004420 	cmpeqi	zero,r2,272
10003794:	10004420 	cmpeqi	zero,r2,272
10003798:	10003a20 	cmpeqi	zero,r2,232
1000379c:	10004228 	cmpgeui	zero,r2,264
100037a0:	10004420 	cmpeqi	zero,r2,272
100037a4:	100038e4 	muli	zero,r2,227
100037a8:	10003a44 	addi	zero,r2,233
100037ac:	10004420 	cmpeqi	zero,r2,272
100037b0:	10003a94 	ori	zero,r2,234
100037b4:	10003aa0 	cmpeqi	zero,r2,234
100037b8:	10003aa0 	cmpeqi	zero,r2,234
100037bc:	10003aa0 	cmpeqi	zero,r2,234
100037c0:	10003aa0 	cmpeqi	zero,r2,234
100037c4:	10003aa0 	cmpeqi	zero,r2,234
100037c8:	10003aa0 	cmpeqi	zero,r2,234
100037cc:	10003aa0 	cmpeqi	zero,r2,234
100037d0:	10003aa0 	cmpeqi	zero,r2,234
100037d4:	10003aa0 	cmpeqi	zero,r2,234
100037d8:	10004420 	cmpeqi	zero,r2,272
100037dc:	10004420 	cmpeqi	zero,r2,272
100037e0:	10004420 	cmpeqi	zero,r2,272
100037e4:	10004420 	cmpeqi	zero,r2,272
100037e8:	10004420 	cmpeqi	zero,r2,272
100037ec:	10004420 	cmpeqi	zero,r2,272
100037f0:	10004420 	cmpeqi	zero,r2,272
100037f4:	10004420 	cmpeqi	zero,r2,272
100037f8:	10004420 	cmpeqi	zero,r2,272
100037fc:	10004420 	cmpeqi	zero,r2,272
10003800:	10003adc 	xori	zero,r2,235
10003804:	10003ba4 	muli	zero,r2,238
10003808:	10004420 	cmpeqi	zero,r2,272
1000380c:	10003ba4 	muli	zero,r2,238
10003810:	10004420 	cmpeqi	zero,r2,272
10003814:	10004420 	cmpeqi	zero,r2,272
10003818:	10004420 	cmpeqi	zero,r2,272
1000381c:	10004420 	cmpeqi	zero,r2,272
10003820:	10003c50 	cmplti	zero,r2,241
10003824:	10004420 	cmpeqi	zero,r2,272
10003828:	10004420 	cmpeqi	zero,r2,272
1000382c:	10003c5c 	xori	zero,r2,241
10003830:	10004420 	cmpeqi	zero,r2,272
10003834:	10004420 	cmpeqi	zero,r2,272
10003838:	10004420 	cmpeqi	zero,r2,272
1000383c:	10004420 	cmpeqi	zero,r2,272
10003840:	10004420 	cmpeqi	zero,r2,272
10003844:	100040e0 	cmpeqi	zero,r2,259
10003848:	10004420 	cmpeqi	zero,r2,272
1000384c:	10004420 	cmpeqi	zero,r2,272
10003850:	1000414c 	andi	zero,r2,261
10003854:	10004420 	cmpeqi	zero,r2,272
10003858:	10004420 	cmpeqi	zero,r2,272
1000385c:	10004420 	cmpeqi	zero,r2,272
10003860:	10004420 	cmpeqi	zero,r2,272
10003864:	10004420 	cmpeqi	zero,r2,272
10003868:	10004420 	cmpeqi	zero,r2,272
1000386c:	10004420 	cmpeqi	zero,r2,272
10003870:	10004420 	cmpeqi	zero,r2,272
10003874:	10004420 	cmpeqi	zero,r2,272
10003878:	10004420 	cmpeqi	zero,r2,272
1000387c:	100043c4 	addi	zero,r2,271
10003880:	10004344 	addi	zero,r2,269
10003884:	10003ba4 	muli	zero,r2,238
10003888:	10003ba4 	muli	zero,r2,238
1000388c:	10003ba4 	muli	zero,r2,238
10003890:	10004364 	muli	zero,r2,269
10003894:	10004344 	addi	zero,r2,269
10003898:	10004420 	cmpeqi	zero,r2,272
1000389c:	10004420 	cmpeqi	zero,r2,272
100038a0:	10004370 	cmpltui	zero,r2,269
100038a4:	10004420 	cmpeqi	zero,r2,272
100038a8:	10004384 	addi	zero,r2,270
100038ac:	10004208 	cmpgei	zero,r2,264
100038b0:	100038f0 	cmpltui	zero,r2,227
100038b4:	10004240 	call	11000424 <_gp+0xfe226c>
100038b8:	10004420 	cmpeqi	zero,r2,272
100038bc:	1000424c 	andi	zero,r2,265
100038c0:	10004420 	cmpeqi	zero,r2,272
100038c4:	100042b0 	cmpltui	zero,r2,266
100038c8:	10004420 	cmpeqi	zero,r2,272
100038cc:	10004420 	cmpeqi	zero,r2,272
100038d0:	100042d0 	cmplti	zero,r2,267
100038d4:	d8c03117 	ldw	r3,196(sp)
100038d8:	d8802e15 	stw	r2,184(sp)
100038dc:	00c7c83a 	sub	r3,zero,r3
100038e0:	d8c03115 	stw	r3,196(sp)
100038e4:	84000114 	ori	r16,r16,4
100038e8:	ac400007 	ldb	r17,0(r21)
100038ec:	003f9706 	br	1000374c <__alt_data_end+0xf800374c>
100038f0:	00800c04 	movi	r2,48
100038f4:	d8802705 	stb	r2,156(sp)
100038f8:	00801e04 	movi	r2,120
100038fc:	d8802745 	stb	r2,157(sp)
10003900:	d9002a17 	ldw	r4,168(sp)
10003904:	d8802e17 	ldw	r2,184(sp)
10003908:	d8002785 	stb	zero,158(sp)
1000390c:	e011883a 	mov	r8,fp
10003910:	10c00104 	addi	r3,r2,4
10003914:	14c00017 	ldw	r19,0(r2)
10003918:	002d883a 	mov	r22,zero
1000391c:	80800094 	ori	r2,r16,2
10003920:	2002ca16 	blt	r4,zero,1000444c <___vfprintf_internal_r+0xe88>
10003924:	00bfdfc4 	movi	r2,-129
10003928:	80a4703a 	and	r18,r16,r2
1000392c:	d8c02e15 	stw	r3,184(sp)
10003930:	94800094 	ori	r18,r18,2
10003934:	9802b41e 	bne	r19,zero,10004408 <___vfprintf_internal_r+0xe44>
10003938:	01440074 	movhi	r5,4097
1000393c:	29504504 	addi	r5,r5,16660
10003940:	d9403915 	stw	r5,228(sp)
10003944:	04401e04 	movi	r17,120
10003948:	d8802a17 	ldw	r2,168(sp)
1000394c:	0039883a 	mov	fp,zero
10003950:	1001fa26 	beq	r2,zero,1000413c <___vfprintf_internal_r+0xb78>
10003954:	0027883a 	mov	r19,zero
10003958:	002d883a 	mov	r22,zero
1000395c:	00021906 	br	100041c4 <___vfprintf_internal_r+0xc00>
10003960:	d9002d17 	ldw	r4,180(sp)
10003964:	b80b883a 	mov	r5,r23
10003968:	00059780 	call	10005978 <__swsetup_r>
1000396c:	1005dc1e 	bne	r2,zero,100050e0 <___vfprintf_internal_r+0x1b1c>
10003970:	b880030b 	ldhu	r2,12(r23)
10003974:	00c00284 	movi	r3,10
10003978:	1080068c 	andi	r2,r2,26
1000397c:	10ff3a1e 	bne	r2,r3,10003668 <__alt_data_end+0xf8003668>
10003980:	b880038f 	ldh	r2,14(r23)
10003984:	103f3816 	blt	r2,zero,10003668 <__alt_data_end+0xf8003668>
10003988:	d9c02e17 	ldw	r7,184(sp)
1000398c:	d9002d17 	ldw	r4,180(sp)
10003990:	a80d883a 	mov	r6,r21
10003994:	b80b883a 	mov	r5,r23
10003998:	00058bc0 	call	100058bc <__sbprintf>
1000399c:	00001106 	br	100039e4 <___vfprintf_internal_r+0x420>
100039a0:	d9002d17 	ldw	r4,180(sp)
100039a4:	d9801e04 	addi	r6,sp,120
100039a8:	b80b883a 	mov	r5,r23
100039ac:	000c3140 	call	1000c314 <__sprint_r>
100039b0:	1000081e 	bne	r2,zero,100039d4 <___vfprintf_internal_r+0x410>
100039b4:	da000404 	addi	r8,sp,16
100039b8:	003f5106 	br	10003700 <__alt_data_end+0xf8003700>
100039bc:	d8802017 	ldw	r2,128(sp)
100039c0:	10000426 	beq	r2,zero,100039d4 <___vfprintf_internal_r+0x410>
100039c4:	d9002d17 	ldw	r4,180(sp)
100039c8:	d9801e04 	addi	r6,sp,120
100039cc:	b80b883a 	mov	r5,r23
100039d0:	000c3140 	call	1000c314 <__sprint_r>
100039d4:	b880030b 	ldhu	r2,12(r23)
100039d8:	1080100c 	andi	r2,r2,64
100039dc:	1005c01e 	bne	r2,zero,100050e0 <___vfprintf_internal_r+0x1b1c>
100039e0:	d8802f17 	ldw	r2,188(sp)
100039e4:	dfc04717 	ldw	ra,284(sp)
100039e8:	df004617 	ldw	fp,280(sp)
100039ec:	ddc04517 	ldw	r23,276(sp)
100039f0:	dd804417 	ldw	r22,272(sp)
100039f4:	dd404317 	ldw	r21,268(sp)
100039f8:	dd004217 	ldw	r20,264(sp)
100039fc:	dcc04117 	ldw	r19,260(sp)
10003a00:	dc804017 	ldw	r18,256(sp)
10003a04:	dc403f17 	ldw	r17,252(sp)
10003a08:	dc003e17 	ldw	r16,248(sp)
10003a0c:	dec04804 	addi	sp,sp,288
10003a10:	f800283a 	ret
10003a14:	d9002d17 	ldw	r4,180(sp)
10003a18:	00079840 	call	10007984 <__sinit>
10003a1c:	003f0206 	br	10003628 <__alt_data_end+0xf8003628>
10003a20:	d9002e17 	ldw	r4,184(sp)
10003a24:	d9402e17 	ldw	r5,184(sp)
10003a28:	21000017 	ldw	r4,0(r4)
10003a2c:	28800104 	addi	r2,r5,4
10003a30:	d9003115 	stw	r4,196(sp)
10003a34:	203fa716 	blt	r4,zero,100038d4 <__alt_data_end+0xf80038d4>
10003a38:	d8802e15 	stw	r2,184(sp)
10003a3c:	ac400007 	ldb	r17,0(r21)
10003a40:	003f4206 	br	1000374c <__alt_data_end+0xf800374c>
10003a44:	ac400007 	ldb	r17,0(r21)
10003a48:	01000a84 	movi	r4,42
10003a4c:	a8c00044 	addi	r3,r21,1
10003a50:	89075826 	beq	r17,r4,100057b4 <___vfprintf_internal_r+0x21f0>
10003a54:	8cbff404 	addi	r18,r17,-48
10003a58:	b486ae36 	bltu	r22,r18,10005514 <___vfprintf_internal_r+0x1f50>
10003a5c:	0009883a 	mov	r4,zero
10003a60:	1823883a 	mov	r17,r3
10003a64:	01400284 	movi	r5,10
10003a68:	0000fc80 	call	10000fc8 <__mulsi3>
10003a6c:	88c00007 	ldb	r3,0(r17)
10003a70:	1489883a 	add	r4,r2,r18
10003a74:	8d400044 	addi	r21,r17,1
10003a78:	1cbff404 	addi	r18,r3,-48
10003a7c:	a823883a 	mov	r17,r21
10003a80:	b4bff82e 	bgeu	r22,r18,10003a64 <__alt_data_end+0xf8003a64>
10003a84:	1823883a 	mov	r17,r3
10003a88:	2005f616 	blt	r4,zero,10005264 <___vfprintf_internal_r+0x1ca0>
10003a8c:	d9002a15 	stw	r4,168(sp)
10003a90:	003f2f06 	br	10003750 <__alt_data_end+0xf8003750>
10003a94:	84002014 	ori	r16,r16,128
10003a98:	ac400007 	ldb	r17,0(r21)
10003a9c:	003f2b06 	br	1000374c <__alt_data_end+0xf800374c>
10003aa0:	8cbff404 	addi	r18,r17,-48
10003aa4:	d8003115 	stw	zero,196(sp)
10003aa8:	0009883a 	mov	r4,zero
10003aac:	a823883a 	mov	r17,r21
10003ab0:	01400284 	movi	r5,10
10003ab4:	0000fc80 	call	10000fc8 <__mulsi3>
10003ab8:	88c00007 	ldb	r3,0(r17)
10003abc:	9089883a 	add	r4,r18,r2
10003ac0:	ad400044 	addi	r21,r21,1
10003ac4:	1cbff404 	addi	r18,r3,-48
10003ac8:	a823883a 	mov	r17,r21
10003acc:	b4bff82e 	bgeu	r22,r18,10003ab0 <__alt_data_end+0xf8003ab0>
10003ad0:	1823883a 	mov	r17,r3
10003ad4:	d9003115 	stw	r4,196(sp)
10003ad8:	003f1d06 	br	10003750 <__alt_data_end+0xf8003750>
10003adc:	8025883a 	mov	r18,r16
10003ae0:	dc002903 	ldbu	r16,164(sp)
10003ae4:	e011883a 	mov	r8,fp
10003ae8:	84003fcc 	andi	r16,r16,255
10003aec:	8007531e 	bne	r16,zero,1000583c <___vfprintf_internal_r+0x2278>
10003af0:	94800414 	ori	r18,r18,16
10003af4:	9080080c 	andi	r2,r18,32
10003af8:	1003a326 	beq	r2,zero,10004988 <___vfprintf_internal_r+0x13c4>
10003afc:	d9002e17 	ldw	r4,184(sp)
10003b00:	20800117 	ldw	r2,4(r4)
10003b04:	24c00017 	ldw	r19,0(r4)
10003b08:	21000204 	addi	r4,r4,8
10003b0c:	d9002e15 	stw	r4,184(sp)
10003b10:	102d883a 	mov	r22,r2
10003b14:	10047316 	blt	r2,zero,10004ce4 <___vfprintf_internal_r+0x1720>
10003b18:	d9002a17 	ldw	r4,168(sp)
10003b1c:	df002783 	ldbu	fp,158(sp)
10003b20:	2003e416 	blt	r4,zero,10004ab4 <___vfprintf_internal_r+0x14f0>
10003b24:	00ffdfc4 	movi	r3,-129
10003b28:	9d84b03a 	or	r2,r19,r22
10003b2c:	90e4703a 	and	r18,r18,r3
10003b30:	10018026 	beq	r2,zero,10004134 <___vfprintf_internal_r+0xb70>
10003b34:	b003ab26 	beq	r22,zero,100049e4 <___vfprintf_internal_r+0x1420>
10003b38:	dc402915 	stw	r17,164(sp)
10003b3c:	dc001e04 	addi	r16,sp,120
10003b40:	b023883a 	mov	r17,r22
10003b44:	402d883a 	mov	r22,r8
10003b48:	9809883a 	mov	r4,r19
10003b4c:	880b883a 	mov	r5,r17
10003b50:	01800284 	movi	r6,10
10003b54:	000f883a 	mov	r7,zero
10003b58:	000e9640 	call	1000e964 <__umoddi3>
10003b5c:	10800c04 	addi	r2,r2,48
10003b60:	843fffc4 	addi	r16,r16,-1
10003b64:	9809883a 	mov	r4,r19
10003b68:	880b883a 	mov	r5,r17
10003b6c:	80800005 	stb	r2,0(r16)
10003b70:	01800284 	movi	r6,10
10003b74:	000f883a 	mov	r7,zero
10003b78:	000e3680 	call	1000e368 <__udivdi3>
10003b7c:	1027883a 	mov	r19,r2
10003b80:	10c4b03a 	or	r2,r2,r3
10003b84:	1823883a 	mov	r17,r3
10003b88:	103fef1e 	bne	r2,zero,10003b48 <__alt_data_end+0xf8003b48>
10003b8c:	d8c02817 	ldw	r3,160(sp)
10003b90:	dc402917 	ldw	r17,164(sp)
10003b94:	b011883a 	mov	r8,r22
10003b98:	1c07c83a 	sub	r3,r3,r16
10003b9c:	d8c02b15 	stw	r3,172(sp)
10003ba0:	00005f06 	br	10003d20 <___vfprintf_internal_r+0x75c>
10003ba4:	8025883a 	mov	r18,r16
10003ba8:	dc002903 	ldbu	r16,164(sp)
10003bac:	e011883a 	mov	r8,fp
10003bb0:	84003fcc 	andi	r16,r16,255
10003bb4:	80071e1e 	bne	r16,zero,10005830 <___vfprintf_internal_r+0x226c>
10003bb8:	9080020c 	andi	r2,r18,8
10003bbc:	1004af26 	beq	r2,zero,10004e7c <___vfprintf_internal_r+0x18b8>
10003bc0:	d9002e17 	ldw	r4,184(sp)
10003bc4:	d9402e17 	ldw	r5,184(sp)
10003bc8:	d8802e17 	ldw	r2,184(sp)
10003bcc:	21000017 	ldw	r4,0(r4)
10003bd0:	29400117 	ldw	r5,4(r5)
10003bd4:	10800204 	addi	r2,r2,8
10003bd8:	d9003615 	stw	r4,216(sp)
10003bdc:	d9403815 	stw	r5,224(sp)
10003be0:	d8802e15 	stw	r2,184(sp)
10003be4:	d9003617 	ldw	r4,216(sp)
10003be8:	d9403817 	ldw	r5,224(sp)
10003bec:	da003d15 	stw	r8,244(sp)
10003bf0:	04000044 	movi	r16,1
10003bf4:	000a9c80 	call	1000a9c8 <__fpclassifyd>
10003bf8:	da003d17 	ldw	r8,244(sp)
10003bfc:	1404441e 	bne	r2,r16,10004d10 <___vfprintf_internal_r+0x174c>
10003c00:	d9003617 	ldw	r4,216(sp)
10003c04:	d9403817 	ldw	r5,224(sp)
10003c08:	000d883a 	mov	r6,zero
10003c0c:	000f883a 	mov	r7,zero
10003c10:	00103080 	call	10010308 <__ledf2>
10003c14:	da003d17 	ldw	r8,244(sp)
10003c18:	1005e316 	blt	r2,zero,100053a8 <___vfprintf_internal_r+0x1de4>
10003c1c:	df002783 	ldbu	fp,158(sp)
10003c20:	008011c4 	movi	r2,71
10003c24:	1445580e 	bge	r2,r17,10005188 <___vfprintf_internal_r+0x1bc4>
10003c28:	04040074 	movhi	r16,4097
10003c2c:	84103d04 	addi	r16,r16,16628
10003c30:	00c000c4 	movi	r3,3
10003c34:	00bfdfc4 	movi	r2,-129
10003c38:	d8c02915 	stw	r3,164(sp)
10003c3c:	90a4703a 	and	r18,r18,r2
10003c40:	d8c02b15 	stw	r3,172(sp)
10003c44:	d8002a15 	stw	zero,168(sp)
10003c48:	d8003215 	stw	zero,200(sp)
10003c4c:	00003a06 	br	10003d38 <___vfprintf_internal_r+0x774>
10003c50:	84000214 	ori	r16,r16,8
10003c54:	ac400007 	ldb	r17,0(r21)
10003c58:	003ebc06 	br	1000374c <__alt_data_end+0xf800374c>
10003c5c:	8025883a 	mov	r18,r16
10003c60:	dc002903 	ldbu	r16,164(sp)
10003c64:	e011883a 	mov	r8,fp
10003c68:	84003fcc 	andi	r16,r16,255
10003c6c:	8007001e 	bne	r16,zero,10005870 <___vfprintf_internal_r+0x22ac>
10003c70:	94800414 	ori	r18,r18,16
10003c74:	9080080c 	andi	r2,r18,32
10003c78:	1002fa26 	beq	r2,zero,10004864 <___vfprintf_internal_r+0x12a0>
10003c7c:	d9002e17 	ldw	r4,184(sp)
10003c80:	d9402a17 	ldw	r5,168(sp)
10003c84:	d8002785 	stb	zero,158(sp)
10003c88:	20800204 	addi	r2,r4,8
10003c8c:	24c00017 	ldw	r19,0(r4)
10003c90:	25800117 	ldw	r22,4(r4)
10003c94:	2804b116 	blt	r5,zero,10004f5c <___vfprintf_internal_r+0x1998>
10003c98:	013fdfc4 	movi	r4,-129
10003c9c:	9d86b03a 	or	r3,r19,r22
10003ca0:	d8802e15 	stw	r2,184(sp)
10003ca4:	9124703a 	and	r18,r18,r4
10003ca8:	1802fb1e 	bne	r3,zero,10004898 <___vfprintf_internal_r+0x12d4>
10003cac:	d8c02a17 	ldw	r3,168(sp)
10003cb0:	0039883a 	mov	fp,zero
10003cb4:	1805e526 	beq	r3,zero,1000544c <___vfprintf_internal_r+0x1e88>
10003cb8:	0027883a 	mov	r19,zero
10003cbc:	002d883a 	mov	r22,zero
10003cc0:	dc001e04 	addi	r16,sp,120
10003cc4:	9806d0fa 	srli	r3,r19,3
10003cc8:	b008977a 	slli	r4,r22,29
10003ccc:	b02cd0fa 	srli	r22,r22,3
10003cd0:	9cc001cc 	andi	r19,r19,7
10003cd4:	98800c04 	addi	r2,r19,48
10003cd8:	843fffc4 	addi	r16,r16,-1
10003cdc:	20e6b03a 	or	r19,r4,r3
10003ce0:	80800005 	stb	r2,0(r16)
10003ce4:	9d86b03a 	or	r3,r19,r22
10003ce8:	183ff61e 	bne	r3,zero,10003cc4 <__alt_data_end+0xf8003cc4>
10003cec:	90c0004c 	andi	r3,r18,1
10003cf0:	18014126 	beq	r3,zero,100041f8 <___vfprintf_internal_r+0xc34>
10003cf4:	10803fcc 	andi	r2,r2,255
10003cf8:	1080201c 	xori	r2,r2,128
10003cfc:	10bfe004 	addi	r2,r2,-128
10003d00:	00c00c04 	movi	r3,48
10003d04:	10c13c26 	beq	r2,r3,100041f8 <___vfprintf_internal_r+0xc34>
10003d08:	80ffffc5 	stb	r3,-1(r16)
10003d0c:	d8c02817 	ldw	r3,160(sp)
10003d10:	80bfffc4 	addi	r2,r16,-1
10003d14:	1021883a 	mov	r16,r2
10003d18:	1887c83a 	sub	r3,r3,r2
10003d1c:	d8c02b15 	stw	r3,172(sp)
10003d20:	d8802b17 	ldw	r2,172(sp)
10003d24:	d9002a17 	ldw	r4,168(sp)
10003d28:	1100010e 	bge	r2,r4,10003d30 <___vfprintf_internal_r+0x76c>
10003d2c:	2005883a 	mov	r2,r4
10003d30:	d8802915 	stw	r2,164(sp)
10003d34:	d8003215 	stw	zero,200(sp)
10003d38:	e7003fcc 	andi	fp,fp,255
10003d3c:	e700201c 	xori	fp,fp,128
10003d40:	e73fe004 	addi	fp,fp,-128
10003d44:	e0000326 	beq	fp,zero,10003d54 <___vfprintf_internal_r+0x790>
10003d48:	d8c02917 	ldw	r3,164(sp)
10003d4c:	18c00044 	addi	r3,r3,1
10003d50:	d8c02915 	stw	r3,164(sp)
10003d54:	90c0008c 	andi	r3,r18,2
10003d58:	d8c02c15 	stw	r3,176(sp)
10003d5c:	18000326 	beq	r3,zero,10003d6c <___vfprintf_internal_r+0x7a8>
10003d60:	d8c02917 	ldw	r3,164(sp)
10003d64:	18c00084 	addi	r3,r3,2
10003d68:	d8c02915 	stw	r3,164(sp)
10003d6c:	90c0210c 	andi	r3,r18,132
10003d70:	d8c03015 	stw	r3,192(sp)
10003d74:	1801c51e 	bne	r3,zero,1000448c <___vfprintf_internal_r+0xec8>
10003d78:	d9003117 	ldw	r4,196(sp)
10003d7c:	d8c02917 	ldw	r3,164(sp)
10003d80:	20e7c83a 	sub	r19,r4,r3
10003d84:	04c1c10e 	bge	zero,r19,1000448c <___vfprintf_internal_r+0xec8>
10003d88:	02400404 	movi	r9,16
10003d8c:	d8c02017 	ldw	r3,128(sp)
10003d90:	d8801f17 	ldw	r2,124(sp)
10003d94:	4cc52f0e 	bge	r9,r19,10005254 <___vfprintf_internal_r+0x1c90>
10003d98:	01440074 	movhi	r5,4097
10003d9c:	29505884 	addi	r5,r5,16738
10003da0:	dc403b15 	stw	r17,236(sp)
10003da4:	d9403515 	stw	r5,212(sp)
10003da8:	9823883a 	mov	r17,r19
10003dac:	482d883a 	mov	r22,r9
10003db0:	9027883a 	mov	r19,r18
10003db4:	070001c4 	movi	fp,7
10003db8:	8025883a 	mov	r18,r16
10003dbc:	dc002d17 	ldw	r16,180(sp)
10003dc0:	00000306 	br	10003dd0 <___vfprintf_internal_r+0x80c>
10003dc4:	8c7ffc04 	addi	r17,r17,-16
10003dc8:	42000204 	addi	r8,r8,8
10003dcc:	b440130e 	bge	r22,r17,10003e1c <___vfprintf_internal_r+0x858>
10003dd0:	01040074 	movhi	r4,4097
10003dd4:	18c00404 	addi	r3,r3,16
10003dd8:	10800044 	addi	r2,r2,1
10003ddc:	21105884 	addi	r4,r4,16738
10003de0:	41000015 	stw	r4,0(r8)
10003de4:	45800115 	stw	r22,4(r8)
10003de8:	d8c02015 	stw	r3,128(sp)
10003dec:	d8801f15 	stw	r2,124(sp)
10003df0:	e0bff40e 	bge	fp,r2,10003dc4 <__alt_data_end+0xf8003dc4>
10003df4:	d9801e04 	addi	r6,sp,120
10003df8:	b80b883a 	mov	r5,r23
10003dfc:	8009883a 	mov	r4,r16
10003e00:	000c3140 	call	1000c314 <__sprint_r>
10003e04:	103ef31e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10003e08:	8c7ffc04 	addi	r17,r17,-16
10003e0c:	d8c02017 	ldw	r3,128(sp)
10003e10:	d8801f17 	ldw	r2,124(sp)
10003e14:	da000404 	addi	r8,sp,16
10003e18:	b47fed16 	blt	r22,r17,10003dd0 <__alt_data_end+0xf8003dd0>
10003e1c:	9021883a 	mov	r16,r18
10003e20:	9825883a 	mov	r18,r19
10003e24:	8827883a 	mov	r19,r17
10003e28:	dc403b17 	ldw	r17,236(sp)
10003e2c:	d9403517 	ldw	r5,212(sp)
10003e30:	98c7883a 	add	r3,r19,r3
10003e34:	10800044 	addi	r2,r2,1
10003e38:	41400015 	stw	r5,0(r8)
10003e3c:	44c00115 	stw	r19,4(r8)
10003e40:	d8c02015 	stw	r3,128(sp)
10003e44:	d8801f15 	stw	r2,124(sp)
10003e48:	010001c4 	movi	r4,7
10003e4c:	2082c516 	blt	r4,r2,10004964 <___vfprintf_internal_r+0x13a0>
10003e50:	df002787 	ldb	fp,158(sp)
10003e54:	42000204 	addi	r8,r8,8
10003e58:	e0000c26 	beq	fp,zero,10003e8c <___vfprintf_internal_r+0x8c8>
10003e5c:	d8801f17 	ldw	r2,124(sp)
10003e60:	d9002784 	addi	r4,sp,158
10003e64:	18c00044 	addi	r3,r3,1
10003e68:	10800044 	addi	r2,r2,1
10003e6c:	41000015 	stw	r4,0(r8)
10003e70:	01000044 	movi	r4,1
10003e74:	41000115 	stw	r4,4(r8)
10003e78:	d8c02015 	stw	r3,128(sp)
10003e7c:	d8801f15 	stw	r2,124(sp)
10003e80:	010001c4 	movi	r4,7
10003e84:	20825e16 	blt	r4,r2,10004800 <___vfprintf_internal_r+0x123c>
10003e88:	42000204 	addi	r8,r8,8
10003e8c:	d8802c17 	ldw	r2,176(sp)
10003e90:	10000c26 	beq	r2,zero,10003ec4 <___vfprintf_internal_r+0x900>
10003e94:	d8801f17 	ldw	r2,124(sp)
10003e98:	d9002704 	addi	r4,sp,156
10003e9c:	18c00084 	addi	r3,r3,2
10003ea0:	10800044 	addi	r2,r2,1
10003ea4:	41000015 	stw	r4,0(r8)
10003ea8:	01000084 	movi	r4,2
10003eac:	41000115 	stw	r4,4(r8)
10003eb0:	d8c02015 	stw	r3,128(sp)
10003eb4:	d8801f15 	stw	r2,124(sp)
10003eb8:	010001c4 	movi	r4,7
10003ebc:	20825816 	blt	r4,r2,10004820 <___vfprintf_internal_r+0x125c>
10003ec0:	42000204 	addi	r8,r8,8
10003ec4:	d9003017 	ldw	r4,192(sp)
10003ec8:	00802004 	movi	r2,128
10003ecc:	2081bb26 	beq	r4,r2,100045bc <___vfprintf_internal_r+0xff8>
10003ed0:	d9402a17 	ldw	r5,168(sp)
10003ed4:	d8802b17 	ldw	r2,172(sp)
10003ed8:	28adc83a 	sub	r22,r5,r2
10003edc:	0580310e 	bge	zero,r22,10003fa4 <___vfprintf_internal_r+0x9e0>
10003ee0:	07000404 	movi	fp,16
10003ee4:	d8801f17 	ldw	r2,124(sp)
10003ee8:	e584360e 	bge	fp,r22,10004fc4 <___vfprintf_internal_r+0x1a00>
10003eec:	01440074 	movhi	r5,4097
10003ef0:	29505484 	addi	r5,r5,16722
10003ef4:	dc402a15 	stw	r17,168(sp)
10003ef8:	d9402c15 	stw	r5,176(sp)
10003efc:	b023883a 	mov	r17,r22
10003f00:	04c001c4 	movi	r19,7
10003f04:	a82d883a 	mov	r22,r21
10003f08:	902b883a 	mov	r21,r18
10003f0c:	8025883a 	mov	r18,r16
10003f10:	dc002d17 	ldw	r16,180(sp)
10003f14:	00000306 	br	10003f24 <___vfprintf_internal_r+0x960>
10003f18:	8c7ffc04 	addi	r17,r17,-16
10003f1c:	42000204 	addi	r8,r8,8
10003f20:	e440110e 	bge	fp,r17,10003f68 <___vfprintf_internal_r+0x9a4>
10003f24:	18c00404 	addi	r3,r3,16
10003f28:	10800044 	addi	r2,r2,1
10003f2c:	45000015 	stw	r20,0(r8)
10003f30:	47000115 	stw	fp,4(r8)
10003f34:	d8c02015 	stw	r3,128(sp)
10003f38:	d8801f15 	stw	r2,124(sp)
10003f3c:	98bff60e 	bge	r19,r2,10003f18 <__alt_data_end+0xf8003f18>
10003f40:	d9801e04 	addi	r6,sp,120
10003f44:	b80b883a 	mov	r5,r23
10003f48:	8009883a 	mov	r4,r16
10003f4c:	000c3140 	call	1000c314 <__sprint_r>
10003f50:	103ea01e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10003f54:	8c7ffc04 	addi	r17,r17,-16
10003f58:	d8c02017 	ldw	r3,128(sp)
10003f5c:	d8801f17 	ldw	r2,124(sp)
10003f60:	da000404 	addi	r8,sp,16
10003f64:	e47fef16 	blt	fp,r17,10003f24 <__alt_data_end+0xf8003f24>
10003f68:	9021883a 	mov	r16,r18
10003f6c:	a825883a 	mov	r18,r21
10003f70:	b02b883a 	mov	r21,r22
10003f74:	882d883a 	mov	r22,r17
10003f78:	dc402a17 	ldw	r17,168(sp)
10003f7c:	d9002c17 	ldw	r4,176(sp)
10003f80:	1d87883a 	add	r3,r3,r22
10003f84:	10800044 	addi	r2,r2,1
10003f88:	41000015 	stw	r4,0(r8)
10003f8c:	45800115 	stw	r22,4(r8)
10003f90:	d8c02015 	stw	r3,128(sp)
10003f94:	d8801f15 	stw	r2,124(sp)
10003f98:	010001c4 	movi	r4,7
10003f9c:	20821016 	blt	r4,r2,100047e0 <___vfprintf_internal_r+0x121c>
10003fa0:	42000204 	addi	r8,r8,8
10003fa4:	9080400c 	andi	r2,r18,256
10003fa8:	10013a1e 	bne	r2,zero,10004494 <___vfprintf_internal_r+0xed0>
10003fac:	d9402b17 	ldw	r5,172(sp)
10003fb0:	d8801f17 	ldw	r2,124(sp)
10003fb4:	44000015 	stw	r16,0(r8)
10003fb8:	1947883a 	add	r3,r3,r5
10003fbc:	10800044 	addi	r2,r2,1
10003fc0:	41400115 	stw	r5,4(r8)
10003fc4:	d8c02015 	stw	r3,128(sp)
10003fc8:	d8801f15 	stw	r2,124(sp)
10003fcc:	010001c4 	movi	r4,7
10003fd0:	2081f516 	blt	r4,r2,100047a8 <___vfprintf_internal_r+0x11e4>
10003fd4:	42000204 	addi	r8,r8,8
10003fd8:	9480010c 	andi	r18,r18,4
10003fdc:	90003226 	beq	r18,zero,100040a8 <___vfprintf_internal_r+0xae4>
10003fe0:	d9403117 	ldw	r5,196(sp)
10003fe4:	d8802917 	ldw	r2,164(sp)
10003fe8:	28a1c83a 	sub	r16,r5,r2
10003fec:	04002e0e 	bge	zero,r16,100040a8 <___vfprintf_internal_r+0xae4>
10003ff0:	04400404 	movi	r17,16
10003ff4:	d8801f17 	ldw	r2,124(sp)
10003ff8:	8c04c40e 	bge	r17,r16,1000530c <___vfprintf_internal_r+0x1d48>
10003ffc:	01440074 	movhi	r5,4097
10004000:	29505884 	addi	r5,r5,16738
10004004:	d9403515 	stw	r5,212(sp)
10004008:	048001c4 	movi	r18,7
1000400c:	dcc02d17 	ldw	r19,180(sp)
10004010:	00000306 	br	10004020 <___vfprintf_internal_r+0xa5c>
10004014:	843ffc04 	addi	r16,r16,-16
10004018:	42000204 	addi	r8,r8,8
1000401c:	8c00130e 	bge	r17,r16,1000406c <___vfprintf_internal_r+0xaa8>
10004020:	01040074 	movhi	r4,4097
10004024:	18c00404 	addi	r3,r3,16
10004028:	10800044 	addi	r2,r2,1
1000402c:	21105884 	addi	r4,r4,16738
10004030:	41000015 	stw	r4,0(r8)
10004034:	44400115 	stw	r17,4(r8)
10004038:	d8c02015 	stw	r3,128(sp)
1000403c:	d8801f15 	stw	r2,124(sp)
10004040:	90bff40e 	bge	r18,r2,10004014 <__alt_data_end+0xf8004014>
10004044:	d9801e04 	addi	r6,sp,120
10004048:	b80b883a 	mov	r5,r23
1000404c:	9809883a 	mov	r4,r19
10004050:	000c3140 	call	1000c314 <__sprint_r>
10004054:	103e5f1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004058:	843ffc04 	addi	r16,r16,-16
1000405c:	d8c02017 	ldw	r3,128(sp)
10004060:	d8801f17 	ldw	r2,124(sp)
10004064:	da000404 	addi	r8,sp,16
10004068:	8c3fed16 	blt	r17,r16,10004020 <__alt_data_end+0xf8004020>
1000406c:	d9403517 	ldw	r5,212(sp)
10004070:	1c07883a 	add	r3,r3,r16
10004074:	10800044 	addi	r2,r2,1
10004078:	41400015 	stw	r5,0(r8)
1000407c:	44000115 	stw	r16,4(r8)
10004080:	d8c02015 	stw	r3,128(sp)
10004084:	d8801f15 	stw	r2,124(sp)
10004088:	010001c4 	movi	r4,7
1000408c:	2080060e 	bge	r4,r2,100040a8 <___vfprintf_internal_r+0xae4>
10004090:	d9002d17 	ldw	r4,180(sp)
10004094:	d9801e04 	addi	r6,sp,120
10004098:	b80b883a 	mov	r5,r23
1000409c:	000c3140 	call	1000c314 <__sprint_r>
100040a0:	103e4c1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100040a4:	d8c02017 	ldw	r3,128(sp)
100040a8:	d8803117 	ldw	r2,196(sp)
100040ac:	d9002917 	ldw	r4,164(sp)
100040b0:	1100010e 	bge	r2,r4,100040b8 <___vfprintf_internal_r+0xaf4>
100040b4:	2005883a 	mov	r2,r4
100040b8:	d9402f17 	ldw	r5,188(sp)
100040bc:	288b883a 	add	r5,r5,r2
100040c0:	d9402f15 	stw	r5,188(sp)
100040c4:	1801c01e 	bne	r3,zero,100047c8 <___vfprintf_internal_r+0x1204>
100040c8:	a8800007 	ldb	r2,0(r21)
100040cc:	d8001f15 	stw	zero,124(sp)
100040d0:	da000404 	addi	r8,sp,16
100040d4:	103d751e 	bne	r2,zero,100036ac <__alt_data_end+0xf80036ac>
100040d8:	a823883a 	mov	r17,r21
100040dc:	003d8b06 	br	1000370c <__alt_data_end+0xf800370c>
100040e0:	8025883a 	mov	r18,r16
100040e4:	dc002903 	ldbu	r16,164(sp)
100040e8:	e011883a 	mov	r8,fp
100040ec:	84003fcc 	andi	r16,r16,255
100040f0:	8005e51e 	bne	r16,zero,10005888 <___vfprintf_internal_r+0x22c4>
100040f4:	94800414 	ori	r18,r18,16
100040f8:	9080080c 	andi	r2,r18,32
100040fc:	10022b26 	beq	r2,zero,100049ac <___vfprintf_internal_r+0x13e8>
10004100:	d9002e17 	ldw	r4,184(sp)
10004104:	d9402a17 	ldw	r5,168(sp)
10004108:	d8002785 	stb	zero,158(sp)
1000410c:	20c00204 	addi	r3,r4,8
10004110:	24c00017 	ldw	r19,0(r4)
10004114:	25800117 	ldw	r22,4(r4)
10004118:	28042e16 	blt	r5,zero,100051d4 <___vfprintf_internal_r+0x1c10>
1000411c:	013fdfc4 	movi	r4,-129
10004120:	9d84b03a 	or	r2,r19,r22
10004124:	d8c02e15 	stw	r3,184(sp)
10004128:	9124703a 	and	r18,r18,r4
1000412c:	0039883a 	mov	fp,zero
10004130:	103e801e 	bne	r2,zero,10003b34 <__alt_data_end+0xf8003b34>
10004134:	d9002a17 	ldw	r4,168(sp)
10004138:	2002e01e 	bne	r4,zero,10004cbc <___vfprintf_internal_r+0x16f8>
1000413c:	d8002a15 	stw	zero,168(sp)
10004140:	d8002b15 	stw	zero,172(sp)
10004144:	dc001e04 	addi	r16,sp,120
10004148:	003ef506 	br	10003d20 <__alt_data_end+0xf8003d20>
1000414c:	8025883a 	mov	r18,r16
10004150:	dc002903 	ldbu	r16,164(sp)
10004154:	e011883a 	mov	r8,fp
10004158:	84003fcc 	andi	r16,r16,255
1000415c:	8005ba1e 	bne	r16,zero,10005848 <___vfprintf_internal_r+0x2284>
10004160:	01040074 	movhi	r4,4097
10004164:	21104004 	addi	r4,r4,16640
10004168:	d9003915 	stw	r4,228(sp)
1000416c:	9080080c 	andi	r2,r18,32
10004170:	10006126 	beq	r2,zero,100042f8 <___vfprintf_internal_r+0xd34>
10004174:	d9402e17 	ldw	r5,184(sp)
10004178:	2cc00017 	ldw	r19,0(r5)
1000417c:	2d800117 	ldw	r22,4(r5)
10004180:	29400204 	addi	r5,r5,8
10004184:	d9402e15 	stw	r5,184(sp)
10004188:	9080004c 	andi	r2,r18,1
1000418c:	1001ac26 	beq	r2,zero,10004840 <___vfprintf_internal_r+0x127c>
10004190:	9d84b03a 	or	r2,r19,r22
10004194:	10038526 	beq	r2,zero,10004fac <___vfprintf_internal_r+0x19e8>
10004198:	d8c02a17 	ldw	r3,168(sp)
1000419c:	00800c04 	movi	r2,48
100041a0:	d8802705 	stb	r2,156(sp)
100041a4:	dc402745 	stb	r17,157(sp)
100041a8:	d8002785 	stb	zero,158(sp)
100041ac:	90800094 	ori	r2,r18,2
100041b0:	18047916 	blt	r3,zero,10005398 <___vfprintf_internal_r+0x1dd4>
100041b4:	00bfdfc4 	movi	r2,-129
100041b8:	90a4703a 	and	r18,r18,r2
100041bc:	94800094 	ori	r18,r18,2
100041c0:	0039883a 	mov	fp,zero
100041c4:	d9003917 	ldw	r4,228(sp)
100041c8:	dc001e04 	addi	r16,sp,120
100041cc:	988003cc 	andi	r2,r19,15
100041d0:	b006973a 	slli	r3,r22,28
100041d4:	2085883a 	add	r2,r4,r2
100041d8:	9826d13a 	srli	r19,r19,4
100041dc:	10800003 	ldbu	r2,0(r2)
100041e0:	b02cd13a 	srli	r22,r22,4
100041e4:	843fffc4 	addi	r16,r16,-1
100041e8:	1ce6b03a 	or	r19,r3,r19
100041ec:	80800005 	stb	r2,0(r16)
100041f0:	9d84b03a 	or	r2,r19,r22
100041f4:	103ff51e 	bne	r2,zero,100041cc <__alt_data_end+0xf80041cc>
100041f8:	d8c02817 	ldw	r3,160(sp)
100041fc:	1c07c83a 	sub	r3,r3,r16
10004200:	d8c02b15 	stw	r3,172(sp)
10004204:	003ec606 	br	10003d20 <__alt_data_end+0xf8003d20>
10004208:	8025883a 	mov	r18,r16
1000420c:	dc002903 	ldbu	r16,164(sp)
10004210:	e011883a 	mov	r8,fp
10004214:	84003fcc 	andi	r16,r16,255
10004218:	803e9626 	beq	r16,zero,10003c74 <__alt_data_end+0xf8003c74>
1000421c:	d8c02b03 	ldbu	r3,172(sp)
10004220:	d8c02785 	stb	r3,158(sp)
10004224:	003e9306 	br	10003c74 <__alt_data_end+0xf8003c74>
10004228:	00c00044 	movi	r3,1
1000422c:	d8c02905 	stb	r3,164(sp)
10004230:	00c00ac4 	movi	r3,43
10004234:	d8c02b05 	stb	r3,172(sp)
10004238:	ac400007 	ldb	r17,0(r21)
1000423c:	003d4306 	br	1000374c <__alt_data_end+0xf800374c>
10004240:	84000814 	ori	r16,r16,32
10004244:	ac400007 	ldb	r17,0(r21)
10004248:	003d4006 	br	1000374c <__alt_data_end+0xf800374c>
1000424c:	d8802e17 	ldw	r2,184(sp)
10004250:	8025883a 	mov	r18,r16
10004254:	d8002785 	stb	zero,158(sp)
10004258:	14000017 	ldw	r16,0(r2)
1000425c:	e011883a 	mov	r8,fp
10004260:	14c00104 	addi	r19,r2,4
10004264:	80042d26 	beq	r16,zero,1000531c <___vfprintf_internal_r+0x1d58>
10004268:	d8c02a17 	ldw	r3,168(sp)
1000426c:	1803e416 	blt	r3,zero,10005200 <___vfprintf_internal_r+0x1c3c>
10004270:	180d883a 	mov	r6,r3
10004274:	000b883a 	mov	r5,zero
10004278:	8009883a 	mov	r4,r16
1000427c:	df003d15 	stw	fp,244(sp)
10004280:	0008efc0 	call	10008efc <memchr>
10004284:	da003d17 	ldw	r8,244(sp)
10004288:	10046826 	beq	r2,zero,1000542c <___vfprintf_internal_r+0x1e68>
1000428c:	1405c83a 	sub	r2,r2,r16
10004290:	d8802b15 	stw	r2,172(sp)
10004294:	1003e016 	blt	r2,zero,10005218 <___vfprintf_internal_r+0x1c54>
10004298:	df002783 	ldbu	fp,158(sp)
1000429c:	d8802915 	stw	r2,164(sp)
100042a0:	dcc02e15 	stw	r19,184(sp)
100042a4:	d8002a15 	stw	zero,168(sp)
100042a8:	d8003215 	stw	zero,200(sp)
100042ac:	003ea206 	br	10003d38 <__alt_data_end+0xf8003d38>
100042b0:	8025883a 	mov	r18,r16
100042b4:	dc002903 	ldbu	r16,164(sp)
100042b8:	e011883a 	mov	r8,fp
100042bc:	84003fcc 	andi	r16,r16,255
100042c0:	803f8d26 	beq	r16,zero,100040f8 <__alt_data_end+0xf80040f8>
100042c4:	d8c02b03 	ldbu	r3,172(sp)
100042c8:	d8c02785 	stb	r3,158(sp)
100042cc:	003f8a06 	br	100040f8 <__alt_data_end+0xf80040f8>
100042d0:	8025883a 	mov	r18,r16
100042d4:	dc002903 	ldbu	r16,164(sp)
100042d8:	e011883a 	mov	r8,fp
100042dc:	84003fcc 	andi	r16,r16,255
100042e0:	8005661e 	bne	r16,zero,1000587c <___vfprintf_internal_r+0x22b8>
100042e4:	01040074 	movhi	r4,4097
100042e8:	21104504 	addi	r4,r4,16660
100042ec:	d9003915 	stw	r4,228(sp)
100042f0:	9080080c 	andi	r2,r18,32
100042f4:	103f9f1e 	bne	r2,zero,10004174 <__alt_data_end+0xf8004174>
100042f8:	9080040c 	andi	r2,r18,16
100042fc:	1002eb26 	beq	r2,zero,10004eac <___vfprintf_internal_r+0x18e8>
10004300:	d8802e17 	ldw	r2,184(sp)
10004304:	002d883a 	mov	r22,zero
10004308:	14c00017 	ldw	r19,0(r2)
1000430c:	10800104 	addi	r2,r2,4
10004310:	d8802e15 	stw	r2,184(sp)
10004314:	003f9c06 	br	10004188 <__alt_data_end+0xf8004188>
10004318:	d8802b07 	ldb	r2,172(sp)
1000431c:	1002e11e 	bne	r2,zero,10004ea4 <___vfprintf_internal_r+0x18e0>
10004320:	00c00044 	movi	r3,1
10004324:	d8c02905 	stb	r3,164(sp)
10004328:	00c00804 	movi	r3,32
1000432c:	d8c02b05 	stb	r3,172(sp)
10004330:	ac400007 	ldb	r17,0(r21)
10004334:	003d0506 	br	1000374c <__alt_data_end+0xf800374c>
10004338:	84000054 	ori	r16,r16,1
1000433c:	ac400007 	ldb	r17,0(r21)
10004340:	003d0206 	br	1000374c <__alt_data_end+0xf800374c>
10004344:	8025883a 	mov	r18,r16
10004348:	dc002903 	ldbu	r16,164(sp)
1000434c:	e011883a 	mov	r8,fp
10004350:	84003fcc 	andi	r16,r16,255
10004354:	803de726 	beq	r16,zero,10003af4 <__alt_data_end+0xf8003af4>
10004358:	d8c02b03 	ldbu	r3,172(sp)
1000435c:	d8c02785 	stb	r3,158(sp)
10004360:	003de406 	br	10003af4 <__alt_data_end+0xf8003af4>
10004364:	84001014 	ori	r16,r16,64
10004368:	ac400007 	ldb	r17,0(r21)
1000436c:	003cf706 	br	1000374c <__alt_data_end+0xf800374c>
10004370:	ac400007 	ldb	r17,0(r21)
10004374:	00801b04 	movi	r2,108
10004378:	88838f26 	beq	r17,r2,100051b8 <___vfprintf_internal_r+0x1bf4>
1000437c:	84000414 	ori	r16,r16,16
10004380:	003cf206 	br	1000374c <__alt_data_end+0xf800374c>
10004384:	8025883a 	mov	r18,r16
10004388:	dc002903 	ldbu	r16,164(sp)
1000438c:	e011883a 	mov	r8,fp
10004390:	84003fcc 	andi	r16,r16,255
10004394:	80053f1e 	bne	r16,zero,10005894 <___vfprintf_internal_r+0x22d0>
10004398:	9080080c 	andi	r2,r18,32
1000439c:	1002d226 	beq	r2,zero,10004ee8 <___vfprintf_internal_r+0x1924>
100043a0:	d9002e17 	ldw	r4,184(sp)
100043a4:	d9402f17 	ldw	r5,188(sp)
100043a8:	20800017 	ldw	r2,0(r4)
100043ac:	2807d7fa 	srai	r3,r5,31
100043b0:	21000104 	addi	r4,r4,4
100043b4:	d9002e15 	stw	r4,184(sp)
100043b8:	11400015 	stw	r5,0(r2)
100043bc:	10c00115 	stw	r3,4(r2)
100043c0:	003cb806 	br	100036a4 <__alt_data_end+0xf80036a4>
100043c4:	d8c02e17 	ldw	r3,184(sp)
100043c8:	d9002e17 	ldw	r4,184(sp)
100043cc:	8025883a 	mov	r18,r16
100043d0:	18800017 	ldw	r2,0(r3)
100043d4:	21000104 	addi	r4,r4,4
100043d8:	00c00044 	movi	r3,1
100043dc:	e011883a 	mov	r8,fp
100043e0:	d8c02915 	stw	r3,164(sp)
100043e4:	d8002785 	stb	zero,158(sp)
100043e8:	d8801405 	stb	r2,80(sp)
100043ec:	d9002e15 	stw	r4,184(sp)
100043f0:	d8c02b15 	stw	r3,172(sp)
100043f4:	d8002a15 	stw	zero,168(sp)
100043f8:	d8003215 	stw	zero,200(sp)
100043fc:	dc001404 	addi	r16,sp,80
10004400:	0039883a 	mov	fp,zero
10004404:	003e5306 	br	10003d54 <__alt_data_end+0xf8003d54>
10004408:	01040074 	movhi	r4,4097
1000440c:	21104504 	addi	r4,r4,16660
10004410:	0039883a 	mov	fp,zero
10004414:	d9003915 	stw	r4,228(sp)
10004418:	04401e04 	movi	r17,120
1000441c:	003f6906 	br	100041c4 <__alt_data_end+0xf80041c4>
10004420:	8025883a 	mov	r18,r16
10004424:	dc002903 	ldbu	r16,164(sp)
10004428:	e011883a 	mov	r8,fp
1000442c:	84003fcc 	andi	r16,r16,255
10004430:	8005081e 	bne	r16,zero,10005854 <___vfprintf_internal_r+0x2290>
10004434:	883d6126 	beq	r17,zero,100039bc <__alt_data_end+0xf80039bc>
10004438:	00c00044 	movi	r3,1
1000443c:	d8c02915 	stw	r3,164(sp)
10004440:	dc401405 	stb	r17,80(sp)
10004444:	d8002785 	stb	zero,158(sp)
10004448:	003fe906 	br	100043f0 <__alt_data_end+0xf80043f0>
1000444c:	01440074 	movhi	r5,4097
10004450:	29504504 	addi	r5,r5,16660
10004454:	d9403915 	stw	r5,228(sp)
10004458:	d8c02e15 	stw	r3,184(sp)
1000445c:	1025883a 	mov	r18,r2
10004460:	04401e04 	movi	r17,120
10004464:	9d84b03a 	or	r2,r19,r22
10004468:	1000fc1e 	bne	r2,zero,1000485c <___vfprintf_internal_r+0x1298>
1000446c:	0039883a 	mov	fp,zero
10004470:	00800084 	movi	r2,2
10004474:	10803fcc 	andi	r2,r2,255
10004478:	00c00044 	movi	r3,1
1000447c:	10c20f26 	beq	r2,r3,10004cbc <___vfprintf_internal_r+0x16f8>
10004480:	00c00084 	movi	r3,2
10004484:	10fd3326 	beq	r2,r3,10003954 <__alt_data_end+0xf8003954>
10004488:	003e0b06 	br	10003cb8 <__alt_data_end+0xf8003cb8>
1000448c:	d8c02017 	ldw	r3,128(sp)
10004490:	003e7106 	br	10003e58 <__alt_data_end+0xf8003e58>
10004494:	00801944 	movi	r2,101
10004498:	14407e0e 	bge	r2,r17,10004694 <___vfprintf_internal_r+0x10d0>
1000449c:	d9003617 	ldw	r4,216(sp)
100044a0:	d9403817 	ldw	r5,224(sp)
100044a4:	000d883a 	mov	r6,zero
100044a8:	000f883a 	mov	r7,zero
100044ac:	d8c03c15 	stw	r3,240(sp)
100044b0:	da003d15 	stw	r8,244(sp)
100044b4:	00101a40 	call	100101a4 <__eqdf2>
100044b8:	d8c03c17 	ldw	r3,240(sp)
100044bc:	da003d17 	ldw	r8,244(sp)
100044c0:	1000f71e 	bne	r2,zero,100048a0 <___vfprintf_internal_r+0x12dc>
100044c4:	d8801f17 	ldw	r2,124(sp)
100044c8:	01040074 	movhi	r4,4097
100044cc:	21104c04 	addi	r4,r4,16688
100044d0:	18c00044 	addi	r3,r3,1
100044d4:	10800044 	addi	r2,r2,1
100044d8:	41000015 	stw	r4,0(r8)
100044dc:	01000044 	movi	r4,1
100044e0:	41000115 	stw	r4,4(r8)
100044e4:	d8c02015 	stw	r3,128(sp)
100044e8:	d8801f15 	stw	r2,124(sp)
100044ec:	010001c4 	movi	r4,7
100044f0:	2082b816 	blt	r4,r2,10004fd4 <___vfprintf_internal_r+0x1a10>
100044f4:	42000204 	addi	r8,r8,8
100044f8:	d8802617 	ldw	r2,152(sp)
100044fc:	d9403317 	ldw	r5,204(sp)
10004500:	11400216 	blt	r2,r5,1000450c <___vfprintf_internal_r+0xf48>
10004504:	9080004c 	andi	r2,r18,1
10004508:	103eb326 	beq	r2,zero,10003fd8 <__alt_data_end+0xf8003fd8>
1000450c:	d8803717 	ldw	r2,220(sp)
10004510:	d9003417 	ldw	r4,208(sp)
10004514:	d9403717 	ldw	r5,220(sp)
10004518:	1887883a 	add	r3,r3,r2
1000451c:	d8801f17 	ldw	r2,124(sp)
10004520:	41000015 	stw	r4,0(r8)
10004524:	41400115 	stw	r5,4(r8)
10004528:	10800044 	addi	r2,r2,1
1000452c:	d8c02015 	stw	r3,128(sp)
10004530:	d8801f15 	stw	r2,124(sp)
10004534:	010001c4 	movi	r4,7
10004538:	20832916 	blt	r4,r2,100051e0 <___vfprintf_internal_r+0x1c1c>
1000453c:	42000204 	addi	r8,r8,8
10004540:	d8803317 	ldw	r2,204(sp)
10004544:	143fffc4 	addi	r16,r2,-1
10004548:	043ea30e 	bge	zero,r16,10003fd8 <__alt_data_end+0xf8003fd8>
1000454c:	04400404 	movi	r17,16
10004550:	d8801f17 	ldw	r2,124(sp)
10004554:	8c00880e 	bge	r17,r16,10004778 <___vfprintf_internal_r+0x11b4>
10004558:	01440074 	movhi	r5,4097
1000455c:	29505484 	addi	r5,r5,16722
10004560:	d9402c15 	stw	r5,176(sp)
10004564:	058001c4 	movi	r22,7
10004568:	dcc02d17 	ldw	r19,180(sp)
1000456c:	00000306 	br	1000457c <___vfprintf_internal_r+0xfb8>
10004570:	42000204 	addi	r8,r8,8
10004574:	843ffc04 	addi	r16,r16,-16
10004578:	8c00820e 	bge	r17,r16,10004784 <___vfprintf_internal_r+0x11c0>
1000457c:	18c00404 	addi	r3,r3,16
10004580:	10800044 	addi	r2,r2,1
10004584:	45000015 	stw	r20,0(r8)
10004588:	44400115 	stw	r17,4(r8)
1000458c:	d8c02015 	stw	r3,128(sp)
10004590:	d8801f15 	stw	r2,124(sp)
10004594:	b0bff60e 	bge	r22,r2,10004570 <__alt_data_end+0xf8004570>
10004598:	d9801e04 	addi	r6,sp,120
1000459c:	b80b883a 	mov	r5,r23
100045a0:	9809883a 	mov	r4,r19
100045a4:	000c3140 	call	1000c314 <__sprint_r>
100045a8:	103d0a1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100045ac:	d8c02017 	ldw	r3,128(sp)
100045b0:	d8801f17 	ldw	r2,124(sp)
100045b4:	da000404 	addi	r8,sp,16
100045b8:	003fee06 	br	10004574 <__alt_data_end+0xf8004574>
100045bc:	d9403117 	ldw	r5,196(sp)
100045c0:	d8802917 	ldw	r2,164(sp)
100045c4:	28adc83a 	sub	r22,r5,r2
100045c8:	05be410e 	bge	zero,r22,10003ed0 <__alt_data_end+0xf8003ed0>
100045cc:	07000404 	movi	fp,16
100045d0:	d8801f17 	ldw	r2,124(sp)
100045d4:	e5838f0e 	bge	fp,r22,10005414 <___vfprintf_internal_r+0x1e50>
100045d8:	01440074 	movhi	r5,4097
100045dc:	29505484 	addi	r5,r5,16722
100045e0:	dc403015 	stw	r17,192(sp)
100045e4:	d9402c15 	stw	r5,176(sp)
100045e8:	b023883a 	mov	r17,r22
100045ec:	04c001c4 	movi	r19,7
100045f0:	a82d883a 	mov	r22,r21
100045f4:	902b883a 	mov	r21,r18
100045f8:	8025883a 	mov	r18,r16
100045fc:	dc002d17 	ldw	r16,180(sp)
10004600:	00000306 	br	10004610 <___vfprintf_internal_r+0x104c>
10004604:	8c7ffc04 	addi	r17,r17,-16
10004608:	42000204 	addi	r8,r8,8
1000460c:	e440110e 	bge	fp,r17,10004654 <___vfprintf_internal_r+0x1090>
10004610:	18c00404 	addi	r3,r3,16
10004614:	10800044 	addi	r2,r2,1
10004618:	45000015 	stw	r20,0(r8)
1000461c:	47000115 	stw	fp,4(r8)
10004620:	d8c02015 	stw	r3,128(sp)
10004624:	d8801f15 	stw	r2,124(sp)
10004628:	98bff60e 	bge	r19,r2,10004604 <__alt_data_end+0xf8004604>
1000462c:	d9801e04 	addi	r6,sp,120
10004630:	b80b883a 	mov	r5,r23
10004634:	8009883a 	mov	r4,r16
10004638:	000c3140 	call	1000c314 <__sprint_r>
1000463c:	103ce51e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004640:	8c7ffc04 	addi	r17,r17,-16
10004644:	d8c02017 	ldw	r3,128(sp)
10004648:	d8801f17 	ldw	r2,124(sp)
1000464c:	da000404 	addi	r8,sp,16
10004650:	e47fef16 	blt	fp,r17,10004610 <__alt_data_end+0xf8004610>
10004654:	9021883a 	mov	r16,r18
10004658:	a825883a 	mov	r18,r21
1000465c:	b02b883a 	mov	r21,r22
10004660:	882d883a 	mov	r22,r17
10004664:	dc403017 	ldw	r17,192(sp)
10004668:	d9002c17 	ldw	r4,176(sp)
1000466c:	1d87883a 	add	r3,r3,r22
10004670:	10800044 	addi	r2,r2,1
10004674:	41000015 	stw	r4,0(r8)
10004678:	45800115 	stw	r22,4(r8)
1000467c:	d8c02015 	stw	r3,128(sp)
10004680:	d8801f15 	stw	r2,124(sp)
10004684:	010001c4 	movi	r4,7
10004688:	20818e16 	blt	r4,r2,10004cc4 <___vfprintf_internal_r+0x1700>
1000468c:	42000204 	addi	r8,r8,8
10004690:	003e0f06 	br	10003ed0 <__alt_data_end+0xf8003ed0>
10004694:	d9403317 	ldw	r5,204(sp)
10004698:	00800044 	movi	r2,1
1000469c:	18c00044 	addi	r3,r3,1
100046a0:	1141530e 	bge	r2,r5,10004bf0 <___vfprintf_internal_r+0x162c>
100046a4:	dc401f17 	ldw	r17,124(sp)
100046a8:	00800044 	movi	r2,1
100046ac:	40800115 	stw	r2,4(r8)
100046b0:	8c400044 	addi	r17,r17,1
100046b4:	44000015 	stw	r16,0(r8)
100046b8:	d8c02015 	stw	r3,128(sp)
100046bc:	dc401f15 	stw	r17,124(sp)
100046c0:	008001c4 	movi	r2,7
100046c4:	14416b16 	blt	r2,r17,10004c74 <___vfprintf_internal_r+0x16b0>
100046c8:	42000204 	addi	r8,r8,8
100046cc:	d8803717 	ldw	r2,220(sp)
100046d0:	d9003417 	ldw	r4,208(sp)
100046d4:	8c400044 	addi	r17,r17,1
100046d8:	10c7883a 	add	r3,r2,r3
100046dc:	40800115 	stw	r2,4(r8)
100046e0:	41000015 	stw	r4,0(r8)
100046e4:	d8c02015 	stw	r3,128(sp)
100046e8:	dc401f15 	stw	r17,124(sp)
100046ec:	008001c4 	movi	r2,7
100046f0:	14416916 	blt	r2,r17,10004c98 <___vfprintf_internal_r+0x16d4>
100046f4:	45800204 	addi	r22,r8,8
100046f8:	d9003617 	ldw	r4,216(sp)
100046fc:	d9403817 	ldw	r5,224(sp)
10004700:	000d883a 	mov	r6,zero
10004704:	000f883a 	mov	r7,zero
10004708:	d8c03c15 	stw	r3,240(sp)
1000470c:	00101a40 	call	100101a4 <__eqdf2>
10004710:	d8c03c17 	ldw	r3,240(sp)
10004714:	1000bc26 	beq	r2,zero,10004a08 <___vfprintf_internal_r+0x1444>
10004718:	d9403317 	ldw	r5,204(sp)
1000471c:	84000044 	addi	r16,r16,1
10004720:	8c400044 	addi	r17,r17,1
10004724:	28bfffc4 	addi	r2,r5,-1
10004728:	1887883a 	add	r3,r3,r2
1000472c:	b0800115 	stw	r2,4(r22)
10004730:	b4000015 	stw	r16,0(r22)
10004734:	d8c02015 	stw	r3,128(sp)
10004738:	dc401f15 	stw	r17,124(sp)
1000473c:	008001c4 	movi	r2,7
10004740:	14414316 	blt	r2,r17,10004c50 <___vfprintf_internal_r+0x168c>
10004744:	b5800204 	addi	r22,r22,8
10004748:	d9003a17 	ldw	r4,232(sp)
1000474c:	df0022c4 	addi	fp,sp,139
10004750:	8c400044 	addi	r17,r17,1
10004754:	20c7883a 	add	r3,r4,r3
10004758:	b7000015 	stw	fp,0(r22)
1000475c:	b1000115 	stw	r4,4(r22)
10004760:	d8c02015 	stw	r3,128(sp)
10004764:	dc401f15 	stw	r17,124(sp)
10004768:	008001c4 	movi	r2,7
1000476c:	14400e16 	blt	r2,r17,100047a8 <___vfprintf_internal_r+0x11e4>
10004770:	b2000204 	addi	r8,r22,8
10004774:	003e1806 	br	10003fd8 <__alt_data_end+0xf8003fd8>
10004778:	01040074 	movhi	r4,4097
1000477c:	21105484 	addi	r4,r4,16722
10004780:	d9002c15 	stw	r4,176(sp)
10004784:	d9002c17 	ldw	r4,176(sp)
10004788:	1c07883a 	add	r3,r3,r16
1000478c:	44000115 	stw	r16,4(r8)
10004790:	41000015 	stw	r4,0(r8)
10004794:	10800044 	addi	r2,r2,1
10004798:	d8c02015 	stw	r3,128(sp)
1000479c:	d8801f15 	stw	r2,124(sp)
100047a0:	010001c4 	movi	r4,7
100047a4:	20be0b0e 	bge	r4,r2,10003fd4 <__alt_data_end+0xf8003fd4>
100047a8:	d9002d17 	ldw	r4,180(sp)
100047ac:	d9801e04 	addi	r6,sp,120
100047b0:	b80b883a 	mov	r5,r23
100047b4:	000c3140 	call	1000c314 <__sprint_r>
100047b8:	103c861e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100047bc:	d8c02017 	ldw	r3,128(sp)
100047c0:	da000404 	addi	r8,sp,16
100047c4:	003e0406 	br	10003fd8 <__alt_data_end+0xf8003fd8>
100047c8:	d9002d17 	ldw	r4,180(sp)
100047cc:	d9801e04 	addi	r6,sp,120
100047d0:	b80b883a 	mov	r5,r23
100047d4:	000c3140 	call	1000c314 <__sprint_r>
100047d8:	103e3b26 	beq	r2,zero,100040c8 <__alt_data_end+0xf80040c8>
100047dc:	003c7d06 	br	100039d4 <__alt_data_end+0xf80039d4>
100047e0:	d9002d17 	ldw	r4,180(sp)
100047e4:	d9801e04 	addi	r6,sp,120
100047e8:	b80b883a 	mov	r5,r23
100047ec:	000c3140 	call	1000c314 <__sprint_r>
100047f0:	103c781e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100047f4:	d8c02017 	ldw	r3,128(sp)
100047f8:	da000404 	addi	r8,sp,16
100047fc:	003de906 	br	10003fa4 <__alt_data_end+0xf8003fa4>
10004800:	d9002d17 	ldw	r4,180(sp)
10004804:	d9801e04 	addi	r6,sp,120
10004808:	b80b883a 	mov	r5,r23
1000480c:	000c3140 	call	1000c314 <__sprint_r>
10004810:	103c701e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004814:	d8c02017 	ldw	r3,128(sp)
10004818:	da000404 	addi	r8,sp,16
1000481c:	003d9b06 	br	10003e8c <__alt_data_end+0xf8003e8c>
10004820:	d9002d17 	ldw	r4,180(sp)
10004824:	d9801e04 	addi	r6,sp,120
10004828:	b80b883a 	mov	r5,r23
1000482c:	000c3140 	call	1000c314 <__sprint_r>
10004830:	103c681e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004834:	d8c02017 	ldw	r3,128(sp)
10004838:	da000404 	addi	r8,sp,16
1000483c:	003da106 	br	10003ec4 <__alt_data_end+0xf8003ec4>
10004840:	d9402a17 	ldw	r5,168(sp)
10004844:	d8002785 	stb	zero,158(sp)
10004848:	283f0616 	blt	r5,zero,10004464 <__alt_data_end+0xf8004464>
1000484c:	00ffdfc4 	movi	r3,-129
10004850:	9d84b03a 	or	r2,r19,r22
10004854:	90e4703a 	and	r18,r18,r3
10004858:	103c3b26 	beq	r2,zero,10003948 <__alt_data_end+0xf8003948>
1000485c:	0039883a 	mov	fp,zero
10004860:	003e5806 	br	100041c4 <__alt_data_end+0xf80041c4>
10004864:	9080040c 	andi	r2,r18,16
10004868:	1001b326 	beq	r2,zero,10004f38 <___vfprintf_internal_r+0x1974>
1000486c:	d8c02e17 	ldw	r3,184(sp)
10004870:	d9002a17 	ldw	r4,168(sp)
10004874:	d8002785 	stb	zero,158(sp)
10004878:	18800104 	addi	r2,r3,4
1000487c:	1cc00017 	ldw	r19,0(r3)
10004880:	002d883a 	mov	r22,zero
10004884:	2001b516 	blt	r4,zero,10004f5c <___vfprintf_internal_r+0x1998>
10004888:	00ffdfc4 	movi	r3,-129
1000488c:	d8802e15 	stw	r2,184(sp)
10004890:	90e4703a 	and	r18,r18,r3
10004894:	983d0526 	beq	r19,zero,10003cac <__alt_data_end+0xf8003cac>
10004898:	0039883a 	mov	fp,zero
1000489c:	003d0806 	br	10003cc0 <__alt_data_end+0xf8003cc0>
100048a0:	dc402617 	ldw	r17,152(sp)
100048a4:	0441d30e 	bge	zero,r17,10004ff4 <___vfprintf_internal_r+0x1a30>
100048a8:	dc403217 	ldw	r17,200(sp)
100048ac:	d8803317 	ldw	r2,204(sp)
100048b0:	1440010e 	bge	r2,r17,100048b8 <___vfprintf_internal_r+0x12f4>
100048b4:	1023883a 	mov	r17,r2
100048b8:	04400a0e 	bge	zero,r17,100048e4 <___vfprintf_internal_r+0x1320>
100048bc:	d8801f17 	ldw	r2,124(sp)
100048c0:	1c47883a 	add	r3,r3,r17
100048c4:	44000015 	stw	r16,0(r8)
100048c8:	10800044 	addi	r2,r2,1
100048cc:	44400115 	stw	r17,4(r8)
100048d0:	d8c02015 	stw	r3,128(sp)
100048d4:	d8801f15 	stw	r2,124(sp)
100048d8:	010001c4 	movi	r4,7
100048dc:	20826516 	blt	r4,r2,10005274 <___vfprintf_internal_r+0x1cb0>
100048e0:	42000204 	addi	r8,r8,8
100048e4:	88026116 	blt	r17,zero,1000526c <___vfprintf_internal_r+0x1ca8>
100048e8:	d9003217 	ldw	r4,200(sp)
100048ec:	2463c83a 	sub	r17,r4,r17
100048f0:	04407b0e 	bge	zero,r17,10004ae0 <___vfprintf_internal_r+0x151c>
100048f4:	05800404 	movi	r22,16
100048f8:	d8801f17 	ldw	r2,124(sp)
100048fc:	b4419d0e 	bge	r22,r17,10004f74 <___vfprintf_internal_r+0x19b0>
10004900:	01040074 	movhi	r4,4097
10004904:	21105484 	addi	r4,r4,16722
10004908:	d9002c15 	stw	r4,176(sp)
1000490c:	070001c4 	movi	fp,7
10004910:	dcc02d17 	ldw	r19,180(sp)
10004914:	00000306 	br	10004924 <___vfprintf_internal_r+0x1360>
10004918:	42000204 	addi	r8,r8,8
1000491c:	8c7ffc04 	addi	r17,r17,-16
10004920:	b441970e 	bge	r22,r17,10004f80 <___vfprintf_internal_r+0x19bc>
10004924:	18c00404 	addi	r3,r3,16
10004928:	10800044 	addi	r2,r2,1
1000492c:	45000015 	stw	r20,0(r8)
10004930:	45800115 	stw	r22,4(r8)
10004934:	d8c02015 	stw	r3,128(sp)
10004938:	d8801f15 	stw	r2,124(sp)
1000493c:	e0bff60e 	bge	fp,r2,10004918 <__alt_data_end+0xf8004918>
10004940:	d9801e04 	addi	r6,sp,120
10004944:	b80b883a 	mov	r5,r23
10004948:	9809883a 	mov	r4,r19
1000494c:	000c3140 	call	1000c314 <__sprint_r>
10004950:	103c201e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004954:	d8c02017 	ldw	r3,128(sp)
10004958:	d8801f17 	ldw	r2,124(sp)
1000495c:	da000404 	addi	r8,sp,16
10004960:	003fee06 	br	1000491c <__alt_data_end+0xf800491c>
10004964:	d9002d17 	ldw	r4,180(sp)
10004968:	d9801e04 	addi	r6,sp,120
1000496c:	b80b883a 	mov	r5,r23
10004970:	000c3140 	call	1000c314 <__sprint_r>
10004974:	103c171e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004978:	d8c02017 	ldw	r3,128(sp)
1000497c:	df002787 	ldb	fp,158(sp)
10004980:	da000404 	addi	r8,sp,16
10004984:	003d3406 	br	10003e58 <__alt_data_end+0xf8003e58>
10004988:	9080040c 	andi	r2,r18,16
1000498c:	10016126 	beq	r2,zero,10004f14 <___vfprintf_internal_r+0x1950>
10004990:	d9402e17 	ldw	r5,184(sp)
10004994:	2cc00017 	ldw	r19,0(r5)
10004998:	29400104 	addi	r5,r5,4
1000499c:	d9402e15 	stw	r5,184(sp)
100049a0:	982dd7fa 	srai	r22,r19,31
100049a4:	b005883a 	mov	r2,r22
100049a8:	003c5a06 	br	10003b14 <__alt_data_end+0xf8003b14>
100049ac:	9080040c 	andi	r2,r18,16
100049b0:	10003526 	beq	r2,zero,10004a88 <___vfprintf_internal_r+0x14c4>
100049b4:	d8c02e17 	ldw	r3,184(sp)
100049b8:	d9002a17 	ldw	r4,168(sp)
100049bc:	d8002785 	stb	zero,158(sp)
100049c0:	18800104 	addi	r2,r3,4
100049c4:	1cc00017 	ldw	r19,0(r3)
100049c8:	002d883a 	mov	r22,zero
100049cc:	20003716 	blt	r4,zero,10004aac <___vfprintf_internal_r+0x14e8>
100049d0:	00ffdfc4 	movi	r3,-129
100049d4:	d8802e15 	stw	r2,184(sp)
100049d8:	90e4703a 	and	r18,r18,r3
100049dc:	0039883a 	mov	fp,zero
100049e0:	983dd426 	beq	r19,zero,10004134 <__alt_data_end+0xf8004134>
100049e4:	00800244 	movi	r2,9
100049e8:	14fc5336 	bltu	r2,r19,10003b38 <__alt_data_end+0xf8003b38>
100049ec:	d8c02817 	ldw	r3,160(sp)
100049f0:	dc001dc4 	addi	r16,sp,119
100049f4:	9cc00c04 	addi	r19,r19,48
100049f8:	1c07c83a 	sub	r3,r3,r16
100049fc:	dcc01dc5 	stb	r19,119(sp)
10004a00:	d8c02b15 	stw	r3,172(sp)
10004a04:	003cc606 	br	10003d20 <__alt_data_end+0xf8003d20>
10004a08:	d8803317 	ldw	r2,204(sp)
10004a0c:	143fffc4 	addi	r16,r2,-1
10004a10:	043f4d0e 	bge	zero,r16,10004748 <__alt_data_end+0xf8004748>
10004a14:	07000404 	movi	fp,16
10004a18:	e400810e 	bge	fp,r16,10004c20 <___vfprintf_internal_r+0x165c>
10004a1c:	01440074 	movhi	r5,4097
10004a20:	29505484 	addi	r5,r5,16722
10004a24:	d9402c15 	stw	r5,176(sp)
10004a28:	01c001c4 	movi	r7,7
10004a2c:	dcc02d17 	ldw	r19,180(sp)
10004a30:	00000306 	br	10004a40 <___vfprintf_internal_r+0x147c>
10004a34:	b5800204 	addi	r22,r22,8
10004a38:	843ffc04 	addi	r16,r16,-16
10004a3c:	e4007b0e 	bge	fp,r16,10004c2c <___vfprintf_internal_r+0x1668>
10004a40:	18c00404 	addi	r3,r3,16
10004a44:	8c400044 	addi	r17,r17,1
10004a48:	b5000015 	stw	r20,0(r22)
10004a4c:	b7000115 	stw	fp,4(r22)
10004a50:	d8c02015 	stw	r3,128(sp)
10004a54:	dc401f15 	stw	r17,124(sp)
10004a58:	3c7ff60e 	bge	r7,r17,10004a34 <__alt_data_end+0xf8004a34>
10004a5c:	d9801e04 	addi	r6,sp,120
10004a60:	b80b883a 	mov	r5,r23
10004a64:	9809883a 	mov	r4,r19
10004a68:	d9c03c15 	stw	r7,240(sp)
10004a6c:	000c3140 	call	1000c314 <__sprint_r>
10004a70:	d9c03c17 	ldw	r7,240(sp)
10004a74:	103bd71e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004a78:	d8c02017 	ldw	r3,128(sp)
10004a7c:	dc401f17 	ldw	r17,124(sp)
10004a80:	dd800404 	addi	r22,sp,16
10004a84:	003fec06 	br	10004a38 <__alt_data_end+0xf8004a38>
10004a88:	9080100c 	andi	r2,r18,64
10004a8c:	d8002785 	stb	zero,158(sp)
10004a90:	10010e26 	beq	r2,zero,10004ecc <___vfprintf_internal_r+0x1908>
10004a94:	d9402e17 	ldw	r5,184(sp)
10004a98:	d8c02a17 	ldw	r3,168(sp)
10004a9c:	002d883a 	mov	r22,zero
10004aa0:	28800104 	addi	r2,r5,4
10004aa4:	2cc0000b 	ldhu	r19,0(r5)
10004aa8:	183fc90e 	bge	r3,zero,100049d0 <__alt_data_end+0xf80049d0>
10004aac:	d8802e15 	stw	r2,184(sp)
10004ab0:	0039883a 	mov	fp,zero
10004ab4:	9d84b03a 	or	r2,r19,r22
10004ab8:	103c1e1e 	bne	r2,zero,10003b34 <__alt_data_end+0xf8003b34>
10004abc:	00800044 	movi	r2,1
10004ac0:	003e6c06 	br	10004474 <__alt_data_end+0xf8004474>
10004ac4:	d9002d17 	ldw	r4,180(sp)
10004ac8:	d9801e04 	addi	r6,sp,120
10004acc:	b80b883a 	mov	r5,r23
10004ad0:	000c3140 	call	1000c314 <__sprint_r>
10004ad4:	103bbf1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004ad8:	d8c02017 	ldw	r3,128(sp)
10004adc:	da000404 	addi	r8,sp,16
10004ae0:	d9003217 	ldw	r4,200(sp)
10004ae4:	d8802617 	ldw	r2,152(sp)
10004ae8:	d9403317 	ldw	r5,204(sp)
10004aec:	8123883a 	add	r17,r16,r4
10004af0:	11400216 	blt	r2,r5,10004afc <___vfprintf_internal_r+0x1538>
10004af4:	9100004c 	andi	r4,r18,1
10004af8:	20000d26 	beq	r4,zero,10004b30 <___vfprintf_internal_r+0x156c>
10004afc:	d9003717 	ldw	r4,220(sp)
10004b00:	d9403417 	ldw	r5,208(sp)
10004b04:	1907883a 	add	r3,r3,r4
10004b08:	d9001f17 	ldw	r4,124(sp)
10004b0c:	41400015 	stw	r5,0(r8)
10004b10:	d9403717 	ldw	r5,220(sp)
10004b14:	21000044 	addi	r4,r4,1
10004b18:	d8c02015 	stw	r3,128(sp)
10004b1c:	41400115 	stw	r5,4(r8)
10004b20:	d9001f15 	stw	r4,124(sp)
10004b24:	014001c4 	movi	r5,7
10004b28:	2901e816 	blt	r5,r4,100052cc <___vfprintf_internal_r+0x1d08>
10004b2c:	42000204 	addi	r8,r8,8
10004b30:	d9003317 	ldw	r4,204(sp)
10004b34:	8121883a 	add	r16,r16,r4
10004b38:	2085c83a 	sub	r2,r4,r2
10004b3c:	8461c83a 	sub	r16,r16,r17
10004b40:	1400010e 	bge	r2,r16,10004b48 <___vfprintf_internal_r+0x1584>
10004b44:	1021883a 	mov	r16,r2
10004b48:	04000a0e 	bge	zero,r16,10004b74 <___vfprintf_internal_r+0x15b0>
10004b4c:	d9001f17 	ldw	r4,124(sp)
10004b50:	1c07883a 	add	r3,r3,r16
10004b54:	44400015 	stw	r17,0(r8)
10004b58:	21000044 	addi	r4,r4,1
10004b5c:	44000115 	stw	r16,4(r8)
10004b60:	d8c02015 	stw	r3,128(sp)
10004b64:	d9001f15 	stw	r4,124(sp)
10004b68:	014001c4 	movi	r5,7
10004b6c:	2901fb16 	blt	r5,r4,1000535c <___vfprintf_internal_r+0x1d98>
10004b70:	42000204 	addi	r8,r8,8
10004b74:	8001f716 	blt	r16,zero,10005354 <___vfprintf_internal_r+0x1d90>
10004b78:	1421c83a 	sub	r16,r2,r16
10004b7c:	043d160e 	bge	zero,r16,10003fd8 <__alt_data_end+0xf8003fd8>
10004b80:	04400404 	movi	r17,16
10004b84:	d8801f17 	ldw	r2,124(sp)
10004b88:	8c3efb0e 	bge	r17,r16,10004778 <__alt_data_end+0xf8004778>
10004b8c:	01440074 	movhi	r5,4097
10004b90:	29505484 	addi	r5,r5,16722
10004b94:	d9402c15 	stw	r5,176(sp)
10004b98:	058001c4 	movi	r22,7
10004b9c:	dcc02d17 	ldw	r19,180(sp)
10004ba0:	00000306 	br	10004bb0 <___vfprintf_internal_r+0x15ec>
10004ba4:	42000204 	addi	r8,r8,8
10004ba8:	843ffc04 	addi	r16,r16,-16
10004bac:	8c3ef50e 	bge	r17,r16,10004784 <__alt_data_end+0xf8004784>
10004bb0:	18c00404 	addi	r3,r3,16
10004bb4:	10800044 	addi	r2,r2,1
10004bb8:	45000015 	stw	r20,0(r8)
10004bbc:	44400115 	stw	r17,4(r8)
10004bc0:	d8c02015 	stw	r3,128(sp)
10004bc4:	d8801f15 	stw	r2,124(sp)
10004bc8:	b0bff60e 	bge	r22,r2,10004ba4 <__alt_data_end+0xf8004ba4>
10004bcc:	d9801e04 	addi	r6,sp,120
10004bd0:	b80b883a 	mov	r5,r23
10004bd4:	9809883a 	mov	r4,r19
10004bd8:	000c3140 	call	1000c314 <__sprint_r>
10004bdc:	103b7d1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004be0:	d8c02017 	ldw	r3,128(sp)
10004be4:	d8801f17 	ldw	r2,124(sp)
10004be8:	da000404 	addi	r8,sp,16
10004bec:	003fee06 	br	10004ba8 <__alt_data_end+0xf8004ba8>
10004bf0:	9088703a 	and	r4,r18,r2
10004bf4:	203eab1e 	bne	r4,zero,100046a4 <__alt_data_end+0xf80046a4>
10004bf8:	dc401f17 	ldw	r17,124(sp)
10004bfc:	40800115 	stw	r2,4(r8)
10004c00:	44000015 	stw	r16,0(r8)
10004c04:	8c400044 	addi	r17,r17,1
10004c08:	d8c02015 	stw	r3,128(sp)
10004c0c:	dc401f15 	stw	r17,124(sp)
10004c10:	008001c4 	movi	r2,7
10004c14:	14400e16 	blt	r2,r17,10004c50 <___vfprintf_internal_r+0x168c>
10004c18:	45800204 	addi	r22,r8,8
10004c1c:	003eca06 	br	10004748 <__alt_data_end+0xf8004748>
10004c20:	01040074 	movhi	r4,4097
10004c24:	21105484 	addi	r4,r4,16722
10004c28:	d9002c15 	stw	r4,176(sp)
10004c2c:	d8802c17 	ldw	r2,176(sp)
10004c30:	1c07883a 	add	r3,r3,r16
10004c34:	8c400044 	addi	r17,r17,1
10004c38:	b0800015 	stw	r2,0(r22)
10004c3c:	b4000115 	stw	r16,4(r22)
10004c40:	d8c02015 	stw	r3,128(sp)
10004c44:	dc401f15 	stw	r17,124(sp)
10004c48:	008001c4 	movi	r2,7
10004c4c:	147ebd0e 	bge	r2,r17,10004744 <__alt_data_end+0xf8004744>
10004c50:	d9002d17 	ldw	r4,180(sp)
10004c54:	d9801e04 	addi	r6,sp,120
10004c58:	b80b883a 	mov	r5,r23
10004c5c:	000c3140 	call	1000c314 <__sprint_r>
10004c60:	103b5c1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004c64:	d8c02017 	ldw	r3,128(sp)
10004c68:	dc401f17 	ldw	r17,124(sp)
10004c6c:	dd800404 	addi	r22,sp,16
10004c70:	003eb506 	br	10004748 <__alt_data_end+0xf8004748>
10004c74:	d9002d17 	ldw	r4,180(sp)
10004c78:	d9801e04 	addi	r6,sp,120
10004c7c:	b80b883a 	mov	r5,r23
10004c80:	000c3140 	call	1000c314 <__sprint_r>
10004c84:	103b531e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004c88:	d8c02017 	ldw	r3,128(sp)
10004c8c:	dc401f17 	ldw	r17,124(sp)
10004c90:	da000404 	addi	r8,sp,16
10004c94:	003e8d06 	br	100046cc <__alt_data_end+0xf80046cc>
10004c98:	d9002d17 	ldw	r4,180(sp)
10004c9c:	d9801e04 	addi	r6,sp,120
10004ca0:	b80b883a 	mov	r5,r23
10004ca4:	000c3140 	call	1000c314 <__sprint_r>
10004ca8:	103b4a1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004cac:	d8c02017 	ldw	r3,128(sp)
10004cb0:	dc401f17 	ldw	r17,124(sp)
10004cb4:	dd800404 	addi	r22,sp,16
10004cb8:	003e8f06 	br	100046f8 <__alt_data_end+0xf80046f8>
10004cbc:	0027883a 	mov	r19,zero
10004cc0:	003f4a06 	br	100049ec <__alt_data_end+0xf80049ec>
10004cc4:	d9002d17 	ldw	r4,180(sp)
10004cc8:	d9801e04 	addi	r6,sp,120
10004ccc:	b80b883a 	mov	r5,r23
10004cd0:	000c3140 	call	1000c314 <__sprint_r>
10004cd4:	103b3f1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004cd8:	d8c02017 	ldw	r3,128(sp)
10004cdc:	da000404 	addi	r8,sp,16
10004ce0:	003c7b06 	br	10003ed0 <__alt_data_end+0xf8003ed0>
10004ce4:	d9402a17 	ldw	r5,168(sp)
10004ce8:	04e7c83a 	sub	r19,zero,r19
10004cec:	07000b44 	movi	fp,45
10004cf0:	9804c03a 	cmpne	r2,r19,zero
10004cf4:	05adc83a 	sub	r22,zero,r22
10004cf8:	df002785 	stb	fp,158(sp)
10004cfc:	b0adc83a 	sub	r22,r22,r2
10004d00:	28017b16 	blt	r5,zero,100052f0 <___vfprintf_internal_r+0x1d2c>
10004d04:	00bfdfc4 	movi	r2,-129
10004d08:	90a4703a 	and	r18,r18,r2
10004d0c:	003b8906 	br	10003b34 <__alt_data_end+0xf8003b34>
10004d10:	d9003617 	ldw	r4,216(sp)
10004d14:	d9403817 	ldw	r5,224(sp)
10004d18:	da003d15 	stw	r8,244(sp)
10004d1c:	000a9c80 	call	1000a9c8 <__fpclassifyd>
10004d20:	da003d17 	ldw	r8,244(sp)
10004d24:	1000f026 	beq	r2,zero,100050e8 <___vfprintf_internal_r+0x1b24>
10004d28:	d9002a17 	ldw	r4,168(sp)
10004d2c:	05bff7c4 	movi	r22,-33
10004d30:	00bfffc4 	movi	r2,-1
10004d34:	8dac703a 	and	r22,r17,r22
10004d38:	20820026 	beq	r4,r2,1000553c <___vfprintf_internal_r+0x1f78>
10004d3c:	008011c4 	movi	r2,71
10004d40:	b081f726 	beq	r22,r2,10005520 <___vfprintf_internal_r+0x1f5c>
10004d44:	d9003817 	ldw	r4,224(sp)
10004d48:	90c04014 	ori	r3,r18,256
10004d4c:	d8c02c15 	stw	r3,176(sp)
10004d50:	20021516 	blt	r4,zero,100055a8 <___vfprintf_internal_r+0x1fe4>
10004d54:	dcc03817 	ldw	r19,224(sp)
10004d58:	d8002905 	stb	zero,164(sp)
10004d5c:	00801984 	movi	r2,102
10004d60:	8881f926 	beq	r17,r2,10005548 <___vfprintf_internal_r+0x1f84>
10004d64:	00801184 	movi	r2,70
10004d68:	88821c26 	beq	r17,r2,100055dc <___vfprintf_internal_r+0x2018>
10004d6c:	00801144 	movi	r2,69
10004d70:	b081ef26 	beq	r22,r2,10005530 <___vfprintf_internal_r+0x1f6c>
10004d74:	d8c02a17 	ldw	r3,168(sp)
10004d78:	d8802104 	addi	r2,sp,132
10004d7c:	d8800315 	stw	r2,12(sp)
10004d80:	d9403617 	ldw	r5,216(sp)
10004d84:	d8802504 	addi	r2,sp,148
10004d88:	d9002d17 	ldw	r4,180(sp)
10004d8c:	d8800215 	stw	r2,8(sp)
10004d90:	d8802604 	addi	r2,sp,152
10004d94:	d8c00015 	stw	r3,0(sp)
10004d98:	d8800115 	stw	r2,4(sp)
10004d9c:	01c00084 	movi	r7,2
10004da0:	980d883a 	mov	r6,r19
10004da4:	d8c03c15 	stw	r3,240(sp)
10004da8:	da003d15 	stw	r8,244(sp)
10004dac:	0005cf40 	call	10005cf4 <_dtoa_r>
10004db0:	1021883a 	mov	r16,r2
10004db4:	008019c4 	movi	r2,103
10004db8:	d8c03c17 	ldw	r3,240(sp)
10004dbc:	da003d17 	ldw	r8,244(sp)
10004dc0:	88817126 	beq	r17,r2,10005388 <___vfprintf_internal_r+0x1dc4>
10004dc4:	008011c4 	movi	r2,71
10004dc8:	88829126 	beq	r17,r2,10005810 <___vfprintf_internal_r+0x224c>
10004dcc:	80f9883a 	add	fp,r16,r3
10004dd0:	d9003617 	ldw	r4,216(sp)
10004dd4:	000d883a 	mov	r6,zero
10004dd8:	000f883a 	mov	r7,zero
10004ddc:	980b883a 	mov	r5,r19
10004de0:	da003d15 	stw	r8,244(sp)
10004de4:	00101a40 	call	100101a4 <__eqdf2>
10004de8:	da003d17 	ldw	r8,244(sp)
10004dec:	10018d26 	beq	r2,zero,10005424 <___vfprintf_internal_r+0x1e60>
10004df0:	d8802117 	ldw	r2,132(sp)
10004df4:	1700062e 	bgeu	r2,fp,10004e10 <___vfprintf_internal_r+0x184c>
10004df8:	01000c04 	movi	r4,48
10004dfc:	10c00044 	addi	r3,r2,1
10004e00:	d8c02115 	stw	r3,132(sp)
10004e04:	11000005 	stb	r4,0(r2)
10004e08:	d8802117 	ldw	r2,132(sp)
10004e0c:	173ffb36 	bltu	r2,fp,10004dfc <__alt_data_end+0xf8004dfc>
10004e10:	1405c83a 	sub	r2,r2,r16
10004e14:	d8803315 	stw	r2,204(sp)
10004e18:	008011c4 	movi	r2,71
10004e1c:	b0817626 	beq	r22,r2,100053f8 <___vfprintf_internal_r+0x1e34>
10004e20:	00801944 	movi	r2,101
10004e24:	1442800e 	bge	r2,r17,10005828 <___vfprintf_internal_r+0x2264>
10004e28:	d8c02617 	ldw	r3,152(sp)
10004e2c:	00801984 	movi	r2,102
10004e30:	d8c03215 	stw	r3,200(sp)
10004e34:	8881fe26 	beq	r17,r2,10005630 <___vfprintf_internal_r+0x206c>
10004e38:	d8c03217 	ldw	r3,200(sp)
10004e3c:	d9003317 	ldw	r4,204(sp)
10004e40:	1901dd16 	blt	r3,r4,100055b8 <___vfprintf_internal_r+0x1ff4>
10004e44:	9480004c 	andi	r18,r18,1
10004e48:	90022b1e 	bne	r18,zero,100056f8 <___vfprintf_internal_r+0x2134>
10004e4c:	1805883a 	mov	r2,r3
10004e50:	18028316 	blt	r3,zero,10005860 <___vfprintf_internal_r+0x229c>
10004e54:	d8c03217 	ldw	r3,200(sp)
10004e58:	044019c4 	movi	r17,103
10004e5c:	d8c02b15 	stw	r3,172(sp)
10004e60:	df002907 	ldb	fp,164(sp)
10004e64:	e001531e 	bne	fp,zero,100053b4 <___vfprintf_internal_r+0x1df0>
10004e68:	df002783 	ldbu	fp,158(sp)
10004e6c:	d8802915 	stw	r2,164(sp)
10004e70:	dc802c17 	ldw	r18,176(sp)
10004e74:	d8002a15 	stw	zero,168(sp)
10004e78:	003baf06 	br	10003d38 <__alt_data_end+0xf8003d38>
10004e7c:	d8c02e17 	ldw	r3,184(sp)
10004e80:	d9002e17 	ldw	r4,184(sp)
10004e84:	d9402e17 	ldw	r5,184(sp)
10004e88:	18c00017 	ldw	r3,0(r3)
10004e8c:	21000117 	ldw	r4,4(r4)
10004e90:	29400204 	addi	r5,r5,8
10004e94:	d8c03615 	stw	r3,216(sp)
10004e98:	d9003815 	stw	r4,224(sp)
10004e9c:	d9402e15 	stw	r5,184(sp)
10004ea0:	003b5006 	br	10003be4 <__alt_data_end+0xf8003be4>
10004ea4:	ac400007 	ldb	r17,0(r21)
10004ea8:	003a2806 	br	1000374c <__alt_data_end+0xf800374c>
10004eac:	9080100c 	andi	r2,r18,64
10004eb0:	1000a826 	beq	r2,zero,10005154 <___vfprintf_internal_r+0x1b90>
10004eb4:	d8c02e17 	ldw	r3,184(sp)
10004eb8:	002d883a 	mov	r22,zero
10004ebc:	1cc0000b 	ldhu	r19,0(r3)
10004ec0:	18c00104 	addi	r3,r3,4
10004ec4:	d8c02e15 	stw	r3,184(sp)
10004ec8:	003caf06 	br	10004188 <__alt_data_end+0xf8004188>
10004ecc:	d9002e17 	ldw	r4,184(sp)
10004ed0:	d9402a17 	ldw	r5,168(sp)
10004ed4:	002d883a 	mov	r22,zero
10004ed8:	20800104 	addi	r2,r4,4
10004edc:	24c00017 	ldw	r19,0(r4)
10004ee0:	283ebb0e 	bge	r5,zero,100049d0 <__alt_data_end+0xf80049d0>
10004ee4:	003ef106 	br	10004aac <__alt_data_end+0xf8004aac>
10004ee8:	9080040c 	andi	r2,r18,16
10004eec:	1000921e 	bne	r2,zero,10005138 <___vfprintf_internal_r+0x1b74>
10004ef0:	9480100c 	andi	r18,r18,64
10004ef4:	90013926 	beq	r18,zero,100053dc <___vfprintf_internal_r+0x1e18>
10004ef8:	d9402e17 	ldw	r5,184(sp)
10004efc:	d8c02f17 	ldw	r3,188(sp)
10004f00:	28800017 	ldw	r2,0(r5)
10004f04:	29400104 	addi	r5,r5,4
10004f08:	d9402e15 	stw	r5,184(sp)
10004f0c:	10c0000d 	sth	r3,0(r2)
10004f10:	0039e406 	br	100036a4 <__alt_data_end+0xf80036a4>
10004f14:	9080100c 	andi	r2,r18,64
10004f18:	10008026 	beq	r2,zero,1000511c <___vfprintf_internal_r+0x1b58>
10004f1c:	d8802e17 	ldw	r2,184(sp)
10004f20:	14c0000f 	ldh	r19,0(r2)
10004f24:	10800104 	addi	r2,r2,4
10004f28:	d8802e15 	stw	r2,184(sp)
10004f2c:	982dd7fa 	srai	r22,r19,31
10004f30:	b005883a 	mov	r2,r22
10004f34:	003af706 	br	10003b14 <__alt_data_end+0xf8003b14>
10004f38:	9080100c 	andi	r2,r18,64
10004f3c:	d8002785 	stb	zero,158(sp)
10004f40:	10008a1e 	bne	r2,zero,1000516c <___vfprintf_internal_r+0x1ba8>
10004f44:	d9002e17 	ldw	r4,184(sp)
10004f48:	d9402a17 	ldw	r5,168(sp)
10004f4c:	002d883a 	mov	r22,zero
10004f50:	20800104 	addi	r2,r4,4
10004f54:	24c00017 	ldw	r19,0(r4)
10004f58:	283e4b0e 	bge	r5,zero,10004888 <__alt_data_end+0xf8004888>
10004f5c:	9d86b03a 	or	r3,r19,r22
10004f60:	d8802e15 	stw	r2,184(sp)
10004f64:	183e4c1e 	bne	r3,zero,10004898 <__alt_data_end+0xf8004898>
10004f68:	0039883a 	mov	fp,zero
10004f6c:	0005883a 	mov	r2,zero
10004f70:	003d4006 	br	10004474 <__alt_data_end+0xf8004474>
10004f74:	01440074 	movhi	r5,4097
10004f78:	29505484 	addi	r5,r5,16722
10004f7c:	d9402c15 	stw	r5,176(sp)
10004f80:	d9402c17 	ldw	r5,176(sp)
10004f84:	1c47883a 	add	r3,r3,r17
10004f88:	10800044 	addi	r2,r2,1
10004f8c:	41400015 	stw	r5,0(r8)
10004f90:	44400115 	stw	r17,4(r8)
10004f94:	d8c02015 	stw	r3,128(sp)
10004f98:	d8801f15 	stw	r2,124(sp)
10004f9c:	010001c4 	movi	r4,7
10004fa0:	20bec816 	blt	r4,r2,10004ac4 <__alt_data_end+0xf8004ac4>
10004fa4:	42000204 	addi	r8,r8,8
10004fa8:	003ecd06 	br	10004ae0 <__alt_data_end+0xf8004ae0>
10004fac:	d9002a17 	ldw	r4,168(sp)
10004fb0:	d8002785 	stb	zero,158(sp)
10004fb4:	203d2d16 	blt	r4,zero,1000446c <__alt_data_end+0xf800446c>
10004fb8:	00bfdfc4 	movi	r2,-129
10004fbc:	90a4703a 	and	r18,r18,r2
10004fc0:	003a6106 	br	10003948 <__alt_data_end+0xf8003948>
10004fc4:	01040074 	movhi	r4,4097
10004fc8:	21105484 	addi	r4,r4,16722
10004fcc:	d9002c15 	stw	r4,176(sp)
10004fd0:	003bea06 	br	10003f7c <__alt_data_end+0xf8003f7c>
10004fd4:	d9002d17 	ldw	r4,180(sp)
10004fd8:	d9801e04 	addi	r6,sp,120
10004fdc:	b80b883a 	mov	r5,r23
10004fe0:	000c3140 	call	1000c314 <__sprint_r>
10004fe4:	103a7b1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10004fe8:	d8c02017 	ldw	r3,128(sp)
10004fec:	da000404 	addi	r8,sp,16
10004ff0:	003d4106 	br	100044f8 <__alt_data_end+0xf80044f8>
10004ff4:	d8801f17 	ldw	r2,124(sp)
10004ff8:	01440074 	movhi	r5,4097
10004ffc:	01000044 	movi	r4,1
10005000:	18c00044 	addi	r3,r3,1
10005004:	10800044 	addi	r2,r2,1
10005008:	29504c04 	addi	r5,r5,16688
1000500c:	41000115 	stw	r4,4(r8)
10005010:	41400015 	stw	r5,0(r8)
10005014:	d8c02015 	stw	r3,128(sp)
10005018:	d8801f15 	stw	r2,124(sp)
1000501c:	010001c4 	movi	r4,7
10005020:	20805c16 	blt	r4,r2,10005194 <___vfprintf_internal_r+0x1bd0>
10005024:	42000204 	addi	r8,r8,8
10005028:	8800041e 	bne	r17,zero,1000503c <___vfprintf_internal_r+0x1a78>
1000502c:	d8803317 	ldw	r2,204(sp)
10005030:	1000021e 	bne	r2,zero,1000503c <___vfprintf_internal_r+0x1a78>
10005034:	9080004c 	andi	r2,r18,1
10005038:	103be726 	beq	r2,zero,10003fd8 <__alt_data_end+0xf8003fd8>
1000503c:	d9003717 	ldw	r4,220(sp)
10005040:	d8801f17 	ldw	r2,124(sp)
10005044:	d9403417 	ldw	r5,208(sp)
10005048:	20c7883a 	add	r3,r4,r3
1000504c:	10800044 	addi	r2,r2,1
10005050:	41000115 	stw	r4,4(r8)
10005054:	41400015 	stw	r5,0(r8)
10005058:	d8c02015 	stw	r3,128(sp)
1000505c:	d8801f15 	stw	r2,124(sp)
10005060:	010001c4 	movi	r4,7
10005064:	20812116 	blt	r4,r2,100054ec <___vfprintf_internal_r+0x1f28>
10005068:	42000204 	addi	r8,r8,8
1000506c:	0463c83a 	sub	r17,zero,r17
10005070:	0440730e 	bge	zero,r17,10005240 <___vfprintf_internal_r+0x1c7c>
10005074:	05800404 	movi	r22,16
10005078:	b440860e 	bge	r22,r17,10005294 <___vfprintf_internal_r+0x1cd0>
1000507c:	01440074 	movhi	r5,4097
10005080:	29505484 	addi	r5,r5,16722
10005084:	d9402c15 	stw	r5,176(sp)
10005088:	070001c4 	movi	fp,7
1000508c:	dcc02d17 	ldw	r19,180(sp)
10005090:	00000306 	br	100050a0 <___vfprintf_internal_r+0x1adc>
10005094:	42000204 	addi	r8,r8,8
10005098:	8c7ffc04 	addi	r17,r17,-16
1000509c:	b440800e 	bge	r22,r17,100052a0 <___vfprintf_internal_r+0x1cdc>
100050a0:	18c00404 	addi	r3,r3,16
100050a4:	10800044 	addi	r2,r2,1
100050a8:	45000015 	stw	r20,0(r8)
100050ac:	45800115 	stw	r22,4(r8)
100050b0:	d8c02015 	stw	r3,128(sp)
100050b4:	d8801f15 	stw	r2,124(sp)
100050b8:	e0bff60e 	bge	fp,r2,10005094 <__alt_data_end+0xf8005094>
100050bc:	d9801e04 	addi	r6,sp,120
100050c0:	b80b883a 	mov	r5,r23
100050c4:	9809883a 	mov	r4,r19
100050c8:	000c3140 	call	1000c314 <__sprint_r>
100050cc:	103a411e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100050d0:	d8c02017 	ldw	r3,128(sp)
100050d4:	d8801f17 	ldw	r2,124(sp)
100050d8:	da000404 	addi	r8,sp,16
100050dc:	003fee06 	br	10005098 <__alt_data_end+0xf8005098>
100050e0:	00bfffc4 	movi	r2,-1
100050e4:	003a3f06 	br	100039e4 <__alt_data_end+0xf80039e4>
100050e8:	008011c4 	movi	r2,71
100050ec:	1440b816 	blt	r2,r17,100053d0 <___vfprintf_internal_r+0x1e0c>
100050f0:	04040074 	movhi	r16,4097
100050f4:	84103e04 	addi	r16,r16,16632
100050f8:	00c000c4 	movi	r3,3
100050fc:	00bfdfc4 	movi	r2,-129
10005100:	d8c02915 	stw	r3,164(sp)
10005104:	90a4703a 	and	r18,r18,r2
10005108:	df002783 	ldbu	fp,158(sp)
1000510c:	d8c02b15 	stw	r3,172(sp)
10005110:	d8002a15 	stw	zero,168(sp)
10005114:	d8003215 	stw	zero,200(sp)
10005118:	003b0706 	br	10003d38 <__alt_data_end+0xf8003d38>
1000511c:	d8c02e17 	ldw	r3,184(sp)
10005120:	1cc00017 	ldw	r19,0(r3)
10005124:	18c00104 	addi	r3,r3,4
10005128:	d8c02e15 	stw	r3,184(sp)
1000512c:	982dd7fa 	srai	r22,r19,31
10005130:	b005883a 	mov	r2,r22
10005134:	003a7706 	br	10003b14 <__alt_data_end+0xf8003b14>
10005138:	d8c02e17 	ldw	r3,184(sp)
1000513c:	d9002f17 	ldw	r4,188(sp)
10005140:	18800017 	ldw	r2,0(r3)
10005144:	18c00104 	addi	r3,r3,4
10005148:	d8c02e15 	stw	r3,184(sp)
1000514c:	11000015 	stw	r4,0(r2)
10005150:	00395406 	br	100036a4 <__alt_data_end+0xf80036a4>
10005154:	d9002e17 	ldw	r4,184(sp)
10005158:	002d883a 	mov	r22,zero
1000515c:	24c00017 	ldw	r19,0(r4)
10005160:	21000104 	addi	r4,r4,4
10005164:	d9002e15 	stw	r4,184(sp)
10005168:	003c0706 	br	10004188 <__alt_data_end+0xf8004188>
1000516c:	d9402e17 	ldw	r5,184(sp)
10005170:	d8c02a17 	ldw	r3,168(sp)
10005174:	002d883a 	mov	r22,zero
10005178:	28800104 	addi	r2,r5,4
1000517c:	2cc0000b 	ldhu	r19,0(r5)
10005180:	183dc10e 	bge	r3,zero,10004888 <__alt_data_end+0xf8004888>
10005184:	003f7506 	br	10004f5c <__alt_data_end+0xf8004f5c>
10005188:	04040074 	movhi	r16,4097
1000518c:	84103c04 	addi	r16,r16,16624
10005190:	003aa706 	br	10003c30 <__alt_data_end+0xf8003c30>
10005194:	d9002d17 	ldw	r4,180(sp)
10005198:	d9801e04 	addi	r6,sp,120
1000519c:	b80b883a 	mov	r5,r23
100051a0:	000c3140 	call	1000c314 <__sprint_r>
100051a4:	103a0b1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100051a8:	dc402617 	ldw	r17,152(sp)
100051ac:	d8c02017 	ldw	r3,128(sp)
100051b0:	da000404 	addi	r8,sp,16
100051b4:	003f9c06 	br	10005028 <__alt_data_end+0xf8005028>
100051b8:	ac400043 	ldbu	r17,1(r21)
100051bc:	84000814 	ori	r16,r16,32
100051c0:	ad400044 	addi	r21,r21,1
100051c4:	8c403fcc 	andi	r17,r17,255
100051c8:	8c40201c 	xori	r17,r17,128
100051cc:	8c7fe004 	addi	r17,r17,-128
100051d0:	00395e06 	br	1000374c <__alt_data_end+0xf800374c>
100051d4:	d8c02e15 	stw	r3,184(sp)
100051d8:	0039883a 	mov	fp,zero
100051dc:	003e3506 	br	10004ab4 <__alt_data_end+0xf8004ab4>
100051e0:	d9002d17 	ldw	r4,180(sp)
100051e4:	d9801e04 	addi	r6,sp,120
100051e8:	b80b883a 	mov	r5,r23
100051ec:	000c3140 	call	1000c314 <__sprint_r>
100051f0:	1039f81e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100051f4:	d8c02017 	ldw	r3,128(sp)
100051f8:	da000404 	addi	r8,sp,16
100051fc:	003cd006 	br	10004540 <__alt_data_end+0xf8004540>
10005200:	8009883a 	mov	r4,r16
10005204:	df003d15 	stw	fp,244(sp)
10005208:	00012700 	call	10001270 <strlen>
1000520c:	d8802b15 	stw	r2,172(sp)
10005210:	da003d17 	ldw	r8,244(sp)
10005214:	103c200e 	bge	r2,zero,10004298 <__alt_data_end+0xf8004298>
10005218:	0005883a 	mov	r2,zero
1000521c:	003c1e06 	br	10004298 <__alt_data_end+0xf8004298>
10005220:	d9002d17 	ldw	r4,180(sp)
10005224:	d9801e04 	addi	r6,sp,120
10005228:	b80b883a 	mov	r5,r23
1000522c:	000c3140 	call	1000c314 <__sprint_r>
10005230:	1039e81e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10005234:	d8c02017 	ldw	r3,128(sp)
10005238:	d8801f17 	ldw	r2,124(sp)
1000523c:	da000404 	addi	r8,sp,16
10005240:	d9403317 	ldw	r5,204(sp)
10005244:	10800044 	addi	r2,r2,1
10005248:	44000015 	stw	r16,0(r8)
1000524c:	28c7883a 	add	r3,r5,r3
10005250:	003b5b06 	br	10003fc0 <__alt_data_end+0xf8003fc0>
10005254:	01040074 	movhi	r4,4097
10005258:	21105884 	addi	r4,r4,16738
1000525c:	d9003515 	stw	r4,212(sp)
10005260:	003af206 	br	10003e2c <__alt_data_end+0xf8003e2c>
10005264:	013fffc4 	movi	r4,-1
10005268:	003a0806 	br	10003a8c <__alt_data_end+0xf8003a8c>
1000526c:	0023883a 	mov	r17,zero
10005270:	003d9d06 	br	100048e8 <__alt_data_end+0xf80048e8>
10005274:	d9002d17 	ldw	r4,180(sp)
10005278:	d9801e04 	addi	r6,sp,120
1000527c:	b80b883a 	mov	r5,r23
10005280:	000c3140 	call	1000c314 <__sprint_r>
10005284:	1039d31e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10005288:	d8c02017 	ldw	r3,128(sp)
1000528c:	da000404 	addi	r8,sp,16
10005290:	003d9406 	br	100048e4 <__alt_data_end+0xf80048e4>
10005294:	01040074 	movhi	r4,4097
10005298:	21105484 	addi	r4,r4,16722
1000529c:	d9002c15 	stw	r4,176(sp)
100052a0:	d9002c17 	ldw	r4,176(sp)
100052a4:	1c47883a 	add	r3,r3,r17
100052a8:	10800044 	addi	r2,r2,1
100052ac:	41000015 	stw	r4,0(r8)
100052b0:	44400115 	stw	r17,4(r8)
100052b4:	d8c02015 	stw	r3,128(sp)
100052b8:	d8801f15 	stw	r2,124(sp)
100052bc:	010001c4 	movi	r4,7
100052c0:	20bfd716 	blt	r4,r2,10005220 <__alt_data_end+0xf8005220>
100052c4:	42000204 	addi	r8,r8,8
100052c8:	003fdd06 	br	10005240 <__alt_data_end+0xf8005240>
100052cc:	d9002d17 	ldw	r4,180(sp)
100052d0:	d9801e04 	addi	r6,sp,120
100052d4:	b80b883a 	mov	r5,r23
100052d8:	000c3140 	call	1000c314 <__sprint_r>
100052dc:	1039bd1e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
100052e0:	d8802617 	ldw	r2,152(sp)
100052e4:	d8c02017 	ldw	r3,128(sp)
100052e8:	da000404 	addi	r8,sp,16
100052ec:	003e1006 	br	10004b30 <__alt_data_end+0xf8004b30>
100052f0:	00800044 	movi	r2,1
100052f4:	10803fcc 	andi	r2,r2,255
100052f8:	00c00044 	movi	r3,1
100052fc:	10fa0d26 	beq	r2,r3,10003b34 <__alt_data_end+0xf8003b34>
10005300:	00c00084 	movi	r3,2
10005304:	10fbaf26 	beq	r2,r3,100041c4 <__alt_data_end+0xf80041c4>
10005308:	003a6d06 	br	10003cc0 <__alt_data_end+0xf8003cc0>
1000530c:	01040074 	movhi	r4,4097
10005310:	21105884 	addi	r4,r4,16738
10005314:	d9003515 	stw	r4,212(sp)
10005318:	003b5406 	br	1000406c <__alt_data_end+0xf800406c>
1000531c:	d8802a17 	ldw	r2,168(sp)
10005320:	00c00184 	movi	r3,6
10005324:	1880012e 	bgeu	r3,r2,1000532c <___vfprintf_internal_r+0x1d68>
10005328:	1805883a 	mov	r2,r3
1000532c:	d8802b15 	stw	r2,172(sp)
10005330:	1000ef16 	blt	r2,zero,100056f0 <___vfprintf_internal_r+0x212c>
10005334:	04040074 	movhi	r16,4097
10005338:	d8802915 	stw	r2,164(sp)
1000533c:	dcc02e15 	stw	r19,184(sp)
10005340:	d8002a15 	stw	zero,168(sp)
10005344:	d8003215 	stw	zero,200(sp)
10005348:	84104a04 	addi	r16,r16,16680
1000534c:	0039883a 	mov	fp,zero
10005350:	003a8006 	br	10003d54 <__alt_data_end+0xf8003d54>
10005354:	0021883a 	mov	r16,zero
10005358:	003e0706 	br	10004b78 <__alt_data_end+0xf8004b78>
1000535c:	d9002d17 	ldw	r4,180(sp)
10005360:	d9801e04 	addi	r6,sp,120
10005364:	b80b883a 	mov	r5,r23
10005368:	000c3140 	call	1000c314 <__sprint_r>
1000536c:	1039991e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10005370:	d8802617 	ldw	r2,152(sp)
10005374:	d9403317 	ldw	r5,204(sp)
10005378:	d8c02017 	ldw	r3,128(sp)
1000537c:	da000404 	addi	r8,sp,16
10005380:	2885c83a 	sub	r2,r5,r2
10005384:	003dfb06 	br	10004b74 <__alt_data_end+0xf8004b74>
10005388:	9080004c 	andi	r2,r18,1
1000538c:	103e8f1e 	bne	r2,zero,10004dcc <__alt_data_end+0xf8004dcc>
10005390:	d8802117 	ldw	r2,132(sp)
10005394:	003e9e06 	br	10004e10 <__alt_data_end+0xf8004e10>
10005398:	1025883a 	mov	r18,r2
1000539c:	0039883a 	mov	fp,zero
100053a0:	00800084 	movi	r2,2
100053a4:	003fd306 	br	100052f4 <__alt_data_end+0xf80052f4>
100053a8:	07000b44 	movi	fp,45
100053ac:	df002785 	stb	fp,158(sp)
100053b0:	003a1b06 	br	10003c20 <__alt_data_end+0xf8003c20>
100053b4:	00c00b44 	movi	r3,45
100053b8:	d8c02785 	stb	r3,158(sp)
100053bc:	d8802915 	stw	r2,164(sp)
100053c0:	dc802c17 	ldw	r18,176(sp)
100053c4:	d8002a15 	stw	zero,168(sp)
100053c8:	07000b44 	movi	fp,45
100053cc:	003a5e06 	br	10003d48 <__alt_data_end+0xf8003d48>
100053d0:	04040074 	movhi	r16,4097
100053d4:	84103f04 	addi	r16,r16,16636
100053d8:	003f4706 	br	100050f8 <__alt_data_end+0xf80050f8>
100053dc:	d9002e17 	ldw	r4,184(sp)
100053e0:	d9402f17 	ldw	r5,188(sp)
100053e4:	20800017 	ldw	r2,0(r4)
100053e8:	21000104 	addi	r4,r4,4
100053ec:	d9002e15 	stw	r4,184(sp)
100053f0:	11400015 	stw	r5,0(r2)
100053f4:	0038ab06 	br	100036a4 <__alt_data_end+0xf80036a4>
100053f8:	dd802617 	ldw	r22,152(sp)
100053fc:	00bfff44 	movi	r2,-3
10005400:	b0801c16 	blt	r22,r2,10005474 <___vfprintf_internal_r+0x1eb0>
10005404:	d9402a17 	ldw	r5,168(sp)
10005408:	2d801a16 	blt	r5,r22,10005474 <___vfprintf_internal_r+0x1eb0>
1000540c:	dd803215 	stw	r22,200(sp)
10005410:	003e8906 	br	10004e38 <__alt_data_end+0xf8004e38>
10005414:	01040074 	movhi	r4,4097
10005418:	21105484 	addi	r4,r4,16722
1000541c:	d9002c15 	stw	r4,176(sp)
10005420:	003c9106 	br	10004668 <__alt_data_end+0xf8004668>
10005424:	e005883a 	mov	r2,fp
10005428:	003e7906 	br	10004e10 <__alt_data_end+0xf8004e10>
1000542c:	d9002a17 	ldw	r4,168(sp)
10005430:	df002783 	ldbu	fp,158(sp)
10005434:	dcc02e15 	stw	r19,184(sp)
10005438:	d9002915 	stw	r4,164(sp)
1000543c:	d9002b15 	stw	r4,172(sp)
10005440:	d8002a15 	stw	zero,168(sp)
10005444:	d8003215 	stw	zero,200(sp)
10005448:	003a3b06 	br	10003d38 <__alt_data_end+0xf8003d38>
1000544c:	9080004c 	andi	r2,r18,1
10005450:	0039883a 	mov	fp,zero
10005454:	10000426 	beq	r2,zero,10005468 <___vfprintf_internal_r+0x1ea4>
10005458:	00800c04 	movi	r2,48
1000545c:	dc001dc4 	addi	r16,sp,119
10005460:	d8801dc5 	stb	r2,119(sp)
10005464:	003b6406 	br	100041f8 <__alt_data_end+0xf80041f8>
10005468:	d8002b15 	stw	zero,172(sp)
1000546c:	dc001e04 	addi	r16,sp,120
10005470:	003a2b06 	br	10003d20 <__alt_data_end+0xf8003d20>
10005474:	8c7fff84 	addi	r17,r17,-2
10005478:	b5bfffc4 	addi	r22,r22,-1
1000547c:	dd802615 	stw	r22,152(sp)
10005480:	dc4022c5 	stb	r17,139(sp)
10005484:	b000bf16 	blt	r22,zero,10005784 <___vfprintf_internal_r+0x21c0>
10005488:	00800ac4 	movi	r2,43
1000548c:	d8802305 	stb	r2,140(sp)
10005490:	00800244 	movi	r2,9
10005494:	15807016 	blt	r2,r22,10005658 <___vfprintf_internal_r+0x2094>
10005498:	00800c04 	movi	r2,48
1000549c:	b5800c04 	addi	r22,r22,48
100054a0:	d8802345 	stb	r2,141(sp)
100054a4:	dd802385 	stb	r22,142(sp)
100054a8:	d88023c4 	addi	r2,sp,143
100054ac:	df0022c4 	addi	fp,sp,139
100054b0:	d8c03317 	ldw	r3,204(sp)
100054b4:	1739c83a 	sub	fp,r2,fp
100054b8:	d9003317 	ldw	r4,204(sp)
100054bc:	e0c7883a 	add	r3,fp,r3
100054c0:	df003a15 	stw	fp,232(sp)
100054c4:	d8c02b15 	stw	r3,172(sp)
100054c8:	00800044 	movi	r2,1
100054cc:	1100b30e 	bge	r2,r4,1000579c <___vfprintf_internal_r+0x21d8>
100054d0:	d8c02b17 	ldw	r3,172(sp)
100054d4:	18c00044 	addi	r3,r3,1
100054d8:	d8c02b15 	stw	r3,172(sp)
100054dc:	1805883a 	mov	r2,r3
100054e0:	1800ac16 	blt	r3,zero,10005794 <___vfprintf_internal_r+0x21d0>
100054e4:	d8003215 	stw	zero,200(sp)
100054e8:	003e5d06 	br	10004e60 <__alt_data_end+0xf8004e60>
100054ec:	d9002d17 	ldw	r4,180(sp)
100054f0:	d9801e04 	addi	r6,sp,120
100054f4:	b80b883a 	mov	r5,r23
100054f8:	000c3140 	call	1000c314 <__sprint_r>
100054fc:	1039351e 	bne	r2,zero,100039d4 <__alt_data_end+0xf80039d4>
10005500:	dc402617 	ldw	r17,152(sp)
10005504:	d8c02017 	ldw	r3,128(sp)
10005508:	d8801f17 	ldw	r2,124(sp)
1000550c:	da000404 	addi	r8,sp,16
10005510:	003ed606 	br	1000506c <__alt_data_end+0xf800506c>
10005514:	182b883a 	mov	r21,r3
10005518:	d8002a15 	stw	zero,168(sp)
1000551c:	00388c06 	br	10003750 <__alt_data_end+0xf8003750>
10005520:	d8802a17 	ldw	r2,168(sp)
10005524:	103e071e 	bne	r2,zero,10004d44 <__alt_data_end+0xf8004d44>
10005528:	dc002a15 	stw	r16,168(sp)
1000552c:	003e0506 	br	10004d44 <__alt_data_end+0xf8004d44>
10005530:	d9002a17 	ldw	r4,168(sp)
10005534:	20c00044 	addi	r3,r4,1
10005538:	003e0f06 	br	10004d78 <__alt_data_end+0xf8004d78>
1000553c:	01400184 	movi	r5,6
10005540:	d9402a15 	stw	r5,168(sp)
10005544:	003dff06 	br	10004d44 <__alt_data_end+0xf8004d44>
10005548:	d8802104 	addi	r2,sp,132
1000554c:	d8800315 	stw	r2,12(sp)
10005550:	d8802504 	addi	r2,sp,148
10005554:	d8800215 	stw	r2,8(sp)
10005558:	d8802604 	addi	r2,sp,152
1000555c:	d8800115 	stw	r2,4(sp)
10005560:	d8802a17 	ldw	r2,168(sp)
10005564:	d9403617 	ldw	r5,216(sp)
10005568:	d9002d17 	ldw	r4,180(sp)
1000556c:	d8800015 	stw	r2,0(sp)
10005570:	01c000c4 	movi	r7,3
10005574:	980d883a 	mov	r6,r19
10005578:	da003d15 	stw	r8,244(sp)
1000557c:	0005cf40 	call	10005cf4 <_dtoa_r>
10005580:	d8c02a17 	ldw	r3,168(sp)
10005584:	da003d17 	ldw	r8,244(sp)
10005588:	1021883a 	mov	r16,r2
1000558c:	10f9883a 	add	fp,r2,r3
10005590:	81000007 	ldb	r4,0(r16)
10005594:	00800c04 	movi	r2,48
10005598:	20805e26 	beq	r4,r2,10005714 <___vfprintf_internal_r+0x2150>
1000559c:	d8c02617 	ldw	r3,152(sp)
100055a0:	e0f9883a 	add	fp,fp,r3
100055a4:	003e0a06 	br	10004dd0 <__alt_data_end+0xf8004dd0>
100055a8:	00c00b44 	movi	r3,45
100055ac:	24e0003c 	xorhi	r19,r4,32768
100055b0:	d8c02905 	stb	r3,164(sp)
100055b4:	003de906 	br	10004d5c <__alt_data_end+0xf8004d5c>
100055b8:	d8c03217 	ldw	r3,200(sp)
100055bc:	00c07a0e 	bge	zero,r3,100057a8 <___vfprintf_internal_r+0x21e4>
100055c0:	00800044 	movi	r2,1
100055c4:	d9003317 	ldw	r4,204(sp)
100055c8:	1105883a 	add	r2,r2,r4
100055cc:	d8802b15 	stw	r2,172(sp)
100055d0:	10004e16 	blt	r2,zero,1000570c <___vfprintf_internal_r+0x2148>
100055d4:	044019c4 	movi	r17,103
100055d8:	003e2106 	br	10004e60 <__alt_data_end+0xf8004e60>
100055dc:	d9002a17 	ldw	r4,168(sp)
100055e0:	d8802104 	addi	r2,sp,132
100055e4:	d8800315 	stw	r2,12(sp)
100055e8:	d9000015 	stw	r4,0(sp)
100055ec:	d8802504 	addi	r2,sp,148
100055f0:	d9403617 	ldw	r5,216(sp)
100055f4:	d9002d17 	ldw	r4,180(sp)
100055f8:	d8800215 	stw	r2,8(sp)
100055fc:	d8802604 	addi	r2,sp,152
10005600:	d8800115 	stw	r2,4(sp)
10005604:	01c000c4 	movi	r7,3
10005608:	980d883a 	mov	r6,r19
1000560c:	da003d15 	stw	r8,244(sp)
10005610:	0005cf40 	call	10005cf4 <_dtoa_r>
10005614:	d8c02a17 	ldw	r3,168(sp)
10005618:	da003d17 	ldw	r8,244(sp)
1000561c:	1021883a 	mov	r16,r2
10005620:	00801184 	movi	r2,70
10005624:	80f9883a 	add	fp,r16,r3
10005628:	88bfd926 	beq	r17,r2,10005590 <__alt_data_end+0xf8005590>
1000562c:	003de806 	br	10004dd0 <__alt_data_end+0xf8004dd0>
10005630:	d9002a17 	ldw	r4,168(sp)
10005634:	00c04d0e 	bge	zero,r3,1000576c <___vfprintf_internal_r+0x21a8>
10005638:	2000441e 	bne	r4,zero,1000574c <___vfprintf_internal_r+0x2188>
1000563c:	9480004c 	andi	r18,r18,1
10005640:	9000421e 	bne	r18,zero,1000574c <___vfprintf_internal_r+0x2188>
10005644:	1805883a 	mov	r2,r3
10005648:	18006f16 	blt	r3,zero,10005808 <___vfprintf_internal_r+0x2244>
1000564c:	d8c03217 	ldw	r3,200(sp)
10005650:	d8c02b15 	stw	r3,172(sp)
10005654:	003e0206 	br	10004e60 <__alt_data_end+0xf8004e60>
10005658:	df0022c4 	addi	fp,sp,139
1000565c:	dc002a15 	stw	r16,168(sp)
10005660:	4027883a 	mov	r19,r8
10005664:	e021883a 	mov	r16,fp
10005668:	b009883a 	mov	r4,r22
1000566c:	01400284 	movi	r5,10
10005670:	0000e980 	call	10000e98 <__modsi3>
10005674:	10800c04 	addi	r2,r2,48
10005678:	843fffc4 	addi	r16,r16,-1
1000567c:	b009883a 	mov	r4,r22
10005680:	01400284 	movi	r5,10
10005684:	80800005 	stb	r2,0(r16)
10005688:	0000e140 	call	10000e14 <__divsi3>
1000568c:	102d883a 	mov	r22,r2
10005690:	00800244 	movi	r2,9
10005694:	15bff416 	blt	r2,r22,10005668 <__alt_data_end+0xf8005668>
10005698:	9811883a 	mov	r8,r19
1000569c:	b0800c04 	addi	r2,r22,48
100056a0:	8027883a 	mov	r19,r16
100056a4:	997fffc4 	addi	r5,r19,-1
100056a8:	98bfffc5 	stb	r2,-1(r19)
100056ac:	dc002a17 	ldw	r16,168(sp)
100056b0:	2f006d2e 	bgeu	r5,fp,10005868 <___vfprintf_internal_r+0x22a4>
100056b4:	d9c02384 	addi	r7,sp,142
100056b8:	3ccfc83a 	sub	r7,r7,r19
100056bc:	d9002344 	addi	r4,sp,141
100056c0:	e1cf883a 	add	r7,fp,r7
100056c4:	00000106 	br	100056cc <___vfprintf_internal_r+0x2108>
100056c8:	28800003 	ldbu	r2,0(r5)
100056cc:	20800005 	stb	r2,0(r4)
100056d0:	21000044 	addi	r4,r4,1
100056d4:	29400044 	addi	r5,r5,1
100056d8:	393ffb1e 	bne	r7,r4,100056c8 <__alt_data_end+0xf80056c8>
100056dc:	d8802304 	addi	r2,sp,140
100056e0:	14c5c83a 	sub	r2,r2,r19
100056e4:	d8c02344 	addi	r3,sp,141
100056e8:	1885883a 	add	r2,r3,r2
100056ec:	003f7006 	br	100054b0 <__alt_data_end+0xf80054b0>
100056f0:	0005883a 	mov	r2,zero
100056f4:	003f0f06 	br	10005334 <__alt_data_end+0xf8005334>
100056f8:	d8c03217 	ldw	r3,200(sp)
100056fc:	18c00044 	addi	r3,r3,1
10005700:	d8c02b15 	stw	r3,172(sp)
10005704:	1805883a 	mov	r2,r3
10005708:	183fb20e 	bge	r3,zero,100055d4 <__alt_data_end+0xf80055d4>
1000570c:	0005883a 	mov	r2,zero
10005710:	003fb006 	br	100055d4 <__alt_data_end+0xf80055d4>
10005714:	d9003617 	ldw	r4,216(sp)
10005718:	000d883a 	mov	r6,zero
1000571c:	000f883a 	mov	r7,zero
10005720:	980b883a 	mov	r5,r19
10005724:	d8c03c15 	stw	r3,240(sp)
10005728:	da003d15 	stw	r8,244(sp)
1000572c:	00101a40 	call	100101a4 <__eqdf2>
10005730:	d8c03c17 	ldw	r3,240(sp)
10005734:	da003d17 	ldw	r8,244(sp)
10005738:	103f9826 	beq	r2,zero,1000559c <__alt_data_end+0xf800559c>
1000573c:	00800044 	movi	r2,1
10005740:	10c7c83a 	sub	r3,r2,r3
10005744:	d8c02615 	stw	r3,152(sp)
10005748:	003f9506 	br	100055a0 <__alt_data_end+0xf80055a0>
1000574c:	d9002a17 	ldw	r4,168(sp)
10005750:	d8c03217 	ldw	r3,200(sp)
10005754:	20800044 	addi	r2,r4,1
10005758:	1885883a 	add	r2,r3,r2
1000575c:	d8802b15 	stw	r2,172(sp)
10005760:	103dbf0e 	bge	r2,zero,10004e60 <__alt_data_end+0xf8004e60>
10005764:	0005883a 	mov	r2,zero
10005768:	003dbd06 	br	10004e60 <__alt_data_end+0xf8004e60>
1000576c:	2000201e 	bne	r4,zero,100057f0 <___vfprintf_internal_r+0x222c>
10005770:	9480004c 	andi	r18,r18,1
10005774:	90001e1e 	bne	r18,zero,100057f0 <___vfprintf_internal_r+0x222c>
10005778:	00800044 	movi	r2,1
1000577c:	d8802b15 	stw	r2,172(sp)
10005780:	003db706 	br	10004e60 <__alt_data_end+0xf8004e60>
10005784:	00800b44 	movi	r2,45
10005788:	05adc83a 	sub	r22,zero,r22
1000578c:	d8802305 	stb	r2,140(sp)
10005790:	003f3f06 	br	10005490 <__alt_data_end+0xf8005490>
10005794:	0005883a 	mov	r2,zero
10005798:	003f5206 	br	100054e4 <__alt_data_end+0xf80054e4>
1000579c:	90a4703a 	and	r18,r18,r2
100057a0:	903f4e26 	beq	r18,zero,100054dc <__alt_data_end+0xf80054dc>
100057a4:	003f4a06 	br	100054d0 <__alt_data_end+0xf80054d0>
100057a8:	00800084 	movi	r2,2
100057ac:	10c5c83a 	sub	r2,r2,r3
100057b0:	003f8406 	br	100055c4 <__alt_data_end+0xf80055c4>
100057b4:	d9402e17 	ldw	r5,184(sp)
100057b8:	d9002e17 	ldw	r4,184(sp)
100057bc:	ac400043 	ldbu	r17,1(r21)
100057c0:	29400017 	ldw	r5,0(r5)
100057c4:	20800104 	addi	r2,r4,4
100057c8:	d8802e15 	stw	r2,184(sp)
100057cc:	d9402a15 	stw	r5,168(sp)
100057d0:	182b883a 	mov	r21,r3
100057d4:	283e7b0e 	bge	r5,zero,100051c4 <__alt_data_end+0xf80051c4>
100057d8:	8c403fcc 	andi	r17,r17,255
100057dc:	017fffc4 	movi	r5,-1
100057e0:	8c40201c 	xori	r17,r17,128
100057e4:	d9402a15 	stw	r5,168(sp)
100057e8:	8c7fe004 	addi	r17,r17,-128
100057ec:	0037d706 	br	1000374c <__alt_data_end+0xf800374c>
100057f0:	d8c02a17 	ldw	r3,168(sp)
100057f4:	18c00084 	addi	r3,r3,2
100057f8:	d8c02b15 	stw	r3,172(sp)
100057fc:	1805883a 	mov	r2,r3
10005800:	183d970e 	bge	r3,zero,10004e60 <__alt_data_end+0xf8004e60>
10005804:	003fd706 	br	10005764 <__alt_data_end+0xf8005764>
10005808:	0005883a 	mov	r2,zero
1000580c:	003f8f06 	br	1000564c <__alt_data_end+0xf800564c>
10005810:	9080004c 	andi	r2,r18,1
10005814:	103f821e 	bne	r2,zero,10005620 <__alt_data_end+0xf8005620>
10005818:	d8802117 	ldw	r2,132(sp)
1000581c:	1405c83a 	sub	r2,r2,r16
10005820:	d8803315 	stw	r2,204(sp)
10005824:	b47ef426 	beq	r22,r17,100053f8 <__alt_data_end+0xf80053f8>
10005828:	dd802617 	ldw	r22,152(sp)
1000582c:	003f1206 	br	10005478 <__alt_data_end+0xf8005478>
10005830:	d8c02b03 	ldbu	r3,172(sp)
10005834:	d8c02785 	stb	r3,158(sp)
10005838:	0038df06 	br	10003bb8 <__alt_data_end+0xf8003bb8>
1000583c:	d8c02b03 	ldbu	r3,172(sp)
10005840:	d8c02785 	stb	r3,158(sp)
10005844:	0038aa06 	br	10003af0 <__alt_data_end+0xf8003af0>
10005848:	d8c02b03 	ldbu	r3,172(sp)
1000584c:	d8c02785 	stb	r3,158(sp)
10005850:	003a4306 	br	10004160 <__alt_data_end+0xf8004160>
10005854:	d8c02b03 	ldbu	r3,172(sp)
10005858:	d8c02785 	stb	r3,158(sp)
1000585c:	003af506 	br	10004434 <__alt_data_end+0xf8004434>
10005860:	0005883a 	mov	r2,zero
10005864:	003d7b06 	br	10004e54 <__alt_data_end+0xf8004e54>
10005868:	d8802344 	addi	r2,sp,141
1000586c:	003f1006 	br	100054b0 <__alt_data_end+0xf80054b0>
10005870:	d8c02b03 	ldbu	r3,172(sp)
10005874:	d8c02785 	stb	r3,158(sp)
10005878:	0038fd06 	br	10003c70 <__alt_data_end+0xf8003c70>
1000587c:	d8c02b03 	ldbu	r3,172(sp)
10005880:	d8c02785 	stb	r3,158(sp)
10005884:	003a9706 	br	100042e4 <__alt_data_end+0xf80042e4>
10005888:	d8c02b03 	ldbu	r3,172(sp)
1000588c:	d8c02785 	stb	r3,158(sp)
10005890:	003a1806 	br	100040f4 <__alt_data_end+0xf80040f4>
10005894:	d8c02b03 	ldbu	r3,172(sp)
10005898:	d8c02785 	stb	r3,158(sp)
1000589c:	003abe06 	br	10004398 <__alt_data_end+0xf8004398>

100058a0 <__vfprintf_internal>:
100058a0:	00840074 	movhi	r2,4097
100058a4:	10987104 	addi	r2,r2,25028
100058a8:	300f883a 	mov	r7,r6
100058ac:	280d883a 	mov	r6,r5
100058b0:	200b883a 	mov	r5,r4
100058b4:	11000017 	ldw	r4,0(r2)
100058b8:	00035c41 	jmpi	100035c4 <___vfprintf_internal_r>

100058bc <__sbprintf>:
100058bc:	2880030b 	ldhu	r2,12(r5)
100058c0:	2ac01917 	ldw	r11,100(r5)
100058c4:	2a80038b 	ldhu	r10,14(r5)
100058c8:	2a400717 	ldw	r9,28(r5)
100058cc:	2a000917 	ldw	r8,36(r5)
100058d0:	defee204 	addi	sp,sp,-1144
100058d4:	00c10004 	movi	r3,1024
100058d8:	dc011a15 	stw	r16,1128(sp)
100058dc:	10bfff4c 	andi	r2,r2,65533
100058e0:	2821883a 	mov	r16,r5
100058e4:	d8cb883a 	add	r5,sp,r3
100058e8:	dc811c15 	stw	r18,1136(sp)
100058ec:	dc411b15 	stw	r17,1132(sp)
100058f0:	dfc11d15 	stw	ra,1140(sp)
100058f4:	2025883a 	mov	r18,r4
100058f8:	d881030d 	sth	r2,1036(sp)
100058fc:	dac11915 	stw	r11,1124(sp)
10005900:	da81038d 	sth	r10,1038(sp)
10005904:	da410715 	stw	r9,1052(sp)
10005908:	da010915 	stw	r8,1060(sp)
1000590c:	dec10015 	stw	sp,1024(sp)
10005910:	dec10415 	stw	sp,1040(sp)
10005914:	d8c10215 	stw	r3,1032(sp)
10005918:	d8c10515 	stw	r3,1044(sp)
1000591c:	d8010615 	stw	zero,1048(sp)
10005920:	00035c40 	call	100035c4 <___vfprintf_internal_r>
10005924:	1023883a 	mov	r17,r2
10005928:	10000416 	blt	r2,zero,1000593c <__sbprintf+0x80>
1000592c:	d9410004 	addi	r5,sp,1024
10005930:	9009883a 	mov	r4,r18
10005934:	00075980 	call	10007598 <_fflush_r>
10005938:	10000d1e 	bne	r2,zero,10005970 <__sbprintf+0xb4>
1000593c:	d881030b 	ldhu	r2,1036(sp)
10005940:	1080100c 	andi	r2,r2,64
10005944:	10000326 	beq	r2,zero,10005954 <__sbprintf+0x98>
10005948:	8080030b 	ldhu	r2,12(r16)
1000594c:	10801014 	ori	r2,r2,64
10005950:	8080030d 	sth	r2,12(r16)
10005954:	8805883a 	mov	r2,r17
10005958:	dfc11d17 	ldw	ra,1140(sp)
1000595c:	dc811c17 	ldw	r18,1136(sp)
10005960:	dc411b17 	ldw	r17,1132(sp)
10005964:	dc011a17 	ldw	r16,1128(sp)
10005968:	dec11e04 	addi	sp,sp,1144
1000596c:	f800283a 	ret
10005970:	047fffc4 	movi	r17,-1
10005974:	003ff106 	br	1000593c <__alt_data_end+0xf800593c>

10005978 <__swsetup_r>:
10005978:	00840074 	movhi	r2,4097
1000597c:	defffd04 	addi	sp,sp,-12
10005980:	10987104 	addi	r2,r2,25028
10005984:	dc400115 	stw	r17,4(sp)
10005988:	2023883a 	mov	r17,r4
1000598c:	11000017 	ldw	r4,0(r2)
10005990:	dc000015 	stw	r16,0(sp)
10005994:	dfc00215 	stw	ra,8(sp)
10005998:	2821883a 	mov	r16,r5
1000599c:	20000226 	beq	r4,zero,100059a8 <__swsetup_r+0x30>
100059a0:	20800e17 	ldw	r2,56(r4)
100059a4:	10003126 	beq	r2,zero,10005a6c <__swsetup_r+0xf4>
100059a8:	8080030b 	ldhu	r2,12(r16)
100059ac:	10c0020c 	andi	r3,r2,8
100059b0:	1009883a 	mov	r4,r2
100059b4:	18000f26 	beq	r3,zero,100059f4 <__swsetup_r+0x7c>
100059b8:	80c00417 	ldw	r3,16(r16)
100059bc:	18001526 	beq	r3,zero,10005a14 <__swsetup_r+0x9c>
100059c0:	1100004c 	andi	r4,r2,1
100059c4:	20001c1e 	bne	r4,zero,10005a38 <__swsetup_r+0xc0>
100059c8:	1080008c 	andi	r2,r2,2
100059cc:	1000291e 	bne	r2,zero,10005a74 <__swsetup_r+0xfc>
100059d0:	80800517 	ldw	r2,20(r16)
100059d4:	80800215 	stw	r2,8(r16)
100059d8:	18001c26 	beq	r3,zero,10005a4c <__swsetup_r+0xd4>
100059dc:	0005883a 	mov	r2,zero
100059e0:	dfc00217 	ldw	ra,8(sp)
100059e4:	dc400117 	ldw	r17,4(sp)
100059e8:	dc000017 	ldw	r16,0(sp)
100059ec:	dec00304 	addi	sp,sp,12
100059f0:	f800283a 	ret
100059f4:	2080040c 	andi	r2,r4,16
100059f8:	10002e26 	beq	r2,zero,10005ab4 <__swsetup_r+0x13c>
100059fc:	2080010c 	andi	r2,r4,4
10005a00:	10001e1e 	bne	r2,zero,10005a7c <__swsetup_r+0x104>
10005a04:	80c00417 	ldw	r3,16(r16)
10005a08:	20800214 	ori	r2,r4,8
10005a0c:	8080030d 	sth	r2,12(r16)
10005a10:	183feb1e 	bne	r3,zero,100059c0 <__alt_data_end+0xf80059c0>
10005a14:	1100a00c 	andi	r4,r2,640
10005a18:	01408004 	movi	r5,512
10005a1c:	217fe826 	beq	r4,r5,100059c0 <__alt_data_end+0xf80059c0>
10005a20:	800b883a 	mov	r5,r16
10005a24:	8809883a 	mov	r4,r17
10005a28:	00085340 	call	10008534 <__smakebuf_r>
10005a2c:	8080030b 	ldhu	r2,12(r16)
10005a30:	80c00417 	ldw	r3,16(r16)
10005a34:	003fe206 	br	100059c0 <__alt_data_end+0xf80059c0>
10005a38:	80800517 	ldw	r2,20(r16)
10005a3c:	80000215 	stw	zero,8(r16)
10005a40:	0085c83a 	sub	r2,zero,r2
10005a44:	80800615 	stw	r2,24(r16)
10005a48:	183fe41e 	bne	r3,zero,100059dc <__alt_data_end+0xf80059dc>
10005a4c:	80c0030b 	ldhu	r3,12(r16)
10005a50:	0005883a 	mov	r2,zero
10005a54:	1900200c 	andi	r4,r3,128
10005a58:	203fe126 	beq	r4,zero,100059e0 <__alt_data_end+0xf80059e0>
10005a5c:	18c01014 	ori	r3,r3,64
10005a60:	80c0030d 	sth	r3,12(r16)
10005a64:	00bfffc4 	movi	r2,-1
10005a68:	003fdd06 	br	100059e0 <__alt_data_end+0xf80059e0>
10005a6c:	00079840 	call	10007984 <__sinit>
10005a70:	003fcd06 	br	100059a8 <__alt_data_end+0xf80059a8>
10005a74:	0005883a 	mov	r2,zero
10005a78:	003fd606 	br	100059d4 <__alt_data_end+0xf80059d4>
10005a7c:	81400c17 	ldw	r5,48(r16)
10005a80:	28000626 	beq	r5,zero,10005a9c <__swsetup_r+0x124>
10005a84:	80801004 	addi	r2,r16,64
10005a88:	28800326 	beq	r5,r2,10005a98 <__swsetup_r+0x120>
10005a8c:	8809883a 	mov	r4,r17
10005a90:	0007af80 	call	10007af8 <_free_r>
10005a94:	8100030b 	ldhu	r4,12(r16)
10005a98:	80000c15 	stw	zero,48(r16)
10005a9c:	80c00417 	ldw	r3,16(r16)
10005aa0:	00bff6c4 	movi	r2,-37
10005aa4:	1108703a 	and	r4,r2,r4
10005aa8:	80000115 	stw	zero,4(r16)
10005aac:	80c00015 	stw	r3,0(r16)
10005ab0:	003fd506 	br	10005a08 <__alt_data_end+0xf8005a08>
10005ab4:	00800244 	movi	r2,9
10005ab8:	88800015 	stw	r2,0(r17)
10005abc:	20801014 	ori	r2,r4,64
10005ac0:	8080030d 	sth	r2,12(r16)
10005ac4:	00bfffc4 	movi	r2,-1
10005ac8:	003fc506 	br	100059e0 <__alt_data_end+0xf80059e0>

10005acc <quorem>:
10005acc:	defff204 	addi	sp,sp,-56
10005ad0:	ddc00b15 	stw	r23,44(sp)
10005ad4:	20800417 	ldw	r2,16(r4)
10005ad8:	2dc00417 	ldw	r23,16(r5)
10005adc:	dfc00d15 	stw	ra,52(sp)
10005ae0:	df000c15 	stw	fp,48(sp)
10005ae4:	dd800a15 	stw	r22,40(sp)
10005ae8:	dd400915 	stw	r21,36(sp)
10005aec:	dd000815 	stw	r20,32(sp)
10005af0:	dcc00715 	stw	r19,28(sp)
10005af4:	dc800615 	stw	r18,24(sp)
10005af8:	dc400515 	stw	r17,20(sp)
10005afc:	dc000415 	stw	r16,16(sp)
10005b00:	15c07a16 	blt	r2,r23,10005cec <quorem+0x220>
10005b04:	bdffffc4 	addi	r23,r23,-1
10005b08:	bde9883a 	add	r20,r23,r23
10005b0c:	28c00504 	addi	r3,r5,20
10005b10:	a529883a 	add	r20,r20,r20
10005b14:	1d39883a 	add	fp,r3,r20
10005b18:	24c00504 	addi	r19,r4,20
10005b1c:	d9400215 	stw	r5,8(sp)
10005b20:	9d29883a 	add	r20,r19,r20
10005b24:	e1400017 	ldw	r5,0(fp)
10005b28:	d9000015 	stw	r4,0(sp)
10005b2c:	a1000017 	ldw	r4,0(r20)
10005b30:	29400044 	addi	r5,r5,1
10005b34:	d8c00115 	stw	r3,4(sp)
10005b38:	dd000315 	stw	r20,12(sp)
10005b3c:	0000f0c0 	call	10000f0c <__udivsi3>
10005b40:	1025883a 	mov	r18,r2
10005b44:	10003026 	beq	r2,zero,10005c08 <quorem+0x13c>
10005b48:	dc400117 	ldw	r17,4(sp)
10005b4c:	9829883a 	mov	r20,r19
10005b50:	002d883a 	mov	r22,zero
10005b54:	0021883a 	mov	r16,zero
10005b58:	8d400017 	ldw	r21,0(r17)
10005b5c:	900b883a 	mov	r5,r18
10005b60:	8c400104 	addi	r17,r17,4
10005b64:	a93fffcc 	andi	r4,r21,65535
10005b68:	0000fc80 	call	10000fc8 <__mulsi3>
10005b6c:	a808d43a 	srli	r4,r21,16
10005b70:	900b883a 	mov	r5,r18
10005b74:	15ad883a 	add	r22,r2,r22
10005b78:	0000fc80 	call	10000fc8 <__mulsi3>
10005b7c:	a1000017 	ldw	r4,0(r20)
10005b80:	b00cd43a 	srli	r6,r22,16
10005b84:	b0ffffcc 	andi	r3,r22,65535
10005b88:	217fffcc 	andi	r5,r4,65535
10005b8c:	2c21883a 	add	r16,r5,r16
10005b90:	80c7c83a 	sub	r3,r16,r3
10005b94:	2008d43a 	srli	r4,r4,16
10005b98:	1185883a 	add	r2,r2,r6
10005b9c:	1821d43a 	srai	r16,r3,16
10005ba0:	117fffcc 	andi	r5,r2,65535
10005ba4:	2149c83a 	sub	r4,r4,r5
10005ba8:	2421883a 	add	r16,r4,r16
10005bac:	8008943a 	slli	r4,r16,16
10005bb0:	18ffffcc 	andi	r3,r3,65535
10005bb4:	102cd43a 	srli	r22,r2,16
10005bb8:	20c8b03a 	or	r4,r4,r3
10005bbc:	a1000015 	stw	r4,0(r20)
10005bc0:	8021d43a 	srai	r16,r16,16
10005bc4:	a5000104 	addi	r20,r20,4
10005bc8:	e47fe32e 	bgeu	fp,r17,10005b58 <__alt_data_end+0xf8005b58>
10005bcc:	d8c00317 	ldw	r3,12(sp)
10005bd0:	18800017 	ldw	r2,0(r3)
10005bd4:	10000c1e 	bne	r2,zero,10005c08 <quorem+0x13c>
10005bd8:	18bfff04 	addi	r2,r3,-4
10005bdc:	9880082e 	bgeu	r19,r2,10005c00 <quorem+0x134>
10005be0:	18ffff17 	ldw	r3,-4(r3)
10005be4:	18000326 	beq	r3,zero,10005bf4 <quorem+0x128>
10005be8:	00000506 	br	10005c00 <quorem+0x134>
10005bec:	10c00017 	ldw	r3,0(r2)
10005bf0:	1800031e 	bne	r3,zero,10005c00 <quorem+0x134>
10005bf4:	10bfff04 	addi	r2,r2,-4
10005bf8:	bdffffc4 	addi	r23,r23,-1
10005bfc:	98bffb36 	bltu	r19,r2,10005bec <__alt_data_end+0xf8005bec>
10005c00:	d8c00017 	ldw	r3,0(sp)
10005c04:	1dc00415 	stw	r23,16(r3)
10005c08:	d9400217 	ldw	r5,8(sp)
10005c0c:	d9000017 	ldw	r4,0(sp)
10005c10:	0009d300 	call	10009d30 <__mcmp>
10005c14:	10002816 	blt	r2,zero,10005cb8 <quorem+0x1ec>
10005c18:	dc400117 	ldw	r17,4(sp)
10005c1c:	94800044 	addi	r18,r18,1
10005c20:	980d883a 	mov	r6,r19
10005c24:	0007883a 	mov	r3,zero
10005c28:	31000017 	ldw	r4,0(r6)
10005c2c:	89400017 	ldw	r5,0(r17)
10005c30:	31800104 	addi	r6,r6,4
10005c34:	20bfffcc 	andi	r2,r4,65535
10005c38:	10c7883a 	add	r3,r2,r3
10005c3c:	28bfffcc 	andi	r2,r5,65535
10005c40:	1885c83a 	sub	r2,r3,r2
10005c44:	280ad43a 	srli	r5,r5,16
10005c48:	2008d43a 	srli	r4,r4,16
10005c4c:	1007d43a 	srai	r3,r2,16
10005c50:	10bfffcc 	andi	r2,r2,65535
10005c54:	2149c83a 	sub	r4,r4,r5
10005c58:	20c9883a 	add	r4,r4,r3
10005c5c:	200a943a 	slli	r5,r4,16
10005c60:	8c400104 	addi	r17,r17,4
10005c64:	2007d43a 	srai	r3,r4,16
10005c68:	2884b03a 	or	r2,r5,r2
10005c6c:	30bfff15 	stw	r2,-4(r6)
10005c70:	e47fed2e 	bgeu	fp,r17,10005c28 <__alt_data_end+0xf8005c28>
10005c74:	bdc5883a 	add	r2,r23,r23
10005c78:	1085883a 	add	r2,r2,r2
10005c7c:	9887883a 	add	r3,r19,r2
10005c80:	18800017 	ldw	r2,0(r3)
10005c84:	10000c1e 	bne	r2,zero,10005cb8 <quorem+0x1ec>
10005c88:	18bfff04 	addi	r2,r3,-4
10005c8c:	9880082e 	bgeu	r19,r2,10005cb0 <quorem+0x1e4>
10005c90:	18ffff17 	ldw	r3,-4(r3)
10005c94:	18000326 	beq	r3,zero,10005ca4 <quorem+0x1d8>
10005c98:	00000506 	br	10005cb0 <quorem+0x1e4>
10005c9c:	10c00017 	ldw	r3,0(r2)
10005ca0:	1800031e 	bne	r3,zero,10005cb0 <quorem+0x1e4>
10005ca4:	10bfff04 	addi	r2,r2,-4
10005ca8:	bdffffc4 	addi	r23,r23,-1
10005cac:	98bffb36 	bltu	r19,r2,10005c9c <__alt_data_end+0xf8005c9c>
10005cb0:	d8c00017 	ldw	r3,0(sp)
10005cb4:	1dc00415 	stw	r23,16(r3)
10005cb8:	9005883a 	mov	r2,r18
10005cbc:	dfc00d17 	ldw	ra,52(sp)
10005cc0:	df000c17 	ldw	fp,48(sp)
10005cc4:	ddc00b17 	ldw	r23,44(sp)
10005cc8:	dd800a17 	ldw	r22,40(sp)
10005ccc:	dd400917 	ldw	r21,36(sp)
10005cd0:	dd000817 	ldw	r20,32(sp)
10005cd4:	dcc00717 	ldw	r19,28(sp)
10005cd8:	dc800617 	ldw	r18,24(sp)
10005cdc:	dc400517 	ldw	r17,20(sp)
10005ce0:	dc000417 	ldw	r16,16(sp)
10005ce4:	dec00e04 	addi	sp,sp,56
10005ce8:	f800283a 	ret
10005cec:	0005883a 	mov	r2,zero
10005cf0:	003ff206 	br	10005cbc <__alt_data_end+0xf8005cbc>

10005cf4 <_dtoa_r>:
10005cf4:	20801017 	ldw	r2,64(r4)
10005cf8:	deffde04 	addi	sp,sp,-136
10005cfc:	df002015 	stw	fp,128(sp)
10005d00:	dcc01b15 	stw	r19,108(sp)
10005d04:	dc801a15 	stw	r18,104(sp)
10005d08:	dc401915 	stw	r17,100(sp)
10005d0c:	dc001815 	stw	r16,96(sp)
10005d10:	dfc02115 	stw	ra,132(sp)
10005d14:	ddc01f15 	stw	r23,124(sp)
10005d18:	dd801e15 	stw	r22,120(sp)
10005d1c:	dd401d15 	stw	r21,116(sp)
10005d20:	dd001c15 	stw	r20,112(sp)
10005d24:	d9c00315 	stw	r7,12(sp)
10005d28:	2039883a 	mov	fp,r4
10005d2c:	3023883a 	mov	r17,r6
10005d30:	2825883a 	mov	r18,r5
10005d34:	dc002417 	ldw	r16,144(sp)
10005d38:	3027883a 	mov	r19,r6
10005d3c:	10000826 	beq	r2,zero,10005d60 <_dtoa_r+0x6c>
10005d40:	21801117 	ldw	r6,68(r4)
10005d44:	00c00044 	movi	r3,1
10005d48:	100b883a 	mov	r5,r2
10005d4c:	1986983a 	sll	r3,r3,r6
10005d50:	11800115 	stw	r6,4(r2)
10005d54:	10c00215 	stw	r3,8(r2)
10005d58:	00094540 	call	10009454 <_Bfree>
10005d5c:	e0001015 	stw	zero,64(fp)
10005d60:	88002e16 	blt	r17,zero,10005e1c <_dtoa_r+0x128>
10005d64:	80000015 	stw	zero,0(r16)
10005d68:	889ffc2c 	andhi	r2,r17,32752
10005d6c:	00dffc34 	movhi	r3,32752
10005d70:	10c01c26 	beq	r2,r3,10005de4 <_dtoa_r+0xf0>
10005d74:	000d883a 	mov	r6,zero
10005d78:	000f883a 	mov	r7,zero
10005d7c:	9009883a 	mov	r4,r18
10005d80:	980b883a 	mov	r5,r19
10005d84:	00101a40 	call	100101a4 <__eqdf2>
10005d88:	10002b1e 	bne	r2,zero,10005e38 <_dtoa_r+0x144>
10005d8c:	d9c02317 	ldw	r7,140(sp)
10005d90:	00800044 	movi	r2,1
10005d94:	38800015 	stw	r2,0(r7)
10005d98:	d8802517 	ldw	r2,148(sp)
10005d9c:	10019e26 	beq	r2,zero,10006418 <_dtoa_r+0x724>
10005da0:	d8c02517 	ldw	r3,148(sp)
10005da4:	00840074 	movhi	r2,4097
10005da8:	10904c44 	addi	r2,r2,16689
10005dac:	18800015 	stw	r2,0(r3)
10005db0:	10bfffc4 	addi	r2,r2,-1
10005db4:	dfc02117 	ldw	ra,132(sp)
10005db8:	df002017 	ldw	fp,128(sp)
10005dbc:	ddc01f17 	ldw	r23,124(sp)
10005dc0:	dd801e17 	ldw	r22,120(sp)
10005dc4:	dd401d17 	ldw	r21,116(sp)
10005dc8:	dd001c17 	ldw	r20,112(sp)
10005dcc:	dcc01b17 	ldw	r19,108(sp)
10005dd0:	dc801a17 	ldw	r18,104(sp)
10005dd4:	dc401917 	ldw	r17,100(sp)
10005dd8:	dc001817 	ldw	r16,96(sp)
10005ddc:	dec02204 	addi	sp,sp,136
10005de0:	f800283a 	ret
10005de4:	d8c02317 	ldw	r3,140(sp)
10005de8:	0089c3c4 	movi	r2,9999
10005dec:	18800015 	stw	r2,0(r3)
10005df0:	90017726 	beq	r18,zero,100063d0 <_dtoa_r+0x6dc>
10005df4:	00840074 	movhi	r2,4097
10005df8:	10906004 	addi	r2,r2,16768
10005dfc:	d9002517 	ldw	r4,148(sp)
10005e00:	203fec26 	beq	r4,zero,10005db4 <__alt_data_end+0xf8005db4>
10005e04:	10c000c7 	ldb	r3,3(r2)
10005e08:	1801781e 	bne	r3,zero,100063ec <_dtoa_r+0x6f8>
10005e0c:	10c000c4 	addi	r3,r2,3
10005e10:	d9802517 	ldw	r6,148(sp)
10005e14:	30c00015 	stw	r3,0(r6)
10005e18:	003fe606 	br	10005db4 <__alt_data_end+0xf8005db4>
10005e1c:	04e00034 	movhi	r19,32768
10005e20:	9cffffc4 	addi	r19,r19,-1
10005e24:	00800044 	movi	r2,1
10005e28:	8ce6703a 	and	r19,r17,r19
10005e2c:	80800015 	stw	r2,0(r16)
10005e30:	9823883a 	mov	r17,r19
10005e34:	003fcc06 	br	10005d68 <__alt_data_end+0xf8005d68>
10005e38:	d8800204 	addi	r2,sp,8
10005e3c:	d8800015 	stw	r2,0(sp)
10005e40:	d9c00104 	addi	r7,sp,4
10005e44:	900b883a 	mov	r5,r18
10005e48:	980d883a 	mov	r6,r19
10005e4c:	e009883a 	mov	r4,fp
10005e50:	8820d53a 	srli	r16,r17,20
10005e54:	000a0fc0 	call	1000a0fc <__d2b>
10005e58:	d8800915 	stw	r2,36(sp)
10005e5c:	8001651e 	bne	r16,zero,100063f4 <_dtoa_r+0x700>
10005e60:	dd800217 	ldw	r22,8(sp)
10005e64:	dc000117 	ldw	r16,4(sp)
10005e68:	00800804 	movi	r2,32
10005e6c:	b421883a 	add	r16,r22,r16
10005e70:	80c10c84 	addi	r3,r16,1074
10005e74:	10c2d10e 	bge	r2,r3,100069bc <_dtoa_r+0xcc8>
10005e78:	00801004 	movi	r2,64
10005e7c:	81010484 	addi	r4,r16,1042
10005e80:	10c7c83a 	sub	r3,r2,r3
10005e84:	9108d83a 	srl	r4,r18,r4
10005e88:	88e2983a 	sll	r17,r17,r3
10005e8c:	2448b03a 	or	r4,r4,r17
10005e90:	00116c00 	call	100116c0 <__floatunsidf>
10005e94:	017f8434 	movhi	r5,65040
10005e98:	01800044 	movi	r6,1
10005e9c:	1009883a 	mov	r4,r2
10005ea0:	194b883a 	add	r5,r3,r5
10005ea4:	843fffc4 	addi	r16,r16,-1
10005ea8:	d9801115 	stw	r6,68(sp)
10005eac:	000d883a 	mov	r6,zero
10005eb0:	01cffe34 	movhi	r7,16376
10005eb4:	0010c680 	call	10010c68 <__subdf3>
10005eb8:	0198dbf4 	movhi	r6,25455
10005ebc:	01cff4f4 	movhi	r7,16339
10005ec0:	3190d844 	addi	r6,r6,17249
10005ec4:	39e1e9c4 	addi	r7,r7,-30809
10005ec8:	1009883a 	mov	r4,r2
10005ecc:	180b883a 	mov	r5,r3
10005ed0:	00103fc0 	call	100103fc <__muldf3>
10005ed4:	01a2d874 	movhi	r6,35681
10005ed8:	01cff1f4 	movhi	r7,16327
10005edc:	31b22cc4 	addi	r6,r6,-14157
10005ee0:	39e28a04 	addi	r7,r7,-30168
10005ee4:	180b883a 	mov	r5,r3
10005ee8:	1009883a 	mov	r4,r2
10005eec:	000ef280 	call	1000ef28 <__adddf3>
10005ef0:	8009883a 	mov	r4,r16
10005ef4:	1029883a 	mov	r20,r2
10005ef8:	1823883a 	mov	r17,r3
10005efc:	00115e40 	call	100115e4 <__floatsidf>
10005f00:	019427f4 	movhi	r6,20639
10005f04:	01cff4f4 	movhi	r7,16339
10005f08:	319e7ec4 	addi	r6,r6,31227
10005f0c:	39d104c4 	addi	r7,r7,17427
10005f10:	1009883a 	mov	r4,r2
10005f14:	180b883a 	mov	r5,r3
10005f18:	00103fc0 	call	100103fc <__muldf3>
10005f1c:	100d883a 	mov	r6,r2
10005f20:	180f883a 	mov	r7,r3
10005f24:	a009883a 	mov	r4,r20
10005f28:	880b883a 	mov	r5,r17
10005f2c:	000ef280 	call	1000ef28 <__adddf3>
10005f30:	1009883a 	mov	r4,r2
10005f34:	180b883a 	mov	r5,r3
10005f38:	1029883a 	mov	r20,r2
10005f3c:	1823883a 	mov	r17,r3
10005f40:	00115640 	call	10011564 <__fixdfsi>
10005f44:	000d883a 	mov	r6,zero
10005f48:	000f883a 	mov	r7,zero
10005f4c:	a009883a 	mov	r4,r20
10005f50:	880b883a 	mov	r5,r17
10005f54:	d8800515 	stw	r2,20(sp)
10005f58:	00103080 	call	10010308 <__ledf2>
10005f5c:	10028716 	blt	r2,zero,1000697c <_dtoa_r+0xc88>
10005f60:	d8c00517 	ldw	r3,20(sp)
10005f64:	00800584 	movi	r2,22
10005f68:	10c27536 	bltu	r2,r3,10006940 <_dtoa_r+0xc4c>
10005f6c:	180490fa 	slli	r2,r3,3
10005f70:	00c40074 	movhi	r3,4097
10005f74:	18d07c04 	addi	r3,r3,16880
10005f78:	1885883a 	add	r2,r3,r2
10005f7c:	11000017 	ldw	r4,0(r2)
10005f80:	11400117 	ldw	r5,4(r2)
10005f84:	900d883a 	mov	r6,r18
10005f88:	980f883a 	mov	r7,r19
10005f8c:	001022c0 	call	1001022c <__gedf2>
10005f90:	00828d0e 	bge	zero,r2,100069c8 <_dtoa_r+0xcd4>
10005f94:	d9000517 	ldw	r4,20(sp)
10005f98:	d8000e15 	stw	zero,56(sp)
10005f9c:	213fffc4 	addi	r4,r4,-1
10005fa0:	d9000515 	stw	r4,20(sp)
10005fa4:	b42dc83a 	sub	r22,r22,r16
10005fa8:	b5bfffc4 	addi	r22,r22,-1
10005fac:	b0026f16 	blt	r22,zero,1000696c <_dtoa_r+0xc78>
10005fb0:	d8000815 	stw	zero,32(sp)
10005fb4:	d9c00517 	ldw	r7,20(sp)
10005fb8:	38026416 	blt	r7,zero,1000694c <_dtoa_r+0xc58>
10005fbc:	b1ed883a 	add	r22,r22,r7
10005fc0:	d9c00d15 	stw	r7,52(sp)
10005fc4:	d8000a15 	stw	zero,40(sp)
10005fc8:	d9800317 	ldw	r6,12(sp)
10005fcc:	00800244 	movi	r2,9
10005fd0:	11811436 	bltu	r2,r6,10006424 <_dtoa_r+0x730>
10005fd4:	00800144 	movi	r2,5
10005fd8:	1184e10e 	bge	r2,r6,10007360 <_dtoa_r+0x166c>
10005fdc:	31bfff04 	addi	r6,r6,-4
10005fe0:	d9800315 	stw	r6,12(sp)
10005fe4:	0023883a 	mov	r17,zero
10005fe8:	d9800317 	ldw	r6,12(sp)
10005fec:	008000c4 	movi	r2,3
10005ff0:	30836726 	beq	r6,r2,10006d90 <_dtoa_r+0x109c>
10005ff4:	1183410e 	bge	r2,r6,10006cfc <_dtoa_r+0x1008>
10005ff8:	d9c00317 	ldw	r7,12(sp)
10005ffc:	00800104 	movi	r2,4
10006000:	38827c26 	beq	r7,r2,100069f4 <_dtoa_r+0xd00>
10006004:	00800144 	movi	r2,5
10006008:	3884c41e 	bne	r7,r2,1000731c <_dtoa_r+0x1628>
1000600c:	00800044 	movi	r2,1
10006010:	d8800b15 	stw	r2,44(sp)
10006014:	d8c00517 	ldw	r3,20(sp)
10006018:	d9002217 	ldw	r4,136(sp)
1000601c:	1907883a 	add	r3,r3,r4
10006020:	19800044 	addi	r6,r3,1
10006024:	d8c00c15 	stw	r3,48(sp)
10006028:	d9800615 	stw	r6,24(sp)
1000602c:	0183a40e 	bge	zero,r6,10006ec0 <_dtoa_r+0x11cc>
10006030:	d9800617 	ldw	r6,24(sp)
10006034:	3021883a 	mov	r16,r6
10006038:	e0001115 	stw	zero,68(fp)
1000603c:	008005c4 	movi	r2,23
10006040:	1184c92e 	bgeu	r2,r6,10007368 <_dtoa_r+0x1674>
10006044:	00c00044 	movi	r3,1
10006048:	00800104 	movi	r2,4
1000604c:	1085883a 	add	r2,r2,r2
10006050:	11000504 	addi	r4,r2,20
10006054:	180b883a 	mov	r5,r3
10006058:	18c00044 	addi	r3,r3,1
1000605c:	313ffb2e 	bgeu	r6,r4,1000604c <__alt_data_end+0xf800604c>
10006060:	e1401115 	stw	r5,68(fp)
10006064:	e009883a 	mov	r4,fp
10006068:	00093ac0 	call	100093ac <_Balloc>
1000606c:	d8800715 	stw	r2,28(sp)
10006070:	e0801015 	stw	r2,64(fp)
10006074:	00800384 	movi	r2,14
10006078:	1400f736 	bltu	r2,r16,10006458 <_dtoa_r+0x764>
1000607c:	8800f626 	beq	r17,zero,10006458 <_dtoa_r+0x764>
10006080:	d9c00517 	ldw	r7,20(sp)
10006084:	01c39a0e 	bge	zero,r7,10006ef0 <_dtoa_r+0x11fc>
10006088:	388003cc 	andi	r2,r7,15
1000608c:	100490fa 	slli	r2,r2,3
10006090:	382bd13a 	srai	r21,r7,4
10006094:	00c40074 	movhi	r3,4097
10006098:	18d07c04 	addi	r3,r3,16880
1000609c:	1885883a 	add	r2,r3,r2
100060a0:	a8c0040c 	andi	r3,r21,16
100060a4:	12400017 	ldw	r9,0(r2)
100060a8:	12000117 	ldw	r8,4(r2)
100060ac:	18037926 	beq	r3,zero,10006e94 <_dtoa_r+0x11a0>
100060b0:	00840074 	movhi	r2,4097
100060b4:	10907204 	addi	r2,r2,16840
100060b8:	11800817 	ldw	r6,32(r2)
100060bc:	11c00917 	ldw	r7,36(r2)
100060c0:	9009883a 	mov	r4,r18
100060c4:	980b883a 	mov	r5,r19
100060c8:	da001715 	stw	r8,92(sp)
100060cc:	da401615 	stw	r9,88(sp)
100060d0:	000f7d40 	call	1000f7d4 <__divdf3>
100060d4:	da001717 	ldw	r8,92(sp)
100060d8:	da401617 	ldw	r9,88(sp)
100060dc:	ad4003cc 	andi	r21,r21,15
100060e0:	040000c4 	movi	r16,3
100060e4:	1023883a 	mov	r17,r2
100060e8:	1829883a 	mov	r20,r3
100060ec:	a8001126 	beq	r21,zero,10006134 <_dtoa_r+0x440>
100060f0:	05c40074 	movhi	r23,4097
100060f4:	bdd07204 	addi	r23,r23,16840
100060f8:	4805883a 	mov	r2,r9
100060fc:	4007883a 	mov	r3,r8
10006100:	a980004c 	andi	r6,r21,1
10006104:	1009883a 	mov	r4,r2
10006108:	a82bd07a 	srai	r21,r21,1
1000610c:	180b883a 	mov	r5,r3
10006110:	30000426 	beq	r6,zero,10006124 <_dtoa_r+0x430>
10006114:	b9800017 	ldw	r6,0(r23)
10006118:	b9c00117 	ldw	r7,4(r23)
1000611c:	84000044 	addi	r16,r16,1
10006120:	00103fc0 	call	100103fc <__muldf3>
10006124:	bdc00204 	addi	r23,r23,8
10006128:	a83ff51e 	bne	r21,zero,10006100 <__alt_data_end+0xf8006100>
1000612c:	1013883a 	mov	r9,r2
10006130:	1811883a 	mov	r8,r3
10006134:	480d883a 	mov	r6,r9
10006138:	400f883a 	mov	r7,r8
1000613c:	8809883a 	mov	r4,r17
10006140:	a00b883a 	mov	r5,r20
10006144:	000f7d40 	call	1000f7d4 <__divdf3>
10006148:	d8800f15 	stw	r2,60(sp)
1000614c:	d8c01015 	stw	r3,64(sp)
10006150:	d8c00e17 	ldw	r3,56(sp)
10006154:	18000626 	beq	r3,zero,10006170 <_dtoa_r+0x47c>
10006158:	d9000f17 	ldw	r4,60(sp)
1000615c:	d9401017 	ldw	r5,64(sp)
10006160:	000d883a 	mov	r6,zero
10006164:	01cffc34 	movhi	r7,16368
10006168:	00103080 	call	10010308 <__ledf2>
1000616c:	10040b16 	blt	r2,zero,1000719c <_dtoa_r+0x14a8>
10006170:	8009883a 	mov	r4,r16
10006174:	00115e40 	call	100115e4 <__floatsidf>
10006178:	d9800f17 	ldw	r6,60(sp)
1000617c:	d9c01017 	ldw	r7,64(sp)
10006180:	1009883a 	mov	r4,r2
10006184:	180b883a 	mov	r5,r3
10006188:	00103fc0 	call	100103fc <__muldf3>
1000618c:	000d883a 	mov	r6,zero
10006190:	01d00734 	movhi	r7,16412
10006194:	1009883a 	mov	r4,r2
10006198:	180b883a 	mov	r5,r3
1000619c:	000ef280 	call	1000ef28 <__adddf3>
100061a0:	1021883a 	mov	r16,r2
100061a4:	d8800617 	ldw	r2,24(sp)
100061a8:	047f3034 	movhi	r17,64704
100061ac:	1c63883a 	add	r17,r3,r17
100061b0:	10031826 	beq	r2,zero,10006e14 <_dtoa_r+0x1120>
100061b4:	d8c00517 	ldw	r3,20(sp)
100061b8:	db000617 	ldw	r12,24(sp)
100061bc:	d8c01315 	stw	r3,76(sp)
100061c0:	d9000b17 	ldw	r4,44(sp)
100061c4:	20038f26 	beq	r4,zero,10007004 <_dtoa_r+0x1310>
100061c8:	60bfffc4 	addi	r2,r12,-1
100061cc:	100490fa 	slli	r2,r2,3
100061d0:	00c40074 	movhi	r3,4097
100061d4:	18d07c04 	addi	r3,r3,16880
100061d8:	1885883a 	add	r2,r3,r2
100061dc:	11800017 	ldw	r6,0(r2)
100061e0:	11c00117 	ldw	r7,4(r2)
100061e4:	d8800717 	ldw	r2,28(sp)
100061e8:	0009883a 	mov	r4,zero
100061ec:	014ff834 	movhi	r5,16352
100061f0:	db001615 	stw	r12,88(sp)
100061f4:	15c00044 	addi	r23,r2,1
100061f8:	000f7d40 	call	1000f7d4 <__divdf3>
100061fc:	800d883a 	mov	r6,r16
10006200:	880f883a 	mov	r7,r17
10006204:	1009883a 	mov	r4,r2
10006208:	180b883a 	mov	r5,r3
1000620c:	0010c680 	call	10010c68 <__subdf3>
10006210:	d9401017 	ldw	r5,64(sp)
10006214:	d9000f17 	ldw	r4,60(sp)
10006218:	102b883a 	mov	r21,r2
1000621c:	d8c01215 	stw	r3,72(sp)
10006220:	00115640 	call	10011564 <__fixdfsi>
10006224:	1009883a 	mov	r4,r2
10006228:	1029883a 	mov	r20,r2
1000622c:	00115e40 	call	100115e4 <__floatsidf>
10006230:	d9000f17 	ldw	r4,60(sp)
10006234:	d9401017 	ldw	r5,64(sp)
10006238:	100d883a 	mov	r6,r2
1000623c:	180f883a 	mov	r7,r3
10006240:	0010c680 	call	10010c68 <__subdf3>
10006244:	1823883a 	mov	r17,r3
10006248:	d8c00717 	ldw	r3,28(sp)
1000624c:	d9401217 	ldw	r5,72(sp)
10006250:	a2000c04 	addi	r8,r20,48
10006254:	1021883a 	mov	r16,r2
10006258:	1a000005 	stb	r8,0(r3)
1000625c:	800d883a 	mov	r6,r16
10006260:	880f883a 	mov	r7,r17
10006264:	a809883a 	mov	r4,r21
10006268:	4029883a 	mov	r20,r8
1000626c:	001022c0 	call	1001022c <__gedf2>
10006270:	00841d16 	blt	zero,r2,100072e8 <_dtoa_r+0x15f4>
10006274:	800d883a 	mov	r6,r16
10006278:	880f883a 	mov	r7,r17
1000627c:	0009883a 	mov	r4,zero
10006280:	014ffc34 	movhi	r5,16368
10006284:	0010c680 	call	10010c68 <__subdf3>
10006288:	d9401217 	ldw	r5,72(sp)
1000628c:	100d883a 	mov	r6,r2
10006290:	180f883a 	mov	r7,r3
10006294:	a809883a 	mov	r4,r21
10006298:	001022c0 	call	1001022c <__gedf2>
1000629c:	db001617 	ldw	r12,88(sp)
100062a0:	00840e16 	blt	zero,r2,100072dc <_dtoa_r+0x15e8>
100062a4:	00800044 	movi	r2,1
100062a8:	13006b0e 	bge	r2,r12,10006458 <_dtoa_r+0x764>
100062ac:	d9000717 	ldw	r4,28(sp)
100062b0:	dd800f15 	stw	r22,60(sp)
100062b4:	dcc01015 	stw	r19,64(sp)
100062b8:	2319883a 	add	r12,r4,r12
100062bc:	dcc01217 	ldw	r19,72(sp)
100062c0:	602d883a 	mov	r22,r12
100062c4:	dc801215 	stw	r18,72(sp)
100062c8:	b825883a 	mov	r18,r23
100062cc:	00000906 	br	100062f4 <_dtoa_r+0x600>
100062d0:	0010c680 	call	10010c68 <__subdf3>
100062d4:	a80d883a 	mov	r6,r21
100062d8:	980f883a 	mov	r7,r19
100062dc:	1009883a 	mov	r4,r2
100062e0:	180b883a 	mov	r5,r3
100062e4:	00103080 	call	10010308 <__ledf2>
100062e8:	1003e816 	blt	r2,zero,1000728c <_dtoa_r+0x1598>
100062ec:	b825883a 	mov	r18,r23
100062f0:	bd83e926 	beq	r23,r22,10007298 <_dtoa_r+0x15a4>
100062f4:	a809883a 	mov	r4,r21
100062f8:	980b883a 	mov	r5,r19
100062fc:	000d883a 	mov	r6,zero
10006300:	01d00934 	movhi	r7,16420
10006304:	00103fc0 	call	100103fc <__muldf3>
10006308:	000d883a 	mov	r6,zero
1000630c:	01d00934 	movhi	r7,16420
10006310:	8009883a 	mov	r4,r16
10006314:	880b883a 	mov	r5,r17
10006318:	102b883a 	mov	r21,r2
1000631c:	1827883a 	mov	r19,r3
10006320:	00103fc0 	call	100103fc <__muldf3>
10006324:	180b883a 	mov	r5,r3
10006328:	1009883a 	mov	r4,r2
1000632c:	1821883a 	mov	r16,r3
10006330:	1023883a 	mov	r17,r2
10006334:	00115640 	call	10011564 <__fixdfsi>
10006338:	1009883a 	mov	r4,r2
1000633c:	1029883a 	mov	r20,r2
10006340:	00115e40 	call	100115e4 <__floatsidf>
10006344:	8809883a 	mov	r4,r17
10006348:	800b883a 	mov	r5,r16
1000634c:	100d883a 	mov	r6,r2
10006350:	180f883a 	mov	r7,r3
10006354:	0010c680 	call	10010c68 <__subdf3>
10006358:	a5000c04 	addi	r20,r20,48
1000635c:	a80d883a 	mov	r6,r21
10006360:	980f883a 	mov	r7,r19
10006364:	1009883a 	mov	r4,r2
10006368:	180b883a 	mov	r5,r3
1000636c:	95000005 	stb	r20,0(r18)
10006370:	1021883a 	mov	r16,r2
10006374:	1823883a 	mov	r17,r3
10006378:	00103080 	call	10010308 <__ledf2>
1000637c:	bdc00044 	addi	r23,r23,1
10006380:	800d883a 	mov	r6,r16
10006384:	880f883a 	mov	r7,r17
10006388:	0009883a 	mov	r4,zero
1000638c:	014ffc34 	movhi	r5,16368
10006390:	103fcf0e 	bge	r2,zero,100062d0 <__alt_data_end+0xf80062d0>
10006394:	d8c01317 	ldw	r3,76(sp)
10006398:	d8c00515 	stw	r3,20(sp)
1000639c:	d9400917 	ldw	r5,36(sp)
100063a0:	e009883a 	mov	r4,fp
100063a4:	00094540 	call	10009454 <_Bfree>
100063a8:	d9000517 	ldw	r4,20(sp)
100063ac:	d9802317 	ldw	r6,140(sp)
100063b0:	d9c02517 	ldw	r7,148(sp)
100063b4:	b8000005 	stb	zero,0(r23)
100063b8:	20800044 	addi	r2,r4,1
100063bc:	30800015 	stw	r2,0(r6)
100063c0:	3802aa26 	beq	r7,zero,10006e6c <_dtoa_r+0x1178>
100063c4:	3dc00015 	stw	r23,0(r7)
100063c8:	d8800717 	ldw	r2,28(sp)
100063cc:	003e7906 	br	10005db4 <__alt_data_end+0xf8005db4>
100063d0:	00800434 	movhi	r2,16
100063d4:	10bfffc4 	addi	r2,r2,-1
100063d8:	88a2703a 	and	r17,r17,r2
100063dc:	883e851e 	bne	r17,zero,10005df4 <__alt_data_end+0xf8005df4>
100063e0:	00840074 	movhi	r2,4097
100063e4:	10905d04 	addi	r2,r2,16756
100063e8:	003e8406 	br	10005dfc <__alt_data_end+0xf8005dfc>
100063ec:	10c00204 	addi	r3,r2,8
100063f0:	003e8706 	br	10005e10 <__alt_data_end+0xf8005e10>
100063f4:	01400434 	movhi	r5,16
100063f8:	297fffc4 	addi	r5,r5,-1
100063fc:	994a703a 	and	r5,r19,r5
10006400:	9009883a 	mov	r4,r18
10006404:	843f0044 	addi	r16,r16,-1023
10006408:	294ffc34 	orhi	r5,r5,16368
1000640c:	dd800217 	ldw	r22,8(sp)
10006410:	d8001115 	stw	zero,68(sp)
10006414:	003ea506 	br	10005eac <__alt_data_end+0xf8005eac>
10006418:	00840074 	movhi	r2,4097
1000641c:	10904c04 	addi	r2,r2,16688
10006420:	003e6406 	br	10005db4 <__alt_data_end+0xf8005db4>
10006424:	e0001115 	stw	zero,68(fp)
10006428:	000b883a 	mov	r5,zero
1000642c:	e009883a 	mov	r4,fp
10006430:	00093ac0 	call	100093ac <_Balloc>
10006434:	01bfffc4 	movi	r6,-1
10006438:	01c00044 	movi	r7,1
1000643c:	d8800715 	stw	r2,28(sp)
10006440:	d9800c15 	stw	r6,48(sp)
10006444:	e0801015 	stw	r2,64(fp)
10006448:	d8000315 	stw	zero,12(sp)
1000644c:	d9c00b15 	stw	r7,44(sp)
10006450:	d9800615 	stw	r6,24(sp)
10006454:	d8002215 	stw	zero,136(sp)
10006458:	d8800117 	ldw	r2,4(sp)
1000645c:	10008916 	blt	r2,zero,10006684 <_dtoa_r+0x990>
10006460:	d9000517 	ldw	r4,20(sp)
10006464:	00c00384 	movi	r3,14
10006468:	19008616 	blt	r3,r4,10006684 <_dtoa_r+0x990>
1000646c:	200490fa 	slli	r2,r4,3
10006470:	00c40074 	movhi	r3,4097
10006474:	d9802217 	ldw	r6,136(sp)
10006478:	18d07c04 	addi	r3,r3,16880
1000647c:	1885883a 	add	r2,r3,r2
10006480:	14000017 	ldw	r16,0(r2)
10006484:	14400117 	ldw	r17,4(r2)
10006488:	30016316 	blt	r6,zero,10006a18 <_dtoa_r+0xd24>
1000648c:	800d883a 	mov	r6,r16
10006490:	880f883a 	mov	r7,r17
10006494:	9009883a 	mov	r4,r18
10006498:	980b883a 	mov	r5,r19
1000649c:	000f7d40 	call	1000f7d4 <__divdf3>
100064a0:	180b883a 	mov	r5,r3
100064a4:	1009883a 	mov	r4,r2
100064a8:	00115640 	call	10011564 <__fixdfsi>
100064ac:	1009883a 	mov	r4,r2
100064b0:	102b883a 	mov	r21,r2
100064b4:	00115e40 	call	100115e4 <__floatsidf>
100064b8:	800d883a 	mov	r6,r16
100064bc:	880f883a 	mov	r7,r17
100064c0:	1009883a 	mov	r4,r2
100064c4:	180b883a 	mov	r5,r3
100064c8:	00103fc0 	call	100103fc <__muldf3>
100064cc:	100d883a 	mov	r6,r2
100064d0:	180f883a 	mov	r7,r3
100064d4:	9009883a 	mov	r4,r18
100064d8:	980b883a 	mov	r5,r19
100064dc:	0010c680 	call	10010c68 <__subdf3>
100064e0:	d9c00717 	ldw	r7,28(sp)
100064e4:	1009883a 	mov	r4,r2
100064e8:	a8800c04 	addi	r2,r21,48
100064ec:	38800005 	stb	r2,0(r7)
100064f0:	3dc00044 	addi	r23,r7,1
100064f4:	d9c00617 	ldw	r7,24(sp)
100064f8:	01800044 	movi	r6,1
100064fc:	180b883a 	mov	r5,r3
10006500:	2005883a 	mov	r2,r4
10006504:	39803826 	beq	r7,r6,100065e8 <_dtoa_r+0x8f4>
10006508:	000d883a 	mov	r6,zero
1000650c:	01d00934 	movhi	r7,16420
10006510:	00103fc0 	call	100103fc <__muldf3>
10006514:	000d883a 	mov	r6,zero
10006518:	000f883a 	mov	r7,zero
1000651c:	1009883a 	mov	r4,r2
10006520:	180b883a 	mov	r5,r3
10006524:	1025883a 	mov	r18,r2
10006528:	1827883a 	mov	r19,r3
1000652c:	00101a40 	call	100101a4 <__eqdf2>
10006530:	103f9a26 	beq	r2,zero,1000639c <__alt_data_end+0xf800639c>
10006534:	d9c00617 	ldw	r7,24(sp)
10006538:	d8c00717 	ldw	r3,28(sp)
1000653c:	b829883a 	mov	r20,r23
10006540:	38bfffc4 	addi	r2,r7,-1
10006544:	18ad883a 	add	r22,r3,r2
10006548:	00000a06 	br	10006574 <_dtoa_r+0x880>
1000654c:	00103fc0 	call	100103fc <__muldf3>
10006550:	000d883a 	mov	r6,zero
10006554:	000f883a 	mov	r7,zero
10006558:	1009883a 	mov	r4,r2
1000655c:	180b883a 	mov	r5,r3
10006560:	1025883a 	mov	r18,r2
10006564:	1827883a 	mov	r19,r3
10006568:	b829883a 	mov	r20,r23
1000656c:	00101a40 	call	100101a4 <__eqdf2>
10006570:	103f8a26 	beq	r2,zero,1000639c <__alt_data_end+0xf800639c>
10006574:	800d883a 	mov	r6,r16
10006578:	880f883a 	mov	r7,r17
1000657c:	9009883a 	mov	r4,r18
10006580:	980b883a 	mov	r5,r19
10006584:	000f7d40 	call	1000f7d4 <__divdf3>
10006588:	180b883a 	mov	r5,r3
1000658c:	1009883a 	mov	r4,r2
10006590:	00115640 	call	10011564 <__fixdfsi>
10006594:	1009883a 	mov	r4,r2
10006598:	102b883a 	mov	r21,r2
1000659c:	00115e40 	call	100115e4 <__floatsidf>
100065a0:	800d883a 	mov	r6,r16
100065a4:	880f883a 	mov	r7,r17
100065a8:	1009883a 	mov	r4,r2
100065ac:	180b883a 	mov	r5,r3
100065b0:	00103fc0 	call	100103fc <__muldf3>
100065b4:	100d883a 	mov	r6,r2
100065b8:	180f883a 	mov	r7,r3
100065bc:	9009883a 	mov	r4,r18
100065c0:	980b883a 	mov	r5,r19
100065c4:	0010c680 	call	10010c68 <__subdf3>
100065c8:	aa000c04 	addi	r8,r21,48
100065cc:	a2000005 	stb	r8,0(r20)
100065d0:	000d883a 	mov	r6,zero
100065d4:	01d00934 	movhi	r7,16420
100065d8:	1009883a 	mov	r4,r2
100065dc:	180b883a 	mov	r5,r3
100065e0:	a5c00044 	addi	r23,r20,1
100065e4:	b53fd91e 	bne	r22,r20,1000654c <__alt_data_end+0xf800654c>
100065e8:	100d883a 	mov	r6,r2
100065ec:	180f883a 	mov	r7,r3
100065f0:	1009883a 	mov	r4,r2
100065f4:	180b883a 	mov	r5,r3
100065f8:	000ef280 	call	1000ef28 <__adddf3>
100065fc:	100d883a 	mov	r6,r2
10006600:	180f883a 	mov	r7,r3
10006604:	8009883a 	mov	r4,r16
10006608:	880b883a 	mov	r5,r17
1000660c:	1027883a 	mov	r19,r2
10006610:	1825883a 	mov	r18,r3
10006614:	00103080 	call	10010308 <__ledf2>
10006618:	10000816 	blt	r2,zero,1000663c <_dtoa_r+0x948>
1000661c:	980d883a 	mov	r6,r19
10006620:	900f883a 	mov	r7,r18
10006624:	8009883a 	mov	r4,r16
10006628:	880b883a 	mov	r5,r17
1000662c:	00101a40 	call	100101a4 <__eqdf2>
10006630:	103f5a1e 	bne	r2,zero,1000639c <__alt_data_end+0xf800639c>
10006634:	ad40004c 	andi	r21,r21,1
10006638:	a83f5826 	beq	r21,zero,1000639c <__alt_data_end+0xf800639c>
1000663c:	bd3fffc3 	ldbu	r20,-1(r23)
10006640:	b8bfffc4 	addi	r2,r23,-1
10006644:	1007883a 	mov	r3,r2
10006648:	01400e44 	movi	r5,57
1000664c:	d9800717 	ldw	r6,28(sp)
10006650:	00000506 	br	10006668 <_dtoa_r+0x974>
10006654:	18ffffc4 	addi	r3,r3,-1
10006658:	11824726 	beq	r2,r6,10006f78 <_dtoa_r+0x1284>
1000665c:	1d000003 	ldbu	r20,0(r3)
10006660:	102f883a 	mov	r23,r2
10006664:	10bfffc4 	addi	r2,r2,-1
10006668:	a1003fcc 	andi	r4,r20,255
1000666c:	2100201c 	xori	r4,r4,128
10006670:	213fe004 	addi	r4,r4,-128
10006674:	217ff726 	beq	r4,r5,10006654 <__alt_data_end+0xf8006654>
10006678:	a2000044 	addi	r8,r20,1
1000667c:	12000005 	stb	r8,0(r2)
10006680:	003f4606 	br	1000639c <__alt_data_end+0xf800639c>
10006684:	d9000b17 	ldw	r4,44(sp)
10006688:	2000c826 	beq	r4,zero,100069ac <_dtoa_r+0xcb8>
1000668c:	d9800317 	ldw	r6,12(sp)
10006690:	00c00044 	movi	r3,1
10006694:	1980f90e 	bge	r3,r6,10006a7c <_dtoa_r+0xd88>
10006698:	d8800617 	ldw	r2,24(sp)
1000669c:	d8c00a17 	ldw	r3,40(sp)
100066a0:	157fffc4 	addi	r21,r2,-1
100066a4:	1d41f316 	blt	r3,r21,10006e74 <_dtoa_r+0x1180>
100066a8:	1d6bc83a 	sub	r21,r3,r21
100066ac:	d9c00617 	ldw	r7,24(sp)
100066b0:	3802aa16 	blt	r7,zero,1000715c <_dtoa_r+0x1468>
100066b4:	dd000817 	ldw	r20,32(sp)
100066b8:	d8800617 	ldw	r2,24(sp)
100066bc:	d8c00817 	ldw	r3,32(sp)
100066c0:	01400044 	movi	r5,1
100066c4:	e009883a 	mov	r4,fp
100066c8:	1887883a 	add	r3,r3,r2
100066cc:	d8c00815 	stw	r3,32(sp)
100066d0:	b0ad883a 	add	r22,r22,r2
100066d4:	00097e00 	call	100097e0 <__i2b>
100066d8:	1023883a 	mov	r17,r2
100066dc:	a0000826 	beq	r20,zero,10006700 <_dtoa_r+0xa0c>
100066e0:	0580070e 	bge	zero,r22,10006700 <_dtoa_r+0xa0c>
100066e4:	a005883a 	mov	r2,r20
100066e8:	b500b916 	blt	r22,r20,100069d0 <_dtoa_r+0xcdc>
100066ec:	d9000817 	ldw	r4,32(sp)
100066f0:	a0a9c83a 	sub	r20,r20,r2
100066f4:	b0adc83a 	sub	r22,r22,r2
100066f8:	2089c83a 	sub	r4,r4,r2
100066fc:	d9000815 	stw	r4,32(sp)
10006700:	d9800a17 	ldw	r6,40(sp)
10006704:	0181810e 	bge	zero,r6,10006d0c <_dtoa_r+0x1018>
10006708:	d9c00b17 	ldw	r7,44(sp)
1000670c:	3800b326 	beq	r7,zero,100069dc <_dtoa_r+0xce8>
10006710:	a800b226 	beq	r21,zero,100069dc <_dtoa_r+0xce8>
10006714:	880b883a 	mov	r5,r17
10006718:	a80d883a 	mov	r6,r21
1000671c:	e009883a 	mov	r4,fp
10006720:	0009aa80 	call	10009aa8 <__pow5mult>
10006724:	d9800917 	ldw	r6,36(sp)
10006728:	100b883a 	mov	r5,r2
1000672c:	e009883a 	mov	r4,fp
10006730:	1023883a 	mov	r17,r2
10006734:	000981c0 	call	1000981c <__multiply>
10006738:	1021883a 	mov	r16,r2
1000673c:	d8800a17 	ldw	r2,40(sp)
10006740:	d9400917 	ldw	r5,36(sp)
10006744:	e009883a 	mov	r4,fp
10006748:	1545c83a 	sub	r2,r2,r21
1000674c:	d8800a15 	stw	r2,40(sp)
10006750:	00094540 	call	10009454 <_Bfree>
10006754:	d8c00a17 	ldw	r3,40(sp)
10006758:	18009f1e 	bne	r3,zero,100069d8 <_dtoa_r+0xce4>
1000675c:	05c00044 	movi	r23,1
10006760:	e009883a 	mov	r4,fp
10006764:	b80b883a 	mov	r5,r23
10006768:	00097e00 	call	100097e0 <__i2b>
1000676c:	d9000d17 	ldw	r4,52(sp)
10006770:	102b883a 	mov	r21,r2
10006774:	2000ce26 	beq	r4,zero,10006ab0 <_dtoa_r+0xdbc>
10006778:	200d883a 	mov	r6,r4
1000677c:	100b883a 	mov	r5,r2
10006780:	e009883a 	mov	r4,fp
10006784:	0009aa80 	call	10009aa8 <__pow5mult>
10006788:	d9800317 	ldw	r6,12(sp)
1000678c:	102b883a 	mov	r21,r2
10006790:	b981810e 	bge	r23,r6,10006d98 <_dtoa_r+0x10a4>
10006794:	0027883a 	mov	r19,zero
10006798:	a8800417 	ldw	r2,16(r21)
1000679c:	05c00804 	movi	r23,32
100067a0:	10800104 	addi	r2,r2,4
100067a4:	1085883a 	add	r2,r2,r2
100067a8:	1085883a 	add	r2,r2,r2
100067ac:	a885883a 	add	r2,r21,r2
100067b0:	11000017 	ldw	r4,0(r2)
100067b4:	00096c80 	call	100096c8 <__hi0bits>
100067b8:	b885c83a 	sub	r2,r23,r2
100067bc:	1585883a 	add	r2,r2,r22
100067c0:	108007cc 	andi	r2,r2,31
100067c4:	1000b326 	beq	r2,zero,10006a94 <_dtoa_r+0xda0>
100067c8:	00c00804 	movi	r3,32
100067cc:	1887c83a 	sub	r3,r3,r2
100067d0:	01000104 	movi	r4,4
100067d4:	20c2cd0e 	bge	r4,r3,1000730c <_dtoa_r+0x1618>
100067d8:	00c00704 	movi	r3,28
100067dc:	1885c83a 	sub	r2,r3,r2
100067e0:	d8c00817 	ldw	r3,32(sp)
100067e4:	a0a9883a 	add	r20,r20,r2
100067e8:	b0ad883a 	add	r22,r22,r2
100067ec:	1887883a 	add	r3,r3,r2
100067f0:	d8c00815 	stw	r3,32(sp)
100067f4:	d9800817 	ldw	r6,32(sp)
100067f8:	0180040e 	bge	zero,r6,1000680c <_dtoa_r+0xb18>
100067fc:	800b883a 	mov	r5,r16
10006800:	e009883a 	mov	r4,fp
10006804:	0009be80 	call	10009be8 <__lshift>
10006808:	1021883a 	mov	r16,r2
1000680c:	0580050e 	bge	zero,r22,10006824 <_dtoa_r+0xb30>
10006810:	a80b883a 	mov	r5,r21
10006814:	b00d883a 	mov	r6,r22
10006818:	e009883a 	mov	r4,fp
1000681c:	0009be80 	call	10009be8 <__lshift>
10006820:	102b883a 	mov	r21,r2
10006824:	d9c00e17 	ldw	r7,56(sp)
10006828:	3801211e 	bne	r7,zero,10006cb0 <_dtoa_r+0xfbc>
1000682c:	d9800617 	ldw	r6,24(sp)
10006830:	0181380e 	bge	zero,r6,10006d14 <_dtoa_r+0x1020>
10006834:	d8c00b17 	ldw	r3,44(sp)
10006838:	1800ab1e 	bne	r3,zero,10006ae8 <_dtoa_r+0xdf4>
1000683c:	dc800717 	ldw	r18,28(sp)
10006840:	dcc00617 	ldw	r19,24(sp)
10006844:	9029883a 	mov	r20,r18
10006848:	00000206 	br	10006854 <_dtoa_r+0xb60>
1000684c:	000947c0 	call	1000947c <__multadd>
10006850:	1021883a 	mov	r16,r2
10006854:	a80b883a 	mov	r5,r21
10006858:	8009883a 	mov	r4,r16
1000685c:	0005acc0 	call	10005acc <quorem>
10006860:	10800c04 	addi	r2,r2,48
10006864:	90800005 	stb	r2,0(r18)
10006868:	94800044 	addi	r18,r18,1
1000686c:	9507c83a 	sub	r3,r18,r20
10006870:	000f883a 	mov	r7,zero
10006874:	01800284 	movi	r6,10
10006878:	800b883a 	mov	r5,r16
1000687c:	e009883a 	mov	r4,fp
10006880:	1cfff216 	blt	r3,r19,1000684c <__alt_data_end+0xf800684c>
10006884:	1011883a 	mov	r8,r2
10006888:	d8800617 	ldw	r2,24(sp)
1000688c:	0082370e 	bge	zero,r2,1000716c <_dtoa_r+0x1478>
10006890:	d9000717 	ldw	r4,28(sp)
10006894:	0025883a 	mov	r18,zero
10006898:	20af883a 	add	r23,r4,r2
1000689c:	01800044 	movi	r6,1
100068a0:	800b883a 	mov	r5,r16
100068a4:	e009883a 	mov	r4,fp
100068a8:	da001715 	stw	r8,92(sp)
100068ac:	0009be80 	call	10009be8 <__lshift>
100068b0:	a80b883a 	mov	r5,r21
100068b4:	1009883a 	mov	r4,r2
100068b8:	d8800915 	stw	r2,36(sp)
100068bc:	0009d300 	call	10009d30 <__mcmp>
100068c0:	da001717 	ldw	r8,92(sp)
100068c4:	0081800e 	bge	zero,r2,10006ec8 <_dtoa_r+0x11d4>
100068c8:	b93fffc3 	ldbu	r4,-1(r23)
100068cc:	b8bfffc4 	addi	r2,r23,-1
100068d0:	1007883a 	mov	r3,r2
100068d4:	01800e44 	movi	r6,57
100068d8:	d9c00717 	ldw	r7,28(sp)
100068dc:	00000506 	br	100068f4 <_dtoa_r+0xc00>
100068e0:	18ffffc4 	addi	r3,r3,-1
100068e4:	11c12326 	beq	r2,r7,10006d74 <_dtoa_r+0x1080>
100068e8:	19000003 	ldbu	r4,0(r3)
100068ec:	102f883a 	mov	r23,r2
100068f0:	10bfffc4 	addi	r2,r2,-1
100068f4:	21403fcc 	andi	r5,r4,255
100068f8:	2940201c 	xori	r5,r5,128
100068fc:	297fe004 	addi	r5,r5,-128
10006900:	29bff726 	beq	r5,r6,100068e0 <__alt_data_end+0xf80068e0>
10006904:	21000044 	addi	r4,r4,1
10006908:	11000005 	stb	r4,0(r2)
1000690c:	a80b883a 	mov	r5,r21
10006910:	e009883a 	mov	r4,fp
10006914:	00094540 	call	10009454 <_Bfree>
10006918:	883ea026 	beq	r17,zero,1000639c <__alt_data_end+0xf800639c>
1000691c:	90000426 	beq	r18,zero,10006930 <_dtoa_r+0xc3c>
10006920:	94400326 	beq	r18,r17,10006930 <_dtoa_r+0xc3c>
10006924:	900b883a 	mov	r5,r18
10006928:	e009883a 	mov	r4,fp
1000692c:	00094540 	call	10009454 <_Bfree>
10006930:	880b883a 	mov	r5,r17
10006934:	e009883a 	mov	r4,fp
10006938:	00094540 	call	10009454 <_Bfree>
1000693c:	003e9706 	br	1000639c <__alt_data_end+0xf800639c>
10006940:	01800044 	movi	r6,1
10006944:	d9800e15 	stw	r6,56(sp)
10006948:	003d9606 	br	10005fa4 <__alt_data_end+0xf8005fa4>
1000694c:	d8800817 	ldw	r2,32(sp)
10006950:	d8c00517 	ldw	r3,20(sp)
10006954:	d8000d15 	stw	zero,52(sp)
10006958:	10c5c83a 	sub	r2,r2,r3
1000695c:	00c9c83a 	sub	r4,zero,r3
10006960:	d8800815 	stw	r2,32(sp)
10006964:	d9000a15 	stw	r4,40(sp)
10006968:	003d9706 	br	10005fc8 <__alt_data_end+0xf8005fc8>
1000696c:	05adc83a 	sub	r22,zero,r22
10006970:	dd800815 	stw	r22,32(sp)
10006974:	002d883a 	mov	r22,zero
10006978:	003d8e06 	br	10005fb4 <__alt_data_end+0xf8005fb4>
1000697c:	d9000517 	ldw	r4,20(sp)
10006980:	00115e40 	call	100115e4 <__floatsidf>
10006984:	100d883a 	mov	r6,r2
10006988:	180f883a 	mov	r7,r3
1000698c:	a009883a 	mov	r4,r20
10006990:	880b883a 	mov	r5,r17
10006994:	00101a40 	call	100101a4 <__eqdf2>
10006998:	103d7126 	beq	r2,zero,10005f60 <__alt_data_end+0xf8005f60>
1000699c:	d9c00517 	ldw	r7,20(sp)
100069a0:	39ffffc4 	addi	r7,r7,-1
100069a4:	d9c00515 	stw	r7,20(sp)
100069a8:	003d6d06 	br	10005f60 <__alt_data_end+0xf8005f60>
100069ac:	dd400a17 	ldw	r21,40(sp)
100069b0:	dd000817 	ldw	r20,32(sp)
100069b4:	0023883a 	mov	r17,zero
100069b8:	003f4806 	br	100066dc <__alt_data_end+0xf80066dc>
100069bc:	10e3c83a 	sub	r17,r2,r3
100069c0:	9448983a 	sll	r4,r18,r17
100069c4:	003d3206 	br	10005e90 <__alt_data_end+0xf8005e90>
100069c8:	d8000e15 	stw	zero,56(sp)
100069cc:	003d7506 	br	10005fa4 <__alt_data_end+0xf8005fa4>
100069d0:	b005883a 	mov	r2,r22
100069d4:	003f4506 	br	100066ec <__alt_data_end+0xf80066ec>
100069d8:	dc000915 	stw	r16,36(sp)
100069dc:	d9800a17 	ldw	r6,40(sp)
100069e0:	d9400917 	ldw	r5,36(sp)
100069e4:	e009883a 	mov	r4,fp
100069e8:	0009aa80 	call	10009aa8 <__pow5mult>
100069ec:	1021883a 	mov	r16,r2
100069f0:	003f5a06 	br	1000675c <__alt_data_end+0xf800675c>
100069f4:	01c00044 	movi	r7,1
100069f8:	d9c00b15 	stw	r7,44(sp)
100069fc:	d8802217 	ldw	r2,136(sp)
10006a00:	0081280e 	bge	zero,r2,10006ea4 <_dtoa_r+0x11b0>
10006a04:	100d883a 	mov	r6,r2
10006a08:	1021883a 	mov	r16,r2
10006a0c:	d8800c15 	stw	r2,48(sp)
10006a10:	d8800615 	stw	r2,24(sp)
10006a14:	003d8806 	br	10006038 <__alt_data_end+0xf8006038>
10006a18:	d8800617 	ldw	r2,24(sp)
10006a1c:	00be9b16 	blt	zero,r2,1000648c <__alt_data_end+0xf800648c>
10006a20:	10010f1e 	bne	r2,zero,10006e60 <_dtoa_r+0x116c>
10006a24:	880b883a 	mov	r5,r17
10006a28:	000d883a 	mov	r6,zero
10006a2c:	01d00534 	movhi	r7,16404
10006a30:	8009883a 	mov	r4,r16
10006a34:	00103fc0 	call	100103fc <__muldf3>
10006a38:	900d883a 	mov	r6,r18
10006a3c:	980f883a 	mov	r7,r19
10006a40:	1009883a 	mov	r4,r2
10006a44:	180b883a 	mov	r5,r3
10006a48:	001022c0 	call	1001022c <__gedf2>
10006a4c:	002b883a 	mov	r21,zero
10006a50:	0023883a 	mov	r17,zero
10006a54:	1000bf16 	blt	r2,zero,10006d54 <_dtoa_r+0x1060>
10006a58:	d9802217 	ldw	r6,136(sp)
10006a5c:	ddc00717 	ldw	r23,28(sp)
10006a60:	018c303a 	nor	r6,zero,r6
10006a64:	d9800515 	stw	r6,20(sp)
10006a68:	a80b883a 	mov	r5,r21
10006a6c:	e009883a 	mov	r4,fp
10006a70:	00094540 	call	10009454 <_Bfree>
10006a74:	883e4926 	beq	r17,zero,1000639c <__alt_data_end+0xf800639c>
10006a78:	003fad06 	br	10006930 <__alt_data_end+0xf8006930>
10006a7c:	d9c01117 	ldw	r7,68(sp)
10006a80:	3801bc26 	beq	r7,zero,10007174 <_dtoa_r+0x1480>
10006a84:	10810cc4 	addi	r2,r2,1075
10006a88:	dd400a17 	ldw	r21,40(sp)
10006a8c:	dd000817 	ldw	r20,32(sp)
10006a90:	003f0a06 	br	100066bc <__alt_data_end+0xf80066bc>
10006a94:	00800704 	movi	r2,28
10006a98:	d9000817 	ldw	r4,32(sp)
10006a9c:	a0a9883a 	add	r20,r20,r2
10006aa0:	b0ad883a 	add	r22,r22,r2
10006aa4:	2089883a 	add	r4,r4,r2
10006aa8:	d9000815 	stw	r4,32(sp)
10006aac:	003f5106 	br	100067f4 <__alt_data_end+0xf80067f4>
10006ab0:	d8c00317 	ldw	r3,12(sp)
10006ab4:	b8c1fc0e 	bge	r23,r3,100072a8 <_dtoa_r+0x15b4>
10006ab8:	0027883a 	mov	r19,zero
10006abc:	b805883a 	mov	r2,r23
10006ac0:	003f3e06 	br	100067bc <__alt_data_end+0xf80067bc>
10006ac4:	880b883a 	mov	r5,r17
10006ac8:	e009883a 	mov	r4,fp
10006acc:	000f883a 	mov	r7,zero
10006ad0:	01800284 	movi	r6,10
10006ad4:	000947c0 	call	1000947c <__multadd>
10006ad8:	d9000c17 	ldw	r4,48(sp)
10006adc:	1023883a 	mov	r17,r2
10006ae0:	0102040e 	bge	zero,r4,100072f4 <_dtoa_r+0x1600>
10006ae4:	d9000615 	stw	r4,24(sp)
10006ae8:	0500050e 	bge	zero,r20,10006b00 <_dtoa_r+0xe0c>
10006aec:	880b883a 	mov	r5,r17
10006af0:	a00d883a 	mov	r6,r20
10006af4:	e009883a 	mov	r4,fp
10006af8:	0009be80 	call	10009be8 <__lshift>
10006afc:	1023883a 	mov	r17,r2
10006b00:	9801241e 	bne	r19,zero,10006f94 <_dtoa_r+0x12a0>
10006b04:	8829883a 	mov	r20,r17
10006b08:	d9000617 	ldw	r4,24(sp)
10006b0c:	dcc00717 	ldw	r19,28(sp)
10006b10:	9480004c 	andi	r18,r18,1
10006b14:	20bfffc4 	addi	r2,r4,-1
10006b18:	9885883a 	add	r2,r19,r2
10006b1c:	d8800415 	stw	r2,16(sp)
10006b20:	dc800615 	stw	r18,24(sp)
10006b24:	a80b883a 	mov	r5,r21
10006b28:	8009883a 	mov	r4,r16
10006b2c:	0005acc0 	call	10005acc <quorem>
10006b30:	880b883a 	mov	r5,r17
10006b34:	8009883a 	mov	r4,r16
10006b38:	102f883a 	mov	r23,r2
10006b3c:	0009d300 	call	10009d30 <__mcmp>
10006b40:	a80b883a 	mov	r5,r21
10006b44:	a00d883a 	mov	r6,r20
10006b48:	e009883a 	mov	r4,fp
10006b4c:	102d883a 	mov	r22,r2
10006b50:	0009d900 	call	10009d90 <__mdiff>
10006b54:	1007883a 	mov	r3,r2
10006b58:	10800317 	ldw	r2,12(r2)
10006b5c:	bc800c04 	addi	r18,r23,48
10006b60:	180b883a 	mov	r5,r3
10006b64:	10004e1e 	bne	r2,zero,10006ca0 <_dtoa_r+0xfac>
10006b68:	8009883a 	mov	r4,r16
10006b6c:	d8c01615 	stw	r3,88(sp)
10006b70:	0009d300 	call	10009d30 <__mcmp>
10006b74:	d8c01617 	ldw	r3,88(sp)
10006b78:	e009883a 	mov	r4,fp
10006b7c:	d8801615 	stw	r2,88(sp)
10006b80:	180b883a 	mov	r5,r3
10006b84:	00094540 	call	10009454 <_Bfree>
10006b88:	d8801617 	ldw	r2,88(sp)
10006b8c:	1000041e 	bne	r2,zero,10006ba0 <_dtoa_r+0xeac>
10006b90:	d9800317 	ldw	r6,12(sp)
10006b94:	3000021e 	bne	r6,zero,10006ba0 <_dtoa_r+0xeac>
10006b98:	d8c00617 	ldw	r3,24(sp)
10006b9c:	18003726 	beq	r3,zero,10006c7c <_dtoa_r+0xf88>
10006ba0:	b0002016 	blt	r22,zero,10006c24 <_dtoa_r+0xf30>
10006ba4:	b000041e 	bne	r22,zero,10006bb8 <_dtoa_r+0xec4>
10006ba8:	d9000317 	ldw	r4,12(sp)
10006bac:	2000021e 	bne	r4,zero,10006bb8 <_dtoa_r+0xec4>
10006bb0:	d8c00617 	ldw	r3,24(sp)
10006bb4:	18001b26 	beq	r3,zero,10006c24 <_dtoa_r+0xf30>
10006bb8:	00810716 	blt	zero,r2,10006fd8 <_dtoa_r+0x12e4>
10006bbc:	d8c00417 	ldw	r3,16(sp)
10006bc0:	9d800044 	addi	r22,r19,1
10006bc4:	9c800005 	stb	r18,0(r19)
10006bc8:	b02f883a 	mov	r23,r22
10006bcc:	98c10626 	beq	r19,r3,10006fe8 <_dtoa_r+0x12f4>
10006bd0:	800b883a 	mov	r5,r16
10006bd4:	000f883a 	mov	r7,zero
10006bd8:	01800284 	movi	r6,10
10006bdc:	e009883a 	mov	r4,fp
10006be0:	000947c0 	call	1000947c <__multadd>
10006be4:	1021883a 	mov	r16,r2
10006be8:	000f883a 	mov	r7,zero
10006bec:	01800284 	movi	r6,10
10006bf0:	880b883a 	mov	r5,r17
10006bf4:	e009883a 	mov	r4,fp
10006bf8:	8d002526 	beq	r17,r20,10006c90 <_dtoa_r+0xf9c>
10006bfc:	000947c0 	call	1000947c <__multadd>
10006c00:	a00b883a 	mov	r5,r20
10006c04:	000f883a 	mov	r7,zero
10006c08:	01800284 	movi	r6,10
10006c0c:	e009883a 	mov	r4,fp
10006c10:	1023883a 	mov	r17,r2
10006c14:	000947c0 	call	1000947c <__multadd>
10006c18:	1029883a 	mov	r20,r2
10006c1c:	b027883a 	mov	r19,r22
10006c20:	003fc006 	br	10006b24 <__alt_data_end+0xf8006b24>
10006c24:	9011883a 	mov	r8,r18
10006c28:	00800e0e 	bge	zero,r2,10006c64 <_dtoa_r+0xf70>
10006c2c:	800b883a 	mov	r5,r16
10006c30:	01800044 	movi	r6,1
10006c34:	e009883a 	mov	r4,fp
10006c38:	da001715 	stw	r8,92(sp)
10006c3c:	0009be80 	call	10009be8 <__lshift>
10006c40:	a80b883a 	mov	r5,r21
10006c44:	1009883a 	mov	r4,r2
10006c48:	1021883a 	mov	r16,r2
10006c4c:	0009d300 	call	10009d30 <__mcmp>
10006c50:	da001717 	ldw	r8,92(sp)
10006c54:	0081960e 	bge	zero,r2,100072b0 <_dtoa_r+0x15bc>
10006c58:	00800e44 	movi	r2,57
10006c5c:	40817026 	beq	r8,r2,10007220 <_dtoa_r+0x152c>
10006c60:	ba000c44 	addi	r8,r23,49
10006c64:	8825883a 	mov	r18,r17
10006c68:	9dc00044 	addi	r23,r19,1
10006c6c:	9a000005 	stb	r8,0(r19)
10006c70:	a023883a 	mov	r17,r20
10006c74:	dc000915 	stw	r16,36(sp)
10006c78:	003f2406 	br	1000690c <__alt_data_end+0xf800690c>
10006c7c:	00800e44 	movi	r2,57
10006c80:	9011883a 	mov	r8,r18
10006c84:	90816626 	beq	r18,r2,10007220 <_dtoa_r+0x152c>
10006c88:	05bff516 	blt	zero,r22,10006c60 <__alt_data_end+0xf8006c60>
10006c8c:	003ff506 	br	10006c64 <__alt_data_end+0xf8006c64>
10006c90:	000947c0 	call	1000947c <__multadd>
10006c94:	1023883a 	mov	r17,r2
10006c98:	1029883a 	mov	r20,r2
10006c9c:	003fdf06 	br	10006c1c <__alt_data_end+0xf8006c1c>
10006ca0:	e009883a 	mov	r4,fp
10006ca4:	00094540 	call	10009454 <_Bfree>
10006ca8:	00800044 	movi	r2,1
10006cac:	003fbc06 	br	10006ba0 <__alt_data_end+0xf8006ba0>
10006cb0:	a80b883a 	mov	r5,r21
10006cb4:	8009883a 	mov	r4,r16
10006cb8:	0009d300 	call	10009d30 <__mcmp>
10006cbc:	103edb0e 	bge	r2,zero,1000682c <__alt_data_end+0xf800682c>
10006cc0:	800b883a 	mov	r5,r16
10006cc4:	000f883a 	mov	r7,zero
10006cc8:	01800284 	movi	r6,10
10006ccc:	e009883a 	mov	r4,fp
10006cd0:	000947c0 	call	1000947c <__multadd>
10006cd4:	1021883a 	mov	r16,r2
10006cd8:	d8800517 	ldw	r2,20(sp)
10006cdc:	d8c00b17 	ldw	r3,44(sp)
10006ce0:	10bfffc4 	addi	r2,r2,-1
10006ce4:	d8800515 	stw	r2,20(sp)
10006ce8:	183f761e 	bne	r3,zero,10006ac4 <__alt_data_end+0xf8006ac4>
10006cec:	d9000c17 	ldw	r4,48(sp)
10006cf0:	0101730e 	bge	zero,r4,100072c0 <_dtoa_r+0x15cc>
10006cf4:	d9000615 	stw	r4,24(sp)
10006cf8:	003ed006 	br	1000683c <__alt_data_end+0xf800683c>
10006cfc:	00800084 	movi	r2,2
10006d00:	3081861e 	bne	r6,r2,1000731c <_dtoa_r+0x1628>
10006d04:	d8000b15 	stw	zero,44(sp)
10006d08:	003f3c06 	br	100069fc <__alt_data_end+0xf80069fc>
10006d0c:	dc000917 	ldw	r16,36(sp)
10006d10:	003e9206 	br	1000675c <__alt_data_end+0xf800675c>
10006d14:	d9c00317 	ldw	r7,12(sp)
10006d18:	00800084 	movi	r2,2
10006d1c:	11fec50e 	bge	r2,r7,10006834 <__alt_data_end+0xf8006834>
10006d20:	d9000617 	ldw	r4,24(sp)
10006d24:	20013c1e 	bne	r4,zero,10007218 <_dtoa_r+0x1524>
10006d28:	a80b883a 	mov	r5,r21
10006d2c:	000f883a 	mov	r7,zero
10006d30:	01800144 	movi	r6,5
10006d34:	e009883a 	mov	r4,fp
10006d38:	000947c0 	call	1000947c <__multadd>
10006d3c:	100b883a 	mov	r5,r2
10006d40:	8009883a 	mov	r4,r16
10006d44:	102b883a 	mov	r21,r2
10006d48:	0009d300 	call	10009d30 <__mcmp>
10006d4c:	dc000915 	stw	r16,36(sp)
10006d50:	00bf410e 	bge	zero,r2,10006a58 <__alt_data_end+0xf8006a58>
10006d54:	d9c00717 	ldw	r7,28(sp)
10006d58:	00800c44 	movi	r2,49
10006d5c:	38800005 	stb	r2,0(r7)
10006d60:	d8800517 	ldw	r2,20(sp)
10006d64:	3dc00044 	addi	r23,r7,1
10006d68:	10800044 	addi	r2,r2,1
10006d6c:	d8800515 	stw	r2,20(sp)
10006d70:	003f3d06 	br	10006a68 <__alt_data_end+0xf8006a68>
10006d74:	d9800517 	ldw	r6,20(sp)
10006d78:	d9c00717 	ldw	r7,28(sp)
10006d7c:	00800c44 	movi	r2,49
10006d80:	31800044 	addi	r6,r6,1
10006d84:	d9800515 	stw	r6,20(sp)
10006d88:	38800005 	stb	r2,0(r7)
10006d8c:	003edf06 	br	1000690c <__alt_data_end+0xf800690c>
10006d90:	d8000b15 	stw	zero,44(sp)
10006d94:	003c9f06 	br	10006014 <__alt_data_end+0xf8006014>
10006d98:	903e7e1e 	bne	r18,zero,10006794 <__alt_data_end+0xf8006794>
10006d9c:	00800434 	movhi	r2,16
10006da0:	10bfffc4 	addi	r2,r2,-1
10006da4:	9884703a 	and	r2,r19,r2
10006da8:	1000ea1e 	bne	r2,zero,10007154 <_dtoa_r+0x1460>
10006dac:	9cdffc2c 	andhi	r19,r19,32752
10006db0:	9800e826 	beq	r19,zero,10007154 <_dtoa_r+0x1460>
10006db4:	d9c00817 	ldw	r7,32(sp)
10006db8:	b5800044 	addi	r22,r22,1
10006dbc:	04c00044 	movi	r19,1
10006dc0:	39c00044 	addi	r7,r7,1
10006dc4:	d9c00815 	stw	r7,32(sp)
10006dc8:	d8800d17 	ldw	r2,52(sp)
10006dcc:	103e721e 	bne	r2,zero,10006798 <__alt_data_end+0xf8006798>
10006dd0:	00800044 	movi	r2,1
10006dd4:	003e7906 	br	100067bc <__alt_data_end+0xf80067bc>
10006dd8:	8009883a 	mov	r4,r16
10006ddc:	00115e40 	call	100115e4 <__floatsidf>
10006de0:	d9800f17 	ldw	r6,60(sp)
10006de4:	d9c01017 	ldw	r7,64(sp)
10006de8:	1009883a 	mov	r4,r2
10006dec:	180b883a 	mov	r5,r3
10006df0:	00103fc0 	call	100103fc <__muldf3>
10006df4:	000d883a 	mov	r6,zero
10006df8:	01d00734 	movhi	r7,16412
10006dfc:	1009883a 	mov	r4,r2
10006e00:	180b883a 	mov	r5,r3
10006e04:	000ef280 	call	1000ef28 <__adddf3>
10006e08:	047f3034 	movhi	r17,64704
10006e0c:	1021883a 	mov	r16,r2
10006e10:	1c63883a 	add	r17,r3,r17
10006e14:	d9000f17 	ldw	r4,60(sp)
10006e18:	d9401017 	ldw	r5,64(sp)
10006e1c:	000d883a 	mov	r6,zero
10006e20:	01d00534 	movhi	r7,16404
10006e24:	0010c680 	call	10010c68 <__subdf3>
10006e28:	800d883a 	mov	r6,r16
10006e2c:	880f883a 	mov	r7,r17
10006e30:	1009883a 	mov	r4,r2
10006e34:	180b883a 	mov	r5,r3
10006e38:	102b883a 	mov	r21,r2
10006e3c:	1829883a 	mov	r20,r3
10006e40:	001022c0 	call	1001022c <__gedf2>
10006e44:	00806c16 	blt	zero,r2,10006ff8 <_dtoa_r+0x1304>
10006e48:	89e0003c 	xorhi	r7,r17,32768
10006e4c:	800d883a 	mov	r6,r16
10006e50:	a809883a 	mov	r4,r21
10006e54:	a00b883a 	mov	r5,r20
10006e58:	00103080 	call	10010308 <__ledf2>
10006e5c:	103d7e0e 	bge	r2,zero,10006458 <__alt_data_end+0xf8006458>
10006e60:	002b883a 	mov	r21,zero
10006e64:	0023883a 	mov	r17,zero
10006e68:	003efb06 	br	10006a58 <__alt_data_end+0xf8006a58>
10006e6c:	d8800717 	ldw	r2,28(sp)
10006e70:	003bd006 	br	10005db4 <__alt_data_end+0xf8005db4>
10006e74:	d9000a17 	ldw	r4,40(sp)
10006e78:	d9800d17 	ldw	r6,52(sp)
10006e7c:	dd400a15 	stw	r21,40(sp)
10006e80:	a905c83a 	sub	r2,r21,r4
10006e84:	308d883a 	add	r6,r6,r2
10006e88:	d9800d15 	stw	r6,52(sp)
10006e8c:	002b883a 	mov	r21,zero
10006e90:	003e0606 	br	100066ac <__alt_data_end+0xf80066ac>
10006e94:	9023883a 	mov	r17,r18
10006e98:	9829883a 	mov	r20,r19
10006e9c:	04000084 	movi	r16,2
10006ea0:	003c9206 	br	100060ec <__alt_data_end+0xf80060ec>
10006ea4:	04000044 	movi	r16,1
10006ea8:	dc000c15 	stw	r16,48(sp)
10006eac:	dc000615 	stw	r16,24(sp)
10006eb0:	dc002215 	stw	r16,136(sp)
10006eb4:	e0001115 	stw	zero,68(fp)
10006eb8:	000b883a 	mov	r5,zero
10006ebc:	003c6906 	br	10006064 <__alt_data_end+0xf8006064>
10006ec0:	3021883a 	mov	r16,r6
10006ec4:	003ffb06 	br	10006eb4 <__alt_data_end+0xf8006eb4>
10006ec8:	1000021e 	bne	r2,zero,10006ed4 <_dtoa_r+0x11e0>
10006ecc:	4200004c 	andi	r8,r8,1
10006ed0:	403e7d1e 	bne	r8,zero,100068c8 <__alt_data_end+0xf80068c8>
10006ed4:	01000c04 	movi	r4,48
10006ed8:	00000106 	br	10006ee0 <_dtoa_r+0x11ec>
10006edc:	102f883a 	mov	r23,r2
10006ee0:	b8bfffc4 	addi	r2,r23,-1
10006ee4:	10c00007 	ldb	r3,0(r2)
10006ee8:	193ffc26 	beq	r3,r4,10006edc <__alt_data_end+0xf8006edc>
10006eec:	003e8706 	br	1000690c <__alt_data_end+0xf800690c>
10006ef0:	d8800517 	ldw	r2,20(sp)
10006ef4:	00a3c83a 	sub	r17,zero,r2
10006ef8:	8800a426 	beq	r17,zero,1000718c <_dtoa_r+0x1498>
10006efc:	888003cc 	andi	r2,r17,15
10006f00:	100490fa 	slli	r2,r2,3
10006f04:	00c40074 	movhi	r3,4097
10006f08:	18d07c04 	addi	r3,r3,16880
10006f0c:	1885883a 	add	r2,r3,r2
10006f10:	11800017 	ldw	r6,0(r2)
10006f14:	11c00117 	ldw	r7,4(r2)
10006f18:	9009883a 	mov	r4,r18
10006f1c:	980b883a 	mov	r5,r19
10006f20:	8823d13a 	srai	r17,r17,4
10006f24:	00103fc0 	call	100103fc <__muldf3>
10006f28:	d8800f15 	stw	r2,60(sp)
10006f2c:	d8c01015 	stw	r3,64(sp)
10006f30:	8800e826 	beq	r17,zero,100072d4 <_dtoa_r+0x15e0>
10006f34:	05040074 	movhi	r20,4097
10006f38:	a5107204 	addi	r20,r20,16840
10006f3c:	04000084 	movi	r16,2
10006f40:	8980004c 	andi	r6,r17,1
10006f44:	1009883a 	mov	r4,r2
10006f48:	8823d07a 	srai	r17,r17,1
10006f4c:	180b883a 	mov	r5,r3
10006f50:	30000426 	beq	r6,zero,10006f64 <_dtoa_r+0x1270>
10006f54:	a1800017 	ldw	r6,0(r20)
10006f58:	a1c00117 	ldw	r7,4(r20)
10006f5c:	84000044 	addi	r16,r16,1
10006f60:	00103fc0 	call	100103fc <__muldf3>
10006f64:	a5000204 	addi	r20,r20,8
10006f68:	883ff51e 	bne	r17,zero,10006f40 <__alt_data_end+0xf8006f40>
10006f6c:	d8800f15 	stw	r2,60(sp)
10006f70:	d8c01015 	stw	r3,64(sp)
10006f74:	003c7606 	br	10006150 <__alt_data_end+0xf8006150>
10006f78:	00c00c04 	movi	r3,48
10006f7c:	10c00005 	stb	r3,0(r2)
10006f80:	d8c00517 	ldw	r3,20(sp)
10006f84:	bd3fffc3 	ldbu	r20,-1(r23)
10006f88:	18c00044 	addi	r3,r3,1
10006f8c:	d8c00515 	stw	r3,20(sp)
10006f90:	003db906 	br	10006678 <__alt_data_end+0xf8006678>
10006f94:	89400117 	ldw	r5,4(r17)
10006f98:	e009883a 	mov	r4,fp
10006f9c:	00093ac0 	call	100093ac <_Balloc>
10006fa0:	89800417 	ldw	r6,16(r17)
10006fa4:	89400304 	addi	r5,r17,12
10006fa8:	11000304 	addi	r4,r2,12
10006fac:	31800084 	addi	r6,r6,2
10006fb0:	318d883a 	add	r6,r6,r6
10006fb4:	318d883a 	add	r6,r6,r6
10006fb8:	1027883a 	mov	r19,r2
10006fbc:	0008fe00 	call	10008fe0 <memcpy>
10006fc0:	01800044 	movi	r6,1
10006fc4:	980b883a 	mov	r5,r19
10006fc8:	e009883a 	mov	r4,fp
10006fcc:	0009be80 	call	10009be8 <__lshift>
10006fd0:	1029883a 	mov	r20,r2
10006fd4:	003ecc06 	br	10006b08 <__alt_data_end+0xf8006b08>
10006fd8:	00800e44 	movi	r2,57
10006fdc:	90809026 	beq	r18,r2,10007220 <_dtoa_r+0x152c>
10006fe0:	92000044 	addi	r8,r18,1
10006fe4:	003f1f06 	br	10006c64 <__alt_data_end+0xf8006c64>
10006fe8:	9011883a 	mov	r8,r18
10006fec:	8825883a 	mov	r18,r17
10006ff0:	a023883a 	mov	r17,r20
10006ff4:	003e2906 	br	1000689c <__alt_data_end+0xf800689c>
10006ff8:	002b883a 	mov	r21,zero
10006ffc:	0023883a 	mov	r17,zero
10007000:	003f5406 	br	10006d54 <__alt_data_end+0xf8006d54>
10007004:	61bfffc4 	addi	r6,r12,-1
10007008:	300490fa 	slli	r2,r6,3
1000700c:	00c40074 	movhi	r3,4097
10007010:	18d07c04 	addi	r3,r3,16880
10007014:	1885883a 	add	r2,r3,r2
10007018:	11000017 	ldw	r4,0(r2)
1000701c:	11400117 	ldw	r5,4(r2)
10007020:	d8800717 	ldw	r2,28(sp)
10007024:	880f883a 	mov	r7,r17
10007028:	d9801215 	stw	r6,72(sp)
1000702c:	800d883a 	mov	r6,r16
10007030:	db001615 	stw	r12,88(sp)
10007034:	15c00044 	addi	r23,r2,1
10007038:	00103fc0 	call	100103fc <__muldf3>
1000703c:	d9401017 	ldw	r5,64(sp)
10007040:	d9000f17 	ldw	r4,60(sp)
10007044:	d8c01515 	stw	r3,84(sp)
10007048:	d8801415 	stw	r2,80(sp)
1000704c:	00115640 	call	10011564 <__fixdfsi>
10007050:	1009883a 	mov	r4,r2
10007054:	1021883a 	mov	r16,r2
10007058:	00115e40 	call	100115e4 <__floatsidf>
1000705c:	d9000f17 	ldw	r4,60(sp)
10007060:	d9401017 	ldw	r5,64(sp)
10007064:	100d883a 	mov	r6,r2
10007068:	180f883a 	mov	r7,r3
1000706c:	0010c680 	call	10010c68 <__subdf3>
10007070:	1829883a 	mov	r20,r3
10007074:	d8c00717 	ldw	r3,28(sp)
10007078:	84000c04 	addi	r16,r16,48
1000707c:	1023883a 	mov	r17,r2
10007080:	1c000005 	stb	r16,0(r3)
10007084:	db001617 	ldw	r12,88(sp)
10007088:	00800044 	movi	r2,1
1000708c:	60802226 	beq	r12,r2,10007118 <_dtoa_r+0x1424>
10007090:	d9c00717 	ldw	r7,28(sp)
10007094:	8805883a 	mov	r2,r17
10007098:	b82b883a 	mov	r21,r23
1000709c:	3b19883a 	add	r12,r7,r12
100070a0:	6023883a 	mov	r17,r12
100070a4:	a007883a 	mov	r3,r20
100070a8:	dc800f15 	stw	r18,60(sp)
100070ac:	000d883a 	mov	r6,zero
100070b0:	01d00934 	movhi	r7,16420
100070b4:	1009883a 	mov	r4,r2
100070b8:	180b883a 	mov	r5,r3
100070bc:	00103fc0 	call	100103fc <__muldf3>
100070c0:	180b883a 	mov	r5,r3
100070c4:	1009883a 	mov	r4,r2
100070c8:	1829883a 	mov	r20,r3
100070cc:	1025883a 	mov	r18,r2
100070d0:	00115640 	call	10011564 <__fixdfsi>
100070d4:	1009883a 	mov	r4,r2
100070d8:	1021883a 	mov	r16,r2
100070dc:	00115e40 	call	100115e4 <__floatsidf>
100070e0:	100d883a 	mov	r6,r2
100070e4:	180f883a 	mov	r7,r3
100070e8:	9009883a 	mov	r4,r18
100070ec:	a00b883a 	mov	r5,r20
100070f0:	84000c04 	addi	r16,r16,48
100070f4:	0010c680 	call	10010c68 <__subdf3>
100070f8:	ad400044 	addi	r21,r21,1
100070fc:	ac3fffc5 	stb	r16,-1(r21)
10007100:	ac7fea1e 	bne	r21,r17,100070ac <__alt_data_end+0xf80070ac>
10007104:	1023883a 	mov	r17,r2
10007108:	d8801217 	ldw	r2,72(sp)
1000710c:	dc800f17 	ldw	r18,60(sp)
10007110:	1829883a 	mov	r20,r3
10007114:	b8af883a 	add	r23,r23,r2
10007118:	d9001417 	ldw	r4,80(sp)
1000711c:	d9401517 	ldw	r5,84(sp)
10007120:	000d883a 	mov	r6,zero
10007124:	01cff834 	movhi	r7,16352
10007128:	000ef280 	call	1000ef28 <__adddf3>
1000712c:	880d883a 	mov	r6,r17
10007130:	a00f883a 	mov	r7,r20
10007134:	1009883a 	mov	r4,r2
10007138:	180b883a 	mov	r5,r3
1000713c:	00103080 	call	10010308 <__ledf2>
10007140:	10003e0e 	bge	r2,zero,1000723c <_dtoa_r+0x1548>
10007144:	d9001317 	ldw	r4,76(sp)
10007148:	bd3fffc3 	ldbu	r20,-1(r23)
1000714c:	d9000515 	stw	r4,20(sp)
10007150:	003d3b06 	br	10006640 <__alt_data_end+0xf8006640>
10007154:	0027883a 	mov	r19,zero
10007158:	003f1b06 	br	10006dc8 <__alt_data_end+0xf8006dc8>
1000715c:	d8800817 	ldw	r2,32(sp)
10007160:	11e9c83a 	sub	r20,r2,r7
10007164:	0005883a 	mov	r2,zero
10007168:	003d5406 	br	100066bc <__alt_data_end+0xf80066bc>
1000716c:	00800044 	movi	r2,1
10007170:	003dc706 	br	10006890 <__alt_data_end+0xf8006890>
10007174:	d8c00217 	ldw	r3,8(sp)
10007178:	00800d84 	movi	r2,54
1000717c:	dd400a17 	ldw	r21,40(sp)
10007180:	10c5c83a 	sub	r2,r2,r3
10007184:	dd000817 	ldw	r20,32(sp)
10007188:	003d4c06 	br	100066bc <__alt_data_end+0xf80066bc>
1000718c:	dc800f15 	stw	r18,60(sp)
10007190:	dcc01015 	stw	r19,64(sp)
10007194:	04000084 	movi	r16,2
10007198:	003bed06 	br	10006150 <__alt_data_end+0xf8006150>
1000719c:	d9000617 	ldw	r4,24(sp)
100071a0:	203f0d26 	beq	r4,zero,10006dd8 <__alt_data_end+0xf8006dd8>
100071a4:	d9800c17 	ldw	r6,48(sp)
100071a8:	01bcab0e 	bge	zero,r6,10006458 <__alt_data_end+0xf8006458>
100071ac:	d9401017 	ldw	r5,64(sp)
100071b0:	d9000f17 	ldw	r4,60(sp)
100071b4:	000d883a 	mov	r6,zero
100071b8:	01d00934 	movhi	r7,16420
100071bc:	00103fc0 	call	100103fc <__muldf3>
100071c0:	81000044 	addi	r4,r16,1
100071c4:	d8800f15 	stw	r2,60(sp)
100071c8:	d8c01015 	stw	r3,64(sp)
100071cc:	00115e40 	call	100115e4 <__floatsidf>
100071d0:	d9800f17 	ldw	r6,60(sp)
100071d4:	d9c01017 	ldw	r7,64(sp)
100071d8:	1009883a 	mov	r4,r2
100071dc:	180b883a 	mov	r5,r3
100071e0:	00103fc0 	call	100103fc <__muldf3>
100071e4:	01d00734 	movhi	r7,16412
100071e8:	000d883a 	mov	r6,zero
100071ec:	1009883a 	mov	r4,r2
100071f0:	180b883a 	mov	r5,r3
100071f4:	000ef280 	call	1000ef28 <__adddf3>
100071f8:	d9c00517 	ldw	r7,20(sp)
100071fc:	047f3034 	movhi	r17,64704
10007200:	1021883a 	mov	r16,r2
10007204:	39ffffc4 	addi	r7,r7,-1
10007208:	d9c01315 	stw	r7,76(sp)
1000720c:	1c63883a 	add	r17,r3,r17
10007210:	db000c17 	ldw	r12,48(sp)
10007214:	003bea06 	br	100061c0 <__alt_data_end+0xf80061c0>
10007218:	dc000915 	stw	r16,36(sp)
1000721c:	003e0e06 	br	10006a58 <__alt_data_end+0xf8006a58>
10007220:	01000e44 	movi	r4,57
10007224:	8825883a 	mov	r18,r17
10007228:	9dc00044 	addi	r23,r19,1
1000722c:	99000005 	stb	r4,0(r19)
10007230:	a023883a 	mov	r17,r20
10007234:	dc000915 	stw	r16,36(sp)
10007238:	003da406 	br	100068cc <__alt_data_end+0xf80068cc>
1000723c:	d9801417 	ldw	r6,80(sp)
10007240:	d9c01517 	ldw	r7,84(sp)
10007244:	0009883a 	mov	r4,zero
10007248:	014ff834 	movhi	r5,16352
1000724c:	0010c680 	call	10010c68 <__subdf3>
10007250:	880d883a 	mov	r6,r17
10007254:	a00f883a 	mov	r7,r20
10007258:	1009883a 	mov	r4,r2
1000725c:	180b883a 	mov	r5,r3
10007260:	001022c0 	call	1001022c <__gedf2>
10007264:	00bc7c0e 	bge	zero,r2,10006458 <__alt_data_end+0xf8006458>
10007268:	01000c04 	movi	r4,48
1000726c:	00000106 	br	10007274 <_dtoa_r+0x1580>
10007270:	102f883a 	mov	r23,r2
10007274:	b8bfffc4 	addi	r2,r23,-1
10007278:	10c00007 	ldb	r3,0(r2)
1000727c:	193ffc26 	beq	r3,r4,10007270 <__alt_data_end+0xf8007270>
10007280:	d9801317 	ldw	r6,76(sp)
10007284:	d9800515 	stw	r6,20(sp)
10007288:	003c4406 	br	1000639c <__alt_data_end+0xf800639c>
1000728c:	d9801317 	ldw	r6,76(sp)
10007290:	d9800515 	stw	r6,20(sp)
10007294:	003cea06 	br	10006640 <__alt_data_end+0xf8006640>
10007298:	dd800f17 	ldw	r22,60(sp)
1000729c:	dcc01017 	ldw	r19,64(sp)
100072a0:	dc801217 	ldw	r18,72(sp)
100072a4:	003c6c06 	br	10006458 <__alt_data_end+0xf8006458>
100072a8:	903e031e 	bne	r18,zero,10006ab8 <__alt_data_end+0xf8006ab8>
100072ac:	003ebb06 	br	10006d9c <__alt_data_end+0xf8006d9c>
100072b0:	103e6c1e 	bne	r2,zero,10006c64 <__alt_data_end+0xf8006c64>
100072b4:	4080004c 	andi	r2,r8,1
100072b8:	103e6a26 	beq	r2,zero,10006c64 <__alt_data_end+0xf8006c64>
100072bc:	003e6606 	br	10006c58 <__alt_data_end+0xf8006c58>
100072c0:	d8c00317 	ldw	r3,12(sp)
100072c4:	00800084 	movi	r2,2
100072c8:	10c02916 	blt	r2,r3,10007370 <_dtoa_r+0x167c>
100072cc:	d9000c17 	ldw	r4,48(sp)
100072d0:	003e8806 	br	10006cf4 <__alt_data_end+0xf8006cf4>
100072d4:	04000084 	movi	r16,2
100072d8:	003b9d06 	br	10006150 <__alt_data_end+0xf8006150>
100072dc:	d9001317 	ldw	r4,76(sp)
100072e0:	d9000515 	stw	r4,20(sp)
100072e4:	003cd606 	br	10006640 <__alt_data_end+0xf8006640>
100072e8:	d8801317 	ldw	r2,76(sp)
100072ec:	d8800515 	stw	r2,20(sp)
100072f0:	003c2a06 	br	1000639c <__alt_data_end+0xf800639c>
100072f4:	d9800317 	ldw	r6,12(sp)
100072f8:	00800084 	movi	r2,2
100072fc:	11801516 	blt	r2,r6,10007354 <_dtoa_r+0x1660>
10007300:	d9c00c17 	ldw	r7,48(sp)
10007304:	d9c00615 	stw	r7,24(sp)
10007308:	003df706 	br	10006ae8 <__alt_data_end+0xf8006ae8>
1000730c:	193d3926 	beq	r3,r4,100067f4 <__alt_data_end+0xf80067f4>
10007310:	00c00f04 	movi	r3,60
10007314:	1885c83a 	sub	r2,r3,r2
10007318:	003ddf06 	br	10006a98 <__alt_data_end+0xf8006a98>
1000731c:	e009883a 	mov	r4,fp
10007320:	e0001115 	stw	zero,68(fp)
10007324:	000b883a 	mov	r5,zero
10007328:	00093ac0 	call	100093ac <_Balloc>
1000732c:	d8800715 	stw	r2,28(sp)
10007330:	d8c00717 	ldw	r3,28(sp)
10007334:	00bfffc4 	movi	r2,-1
10007338:	01000044 	movi	r4,1
1000733c:	d8800c15 	stw	r2,48(sp)
10007340:	e0c01015 	stw	r3,64(fp)
10007344:	d9000b15 	stw	r4,44(sp)
10007348:	d8800615 	stw	r2,24(sp)
1000734c:	d8002215 	stw	zero,136(sp)
10007350:	003c4106 	br	10006458 <__alt_data_end+0xf8006458>
10007354:	d8c00c17 	ldw	r3,48(sp)
10007358:	d8c00615 	stw	r3,24(sp)
1000735c:	003e7006 	br	10006d20 <__alt_data_end+0xf8006d20>
10007360:	04400044 	movi	r17,1
10007364:	003b2006 	br	10005fe8 <__alt_data_end+0xf8005fe8>
10007368:	000b883a 	mov	r5,zero
1000736c:	003b3d06 	br	10006064 <__alt_data_end+0xf8006064>
10007370:	d8800c17 	ldw	r2,48(sp)
10007374:	d8800615 	stw	r2,24(sp)
10007378:	003e6906 	br	10006d20 <__alt_data_end+0xf8006d20>

1000737c <__sflush_r>:
1000737c:	2880030b 	ldhu	r2,12(r5)
10007380:	defffb04 	addi	sp,sp,-20
10007384:	dcc00315 	stw	r19,12(sp)
10007388:	dc400115 	stw	r17,4(sp)
1000738c:	dfc00415 	stw	ra,16(sp)
10007390:	dc800215 	stw	r18,8(sp)
10007394:	dc000015 	stw	r16,0(sp)
10007398:	10c0020c 	andi	r3,r2,8
1000739c:	2823883a 	mov	r17,r5
100073a0:	2027883a 	mov	r19,r4
100073a4:	1800311e 	bne	r3,zero,1000746c <__sflush_r+0xf0>
100073a8:	28c00117 	ldw	r3,4(r5)
100073ac:	10820014 	ori	r2,r2,2048
100073b0:	2880030d 	sth	r2,12(r5)
100073b4:	00c04b0e 	bge	zero,r3,100074e4 <__sflush_r+0x168>
100073b8:	8a000a17 	ldw	r8,40(r17)
100073bc:	40002326 	beq	r8,zero,1000744c <__sflush_r+0xd0>
100073c0:	9c000017 	ldw	r16,0(r19)
100073c4:	10c4000c 	andi	r3,r2,4096
100073c8:	98000015 	stw	zero,0(r19)
100073cc:	18004826 	beq	r3,zero,100074f0 <__sflush_r+0x174>
100073d0:	89801417 	ldw	r6,80(r17)
100073d4:	10c0010c 	andi	r3,r2,4
100073d8:	18000626 	beq	r3,zero,100073f4 <__sflush_r+0x78>
100073dc:	88c00117 	ldw	r3,4(r17)
100073e0:	88800c17 	ldw	r2,48(r17)
100073e4:	30cdc83a 	sub	r6,r6,r3
100073e8:	10000226 	beq	r2,zero,100073f4 <__sflush_r+0x78>
100073ec:	88800f17 	ldw	r2,60(r17)
100073f0:	308dc83a 	sub	r6,r6,r2
100073f4:	89400717 	ldw	r5,28(r17)
100073f8:	000f883a 	mov	r7,zero
100073fc:	9809883a 	mov	r4,r19
10007400:	403ee83a 	callr	r8
10007404:	00ffffc4 	movi	r3,-1
10007408:	10c04426 	beq	r2,r3,1000751c <__sflush_r+0x1a0>
1000740c:	88c0030b 	ldhu	r3,12(r17)
10007410:	89000417 	ldw	r4,16(r17)
10007414:	88000115 	stw	zero,4(r17)
10007418:	197dffcc 	andi	r5,r3,63487
1000741c:	8940030d 	sth	r5,12(r17)
10007420:	89000015 	stw	r4,0(r17)
10007424:	18c4000c 	andi	r3,r3,4096
10007428:	18002c1e 	bne	r3,zero,100074dc <__sflush_r+0x160>
1000742c:	89400c17 	ldw	r5,48(r17)
10007430:	9c000015 	stw	r16,0(r19)
10007434:	28000526 	beq	r5,zero,1000744c <__sflush_r+0xd0>
10007438:	88801004 	addi	r2,r17,64
1000743c:	28800226 	beq	r5,r2,10007448 <__sflush_r+0xcc>
10007440:	9809883a 	mov	r4,r19
10007444:	0007af80 	call	10007af8 <_free_r>
10007448:	88000c15 	stw	zero,48(r17)
1000744c:	0005883a 	mov	r2,zero
10007450:	dfc00417 	ldw	ra,16(sp)
10007454:	dcc00317 	ldw	r19,12(sp)
10007458:	dc800217 	ldw	r18,8(sp)
1000745c:	dc400117 	ldw	r17,4(sp)
10007460:	dc000017 	ldw	r16,0(sp)
10007464:	dec00504 	addi	sp,sp,20
10007468:	f800283a 	ret
1000746c:	2c800417 	ldw	r18,16(r5)
10007470:	903ff626 	beq	r18,zero,1000744c <__alt_data_end+0xf800744c>
10007474:	2c000017 	ldw	r16,0(r5)
10007478:	108000cc 	andi	r2,r2,3
1000747c:	2c800015 	stw	r18,0(r5)
10007480:	84a1c83a 	sub	r16,r16,r18
10007484:	1000131e 	bne	r2,zero,100074d4 <__sflush_r+0x158>
10007488:	28800517 	ldw	r2,20(r5)
1000748c:	88800215 	stw	r2,8(r17)
10007490:	04000316 	blt	zero,r16,100074a0 <__sflush_r+0x124>
10007494:	003fed06 	br	1000744c <__alt_data_end+0xf800744c>
10007498:	90a5883a 	add	r18,r18,r2
1000749c:	043feb0e 	bge	zero,r16,1000744c <__alt_data_end+0xf800744c>
100074a0:	88800917 	ldw	r2,36(r17)
100074a4:	89400717 	ldw	r5,28(r17)
100074a8:	800f883a 	mov	r7,r16
100074ac:	900d883a 	mov	r6,r18
100074b0:	9809883a 	mov	r4,r19
100074b4:	103ee83a 	callr	r2
100074b8:	80a1c83a 	sub	r16,r16,r2
100074bc:	00bff616 	blt	zero,r2,10007498 <__alt_data_end+0xf8007498>
100074c0:	88c0030b 	ldhu	r3,12(r17)
100074c4:	00bfffc4 	movi	r2,-1
100074c8:	18c01014 	ori	r3,r3,64
100074cc:	88c0030d 	sth	r3,12(r17)
100074d0:	003fdf06 	br	10007450 <__alt_data_end+0xf8007450>
100074d4:	0005883a 	mov	r2,zero
100074d8:	003fec06 	br	1000748c <__alt_data_end+0xf800748c>
100074dc:	88801415 	stw	r2,80(r17)
100074e0:	003fd206 	br	1000742c <__alt_data_end+0xf800742c>
100074e4:	28c00f17 	ldw	r3,60(r5)
100074e8:	00ffb316 	blt	zero,r3,100073b8 <__alt_data_end+0xf80073b8>
100074ec:	003fd706 	br	1000744c <__alt_data_end+0xf800744c>
100074f0:	89400717 	ldw	r5,28(r17)
100074f4:	000d883a 	mov	r6,zero
100074f8:	01c00044 	movi	r7,1
100074fc:	9809883a 	mov	r4,r19
10007500:	403ee83a 	callr	r8
10007504:	100d883a 	mov	r6,r2
10007508:	00bfffc4 	movi	r2,-1
1000750c:	30801426 	beq	r6,r2,10007560 <__sflush_r+0x1e4>
10007510:	8880030b 	ldhu	r2,12(r17)
10007514:	8a000a17 	ldw	r8,40(r17)
10007518:	003fae06 	br	100073d4 <__alt_data_end+0xf80073d4>
1000751c:	98c00017 	ldw	r3,0(r19)
10007520:	183fba26 	beq	r3,zero,1000740c <__alt_data_end+0xf800740c>
10007524:	01000744 	movi	r4,29
10007528:	19000626 	beq	r3,r4,10007544 <__sflush_r+0x1c8>
1000752c:	01000584 	movi	r4,22
10007530:	19000426 	beq	r3,r4,10007544 <__sflush_r+0x1c8>
10007534:	88c0030b 	ldhu	r3,12(r17)
10007538:	18c01014 	ori	r3,r3,64
1000753c:	88c0030d 	sth	r3,12(r17)
10007540:	003fc306 	br	10007450 <__alt_data_end+0xf8007450>
10007544:	8880030b 	ldhu	r2,12(r17)
10007548:	88c00417 	ldw	r3,16(r17)
1000754c:	88000115 	stw	zero,4(r17)
10007550:	10bdffcc 	andi	r2,r2,63487
10007554:	8880030d 	sth	r2,12(r17)
10007558:	88c00015 	stw	r3,0(r17)
1000755c:	003fb306 	br	1000742c <__alt_data_end+0xf800742c>
10007560:	98800017 	ldw	r2,0(r19)
10007564:	103fea26 	beq	r2,zero,10007510 <__alt_data_end+0xf8007510>
10007568:	00c00744 	movi	r3,29
1000756c:	10c00226 	beq	r2,r3,10007578 <__sflush_r+0x1fc>
10007570:	00c00584 	movi	r3,22
10007574:	10c0031e 	bne	r2,r3,10007584 <__sflush_r+0x208>
10007578:	9c000015 	stw	r16,0(r19)
1000757c:	0005883a 	mov	r2,zero
10007580:	003fb306 	br	10007450 <__alt_data_end+0xf8007450>
10007584:	88c0030b 	ldhu	r3,12(r17)
10007588:	3005883a 	mov	r2,r6
1000758c:	18c01014 	ori	r3,r3,64
10007590:	88c0030d 	sth	r3,12(r17)
10007594:	003fae06 	br	10007450 <__alt_data_end+0xf8007450>

10007598 <_fflush_r>:
10007598:	defffd04 	addi	sp,sp,-12
1000759c:	dc000115 	stw	r16,4(sp)
100075a0:	dfc00215 	stw	ra,8(sp)
100075a4:	2021883a 	mov	r16,r4
100075a8:	20000226 	beq	r4,zero,100075b4 <_fflush_r+0x1c>
100075ac:	20800e17 	ldw	r2,56(r4)
100075b0:	10000c26 	beq	r2,zero,100075e4 <_fflush_r+0x4c>
100075b4:	2880030f 	ldh	r2,12(r5)
100075b8:	1000051e 	bne	r2,zero,100075d0 <_fflush_r+0x38>
100075bc:	0005883a 	mov	r2,zero
100075c0:	dfc00217 	ldw	ra,8(sp)
100075c4:	dc000117 	ldw	r16,4(sp)
100075c8:	dec00304 	addi	sp,sp,12
100075cc:	f800283a 	ret
100075d0:	8009883a 	mov	r4,r16
100075d4:	dfc00217 	ldw	ra,8(sp)
100075d8:	dc000117 	ldw	r16,4(sp)
100075dc:	dec00304 	addi	sp,sp,12
100075e0:	000737c1 	jmpi	1000737c <__sflush_r>
100075e4:	d9400015 	stw	r5,0(sp)
100075e8:	00079840 	call	10007984 <__sinit>
100075ec:	d9400017 	ldw	r5,0(sp)
100075f0:	003ff006 	br	100075b4 <__alt_data_end+0xf80075b4>

100075f4 <fflush>:
100075f4:	20000526 	beq	r4,zero,1000760c <fflush+0x18>
100075f8:	00840074 	movhi	r2,4097
100075fc:	10987104 	addi	r2,r2,25028
10007600:	200b883a 	mov	r5,r4
10007604:	11000017 	ldw	r4,0(r2)
10007608:	00075981 	jmpi	10007598 <_fflush_r>
1000760c:	00840074 	movhi	r2,4097
10007610:	10987004 	addi	r2,r2,25024
10007614:	11000017 	ldw	r4,0(r2)
10007618:	01440034 	movhi	r5,4096
1000761c:	295d6604 	addi	r5,r5,30104
10007620:	00083941 	jmpi	10008394 <_fwalk_reent>

10007624 <__fp_unlock>:
10007624:	0005883a 	mov	r2,zero
10007628:	f800283a 	ret

1000762c <_cleanup_r>:
1000762c:	01440074 	movhi	r5,4097
10007630:	2976a804 	addi	r5,r5,-9568
10007634:	00083941 	jmpi	10008394 <_fwalk_reent>

10007638 <__sinit.part.1>:
10007638:	defff704 	addi	sp,sp,-36
1000763c:	00c40034 	movhi	r3,4096
10007640:	dfc00815 	stw	ra,32(sp)
10007644:	ddc00715 	stw	r23,28(sp)
10007648:	dd800615 	stw	r22,24(sp)
1000764c:	dd400515 	stw	r21,20(sp)
10007650:	dd000415 	stw	r20,16(sp)
10007654:	dcc00315 	stw	r19,12(sp)
10007658:	dc800215 	stw	r18,8(sp)
1000765c:	dc400115 	stw	r17,4(sp)
10007660:	dc000015 	stw	r16,0(sp)
10007664:	18dd8b04 	addi	r3,r3,30252
10007668:	24000117 	ldw	r16,4(r4)
1000766c:	20c00f15 	stw	r3,60(r4)
10007670:	2080bb04 	addi	r2,r4,748
10007674:	00c000c4 	movi	r3,3
10007678:	20c0b915 	stw	r3,740(r4)
1000767c:	2080ba15 	stw	r2,744(r4)
10007680:	2000b815 	stw	zero,736(r4)
10007684:	05c00204 	movi	r23,8
10007688:	00800104 	movi	r2,4
1000768c:	2025883a 	mov	r18,r4
10007690:	b80d883a 	mov	r6,r23
10007694:	81001704 	addi	r4,r16,92
10007698:	000b883a 	mov	r5,zero
1000769c:	80000015 	stw	zero,0(r16)
100076a0:	80000115 	stw	zero,4(r16)
100076a4:	80000215 	stw	zero,8(r16)
100076a8:	8080030d 	sth	r2,12(r16)
100076ac:	80001915 	stw	zero,100(r16)
100076b0:	8000038d 	sth	zero,14(r16)
100076b4:	80000415 	stw	zero,16(r16)
100076b8:	80000515 	stw	zero,20(r16)
100076bc:	80000615 	stw	zero,24(r16)
100076c0:	00092840 	call	10009284 <memset>
100076c4:	05840074 	movhi	r22,4097
100076c8:	94400217 	ldw	r17,8(r18)
100076cc:	05440074 	movhi	r21,4097
100076d0:	05040074 	movhi	r20,4097
100076d4:	04c40074 	movhi	r19,4097
100076d8:	b5aaa404 	addi	r22,r22,-21872
100076dc:	ad6abb04 	addi	r21,r21,-21780
100076e0:	a52ada04 	addi	r20,r20,-21656
100076e4:	9ceaf104 	addi	r19,r19,-21564
100076e8:	85800815 	stw	r22,32(r16)
100076ec:	85400915 	stw	r21,36(r16)
100076f0:	85000a15 	stw	r20,40(r16)
100076f4:	84c00b15 	stw	r19,44(r16)
100076f8:	84000715 	stw	r16,28(r16)
100076fc:	00800284 	movi	r2,10
10007700:	8880030d 	sth	r2,12(r17)
10007704:	00800044 	movi	r2,1
10007708:	b80d883a 	mov	r6,r23
1000770c:	89001704 	addi	r4,r17,92
10007710:	000b883a 	mov	r5,zero
10007714:	88000015 	stw	zero,0(r17)
10007718:	88000115 	stw	zero,4(r17)
1000771c:	88000215 	stw	zero,8(r17)
10007720:	88001915 	stw	zero,100(r17)
10007724:	8880038d 	sth	r2,14(r17)
10007728:	88000415 	stw	zero,16(r17)
1000772c:	88000515 	stw	zero,20(r17)
10007730:	88000615 	stw	zero,24(r17)
10007734:	00092840 	call	10009284 <memset>
10007738:	94000317 	ldw	r16,12(r18)
1000773c:	00800484 	movi	r2,18
10007740:	8c400715 	stw	r17,28(r17)
10007744:	8d800815 	stw	r22,32(r17)
10007748:	8d400915 	stw	r21,36(r17)
1000774c:	8d000a15 	stw	r20,40(r17)
10007750:	8cc00b15 	stw	r19,44(r17)
10007754:	8080030d 	sth	r2,12(r16)
10007758:	00800084 	movi	r2,2
1000775c:	80000015 	stw	zero,0(r16)
10007760:	80000115 	stw	zero,4(r16)
10007764:	80000215 	stw	zero,8(r16)
10007768:	80001915 	stw	zero,100(r16)
1000776c:	8080038d 	sth	r2,14(r16)
10007770:	80000415 	stw	zero,16(r16)
10007774:	80000515 	stw	zero,20(r16)
10007778:	80000615 	stw	zero,24(r16)
1000777c:	b80d883a 	mov	r6,r23
10007780:	000b883a 	mov	r5,zero
10007784:	81001704 	addi	r4,r16,92
10007788:	00092840 	call	10009284 <memset>
1000778c:	00800044 	movi	r2,1
10007790:	84000715 	stw	r16,28(r16)
10007794:	85800815 	stw	r22,32(r16)
10007798:	85400915 	stw	r21,36(r16)
1000779c:	85000a15 	stw	r20,40(r16)
100077a0:	84c00b15 	stw	r19,44(r16)
100077a4:	90800e15 	stw	r2,56(r18)
100077a8:	dfc00817 	ldw	ra,32(sp)
100077ac:	ddc00717 	ldw	r23,28(sp)
100077b0:	dd800617 	ldw	r22,24(sp)
100077b4:	dd400517 	ldw	r21,20(sp)
100077b8:	dd000417 	ldw	r20,16(sp)
100077bc:	dcc00317 	ldw	r19,12(sp)
100077c0:	dc800217 	ldw	r18,8(sp)
100077c4:	dc400117 	ldw	r17,4(sp)
100077c8:	dc000017 	ldw	r16,0(sp)
100077cc:	dec00904 	addi	sp,sp,36
100077d0:	f800283a 	ret

100077d4 <__fp_lock>:
100077d4:	0005883a 	mov	r2,zero
100077d8:	f800283a 	ret

100077dc <__sfmoreglue>:
100077dc:	defffc04 	addi	sp,sp,-16
100077e0:	dc800215 	stw	r18,8(sp)
100077e4:	2825883a 	mov	r18,r5
100077e8:	dc000015 	stw	r16,0(sp)
100077ec:	01401a04 	movi	r5,104
100077f0:	2021883a 	mov	r16,r4
100077f4:	913fffc4 	addi	r4,r18,-1
100077f8:	dfc00315 	stw	ra,12(sp)
100077fc:	dc400115 	stw	r17,4(sp)
10007800:	0000fc80 	call	10000fc8 <__mulsi3>
10007804:	8009883a 	mov	r4,r16
10007808:	11401d04 	addi	r5,r2,116
1000780c:	1023883a 	mov	r17,r2
10007810:	00086f00 	call	100086f0 <_malloc_r>
10007814:	1021883a 	mov	r16,r2
10007818:	10000726 	beq	r2,zero,10007838 <__sfmoreglue+0x5c>
1000781c:	11000304 	addi	r4,r2,12
10007820:	10000015 	stw	zero,0(r2)
10007824:	14800115 	stw	r18,4(r2)
10007828:	11000215 	stw	r4,8(r2)
1000782c:	89801a04 	addi	r6,r17,104
10007830:	000b883a 	mov	r5,zero
10007834:	00092840 	call	10009284 <memset>
10007838:	8005883a 	mov	r2,r16
1000783c:	dfc00317 	ldw	ra,12(sp)
10007840:	dc800217 	ldw	r18,8(sp)
10007844:	dc400117 	ldw	r17,4(sp)
10007848:	dc000017 	ldw	r16,0(sp)
1000784c:	dec00404 	addi	sp,sp,16
10007850:	f800283a 	ret

10007854 <__sfp>:
10007854:	defffb04 	addi	sp,sp,-20
10007858:	dc000015 	stw	r16,0(sp)
1000785c:	04040074 	movhi	r16,4097
10007860:	84187004 	addi	r16,r16,25024
10007864:	dcc00315 	stw	r19,12(sp)
10007868:	2027883a 	mov	r19,r4
1000786c:	81000017 	ldw	r4,0(r16)
10007870:	dfc00415 	stw	ra,16(sp)
10007874:	dc800215 	stw	r18,8(sp)
10007878:	20800e17 	ldw	r2,56(r4)
1000787c:	dc400115 	stw	r17,4(sp)
10007880:	1000021e 	bne	r2,zero,1000788c <__sfp+0x38>
10007884:	00076380 	call	10007638 <__sinit.part.1>
10007888:	81000017 	ldw	r4,0(r16)
1000788c:	2480b804 	addi	r18,r4,736
10007890:	047fffc4 	movi	r17,-1
10007894:	91000117 	ldw	r4,4(r18)
10007898:	94000217 	ldw	r16,8(r18)
1000789c:	213fffc4 	addi	r4,r4,-1
100078a0:	20000a16 	blt	r4,zero,100078cc <__sfp+0x78>
100078a4:	8080030f 	ldh	r2,12(r16)
100078a8:	10000c26 	beq	r2,zero,100078dc <__sfp+0x88>
100078ac:	80c01d04 	addi	r3,r16,116
100078b0:	00000206 	br	100078bc <__sfp+0x68>
100078b4:	18bfe60f 	ldh	r2,-104(r3)
100078b8:	10000826 	beq	r2,zero,100078dc <__sfp+0x88>
100078bc:	213fffc4 	addi	r4,r4,-1
100078c0:	1c3ffd04 	addi	r16,r3,-12
100078c4:	18c01a04 	addi	r3,r3,104
100078c8:	247ffa1e 	bne	r4,r17,100078b4 <__alt_data_end+0xf80078b4>
100078cc:	90800017 	ldw	r2,0(r18)
100078d0:	10001d26 	beq	r2,zero,10007948 <__sfp+0xf4>
100078d4:	1025883a 	mov	r18,r2
100078d8:	003fee06 	br	10007894 <__alt_data_end+0xf8007894>
100078dc:	00bfffc4 	movi	r2,-1
100078e0:	8080038d 	sth	r2,14(r16)
100078e4:	00800044 	movi	r2,1
100078e8:	8080030d 	sth	r2,12(r16)
100078ec:	80001915 	stw	zero,100(r16)
100078f0:	80000015 	stw	zero,0(r16)
100078f4:	80000215 	stw	zero,8(r16)
100078f8:	80000115 	stw	zero,4(r16)
100078fc:	80000415 	stw	zero,16(r16)
10007900:	80000515 	stw	zero,20(r16)
10007904:	80000615 	stw	zero,24(r16)
10007908:	01800204 	movi	r6,8
1000790c:	000b883a 	mov	r5,zero
10007910:	81001704 	addi	r4,r16,92
10007914:	00092840 	call	10009284 <memset>
10007918:	8005883a 	mov	r2,r16
1000791c:	80000c15 	stw	zero,48(r16)
10007920:	80000d15 	stw	zero,52(r16)
10007924:	80001115 	stw	zero,68(r16)
10007928:	80001215 	stw	zero,72(r16)
1000792c:	dfc00417 	ldw	ra,16(sp)
10007930:	dcc00317 	ldw	r19,12(sp)
10007934:	dc800217 	ldw	r18,8(sp)
10007938:	dc400117 	ldw	r17,4(sp)
1000793c:	dc000017 	ldw	r16,0(sp)
10007940:	dec00504 	addi	sp,sp,20
10007944:	f800283a 	ret
10007948:	01400104 	movi	r5,4
1000794c:	9809883a 	mov	r4,r19
10007950:	00077dc0 	call	100077dc <__sfmoreglue>
10007954:	90800015 	stw	r2,0(r18)
10007958:	103fde1e 	bne	r2,zero,100078d4 <__alt_data_end+0xf80078d4>
1000795c:	00800304 	movi	r2,12
10007960:	98800015 	stw	r2,0(r19)
10007964:	0005883a 	mov	r2,zero
10007968:	003ff006 	br	1000792c <__alt_data_end+0xf800792c>

1000796c <_cleanup>:
1000796c:	00840074 	movhi	r2,4097
10007970:	10987004 	addi	r2,r2,25024
10007974:	11000017 	ldw	r4,0(r2)
10007978:	01440074 	movhi	r5,4097
1000797c:	2976a804 	addi	r5,r5,-9568
10007980:	00083941 	jmpi	10008394 <_fwalk_reent>

10007984 <__sinit>:
10007984:	20800e17 	ldw	r2,56(r4)
10007988:	10000126 	beq	r2,zero,10007990 <__sinit+0xc>
1000798c:	f800283a 	ret
10007990:	00076381 	jmpi	10007638 <__sinit.part.1>

10007994 <__sfp_lock_acquire>:
10007994:	f800283a 	ret

10007998 <__sfp_lock_release>:
10007998:	f800283a 	ret

1000799c <__sinit_lock_acquire>:
1000799c:	f800283a 	ret

100079a0 <__sinit_lock_release>:
100079a0:	f800283a 	ret

100079a4 <__fp_lock_all>:
100079a4:	00840074 	movhi	r2,4097
100079a8:	10987104 	addi	r2,r2,25028
100079ac:	11000017 	ldw	r4,0(r2)
100079b0:	01440034 	movhi	r5,4096
100079b4:	295df504 	addi	r5,r5,30676
100079b8:	00082d01 	jmpi	100082d0 <_fwalk>

100079bc <__fp_unlock_all>:
100079bc:	00840074 	movhi	r2,4097
100079c0:	10987104 	addi	r2,r2,25028
100079c4:	11000017 	ldw	r4,0(r2)
100079c8:	01440034 	movhi	r5,4096
100079cc:	295d8904 	addi	r5,r5,30244
100079d0:	00082d01 	jmpi	100082d0 <_fwalk>

100079d4 <_malloc_trim_r>:
100079d4:	defffb04 	addi	sp,sp,-20
100079d8:	dcc00315 	stw	r19,12(sp)
100079dc:	04c40074 	movhi	r19,4097
100079e0:	dc800215 	stw	r18,8(sp)
100079e4:	dc400115 	stw	r17,4(sp)
100079e8:	dc000015 	stw	r16,0(sp)
100079ec:	dfc00415 	stw	ra,16(sp)
100079f0:	2821883a 	mov	r16,r5
100079f4:	9cd2ea04 	addi	r19,r19,19368
100079f8:	2025883a 	mov	r18,r4
100079fc:	0011d680 	call	10011d68 <__malloc_lock>
10007a00:	98800217 	ldw	r2,8(r19)
10007a04:	14400117 	ldw	r17,4(r2)
10007a08:	00bfff04 	movi	r2,-4
10007a0c:	88a2703a 	and	r17,r17,r2
10007a10:	8c21c83a 	sub	r16,r17,r16
10007a14:	8403fbc4 	addi	r16,r16,4079
10007a18:	8020d33a 	srli	r16,r16,12
10007a1c:	0083ffc4 	movi	r2,4095
10007a20:	843fffc4 	addi	r16,r16,-1
10007a24:	8020933a 	slli	r16,r16,12
10007a28:	1400060e 	bge	r2,r16,10007a44 <_malloc_trim_r+0x70>
10007a2c:	000b883a 	mov	r5,zero
10007a30:	9009883a 	mov	r4,r18
10007a34:	000aa3c0 	call	1000aa3c <_sbrk_r>
10007a38:	98c00217 	ldw	r3,8(r19)
10007a3c:	1c47883a 	add	r3,r3,r17
10007a40:	10c00a26 	beq	r2,r3,10007a6c <_malloc_trim_r+0x98>
10007a44:	9009883a 	mov	r4,r18
10007a48:	0011d8c0 	call	10011d8c <__malloc_unlock>
10007a4c:	0005883a 	mov	r2,zero
10007a50:	dfc00417 	ldw	ra,16(sp)
10007a54:	dcc00317 	ldw	r19,12(sp)
10007a58:	dc800217 	ldw	r18,8(sp)
10007a5c:	dc400117 	ldw	r17,4(sp)
10007a60:	dc000017 	ldw	r16,0(sp)
10007a64:	dec00504 	addi	sp,sp,20
10007a68:	f800283a 	ret
10007a6c:	040bc83a 	sub	r5,zero,r16
10007a70:	9009883a 	mov	r4,r18
10007a74:	000aa3c0 	call	1000aa3c <_sbrk_r>
10007a78:	00ffffc4 	movi	r3,-1
10007a7c:	10c00d26 	beq	r2,r3,10007ab4 <_malloc_trim_r+0xe0>
10007a80:	00c400b4 	movhi	r3,4098
10007a84:	18e00304 	addi	r3,r3,-32756
10007a88:	18800017 	ldw	r2,0(r3)
10007a8c:	99000217 	ldw	r4,8(r19)
10007a90:	8c23c83a 	sub	r17,r17,r16
10007a94:	8c400054 	ori	r17,r17,1
10007a98:	1421c83a 	sub	r16,r2,r16
10007a9c:	24400115 	stw	r17,4(r4)
10007aa0:	9009883a 	mov	r4,r18
10007aa4:	1c000015 	stw	r16,0(r3)
10007aa8:	0011d8c0 	call	10011d8c <__malloc_unlock>
10007aac:	00800044 	movi	r2,1
10007ab0:	003fe706 	br	10007a50 <__alt_data_end+0xf8007a50>
10007ab4:	000b883a 	mov	r5,zero
10007ab8:	9009883a 	mov	r4,r18
10007abc:	000aa3c0 	call	1000aa3c <_sbrk_r>
10007ac0:	99000217 	ldw	r4,8(r19)
10007ac4:	014003c4 	movi	r5,15
10007ac8:	1107c83a 	sub	r3,r2,r4
10007acc:	28ffdd0e 	bge	r5,r3,10007a44 <__alt_data_end+0xf8007a44>
10007ad0:	01440074 	movhi	r5,4097
10007ad4:	29587304 	addi	r5,r5,25036
10007ad8:	29400017 	ldw	r5,0(r5)
10007adc:	18c00054 	ori	r3,r3,1
10007ae0:	20c00115 	stw	r3,4(r4)
10007ae4:	00c400b4 	movhi	r3,4098
10007ae8:	1145c83a 	sub	r2,r2,r5
10007aec:	18e00304 	addi	r3,r3,-32756
10007af0:	18800015 	stw	r2,0(r3)
10007af4:	003fd306 	br	10007a44 <__alt_data_end+0xf8007a44>

10007af8 <_free_r>:
10007af8:	28004126 	beq	r5,zero,10007c00 <_free_r+0x108>
10007afc:	defffd04 	addi	sp,sp,-12
10007b00:	dc400115 	stw	r17,4(sp)
10007b04:	dc000015 	stw	r16,0(sp)
10007b08:	2023883a 	mov	r17,r4
10007b0c:	2821883a 	mov	r16,r5
10007b10:	dfc00215 	stw	ra,8(sp)
10007b14:	0011d680 	call	10011d68 <__malloc_lock>
10007b18:	81ffff17 	ldw	r7,-4(r16)
10007b1c:	00bfff84 	movi	r2,-2
10007b20:	01040074 	movhi	r4,4097
10007b24:	81bffe04 	addi	r6,r16,-8
10007b28:	3884703a 	and	r2,r7,r2
10007b2c:	2112ea04 	addi	r4,r4,19368
10007b30:	308b883a 	add	r5,r6,r2
10007b34:	2a400117 	ldw	r9,4(r5)
10007b38:	22000217 	ldw	r8,8(r4)
10007b3c:	00ffff04 	movi	r3,-4
10007b40:	48c6703a 	and	r3,r9,r3
10007b44:	2a005726 	beq	r5,r8,10007ca4 <_free_r+0x1ac>
10007b48:	28c00115 	stw	r3,4(r5)
10007b4c:	39c0004c 	andi	r7,r7,1
10007b50:	3800091e 	bne	r7,zero,10007b78 <_free_r+0x80>
10007b54:	823ffe17 	ldw	r8,-8(r16)
10007b58:	22400204 	addi	r9,r4,8
10007b5c:	320dc83a 	sub	r6,r6,r8
10007b60:	31c00217 	ldw	r7,8(r6)
10007b64:	1205883a 	add	r2,r2,r8
10007b68:	3a406526 	beq	r7,r9,10007d00 <_free_r+0x208>
10007b6c:	32000317 	ldw	r8,12(r6)
10007b70:	3a000315 	stw	r8,12(r7)
10007b74:	41c00215 	stw	r7,8(r8)
10007b78:	28cf883a 	add	r7,r5,r3
10007b7c:	39c00117 	ldw	r7,4(r7)
10007b80:	39c0004c 	andi	r7,r7,1
10007b84:	38003a26 	beq	r7,zero,10007c70 <_free_r+0x178>
10007b88:	10c00054 	ori	r3,r2,1
10007b8c:	30c00115 	stw	r3,4(r6)
10007b90:	3087883a 	add	r3,r6,r2
10007b94:	18800015 	stw	r2,0(r3)
10007b98:	00c07fc4 	movi	r3,511
10007b9c:	18801936 	bltu	r3,r2,10007c04 <_free_r+0x10c>
10007ba0:	1004d0fa 	srli	r2,r2,3
10007ba4:	01c00044 	movi	r7,1
10007ba8:	21400117 	ldw	r5,4(r4)
10007bac:	10c00044 	addi	r3,r2,1
10007bb0:	18c7883a 	add	r3,r3,r3
10007bb4:	1005d0ba 	srai	r2,r2,2
10007bb8:	18c7883a 	add	r3,r3,r3
10007bbc:	18c7883a 	add	r3,r3,r3
10007bc0:	1907883a 	add	r3,r3,r4
10007bc4:	3884983a 	sll	r2,r7,r2
10007bc8:	19c00017 	ldw	r7,0(r3)
10007bcc:	1a3ffe04 	addi	r8,r3,-8
10007bd0:	1144b03a 	or	r2,r2,r5
10007bd4:	32000315 	stw	r8,12(r6)
10007bd8:	31c00215 	stw	r7,8(r6)
10007bdc:	20800115 	stw	r2,4(r4)
10007be0:	19800015 	stw	r6,0(r3)
10007be4:	39800315 	stw	r6,12(r7)
10007be8:	8809883a 	mov	r4,r17
10007bec:	dfc00217 	ldw	ra,8(sp)
10007bf0:	dc400117 	ldw	r17,4(sp)
10007bf4:	dc000017 	ldw	r16,0(sp)
10007bf8:	dec00304 	addi	sp,sp,12
10007bfc:	0011d8c1 	jmpi	10011d8c <__malloc_unlock>
10007c00:	f800283a 	ret
10007c04:	100ad27a 	srli	r5,r2,9
10007c08:	00c00104 	movi	r3,4
10007c0c:	19404a36 	bltu	r3,r5,10007d38 <_free_r+0x240>
10007c10:	100ad1ba 	srli	r5,r2,6
10007c14:	28c00e44 	addi	r3,r5,57
10007c18:	18c7883a 	add	r3,r3,r3
10007c1c:	29400e04 	addi	r5,r5,56
10007c20:	18c7883a 	add	r3,r3,r3
10007c24:	18c7883a 	add	r3,r3,r3
10007c28:	1909883a 	add	r4,r3,r4
10007c2c:	20c00017 	ldw	r3,0(r4)
10007c30:	01c40074 	movhi	r7,4097
10007c34:	213ffe04 	addi	r4,r4,-8
10007c38:	39d2ea04 	addi	r7,r7,19368
10007c3c:	20c04426 	beq	r4,r3,10007d50 <_free_r+0x258>
10007c40:	01ffff04 	movi	r7,-4
10007c44:	19400117 	ldw	r5,4(r3)
10007c48:	29ca703a 	and	r5,r5,r7
10007c4c:	1140022e 	bgeu	r2,r5,10007c58 <_free_r+0x160>
10007c50:	18c00217 	ldw	r3,8(r3)
10007c54:	20fffb1e 	bne	r4,r3,10007c44 <__alt_data_end+0xf8007c44>
10007c58:	19000317 	ldw	r4,12(r3)
10007c5c:	31000315 	stw	r4,12(r6)
10007c60:	30c00215 	stw	r3,8(r6)
10007c64:	21800215 	stw	r6,8(r4)
10007c68:	19800315 	stw	r6,12(r3)
10007c6c:	003fde06 	br	10007be8 <__alt_data_end+0xf8007be8>
10007c70:	29c00217 	ldw	r7,8(r5)
10007c74:	10c5883a 	add	r2,r2,r3
10007c78:	00c40074 	movhi	r3,4097
10007c7c:	18d2ec04 	addi	r3,r3,19376
10007c80:	38c03b26 	beq	r7,r3,10007d70 <_free_r+0x278>
10007c84:	2a000317 	ldw	r8,12(r5)
10007c88:	11400054 	ori	r5,r2,1
10007c8c:	3087883a 	add	r3,r6,r2
10007c90:	3a000315 	stw	r8,12(r7)
10007c94:	41c00215 	stw	r7,8(r8)
10007c98:	31400115 	stw	r5,4(r6)
10007c9c:	18800015 	stw	r2,0(r3)
10007ca0:	003fbd06 	br	10007b98 <__alt_data_end+0xf8007b98>
10007ca4:	39c0004c 	andi	r7,r7,1
10007ca8:	10c5883a 	add	r2,r2,r3
10007cac:	3800071e 	bne	r7,zero,10007ccc <_free_r+0x1d4>
10007cb0:	81fffe17 	ldw	r7,-8(r16)
10007cb4:	31cdc83a 	sub	r6,r6,r7
10007cb8:	30c00317 	ldw	r3,12(r6)
10007cbc:	31400217 	ldw	r5,8(r6)
10007cc0:	11c5883a 	add	r2,r2,r7
10007cc4:	28c00315 	stw	r3,12(r5)
10007cc8:	19400215 	stw	r5,8(r3)
10007ccc:	10c00054 	ori	r3,r2,1
10007cd0:	30c00115 	stw	r3,4(r6)
10007cd4:	00c40074 	movhi	r3,4097
10007cd8:	18d87404 	addi	r3,r3,25040
10007cdc:	18c00017 	ldw	r3,0(r3)
10007ce0:	21800215 	stw	r6,8(r4)
10007ce4:	10ffc036 	bltu	r2,r3,10007be8 <__alt_data_end+0xf8007be8>
10007ce8:	00840074 	movhi	r2,4097
10007cec:	109ffa04 	addi	r2,r2,32744
10007cf0:	11400017 	ldw	r5,0(r2)
10007cf4:	8809883a 	mov	r4,r17
10007cf8:	00079d40 	call	100079d4 <_malloc_trim_r>
10007cfc:	003fba06 	br	10007be8 <__alt_data_end+0xf8007be8>
10007d00:	28c9883a 	add	r4,r5,r3
10007d04:	21000117 	ldw	r4,4(r4)
10007d08:	2100004c 	andi	r4,r4,1
10007d0c:	2000391e 	bne	r4,zero,10007df4 <_free_r+0x2fc>
10007d10:	29c00217 	ldw	r7,8(r5)
10007d14:	29000317 	ldw	r4,12(r5)
10007d18:	1885883a 	add	r2,r3,r2
10007d1c:	10c00054 	ori	r3,r2,1
10007d20:	39000315 	stw	r4,12(r7)
10007d24:	21c00215 	stw	r7,8(r4)
10007d28:	30c00115 	stw	r3,4(r6)
10007d2c:	308d883a 	add	r6,r6,r2
10007d30:	30800015 	stw	r2,0(r6)
10007d34:	003fac06 	br	10007be8 <__alt_data_end+0xf8007be8>
10007d38:	00c00504 	movi	r3,20
10007d3c:	19401536 	bltu	r3,r5,10007d94 <_free_r+0x29c>
10007d40:	28c01704 	addi	r3,r5,92
10007d44:	18c7883a 	add	r3,r3,r3
10007d48:	294016c4 	addi	r5,r5,91
10007d4c:	003fb406 	br	10007c20 <__alt_data_end+0xf8007c20>
10007d50:	280bd0ba 	srai	r5,r5,2
10007d54:	00c00044 	movi	r3,1
10007d58:	38800117 	ldw	r2,4(r7)
10007d5c:	194a983a 	sll	r5,r3,r5
10007d60:	2007883a 	mov	r3,r4
10007d64:	2884b03a 	or	r2,r5,r2
10007d68:	38800115 	stw	r2,4(r7)
10007d6c:	003fbb06 	br	10007c5c <__alt_data_end+0xf8007c5c>
10007d70:	21800515 	stw	r6,20(r4)
10007d74:	21800415 	stw	r6,16(r4)
10007d78:	10c00054 	ori	r3,r2,1
10007d7c:	31c00315 	stw	r7,12(r6)
10007d80:	31c00215 	stw	r7,8(r6)
10007d84:	30c00115 	stw	r3,4(r6)
10007d88:	308d883a 	add	r6,r6,r2
10007d8c:	30800015 	stw	r2,0(r6)
10007d90:	003f9506 	br	10007be8 <__alt_data_end+0xf8007be8>
10007d94:	00c01504 	movi	r3,84
10007d98:	19400536 	bltu	r3,r5,10007db0 <_free_r+0x2b8>
10007d9c:	100ad33a 	srli	r5,r2,12
10007da0:	28c01bc4 	addi	r3,r5,111
10007da4:	18c7883a 	add	r3,r3,r3
10007da8:	29401b84 	addi	r5,r5,110
10007dac:	003f9c06 	br	10007c20 <__alt_data_end+0xf8007c20>
10007db0:	00c05504 	movi	r3,340
10007db4:	19400536 	bltu	r3,r5,10007dcc <_free_r+0x2d4>
10007db8:	100ad3fa 	srli	r5,r2,15
10007dbc:	28c01e04 	addi	r3,r5,120
10007dc0:	18c7883a 	add	r3,r3,r3
10007dc4:	29401dc4 	addi	r5,r5,119
10007dc8:	003f9506 	br	10007c20 <__alt_data_end+0xf8007c20>
10007dcc:	00c15504 	movi	r3,1364
10007dd0:	19400536 	bltu	r3,r5,10007de8 <_free_r+0x2f0>
10007dd4:	100ad4ba 	srli	r5,r2,18
10007dd8:	28c01f44 	addi	r3,r5,125
10007ddc:	18c7883a 	add	r3,r3,r3
10007de0:	29401f04 	addi	r5,r5,124
10007de4:	003f8e06 	br	10007c20 <__alt_data_end+0xf8007c20>
10007de8:	00c03f84 	movi	r3,254
10007dec:	01401f84 	movi	r5,126
10007df0:	003f8b06 	br	10007c20 <__alt_data_end+0xf8007c20>
10007df4:	10c00054 	ori	r3,r2,1
10007df8:	30c00115 	stw	r3,4(r6)
10007dfc:	308d883a 	add	r6,r6,r2
10007e00:	30800015 	stw	r2,0(r6)
10007e04:	003f7806 	br	10007be8 <__alt_data_end+0xf8007be8>

10007e08 <__sfvwrite_r>:
10007e08:	30800217 	ldw	r2,8(r6)
10007e0c:	10006726 	beq	r2,zero,10007fac <__sfvwrite_r+0x1a4>
10007e10:	28c0030b 	ldhu	r3,12(r5)
10007e14:	defff404 	addi	sp,sp,-48
10007e18:	dd400715 	stw	r21,28(sp)
10007e1c:	dd000615 	stw	r20,24(sp)
10007e20:	dc000215 	stw	r16,8(sp)
10007e24:	dfc00b15 	stw	ra,44(sp)
10007e28:	df000a15 	stw	fp,40(sp)
10007e2c:	ddc00915 	stw	r23,36(sp)
10007e30:	dd800815 	stw	r22,32(sp)
10007e34:	dcc00515 	stw	r19,20(sp)
10007e38:	dc800415 	stw	r18,16(sp)
10007e3c:	dc400315 	stw	r17,12(sp)
10007e40:	1880020c 	andi	r2,r3,8
10007e44:	2821883a 	mov	r16,r5
10007e48:	202b883a 	mov	r21,r4
10007e4c:	3029883a 	mov	r20,r6
10007e50:	10002726 	beq	r2,zero,10007ef0 <__sfvwrite_r+0xe8>
10007e54:	28800417 	ldw	r2,16(r5)
10007e58:	10002526 	beq	r2,zero,10007ef0 <__sfvwrite_r+0xe8>
10007e5c:	1880008c 	andi	r2,r3,2
10007e60:	a4400017 	ldw	r17,0(r20)
10007e64:	10002a26 	beq	r2,zero,10007f10 <__sfvwrite_r+0x108>
10007e68:	05a00034 	movhi	r22,32768
10007e6c:	0027883a 	mov	r19,zero
10007e70:	0025883a 	mov	r18,zero
10007e74:	b5bf0004 	addi	r22,r22,-1024
10007e78:	980d883a 	mov	r6,r19
10007e7c:	a809883a 	mov	r4,r21
10007e80:	90004626 	beq	r18,zero,10007f9c <__sfvwrite_r+0x194>
10007e84:	900f883a 	mov	r7,r18
10007e88:	b480022e 	bgeu	r22,r18,10007e94 <__sfvwrite_r+0x8c>
10007e8c:	01e00034 	movhi	r7,32768
10007e90:	39ff0004 	addi	r7,r7,-1024
10007e94:	80800917 	ldw	r2,36(r16)
10007e98:	81400717 	ldw	r5,28(r16)
10007e9c:	103ee83a 	callr	r2
10007ea0:	00805a0e 	bge	zero,r2,1000800c <__sfvwrite_r+0x204>
10007ea4:	a0c00217 	ldw	r3,8(r20)
10007ea8:	98a7883a 	add	r19,r19,r2
10007eac:	90a5c83a 	sub	r18,r18,r2
10007eb0:	1885c83a 	sub	r2,r3,r2
10007eb4:	a0800215 	stw	r2,8(r20)
10007eb8:	103fef1e 	bne	r2,zero,10007e78 <__alt_data_end+0xf8007e78>
10007ebc:	0005883a 	mov	r2,zero
10007ec0:	dfc00b17 	ldw	ra,44(sp)
10007ec4:	df000a17 	ldw	fp,40(sp)
10007ec8:	ddc00917 	ldw	r23,36(sp)
10007ecc:	dd800817 	ldw	r22,32(sp)
10007ed0:	dd400717 	ldw	r21,28(sp)
10007ed4:	dd000617 	ldw	r20,24(sp)
10007ed8:	dcc00517 	ldw	r19,20(sp)
10007edc:	dc800417 	ldw	r18,16(sp)
10007ee0:	dc400317 	ldw	r17,12(sp)
10007ee4:	dc000217 	ldw	r16,8(sp)
10007ee8:	dec00c04 	addi	sp,sp,48
10007eec:	f800283a 	ret
10007ef0:	800b883a 	mov	r5,r16
10007ef4:	a809883a 	mov	r4,r21
10007ef8:	00059780 	call	10005978 <__swsetup_r>
10007efc:	1000ee1e 	bne	r2,zero,100082b8 <__sfvwrite_r+0x4b0>
10007f00:	80c0030b 	ldhu	r3,12(r16)
10007f04:	a4400017 	ldw	r17,0(r20)
10007f08:	1880008c 	andi	r2,r3,2
10007f0c:	103fd61e 	bne	r2,zero,10007e68 <__alt_data_end+0xf8007e68>
10007f10:	1880004c 	andi	r2,r3,1
10007f14:	1000421e 	bne	r2,zero,10008020 <__sfvwrite_r+0x218>
10007f18:	0039883a 	mov	fp,zero
10007f1c:	0025883a 	mov	r18,zero
10007f20:	90001a26 	beq	r18,zero,10007f8c <__sfvwrite_r+0x184>
10007f24:	1880800c 	andi	r2,r3,512
10007f28:	84c00217 	ldw	r19,8(r16)
10007f2c:	10002126 	beq	r2,zero,10007fb4 <__sfvwrite_r+0x1ac>
10007f30:	982f883a 	mov	r23,r19
10007f34:	94c09636 	bltu	r18,r19,10008190 <__sfvwrite_r+0x388>
10007f38:	1881200c 	andi	r2,r3,1152
10007f3c:	1000a11e 	bne	r2,zero,100081c4 <__sfvwrite_r+0x3bc>
10007f40:	81000017 	ldw	r4,0(r16)
10007f44:	b80d883a 	mov	r6,r23
10007f48:	e00b883a 	mov	r5,fp
10007f4c:	00091280 	call	10009128 <memmove>
10007f50:	80c00217 	ldw	r3,8(r16)
10007f54:	81000017 	ldw	r4,0(r16)
10007f58:	9005883a 	mov	r2,r18
10007f5c:	1ce7c83a 	sub	r19,r3,r19
10007f60:	25cf883a 	add	r7,r4,r23
10007f64:	84c00215 	stw	r19,8(r16)
10007f68:	81c00015 	stw	r7,0(r16)
10007f6c:	a0c00217 	ldw	r3,8(r20)
10007f70:	e0b9883a 	add	fp,fp,r2
10007f74:	90a5c83a 	sub	r18,r18,r2
10007f78:	18a7c83a 	sub	r19,r3,r2
10007f7c:	a4c00215 	stw	r19,8(r20)
10007f80:	983fce26 	beq	r19,zero,10007ebc <__alt_data_end+0xf8007ebc>
10007f84:	80c0030b 	ldhu	r3,12(r16)
10007f88:	903fe61e 	bne	r18,zero,10007f24 <__alt_data_end+0xf8007f24>
10007f8c:	8f000017 	ldw	fp,0(r17)
10007f90:	8c800117 	ldw	r18,4(r17)
10007f94:	8c400204 	addi	r17,r17,8
10007f98:	003fe106 	br	10007f20 <__alt_data_end+0xf8007f20>
10007f9c:	8cc00017 	ldw	r19,0(r17)
10007fa0:	8c800117 	ldw	r18,4(r17)
10007fa4:	8c400204 	addi	r17,r17,8
10007fa8:	003fb306 	br	10007e78 <__alt_data_end+0xf8007e78>
10007fac:	0005883a 	mov	r2,zero
10007fb0:	f800283a 	ret
10007fb4:	81000017 	ldw	r4,0(r16)
10007fb8:	80800417 	ldw	r2,16(r16)
10007fbc:	11005a36 	bltu	r2,r4,10008128 <__sfvwrite_r+0x320>
10007fc0:	85c00517 	ldw	r23,20(r16)
10007fc4:	95c05836 	bltu	r18,r23,10008128 <__sfvwrite_r+0x320>
10007fc8:	00a00034 	movhi	r2,32768
10007fcc:	10bfffc4 	addi	r2,r2,-1
10007fd0:	9009883a 	mov	r4,r18
10007fd4:	1480012e 	bgeu	r2,r18,10007fdc <__sfvwrite_r+0x1d4>
10007fd8:	1009883a 	mov	r4,r2
10007fdc:	b80b883a 	mov	r5,r23
10007fe0:	0000e140 	call	10000e14 <__divsi3>
10007fe4:	b80b883a 	mov	r5,r23
10007fe8:	1009883a 	mov	r4,r2
10007fec:	0000fc80 	call	10000fc8 <__mulsi3>
10007ff0:	81400717 	ldw	r5,28(r16)
10007ff4:	80c00917 	ldw	r3,36(r16)
10007ff8:	100f883a 	mov	r7,r2
10007ffc:	e00d883a 	mov	r6,fp
10008000:	a809883a 	mov	r4,r21
10008004:	183ee83a 	callr	r3
10008008:	00bfd816 	blt	zero,r2,10007f6c <__alt_data_end+0xf8007f6c>
1000800c:	8080030b 	ldhu	r2,12(r16)
10008010:	10801014 	ori	r2,r2,64
10008014:	8080030d 	sth	r2,12(r16)
10008018:	00bfffc4 	movi	r2,-1
1000801c:	003fa806 	br	10007ec0 <__alt_data_end+0xf8007ec0>
10008020:	0027883a 	mov	r19,zero
10008024:	0011883a 	mov	r8,zero
10008028:	0039883a 	mov	fp,zero
1000802c:	0025883a 	mov	r18,zero
10008030:	90001f26 	beq	r18,zero,100080b0 <__sfvwrite_r+0x2a8>
10008034:	40005a26 	beq	r8,zero,100081a0 <__sfvwrite_r+0x398>
10008038:	982d883a 	mov	r22,r19
1000803c:	94c0012e 	bgeu	r18,r19,10008044 <__sfvwrite_r+0x23c>
10008040:	902d883a 	mov	r22,r18
10008044:	81000017 	ldw	r4,0(r16)
10008048:	80800417 	ldw	r2,16(r16)
1000804c:	b02f883a 	mov	r23,r22
10008050:	81c00517 	ldw	r7,20(r16)
10008054:	1100032e 	bgeu	r2,r4,10008064 <__sfvwrite_r+0x25c>
10008058:	80c00217 	ldw	r3,8(r16)
1000805c:	38c7883a 	add	r3,r7,r3
10008060:	1d801816 	blt	r3,r22,100080c4 <__sfvwrite_r+0x2bc>
10008064:	b1c03e16 	blt	r22,r7,10008160 <__sfvwrite_r+0x358>
10008068:	80800917 	ldw	r2,36(r16)
1000806c:	81400717 	ldw	r5,28(r16)
10008070:	e00d883a 	mov	r6,fp
10008074:	da000115 	stw	r8,4(sp)
10008078:	a809883a 	mov	r4,r21
1000807c:	103ee83a 	callr	r2
10008080:	102f883a 	mov	r23,r2
10008084:	da000117 	ldw	r8,4(sp)
10008088:	00bfe00e 	bge	zero,r2,1000800c <__alt_data_end+0xf800800c>
1000808c:	9de7c83a 	sub	r19,r19,r23
10008090:	98001f26 	beq	r19,zero,10008110 <__sfvwrite_r+0x308>
10008094:	a0800217 	ldw	r2,8(r20)
10008098:	e5f9883a 	add	fp,fp,r23
1000809c:	95e5c83a 	sub	r18,r18,r23
100080a0:	15efc83a 	sub	r23,r2,r23
100080a4:	a5c00215 	stw	r23,8(r20)
100080a8:	b83f8426 	beq	r23,zero,10007ebc <__alt_data_end+0xf8007ebc>
100080ac:	903fe11e 	bne	r18,zero,10008034 <__alt_data_end+0xf8008034>
100080b0:	8f000017 	ldw	fp,0(r17)
100080b4:	8c800117 	ldw	r18,4(r17)
100080b8:	0011883a 	mov	r8,zero
100080bc:	8c400204 	addi	r17,r17,8
100080c0:	003fdb06 	br	10008030 <__alt_data_end+0xf8008030>
100080c4:	180d883a 	mov	r6,r3
100080c8:	e00b883a 	mov	r5,fp
100080cc:	da000115 	stw	r8,4(sp)
100080d0:	d8c00015 	stw	r3,0(sp)
100080d4:	00091280 	call	10009128 <memmove>
100080d8:	d8c00017 	ldw	r3,0(sp)
100080dc:	80800017 	ldw	r2,0(r16)
100080e0:	800b883a 	mov	r5,r16
100080e4:	a809883a 	mov	r4,r21
100080e8:	10c5883a 	add	r2,r2,r3
100080ec:	80800015 	stw	r2,0(r16)
100080f0:	d8c00015 	stw	r3,0(sp)
100080f4:	00075980 	call	10007598 <_fflush_r>
100080f8:	d8c00017 	ldw	r3,0(sp)
100080fc:	da000117 	ldw	r8,4(sp)
10008100:	103fc21e 	bne	r2,zero,1000800c <__alt_data_end+0xf800800c>
10008104:	182f883a 	mov	r23,r3
10008108:	9de7c83a 	sub	r19,r19,r23
1000810c:	983fe11e 	bne	r19,zero,10008094 <__alt_data_end+0xf8008094>
10008110:	800b883a 	mov	r5,r16
10008114:	a809883a 	mov	r4,r21
10008118:	00075980 	call	10007598 <_fflush_r>
1000811c:	103fbb1e 	bne	r2,zero,1000800c <__alt_data_end+0xf800800c>
10008120:	0011883a 	mov	r8,zero
10008124:	003fdb06 	br	10008094 <__alt_data_end+0xf8008094>
10008128:	94c0012e 	bgeu	r18,r19,10008130 <__sfvwrite_r+0x328>
1000812c:	9027883a 	mov	r19,r18
10008130:	980d883a 	mov	r6,r19
10008134:	e00b883a 	mov	r5,fp
10008138:	00091280 	call	10009128 <memmove>
1000813c:	80800217 	ldw	r2,8(r16)
10008140:	80c00017 	ldw	r3,0(r16)
10008144:	14c5c83a 	sub	r2,r2,r19
10008148:	1cc7883a 	add	r3,r3,r19
1000814c:	80800215 	stw	r2,8(r16)
10008150:	80c00015 	stw	r3,0(r16)
10008154:	10004326 	beq	r2,zero,10008264 <__sfvwrite_r+0x45c>
10008158:	9805883a 	mov	r2,r19
1000815c:	003f8306 	br	10007f6c <__alt_data_end+0xf8007f6c>
10008160:	b00d883a 	mov	r6,r22
10008164:	e00b883a 	mov	r5,fp
10008168:	da000115 	stw	r8,4(sp)
1000816c:	00091280 	call	10009128 <memmove>
10008170:	80800217 	ldw	r2,8(r16)
10008174:	80c00017 	ldw	r3,0(r16)
10008178:	da000117 	ldw	r8,4(sp)
1000817c:	1585c83a 	sub	r2,r2,r22
10008180:	1dad883a 	add	r22,r3,r22
10008184:	80800215 	stw	r2,8(r16)
10008188:	85800015 	stw	r22,0(r16)
1000818c:	003fbf06 	br	1000808c <__alt_data_end+0xf800808c>
10008190:	81000017 	ldw	r4,0(r16)
10008194:	9027883a 	mov	r19,r18
10008198:	902f883a 	mov	r23,r18
1000819c:	003f6906 	br	10007f44 <__alt_data_end+0xf8007f44>
100081a0:	900d883a 	mov	r6,r18
100081a4:	01400284 	movi	r5,10
100081a8:	e009883a 	mov	r4,fp
100081ac:	0008efc0 	call	10008efc <memchr>
100081b0:	10003e26 	beq	r2,zero,100082ac <__sfvwrite_r+0x4a4>
100081b4:	10800044 	addi	r2,r2,1
100081b8:	1727c83a 	sub	r19,r2,fp
100081bc:	02000044 	movi	r8,1
100081c0:	003f9d06 	br	10008038 <__alt_data_end+0xf8008038>
100081c4:	80800517 	ldw	r2,20(r16)
100081c8:	81400417 	ldw	r5,16(r16)
100081cc:	81c00017 	ldw	r7,0(r16)
100081d0:	10a7883a 	add	r19,r2,r2
100081d4:	9885883a 	add	r2,r19,r2
100081d8:	1026d7fa 	srli	r19,r2,31
100081dc:	396dc83a 	sub	r22,r7,r5
100081e0:	b1000044 	addi	r4,r22,1
100081e4:	9885883a 	add	r2,r19,r2
100081e8:	1027d07a 	srai	r19,r2,1
100081ec:	2485883a 	add	r2,r4,r18
100081f0:	980d883a 	mov	r6,r19
100081f4:	9880022e 	bgeu	r19,r2,10008200 <__sfvwrite_r+0x3f8>
100081f8:	1027883a 	mov	r19,r2
100081fc:	100d883a 	mov	r6,r2
10008200:	18c1000c 	andi	r3,r3,1024
10008204:	18001c26 	beq	r3,zero,10008278 <__sfvwrite_r+0x470>
10008208:	300b883a 	mov	r5,r6
1000820c:	a809883a 	mov	r4,r21
10008210:	00086f00 	call	100086f0 <_malloc_r>
10008214:	102f883a 	mov	r23,r2
10008218:	10002926 	beq	r2,zero,100082c0 <__sfvwrite_r+0x4b8>
1000821c:	81400417 	ldw	r5,16(r16)
10008220:	b00d883a 	mov	r6,r22
10008224:	1009883a 	mov	r4,r2
10008228:	0008fe00 	call	10008fe0 <memcpy>
1000822c:	8080030b 	ldhu	r2,12(r16)
10008230:	00fedfc4 	movi	r3,-1153
10008234:	10c4703a 	and	r2,r2,r3
10008238:	10802014 	ori	r2,r2,128
1000823c:	8080030d 	sth	r2,12(r16)
10008240:	bd89883a 	add	r4,r23,r22
10008244:	9d8fc83a 	sub	r7,r19,r22
10008248:	85c00415 	stw	r23,16(r16)
1000824c:	84c00515 	stw	r19,20(r16)
10008250:	81000015 	stw	r4,0(r16)
10008254:	9027883a 	mov	r19,r18
10008258:	81c00215 	stw	r7,8(r16)
1000825c:	902f883a 	mov	r23,r18
10008260:	003f3806 	br	10007f44 <__alt_data_end+0xf8007f44>
10008264:	800b883a 	mov	r5,r16
10008268:	a809883a 	mov	r4,r21
1000826c:	00075980 	call	10007598 <_fflush_r>
10008270:	103fb926 	beq	r2,zero,10008158 <__alt_data_end+0xf8008158>
10008274:	003f6506 	br	1000800c <__alt_data_end+0xf800800c>
10008278:	a809883a 	mov	r4,r21
1000827c:	000a4640 	call	1000a464 <_realloc_r>
10008280:	102f883a 	mov	r23,r2
10008284:	103fee1e 	bne	r2,zero,10008240 <__alt_data_end+0xf8008240>
10008288:	81400417 	ldw	r5,16(r16)
1000828c:	a809883a 	mov	r4,r21
10008290:	0007af80 	call	10007af8 <_free_r>
10008294:	8080030b 	ldhu	r2,12(r16)
10008298:	00ffdfc4 	movi	r3,-129
1000829c:	1884703a 	and	r2,r3,r2
100082a0:	00c00304 	movi	r3,12
100082a4:	a8c00015 	stw	r3,0(r21)
100082a8:	003f5906 	br	10008010 <__alt_data_end+0xf8008010>
100082ac:	94c00044 	addi	r19,r18,1
100082b0:	02000044 	movi	r8,1
100082b4:	003f6006 	br	10008038 <__alt_data_end+0xf8008038>
100082b8:	00bfffc4 	movi	r2,-1
100082bc:	003f0006 	br	10007ec0 <__alt_data_end+0xf8007ec0>
100082c0:	00800304 	movi	r2,12
100082c4:	a8800015 	stw	r2,0(r21)
100082c8:	8080030b 	ldhu	r2,12(r16)
100082cc:	003f5006 	br	10008010 <__alt_data_end+0xf8008010>

100082d0 <_fwalk>:
100082d0:	defff704 	addi	sp,sp,-36
100082d4:	dd000415 	stw	r20,16(sp)
100082d8:	dfc00815 	stw	ra,32(sp)
100082dc:	ddc00715 	stw	r23,28(sp)
100082e0:	dd800615 	stw	r22,24(sp)
100082e4:	dd400515 	stw	r21,20(sp)
100082e8:	dcc00315 	stw	r19,12(sp)
100082ec:	dc800215 	stw	r18,8(sp)
100082f0:	dc400115 	stw	r17,4(sp)
100082f4:	dc000015 	stw	r16,0(sp)
100082f8:	2500b804 	addi	r20,r4,736
100082fc:	a0002326 	beq	r20,zero,1000838c <_fwalk+0xbc>
10008300:	282b883a 	mov	r21,r5
10008304:	002f883a 	mov	r23,zero
10008308:	05800044 	movi	r22,1
1000830c:	04ffffc4 	movi	r19,-1
10008310:	a4400117 	ldw	r17,4(r20)
10008314:	a4800217 	ldw	r18,8(r20)
10008318:	8c7fffc4 	addi	r17,r17,-1
1000831c:	88000d16 	blt	r17,zero,10008354 <_fwalk+0x84>
10008320:	94000304 	addi	r16,r18,12
10008324:	94800384 	addi	r18,r18,14
10008328:	8080000b 	ldhu	r2,0(r16)
1000832c:	8c7fffc4 	addi	r17,r17,-1
10008330:	813ffd04 	addi	r4,r16,-12
10008334:	b080042e 	bgeu	r22,r2,10008348 <_fwalk+0x78>
10008338:	9080000f 	ldh	r2,0(r18)
1000833c:	14c00226 	beq	r2,r19,10008348 <_fwalk+0x78>
10008340:	a83ee83a 	callr	r21
10008344:	b8aeb03a 	or	r23,r23,r2
10008348:	84001a04 	addi	r16,r16,104
1000834c:	94801a04 	addi	r18,r18,104
10008350:	8cfff51e 	bne	r17,r19,10008328 <__alt_data_end+0xf8008328>
10008354:	a5000017 	ldw	r20,0(r20)
10008358:	a03fed1e 	bne	r20,zero,10008310 <__alt_data_end+0xf8008310>
1000835c:	b805883a 	mov	r2,r23
10008360:	dfc00817 	ldw	ra,32(sp)
10008364:	ddc00717 	ldw	r23,28(sp)
10008368:	dd800617 	ldw	r22,24(sp)
1000836c:	dd400517 	ldw	r21,20(sp)
10008370:	dd000417 	ldw	r20,16(sp)
10008374:	dcc00317 	ldw	r19,12(sp)
10008378:	dc800217 	ldw	r18,8(sp)
1000837c:	dc400117 	ldw	r17,4(sp)
10008380:	dc000017 	ldw	r16,0(sp)
10008384:	dec00904 	addi	sp,sp,36
10008388:	f800283a 	ret
1000838c:	002f883a 	mov	r23,zero
10008390:	003ff206 	br	1000835c <__alt_data_end+0xf800835c>

10008394 <_fwalk_reent>:
10008394:	defff704 	addi	sp,sp,-36
10008398:	dd000415 	stw	r20,16(sp)
1000839c:	dfc00815 	stw	ra,32(sp)
100083a0:	ddc00715 	stw	r23,28(sp)
100083a4:	dd800615 	stw	r22,24(sp)
100083a8:	dd400515 	stw	r21,20(sp)
100083ac:	dcc00315 	stw	r19,12(sp)
100083b0:	dc800215 	stw	r18,8(sp)
100083b4:	dc400115 	stw	r17,4(sp)
100083b8:	dc000015 	stw	r16,0(sp)
100083bc:	2500b804 	addi	r20,r4,736
100083c0:	a0002326 	beq	r20,zero,10008450 <_fwalk_reent+0xbc>
100083c4:	282b883a 	mov	r21,r5
100083c8:	2027883a 	mov	r19,r4
100083cc:	002f883a 	mov	r23,zero
100083d0:	05800044 	movi	r22,1
100083d4:	04bfffc4 	movi	r18,-1
100083d8:	a4400117 	ldw	r17,4(r20)
100083dc:	a4000217 	ldw	r16,8(r20)
100083e0:	8c7fffc4 	addi	r17,r17,-1
100083e4:	88000c16 	blt	r17,zero,10008418 <_fwalk_reent+0x84>
100083e8:	84000304 	addi	r16,r16,12
100083ec:	8080000b 	ldhu	r2,0(r16)
100083f0:	8c7fffc4 	addi	r17,r17,-1
100083f4:	817ffd04 	addi	r5,r16,-12
100083f8:	b080052e 	bgeu	r22,r2,10008410 <_fwalk_reent+0x7c>
100083fc:	8080008f 	ldh	r2,2(r16)
10008400:	9809883a 	mov	r4,r19
10008404:	14800226 	beq	r2,r18,10008410 <_fwalk_reent+0x7c>
10008408:	a83ee83a 	callr	r21
1000840c:	b8aeb03a 	or	r23,r23,r2
10008410:	84001a04 	addi	r16,r16,104
10008414:	8cbff51e 	bne	r17,r18,100083ec <__alt_data_end+0xf80083ec>
10008418:	a5000017 	ldw	r20,0(r20)
1000841c:	a03fee1e 	bne	r20,zero,100083d8 <__alt_data_end+0xf80083d8>
10008420:	b805883a 	mov	r2,r23
10008424:	dfc00817 	ldw	ra,32(sp)
10008428:	ddc00717 	ldw	r23,28(sp)
1000842c:	dd800617 	ldw	r22,24(sp)
10008430:	dd400517 	ldw	r21,20(sp)
10008434:	dd000417 	ldw	r20,16(sp)
10008438:	dcc00317 	ldw	r19,12(sp)
1000843c:	dc800217 	ldw	r18,8(sp)
10008440:	dc400117 	ldw	r17,4(sp)
10008444:	dc000017 	ldw	r16,0(sp)
10008448:	dec00904 	addi	sp,sp,36
1000844c:	f800283a 	ret
10008450:	002f883a 	mov	r23,zero
10008454:	003ff206 	br	10008420 <__alt_data_end+0xf8008420>

10008458 <_setlocale_r>:
10008458:	30001b26 	beq	r6,zero,100084c8 <_setlocale_r+0x70>
1000845c:	01440074 	movhi	r5,4097
10008460:	defffe04 	addi	sp,sp,-8
10008464:	29506204 	addi	r5,r5,16776
10008468:	3009883a 	mov	r4,r6
1000846c:	dc000015 	stw	r16,0(sp)
10008470:	dfc00115 	stw	ra,4(sp)
10008474:	3021883a 	mov	r16,r6
10008478:	000abcc0 	call	1000abcc <strcmp>
1000847c:	1000061e 	bne	r2,zero,10008498 <_setlocale_r+0x40>
10008480:	00840074 	movhi	r2,4097
10008484:	10906104 	addi	r2,r2,16772
10008488:	dfc00117 	ldw	ra,4(sp)
1000848c:	dc000017 	ldw	r16,0(sp)
10008490:	dec00204 	addi	sp,sp,8
10008494:	f800283a 	ret
10008498:	01440074 	movhi	r5,4097
1000849c:	29506104 	addi	r5,r5,16772
100084a0:	8009883a 	mov	r4,r16
100084a4:	000abcc0 	call	1000abcc <strcmp>
100084a8:	103ff526 	beq	r2,zero,10008480 <__alt_data_end+0xf8008480>
100084ac:	01440074 	movhi	r5,4097
100084b0:	29504404 	addi	r5,r5,16656
100084b4:	8009883a 	mov	r4,r16
100084b8:	000abcc0 	call	1000abcc <strcmp>
100084bc:	103ff026 	beq	r2,zero,10008480 <__alt_data_end+0xf8008480>
100084c0:	0005883a 	mov	r2,zero
100084c4:	003ff006 	br	10008488 <__alt_data_end+0xf8008488>
100084c8:	00840074 	movhi	r2,4097
100084cc:	10906104 	addi	r2,r2,16772
100084d0:	f800283a 	ret

100084d4 <__locale_charset>:
100084d4:	00840074 	movhi	r2,4097
100084d8:	1092d404 	addi	r2,r2,19280
100084dc:	f800283a 	ret

100084e0 <__locale_mb_cur_max>:
100084e0:	00840074 	movhi	r2,4097
100084e4:	10987204 	addi	r2,r2,25032
100084e8:	10800017 	ldw	r2,0(r2)
100084ec:	f800283a 	ret

100084f0 <__locale_msgcharset>:
100084f0:	00840074 	movhi	r2,4097
100084f4:	1092cc04 	addi	r2,r2,19248
100084f8:	f800283a 	ret

100084fc <__locale_cjk_lang>:
100084fc:	0005883a 	mov	r2,zero
10008500:	f800283a 	ret

10008504 <_localeconv_r>:
10008504:	00840074 	movhi	r2,4097
10008508:	1092dc04 	addi	r2,r2,19312
1000850c:	f800283a 	ret

10008510 <setlocale>:
10008510:	00840074 	movhi	r2,4097
10008514:	10987104 	addi	r2,r2,25028
10008518:	280d883a 	mov	r6,r5
1000851c:	200b883a 	mov	r5,r4
10008520:	11000017 	ldw	r4,0(r2)
10008524:	00084581 	jmpi	10008458 <_setlocale_r>

10008528 <localeconv>:
10008528:	00840074 	movhi	r2,4097
1000852c:	1092dc04 	addi	r2,r2,19312
10008530:	f800283a 	ret

10008534 <__smakebuf_r>:
10008534:	2880030b 	ldhu	r2,12(r5)
10008538:	10c0008c 	andi	r3,r2,2
1000853c:	1800411e 	bne	r3,zero,10008644 <__smakebuf_r+0x110>
10008540:	deffec04 	addi	sp,sp,-80
10008544:	dc000f15 	stw	r16,60(sp)
10008548:	2821883a 	mov	r16,r5
1000854c:	2940038f 	ldh	r5,14(r5)
10008550:	dc401015 	stw	r17,64(sp)
10008554:	dfc01315 	stw	ra,76(sp)
10008558:	dcc01215 	stw	r19,72(sp)
1000855c:	dc801115 	stw	r18,68(sp)
10008560:	2023883a 	mov	r17,r4
10008564:	28001c16 	blt	r5,zero,100085d8 <__smakebuf_r+0xa4>
10008568:	d80d883a 	mov	r6,sp
1000856c:	000ddac0 	call	1000ddac <_fstat_r>
10008570:	10001816 	blt	r2,zero,100085d4 <__smakebuf_r+0xa0>
10008574:	d8800117 	ldw	r2,4(sp)
10008578:	00e00014 	movui	r3,32768
1000857c:	10bc000c 	andi	r2,r2,61440
10008580:	14c80020 	cmpeqi	r19,r2,8192
10008584:	10c03726 	beq	r2,r3,10008664 <__smakebuf_r+0x130>
10008588:	80c0030b 	ldhu	r3,12(r16)
1000858c:	18c20014 	ori	r3,r3,2048
10008590:	80c0030d 	sth	r3,12(r16)
10008594:	00c80004 	movi	r3,8192
10008598:	10c0521e 	bne	r2,r3,100086e4 <__smakebuf_r+0x1b0>
1000859c:	8140038f 	ldh	r5,14(r16)
100085a0:	8809883a 	mov	r4,r17
100085a4:	000de080 	call	1000de08 <_isatty_r>
100085a8:	10004c26 	beq	r2,zero,100086dc <__smakebuf_r+0x1a8>
100085ac:	8080030b 	ldhu	r2,12(r16)
100085b0:	80c010c4 	addi	r3,r16,67
100085b4:	80c00015 	stw	r3,0(r16)
100085b8:	10800054 	ori	r2,r2,1
100085bc:	8080030d 	sth	r2,12(r16)
100085c0:	00800044 	movi	r2,1
100085c4:	80c00415 	stw	r3,16(r16)
100085c8:	80800515 	stw	r2,20(r16)
100085cc:	04810004 	movi	r18,1024
100085d0:	00000706 	br	100085f0 <__smakebuf_r+0xbc>
100085d4:	8080030b 	ldhu	r2,12(r16)
100085d8:	10c0200c 	andi	r3,r2,128
100085dc:	18001f1e 	bne	r3,zero,1000865c <__smakebuf_r+0x128>
100085e0:	04810004 	movi	r18,1024
100085e4:	10820014 	ori	r2,r2,2048
100085e8:	8080030d 	sth	r2,12(r16)
100085ec:	0027883a 	mov	r19,zero
100085f0:	900b883a 	mov	r5,r18
100085f4:	8809883a 	mov	r4,r17
100085f8:	00086f00 	call	100086f0 <_malloc_r>
100085fc:	10002c26 	beq	r2,zero,100086b0 <__smakebuf_r+0x17c>
10008600:	80c0030b 	ldhu	r3,12(r16)
10008604:	01040034 	movhi	r4,4096
10008608:	211d8b04 	addi	r4,r4,30252
1000860c:	89000f15 	stw	r4,60(r17)
10008610:	18c02014 	ori	r3,r3,128
10008614:	80c0030d 	sth	r3,12(r16)
10008618:	80800015 	stw	r2,0(r16)
1000861c:	80800415 	stw	r2,16(r16)
10008620:	84800515 	stw	r18,20(r16)
10008624:	98001a1e 	bne	r19,zero,10008690 <__smakebuf_r+0x15c>
10008628:	dfc01317 	ldw	ra,76(sp)
1000862c:	dcc01217 	ldw	r19,72(sp)
10008630:	dc801117 	ldw	r18,68(sp)
10008634:	dc401017 	ldw	r17,64(sp)
10008638:	dc000f17 	ldw	r16,60(sp)
1000863c:	dec01404 	addi	sp,sp,80
10008640:	f800283a 	ret
10008644:	288010c4 	addi	r2,r5,67
10008648:	28800015 	stw	r2,0(r5)
1000864c:	28800415 	stw	r2,16(r5)
10008650:	00800044 	movi	r2,1
10008654:	28800515 	stw	r2,20(r5)
10008658:	f800283a 	ret
1000865c:	04801004 	movi	r18,64
10008660:	003fe006 	br	100085e4 <__alt_data_end+0xf80085e4>
10008664:	81000a17 	ldw	r4,40(r16)
10008668:	00c40074 	movhi	r3,4097
1000866c:	18eada04 	addi	r3,r3,-21656
10008670:	20ffc51e 	bne	r4,r3,10008588 <__alt_data_end+0xf8008588>
10008674:	8080030b 	ldhu	r2,12(r16)
10008678:	04810004 	movi	r18,1024
1000867c:	84801315 	stw	r18,76(r16)
10008680:	1484b03a 	or	r2,r2,r18
10008684:	8080030d 	sth	r2,12(r16)
10008688:	0027883a 	mov	r19,zero
1000868c:	003fd806 	br	100085f0 <__alt_data_end+0xf80085f0>
10008690:	8140038f 	ldh	r5,14(r16)
10008694:	8809883a 	mov	r4,r17
10008698:	000de080 	call	1000de08 <_isatty_r>
1000869c:	103fe226 	beq	r2,zero,10008628 <__alt_data_end+0xf8008628>
100086a0:	8080030b 	ldhu	r2,12(r16)
100086a4:	10800054 	ori	r2,r2,1
100086a8:	8080030d 	sth	r2,12(r16)
100086ac:	003fde06 	br	10008628 <__alt_data_end+0xf8008628>
100086b0:	8080030b 	ldhu	r2,12(r16)
100086b4:	10c0800c 	andi	r3,r2,512
100086b8:	183fdb1e 	bne	r3,zero,10008628 <__alt_data_end+0xf8008628>
100086bc:	10800094 	ori	r2,r2,2
100086c0:	80c010c4 	addi	r3,r16,67
100086c4:	8080030d 	sth	r2,12(r16)
100086c8:	00800044 	movi	r2,1
100086cc:	80c00015 	stw	r3,0(r16)
100086d0:	80c00415 	stw	r3,16(r16)
100086d4:	80800515 	stw	r2,20(r16)
100086d8:	003fd306 	br	10008628 <__alt_data_end+0xf8008628>
100086dc:	04810004 	movi	r18,1024
100086e0:	003fc306 	br	100085f0 <__alt_data_end+0xf80085f0>
100086e4:	0027883a 	mov	r19,zero
100086e8:	04810004 	movi	r18,1024
100086ec:	003fc006 	br	100085f0 <__alt_data_end+0xf80085f0>

100086f0 <_malloc_r>:
100086f0:	defff504 	addi	sp,sp,-44
100086f4:	dc800315 	stw	r18,12(sp)
100086f8:	dfc00a15 	stw	ra,40(sp)
100086fc:	df000915 	stw	fp,36(sp)
10008700:	ddc00815 	stw	r23,32(sp)
10008704:	dd800715 	stw	r22,28(sp)
10008708:	dd400615 	stw	r21,24(sp)
1000870c:	dd000515 	stw	r20,20(sp)
10008710:	dcc00415 	stw	r19,16(sp)
10008714:	dc400215 	stw	r17,8(sp)
10008718:	dc000115 	stw	r16,4(sp)
1000871c:	288002c4 	addi	r2,r5,11
10008720:	00c00584 	movi	r3,22
10008724:	2025883a 	mov	r18,r4
10008728:	18807f2e 	bgeu	r3,r2,10008928 <_malloc_r+0x238>
1000872c:	047ffe04 	movi	r17,-8
10008730:	1462703a 	and	r17,r2,r17
10008734:	8800a316 	blt	r17,zero,100089c4 <_malloc_r+0x2d4>
10008738:	8940a236 	bltu	r17,r5,100089c4 <_malloc_r+0x2d4>
1000873c:	0011d680 	call	10011d68 <__malloc_lock>
10008740:	00807dc4 	movi	r2,503
10008744:	1441e92e 	bgeu	r2,r17,10008eec <_malloc_r+0x7fc>
10008748:	8804d27a 	srli	r2,r17,9
1000874c:	1000a126 	beq	r2,zero,100089d4 <_malloc_r+0x2e4>
10008750:	00c00104 	movi	r3,4
10008754:	18811e36 	bltu	r3,r2,10008bd0 <_malloc_r+0x4e0>
10008758:	8804d1ba 	srli	r2,r17,6
1000875c:	12000e44 	addi	r8,r2,57
10008760:	11c00e04 	addi	r7,r2,56
10008764:	4209883a 	add	r4,r8,r8
10008768:	04c40074 	movhi	r19,4097
1000876c:	2109883a 	add	r4,r4,r4
10008770:	9cd2ea04 	addi	r19,r19,19368
10008774:	2109883a 	add	r4,r4,r4
10008778:	9909883a 	add	r4,r19,r4
1000877c:	24000117 	ldw	r16,4(r4)
10008780:	213ffe04 	addi	r4,r4,-8
10008784:	24009726 	beq	r4,r16,100089e4 <_malloc_r+0x2f4>
10008788:	80800117 	ldw	r2,4(r16)
1000878c:	01bfff04 	movi	r6,-4
10008790:	014003c4 	movi	r5,15
10008794:	1184703a 	and	r2,r2,r6
10008798:	1447c83a 	sub	r3,r2,r17
1000879c:	28c00716 	blt	r5,r3,100087bc <_malloc_r+0xcc>
100087a0:	1800920e 	bge	r3,zero,100089ec <_malloc_r+0x2fc>
100087a4:	84000317 	ldw	r16,12(r16)
100087a8:	24008e26 	beq	r4,r16,100089e4 <_malloc_r+0x2f4>
100087ac:	80800117 	ldw	r2,4(r16)
100087b0:	1184703a 	and	r2,r2,r6
100087b4:	1447c83a 	sub	r3,r2,r17
100087b8:	28fff90e 	bge	r5,r3,100087a0 <__alt_data_end+0xf80087a0>
100087bc:	3809883a 	mov	r4,r7
100087c0:	01840074 	movhi	r6,4097
100087c4:	9c000417 	ldw	r16,16(r19)
100087c8:	3192ea04 	addi	r6,r6,19368
100087cc:	32000204 	addi	r8,r6,8
100087d0:	82013426 	beq	r16,r8,10008ca4 <_malloc_r+0x5b4>
100087d4:	80c00117 	ldw	r3,4(r16)
100087d8:	00bfff04 	movi	r2,-4
100087dc:	188e703a 	and	r7,r3,r2
100087e0:	3c45c83a 	sub	r2,r7,r17
100087e4:	00c003c4 	movi	r3,15
100087e8:	18811f16 	blt	r3,r2,10008c68 <_malloc_r+0x578>
100087ec:	32000515 	stw	r8,20(r6)
100087f0:	32000415 	stw	r8,16(r6)
100087f4:	10007f0e 	bge	r2,zero,100089f4 <_malloc_r+0x304>
100087f8:	00807fc4 	movi	r2,511
100087fc:	11c0fd36 	bltu	r2,r7,10008bf4 <_malloc_r+0x504>
10008800:	3806d0fa 	srli	r3,r7,3
10008804:	01c00044 	movi	r7,1
10008808:	30800117 	ldw	r2,4(r6)
1000880c:	19400044 	addi	r5,r3,1
10008810:	294b883a 	add	r5,r5,r5
10008814:	1807d0ba 	srai	r3,r3,2
10008818:	294b883a 	add	r5,r5,r5
1000881c:	294b883a 	add	r5,r5,r5
10008820:	298b883a 	add	r5,r5,r6
10008824:	38c6983a 	sll	r3,r7,r3
10008828:	29c00017 	ldw	r7,0(r5)
1000882c:	2a7ffe04 	addi	r9,r5,-8
10008830:	1886b03a 	or	r3,r3,r2
10008834:	82400315 	stw	r9,12(r16)
10008838:	81c00215 	stw	r7,8(r16)
1000883c:	30c00115 	stw	r3,4(r6)
10008840:	2c000015 	stw	r16,0(r5)
10008844:	3c000315 	stw	r16,12(r7)
10008848:	2005d0ba 	srai	r2,r4,2
1000884c:	01400044 	movi	r5,1
10008850:	288a983a 	sll	r5,r5,r2
10008854:	19406f36 	bltu	r3,r5,10008a14 <_malloc_r+0x324>
10008858:	28c4703a 	and	r2,r5,r3
1000885c:	10000a1e 	bne	r2,zero,10008888 <_malloc_r+0x198>
10008860:	00bfff04 	movi	r2,-4
10008864:	294b883a 	add	r5,r5,r5
10008868:	2088703a 	and	r4,r4,r2
1000886c:	28c4703a 	and	r2,r5,r3
10008870:	21000104 	addi	r4,r4,4
10008874:	1000041e 	bne	r2,zero,10008888 <_malloc_r+0x198>
10008878:	294b883a 	add	r5,r5,r5
1000887c:	28c4703a 	and	r2,r5,r3
10008880:	21000104 	addi	r4,r4,4
10008884:	103ffc26 	beq	r2,zero,10008878 <__alt_data_end+0xf8008878>
10008888:	02bfff04 	movi	r10,-4
1000888c:	024003c4 	movi	r9,15
10008890:	21800044 	addi	r6,r4,1
10008894:	318d883a 	add	r6,r6,r6
10008898:	318d883a 	add	r6,r6,r6
1000889c:	318d883a 	add	r6,r6,r6
100088a0:	998d883a 	add	r6,r19,r6
100088a4:	333ffe04 	addi	r12,r6,-8
100088a8:	2017883a 	mov	r11,r4
100088ac:	31800104 	addi	r6,r6,4
100088b0:	34000017 	ldw	r16,0(r6)
100088b4:	31fffd04 	addi	r7,r6,-12
100088b8:	81c0041e 	bne	r16,r7,100088cc <_malloc_r+0x1dc>
100088bc:	0000fb06 	br	10008cac <_malloc_r+0x5bc>
100088c0:	1801030e 	bge	r3,zero,10008cd0 <_malloc_r+0x5e0>
100088c4:	84000317 	ldw	r16,12(r16)
100088c8:	81c0f826 	beq	r16,r7,10008cac <_malloc_r+0x5bc>
100088cc:	80800117 	ldw	r2,4(r16)
100088d0:	1284703a 	and	r2,r2,r10
100088d4:	1447c83a 	sub	r3,r2,r17
100088d8:	48fff90e 	bge	r9,r3,100088c0 <__alt_data_end+0xf80088c0>
100088dc:	80800317 	ldw	r2,12(r16)
100088e0:	81000217 	ldw	r4,8(r16)
100088e4:	89400054 	ori	r5,r17,1
100088e8:	81400115 	stw	r5,4(r16)
100088ec:	20800315 	stw	r2,12(r4)
100088f0:	11000215 	stw	r4,8(r2)
100088f4:	8463883a 	add	r17,r16,r17
100088f8:	9c400515 	stw	r17,20(r19)
100088fc:	9c400415 	stw	r17,16(r19)
10008900:	18800054 	ori	r2,r3,1
10008904:	88800115 	stw	r2,4(r17)
10008908:	8a000315 	stw	r8,12(r17)
1000890c:	8a000215 	stw	r8,8(r17)
10008910:	88e3883a 	add	r17,r17,r3
10008914:	88c00015 	stw	r3,0(r17)
10008918:	9009883a 	mov	r4,r18
1000891c:	0011d8c0 	call	10011d8c <__malloc_unlock>
10008920:	80800204 	addi	r2,r16,8
10008924:	00001b06 	br	10008994 <_malloc_r+0x2a4>
10008928:	04400404 	movi	r17,16
1000892c:	89402536 	bltu	r17,r5,100089c4 <_malloc_r+0x2d4>
10008930:	0011d680 	call	10011d68 <__malloc_lock>
10008934:	00800184 	movi	r2,6
10008938:	01000084 	movi	r4,2
1000893c:	04c40074 	movhi	r19,4097
10008940:	1085883a 	add	r2,r2,r2
10008944:	9cd2ea04 	addi	r19,r19,19368
10008948:	1085883a 	add	r2,r2,r2
1000894c:	9885883a 	add	r2,r19,r2
10008950:	14000117 	ldw	r16,4(r2)
10008954:	10fffe04 	addi	r3,r2,-8
10008958:	80c0d926 	beq	r16,r3,10008cc0 <_malloc_r+0x5d0>
1000895c:	80c00117 	ldw	r3,4(r16)
10008960:	81000317 	ldw	r4,12(r16)
10008964:	00bfff04 	movi	r2,-4
10008968:	1884703a 	and	r2,r3,r2
1000896c:	81400217 	ldw	r5,8(r16)
10008970:	8085883a 	add	r2,r16,r2
10008974:	10c00117 	ldw	r3,4(r2)
10008978:	29000315 	stw	r4,12(r5)
1000897c:	21400215 	stw	r5,8(r4)
10008980:	18c00054 	ori	r3,r3,1
10008984:	10c00115 	stw	r3,4(r2)
10008988:	9009883a 	mov	r4,r18
1000898c:	0011d8c0 	call	10011d8c <__malloc_unlock>
10008990:	80800204 	addi	r2,r16,8
10008994:	dfc00a17 	ldw	ra,40(sp)
10008998:	df000917 	ldw	fp,36(sp)
1000899c:	ddc00817 	ldw	r23,32(sp)
100089a0:	dd800717 	ldw	r22,28(sp)
100089a4:	dd400617 	ldw	r21,24(sp)
100089a8:	dd000517 	ldw	r20,20(sp)
100089ac:	dcc00417 	ldw	r19,16(sp)
100089b0:	dc800317 	ldw	r18,12(sp)
100089b4:	dc400217 	ldw	r17,8(sp)
100089b8:	dc000117 	ldw	r16,4(sp)
100089bc:	dec00b04 	addi	sp,sp,44
100089c0:	f800283a 	ret
100089c4:	00800304 	movi	r2,12
100089c8:	90800015 	stw	r2,0(r18)
100089cc:	0005883a 	mov	r2,zero
100089d0:	003ff006 	br	10008994 <__alt_data_end+0xf8008994>
100089d4:	01002004 	movi	r4,128
100089d8:	02001004 	movi	r8,64
100089dc:	01c00fc4 	movi	r7,63
100089e0:	003f6106 	br	10008768 <__alt_data_end+0xf8008768>
100089e4:	4009883a 	mov	r4,r8
100089e8:	003f7506 	br	100087c0 <__alt_data_end+0xf80087c0>
100089ec:	81000317 	ldw	r4,12(r16)
100089f0:	003fde06 	br	1000896c <__alt_data_end+0xf800896c>
100089f4:	81c5883a 	add	r2,r16,r7
100089f8:	11400117 	ldw	r5,4(r2)
100089fc:	9009883a 	mov	r4,r18
10008a00:	29400054 	ori	r5,r5,1
10008a04:	11400115 	stw	r5,4(r2)
10008a08:	0011d8c0 	call	10011d8c <__malloc_unlock>
10008a0c:	80800204 	addi	r2,r16,8
10008a10:	003fe006 	br	10008994 <__alt_data_end+0xf8008994>
10008a14:	9c000217 	ldw	r16,8(r19)
10008a18:	00bfff04 	movi	r2,-4
10008a1c:	85800117 	ldw	r22,4(r16)
10008a20:	b0ac703a 	and	r22,r22,r2
10008a24:	b4400336 	bltu	r22,r17,10008a34 <_malloc_r+0x344>
10008a28:	b445c83a 	sub	r2,r22,r17
10008a2c:	00c003c4 	movi	r3,15
10008a30:	18805d16 	blt	r3,r2,10008ba8 <_malloc_r+0x4b8>
10008a34:	05c40074 	movhi	r23,4097
10008a38:	00840074 	movhi	r2,4097
10008a3c:	109ffa04 	addi	r2,r2,32744
10008a40:	bdd87304 	addi	r23,r23,25036
10008a44:	15400017 	ldw	r21,0(r2)
10008a48:	b8c00017 	ldw	r3,0(r23)
10008a4c:	00bfffc4 	movi	r2,-1
10008a50:	858d883a 	add	r6,r16,r22
10008a54:	8d6b883a 	add	r21,r17,r21
10008a58:	1880ea26 	beq	r3,r2,10008e04 <_malloc_r+0x714>
10008a5c:	ad4403c4 	addi	r21,r21,4111
10008a60:	00bc0004 	movi	r2,-4096
10008a64:	a8aa703a 	and	r21,r21,r2
10008a68:	a80b883a 	mov	r5,r21
10008a6c:	9009883a 	mov	r4,r18
10008a70:	d9800015 	stw	r6,0(sp)
10008a74:	000aa3c0 	call	1000aa3c <_sbrk_r>
10008a78:	1029883a 	mov	r20,r2
10008a7c:	00bfffc4 	movi	r2,-1
10008a80:	d9800017 	ldw	r6,0(sp)
10008a84:	a080e826 	beq	r20,r2,10008e28 <_malloc_r+0x738>
10008a88:	a180a636 	bltu	r20,r6,10008d24 <_malloc_r+0x634>
10008a8c:	070400b4 	movhi	fp,4098
10008a90:	e7200304 	addi	fp,fp,-32756
10008a94:	e0800017 	ldw	r2,0(fp)
10008a98:	a887883a 	add	r3,r21,r2
10008a9c:	e0c00015 	stw	r3,0(fp)
10008aa0:	3500e626 	beq	r6,r20,10008e3c <_malloc_r+0x74c>
10008aa4:	b9000017 	ldw	r4,0(r23)
10008aa8:	00bfffc4 	movi	r2,-1
10008aac:	2080ee26 	beq	r4,r2,10008e68 <_malloc_r+0x778>
10008ab0:	a185c83a 	sub	r2,r20,r6
10008ab4:	10c5883a 	add	r2,r2,r3
10008ab8:	e0800015 	stw	r2,0(fp)
10008abc:	a0c001cc 	andi	r3,r20,7
10008ac0:	1800bc26 	beq	r3,zero,10008db4 <_malloc_r+0x6c4>
10008ac4:	a0e9c83a 	sub	r20,r20,r3
10008ac8:	00840204 	movi	r2,4104
10008acc:	a5000204 	addi	r20,r20,8
10008ad0:	10c7c83a 	sub	r3,r2,r3
10008ad4:	a545883a 	add	r2,r20,r21
10008ad8:	1083ffcc 	andi	r2,r2,4095
10008adc:	18abc83a 	sub	r21,r3,r2
10008ae0:	a80b883a 	mov	r5,r21
10008ae4:	9009883a 	mov	r4,r18
10008ae8:	000aa3c0 	call	1000aa3c <_sbrk_r>
10008aec:	00ffffc4 	movi	r3,-1
10008af0:	10c0e126 	beq	r2,r3,10008e78 <_malloc_r+0x788>
10008af4:	1505c83a 	sub	r2,r2,r20
10008af8:	1545883a 	add	r2,r2,r21
10008afc:	10800054 	ori	r2,r2,1
10008b00:	e0c00017 	ldw	r3,0(fp)
10008b04:	9d000215 	stw	r20,8(r19)
10008b08:	a0800115 	stw	r2,4(r20)
10008b0c:	a8c7883a 	add	r3,r21,r3
10008b10:	e0c00015 	stw	r3,0(fp)
10008b14:	84c00e26 	beq	r16,r19,10008b50 <_malloc_r+0x460>
10008b18:	018003c4 	movi	r6,15
10008b1c:	3580a72e 	bgeu	r6,r22,10008dbc <_malloc_r+0x6cc>
10008b20:	81400117 	ldw	r5,4(r16)
10008b24:	013ffe04 	movi	r4,-8
10008b28:	b0bffd04 	addi	r2,r22,-12
10008b2c:	1104703a 	and	r2,r2,r4
10008b30:	2900004c 	andi	r4,r5,1
10008b34:	2088b03a 	or	r4,r4,r2
10008b38:	81000115 	stw	r4,4(r16)
10008b3c:	01400144 	movi	r5,5
10008b40:	8089883a 	add	r4,r16,r2
10008b44:	21400115 	stw	r5,4(r4)
10008b48:	21400215 	stw	r5,8(r4)
10008b4c:	3080cd36 	bltu	r6,r2,10008e84 <_malloc_r+0x794>
10008b50:	00840074 	movhi	r2,4097
10008b54:	109ff904 	addi	r2,r2,32740
10008b58:	11000017 	ldw	r4,0(r2)
10008b5c:	20c0012e 	bgeu	r4,r3,10008b64 <_malloc_r+0x474>
10008b60:	10c00015 	stw	r3,0(r2)
10008b64:	00840074 	movhi	r2,4097
10008b68:	109ff804 	addi	r2,r2,32736
10008b6c:	11000017 	ldw	r4,0(r2)
10008b70:	9c000217 	ldw	r16,8(r19)
10008b74:	20c0012e 	bgeu	r4,r3,10008b7c <_malloc_r+0x48c>
10008b78:	10c00015 	stw	r3,0(r2)
10008b7c:	80c00117 	ldw	r3,4(r16)
10008b80:	00bfff04 	movi	r2,-4
10008b84:	1886703a 	and	r3,r3,r2
10008b88:	1c45c83a 	sub	r2,r3,r17
10008b8c:	1c400236 	bltu	r3,r17,10008b98 <_malloc_r+0x4a8>
10008b90:	00c003c4 	movi	r3,15
10008b94:	18800416 	blt	r3,r2,10008ba8 <_malloc_r+0x4b8>
10008b98:	9009883a 	mov	r4,r18
10008b9c:	0011d8c0 	call	10011d8c <__malloc_unlock>
10008ba0:	0005883a 	mov	r2,zero
10008ba4:	003f7b06 	br	10008994 <__alt_data_end+0xf8008994>
10008ba8:	88c00054 	ori	r3,r17,1
10008bac:	80c00115 	stw	r3,4(r16)
10008bb0:	8463883a 	add	r17,r16,r17
10008bb4:	10800054 	ori	r2,r2,1
10008bb8:	9c400215 	stw	r17,8(r19)
10008bbc:	88800115 	stw	r2,4(r17)
10008bc0:	9009883a 	mov	r4,r18
10008bc4:	0011d8c0 	call	10011d8c <__malloc_unlock>
10008bc8:	80800204 	addi	r2,r16,8
10008bcc:	003f7106 	br	10008994 <__alt_data_end+0xf8008994>
10008bd0:	00c00504 	movi	r3,20
10008bd4:	18804a2e 	bgeu	r3,r2,10008d00 <_malloc_r+0x610>
10008bd8:	00c01504 	movi	r3,84
10008bdc:	18806e36 	bltu	r3,r2,10008d98 <_malloc_r+0x6a8>
10008be0:	8804d33a 	srli	r2,r17,12
10008be4:	12001bc4 	addi	r8,r2,111
10008be8:	11c01b84 	addi	r7,r2,110
10008bec:	4209883a 	add	r4,r8,r8
10008bf0:	003edd06 	br	10008768 <__alt_data_end+0xf8008768>
10008bf4:	3804d27a 	srli	r2,r7,9
10008bf8:	00c00104 	movi	r3,4
10008bfc:	1880442e 	bgeu	r3,r2,10008d10 <_malloc_r+0x620>
10008c00:	00c00504 	movi	r3,20
10008c04:	18808136 	bltu	r3,r2,10008e0c <_malloc_r+0x71c>
10008c08:	11401704 	addi	r5,r2,92
10008c0c:	10c016c4 	addi	r3,r2,91
10008c10:	294b883a 	add	r5,r5,r5
10008c14:	294b883a 	add	r5,r5,r5
10008c18:	294b883a 	add	r5,r5,r5
10008c1c:	994b883a 	add	r5,r19,r5
10008c20:	28800017 	ldw	r2,0(r5)
10008c24:	01840074 	movhi	r6,4097
10008c28:	297ffe04 	addi	r5,r5,-8
10008c2c:	3192ea04 	addi	r6,r6,19368
10008c30:	28806526 	beq	r5,r2,10008dc8 <_malloc_r+0x6d8>
10008c34:	01bfff04 	movi	r6,-4
10008c38:	10c00117 	ldw	r3,4(r2)
10008c3c:	1986703a 	and	r3,r3,r6
10008c40:	38c0022e 	bgeu	r7,r3,10008c4c <_malloc_r+0x55c>
10008c44:	10800217 	ldw	r2,8(r2)
10008c48:	28bffb1e 	bne	r5,r2,10008c38 <__alt_data_end+0xf8008c38>
10008c4c:	11400317 	ldw	r5,12(r2)
10008c50:	98c00117 	ldw	r3,4(r19)
10008c54:	81400315 	stw	r5,12(r16)
10008c58:	80800215 	stw	r2,8(r16)
10008c5c:	2c000215 	stw	r16,8(r5)
10008c60:	14000315 	stw	r16,12(r2)
10008c64:	003ef806 	br	10008848 <__alt_data_end+0xf8008848>
10008c68:	88c00054 	ori	r3,r17,1
10008c6c:	80c00115 	stw	r3,4(r16)
10008c70:	8463883a 	add	r17,r16,r17
10008c74:	34400515 	stw	r17,20(r6)
10008c78:	34400415 	stw	r17,16(r6)
10008c7c:	10c00054 	ori	r3,r2,1
10008c80:	8a000315 	stw	r8,12(r17)
10008c84:	8a000215 	stw	r8,8(r17)
10008c88:	88c00115 	stw	r3,4(r17)
10008c8c:	88a3883a 	add	r17,r17,r2
10008c90:	88800015 	stw	r2,0(r17)
10008c94:	9009883a 	mov	r4,r18
10008c98:	0011d8c0 	call	10011d8c <__malloc_unlock>
10008c9c:	80800204 	addi	r2,r16,8
10008ca0:	003f3c06 	br	10008994 <__alt_data_end+0xf8008994>
10008ca4:	30c00117 	ldw	r3,4(r6)
10008ca8:	003ee706 	br	10008848 <__alt_data_end+0xf8008848>
10008cac:	5ac00044 	addi	r11,r11,1
10008cb0:	588000cc 	andi	r2,r11,3
10008cb4:	31800204 	addi	r6,r6,8
10008cb8:	103efd1e 	bne	r2,zero,100088b0 <__alt_data_end+0xf80088b0>
10008cbc:	00002406 	br	10008d50 <_malloc_r+0x660>
10008cc0:	14000317 	ldw	r16,12(r2)
10008cc4:	143f251e 	bne	r2,r16,1000895c <__alt_data_end+0xf800895c>
10008cc8:	21000084 	addi	r4,r4,2
10008ccc:	003ebc06 	br	100087c0 <__alt_data_end+0xf80087c0>
10008cd0:	8085883a 	add	r2,r16,r2
10008cd4:	10c00117 	ldw	r3,4(r2)
10008cd8:	81000317 	ldw	r4,12(r16)
10008cdc:	81400217 	ldw	r5,8(r16)
10008ce0:	18c00054 	ori	r3,r3,1
10008ce4:	10c00115 	stw	r3,4(r2)
10008ce8:	29000315 	stw	r4,12(r5)
10008cec:	21400215 	stw	r5,8(r4)
10008cf0:	9009883a 	mov	r4,r18
10008cf4:	0011d8c0 	call	10011d8c <__malloc_unlock>
10008cf8:	80800204 	addi	r2,r16,8
10008cfc:	003f2506 	br	10008994 <__alt_data_end+0xf8008994>
10008d00:	12001704 	addi	r8,r2,92
10008d04:	11c016c4 	addi	r7,r2,91
10008d08:	4209883a 	add	r4,r8,r8
10008d0c:	003e9606 	br	10008768 <__alt_data_end+0xf8008768>
10008d10:	3804d1ba 	srli	r2,r7,6
10008d14:	11400e44 	addi	r5,r2,57
10008d18:	10c00e04 	addi	r3,r2,56
10008d1c:	294b883a 	add	r5,r5,r5
10008d20:	003fbc06 	br	10008c14 <__alt_data_end+0xf8008c14>
10008d24:	84ff5926 	beq	r16,r19,10008a8c <__alt_data_end+0xf8008a8c>
10008d28:	00840074 	movhi	r2,4097
10008d2c:	1092ea04 	addi	r2,r2,19368
10008d30:	14000217 	ldw	r16,8(r2)
10008d34:	00bfff04 	movi	r2,-4
10008d38:	80c00117 	ldw	r3,4(r16)
10008d3c:	1886703a 	and	r3,r3,r2
10008d40:	003f9106 	br	10008b88 <__alt_data_end+0xf8008b88>
10008d44:	60800217 	ldw	r2,8(r12)
10008d48:	213fffc4 	addi	r4,r4,-1
10008d4c:	1300651e 	bne	r2,r12,10008ee4 <_malloc_r+0x7f4>
10008d50:	208000cc 	andi	r2,r4,3
10008d54:	633ffe04 	addi	r12,r12,-8
10008d58:	103ffa1e 	bne	r2,zero,10008d44 <__alt_data_end+0xf8008d44>
10008d5c:	98800117 	ldw	r2,4(r19)
10008d60:	0146303a 	nor	r3,zero,r5
10008d64:	1884703a 	and	r2,r3,r2
10008d68:	98800115 	stw	r2,4(r19)
10008d6c:	294b883a 	add	r5,r5,r5
10008d70:	117f2836 	bltu	r2,r5,10008a14 <__alt_data_end+0xf8008a14>
10008d74:	283f2726 	beq	r5,zero,10008a14 <__alt_data_end+0xf8008a14>
10008d78:	2886703a 	and	r3,r5,r2
10008d7c:	5809883a 	mov	r4,r11
10008d80:	183ec31e 	bne	r3,zero,10008890 <__alt_data_end+0xf8008890>
10008d84:	294b883a 	add	r5,r5,r5
10008d88:	2886703a 	and	r3,r5,r2
10008d8c:	21000104 	addi	r4,r4,4
10008d90:	183ffc26 	beq	r3,zero,10008d84 <__alt_data_end+0xf8008d84>
10008d94:	003ebe06 	br	10008890 <__alt_data_end+0xf8008890>
10008d98:	00c05504 	movi	r3,340
10008d9c:	18801236 	bltu	r3,r2,10008de8 <_malloc_r+0x6f8>
10008da0:	8804d3fa 	srli	r2,r17,15
10008da4:	12001e04 	addi	r8,r2,120
10008da8:	11c01dc4 	addi	r7,r2,119
10008dac:	4209883a 	add	r4,r8,r8
10008db0:	003e6d06 	br	10008768 <__alt_data_end+0xf8008768>
10008db4:	00c40004 	movi	r3,4096
10008db8:	003f4606 	br	10008ad4 <__alt_data_end+0xf8008ad4>
10008dbc:	00800044 	movi	r2,1
10008dc0:	a0800115 	stw	r2,4(r20)
10008dc4:	003f7406 	br	10008b98 <__alt_data_end+0xf8008b98>
10008dc8:	1805d0ba 	srai	r2,r3,2
10008dcc:	01c00044 	movi	r7,1
10008dd0:	30c00117 	ldw	r3,4(r6)
10008dd4:	388e983a 	sll	r7,r7,r2
10008dd8:	2805883a 	mov	r2,r5
10008ddc:	38c6b03a 	or	r3,r7,r3
10008de0:	30c00115 	stw	r3,4(r6)
10008de4:	003f9b06 	br	10008c54 <__alt_data_end+0xf8008c54>
10008de8:	00c15504 	movi	r3,1364
10008dec:	18801a36 	bltu	r3,r2,10008e58 <_malloc_r+0x768>
10008df0:	8804d4ba 	srli	r2,r17,18
10008df4:	12001f44 	addi	r8,r2,125
10008df8:	11c01f04 	addi	r7,r2,124
10008dfc:	4209883a 	add	r4,r8,r8
10008e00:	003e5906 	br	10008768 <__alt_data_end+0xf8008768>
10008e04:	ad400404 	addi	r21,r21,16
10008e08:	003f1706 	br	10008a68 <__alt_data_end+0xf8008a68>
10008e0c:	00c01504 	movi	r3,84
10008e10:	18802336 	bltu	r3,r2,10008ea0 <_malloc_r+0x7b0>
10008e14:	3804d33a 	srli	r2,r7,12
10008e18:	11401bc4 	addi	r5,r2,111
10008e1c:	10c01b84 	addi	r3,r2,110
10008e20:	294b883a 	add	r5,r5,r5
10008e24:	003f7b06 	br	10008c14 <__alt_data_end+0xf8008c14>
10008e28:	9c000217 	ldw	r16,8(r19)
10008e2c:	00bfff04 	movi	r2,-4
10008e30:	80c00117 	ldw	r3,4(r16)
10008e34:	1886703a 	and	r3,r3,r2
10008e38:	003f5306 	br	10008b88 <__alt_data_end+0xf8008b88>
10008e3c:	3083ffcc 	andi	r2,r6,4095
10008e40:	103f181e 	bne	r2,zero,10008aa4 <__alt_data_end+0xf8008aa4>
10008e44:	99000217 	ldw	r4,8(r19)
10008e48:	b545883a 	add	r2,r22,r21
10008e4c:	10800054 	ori	r2,r2,1
10008e50:	20800115 	stw	r2,4(r4)
10008e54:	003f3e06 	br	10008b50 <__alt_data_end+0xf8008b50>
10008e58:	01003f84 	movi	r4,254
10008e5c:	02001fc4 	movi	r8,127
10008e60:	01c01f84 	movi	r7,126
10008e64:	003e4006 	br	10008768 <__alt_data_end+0xf8008768>
10008e68:	00840074 	movhi	r2,4097
10008e6c:	10987304 	addi	r2,r2,25036
10008e70:	15000015 	stw	r20,0(r2)
10008e74:	003f1106 	br	10008abc <__alt_data_end+0xf8008abc>
10008e78:	00800044 	movi	r2,1
10008e7c:	002b883a 	mov	r21,zero
10008e80:	003f1f06 	br	10008b00 <__alt_data_end+0xf8008b00>
10008e84:	81400204 	addi	r5,r16,8
10008e88:	9009883a 	mov	r4,r18
10008e8c:	0007af80 	call	10007af8 <_free_r>
10008e90:	008400b4 	movhi	r2,4098
10008e94:	10a00304 	addi	r2,r2,-32756
10008e98:	10c00017 	ldw	r3,0(r2)
10008e9c:	003f2c06 	br	10008b50 <__alt_data_end+0xf8008b50>
10008ea0:	00c05504 	movi	r3,340
10008ea4:	18800536 	bltu	r3,r2,10008ebc <_malloc_r+0x7cc>
10008ea8:	3804d3fa 	srli	r2,r7,15
10008eac:	11401e04 	addi	r5,r2,120
10008eb0:	10c01dc4 	addi	r3,r2,119
10008eb4:	294b883a 	add	r5,r5,r5
10008eb8:	003f5606 	br	10008c14 <__alt_data_end+0xf8008c14>
10008ebc:	00c15504 	movi	r3,1364
10008ec0:	18800536 	bltu	r3,r2,10008ed8 <_malloc_r+0x7e8>
10008ec4:	3804d4ba 	srli	r2,r7,18
10008ec8:	11401f44 	addi	r5,r2,125
10008ecc:	10c01f04 	addi	r3,r2,124
10008ed0:	294b883a 	add	r5,r5,r5
10008ed4:	003f4f06 	br	10008c14 <__alt_data_end+0xf8008c14>
10008ed8:	01403f84 	movi	r5,254
10008edc:	00c01f84 	movi	r3,126
10008ee0:	003f4c06 	br	10008c14 <__alt_data_end+0xf8008c14>
10008ee4:	98800117 	ldw	r2,4(r19)
10008ee8:	003fa006 	br	10008d6c <__alt_data_end+0xf8008d6c>
10008eec:	8808d0fa 	srli	r4,r17,3
10008ef0:	20800044 	addi	r2,r4,1
10008ef4:	1085883a 	add	r2,r2,r2
10008ef8:	003e9006 	br	1000893c <__alt_data_end+0xf800893c>

10008efc <memchr>:
10008efc:	208000cc 	andi	r2,r4,3
10008f00:	280f883a 	mov	r7,r5
10008f04:	10003426 	beq	r2,zero,10008fd8 <memchr+0xdc>
10008f08:	30bfffc4 	addi	r2,r6,-1
10008f0c:	30001a26 	beq	r6,zero,10008f78 <memchr+0x7c>
10008f10:	20c00003 	ldbu	r3,0(r4)
10008f14:	29803fcc 	andi	r6,r5,255
10008f18:	30c0051e 	bne	r6,r3,10008f30 <memchr+0x34>
10008f1c:	00001806 	br	10008f80 <memchr+0x84>
10008f20:	10001526 	beq	r2,zero,10008f78 <memchr+0x7c>
10008f24:	20c00003 	ldbu	r3,0(r4)
10008f28:	10bfffc4 	addi	r2,r2,-1
10008f2c:	30c01426 	beq	r6,r3,10008f80 <memchr+0x84>
10008f30:	21000044 	addi	r4,r4,1
10008f34:	20c000cc 	andi	r3,r4,3
10008f38:	183ff91e 	bne	r3,zero,10008f20 <__alt_data_end+0xf8008f20>
10008f3c:	020000c4 	movi	r8,3
10008f40:	40801136 	bltu	r8,r2,10008f88 <memchr+0x8c>
10008f44:	10000c26 	beq	r2,zero,10008f78 <memchr+0x7c>
10008f48:	20c00003 	ldbu	r3,0(r4)
10008f4c:	29403fcc 	andi	r5,r5,255
10008f50:	28c00b26 	beq	r5,r3,10008f80 <memchr+0x84>
10008f54:	20c00044 	addi	r3,r4,1
10008f58:	39803fcc 	andi	r6,r7,255
10008f5c:	2089883a 	add	r4,r4,r2
10008f60:	00000306 	br	10008f70 <memchr+0x74>
10008f64:	18c00044 	addi	r3,r3,1
10008f68:	197fffc3 	ldbu	r5,-1(r3)
10008f6c:	31400526 	beq	r6,r5,10008f84 <memchr+0x88>
10008f70:	1805883a 	mov	r2,r3
10008f74:	20fffb1e 	bne	r4,r3,10008f64 <__alt_data_end+0xf8008f64>
10008f78:	0005883a 	mov	r2,zero
10008f7c:	f800283a 	ret
10008f80:	2005883a 	mov	r2,r4
10008f84:	f800283a 	ret
10008f88:	28c03fcc 	andi	r3,r5,255
10008f8c:	1812923a 	slli	r9,r3,8
10008f90:	02ffbff4 	movhi	r11,65279
10008f94:	02a02074 	movhi	r10,32897
10008f98:	48d2b03a 	or	r9,r9,r3
10008f9c:	4806943a 	slli	r3,r9,16
10008fa0:	5affbfc4 	addi	r11,r11,-257
10008fa4:	52a02004 	addi	r10,r10,-32640
10008fa8:	48d2b03a 	or	r9,r9,r3
10008fac:	20c00017 	ldw	r3,0(r4)
10008fb0:	48c6f03a 	xor	r3,r9,r3
10008fb4:	1acd883a 	add	r6,r3,r11
10008fb8:	00c6303a 	nor	r3,zero,r3
10008fbc:	30c6703a 	and	r3,r6,r3
10008fc0:	1a86703a 	and	r3,r3,r10
10008fc4:	183fe01e 	bne	r3,zero,10008f48 <__alt_data_end+0xf8008f48>
10008fc8:	10bfff04 	addi	r2,r2,-4
10008fcc:	21000104 	addi	r4,r4,4
10008fd0:	40bff636 	bltu	r8,r2,10008fac <__alt_data_end+0xf8008fac>
10008fd4:	003fdb06 	br	10008f44 <__alt_data_end+0xf8008f44>
10008fd8:	3005883a 	mov	r2,r6
10008fdc:	003fd706 	br	10008f3c <__alt_data_end+0xf8008f3c>

10008fe0 <memcpy>:
10008fe0:	defffd04 	addi	sp,sp,-12
10008fe4:	dfc00215 	stw	ra,8(sp)
10008fe8:	dc400115 	stw	r17,4(sp)
10008fec:	dc000015 	stw	r16,0(sp)
10008ff0:	00c003c4 	movi	r3,15
10008ff4:	2005883a 	mov	r2,r4
10008ff8:	1980452e 	bgeu	r3,r6,10009110 <memcpy+0x130>
10008ffc:	2906b03a 	or	r3,r5,r4
10009000:	18c000cc 	andi	r3,r3,3
10009004:	1800441e 	bne	r3,zero,10009118 <memcpy+0x138>
10009008:	347ffc04 	addi	r17,r6,-16
1000900c:	8822d13a 	srli	r17,r17,4
10009010:	28c00104 	addi	r3,r5,4
10009014:	23400104 	addi	r13,r4,4
10009018:	8820913a 	slli	r16,r17,4
1000901c:	2b000204 	addi	r12,r5,8
10009020:	22c00204 	addi	r11,r4,8
10009024:	84000504 	addi	r16,r16,20
10009028:	2a800304 	addi	r10,r5,12
1000902c:	22400304 	addi	r9,r4,12
10009030:	2c21883a 	add	r16,r5,r16
10009034:	2811883a 	mov	r8,r5
10009038:	200f883a 	mov	r7,r4
1000903c:	41000017 	ldw	r4,0(r8)
10009040:	1fc00017 	ldw	ra,0(r3)
10009044:	63c00017 	ldw	r15,0(r12)
10009048:	39000015 	stw	r4,0(r7)
1000904c:	53800017 	ldw	r14,0(r10)
10009050:	6fc00015 	stw	ra,0(r13)
10009054:	5bc00015 	stw	r15,0(r11)
10009058:	4b800015 	stw	r14,0(r9)
1000905c:	18c00404 	addi	r3,r3,16
10009060:	39c00404 	addi	r7,r7,16
10009064:	42000404 	addi	r8,r8,16
10009068:	6b400404 	addi	r13,r13,16
1000906c:	63000404 	addi	r12,r12,16
10009070:	5ac00404 	addi	r11,r11,16
10009074:	52800404 	addi	r10,r10,16
10009078:	4a400404 	addi	r9,r9,16
1000907c:	1c3fef1e 	bne	r3,r16,1000903c <__alt_data_end+0xf800903c>
10009080:	89c00044 	addi	r7,r17,1
10009084:	380e913a 	slli	r7,r7,4
10009088:	310003cc 	andi	r4,r6,15
1000908c:	02c000c4 	movi	r11,3
10009090:	11c7883a 	add	r3,r2,r7
10009094:	29cb883a 	add	r5,r5,r7
10009098:	5900212e 	bgeu	r11,r4,10009120 <memcpy+0x140>
1000909c:	1813883a 	mov	r9,r3
100090a0:	2811883a 	mov	r8,r5
100090a4:	200f883a 	mov	r7,r4
100090a8:	42800017 	ldw	r10,0(r8)
100090ac:	4a400104 	addi	r9,r9,4
100090b0:	39ffff04 	addi	r7,r7,-4
100090b4:	4abfff15 	stw	r10,-4(r9)
100090b8:	42000104 	addi	r8,r8,4
100090bc:	59fffa36 	bltu	r11,r7,100090a8 <__alt_data_end+0xf80090a8>
100090c0:	213fff04 	addi	r4,r4,-4
100090c4:	2008d0ba 	srli	r4,r4,2
100090c8:	318000cc 	andi	r6,r6,3
100090cc:	21000044 	addi	r4,r4,1
100090d0:	2109883a 	add	r4,r4,r4
100090d4:	2109883a 	add	r4,r4,r4
100090d8:	1907883a 	add	r3,r3,r4
100090dc:	290b883a 	add	r5,r5,r4
100090e0:	30000626 	beq	r6,zero,100090fc <memcpy+0x11c>
100090e4:	198d883a 	add	r6,r3,r6
100090e8:	29c00003 	ldbu	r7,0(r5)
100090ec:	18c00044 	addi	r3,r3,1
100090f0:	29400044 	addi	r5,r5,1
100090f4:	19ffffc5 	stb	r7,-1(r3)
100090f8:	19bffb1e 	bne	r3,r6,100090e8 <__alt_data_end+0xf80090e8>
100090fc:	dfc00217 	ldw	ra,8(sp)
10009100:	dc400117 	ldw	r17,4(sp)
10009104:	dc000017 	ldw	r16,0(sp)
10009108:	dec00304 	addi	sp,sp,12
1000910c:	f800283a 	ret
10009110:	2007883a 	mov	r3,r4
10009114:	003ff206 	br	100090e0 <__alt_data_end+0xf80090e0>
10009118:	2007883a 	mov	r3,r4
1000911c:	003ff106 	br	100090e4 <__alt_data_end+0xf80090e4>
10009120:	200d883a 	mov	r6,r4
10009124:	003fee06 	br	100090e0 <__alt_data_end+0xf80090e0>

10009128 <memmove>:
10009128:	2005883a 	mov	r2,r4
1000912c:	29000b2e 	bgeu	r5,r4,1000915c <memmove+0x34>
10009130:	298f883a 	add	r7,r5,r6
10009134:	21c0092e 	bgeu	r4,r7,1000915c <memmove+0x34>
10009138:	2187883a 	add	r3,r4,r6
1000913c:	198bc83a 	sub	r5,r3,r6
10009140:	30004826 	beq	r6,zero,10009264 <memmove+0x13c>
10009144:	39ffffc4 	addi	r7,r7,-1
10009148:	39000003 	ldbu	r4,0(r7)
1000914c:	18ffffc4 	addi	r3,r3,-1
10009150:	19000005 	stb	r4,0(r3)
10009154:	28fffb1e 	bne	r5,r3,10009144 <__alt_data_end+0xf8009144>
10009158:	f800283a 	ret
1000915c:	00c003c4 	movi	r3,15
10009160:	1980412e 	bgeu	r3,r6,10009268 <memmove+0x140>
10009164:	2886b03a 	or	r3,r5,r2
10009168:	18c000cc 	andi	r3,r3,3
1000916c:	1800401e 	bne	r3,zero,10009270 <memmove+0x148>
10009170:	33fffc04 	addi	r15,r6,-16
10009174:	781ed13a 	srli	r15,r15,4
10009178:	28c00104 	addi	r3,r5,4
1000917c:	13400104 	addi	r13,r2,4
10009180:	781c913a 	slli	r14,r15,4
10009184:	2b000204 	addi	r12,r5,8
10009188:	12c00204 	addi	r11,r2,8
1000918c:	73800504 	addi	r14,r14,20
10009190:	2a800304 	addi	r10,r5,12
10009194:	12400304 	addi	r9,r2,12
10009198:	2b9d883a 	add	r14,r5,r14
1000919c:	2811883a 	mov	r8,r5
100091a0:	100f883a 	mov	r7,r2
100091a4:	41000017 	ldw	r4,0(r8)
100091a8:	39c00404 	addi	r7,r7,16
100091ac:	18c00404 	addi	r3,r3,16
100091b0:	393ffc15 	stw	r4,-16(r7)
100091b4:	193ffc17 	ldw	r4,-16(r3)
100091b8:	6b400404 	addi	r13,r13,16
100091bc:	5ac00404 	addi	r11,r11,16
100091c0:	693ffc15 	stw	r4,-16(r13)
100091c4:	61000017 	ldw	r4,0(r12)
100091c8:	4a400404 	addi	r9,r9,16
100091cc:	42000404 	addi	r8,r8,16
100091d0:	593ffc15 	stw	r4,-16(r11)
100091d4:	51000017 	ldw	r4,0(r10)
100091d8:	63000404 	addi	r12,r12,16
100091dc:	52800404 	addi	r10,r10,16
100091e0:	493ffc15 	stw	r4,-16(r9)
100091e4:	1bbfef1e 	bne	r3,r14,100091a4 <__alt_data_end+0xf80091a4>
100091e8:	79000044 	addi	r4,r15,1
100091ec:	2008913a 	slli	r4,r4,4
100091f0:	328003cc 	andi	r10,r6,15
100091f4:	02c000c4 	movi	r11,3
100091f8:	1107883a 	add	r3,r2,r4
100091fc:	290b883a 	add	r5,r5,r4
10009200:	5a801e2e 	bgeu	r11,r10,1000927c <memmove+0x154>
10009204:	1813883a 	mov	r9,r3
10009208:	2811883a 	mov	r8,r5
1000920c:	500f883a 	mov	r7,r10
10009210:	41000017 	ldw	r4,0(r8)
10009214:	4a400104 	addi	r9,r9,4
10009218:	39ffff04 	addi	r7,r7,-4
1000921c:	493fff15 	stw	r4,-4(r9)
10009220:	42000104 	addi	r8,r8,4
10009224:	59fffa36 	bltu	r11,r7,10009210 <__alt_data_end+0xf8009210>
10009228:	513fff04 	addi	r4,r10,-4
1000922c:	2008d0ba 	srli	r4,r4,2
10009230:	318000cc 	andi	r6,r6,3
10009234:	21000044 	addi	r4,r4,1
10009238:	2109883a 	add	r4,r4,r4
1000923c:	2109883a 	add	r4,r4,r4
10009240:	1907883a 	add	r3,r3,r4
10009244:	290b883a 	add	r5,r5,r4
10009248:	30000b26 	beq	r6,zero,10009278 <memmove+0x150>
1000924c:	198d883a 	add	r6,r3,r6
10009250:	29c00003 	ldbu	r7,0(r5)
10009254:	18c00044 	addi	r3,r3,1
10009258:	29400044 	addi	r5,r5,1
1000925c:	19ffffc5 	stb	r7,-1(r3)
10009260:	19bffb1e 	bne	r3,r6,10009250 <__alt_data_end+0xf8009250>
10009264:	f800283a 	ret
10009268:	1007883a 	mov	r3,r2
1000926c:	003ff606 	br	10009248 <__alt_data_end+0xf8009248>
10009270:	1007883a 	mov	r3,r2
10009274:	003ff506 	br	1000924c <__alt_data_end+0xf800924c>
10009278:	f800283a 	ret
1000927c:	500d883a 	mov	r6,r10
10009280:	003ff106 	br	10009248 <__alt_data_end+0xf8009248>

10009284 <memset>:
10009284:	20c000cc 	andi	r3,r4,3
10009288:	2005883a 	mov	r2,r4
1000928c:	18004426 	beq	r3,zero,100093a0 <memset+0x11c>
10009290:	31ffffc4 	addi	r7,r6,-1
10009294:	30004026 	beq	r6,zero,10009398 <memset+0x114>
10009298:	2813883a 	mov	r9,r5
1000929c:	200d883a 	mov	r6,r4
100092a0:	2007883a 	mov	r3,r4
100092a4:	00000406 	br	100092b8 <memset+0x34>
100092a8:	3a3fffc4 	addi	r8,r7,-1
100092ac:	31800044 	addi	r6,r6,1
100092b0:	38003926 	beq	r7,zero,10009398 <memset+0x114>
100092b4:	400f883a 	mov	r7,r8
100092b8:	18c00044 	addi	r3,r3,1
100092bc:	32400005 	stb	r9,0(r6)
100092c0:	1a0000cc 	andi	r8,r3,3
100092c4:	403ff81e 	bne	r8,zero,100092a8 <__alt_data_end+0xf80092a8>
100092c8:	010000c4 	movi	r4,3
100092cc:	21c02d2e 	bgeu	r4,r7,10009384 <memset+0x100>
100092d0:	29003fcc 	andi	r4,r5,255
100092d4:	200c923a 	slli	r6,r4,8
100092d8:	3108b03a 	or	r4,r6,r4
100092dc:	200c943a 	slli	r6,r4,16
100092e0:	218cb03a 	or	r6,r4,r6
100092e4:	010003c4 	movi	r4,15
100092e8:	21c0182e 	bgeu	r4,r7,1000934c <memset+0xc8>
100092ec:	3b3ffc04 	addi	r12,r7,-16
100092f0:	6018d13a 	srli	r12,r12,4
100092f4:	1a000104 	addi	r8,r3,4
100092f8:	1ac00204 	addi	r11,r3,8
100092fc:	6008913a 	slli	r4,r12,4
10009300:	1a800304 	addi	r10,r3,12
10009304:	1813883a 	mov	r9,r3
10009308:	21000504 	addi	r4,r4,20
1000930c:	1909883a 	add	r4,r3,r4
10009310:	49800015 	stw	r6,0(r9)
10009314:	41800015 	stw	r6,0(r8)
10009318:	59800015 	stw	r6,0(r11)
1000931c:	51800015 	stw	r6,0(r10)
10009320:	42000404 	addi	r8,r8,16
10009324:	4a400404 	addi	r9,r9,16
10009328:	5ac00404 	addi	r11,r11,16
1000932c:	52800404 	addi	r10,r10,16
10009330:	413ff71e 	bne	r8,r4,10009310 <__alt_data_end+0xf8009310>
10009334:	63000044 	addi	r12,r12,1
10009338:	6018913a 	slli	r12,r12,4
1000933c:	39c003cc 	andi	r7,r7,15
10009340:	010000c4 	movi	r4,3
10009344:	1b07883a 	add	r3,r3,r12
10009348:	21c00e2e 	bgeu	r4,r7,10009384 <memset+0x100>
1000934c:	1813883a 	mov	r9,r3
10009350:	3811883a 	mov	r8,r7
10009354:	010000c4 	movi	r4,3
10009358:	49800015 	stw	r6,0(r9)
1000935c:	423fff04 	addi	r8,r8,-4
10009360:	4a400104 	addi	r9,r9,4
10009364:	223ffc36 	bltu	r4,r8,10009358 <__alt_data_end+0xf8009358>
10009368:	393fff04 	addi	r4,r7,-4
1000936c:	2008d0ba 	srli	r4,r4,2
10009370:	39c000cc 	andi	r7,r7,3
10009374:	21000044 	addi	r4,r4,1
10009378:	2109883a 	add	r4,r4,r4
1000937c:	2109883a 	add	r4,r4,r4
10009380:	1907883a 	add	r3,r3,r4
10009384:	38000526 	beq	r7,zero,1000939c <memset+0x118>
10009388:	19cf883a 	add	r7,r3,r7
1000938c:	19400005 	stb	r5,0(r3)
10009390:	18c00044 	addi	r3,r3,1
10009394:	38fffd1e 	bne	r7,r3,1000938c <__alt_data_end+0xf800938c>
10009398:	f800283a 	ret
1000939c:	f800283a 	ret
100093a0:	2007883a 	mov	r3,r4
100093a4:	300f883a 	mov	r7,r6
100093a8:	003fc706 	br	100092c8 <__alt_data_end+0xf80092c8>

100093ac <_Balloc>:
100093ac:	20801317 	ldw	r2,76(r4)
100093b0:	defffc04 	addi	sp,sp,-16
100093b4:	dc400115 	stw	r17,4(sp)
100093b8:	dc000015 	stw	r16,0(sp)
100093bc:	dfc00315 	stw	ra,12(sp)
100093c0:	dc800215 	stw	r18,8(sp)
100093c4:	2023883a 	mov	r17,r4
100093c8:	2821883a 	mov	r16,r5
100093cc:	10000f26 	beq	r2,zero,1000940c <_Balloc+0x60>
100093d0:	8407883a 	add	r3,r16,r16
100093d4:	18c7883a 	add	r3,r3,r3
100093d8:	10c7883a 	add	r3,r2,r3
100093dc:	18800017 	ldw	r2,0(r3)
100093e0:	10001126 	beq	r2,zero,10009428 <_Balloc+0x7c>
100093e4:	11000017 	ldw	r4,0(r2)
100093e8:	19000015 	stw	r4,0(r3)
100093ec:	10000415 	stw	zero,16(r2)
100093f0:	10000315 	stw	zero,12(r2)
100093f4:	dfc00317 	ldw	ra,12(sp)
100093f8:	dc800217 	ldw	r18,8(sp)
100093fc:	dc400117 	ldw	r17,4(sp)
10009400:	dc000017 	ldw	r16,0(sp)
10009404:	dec00404 	addi	sp,sp,16
10009408:	f800283a 	ret
1000940c:	01800844 	movi	r6,33
10009410:	01400104 	movi	r5,4
10009414:	000d9c40 	call	1000d9c4 <_calloc_r>
10009418:	88801315 	stw	r2,76(r17)
1000941c:	103fec1e 	bne	r2,zero,100093d0 <__alt_data_end+0xf80093d0>
10009420:	0005883a 	mov	r2,zero
10009424:	003ff306 	br	100093f4 <__alt_data_end+0xf80093f4>
10009428:	01400044 	movi	r5,1
1000942c:	2c24983a 	sll	r18,r5,r16
10009430:	8809883a 	mov	r4,r17
10009434:	91800144 	addi	r6,r18,5
10009438:	318d883a 	add	r6,r6,r6
1000943c:	318d883a 	add	r6,r6,r6
10009440:	000d9c40 	call	1000d9c4 <_calloc_r>
10009444:	103ff626 	beq	r2,zero,10009420 <__alt_data_end+0xf8009420>
10009448:	14000115 	stw	r16,4(r2)
1000944c:	14800215 	stw	r18,8(r2)
10009450:	003fe606 	br	100093ec <__alt_data_end+0xf80093ec>

10009454 <_Bfree>:
10009454:	28000826 	beq	r5,zero,10009478 <_Bfree+0x24>
10009458:	28c00117 	ldw	r3,4(r5)
1000945c:	20801317 	ldw	r2,76(r4)
10009460:	18c7883a 	add	r3,r3,r3
10009464:	18c7883a 	add	r3,r3,r3
10009468:	10c5883a 	add	r2,r2,r3
1000946c:	10c00017 	ldw	r3,0(r2)
10009470:	28c00015 	stw	r3,0(r5)
10009474:	11400015 	stw	r5,0(r2)
10009478:	f800283a 	ret

1000947c <__multadd>:
1000947c:	defff704 	addi	sp,sp,-36
10009480:	dc800215 	stw	r18,8(sp)
10009484:	2c800417 	ldw	r18,16(r5)
10009488:	dd800615 	stw	r22,24(sp)
1000948c:	dd400515 	stw	r21,20(sp)
10009490:	dd000415 	stw	r20,16(sp)
10009494:	dcc00315 	stw	r19,12(sp)
10009498:	dc400115 	stw	r17,4(sp)
1000949c:	dc000015 	stw	r16,0(sp)
100094a0:	dfc00815 	stw	ra,32(sp)
100094a4:	ddc00715 	stw	r23,28(sp)
100094a8:	2827883a 	mov	r19,r5
100094ac:	2029883a 	mov	r20,r4
100094b0:	3023883a 	mov	r17,r6
100094b4:	3821883a 	mov	r16,r7
100094b8:	2d400504 	addi	r21,r5,20
100094bc:	002d883a 	mov	r22,zero
100094c0:	adc00017 	ldw	r23,0(r21)
100094c4:	880b883a 	mov	r5,r17
100094c8:	ad400104 	addi	r21,r21,4
100094cc:	b93fffcc 	andi	r4,r23,65535
100094d0:	0000fc80 	call	10000fc8 <__mulsi3>
100094d4:	b808d43a 	srli	r4,r23,16
100094d8:	880b883a 	mov	r5,r17
100094dc:	1421883a 	add	r16,r2,r16
100094e0:	0000fc80 	call	10000fc8 <__mulsi3>
100094e4:	800ed43a 	srli	r7,r16,16
100094e8:	80ffffcc 	andi	r3,r16,65535
100094ec:	b5800044 	addi	r22,r22,1
100094f0:	11c5883a 	add	r2,r2,r7
100094f4:	100e943a 	slli	r7,r2,16
100094f8:	1020d43a 	srli	r16,r2,16
100094fc:	38c7883a 	add	r3,r7,r3
10009500:	a8ffff15 	stw	r3,-4(r21)
10009504:	b4bfee16 	blt	r22,r18,100094c0 <__alt_data_end+0xf80094c0>
10009508:	80000926 	beq	r16,zero,10009530 <__multadd+0xb4>
1000950c:	98800217 	ldw	r2,8(r19)
10009510:	9080130e 	bge	r18,r2,10009560 <__multadd+0xe4>
10009514:	90800144 	addi	r2,r18,5
10009518:	1085883a 	add	r2,r2,r2
1000951c:	1085883a 	add	r2,r2,r2
10009520:	9885883a 	add	r2,r19,r2
10009524:	14000015 	stw	r16,0(r2)
10009528:	94800044 	addi	r18,r18,1
1000952c:	9c800415 	stw	r18,16(r19)
10009530:	9805883a 	mov	r2,r19
10009534:	dfc00817 	ldw	ra,32(sp)
10009538:	ddc00717 	ldw	r23,28(sp)
1000953c:	dd800617 	ldw	r22,24(sp)
10009540:	dd400517 	ldw	r21,20(sp)
10009544:	dd000417 	ldw	r20,16(sp)
10009548:	dcc00317 	ldw	r19,12(sp)
1000954c:	dc800217 	ldw	r18,8(sp)
10009550:	dc400117 	ldw	r17,4(sp)
10009554:	dc000017 	ldw	r16,0(sp)
10009558:	dec00904 	addi	sp,sp,36
1000955c:	f800283a 	ret
10009560:	99400117 	ldw	r5,4(r19)
10009564:	a009883a 	mov	r4,r20
10009568:	29400044 	addi	r5,r5,1
1000956c:	00093ac0 	call	100093ac <_Balloc>
10009570:	99800417 	ldw	r6,16(r19)
10009574:	99400304 	addi	r5,r19,12
10009578:	11000304 	addi	r4,r2,12
1000957c:	31800084 	addi	r6,r6,2
10009580:	318d883a 	add	r6,r6,r6
10009584:	318d883a 	add	r6,r6,r6
10009588:	1023883a 	mov	r17,r2
1000958c:	0008fe00 	call	10008fe0 <memcpy>
10009590:	98000a26 	beq	r19,zero,100095bc <__multadd+0x140>
10009594:	98c00117 	ldw	r3,4(r19)
10009598:	a0801317 	ldw	r2,76(r20)
1000959c:	18c7883a 	add	r3,r3,r3
100095a0:	18c7883a 	add	r3,r3,r3
100095a4:	10c5883a 	add	r2,r2,r3
100095a8:	10c00017 	ldw	r3,0(r2)
100095ac:	98c00015 	stw	r3,0(r19)
100095b0:	14c00015 	stw	r19,0(r2)
100095b4:	8827883a 	mov	r19,r17
100095b8:	003fd606 	br	10009514 <__alt_data_end+0xf8009514>
100095bc:	8827883a 	mov	r19,r17
100095c0:	003fd406 	br	10009514 <__alt_data_end+0xf8009514>

100095c4 <__s2b>:
100095c4:	defff904 	addi	sp,sp,-28
100095c8:	dc400115 	stw	r17,4(sp)
100095cc:	dc000015 	stw	r16,0(sp)
100095d0:	2023883a 	mov	r17,r4
100095d4:	2821883a 	mov	r16,r5
100095d8:	39000204 	addi	r4,r7,8
100095dc:	01400244 	movi	r5,9
100095e0:	dcc00315 	stw	r19,12(sp)
100095e4:	dc800215 	stw	r18,8(sp)
100095e8:	dfc00615 	stw	ra,24(sp)
100095ec:	dd400515 	stw	r21,20(sp)
100095f0:	dd000415 	stw	r20,16(sp)
100095f4:	3825883a 	mov	r18,r7
100095f8:	3027883a 	mov	r19,r6
100095fc:	0000e140 	call	10000e14 <__divsi3>
10009600:	00c00044 	movi	r3,1
10009604:	000b883a 	mov	r5,zero
10009608:	1880030e 	bge	r3,r2,10009618 <__s2b+0x54>
1000960c:	18c7883a 	add	r3,r3,r3
10009610:	29400044 	addi	r5,r5,1
10009614:	18bffd16 	blt	r3,r2,1000960c <__alt_data_end+0xf800960c>
10009618:	8809883a 	mov	r4,r17
1000961c:	00093ac0 	call	100093ac <_Balloc>
10009620:	d8c00717 	ldw	r3,28(sp)
10009624:	10c00515 	stw	r3,20(r2)
10009628:	00c00044 	movi	r3,1
1000962c:	10c00415 	stw	r3,16(r2)
10009630:	00c00244 	movi	r3,9
10009634:	1cc0210e 	bge	r3,r19,100096bc <__s2b+0xf8>
10009638:	80eb883a 	add	r21,r16,r3
1000963c:	a829883a 	mov	r20,r21
10009640:	84e1883a 	add	r16,r16,r19
10009644:	a1c00007 	ldb	r7,0(r20)
10009648:	01800284 	movi	r6,10
1000964c:	a5000044 	addi	r20,r20,1
10009650:	100b883a 	mov	r5,r2
10009654:	39fff404 	addi	r7,r7,-48
10009658:	8809883a 	mov	r4,r17
1000965c:	000947c0 	call	1000947c <__multadd>
10009660:	a43ff81e 	bne	r20,r16,10009644 <__alt_data_end+0xf8009644>
10009664:	ace1883a 	add	r16,r21,r19
10009668:	843ffe04 	addi	r16,r16,-8
1000966c:	9c800a0e 	bge	r19,r18,10009698 <__s2b+0xd4>
10009670:	94e5c83a 	sub	r18,r18,r19
10009674:	84a5883a 	add	r18,r16,r18
10009678:	81c00007 	ldb	r7,0(r16)
1000967c:	01800284 	movi	r6,10
10009680:	84000044 	addi	r16,r16,1
10009684:	100b883a 	mov	r5,r2
10009688:	39fff404 	addi	r7,r7,-48
1000968c:	8809883a 	mov	r4,r17
10009690:	000947c0 	call	1000947c <__multadd>
10009694:	84bff81e 	bne	r16,r18,10009678 <__alt_data_end+0xf8009678>
10009698:	dfc00617 	ldw	ra,24(sp)
1000969c:	dd400517 	ldw	r21,20(sp)
100096a0:	dd000417 	ldw	r20,16(sp)
100096a4:	dcc00317 	ldw	r19,12(sp)
100096a8:	dc800217 	ldw	r18,8(sp)
100096ac:	dc400117 	ldw	r17,4(sp)
100096b0:	dc000017 	ldw	r16,0(sp)
100096b4:	dec00704 	addi	sp,sp,28
100096b8:	f800283a 	ret
100096bc:	84000284 	addi	r16,r16,10
100096c0:	1827883a 	mov	r19,r3
100096c4:	003fe906 	br	1000966c <__alt_data_end+0xf800966c>

100096c8 <__hi0bits>:
100096c8:	20bfffec 	andhi	r2,r4,65535
100096cc:	1000141e 	bne	r2,zero,10009720 <__hi0bits+0x58>
100096d0:	2008943a 	slli	r4,r4,16
100096d4:	00800404 	movi	r2,16
100096d8:	20ffc02c 	andhi	r3,r4,65280
100096dc:	1800021e 	bne	r3,zero,100096e8 <__hi0bits+0x20>
100096e0:	2008923a 	slli	r4,r4,8
100096e4:	10800204 	addi	r2,r2,8
100096e8:	20fc002c 	andhi	r3,r4,61440
100096ec:	1800021e 	bne	r3,zero,100096f8 <__hi0bits+0x30>
100096f0:	2008913a 	slli	r4,r4,4
100096f4:	10800104 	addi	r2,r2,4
100096f8:	20f0002c 	andhi	r3,r4,49152
100096fc:	1800031e 	bne	r3,zero,1000970c <__hi0bits+0x44>
10009700:	2109883a 	add	r4,r4,r4
10009704:	10800084 	addi	r2,r2,2
10009708:	2109883a 	add	r4,r4,r4
1000970c:	20000316 	blt	r4,zero,1000971c <__hi0bits+0x54>
10009710:	2110002c 	andhi	r4,r4,16384
10009714:	2000041e 	bne	r4,zero,10009728 <__hi0bits+0x60>
10009718:	00800804 	movi	r2,32
1000971c:	f800283a 	ret
10009720:	0005883a 	mov	r2,zero
10009724:	003fec06 	br	100096d8 <__alt_data_end+0xf80096d8>
10009728:	10800044 	addi	r2,r2,1
1000972c:	f800283a 	ret

10009730 <__lo0bits>:
10009730:	20c00017 	ldw	r3,0(r4)
10009734:	188001cc 	andi	r2,r3,7
10009738:	10000826 	beq	r2,zero,1000975c <__lo0bits+0x2c>
1000973c:	1880004c 	andi	r2,r3,1
10009740:	1000211e 	bne	r2,zero,100097c8 <__lo0bits+0x98>
10009744:	1880008c 	andi	r2,r3,2
10009748:	1000211e 	bne	r2,zero,100097d0 <__lo0bits+0xa0>
1000974c:	1806d0ba 	srli	r3,r3,2
10009750:	00800084 	movi	r2,2
10009754:	20c00015 	stw	r3,0(r4)
10009758:	f800283a 	ret
1000975c:	18bfffcc 	andi	r2,r3,65535
10009760:	10001326 	beq	r2,zero,100097b0 <__lo0bits+0x80>
10009764:	0005883a 	mov	r2,zero
10009768:	19403fcc 	andi	r5,r3,255
1000976c:	2800021e 	bne	r5,zero,10009778 <__lo0bits+0x48>
10009770:	1806d23a 	srli	r3,r3,8
10009774:	10800204 	addi	r2,r2,8
10009778:	194003cc 	andi	r5,r3,15
1000977c:	2800021e 	bne	r5,zero,10009788 <__lo0bits+0x58>
10009780:	1806d13a 	srli	r3,r3,4
10009784:	10800104 	addi	r2,r2,4
10009788:	194000cc 	andi	r5,r3,3
1000978c:	2800021e 	bne	r5,zero,10009798 <__lo0bits+0x68>
10009790:	1806d0ba 	srli	r3,r3,2
10009794:	10800084 	addi	r2,r2,2
10009798:	1940004c 	andi	r5,r3,1
1000979c:	2800081e 	bne	r5,zero,100097c0 <__lo0bits+0x90>
100097a0:	1806d07a 	srli	r3,r3,1
100097a4:	1800051e 	bne	r3,zero,100097bc <__lo0bits+0x8c>
100097a8:	00800804 	movi	r2,32
100097ac:	f800283a 	ret
100097b0:	1806d43a 	srli	r3,r3,16
100097b4:	00800404 	movi	r2,16
100097b8:	003feb06 	br	10009768 <__alt_data_end+0xf8009768>
100097bc:	10800044 	addi	r2,r2,1
100097c0:	20c00015 	stw	r3,0(r4)
100097c4:	f800283a 	ret
100097c8:	0005883a 	mov	r2,zero
100097cc:	f800283a 	ret
100097d0:	1806d07a 	srli	r3,r3,1
100097d4:	00800044 	movi	r2,1
100097d8:	20c00015 	stw	r3,0(r4)
100097dc:	f800283a 	ret

100097e0 <__i2b>:
100097e0:	defffd04 	addi	sp,sp,-12
100097e4:	dc000015 	stw	r16,0(sp)
100097e8:	04000044 	movi	r16,1
100097ec:	dc400115 	stw	r17,4(sp)
100097f0:	2823883a 	mov	r17,r5
100097f4:	800b883a 	mov	r5,r16
100097f8:	dfc00215 	stw	ra,8(sp)
100097fc:	00093ac0 	call	100093ac <_Balloc>
10009800:	14400515 	stw	r17,20(r2)
10009804:	14000415 	stw	r16,16(r2)
10009808:	dfc00217 	ldw	ra,8(sp)
1000980c:	dc400117 	ldw	r17,4(sp)
10009810:	dc000017 	ldw	r16,0(sp)
10009814:	dec00304 	addi	sp,sp,12
10009818:	f800283a 	ret

1000981c <__multiply>:
1000981c:	deffef04 	addi	sp,sp,-68
10009820:	dc400815 	stw	r17,32(sp)
10009824:	dc000715 	stw	r16,28(sp)
10009828:	34400417 	ldw	r17,16(r6)
1000982c:	2c000417 	ldw	r16,16(r5)
10009830:	dd800d15 	stw	r22,52(sp)
10009834:	dc800915 	stw	r18,36(sp)
10009838:	dfc01015 	stw	ra,64(sp)
1000983c:	df000f15 	stw	fp,60(sp)
10009840:	ddc00e15 	stw	r23,56(sp)
10009844:	dd400c15 	stw	r21,48(sp)
10009848:	dd000b15 	stw	r20,44(sp)
1000984c:	dcc00a15 	stw	r19,40(sp)
10009850:	2825883a 	mov	r18,r5
10009854:	302d883a 	mov	r22,r6
10009858:	8440050e 	bge	r16,r17,10009870 <__multiply+0x54>
1000985c:	8007883a 	mov	r3,r16
10009860:	3025883a 	mov	r18,r6
10009864:	8821883a 	mov	r16,r17
10009868:	282d883a 	mov	r22,r5
1000986c:	1823883a 	mov	r17,r3
10009870:	90800217 	ldw	r2,8(r18)
10009874:	8447883a 	add	r3,r16,r17
10009878:	d8c00215 	stw	r3,8(sp)
1000987c:	91400117 	ldw	r5,4(r18)
10009880:	10c0010e 	bge	r2,r3,10009888 <__multiply+0x6c>
10009884:	29400044 	addi	r5,r5,1
10009888:	00093ac0 	call	100093ac <_Balloc>
1000988c:	d8c00217 	ldw	r3,8(sp)
10009890:	d8800615 	stw	r2,24(sp)
10009894:	18eb883a 	add	r21,r3,r3
10009898:	ad6b883a 	add	r21,r21,r21
1000989c:	10c00504 	addi	r3,r2,20
100098a0:	1d6b883a 	add	r21,r3,r21
100098a4:	d8c00115 	stw	r3,4(sp)
100098a8:	dd400315 	stw	r21,12(sp)
100098ac:	1805883a 	mov	r2,r3
100098b0:	1d40042e 	bgeu	r3,r21,100098c4 <__multiply+0xa8>
100098b4:	d8c00317 	ldw	r3,12(sp)
100098b8:	10000015 	stw	zero,0(r2)
100098bc:	10800104 	addi	r2,r2,4
100098c0:	10fffc36 	bltu	r2,r3,100098b4 <__alt_data_end+0xf80098b4>
100098c4:	8c63883a 	add	r17,r17,r17
100098c8:	b5800504 	addi	r22,r22,20
100098cc:	8c63883a 	add	r17,r17,r17
100098d0:	94800504 	addi	r18,r18,20
100098d4:	8421883a 	add	r16,r16,r16
100098d8:	b463883a 	add	r17,r22,r17
100098dc:	8421883a 	add	r16,r16,r16
100098e0:	dd800015 	stw	r22,0(sp)
100098e4:	dc800415 	stw	r18,16(sp)
100098e8:	dc400515 	stw	r17,20(sp)
100098ec:	9429883a 	add	r20,r18,r16
100098f0:	b4404f2e 	bgeu	r22,r17,10009a30 <__multiply+0x214>
100098f4:	d8c00017 	ldw	r3,0(sp)
100098f8:	1c800017 	ldw	r18,0(r3)
100098fc:	947fffcc 	andi	r17,r18,65535
10009900:	88001e26 	beq	r17,zero,1000997c <__multiply+0x160>
10009904:	dd800117 	ldw	r22,4(sp)
10009908:	dd400417 	ldw	r21,16(sp)
1000990c:	0027883a 	mov	r19,zero
10009910:	ac800017 	ldw	r18,0(r21)
10009914:	b4000017 	ldw	r16,0(r22)
10009918:	880b883a 	mov	r5,r17
1000991c:	913fffcc 	andi	r4,r18,65535
10009920:	0000fc80 	call	10000fc8 <__mulsi3>
10009924:	9008d43a 	srli	r4,r18,16
10009928:	84bfffcc 	andi	r18,r16,65535
1000992c:	1485883a 	add	r2,r2,r18
10009930:	14e5883a 	add	r18,r2,r19
10009934:	8020d43a 	srli	r16,r16,16
10009938:	9026d43a 	srli	r19,r18,16
1000993c:	880b883a 	mov	r5,r17
10009940:	0000fc80 	call	10000fc8 <__mulsi3>
10009944:	1405883a 	add	r2,r2,r16
10009948:	14e1883a 	add	r16,r2,r19
1000994c:	90ffffcc 	andi	r3,r18,65535
10009950:	8024943a 	slli	r18,r16,16
10009954:	ad400104 	addi	r21,r21,4
10009958:	b005883a 	mov	r2,r22
1000995c:	90c6b03a 	or	r3,r18,r3
10009960:	b0c00015 	stw	r3,0(r22)
10009964:	8026d43a 	srli	r19,r16,16
10009968:	b5800104 	addi	r22,r22,4
1000996c:	ad3fe836 	bltu	r21,r20,10009910 <__alt_data_end+0xf8009910>
10009970:	d8c00017 	ldw	r3,0(sp)
10009974:	14c00115 	stw	r19,4(r2)
10009978:	1c800017 	ldw	r18,0(r3)
1000997c:	9024d43a 	srli	r18,r18,16
10009980:	90002226 	beq	r18,zero,10009a0c <__multiply+0x1f0>
10009984:	d8c00117 	ldw	r3,4(sp)
10009988:	dd800417 	ldw	r22,16(sp)
1000998c:	002f883a 	mov	r23,zero
10009990:	1f000017 	ldw	fp,0(r3)
10009994:	1823883a 	mov	r17,r3
10009998:	182b883a 	mov	r21,r3
1000999c:	e021883a 	mov	r16,fp
100099a0:	00000106 	br	100099a8 <__multiply+0x18c>
100099a4:	982b883a 	mov	r21,r19
100099a8:	b100000b 	ldhu	r4,0(r22)
100099ac:	8020d43a 	srli	r16,r16,16
100099b0:	900b883a 	mov	r5,r18
100099b4:	0000fc80 	call	10000fc8 <__mulsi3>
100099b8:	1405883a 	add	r2,r2,r16
100099bc:	15ef883a 	add	r23,r2,r23
100099c0:	b804943a 	slli	r2,r23,16
100099c4:	e0ffffcc 	andi	r3,fp,65535
100099c8:	8c400104 	addi	r17,r17,4
100099cc:	10c6b03a 	or	r3,r2,r3
100099d0:	88ffff15 	stw	r3,-4(r17)
100099d4:	b5800104 	addi	r22,r22,4
100099d8:	b13fff17 	ldw	r4,-4(r22)
100099dc:	acc00104 	addi	r19,r21,4
100099e0:	900b883a 	mov	r5,r18
100099e4:	2008d43a 	srli	r4,r4,16
100099e8:	9c000017 	ldw	r16,0(r19)
100099ec:	0000fc80 	call	10000fc8 <__mulsi3>
100099f0:	b806d43a 	srli	r3,r23,16
100099f4:	813fffcc 	andi	r4,r16,65535
100099f8:	1105883a 	add	r2,r2,r4
100099fc:	10f9883a 	add	fp,r2,r3
10009a00:	e02ed43a 	srli	r23,fp,16
10009a04:	b53fe736 	bltu	r22,r20,100099a4 <__alt_data_end+0xf80099a4>
10009a08:	af000115 	stw	fp,4(r21)
10009a0c:	d8c00017 	ldw	r3,0(sp)
10009a10:	d9000517 	ldw	r4,20(sp)
10009a14:	18c00104 	addi	r3,r3,4
10009a18:	d8c00015 	stw	r3,0(sp)
10009a1c:	d8c00117 	ldw	r3,4(sp)
10009a20:	18c00104 	addi	r3,r3,4
10009a24:	d8c00115 	stw	r3,4(sp)
10009a28:	d8c00017 	ldw	r3,0(sp)
10009a2c:	193fb136 	bltu	r3,r4,100098f4 <__alt_data_end+0xf80098f4>
10009a30:	d8c00217 	ldw	r3,8(sp)
10009a34:	00c00c0e 	bge	zero,r3,10009a68 <__multiply+0x24c>
10009a38:	d8c00317 	ldw	r3,12(sp)
10009a3c:	18bfff17 	ldw	r2,-4(r3)
10009a40:	1d7fff04 	addi	r21,r3,-4
10009a44:	10000326 	beq	r2,zero,10009a54 <__multiply+0x238>
10009a48:	00000706 	br	10009a68 <__multiply+0x24c>
10009a4c:	a8800017 	ldw	r2,0(r21)
10009a50:	1000051e 	bne	r2,zero,10009a68 <__multiply+0x24c>
10009a54:	d8c00217 	ldw	r3,8(sp)
10009a58:	ad7fff04 	addi	r21,r21,-4
10009a5c:	18ffffc4 	addi	r3,r3,-1
10009a60:	d8c00215 	stw	r3,8(sp)
10009a64:	183ff91e 	bne	r3,zero,10009a4c <__alt_data_end+0xf8009a4c>
10009a68:	d8c00617 	ldw	r3,24(sp)
10009a6c:	d9000217 	ldw	r4,8(sp)
10009a70:	1805883a 	mov	r2,r3
10009a74:	19000415 	stw	r4,16(r3)
10009a78:	dfc01017 	ldw	ra,64(sp)
10009a7c:	df000f17 	ldw	fp,60(sp)
10009a80:	ddc00e17 	ldw	r23,56(sp)
10009a84:	dd800d17 	ldw	r22,52(sp)
10009a88:	dd400c17 	ldw	r21,48(sp)
10009a8c:	dd000b17 	ldw	r20,44(sp)
10009a90:	dcc00a17 	ldw	r19,40(sp)
10009a94:	dc800917 	ldw	r18,36(sp)
10009a98:	dc400817 	ldw	r17,32(sp)
10009a9c:	dc000717 	ldw	r16,28(sp)
10009aa0:	dec01104 	addi	sp,sp,68
10009aa4:	f800283a 	ret

10009aa8 <__pow5mult>:
10009aa8:	defffa04 	addi	sp,sp,-24
10009aac:	dcc00315 	stw	r19,12(sp)
10009ab0:	dc000015 	stw	r16,0(sp)
10009ab4:	dfc00515 	stw	ra,20(sp)
10009ab8:	dd000415 	stw	r20,16(sp)
10009abc:	dc800215 	stw	r18,8(sp)
10009ac0:	dc400115 	stw	r17,4(sp)
10009ac4:	308000cc 	andi	r2,r6,3
10009ac8:	3021883a 	mov	r16,r6
10009acc:	2027883a 	mov	r19,r4
10009ad0:	10002f1e 	bne	r2,zero,10009b90 <__pow5mult+0xe8>
10009ad4:	2825883a 	mov	r18,r5
10009ad8:	8021d0ba 	srai	r16,r16,2
10009adc:	80001a26 	beq	r16,zero,10009b48 <__pow5mult+0xa0>
10009ae0:	9c401217 	ldw	r17,72(r19)
10009ae4:	8800061e 	bne	r17,zero,10009b00 <__pow5mult+0x58>
10009ae8:	00003406 	br	10009bbc <__pow5mult+0x114>
10009aec:	8021d07a 	srai	r16,r16,1
10009af0:	80001526 	beq	r16,zero,10009b48 <__pow5mult+0xa0>
10009af4:	88800017 	ldw	r2,0(r17)
10009af8:	10001c26 	beq	r2,zero,10009b6c <__pow5mult+0xc4>
10009afc:	1023883a 	mov	r17,r2
10009b00:	8080004c 	andi	r2,r16,1
10009b04:	103ff926 	beq	r2,zero,10009aec <__alt_data_end+0xf8009aec>
10009b08:	880d883a 	mov	r6,r17
10009b0c:	900b883a 	mov	r5,r18
10009b10:	9809883a 	mov	r4,r19
10009b14:	000981c0 	call	1000981c <__multiply>
10009b18:	90001b26 	beq	r18,zero,10009b88 <__pow5mult+0xe0>
10009b1c:	91000117 	ldw	r4,4(r18)
10009b20:	98c01317 	ldw	r3,76(r19)
10009b24:	8021d07a 	srai	r16,r16,1
10009b28:	2109883a 	add	r4,r4,r4
10009b2c:	2109883a 	add	r4,r4,r4
10009b30:	1907883a 	add	r3,r3,r4
10009b34:	19000017 	ldw	r4,0(r3)
10009b38:	91000015 	stw	r4,0(r18)
10009b3c:	1c800015 	stw	r18,0(r3)
10009b40:	1025883a 	mov	r18,r2
10009b44:	803feb1e 	bne	r16,zero,10009af4 <__alt_data_end+0xf8009af4>
10009b48:	9005883a 	mov	r2,r18
10009b4c:	dfc00517 	ldw	ra,20(sp)
10009b50:	dd000417 	ldw	r20,16(sp)
10009b54:	dcc00317 	ldw	r19,12(sp)
10009b58:	dc800217 	ldw	r18,8(sp)
10009b5c:	dc400117 	ldw	r17,4(sp)
10009b60:	dc000017 	ldw	r16,0(sp)
10009b64:	dec00604 	addi	sp,sp,24
10009b68:	f800283a 	ret
10009b6c:	880d883a 	mov	r6,r17
10009b70:	880b883a 	mov	r5,r17
10009b74:	9809883a 	mov	r4,r19
10009b78:	000981c0 	call	1000981c <__multiply>
10009b7c:	88800015 	stw	r2,0(r17)
10009b80:	10000015 	stw	zero,0(r2)
10009b84:	003fdd06 	br	10009afc <__alt_data_end+0xf8009afc>
10009b88:	1025883a 	mov	r18,r2
10009b8c:	003fd706 	br	10009aec <__alt_data_end+0xf8009aec>
10009b90:	10bfffc4 	addi	r2,r2,-1
10009b94:	1085883a 	add	r2,r2,r2
10009b98:	00c40074 	movhi	r3,4097
10009b9c:	18d06504 	addi	r3,r3,16788
10009ba0:	1085883a 	add	r2,r2,r2
10009ba4:	1885883a 	add	r2,r3,r2
10009ba8:	11800017 	ldw	r6,0(r2)
10009bac:	000f883a 	mov	r7,zero
10009bb0:	000947c0 	call	1000947c <__multadd>
10009bb4:	1025883a 	mov	r18,r2
10009bb8:	003fc706 	br	10009ad8 <__alt_data_end+0xf8009ad8>
10009bbc:	05000044 	movi	r20,1
10009bc0:	a00b883a 	mov	r5,r20
10009bc4:	9809883a 	mov	r4,r19
10009bc8:	00093ac0 	call	100093ac <_Balloc>
10009bcc:	1023883a 	mov	r17,r2
10009bd0:	00809c44 	movi	r2,625
10009bd4:	88800515 	stw	r2,20(r17)
10009bd8:	8d000415 	stw	r20,16(r17)
10009bdc:	9c401215 	stw	r17,72(r19)
10009be0:	88000015 	stw	zero,0(r17)
10009be4:	003fc606 	br	10009b00 <__alt_data_end+0xf8009b00>

10009be8 <__lshift>:
10009be8:	defff904 	addi	sp,sp,-28
10009bec:	dd400515 	stw	r21,20(sp)
10009bf0:	dcc00315 	stw	r19,12(sp)
10009bf4:	302bd17a 	srai	r21,r6,5
10009bf8:	2cc00417 	ldw	r19,16(r5)
10009bfc:	28800217 	ldw	r2,8(r5)
10009c00:	dd000415 	stw	r20,16(sp)
10009c04:	ace7883a 	add	r19,r21,r19
10009c08:	dc800215 	stw	r18,8(sp)
10009c0c:	dc400115 	stw	r17,4(sp)
10009c10:	dc000015 	stw	r16,0(sp)
10009c14:	dfc00615 	stw	ra,24(sp)
10009c18:	9c000044 	addi	r16,r19,1
10009c1c:	2823883a 	mov	r17,r5
10009c20:	3029883a 	mov	r20,r6
10009c24:	2025883a 	mov	r18,r4
10009c28:	29400117 	ldw	r5,4(r5)
10009c2c:	1400030e 	bge	r2,r16,10009c3c <__lshift+0x54>
10009c30:	1085883a 	add	r2,r2,r2
10009c34:	29400044 	addi	r5,r5,1
10009c38:	143ffd16 	blt	r2,r16,10009c30 <__alt_data_end+0xf8009c30>
10009c3c:	9009883a 	mov	r4,r18
10009c40:	00093ac0 	call	100093ac <_Balloc>
10009c44:	10c00504 	addi	r3,r2,20
10009c48:	0540070e 	bge	zero,r21,10009c68 <__lshift+0x80>
10009c4c:	ad6b883a 	add	r21,r21,r21
10009c50:	ad6b883a 	add	r21,r21,r21
10009c54:	1809883a 	mov	r4,r3
10009c58:	1d47883a 	add	r3,r3,r21
10009c5c:	20000015 	stw	zero,0(r4)
10009c60:	21000104 	addi	r4,r4,4
10009c64:	193ffd1e 	bne	r3,r4,10009c5c <__alt_data_end+0xf8009c5c>
10009c68:	8a000417 	ldw	r8,16(r17)
10009c6c:	89000504 	addi	r4,r17,20
10009c70:	a18007cc 	andi	r6,r20,31
10009c74:	4211883a 	add	r8,r8,r8
10009c78:	4211883a 	add	r8,r8,r8
10009c7c:	2211883a 	add	r8,r4,r8
10009c80:	30002326 	beq	r6,zero,10009d10 <__lshift+0x128>
10009c84:	02400804 	movi	r9,32
10009c88:	4993c83a 	sub	r9,r9,r6
10009c8c:	000b883a 	mov	r5,zero
10009c90:	21c00017 	ldw	r7,0(r4)
10009c94:	1815883a 	mov	r10,r3
10009c98:	18c00104 	addi	r3,r3,4
10009c9c:	398e983a 	sll	r7,r7,r6
10009ca0:	21000104 	addi	r4,r4,4
10009ca4:	394ab03a 	or	r5,r7,r5
10009ca8:	197fff15 	stw	r5,-4(r3)
10009cac:	217fff17 	ldw	r5,-4(r4)
10009cb0:	2a4ad83a 	srl	r5,r5,r9
10009cb4:	223ff636 	bltu	r4,r8,10009c90 <__alt_data_end+0xf8009c90>
10009cb8:	51400115 	stw	r5,4(r10)
10009cbc:	28001a1e 	bne	r5,zero,10009d28 <__lshift+0x140>
10009cc0:	843fffc4 	addi	r16,r16,-1
10009cc4:	14000415 	stw	r16,16(r2)
10009cc8:	88000826 	beq	r17,zero,10009cec <__lshift+0x104>
10009ccc:	89000117 	ldw	r4,4(r17)
10009cd0:	90c01317 	ldw	r3,76(r18)
10009cd4:	2109883a 	add	r4,r4,r4
10009cd8:	2109883a 	add	r4,r4,r4
10009cdc:	1907883a 	add	r3,r3,r4
10009ce0:	19000017 	ldw	r4,0(r3)
10009ce4:	89000015 	stw	r4,0(r17)
10009ce8:	1c400015 	stw	r17,0(r3)
10009cec:	dfc00617 	ldw	ra,24(sp)
10009cf0:	dd400517 	ldw	r21,20(sp)
10009cf4:	dd000417 	ldw	r20,16(sp)
10009cf8:	dcc00317 	ldw	r19,12(sp)
10009cfc:	dc800217 	ldw	r18,8(sp)
10009d00:	dc400117 	ldw	r17,4(sp)
10009d04:	dc000017 	ldw	r16,0(sp)
10009d08:	dec00704 	addi	sp,sp,28
10009d0c:	f800283a 	ret
10009d10:	21400017 	ldw	r5,0(r4)
10009d14:	18c00104 	addi	r3,r3,4
10009d18:	21000104 	addi	r4,r4,4
10009d1c:	197fff15 	stw	r5,-4(r3)
10009d20:	223ffb36 	bltu	r4,r8,10009d10 <__alt_data_end+0xf8009d10>
10009d24:	003fe606 	br	10009cc0 <__alt_data_end+0xf8009cc0>
10009d28:	9c000084 	addi	r16,r19,2
10009d2c:	003fe406 	br	10009cc0 <__alt_data_end+0xf8009cc0>

10009d30 <__mcmp>:
10009d30:	20800417 	ldw	r2,16(r4)
10009d34:	28c00417 	ldw	r3,16(r5)
10009d38:	10c5c83a 	sub	r2,r2,r3
10009d3c:	1000111e 	bne	r2,zero,10009d84 <__mcmp+0x54>
10009d40:	18c7883a 	add	r3,r3,r3
10009d44:	18c7883a 	add	r3,r3,r3
10009d48:	21000504 	addi	r4,r4,20
10009d4c:	29400504 	addi	r5,r5,20
10009d50:	20c5883a 	add	r2,r4,r3
10009d54:	28cb883a 	add	r5,r5,r3
10009d58:	00000106 	br	10009d60 <__mcmp+0x30>
10009d5c:	20800a2e 	bgeu	r4,r2,10009d88 <__mcmp+0x58>
10009d60:	10bfff04 	addi	r2,r2,-4
10009d64:	297fff04 	addi	r5,r5,-4
10009d68:	11800017 	ldw	r6,0(r2)
10009d6c:	28c00017 	ldw	r3,0(r5)
10009d70:	30fffa26 	beq	r6,r3,10009d5c <__alt_data_end+0xf8009d5c>
10009d74:	30c00236 	bltu	r6,r3,10009d80 <__mcmp+0x50>
10009d78:	00800044 	movi	r2,1
10009d7c:	f800283a 	ret
10009d80:	00bfffc4 	movi	r2,-1
10009d84:	f800283a 	ret
10009d88:	0005883a 	mov	r2,zero
10009d8c:	f800283a 	ret

10009d90 <__mdiff>:
10009d90:	28c00417 	ldw	r3,16(r5)
10009d94:	30800417 	ldw	r2,16(r6)
10009d98:	defffa04 	addi	sp,sp,-24
10009d9c:	dcc00315 	stw	r19,12(sp)
10009da0:	dc800215 	stw	r18,8(sp)
10009da4:	dfc00515 	stw	ra,20(sp)
10009da8:	dd000415 	stw	r20,16(sp)
10009dac:	dc400115 	stw	r17,4(sp)
10009db0:	dc000015 	stw	r16,0(sp)
10009db4:	1887c83a 	sub	r3,r3,r2
10009db8:	2825883a 	mov	r18,r5
10009dbc:	3027883a 	mov	r19,r6
10009dc0:	1800141e 	bne	r3,zero,10009e14 <__mdiff+0x84>
10009dc4:	1085883a 	add	r2,r2,r2
10009dc8:	1085883a 	add	r2,r2,r2
10009dcc:	2a000504 	addi	r8,r5,20
10009dd0:	34000504 	addi	r16,r6,20
10009dd4:	4087883a 	add	r3,r8,r2
10009dd8:	8085883a 	add	r2,r16,r2
10009ddc:	00000106 	br	10009de4 <__mdiff+0x54>
10009de0:	40c0592e 	bgeu	r8,r3,10009f48 <__mdiff+0x1b8>
10009de4:	18ffff04 	addi	r3,r3,-4
10009de8:	10bfff04 	addi	r2,r2,-4
10009dec:	19c00017 	ldw	r7,0(r3)
10009df0:	11400017 	ldw	r5,0(r2)
10009df4:	397ffa26 	beq	r7,r5,10009de0 <__alt_data_end+0xf8009de0>
10009df8:	3940592e 	bgeu	r7,r5,10009f60 <__mdiff+0x1d0>
10009dfc:	9005883a 	mov	r2,r18
10009e00:	4023883a 	mov	r17,r8
10009e04:	9825883a 	mov	r18,r19
10009e08:	05000044 	movi	r20,1
10009e0c:	1027883a 	mov	r19,r2
10009e10:	00000406 	br	10009e24 <__mdiff+0x94>
10009e14:	18005616 	blt	r3,zero,10009f70 <__mdiff+0x1e0>
10009e18:	34400504 	addi	r17,r6,20
10009e1c:	2c000504 	addi	r16,r5,20
10009e20:	0029883a 	mov	r20,zero
10009e24:	91400117 	ldw	r5,4(r18)
10009e28:	00093ac0 	call	100093ac <_Balloc>
10009e2c:	92400417 	ldw	r9,16(r18)
10009e30:	9b000417 	ldw	r12,16(r19)
10009e34:	12c00504 	addi	r11,r2,20
10009e38:	4a51883a 	add	r8,r9,r9
10009e3c:	6319883a 	add	r12,r12,r12
10009e40:	4211883a 	add	r8,r8,r8
10009e44:	6319883a 	add	r12,r12,r12
10009e48:	15000315 	stw	r20,12(r2)
10009e4c:	8211883a 	add	r8,r16,r8
10009e50:	8b19883a 	add	r12,r17,r12
10009e54:	0007883a 	mov	r3,zero
10009e58:	81400017 	ldw	r5,0(r16)
10009e5c:	89c00017 	ldw	r7,0(r17)
10009e60:	59800104 	addi	r6,r11,4
10009e64:	293fffcc 	andi	r4,r5,65535
10009e68:	20c7883a 	add	r3,r4,r3
10009e6c:	393fffcc 	andi	r4,r7,65535
10009e70:	1909c83a 	sub	r4,r3,r4
10009e74:	280ad43a 	srli	r5,r5,16
10009e78:	380ed43a 	srli	r7,r7,16
10009e7c:	2007d43a 	srai	r3,r4,16
10009e80:	213fffcc 	andi	r4,r4,65535
10009e84:	29cbc83a 	sub	r5,r5,r7
10009e88:	28c7883a 	add	r3,r5,r3
10009e8c:	180a943a 	slli	r5,r3,16
10009e90:	8c400104 	addi	r17,r17,4
10009e94:	84000104 	addi	r16,r16,4
10009e98:	2908b03a 	or	r4,r5,r4
10009e9c:	59000015 	stw	r4,0(r11)
10009ea0:	1807d43a 	srai	r3,r3,16
10009ea4:	3015883a 	mov	r10,r6
10009ea8:	3017883a 	mov	r11,r6
10009eac:	8b3fea36 	bltu	r17,r12,10009e58 <__alt_data_end+0xf8009e58>
10009eb0:	8200162e 	bgeu	r16,r8,10009f0c <__mdiff+0x17c>
10009eb4:	8017883a 	mov	r11,r16
10009eb8:	59400017 	ldw	r5,0(r11)
10009ebc:	31800104 	addi	r6,r6,4
10009ec0:	5ac00104 	addi	r11,r11,4
10009ec4:	293fffcc 	andi	r4,r5,65535
10009ec8:	20c7883a 	add	r3,r4,r3
10009ecc:	280ed43a 	srli	r7,r5,16
10009ed0:	180bd43a 	srai	r5,r3,16
10009ed4:	193fffcc 	andi	r4,r3,65535
10009ed8:	3947883a 	add	r3,r7,r5
10009edc:	180a943a 	slli	r5,r3,16
10009ee0:	1807d43a 	srai	r3,r3,16
10009ee4:	2908b03a 	or	r4,r5,r4
10009ee8:	313fff15 	stw	r4,-4(r6)
10009eec:	5a3ff236 	bltu	r11,r8,10009eb8 <__alt_data_end+0xf8009eb8>
10009ef0:	0406303a 	nor	r3,zero,r16
10009ef4:	1a07883a 	add	r3,r3,r8
10009ef8:	1806d0ba 	srli	r3,r3,2
10009efc:	18c00044 	addi	r3,r3,1
10009f00:	18c7883a 	add	r3,r3,r3
10009f04:	18c7883a 	add	r3,r3,r3
10009f08:	50d5883a 	add	r10,r10,r3
10009f0c:	50ffff04 	addi	r3,r10,-4
10009f10:	2000041e 	bne	r4,zero,10009f24 <__mdiff+0x194>
10009f14:	18ffff04 	addi	r3,r3,-4
10009f18:	19000017 	ldw	r4,0(r3)
10009f1c:	4a7fffc4 	addi	r9,r9,-1
10009f20:	203ffc26 	beq	r4,zero,10009f14 <__alt_data_end+0xf8009f14>
10009f24:	12400415 	stw	r9,16(r2)
10009f28:	dfc00517 	ldw	ra,20(sp)
10009f2c:	dd000417 	ldw	r20,16(sp)
10009f30:	dcc00317 	ldw	r19,12(sp)
10009f34:	dc800217 	ldw	r18,8(sp)
10009f38:	dc400117 	ldw	r17,4(sp)
10009f3c:	dc000017 	ldw	r16,0(sp)
10009f40:	dec00604 	addi	sp,sp,24
10009f44:	f800283a 	ret
10009f48:	000b883a 	mov	r5,zero
10009f4c:	00093ac0 	call	100093ac <_Balloc>
10009f50:	00c00044 	movi	r3,1
10009f54:	10c00415 	stw	r3,16(r2)
10009f58:	10000515 	stw	zero,20(r2)
10009f5c:	003ff206 	br	10009f28 <__alt_data_end+0xf8009f28>
10009f60:	8023883a 	mov	r17,r16
10009f64:	0029883a 	mov	r20,zero
10009f68:	4021883a 	mov	r16,r8
10009f6c:	003fad06 	br	10009e24 <__alt_data_end+0xf8009e24>
10009f70:	9005883a 	mov	r2,r18
10009f74:	94400504 	addi	r17,r18,20
10009f78:	9c000504 	addi	r16,r19,20
10009f7c:	9825883a 	mov	r18,r19
10009f80:	05000044 	movi	r20,1
10009f84:	1027883a 	mov	r19,r2
10009f88:	003fa606 	br	10009e24 <__alt_data_end+0xf8009e24>

10009f8c <__ulp>:
10009f8c:	295ffc2c 	andhi	r5,r5,32752
10009f90:	00bf3034 	movhi	r2,64704
10009f94:	2887883a 	add	r3,r5,r2
10009f98:	00c0020e 	bge	zero,r3,10009fa4 <__ulp+0x18>
10009f9c:	0005883a 	mov	r2,zero
10009fa0:	f800283a 	ret
10009fa4:	00c7c83a 	sub	r3,zero,r3
10009fa8:	1807d53a 	srai	r3,r3,20
10009fac:	008004c4 	movi	r2,19
10009fb0:	10c00b0e 	bge	r2,r3,10009fe0 <__ulp+0x54>
10009fb4:	18bffb04 	addi	r2,r3,-20
10009fb8:	01000784 	movi	r4,30
10009fbc:	0007883a 	mov	r3,zero
10009fc0:	20800516 	blt	r4,r2,10009fd8 <__ulp+0x4c>
10009fc4:	010007c4 	movi	r4,31
10009fc8:	2089c83a 	sub	r4,r4,r2
10009fcc:	00800044 	movi	r2,1
10009fd0:	1104983a 	sll	r2,r2,r4
10009fd4:	f800283a 	ret
10009fd8:	00800044 	movi	r2,1
10009fdc:	f800283a 	ret
10009fe0:	01400234 	movhi	r5,8
10009fe4:	28c7d83a 	sra	r3,r5,r3
10009fe8:	0005883a 	mov	r2,zero
10009fec:	f800283a 	ret

10009ff0 <__b2d>:
10009ff0:	defffa04 	addi	sp,sp,-24
10009ff4:	dc000015 	stw	r16,0(sp)
10009ff8:	24000417 	ldw	r16,16(r4)
10009ffc:	dc400115 	stw	r17,4(sp)
1000a000:	24400504 	addi	r17,r4,20
1000a004:	8421883a 	add	r16,r16,r16
1000a008:	8421883a 	add	r16,r16,r16
1000a00c:	8c21883a 	add	r16,r17,r16
1000a010:	dc800215 	stw	r18,8(sp)
1000a014:	84bfff17 	ldw	r18,-4(r16)
1000a018:	dd000415 	stw	r20,16(sp)
1000a01c:	dcc00315 	stw	r19,12(sp)
1000a020:	9009883a 	mov	r4,r18
1000a024:	2829883a 	mov	r20,r5
1000a028:	dfc00515 	stw	ra,20(sp)
1000a02c:	00096c80 	call	100096c8 <__hi0bits>
1000a030:	00c00804 	movi	r3,32
1000a034:	1889c83a 	sub	r4,r3,r2
1000a038:	a1000015 	stw	r4,0(r20)
1000a03c:	01000284 	movi	r4,10
1000a040:	84ffff04 	addi	r19,r16,-4
1000a044:	20801216 	blt	r4,r2,1000a090 <__b2d+0xa0>
1000a048:	018002c4 	movi	r6,11
1000a04c:	308dc83a 	sub	r6,r6,r2
1000a050:	9186d83a 	srl	r3,r18,r6
1000a054:	18cffc34 	orhi	r3,r3,16368
1000a058:	8cc0212e 	bgeu	r17,r19,1000a0e0 <__b2d+0xf0>
1000a05c:	813ffe17 	ldw	r4,-8(r16)
1000a060:	218cd83a 	srl	r6,r4,r6
1000a064:	10800544 	addi	r2,r2,21
1000a068:	9084983a 	sll	r2,r18,r2
1000a06c:	1184b03a 	or	r2,r2,r6
1000a070:	dfc00517 	ldw	ra,20(sp)
1000a074:	dd000417 	ldw	r20,16(sp)
1000a078:	dcc00317 	ldw	r19,12(sp)
1000a07c:	dc800217 	ldw	r18,8(sp)
1000a080:	dc400117 	ldw	r17,4(sp)
1000a084:	dc000017 	ldw	r16,0(sp)
1000a088:	dec00604 	addi	sp,sp,24
1000a08c:	f800283a 	ret
1000a090:	8cc00f2e 	bgeu	r17,r19,1000a0d0 <__b2d+0xe0>
1000a094:	117ffd44 	addi	r5,r2,-11
1000a098:	80bffe17 	ldw	r2,-8(r16)
1000a09c:	28000e26 	beq	r5,zero,1000a0d8 <__b2d+0xe8>
1000a0a0:	1949c83a 	sub	r4,r3,r5
1000a0a4:	9164983a 	sll	r18,r18,r5
1000a0a8:	1106d83a 	srl	r3,r2,r4
1000a0ac:	81bffe04 	addi	r6,r16,-8
1000a0b0:	948ffc34 	orhi	r18,r18,16368
1000a0b4:	90c6b03a 	or	r3,r18,r3
1000a0b8:	89800e2e 	bgeu	r17,r6,1000a0f4 <__b2d+0x104>
1000a0bc:	81bffd17 	ldw	r6,-12(r16)
1000a0c0:	1144983a 	sll	r2,r2,r5
1000a0c4:	310ad83a 	srl	r5,r6,r4
1000a0c8:	2884b03a 	or	r2,r5,r2
1000a0cc:	003fe806 	br	1000a070 <__alt_data_end+0xf800a070>
1000a0d0:	10bffd44 	addi	r2,r2,-11
1000a0d4:	1000041e 	bne	r2,zero,1000a0e8 <__b2d+0xf8>
1000a0d8:	90cffc34 	orhi	r3,r18,16368
1000a0dc:	003fe406 	br	1000a070 <__alt_data_end+0xf800a070>
1000a0e0:	000d883a 	mov	r6,zero
1000a0e4:	003fdf06 	br	1000a064 <__alt_data_end+0xf800a064>
1000a0e8:	90a4983a 	sll	r18,r18,r2
1000a0ec:	0005883a 	mov	r2,zero
1000a0f0:	003ff906 	br	1000a0d8 <__alt_data_end+0xf800a0d8>
1000a0f4:	1144983a 	sll	r2,r2,r5
1000a0f8:	003fdd06 	br	1000a070 <__alt_data_end+0xf800a070>

1000a0fc <__d2b>:
1000a0fc:	defff804 	addi	sp,sp,-32
1000a100:	dc000215 	stw	r16,8(sp)
1000a104:	3021883a 	mov	r16,r6
1000a108:	dc400315 	stw	r17,12(sp)
1000a10c:	8022907a 	slli	r17,r16,1
1000a110:	dd000615 	stw	r20,24(sp)
1000a114:	2829883a 	mov	r20,r5
1000a118:	01400044 	movi	r5,1
1000a11c:	dcc00515 	stw	r19,20(sp)
1000a120:	dc800415 	stw	r18,16(sp)
1000a124:	dfc00715 	stw	ra,28(sp)
1000a128:	3825883a 	mov	r18,r7
1000a12c:	8822d57a 	srli	r17,r17,21
1000a130:	00093ac0 	call	100093ac <_Balloc>
1000a134:	1027883a 	mov	r19,r2
1000a138:	00800434 	movhi	r2,16
1000a13c:	10bfffc4 	addi	r2,r2,-1
1000a140:	808c703a 	and	r6,r16,r2
1000a144:	88000126 	beq	r17,zero,1000a14c <__d2b+0x50>
1000a148:	31800434 	orhi	r6,r6,16
1000a14c:	d9800015 	stw	r6,0(sp)
1000a150:	a0002426 	beq	r20,zero,1000a1e4 <__d2b+0xe8>
1000a154:	d9000104 	addi	r4,sp,4
1000a158:	dd000115 	stw	r20,4(sp)
1000a15c:	00097300 	call	10009730 <__lo0bits>
1000a160:	d8c00017 	ldw	r3,0(sp)
1000a164:	10002f1e 	bne	r2,zero,1000a224 <__d2b+0x128>
1000a168:	d9000117 	ldw	r4,4(sp)
1000a16c:	99000515 	stw	r4,20(r19)
1000a170:	1821003a 	cmpeq	r16,r3,zero
1000a174:	01000084 	movi	r4,2
1000a178:	2421c83a 	sub	r16,r4,r16
1000a17c:	98c00615 	stw	r3,24(r19)
1000a180:	9c000415 	stw	r16,16(r19)
1000a184:	88001f1e 	bne	r17,zero,1000a204 <__d2b+0x108>
1000a188:	10bef384 	addi	r2,r2,-1074
1000a18c:	90800015 	stw	r2,0(r18)
1000a190:	00900034 	movhi	r2,16384
1000a194:	10bfffc4 	addi	r2,r2,-1
1000a198:	8085883a 	add	r2,r16,r2
1000a19c:	1085883a 	add	r2,r2,r2
1000a1a0:	1085883a 	add	r2,r2,r2
1000a1a4:	9885883a 	add	r2,r19,r2
1000a1a8:	11000517 	ldw	r4,20(r2)
1000a1ac:	8020917a 	slli	r16,r16,5
1000a1b0:	00096c80 	call	100096c8 <__hi0bits>
1000a1b4:	d8c00817 	ldw	r3,32(sp)
1000a1b8:	8085c83a 	sub	r2,r16,r2
1000a1bc:	18800015 	stw	r2,0(r3)
1000a1c0:	9805883a 	mov	r2,r19
1000a1c4:	dfc00717 	ldw	ra,28(sp)
1000a1c8:	dd000617 	ldw	r20,24(sp)
1000a1cc:	dcc00517 	ldw	r19,20(sp)
1000a1d0:	dc800417 	ldw	r18,16(sp)
1000a1d4:	dc400317 	ldw	r17,12(sp)
1000a1d8:	dc000217 	ldw	r16,8(sp)
1000a1dc:	dec00804 	addi	sp,sp,32
1000a1e0:	f800283a 	ret
1000a1e4:	d809883a 	mov	r4,sp
1000a1e8:	00097300 	call	10009730 <__lo0bits>
1000a1ec:	d8c00017 	ldw	r3,0(sp)
1000a1f0:	04000044 	movi	r16,1
1000a1f4:	9c000415 	stw	r16,16(r19)
1000a1f8:	98c00515 	stw	r3,20(r19)
1000a1fc:	10800804 	addi	r2,r2,32
1000a200:	883fe126 	beq	r17,zero,1000a188 <__alt_data_end+0xf800a188>
1000a204:	00c00d44 	movi	r3,53
1000a208:	8c7ef344 	addi	r17,r17,-1075
1000a20c:	88a3883a 	add	r17,r17,r2
1000a210:	1885c83a 	sub	r2,r3,r2
1000a214:	d8c00817 	ldw	r3,32(sp)
1000a218:	94400015 	stw	r17,0(r18)
1000a21c:	18800015 	stw	r2,0(r3)
1000a220:	003fe706 	br	1000a1c0 <__alt_data_end+0xf800a1c0>
1000a224:	01000804 	movi	r4,32
1000a228:	2089c83a 	sub	r4,r4,r2
1000a22c:	1908983a 	sll	r4,r3,r4
1000a230:	d9400117 	ldw	r5,4(sp)
1000a234:	1886d83a 	srl	r3,r3,r2
1000a238:	2148b03a 	or	r4,r4,r5
1000a23c:	99000515 	stw	r4,20(r19)
1000a240:	d8c00015 	stw	r3,0(sp)
1000a244:	003fca06 	br	1000a170 <__alt_data_end+0xf800a170>

1000a248 <__ratio>:
1000a248:	defff904 	addi	sp,sp,-28
1000a24c:	dc400315 	stw	r17,12(sp)
1000a250:	2823883a 	mov	r17,r5
1000a254:	d9400104 	addi	r5,sp,4
1000a258:	dfc00615 	stw	ra,24(sp)
1000a25c:	dcc00515 	stw	r19,20(sp)
1000a260:	dc800415 	stw	r18,16(sp)
1000a264:	2027883a 	mov	r19,r4
1000a268:	dc000215 	stw	r16,8(sp)
1000a26c:	0009ff00 	call	10009ff0 <__b2d>
1000a270:	d80b883a 	mov	r5,sp
1000a274:	8809883a 	mov	r4,r17
1000a278:	1025883a 	mov	r18,r2
1000a27c:	1821883a 	mov	r16,r3
1000a280:	0009ff00 	call	10009ff0 <__b2d>
1000a284:	8a000417 	ldw	r8,16(r17)
1000a288:	99000417 	ldw	r4,16(r19)
1000a28c:	d9400117 	ldw	r5,4(sp)
1000a290:	2209c83a 	sub	r4,r4,r8
1000a294:	2010917a 	slli	r8,r4,5
1000a298:	d9000017 	ldw	r4,0(sp)
1000a29c:	2909c83a 	sub	r4,r5,r4
1000a2a0:	4109883a 	add	r4,r8,r4
1000a2a4:	01000e0e 	bge	zero,r4,1000a2e0 <__ratio+0x98>
1000a2a8:	2008953a 	slli	r4,r4,20
1000a2ac:	2421883a 	add	r16,r4,r16
1000a2b0:	100d883a 	mov	r6,r2
1000a2b4:	180f883a 	mov	r7,r3
1000a2b8:	9009883a 	mov	r4,r18
1000a2bc:	800b883a 	mov	r5,r16
1000a2c0:	000f7d40 	call	1000f7d4 <__divdf3>
1000a2c4:	dfc00617 	ldw	ra,24(sp)
1000a2c8:	dcc00517 	ldw	r19,20(sp)
1000a2cc:	dc800417 	ldw	r18,16(sp)
1000a2d0:	dc400317 	ldw	r17,12(sp)
1000a2d4:	dc000217 	ldw	r16,8(sp)
1000a2d8:	dec00704 	addi	sp,sp,28
1000a2dc:	f800283a 	ret
1000a2e0:	2008953a 	slli	r4,r4,20
1000a2e4:	1907c83a 	sub	r3,r3,r4
1000a2e8:	003ff106 	br	1000a2b0 <__alt_data_end+0xf800a2b0>

1000a2ec <_mprec_log10>:
1000a2ec:	defffe04 	addi	sp,sp,-8
1000a2f0:	dc000015 	stw	r16,0(sp)
1000a2f4:	dfc00115 	stw	ra,4(sp)
1000a2f8:	008005c4 	movi	r2,23
1000a2fc:	2021883a 	mov	r16,r4
1000a300:	11000d0e 	bge	r2,r4,1000a338 <_mprec_log10+0x4c>
1000a304:	0005883a 	mov	r2,zero
1000a308:	00cffc34 	movhi	r3,16368
1000a30c:	843fffc4 	addi	r16,r16,-1
1000a310:	000d883a 	mov	r6,zero
1000a314:	01d00934 	movhi	r7,16420
1000a318:	1009883a 	mov	r4,r2
1000a31c:	180b883a 	mov	r5,r3
1000a320:	00103fc0 	call	100103fc <__muldf3>
1000a324:	803ff91e 	bne	r16,zero,1000a30c <__alt_data_end+0xf800a30c>
1000a328:	dfc00117 	ldw	ra,4(sp)
1000a32c:	dc000017 	ldw	r16,0(sp)
1000a330:	dec00204 	addi	sp,sp,8
1000a334:	f800283a 	ret
1000a338:	202090fa 	slli	r16,r4,3
1000a33c:	00840074 	movhi	r2,4097
1000a340:	10907c04 	addi	r2,r2,16880
1000a344:	1421883a 	add	r16,r2,r16
1000a348:	80800017 	ldw	r2,0(r16)
1000a34c:	80c00117 	ldw	r3,4(r16)
1000a350:	dfc00117 	ldw	ra,4(sp)
1000a354:	dc000017 	ldw	r16,0(sp)
1000a358:	dec00204 	addi	sp,sp,8
1000a35c:	f800283a 	ret

1000a360 <__copybits>:
1000a360:	297fffc4 	addi	r5,r5,-1
1000a364:	280fd17a 	srai	r7,r5,5
1000a368:	30c00417 	ldw	r3,16(r6)
1000a36c:	30800504 	addi	r2,r6,20
1000a370:	39c00044 	addi	r7,r7,1
1000a374:	18c7883a 	add	r3,r3,r3
1000a378:	39cf883a 	add	r7,r7,r7
1000a37c:	18c7883a 	add	r3,r3,r3
1000a380:	39cf883a 	add	r7,r7,r7
1000a384:	10c7883a 	add	r3,r2,r3
1000a388:	21cf883a 	add	r7,r4,r7
1000a38c:	10c00d2e 	bgeu	r2,r3,1000a3c4 <__copybits+0x64>
1000a390:	200b883a 	mov	r5,r4
1000a394:	12000017 	ldw	r8,0(r2)
1000a398:	29400104 	addi	r5,r5,4
1000a39c:	10800104 	addi	r2,r2,4
1000a3a0:	2a3fff15 	stw	r8,-4(r5)
1000a3a4:	10fffb36 	bltu	r2,r3,1000a394 <__alt_data_end+0xf800a394>
1000a3a8:	1985c83a 	sub	r2,r3,r6
1000a3ac:	10bffac4 	addi	r2,r2,-21
1000a3b0:	1004d0ba 	srli	r2,r2,2
1000a3b4:	10800044 	addi	r2,r2,1
1000a3b8:	1085883a 	add	r2,r2,r2
1000a3bc:	1085883a 	add	r2,r2,r2
1000a3c0:	2089883a 	add	r4,r4,r2
1000a3c4:	21c0032e 	bgeu	r4,r7,1000a3d4 <__copybits+0x74>
1000a3c8:	20000015 	stw	zero,0(r4)
1000a3cc:	21000104 	addi	r4,r4,4
1000a3d0:	21fffd36 	bltu	r4,r7,1000a3c8 <__alt_data_end+0xf800a3c8>
1000a3d4:	f800283a 	ret

1000a3d8 <__any_on>:
1000a3d8:	20c00417 	ldw	r3,16(r4)
1000a3dc:	2805d17a 	srai	r2,r5,5
1000a3e0:	21000504 	addi	r4,r4,20
1000a3e4:	18800d0e 	bge	r3,r2,1000a41c <__any_on+0x44>
1000a3e8:	18c7883a 	add	r3,r3,r3
1000a3ec:	18c7883a 	add	r3,r3,r3
1000a3f0:	20c7883a 	add	r3,r4,r3
1000a3f4:	20c0192e 	bgeu	r4,r3,1000a45c <__any_on+0x84>
1000a3f8:	18bfff17 	ldw	r2,-4(r3)
1000a3fc:	18ffff04 	addi	r3,r3,-4
1000a400:	1000041e 	bne	r2,zero,1000a414 <__any_on+0x3c>
1000a404:	20c0142e 	bgeu	r4,r3,1000a458 <__any_on+0x80>
1000a408:	18ffff04 	addi	r3,r3,-4
1000a40c:	19400017 	ldw	r5,0(r3)
1000a410:	283ffc26 	beq	r5,zero,1000a404 <__alt_data_end+0xf800a404>
1000a414:	00800044 	movi	r2,1
1000a418:	f800283a 	ret
1000a41c:	10c00a0e 	bge	r2,r3,1000a448 <__any_on+0x70>
1000a420:	1085883a 	add	r2,r2,r2
1000a424:	1085883a 	add	r2,r2,r2
1000a428:	294007cc 	andi	r5,r5,31
1000a42c:	2087883a 	add	r3,r4,r2
1000a430:	283ff026 	beq	r5,zero,1000a3f4 <__alt_data_end+0xf800a3f4>
1000a434:	19800017 	ldw	r6,0(r3)
1000a438:	3144d83a 	srl	r2,r6,r5
1000a43c:	114a983a 	sll	r5,r2,r5
1000a440:	317ff41e 	bne	r6,r5,1000a414 <__alt_data_end+0xf800a414>
1000a444:	003feb06 	br	1000a3f4 <__alt_data_end+0xf800a3f4>
1000a448:	1085883a 	add	r2,r2,r2
1000a44c:	1085883a 	add	r2,r2,r2
1000a450:	2087883a 	add	r3,r4,r2
1000a454:	003fe706 	br	1000a3f4 <__alt_data_end+0xf800a3f4>
1000a458:	f800283a 	ret
1000a45c:	0005883a 	mov	r2,zero
1000a460:	f800283a 	ret

1000a464 <_realloc_r>:
1000a464:	defff604 	addi	sp,sp,-40
1000a468:	dc800215 	stw	r18,8(sp)
1000a46c:	dfc00915 	stw	ra,36(sp)
1000a470:	df000815 	stw	fp,32(sp)
1000a474:	ddc00715 	stw	r23,28(sp)
1000a478:	dd800615 	stw	r22,24(sp)
1000a47c:	dd400515 	stw	r21,20(sp)
1000a480:	dd000415 	stw	r20,16(sp)
1000a484:	dcc00315 	stw	r19,12(sp)
1000a488:	dc400115 	stw	r17,4(sp)
1000a48c:	dc000015 	stw	r16,0(sp)
1000a490:	3025883a 	mov	r18,r6
1000a494:	2800b726 	beq	r5,zero,1000a774 <_realloc_r+0x310>
1000a498:	282b883a 	mov	r21,r5
1000a49c:	2029883a 	mov	r20,r4
1000a4a0:	0011d680 	call	10011d68 <__malloc_lock>
1000a4a4:	a8bfff17 	ldw	r2,-4(r21)
1000a4a8:	043fff04 	movi	r16,-4
1000a4ac:	90c002c4 	addi	r3,r18,11
1000a4b0:	01000584 	movi	r4,22
1000a4b4:	acfffe04 	addi	r19,r21,-8
1000a4b8:	1420703a 	and	r16,r2,r16
1000a4bc:	20c0332e 	bgeu	r4,r3,1000a58c <_realloc_r+0x128>
1000a4c0:	047ffe04 	movi	r17,-8
1000a4c4:	1c62703a 	and	r17,r3,r17
1000a4c8:	8807883a 	mov	r3,r17
1000a4cc:	88005816 	blt	r17,zero,1000a630 <_realloc_r+0x1cc>
1000a4d0:	8c805736 	bltu	r17,r18,1000a630 <_realloc_r+0x1cc>
1000a4d4:	80c0300e 	bge	r16,r3,1000a598 <_realloc_r+0x134>
1000a4d8:	07040074 	movhi	fp,4097
1000a4dc:	e712ea04 	addi	fp,fp,19368
1000a4e0:	e1c00217 	ldw	r7,8(fp)
1000a4e4:	9c09883a 	add	r4,r19,r16
1000a4e8:	22000117 	ldw	r8,4(r4)
1000a4ec:	21c06326 	beq	r4,r7,1000a67c <_realloc_r+0x218>
1000a4f0:	017fff84 	movi	r5,-2
1000a4f4:	414a703a 	and	r5,r8,r5
1000a4f8:	214b883a 	add	r5,r4,r5
1000a4fc:	29800117 	ldw	r6,4(r5)
1000a500:	3180004c 	andi	r6,r6,1
1000a504:	30003f26 	beq	r6,zero,1000a604 <_realloc_r+0x1a0>
1000a508:	1080004c 	andi	r2,r2,1
1000a50c:	10008326 	beq	r2,zero,1000a71c <_realloc_r+0x2b8>
1000a510:	900b883a 	mov	r5,r18
1000a514:	a009883a 	mov	r4,r20
1000a518:	00086f00 	call	100086f0 <_malloc_r>
1000a51c:	1025883a 	mov	r18,r2
1000a520:	10011e26 	beq	r2,zero,1000a99c <_realloc_r+0x538>
1000a524:	a93fff17 	ldw	r4,-4(r21)
1000a528:	10fffe04 	addi	r3,r2,-8
1000a52c:	00bfff84 	movi	r2,-2
1000a530:	2084703a 	and	r2,r4,r2
1000a534:	9885883a 	add	r2,r19,r2
1000a538:	1880ee26 	beq	r3,r2,1000a8f4 <_realloc_r+0x490>
1000a53c:	81bfff04 	addi	r6,r16,-4
1000a540:	00800904 	movi	r2,36
1000a544:	1180b836 	bltu	r2,r6,1000a828 <_realloc_r+0x3c4>
1000a548:	00c004c4 	movi	r3,19
1000a54c:	19809636 	bltu	r3,r6,1000a7a8 <_realloc_r+0x344>
1000a550:	9005883a 	mov	r2,r18
1000a554:	a807883a 	mov	r3,r21
1000a558:	19000017 	ldw	r4,0(r3)
1000a55c:	11000015 	stw	r4,0(r2)
1000a560:	19000117 	ldw	r4,4(r3)
1000a564:	11000115 	stw	r4,4(r2)
1000a568:	18c00217 	ldw	r3,8(r3)
1000a56c:	10c00215 	stw	r3,8(r2)
1000a570:	a80b883a 	mov	r5,r21
1000a574:	a009883a 	mov	r4,r20
1000a578:	0007af80 	call	10007af8 <_free_r>
1000a57c:	a009883a 	mov	r4,r20
1000a580:	0011d8c0 	call	10011d8c <__malloc_unlock>
1000a584:	9005883a 	mov	r2,r18
1000a588:	00001206 	br	1000a5d4 <_realloc_r+0x170>
1000a58c:	00c00404 	movi	r3,16
1000a590:	1823883a 	mov	r17,r3
1000a594:	003fce06 	br	1000a4d0 <__alt_data_end+0xf800a4d0>
1000a598:	a825883a 	mov	r18,r21
1000a59c:	8445c83a 	sub	r2,r16,r17
1000a5a0:	00c003c4 	movi	r3,15
1000a5a4:	18802636 	bltu	r3,r2,1000a640 <_realloc_r+0x1dc>
1000a5a8:	99800117 	ldw	r6,4(r19)
1000a5ac:	9c07883a 	add	r3,r19,r16
1000a5b0:	3180004c 	andi	r6,r6,1
1000a5b4:	3420b03a 	or	r16,r6,r16
1000a5b8:	9c000115 	stw	r16,4(r19)
1000a5bc:	18800117 	ldw	r2,4(r3)
1000a5c0:	10800054 	ori	r2,r2,1
1000a5c4:	18800115 	stw	r2,4(r3)
1000a5c8:	a009883a 	mov	r4,r20
1000a5cc:	0011d8c0 	call	10011d8c <__malloc_unlock>
1000a5d0:	9005883a 	mov	r2,r18
1000a5d4:	dfc00917 	ldw	ra,36(sp)
1000a5d8:	df000817 	ldw	fp,32(sp)
1000a5dc:	ddc00717 	ldw	r23,28(sp)
1000a5e0:	dd800617 	ldw	r22,24(sp)
1000a5e4:	dd400517 	ldw	r21,20(sp)
1000a5e8:	dd000417 	ldw	r20,16(sp)
1000a5ec:	dcc00317 	ldw	r19,12(sp)
1000a5f0:	dc800217 	ldw	r18,8(sp)
1000a5f4:	dc400117 	ldw	r17,4(sp)
1000a5f8:	dc000017 	ldw	r16,0(sp)
1000a5fc:	dec00a04 	addi	sp,sp,40
1000a600:	f800283a 	ret
1000a604:	017fff04 	movi	r5,-4
1000a608:	414a703a 	and	r5,r8,r5
1000a60c:	814d883a 	add	r6,r16,r5
1000a610:	30c01f16 	blt	r6,r3,1000a690 <_realloc_r+0x22c>
1000a614:	20800317 	ldw	r2,12(r4)
1000a618:	20c00217 	ldw	r3,8(r4)
1000a61c:	a825883a 	mov	r18,r21
1000a620:	3021883a 	mov	r16,r6
1000a624:	18800315 	stw	r2,12(r3)
1000a628:	10c00215 	stw	r3,8(r2)
1000a62c:	003fdb06 	br	1000a59c <__alt_data_end+0xf800a59c>
1000a630:	00800304 	movi	r2,12
1000a634:	a0800015 	stw	r2,0(r20)
1000a638:	0005883a 	mov	r2,zero
1000a63c:	003fe506 	br	1000a5d4 <__alt_data_end+0xf800a5d4>
1000a640:	98c00117 	ldw	r3,4(r19)
1000a644:	9c4b883a 	add	r5,r19,r17
1000a648:	11000054 	ori	r4,r2,1
1000a64c:	18c0004c 	andi	r3,r3,1
1000a650:	1c62b03a 	or	r17,r3,r17
1000a654:	9c400115 	stw	r17,4(r19)
1000a658:	29000115 	stw	r4,4(r5)
1000a65c:	2885883a 	add	r2,r5,r2
1000a660:	10c00117 	ldw	r3,4(r2)
1000a664:	29400204 	addi	r5,r5,8
1000a668:	a009883a 	mov	r4,r20
1000a66c:	18c00054 	ori	r3,r3,1
1000a670:	10c00115 	stw	r3,4(r2)
1000a674:	0007af80 	call	10007af8 <_free_r>
1000a678:	003fd306 	br	1000a5c8 <__alt_data_end+0xf800a5c8>
1000a67c:	017fff04 	movi	r5,-4
1000a680:	414a703a 	and	r5,r8,r5
1000a684:	89800404 	addi	r6,r17,16
1000a688:	8151883a 	add	r8,r16,r5
1000a68c:	4180590e 	bge	r8,r6,1000a7f4 <_realloc_r+0x390>
1000a690:	1080004c 	andi	r2,r2,1
1000a694:	103f9e1e 	bne	r2,zero,1000a510 <__alt_data_end+0xf800a510>
1000a698:	adbffe17 	ldw	r22,-8(r21)
1000a69c:	00bfff04 	movi	r2,-4
1000a6a0:	9dadc83a 	sub	r22,r19,r22
1000a6a4:	b1800117 	ldw	r6,4(r22)
1000a6a8:	3084703a 	and	r2,r6,r2
1000a6ac:	20002026 	beq	r4,zero,1000a730 <_realloc_r+0x2cc>
1000a6b0:	80af883a 	add	r23,r16,r2
1000a6b4:	b96f883a 	add	r23,r23,r5
1000a6b8:	21c05f26 	beq	r4,r7,1000a838 <_realloc_r+0x3d4>
1000a6bc:	b8c01c16 	blt	r23,r3,1000a730 <_realloc_r+0x2cc>
1000a6c0:	20800317 	ldw	r2,12(r4)
1000a6c4:	20c00217 	ldw	r3,8(r4)
1000a6c8:	81bfff04 	addi	r6,r16,-4
1000a6cc:	01000904 	movi	r4,36
1000a6d0:	18800315 	stw	r2,12(r3)
1000a6d4:	10c00215 	stw	r3,8(r2)
1000a6d8:	b0c00217 	ldw	r3,8(r22)
1000a6dc:	b0800317 	ldw	r2,12(r22)
1000a6e0:	b4800204 	addi	r18,r22,8
1000a6e4:	18800315 	stw	r2,12(r3)
1000a6e8:	10c00215 	stw	r3,8(r2)
1000a6ec:	21801b36 	bltu	r4,r6,1000a75c <_realloc_r+0x2f8>
1000a6f0:	008004c4 	movi	r2,19
1000a6f4:	1180352e 	bgeu	r2,r6,1000a7cc <_realloc_r+0x368>
1000a6f8:	a8800017 	ldw	r2,0(r21)
1000a6fc:	b0800215 	stw	r2,8(r22)
1000a700:	a8800117 	ldw	r2,4(r21)
1000a704:	b0800315 	stw	r2,12(r22)
1000a708:	008006c4 	movi	r2,27
1000a70c:	11807f36 	bltu	r2,r6,1000a90c <_realloc_r+0x4a8>
1000a710:	b0800404 	addi	r2,r22,16
1000a714:	ad400204 	addi	r21,r21,8
1000a718:	00002d06 	br	1000a7d0 <_realloc_r+0x36c>
1000a71c:	adbffe17 	ldw	r22,-8(r21)
1000a720:	00bfff04 	movi	r2,-4
1000a724:	9dadc83a 	sub	r22,r19,r22
1000a728:	b1000117 	ldw	r4,4(r22)
1000a72c:	2084703a 	and	r2,r4,r2
1000a730:	b03f7726 	beq	r22,zero,1000a510 <__alt_data_end+0xf800a510>
1000a734:	80af883a 	add	r23,r16,r2
1000a738:	b8ff7516 	blt	r23,r3,1000a510 <__alt_data_end+0xf800a510>
1000a73c:	b0800317 	ldw	r2,12(r22)
1000a740:	b0c00217 	ldw	r3,8(r22)
1000a744:	81bfff04 	addi	r6,r16,-4
1000a748:	01000904 	movi	r4,36
1000a74c:	18800315 	stw	r2,12(r3)
1000a750:	10c00215 	stw	r3,8(r2)
1000a754:	b4800204 	addi	r18,r22,8
1000a758:	21bfe52e 	bgeu	r4,r6,1000a6f0 <__alt_data_end+0xf800a6f0>
1000a75c:	a80b883a 	mov	r5,r21
1000a760:	9009883a 	mov	r4,r18
1000a764:	00091280 	call	10009128 <memmove>
1000a768:	b821883a 	mov	r16,r23
1000a76c:	b027883a 	mov	r19,r22
1000a770:	003f8a06 	br	1000a59c <__alt_data_end+0xf800a59c>
1000a774:	300b883a 	mov	r5,r6
1000a778:	dfc00917 	ldw	ra,36(sp)
1000a77c:	df000817 	ldw	fp,32(sp)
1000a780:	ddc00717 	ldw	r23,28(sp)
1000a784:	dd800617 	ldw	r22,24(sp)
1000a788:	dd400517 	ldw	r21,20(sp)
1000a78c:	dd000417 	ldw	r20,16(sp)
1000a790:	dcc00317 	ldw	r19,12(sp)
1000a794:	dc800217 	ldw	r18,8(sp)
1000a798:	dc400117 	ldw	r17,4(sp)
1000a79c:	dc000017 	ldw	r16,0(sp)
1000a7a0:	dec00a04 	addi	sp,sp,40
1000a7a4:	00086f01 	jmpi	100086f0 <_malloc_r>
1000a7a8:	a8c00017 	ldw	r3,0(r21)
1000a7ac:	90c00015 	stw	r3,0(r18)
1000a7b0:	a8c00117 	ldw	r3,4(r21)
1000a7b4:	90c00115 	stw	r3,4(r18)
1000a7b8:	00c006c4 	movi	r3,27
1000a7bc:	19804536 	bltu	r3,r6,1000a8d4 <_realloc_r+0x470>
1000a7c0:	90800204 	addi	r2,r18,8
1000a7c4:	a8c00204 	addi	r3,r21,8
1000a7c8:	003f6306 	br	1000a558 <__alt_data_end+0xf800a558>
1000a7cc:	9005883a 	mov	r2,r18
1000a7d0:	a8c00017 	ldw	r3,0(r21)
1000a7d4:	b821883a 	mov	r16,r23
1000a7d8:	b027883a 	mov	r19,r22
1000a7dc:	10c00015 	stw	r3,0(r2)
1000a7e0:	a8c00117 	ldw	r3,4(r21)
1000a7e4:	10c00115 	stw	r3,4(r2)
1000a7e8:	a8c00217 	ldw	r3,8(r21)
1000a7ec:	10c00215 	stw	r3,8(r2)
1000a7f0:	003f6a06 	br	1000a59c <__alt_data_end+0xf800a59c>
1000a7f4:	9c67883a 	add	r19,r19,r17
1000a7f8:	4445c83a 	sub	r2,r8,r17
1000a7fc:	e4c00215 	stw	r19,8(fp)
1000a800:	10800054 	ori	r2,r2,1
1000a804:	98800115 	stw	r2,4(r19)
1000a808:	a8bfff17 	ldw	r2,-4(r21)
1000a80c:	a009883a 	mov	r4,r20
1000a810:	1080004c 	andi	r2,r2,1
1000a814:	1462b03a 	or	r17,r2,r17
1000a818:	ac7fff15 	stw	r17,-4(r21)
1000a81c:	0011d8c0 	call	10011d8c <__malloc_unlock>
1000a820:	a805883a 	mov	r2,r21
1000a824:	003f6b06 	br	1000a5d4 <__alt_data_end+0xf800a5d4>
1000a828:	a80b883a 	mov	r5,r21
1000a82c:	9009883a 	mov	r4,r18
1000a830:	00091280 	call	10009128 <memmove>
1000a834:	003f4e06 	br	1000a570 <__alt_data_end+0xf800a570>
1000a838:	89000404 	addi	r4,r17,16
1000a83c:	b93fbc16 	blt	r23,r4,1000a730 <__alt_data_end+0xf800a730>
1000a840:	b0800317 	ldw	r2,12(r22)
1000a844:	b0c00217 	ldw	r3,8(r22)
1000a848:	81bfff04 	addi	r6,r16,-4
1000a84c:	01000904 	movi	r4,36
1000a850:	18800315 	stw	r2,12(r3)
1000a854:	10c00215 	stw	r3,8(r2)
1000a858:	b4800204 	addi	r18,r22,8
1000a85c:	21804336 	bltu	r4,r6,1000a96c <_realloc_r+0x508>
1000a860:	008004c4 	movi	r2,19
1000a864:	11803f2e 	bgeu	r2,r6,1000a964 <_realloc_r+0x500>
1000a868:	a8800017 	ldw	r2,0(r21)
1000a86c:	b0800215 	stw	r2,8(r22)
1000a870:	a8800117 	ldw	r2,4(r21)
1000a874:	b0800315 	stw	r2,12(r22)
1000a878:	008006c4 	movi	r2,27
1000a87c:	11803f36 	bltu	r2,r6,1000a97c <_realloc_r+0x518>
1000a880:	b0800404 	addi	r2,r22,16
1000a884:	ad400204 	addi	r21,r21,8
1000a888:	a8c00017 	ldw	r3,0(r21)
1000a88c:	10c00015 	stw	r3,0(r2)
1000a890:	a8c00117 	ldw	r3,4(r21)
1000a894:	10c00115 	stw	r3,4(r2)
1000a898:	a8c00217 	ldw	r3,8(r21)
1000a89c:	10c00215 	stw	r3,8(r2)
1000a8a0:	b447883a 	add	r3,r22,r17
1000a8a4:	bc45c83a 	sub	r2,r23,r17
1000a8a8:	e0c00215 	stw	r3,8(fp)
1000a8ac:	10800054 	ori	r2,r2,1
1000a8b0:	18800115 	stw	r2,4(r3)
1000a8b4:	b0800117 	ldw	r2,4(r22)
1000a8b8:	a009883a 	mov	r4,r20
1000a8bc:	1080004c 	andi	r2,r2,1
1000a8c0:	1462b03a 	or	r17,r2,r17
1000a8c4:	b4400115 	stw	r17,4(r22)
1000a8c8:	0011d8c0 	call	10011d8c <__malloc_unlock>
1000a8cc:	9005883a 	mov	r2,r18
1000a8d0:	003f4006 	br	1000a5d4 <__alt_data_end+0xf800a5d4>
1000a8d4:	a8c00217 	ldw	r3,8(r21)
1000a8d8:	90c00215 	stw	r3,8(r18)
1000a8dc:	a8c00317 	ldw	r3,12(r21)
1000a8e0:	90c00315 	stw	r3,12(r18)
1000a8e4:	30801126 	beq	r6,r2,1000a92c <_realloc_r+0x4c8>
1000a8e8:	90800404 	addi	r2,r18,16
1000a8ec:	a8c00404 	addi	r3,r21,16
1000a8f0:	003f1906 	br	1000a558 <__alt_data_end+0xf800a558>
1000a8f4:	90ffff17 	ldw	r3,-4(r18)
1000a8f8:	00bfff04 	movi	r2,-4
1000a8fc:	a825883a 	mov	r18,r21
1000a900:	1884703a 	and	r2,r3,r2
1000a904:	80a1883a 	add	r16,r16,r2
1000a908:	003f2406 	br	1000a59c <__alt_data_end+0xf800a59c>
1000a90c:	a8800217 	ldw	r2,8(r21)
1000a910:	b0800415 	stw	r2,16(r22)
1000a914:	a8800317 	ldw	r2,12(r21)
1000a918:	b0800515 	stw	r2,20(r22)
1000a91c:	31000a26 	beq	r6,r4,1000a948 <_realloc_r+0x4e4>
1000a920:	b0800604 	addi	r2,r22,24
1000a924:	ad400404 	addi	r21,r21,16
1000a928:	003fa906 	br	1000a7d0 <__alt_data_end+0xf800a7d0>
1000a92c:	a9000417 	ldw	r4,16(r21)
1000a930:	90800604 	addi	r2,r18,24
1000a934:	a8c00604 	addi	r3,r21,24
1000a938:	91000415 	stw	r4,16(r18)
1000a93c:	a9000517 	ldw	r4,20(r21)
1000a940:	91000515 	stw	r4,20(r18)
1000a944:	003f0406 	br	1000a558 <__alt_data_end+0xf800a558>
1000a948:	a8c00417 	ldw	r3,16(r21)
1000a94c:	ad400604 	addi	r21,r21,24
1000a950:	b0800804 	addi	r2,r22,32
1000a954:	b0c00615 	stw	r3,24(r22)
1000a958:	a8ffff17 	ldw	r3,-4(r21)
1000a95c:	b0c00715 	stw	r3,28(r22)
1000a960:	003f9b06 	br	1000a7d0 <__alt_data_end+0xf800a7d0>
1000a964:	9005883a 	mov	r2,r18
1000a968:	003fc706 	br	1000a888 <__alt_data_end+0xf800a888>
1000a96c:	a80b883a 	mov	r5,r21
1000a970:	9009883a 	mov	r4,r18
1000a974:	00091280 	call	10009128 <memmove>
1000a978:	003fc906 	br	1000a8a0 <__alt_data_end+0xf800a8a0>
1000a97c:	a8800217 	ldw	r2,8(r21)
1000a980:	b0800415 	stw	r2,16(r22)
1000a984:	a8800317 	ldw	r2,12(r21)
1000a988:	b0800515 	stw	r2,20(r22)
1000a98c:	31000726 	beq	r6,r4,1000a9ac <_realloc_r+0x548>
1000a990:	b0800604 	addi	r2,r22,24
1000a994:	ad400404 	addi	r21,r21,16
1000a998:	003fbb06 	br	1000a888 <__alt_data_end+0xf800a888>
1000a99c:	a009883a 	mov	r4,r20
1000a9a0:	0011d8c0 	call	10011d8c <__malloc_unlock>
1000a9a4:	0005883a 	mov	r2,zero
1000a9a8:	003f0a06 	br	1000a5d4 <__alt_data_end+0xf800a5d4>
1000a9ac:	a8c00417 	ldw	r3,16(r21)
1000a9b0:	ad400604 	addi	r21,r21,24
1000a9b4:	b0800804 	addi	r2,r22,32
1000a9b8:	b0c00615 	stw	r3,24(r22)
1000a9bc:	a8ffff17 	ldw	r3,-4(r21)
1000a9c0:	b0c00715 	stw	r3,28(r22)
1000a9c4:	003fb006 	br	1000a888 <__alt_data_end+0xf800a888>

1000a9c8 <__fpclassifyd>:
1000a9c8:	00a00034 	movhi	r2,32768
1000a9cc:	10bfffc4 	addi	r2,r2,-1
1000a9d0:	2884703a 	and	r2,r5,r2
1000a9d4:	10000726 	beq	r2,zero,1000a9f4 <__fpclassifyd+0x2c>
1000a9d8:	00fffc34 	movhi	r3,65520
1000a9dc:	019ff834 	movhi	r6,32736
1000a9e0:	28c7883a 	add	r3,r5,r3
1000a9e4:	31bfffc4 	addi	r6,r6,-1
1000a9e8:	30c00536 	bltu	r6,r3,1000aa00 <__fpclassifyd+0x38>
1000a9ec:	00800104 	movi	r2,4
1000a9f0:	f800283a 	ret
1000a9f4:	2000021e 	bne	r4,zero,1000aa00 <__fpclassifyd+0x38>
1000a9f8:	00800084 	movi	r2,2
1000a9fc:	f800283a 	ret
1000aa00:	00dffc34 	movhi	r3,32752
1000aa04:	019ff834 	movhi	r6,32736
1000aa08:	28cb883a 	add	r5,r5,r3
1000aa0c:	31bfffc4 	addi	r6,r6,-1
1000aa10:	317ff62e 	bgeu	r6,r5,1000a9ec <__alt_data_end+0xf800a9ec>
1000aa14:	01400434 	movhi	r5,16
1000aa18:	297fffc4 	addi	r5,r5,-1
1000aa1c:	28800236 	bltu	r5,r2,1000aa28 <__fpclassifyd+0x60>
1000aa20:	008000c4 	movi	r2,3
1000aa24:	f800283a 	ret
1000aa28:	10c00226 	beq	r2,r3,1000aa34 <__fpclassifyd+0x6c>
1000aa2c:	0005883a 	mov	r2,zero
1000aa30:	f800283a 	ret
1000aa34:	2005003a 	cmpeq	r2,r4,zero
1000aa38:	f800283a 	ret

1000aa3c <_sbrk_r>:
1000aa3c:	defffd04 	addi	sp,sp,-12
1000aa40:	dc000015 	stw	r16,0(sp)
1000aa44:	04040074 	movhi	r16,4097
1000aa48:	dc400115 	stw	r17,4(sp)
1000aa4c:	841ffb04 	addi	r16,r16,32748
1000aa50:	2023883a 	mov	r17,r4
1000aa54:	2809883a 	mov	r4,r5
1000aa58:	dfc00215 	stw	ra,8(sp)
1000aa5c:	80000015 	stw	zero,0(r16)
1000aa60:	0011f740 	call	10011f74 <sbrk>
1000aa64:	00ffffc4 	movi	r3,-1
1000aa68:	10c00526 	beq	r2,r3,1000aa80 <_sbrk_r+0x44>
1000aa6c:	dfc00217 	ldw	ra,8(sp)
1000aa70:	dc400117 	ldw	r17,4(sp)
1000aa74:	dc000017 	ldw	r16,0(sp)
1000aa78:	dec00304 	addi	sp,sp,12
1000aa7c:	f800283a 	ret
1000aa80:	80c00017 	ldw	r3,0(r16)
1000aa84:	183ff926 	beq	r3,zero,1000aa6c <__alt_data_end+0xf800aa6c>
1000aa88:	88c00015 	stw	r3,0(r17)
1000aa8c:	003ff706 	br	1000aa6c <__alt_data_end+0xf800aa6c>

1000aa90 <__sread>:
1000aa90:	defffe04 	addi	sp,sp,-8
1000aa94:	dc000015 	stw	r16,0(sp)
1000aa98:	2821883a 	mov	r16,r5
1000aa9c:	2940038f 	ldh	r5,14(r5)
1000aaa0:	dfc00115 	stw	ra,4(sp)
1000aaa4:	000debc0 	call	1000debc <_read_r>
1000aaa8:	10000716 	blt	r2,zero,1000aac8 <__sread+0x38>
1000aaac:	80c01417 	ldw	r3,80(r16)
1000aab0:	1887883a 	add	r3,r3,r2
1000aab4:	80c01415 	stw	r3,80(r16)
1000aab8:	dfc00117 	ldw	ra,4(sp)
1000aabc:	dc000017 	ldw	r16,0(sp)
1000aac0:	dec00204 	addi	sp,sp,8
1000aac4:	f800283a 	ret
1000aac8:	80c0030b 	ldhu	r3,12(r16)
1000aacc:	18fbffcc 	andi	r3,r3,61439
1000aad0:	80c0030d 	sth	r3,12(r16)
1000aad4:	dfc00117 	ldw	ra,4(sp)
1000aad8:	dc000017 	ldw	r16,0(sp)
1000aadc:	dec00204 	addi	sp,sp,8
1000aae0:	f800283a 	ret

1000aae4 <__seofread>:
1000aae4:	0005883a 	mov	r2,zero
1000aae8:	f800283a 	ret

1000aaec <__swrite>:
1000aaec:	2880030b 	ldhu	r2,12(r5)
1000aaf0:	defffb04 	addi	sp,sp,-20
1000aaf4:	dcc00315 	stw	r19,12(sp)
1000aaf8:	dc800215 	stw	r18,8(sp)
1000aafc:	dc400115 	stw	r17,4(sp)
1000ab00:	dc000015 	stw	r16,0(sp)
1000ab04:	dfc00415 	stw	ra,16(sp)
1000ab08:	10c0400c 	andi	r3,r2,256
1000ab0c:	2821883a 	mov	r16,r5
1000ab10:	2023883a 	mov	r17,r4
1000ab14:	3025883a 	mov	r18,r6
1000ab18:	3827883a 	mov	r19,r7
1000ab1c:	18000526 	beq	r3,zero,1000ab34 <__swrite+0x48>
1000ab20:	2940038f 	ldh	r5,14(r5)
1000ab24:	01c00084 	movi	r7,2
1000ab28:	000d883a 	mov	r6,zero
1000ab2c:	000de5c0 	call	1000de5c <_lseek_r>
1000ab30:	8080030b 	ldhu	r2,12(r16)
1000ab34:	8140038f 	ldh	r5,14(r16)
1000ab38:	10bbffcc 	andi	r2,r2,61439
1000ab3c:	980f883a 	mov	r7,r19
1000ab40:	900d883a 	mov	r6,r18
1000ab44:	8809883a 	mov	r4,r17
1000ab48:	8080030d 	sth	r2,12(r16)
1000ab4c:	dfc00417 	ldw	ra,16(sp)
1000ab50:	dcc00317 	ldw	r19,12(sp)
1000ab54:	dc800217 	ldw	r18,8(sp)
1000ab58:	dc400117 	ldw	r17,4(sp)
1000ab5c:	dc000017 	ldw	r16,0(sp)
1000ab60:	dec00504 	addi	sp,sp,20
1000ab64:	000d9101 	jmpi	1000d910 <_write_r>

1000ab68 <__sseek>:
1000ab68:	defffe04 	addi	sp,sp,-8
1000ab6c:	dc000015 	stw	r16,0(sp)
1000ab70:	2821883a 	mov	r16,r5
1000ab74:	2940038f 	ldh	r5,14(r5)
1000ab78:	dfc00115 	stw	ra,4(sp)
1000ab7c:	000de5c0 	call	1000de5c <_lseek_r>
1000ab80:	00ffffc4 	movi	r3,-1
1000ab84:	10c00826 	beq	r2,r3,1000aba8 <__sseek+0x40>
1000ab88:	80c0030b 	ldhu	r3,12(r16)
1000ab8c:	80801415 	stw	r2,80(r16)
1000ab90:	18c40014 	ori	r3,r3,4096
1000ab94:	80c0030d 	sth	r3,12(r16)
1000ab98:	dfc00117 	ldw	ra,4(sp)
1000ab9c:	dc000017 	ldw	r16,0(sp)
1000aba0:	dec00204 	addi	sp,sp,8
1000aba4:	f800283a 	ret
1000aba8:	80c0030b 	ldhu	r3,12(r16)
1000abac:	18fbffcc 	andi	r3,r3,61439
1000abb0:	80c0030d 	sth	r3,12(r16)
1000abb4:	dfc00117 	ldw	ra,4(sp)
1000abb8:	dc000017 	ldw	r16,0(sp)
1000abbc:	dec00204 	addi	sp,sp,8
1000abc0:	f800283a 	ret

1000abc4 <__sclose>:
1000abc4:	2940038f 	ldh	r5,14(r5)
1000abc8:	000d9701 	jmpi	1000d970 <_close_r>

1000abcc <strcmp>:
1000abcc:	2144b03a 	or	r2,r4,r5
1000abd0:	108000cc 	andi	r2,r2,3
1000abd4:	1000171e 	bne	r2,zero,1000ac34 <strcmp+0x68>
1000abd8:	20800017 	ldw	r2,0(r4)
1000abdc:	28c00017 	ldw	r3,0(r5)
1000abe0:	10c0141e 	bne	r2,r3,1000ac34 <strcmp+0x68>
1000abe4:	027fbff4 	movhi	r9,65279
1000abe8:	4a7fbfc4 	addi	r9,r9,-257
1000abec:	0086303a 	nor	r3,zero,r2
1000abf0:	02202074 	movhi	r8,32897
1000abf4:	1245883a 	add	r2,r2,r9
1000abf8:	42202004 	addi	r8,r8,-32640
1000abfc:	10c4703a 	and	r2,r2,r3
1000ac00:	1204703a 	and	r2,r2,r8
1000ac04:	10000226 	beq	r2,zero,1000ac10 <strcmp+0x44>
1000ac08:	00002306 	br	1000ac98 <strcmp+0xcc>
1000ac0c:	1000221e 	bne	r2,zero,1000ac98 <strcmp+0xcc>
1000ac10:	21000104 	addi	r4,r4,4
1000ac14:	20c00017 	ldw	r3,0(r4)
1000ac18:	29400104 	addi	r5,r5,4
1000ac1c:	29800017 	ldw	r6,0(r5)
1000ac20:	1a4f883a 	add	r7,r3,r9
1000ac24:	00c4303a 	nor	r2,zero,r3
1000ac28:	3884703a 	and	r2,r7,r2
1000ac2c:	1204703a 	and	r2,r2,r8
1000ac30:	19bff626 	beq	r3,r6,1000ac0c <__alt_data_end+0xf800ac0c>
1000ac34:	20800003 	ldbu	r2,0(r4)
1000ac38:	10c03fcc 	andi	r3,r2,255
1000ac3c:	18c0201c 	xori	r3,r3,128
1000ac40:	18ffe004 	addi	r3,r3,-128
1000ac44:	18000c26 	beq	r3,zero,1000ac78 <strcmp+0xac>
1000ac48:	29800007 	ldb	r6,0(r5)
1000ac4c:	19800326 	beq	r3,r6,1000ac5c <strcmp+0x90>
1000ac50:	00001306 	br	1000aca0 <strcmp+0xd4>
1000ac54:	29800007 	ldb	r6,0(r5)
1000ac58:	11800b1e 	bne	r2,r6,1000ac88 <strcmp+0xbc>
1000ac5c:	21000044 	addi	r4,r4,1
1000ac60:	20c00003 	ldbu	r3,0(r4)
1000ac64:	29400044 	addi	r5,r5,1
1000ac68:	18803fcc 	andi	r2,r3,255
1000ac6c:	1080201c 	xori	r2,r2,128
1000ac70:	10bfe004 	addi	r2,r2,-128
1000ac74:	103ff71e 	bne	r2,zero,1000ac54 <__alt_data_end+0xf800ac54>
1000ac78:	0007883a 	mov	r3,zero
1000ac7c:	28800003 	ldbu	r2,0(r5)
1000ac80:	1885c83a 	sub	r2,r3,r2
1000ac84:	f800283a 	ret
1000ac88:	28800003 	ldbu	r2,0(r5)
1000ac8c:	18c03fcc 	andi	r3,r3,255
1000ac90:	1885c83a 	sub	r2,r3,r2
1000ac94:	f800283a 	ret
1000ac98:	0005883a 	mov	r2,zero
1000ac9c:	f800283a 	ret
1000aca0:	10c03fcc 	andi	r3,r2,255
1000aca4:	003ff506 	br	1000ac7c <__alt_data_end+0xf800ac7c>

1000aca8 <__ssprint_r>:
1000aca8:	30800217 	ldw	r2,8(r6)
1000acac:	defff604 	addi	sp,sp,-40
1000acb0:	dc800215 	stw	r18,8(sp)
1000acb4:	dfc00915 	stw	ra,36(sp)
1000acb8:	df000815 	stw	fp,32(sp)
1000acbc:	ddc00715 	stw	r23,28(sp)
1000acc0:	dd800615 	stw	r22,24(sp)
1000acc4:	dd400515 	stw	r21,20(sp)
1000acc8:	dd000415 	stw	r20,16(sp)
1000accc:	dcc00315 	stw	r19,12(sp)
1000acd0:	dc400115 	stw	r17,4(sp)
1000acd4:	dc000015 	stw	r16,0(sp)
1000acd8:	3025883a 	mov	r18,r6
1000acdc:	10005826 	beq	r2,zero,1000ae40 <__ssprint_r+0x198>
1000ace0:	2027883a 	mov	r19,r4
1000ace4:	35c00017 	ldw	r23,0(r6)
1000ace8:	29000017 	ldw	r4,0(r5)
1000acec:	28800217 	ldw	r2,8(r5)
1000acf0:	2823883a 	mov	r17,r5
1000acf4:	0039883a 	mov	fp,zero
1000acf8:	0021883a 	mov	r16,zero
1000acfc:	80003926 	beq	r16,zero,1000ade4 <__ssprint_r+0x13c>
1000ad00:	102b883a 	mov	r21,r2
1000ad04:	102d883a 	mov	r22,r2
1000ad08:	80803a36 	bltu	r16,r2,1000adf4 <__ssprint_r+0x14c>
1000ad0c:	88c0030b 	ldhu	r3,12(r17)
1000ad10:	1881200c 	andi	r2,r3,1152
1000ad14:	10002626 	beq	r2,zero,1000adb0 <__ssprint_r+0x108>
1000ad18:	88800517 	ldw	r2,20(r17)
1000ad1c:	89400417 	ldw	r5,16(r17)
1000ad20:	81800044 	addi	r6,r16,1
1000ad24:	108f883a 	add	r7,r2,r2
1000ad28:	3885883a 	add	r2,r7,r2
1000ad2c:	100ed7fa 	srli	r7,r2,31
1000ad30:	216dc83a 	sub	r22,r4,r5
1000ad34:	3589883a 	add	r4,r6,r22
1000ad38:	3885883a 	add	r2,r7,r2
1000ad3c:	102bd07a 	srai	r21,r2,1
1000ad40:	a80d883a 	mov	r6,r21
1000ad44:	a900022e 	bgeu	r21,r4,1000ad50 <__ssprint_r+0xa8>
1000ad48:	202b883a 	mov	r21,r4
1000ad4c:	200d883a 	mov	r6,r4
1000ad50:	18c1000c 	andi	r3,r3,1024
1000ad54:	18002a26 	beq	r3,zero,1000ae00 <__ssprint_r+0x158>
1000ad58:	300b883a 	mov	r5,r6
1000ad5c:	9809883a 	mov	r4,r19
1000ad60:	00086f00 	call	100086f0 <_malloc_r>
1000ad64:	1029883a 	mov	r20,r2
1000ad68:	10002c26 	beq	r2,zero,1000ae1c <__ssprint_r+0x174>
1000ad6c:	89400417 	ldw	r5,16(r17)
1000ad70:	b00d883a 	mov	r6,r22
1000ad74:	1009883a 	mov	r4,r2
1000ad78:	0008fe00 	call	10008fe0 <memcpy>
1000ad7c:	8880030b 	ldhu	r2,12(r17)
1000ad80:	00fedfc4 	movi	r3,-1153
1000ad84:	10c4703a 	and	r2,r2,r3
1000ad88:	10802014 	ori	r2,r2,128
1000ad8c:	8880030d 	sth	r2,12(r17)
1000ad90:	a589883a 	add	r4,r20,r22
1000ad94:	adadc83a 	sub	r22,r21,r22
1000ad98:	8d400515 	stw	r21,20(r17)
1000ad9c:	8d800215 	stw	r22,8(r17)
1000ada0:	8d000415 	stw	r20,16(r17)
1000ada4:	89000015 	stw	r4,0(r17)
1000ada8:	802b883a 	mov	r21,r16
1000adac:	802d883a 	mov	r22,r16
1000adb0:	b00d883a 	mov	r6,r22
1000adb4:	e00b883a 	mov	r5,fp
1000adb8:	00091280 	call	10009128 <memmove>
1000adbc:	88800217 	ldw	r2,8(r17)
1000adc0:	89000017 	ldw	r4,0(r17)
1000adc4:	90c00217 	ldw	r3,8(r18)
1000adc8:	1545c83a 	sub	r2,r2,r21
1000adcc:	2589883a 	add	r4,r4,r22
1000add0:	88800215 	stw	r2,8(r17)
1000add4:	89000015 	stw	r4,0(r17)
1000add8:	1c21c83a 	sub	r16,r3,r16
1000addc:	94000215 	stw	r16,8(r18)
1000ade0:	80001726 	beq	r16,zero,1000ae40 <__ssprint_r+0x198>
1000ade4:	bf000017 	ldw	fp,0(r23)
1000ade8:	bc000117 	ldw	r16,4(r23)
1000adec:	bdc00204 	addi	r23,r23,8
1000adf0:	003fc206 	br	1000acfc <__alt_data_end+0xf800acfc>
1000adf4:	802b883a 	mov	r21,r16
1000adf8:	802d883a 	mov	r22,r16
1000adfc:	003fec06 	br	1000adb0 <__alt_data_end+0xf800adb0>
1000ae00:	9809883a 	mov	r4,r19
1000ae04:	000a4640 	call	1000a464 <_realloc_r>
1000ae08:	1029883a 	mov	r20,r2
1000ae0c:	103fe01e 	bne	r2,zero,1000ad90 <__alt_data_end+0xf800ad90>
1000ae10:	89400417 	ldw	r5,16(r17)
1000ae14:	9809883a 	mov	r4,r19
1000ae18:	0007af80 	call	10007af8 <_free_r>
1000ae1c:	88c0030b 	ldhu	r3,12(r17)
1000ae20:	00800304 	movi	r2,12
1000ae24:	98800015 	stw	r2,0(r19)
1000ae28:	18c01014 	ori	r3,r3,64
1000ae2c:	88c0030d 	sth	r3,12(r17)
1000ae30:	00bfffc4 	movi	r2,-1
1000ae34:	90000215 	stw	zero,8(r18)
1000ae38:	90000115 	stw	zero,4(r18)
1000ae3c:	00000206 	br	1000ae48 <__ssprint_r+0x1a0>
1000ae40:	90000115 	stw	zero,4(r18)
1000ae44:	0005883a 	mov	r2,zero
1000ae48:	dfc00917 	ldw	ra,36(sp)
1000ae4c:	df000817 	ldw	fp,32(sp)
1000ae50:	ddc00717 	ldw	r23,28(sp)
1000ae54:	dd800617 	ldw	r22,24(sp)
1000ae58:	dd400517 	ldw	r21,20(sp)
1000ae5c:	dd000417 	ldw	r20,16(sp)
1000ae60:	dcc00317 	ldw	r19,12(sp)
1000ae64:	dc800217 	ldw	r18,8(sp)
1000ae68:	dc400117 	ldw	r17,4(sp)
1000ae6c:	dc000017 	ldw	r16,0(sp)
1000ae70:	dec00a04 	addi	sp,sp,40
1000ae74:	f800283a 	ret

1000ae78 <___svfiprintf_internal_r>:
1000ae78:	2880030b 	ldhu	r2,12(r5)
1000ae7c:	deffc804 	addi	sp,sp,-224
1000ae80:	dcc03115 	stw	r19,196(sp)
1000ae84:	dfc03715 	stw	ra,220(sp)
1000ae88:	df003615 	stw	fp,216(sp)
1000ae8c:	ddc03515 	stw	r23,212(sp)
1000ae90:	dd803415 	stw	r22,208(sp)
1000ae94:	dd403315 	stw	r21,204(sp)
1000ae98:	dd003215 	stw	r20,200(sp)
1000ae9c:	dc803015 	stw	r18,192(sp)
1000aea0:	dc402f15 	stw	r17,188(sp)
1000aea4:	dc002e15 	stw	r16,184(sp)
1000aea8:	d9402315 	stw	r5,140(sp)
1000aeac:	d9002715 	stw	r4,156(sp)
1000aeb0:	1080200c 	andi	r2,r2,128
1000aeb4:	d9c02415 	stw	r7,144(sp)
1000aeb8:	3027883a 	mov	r19,r6
1000aebc:	10000226 	beq	r2,zero,1000aec8 <___svfiprintf_internal_r+0x50>
1000aec0:	28800417 	ldw	r2,16(r5)
1000aec4:	10046d26 	beq	r2,zero,1000c07c <___svfiprintf_internal_r+0x1204>
1000aec8:	d8801a04 	addi	r2,sp,104
1000aecc:	d8c019c4 	addi	r3,sp,103
1000aed0:	05840074 	movhi	r22,4097
1000aed4:	10c9c83a 	sub	r4,r2,r3
1000aed8:	b590ae04 	addi	r22,r22,17080
1000aedc:	d8801e15 	stw	r2,120(sp)
1000aee0:	d8c01f15 	stw	r3,124(sp)
1000aee4:	dec01a15 	stw	sp,104(sp)
1000aee8:	d8001c15 	stw	zero,112(sp)
1000aeec:	d8001b15 	stw	zero,108(sp)
1000aef0:	d811883a 	mov	r8,sp
1000aef4:	d8002915 	stw	zero,164(sp)
1000aef8:	d8002615 	stw	zero,152(sp)
1000aefc:	d9002c15 	stw	r4,176(sp)
1000af00:	98800007 	ldb	r2,0(r19)
1000af04:	10031426 	beq	r2,zero,1000bb58 <___svfiprintf_internal_r+0xce0>
1000af08:	00c00944 	movi	r3,37
1000af0c:	9825883a 	mov	r18,r19
1000af10:	10c0021e 	bne	r2,r3,1000af1c <___svfiprintf_internal_r+0xa4>
1000af14:	00001406 	br	1000af68 <___svfiprintf_internal_r+0xf0>
1000af18:	10c00326 	beq	r2,r3,1000af28 <___svfiprintf_internal_r+0xb0>
1000af1c:	94800044 	addi	r18,r18,1
1000af20:	90800007 	ldb	r2,0(r18)
1000af24:	103ffc1e 	bne	r2,zero,1000af18 <__alt_data_end+0xf800af18>
1000af28:	94e1c83a 	sub	r16,r18,r19
1000af2c:	80000e26 	beq	r16,zero,1000af68 <___svfiprintf_internal_r+0xf0>
1000af30:	d8c01c17 	ldw	r3,112(sp)
1000af34:	d8801b17 	ldw	r2,108(sp)
1000af38:	44c00015 	stw	r19,0(r8)
1000af3c:	1c07883a 	add	r3,r3,r16
1000af40:	10800044 	addi	r2,r2,1
1000af44:	d8c01c15 	stw	r3,112(sp)
1000af48:	44000115 	stw	r16,4(r8)
1000af4c:	d8801b15 	stw	r2,108(sp)
1000af50:	00c001c4 	movi	r3,7
1000af54:	18835c16 	blt	r3,r2,1000bcc8 <___svfiprintf_internal_r+0xe50>
1000af58:	42000204 	addi	r8,r8,8
1000af5c:	d9402617 	ldw	r5,152(sp)
1000af60:	2c0b883a 	add	r5,r5,r16
1000af64:	d9402615 	stw	r5,152(sp)
1000af68:	90800007 	ldb	r2,0(r18)
1000af6c:	1002fc26 	beq	r2,zero,1000bb60 <___svfiprintf_internal_r+0xce8>
1000af70:	0023883a 	mov	r17,zero
1000af74:	00bfffc4 	movi	r2,-1
1000af78:	0021883a 	mov	r16,zero
1000af7c:	94c00044 	addi	r19,r18,1
1000af80:	90c00047 	ldb	r3,1(r18)
1000af84:	dc402105 	stb	r17,132(sp)
1000af88:	d8001d85 	stb	zero,118(sp)
1000af8c:	002b883a 	mov	r21,zero
1000af90:	d8802015 	stw	r2,128(sp)
1000af94:	d8002515 	stw	zero,148(sp)
1000af98:	04801604 	movi	r18,88
1000af9c:	05000244 	movi	r20,9
1000afa0:	402f883a 	mov	r23,r8
1000afa4:	8023883a 	mov	r17,r16
1000afa8:	9cc00044 	addi	r19,r19,1
1000afac:	18bff804 	addi	r2,r3,-32
1000afb0:	9081fb36 	bltu	r18,r2,1000b7a0 <___svfiprintf_internal_r+0x928>
1000afb4:	100490ba 	slli	r2,r2,2
1000afb8:	01040074 	movhi	r4,4097
1000afbc:	212bf304 	addi	r4,r4,-20532
1000afc0:	1105883a 	add	r2,r2,r4
1000afc4:	10800017 	ldw	r2,0(r2)
1000afc8:	1000683a 	jmp	r2
1000afcc:	1000b1cc 	andi	zero,r2,711
1000afd0:	1000b7a0 	cmpeqi	zero,r2,734
1000afd4:	1000b7a0 	cmpeqi	zero,r2,734
1000afd8:	1000b1c0 	call	11000b1c <_gp+0xfe2964>
1000afdc:	1000b7a0 	cmpeqi	zero,r2,734
1000afe0:	1000b7a0 	cmpeqi	zero,r2,734
1000afe4:	1000b7a0 	cmpeqi	zero,r2,734
1000afe8:	1000b7a0 	cmpeqi	zero,r2,734
1000afec:	1000b7a0 	cmpeqi	zero,r2,734
1000aff0:	1000b7a0 	cmpeqi	zero,r2,734
1000aff4:	1000b130 	cmpltui	zero,r2,708
1000aff8:	1000b32c 	andhi	zero,r2,716
1000affc:	1000b7a0 	cmpeqi	zero,r2,734
1000b000:	1000b158 	cmpnei	zero,r2,709
1000b004:	1000b7dc 	xori	zero,r2,735
1000b008:	1000b7a0 	cmpeqi	zero,r2,734
1000b00c:	1000b7d0 	cmplti	zero,r2,735
1000b010:	1000b764 	muli	zero,r2,733
1000b014:	1000b764 	muli	zero,r2,733
1000b018:	1000b764 	muli	zero,r2,733
1000b01c:	1000b764 	muli	zero,r2,733
1000b020:	1000b764 	muli	zero,r2,733
1000b024:	1000b764 	muli	zero,r2,733
1000b028:	1000b764 	muli	zero,r2,733
1000b02c:	1000b764 	muli	zero,r2,733
1000b030:	1000b764 	muli	zero,r2,733
1000b034:	1000b7a0 	cmpeqi	zero,r2,734
1000b038:	1000b7a0 	cmpeqi	zero,r2,734
1000b03c:	1000b7a0 	cmpeqi	zero,r2,734
1000b040:	1000b7a0 	cmpeqi	zero,r2,734
1000b044:	1000b7a0 	cmpeqi	zero,r2,734
1000b048:	1000b7a0 	cmpeqi	zero,r2,734
1000b04c:	1000b7a0 	cmpeqi	zero,r2,734
1000b050:	1000b7a0 	cmpeqi	zero,r2,734
1000b054:	1000b7a0 	cmpeqi	zero,r2,734
1000b058:	1000b7a0 	cmpeqi	zero,r2,734
1000b05c:	1000b6e8 	cmpgeui	zero,r2,731
1000b060:	1000b7a0 	cmpeqi	zero,r2,734
1000b064:	1000b7a0 	cmpeqi	zero,r2,734
1000b068:	1000b7a0 	cmpeqi	zero,r2,734
1000b06c:	1000b7a0 	cmpeqi	zero,r2,734
1000b070:	1000b7a0 	cmpeqi	zero,r2,734
1000b074:	1000b7a0 	cmpeqi	zero,r2,734
1000b078:	1000b7a0 	cmpeqi	zero,r2,734
1000b07c:	1000b7a0 	cmpeqi	zero,r2,734
1000b080:	1000b7a0 	cmpeqi	zero,r2,734
1000b084:	1000b7a0 	cmpeqi	zero,r2,734
1000b088:	1000b898 	cmpnei	zero,r2,738
1000b08c:	1000b7a0 	cmpeqi	zero,r2,734
1000b090:	1000b7a0 	cmpeqi	zero,r2,734
1000b094:	1000b7a0 	cmpeqi	zero,r2,734
1000b098:	1000b7a0 	cmpeqi	zero,r2,734
1000b09c:	1000b7a0 	cmpeqi	zero,r2,734
1000b0a0:	1000b824 	muli	zero,r2,736
1000b0a4:	1000b7a0 	cmpeqi	zero,r2,734
1000b0a8:	1000b7a0 	cmpeqi	zero,r2,734
1000b0ac:	1000b524 	muli	zero,r2,724
1000b0b0:	1000b7a0 	cmpeqi	zero,r2,734
1000b0b4:	1000b7a0 	cmpeqi	zero,r2,734
1000b0b8:	1000b7a0 	cmpeqi	zero,r2,734
1000b0bc:	1000b7a0 	cmpeqi	zero,r2,734
1000b0c0:	1000b7a0 	cmpeqi	zero,r2,734
1000b0c4:	1000b7a0 	cmpeqi	zero,r2,734
1000b0c8:	1000b7a0 	cmpeqi	zero,r2,734
1000b0cc:	1000b7a0 	cmpeqi	zero,r2,734
1000b0d0:	1000b7a0 	cmpeqi	zero,r2,734
1000b0d4:	1000b7a0 	cmpeqi	zero,r2,734
1000b0d8:	1000b3f0 	cmpltui	zero,r2,719
1000b0dc:	1000b5d4 	ori	zero,r2,727
1000b0e0:	1000b7a0 	cmpeqi	zero,r2,734
1000b0e4:	1000b7a0 	cmpeqi	zero,r2,734
1000b0e8:	1000b7a0 	cmpeqi	zero,r2,734
1000b0ec:	1000b5c8 	cmpgei	zero,r2,727
1000b0f0:	1000b5d4 	ori	zero,r2,727
1000b0f4:	1000b7a0 	cmpeqi	zero,r2,734
1000b0f8:	1000b7a0 	cmpeqi	zero,r2,734
1000b0fc:	1000b5b4 	orhi	zero,r2,726
1000b100:	1000b7a0 	cmpeqi	zero,r2,734
1000b104:	1000b574 	orhi	zero,r2,725
1000b108:	1000b340 	call	11000b34 <_gp+0xfe297c>
1000b10c:	1000b164 	muli	zero,r2,709
1000b110:	1000b6dc 	xori	zero,r2,731
1000b114:	1000b7a0 	cmpeqi	zero,r2,734
1000b118:	1000b688 	cmpgei	zero,r2,730
1000b11c:	1000b7a0 	cmpeqi	zero,r2,734
1000b120:	1000b2a4 	muli	zero,r2,714
1000b124:	1000b7a0 	cmpeqi	zero,r2,734
1000b128:	1000b7a0 	cmpeqi	zero,r2,734
1000b12c:	1000b1f0 	cmpltui	zero,r2,711
1000b130:	d9002417 	ldw	r4,144(sp)
1000b134:	d9402417 	ldw	r5,144(sp)
1000b138:	21000017 	ldw	r4,0(r4)
1000b13c:	28800104 	addi	r2,r5,4
1000b140:	d9002515 	stw	r4,148(sp)
1000b144:	20032b0e 	bge	r4,zero,1000bdf4 <___svfiprintf_internal_r+0xf7c>
1000b148:	d8c02517 	ldw	r3,148(sp)
1000b14c:	d8802415 	stw	r2,144(sp)
1000b150:	00c7c83a 	sub	r3,zero,r3
1000b154:	d8c02515 	stw	r3,148(sp)
1000b158:	8c400114 	ori	r17,r17,4
1000b15c:	98c00007 	ldb	r3,0(r19)
1000b160:	003f9106 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b164:	00800c04 	movi	r2,48
1000b168:	d9402417 	ldw	r5,144(sp)
1000b16c:	d9002017 	ldw	r4,128(sp)
1000b170:	d8801d05 	stb	r2,116(sp)
1000b174:	00801e04 	movi	r2,120
1000b178:	d8801d45 	stb	r2,117(sp)
1000b17c:	d8001d85 	stb	zero,118(sp)
1000b180:	b811883a 	mov	r8,r23
1000b184:	28c00104 	addi	r3,r5,4
1000b188:	2c800017 	ldw	r18,0(r5)
1000b18c:	0029883a 	mov	r20,zero
1000b190:	88800094 	ori	r2,r17,2
1000b194:	20036316 	blt	r4,zero,1000bf24 <___svfiprintf_internal_r+0x10ac>
1000b198:	00bfdfc4 	movi	r2,-129
1000b19c:	88a0703a 	and	r16,r17,r2
1000b1a0:	d8c02415 	stw	r3,144(sp)
1000b1a4:	84000094 	ori	r16,r16,2
1000b1a8:	90031c26 	beq	r18,zero,1000be1c <___svfiprintf_internal_r+0xfa4>
1000b1ac:	01440074 	movhi	r5,4097
1000b1b0:	29504504 	addi	r5,r5,16660
1000b1b4:	002b883a 	mov	r21,zero
1000b1b8:	d9402915 	stw	r5,164(sp)
1000b1bc:	00002906 	br	1000b264 <___svfiprintf_internal_r+0x3ec>
1000b1c0:	8c400054 	ori	r17,r17,1
1000b1c4:	98c00007 	ldb	r3,0(r19)
1000b1c8:	003f7706 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b1cc:	a8803fcc 	andi	r2,r21,255
1000b1d0:	1080201c 	xori	r2,r2,128
1000b1d4:	10bfe004 	addi	r2,r2,-128
1000b1d8:	10032a1e 	bne	r2,zero,1000be84 <___svfiprintf_internal_r+0x100c>
1000b1dc:	00c00044 	movi	r3,1
1000b1e0:	d8c02105 	stb	r3,132(sp)
1000b1e4:	05400804 	movi	r21,32
1000b1e8:	98c00007 	ldb	r3,0(r19)
1000b1ec:	003f6e06 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b1f0:	8821883a 	mov	r16,r17
1000b1f4:	dc402103 	ldbu	r17,132(sp)
1000b1f8:	b811883a 	mov	r8,r23
1000b1fc:	8c403fcc 	andi	r17,r17,255
1000b200:	8803f01e 	bne	r17,zero,1000c1c4 <___svfiprintf_internal_r+0x134c>
1000b204:	00840074 	movhi	r2,4097
1000b208:	10904504 	addi	r2,r2,16660
1000b20c:	d8802915 	stw	r2,164(sp)
1000b210:	8080080c 	andi	r2,r16,32
1000b214:	1000cd26 	beq	r2,zero,1000b54c <___svfiprintf_internal_r+0x6d4>
1000b218:	d9002417 	ldw	r4,144(sp)
1000b21c:	24800017 	ldw	r18,0(r4)
1000b220:	25000117 	ldw	r20,4(r4)
1000b224:	21000204 	addi	r4,r4,8
1000b228:	d9002415 	stw	r4,144(sp)
1000b22c:	8080004c 	andi	r2,r16,1
1000b230:	1002c726 	beq	r2,zero,1000bd50 <___svfiprintf_internal_r+0xed8>
1000b234:	9504b03a 	or	r2,r18,r20
1000b238:	1003061e 	bne	r2,zero,1000be54 <___svfiprintf_internal_r+0xfdc>
1000b23c:	d9002017 	ldw	r4,128(sp)
1000b240:	d8001d85 	stb	zero,118(sp)
1000b244:	20033e16 	blt	r4,zero,1000bf40 <___svfiprintf_internal_r+0x10c8>
1000b248:	00bfdfc4 	movi	r2,-129
1000b24c:	80a0703a 	and	r16,r16,r2
1000b250:	d9402017 	ldw	r5,128(sp)
1000b254:	002b883a 	mov	r21,zero
1000b258:	28002826 	beq	r5,zero,1000b2fc <___svfiprintf_internal_r+0x484>
1000b25c:	0025883a 	mov	r18,zero
1000b260:	0029883a 	mov	r20,zero
1000b264:	d9002917 	ldw	r4,164(sp)
1000b268:	dc401a04 	addi	r17,sp,104
1000b26c:	908003cc 	andi	r2,r18,15
1000b270:	a006973a 	slli	r3,r20,28
1000b274:	2085883a 	add	r2,r4,r2
1000b278:	9024d13a 	srli	r18,r18,4
1000b27c:	10800003 	ldbu	r2,0(r2)
1000b280:	a028d13a 	srli	r20,r20,4
1000b284:	8c7fffc4 	addi	r17,r17,-1
1000b288:	1ca4b03a 	or	r18,r3,r18
1000b28c:	88800005 	stb	r2,0(r17)
1000b290:	9504b03a 	or	r2,r18,r20
1000b294:	103ff51e 	bne	r2,zero,1000b26c <__alt_data_end+0xf800b26c>
1000b298:	d8801e17 	ldw	r2,120(sp)
1000b29c:	1469c83a 	sub	r20,r2,r17
1000b2a0:	00001906 	br	1000b308 <___svfiprintf_internal_r+0x490>
1000b2a4:	8821883a 	mov	r16,r17
1000b2a8:	dc402103 	ldbu	r17,132(sp)
1000b2ac:	b811883a 	mov	r8,r23
1000b2b0:	8c403fcc 	andi	r17,r17,255
1000b2b4:	8803d01e 	bne	r17,zero,1000c1f8 <___svfiprintf_internal_r+0x1380>
1000b2b8:	8080080c 	andi	r2,r16,32
1000b2bc:	10016126 	beq	r2,zero,1000b844 <___svfiprintf_internal_r+0x9cc>
1000b2c0:	d9002417 	ldw	r4,144(sp)
1000b2c4:	d9402017 	ldw	r5,128(sp)
1000b2c8:	d8001d85 	stb	zero,118(sp)
1000b2cc:	20c00204 	addi	r3,r4,8
1000b2d0:	24800017 	ldw	r18,0(r4)
1000b2d4:	25000117 	ldw	r20,4(r4)
1000b2d8:	28030f16 	blt	r5,zero,1000bf18 <___svfiprintf_internal_r+0x10a0>
1000b2dc:	013fdfc4 	movi	r4,-129
1000b2e0:	9504b03a 	or	r2,r18,r20
1000b2e4:	d8c02415 	stw	r3,144(sp)
1000b2e8:	8120703a 	and	r16,r16,r4
1000b2ec:	002b883a 	mov	r21,zero
1000b2f0:	1000cd1e 	bne	r2,zero,1000b628 <___svfiprintf_internal_r+0x7b0>
1000b2f4:	d8c02017 	ldw	r3,128(sp)
1000b2f8:	1803141e 	bne	r3,zero,1000bf4c <___svfiprintf_internal_r+0x10d4>
1000b2fc:	d8002015 	stw	zero,128(sp)
1000b300:	0029883a 	mov	r20,zero
1000b304:	dc401a04 	addi	r17,sp,104
1000b308:	dc802017 	ldw	r18,128(sp)
1000b30c:	9500010e 	bge	r18,r20,1000b314 <___svfiprintf_internal_r+0x49c>
1000b310:	a025883a 	mov	r18,r20
1000b314:	ad403fcc 	andi	r21,r21,255
1000b318:	ad40201c 	xori	r21,r21,128
1000b31c:	ad7fe004 	addi	r21,r21,-128
1000b320:	a8003f26 	beq	r21,zero,1000b420 <___svfiprintf_internal_r+0x5a8>
1000b324:	94800044 	addi	r18,r18,1
1000b328:	00003d06 	br	1000b420 <___svfiprintf_internal_r+0x5a8>
1000b32c:	00c00044 	movi	r3,1
1000b330:	d8c02105 	stb	r3,132(sp)
1000b334:	05400ac4 	movi	r21,43
1000b338:	98c00007 	ldb	r3,0(r19)
1000b33c:	003f1a06 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b340:	8821883a 	mov	r16,r17
1000b344:	dc402103 	ldbu	r17,132(sp)
1000b348:	b811883a 	mov	r8,r23
1000b34c:	8c403fcc 	andi	r17,r17,255
1000b350:	8803a71e 	bne	r17,zero,1000c1f0 <___svfiprintf_internal_r+0x1378>
1000b354:	8080080c 	andi	r2,r16,32
1000b358:	10015726 	beq	r2,zero,1000b8b8 <___svfiprintf_internal_r+0xa40>
1000b35c:	d8c02417 	ldw	r3,144(sp)
1000b360:	d9002017 	ldw	r4,128(sp)
1000b364:	d8001d85 	stb	zero,118(sp)
1000b368:	18800204 	addi	r2,r3,8
1000b36c:	1c800017 	ldw	r18,0(r3)
1000b370:	1d000117 	ldw	r20,4(r3)
1000b374:	2002db16 	blt	r4,zero,1000bee4 <___svfiprintf_internal_r+0x106c>
1000b378:	013fdfc4 	movi	r4,-129
1000b37c:	9506b03a 	or	r3,r18,r20
1000b380:	d8802415 	stw	r2,144(sp)
1000b384:	8120703a 	and	r16,r16,r4
1000b388:	18015826 	beq	r3,zero,1000b8ec <___svfiprintf_internal_r+0xa74>
1000b38c:	002b883a 	mov	r21,zero
1000b390:	dc401a04 	addi	r17,sp,104
1000b394:	9006d0fa 	srli	r3,r18,3
1000b398:	a008977a 	slli	r4,r20,29
1000b39c:	a028d0fa 	srli	r20,r20,3
1000b3a0:	948001cc 	andi	r18,r18,7
1000b3a4:	90800c04 	addi	r2,r18,48
1000b3a8:	8c7fffc4 	addi	r17,r17,-1
1000b3ac:	20e4b03a 	or	r18,r4,r3
1000b3b0:	88800005 	stb	r2,0(r17)
1000b3b4:	9506b03a 	or	r3,r18,r20
1000b3b8:	183ff61e 	bne	r3,zero,1000b394 <__alt_data_end+0xf800b394>
1000b3bc:	80c0004c 	andi	r3,r16,1
1000b3c0:	18028926 	beq	r3,zero,1000bde8 <___svfiprintf_internal_r+0xf70>
1000b3c4:	10803fcc 	andi	r2,r2,255
1000b3c8:	1080201c 	xori	r2,r2,128
1000b3cc:	10bfe004 	addi	r2,r2,-128
1000b3d0:	00c00c04 	movi	r3,48
1000b3d4:	10ffb026 	beq	r2,r3,1000b298 <__alt_data_end+0xf800b298>
1000b3d8:	88ffffc5 	stb	r3,-1(r17)
1000b3dc:	d8c01e17 	ldw	r3,120(sp)
1000b3e0:	88bfffc4 	addi	r2,r17,-1
1000b3e4:	1023883a 	mov	r17,r2
1000b3e8:	18a9c83a 	sub	r20,r3,r2
1000b3ec:	003fc606 	br	1000b308 <__alt_data_end+0xf800b308>
1000b3f0:	d8c02417 	ldw	r3,144(sp)
1000b3f4:	04800044 	movi	r18,1
1000b3f8:	8821883a 	mov	r16,r17
1000b3fc:	18800017 	ldw	r2,0(r3)
1000b400:	18c00104 	addi	r3,r3,4
1000b404:	b811883a 	mov	r8,r23
1000b408:	d8001d85 	stb	zero,118(sp)
1000b40c:	d8801005 	stb	r2,64(sp)
1000b410:	d8c02415 	stw	r3,144(sp)
1000b414:	9029883a 	mov	r20,r18
1000b418:	dc401004 	addi	r17,sp,64
1000b41c:	d8002015 	stw	zero,128(sp)
1000b420:	80c0008c 	andi	r3,r16,2
1000b424:	d8c02115 	stw	r3,132(sp)
1000b428:	18000126 	beq	r3,zero,1000b430 <___svfiprintf_internal_r+0x5b8>
1000b42c:	94800084 	addi	r18,r18,2
1000b430:	80c0210c 	andi	r3,r16,132
1000b434:	d8c02215 	stw	r3,136(sp)
1000b438:	1801321e 	bne	r3,zero,1000b904 <___svfiprintf_internal_r+0xa8c>
1000b43c:	d9002517 	ldw	r4,148(sp)
1000b440:	24b9c83a 	sub	fp,r4,r18
1000b444:	07012f0e 	bge	zero,fp,1000b904 <___svfiprintf_internal_r+0xa8c>
1000b448:	02400404 	movi	r9,16
1000b44c:	d8c01c17 	ldw	r3,112(sp)
1000b450:	d8801b17 	ldw	r2,108(sp)
1000b454:	4f03250e 	bge	r9,fp,1000c0ec <___svfiprintf_internal_r+0x1274>
1000b458:	01040074 	movhi	r4,4097
1000b45c:	2110b204 	addi	r4,r4,17096
1000b460:	dc002a15 	stw	r16,168(sp)
1000b464:	dc402b15 	stw	r17,172(sp)
1000b468:	d9002815 	stw	r4,160(sp)
1000b46c:	e023883a 	mov	r17,fp
1000b470:	482f883a 	mov	r23,r9
1000b474:	9839883a 	mov	fp,r19
1000b478:	054001c4 	movi	r21,7
1000b47c:	9027883a 	mov	r19,r18
1000b480:	dc002717 	ldw	r16,156(sp)
1000b484:	dc802317 	ldw	r18,140(sp)
1000b488:	00000306 	br	1000b498 <___svfiprintf_internal_r+0x620>
1000b48c:	8c7ffc04 	addi	r17,r17,-16
1000b490:	42000204 	addi	r8,r8,8
1000b494:	bc40130e 	bge	r23,r17,1000b4e4 <___svfiprintf_internal_r+0x66c>
1000b498:	01440074 	movhi	r5,4097
1000b49c:	18c00404 	addi	r3,r3,16
1000b4a0:	10800044 	addi	r2,r2,1
1000b4a4:	2950b204 	addi	r5,r5,17096
1000b4a8:	41400015 	stw	r5,0(r8)
1000b4ac:	45c00115 	stw	r23,4(r8)
1000b4b0:	d8c01c15 	stw	r3,112(sp)
1000b4b4:	d8801b15 	stw	r2,108(sp)
1000b4b8:	a8bff40e 	bge	r21,r2,1000b48c <__alt_data_end+0xf800b48c>
1000b4bc:	d9801a04 	addi	r6,sp,104
1000b4c0:	900b883a 	mov	r5,r18
1000b4c4:	8009883a 	mov	r4,r16
1000b4c8:	000aca80 	call	1000aca8 <__ssprint_r>
1000b4cc:	1001aa1e 	bne	r2,zero,1000bb78 <___svfiprintf_internal_r+0xd00>
1000b4d0:	8c7ffc04 	addi	r17,r17,-16
1000b4d4:	d8c01c17 	ldw	r3,112(sp)
1000b4d8:	d8801b17 	ldw	r2,108(sp)
1000b4dc:	d811883a 	mov	r8,sp
1000b4e0:	bc7fed16 	blt	r23,r17,1000b498 <__alt_data_end+0xf800b498>
1000b4e4:	9825883a 	mov	r18,r19
1000b4e8:	dc002a17 	ldw	r16,168(sp)
1000b4ec:	e027883a 	mov	r19,fp
1000b4f0:	8839883a 	mov	fp,r17
1000b4f4:	dc402b17 	ldw	r17,172(sp)
1000b4f8:	d9002817 	ldw	r4,160(sp)
1000b4fc:	e0c7883a 	add	r3,fp,r3
1000b500:	10800044 	addi	r2,r2,1
1000b504:	41000015 	stw	r4,0(r8)
1000b508:	47000115 	stw	fp,4(r8)
1000b50c:	d8c01c15 	stw	r3,112(sp)
1000b510:	d8801b15 	stw	r2,108(sp)
1000b514:	010001c4 	movi	r4,7
1000b518:	20821616 	blt	r4,r2,1000bd74 <___svfiprintf_internal_r+0xefc>
1000b51c:	42000204 	addi	r8,r8,8
1000b520:	0000fa06 	br	1000b90c <___svfiprintf_internal_r+0xa94>
1000b524:	8821883a 	mov	r16,r17
1000b528:	dc402103 	ldbu	r17,132(sp)
1000b52c:	b811883a 	mov	r8,r23
1000b530:	8c403fcc 	andi	r17,r17,255
1000b534:	8803361e 	bne	r17,zero,1000c210 <___svfiprintf_internal_r+0x1398>
1000b538:	01440074 	movhi	r5,4097
1000b53c:	29504004 	addi	r5,r5,16640
1000b540:	d9402915 	stw	r5,164(sp)
1000b544:	8080080c 	andi	r2,r16,32
1000b548:	103f331e 	bne	r2,zero,1000b218 <__alt_data_end+0xf800b218>
1000b54c:	8080040c 	andi	r2,r16,16
1000b550:	1002551e 	bne	r2,zero,1000bea8 <___svfiprintf_internal_r+0x1030>
1000b554:	8080100c 	andi	r2,r16,64
1000b558:	1002a626 	beq	r2,zero,1000bff4 <___svfiprintf_internal_r+0x117c>
1000b55c:	d8802417 	ldw	r2,144(sp)
1000b560:	0029883a 	mov	r20,zero
1000b564:	1480000b 	ldhu	r18,0(r2)
1000b568:	10800104 	addi	r2,r2,4
1000b56c:	d8802415 	stw	r2,144(sp)
1000b570:	003f2e06 	br	1000b22c <__alt_data_end+0xf800b22c>
1000b574:	8821883a 	mov	r16,r17
1000b578:	dc402103 	ldbu	r17,132(sp)
1000b57c:	b811883a 	mov	r8,r23
1000b580:	8c403fcc 	andi	r17,r17,255
1000b584:	88030b1e 	bne	r17,zero,1000c1b4 <___svfiprintf_internal_r+0x133c>
1000b588:	8080080c 	andi	r2,r16,32
1000b58c:	1002271e 	bne	r2,zero,1000be2c <___svfiprintf_internal_r+0xfb4>
1000b590:	8080040c 	andi	r2,r16,16
1000b594:	10028e26 	beq	r2,zero,1000bfd0 <___svfiprintf_internal_r+0x1158>
1000b598:	d8c02417 	ldw	r3,144(sp)
1000b59c:	d9002617 	ldw	r4,152(sp)
1000b5a0:	18800017 	ldw	r2,0(r3)
1000b5a4:	18c00104 	addi	r3,r3,4
1000b5a8:	d8c02415 	stw	r3,144(sp)
1000b5ac:	11000015 	stw	r4,0(r2)
1000b5b0:	003e5306 	br	1000af00 <__alt_data_end+0xf800af00>
1000b5b4:	98c00007 	ldb	r3,0(r19)
1000b5b8:	01401b04 	movi	r5,108
1000b5bc:	19424f26 	beq	r3,r5,1000befc <___svfiprintf_internal_r+0x1084>
1000b5c0:	8c400414 	ori	r17,r17,16
1000b5c4:	003e7806 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b5c8:	8c401014 	ori	r17,r17,64
1000b5cc:	98c00007 	ldb	r3,0(r19)
1000b5d0:	003e7506 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b5d4:	8821883a 	mov	r16,r17
1000b5d8:	dc402103 	ldbu	r17,132(sp)
1000b5dc:	b811883a 	mov	r8,r23
1000b5e0:	8c403fcc 	andi	r17,r17,255
1000b5e4:	8802fe1e 	bne	r17,zero,1000c1e0 <___svfiprintf_internal_r+0x1368>
1000b5e8:	8080080c 	andi	r2,r16,32
1000b5ec:	10004626 	beq	r2,zero,1000b708 <___svfiprintf_internal_r+0x890>
1000b5f0:	d9002417 	ldw	r4,144(sp)
1000b5f4:	20800117 	ldw	r2,4(r4)
1000b5f8:	24800017 	ldw	r18,0(r4)
1000b5fc:	21000204 	addi	r4,r4,8
1000b600:	d9002415 	stw	r4,144(sp)
1000b604:	1029883a 	mov	r20,r2
1000b608:	10004a16 	blt	r2,zero,1000b734 <___svfiprintf_internal_r+0x8bc>
1000b60c:	d9002017 	ldw	r4,128(sp)
1000b610:	dd401d83 	ldbu	r21,118(sp)
1000b614:	2001eb16 	blt	r4,zero,1000bdc4 <___svfiprintf_internal_r+0xf4c>
1000b618:	00ffdfc4 	movi	r3,-129
1000b61c:	9504b03a 	or	r2,r18,r20
1000b620:	80e0703a 	and	r16,r16,r3
1000b624:	103f3326 	beq	r2,zero,1000b2f4 <__alt_data_end+0xf800b2f4>
1000b628:	a0009426 	beq	r20,zero,1000b87c <___svfiprintf_internal_r+0xa04>
1000b62c:	dc401a04 	addi	r17,sp,104
1000b630:	402f883a 	mov	r23,r8
1000b634:	9009883a 	mov	r4,r18
1000b638:	a00b883a 	mov	r5,r20
1000b63c:	01800284 	movi	r6,10
1000b640:	000f883a 	mov	r7,zero
1000b644:	000e9640 	call	1000e964 <__umoddi3>
1000b648:	10800c04 	addi	r2,r2,48
1000b64c:	8c7fffc4 	addi	r17,r17,-1
1000b650:	9009883a 	mov	r4,r18
1000b654:	a00b883a 	mov	r5,r20
1000b658:	88800005 	stb	r2,0(r17)
1000b65c:	01800284 	movi	r6,10
1000b660:	000f883a 	mov	r7,zero
1000b664:	000e3680 	call	1000e368 <__udivdi3>
1000b668:	1025883a 	mov	r18,r2
1000b66c:	10c4b03a 	or	r2,r2,r3
1000b670:	1829883a 	mov	r20,r3
1000b674:	103fef1e 	bne	r2,zero,1000b634 <__alt_data_end+0xf800b634>
1000b678:	d9001e17 	ldw	r4,120(sp)
1000b67c:	b811883a 	mov	r8,r23
1000b680:	2469c83a 	sub	r20,r4,r17
1000b684:	003f2006 	br	1000b308 <__alt_data_end+0xf800b308>
1000b688:	d8802417 	ldw	r2,144(sp)
1000b68c:	8821883a 	mov	r16,r17
1000b690:	d8001d85 	stb	zero,118(sp)
1000b694:	14400017 	ldw	r17,0(r2)
1000b698:	b811883a 	mov	r8,r23
1000b69c:	15c00104 	addi	r23,r2,4
1000b6a0:	88026c26 	beq	r17,zero,1000c054 <___svfiprintf_internal_r+0x11dc>
1000b6a4:	d8c02017 	ldw	r3,128(sp)
1000b6a8:	18025f16 	blt	r3,zero,1000c028 <___svfiprintf_internal_r+0x11b0>
1000b6ac:	180d883a 	mov	r6,r3
1000b6b0:	000b883a 	mov	r5,zero
1000b6b4:	8809883a 	mov	r4,r17
1000b6b8:	da002d15 	stw	r8,180(sp)
1000b6bc:	0008efc0 	call	10008efc <memchr>
1000b6c0:	da002d17 	ldw	r8,180(sp)
1000b6c4:	1002a526 	beq	r2,zero,1000c15c <___svfiprintf_internal_r+0x12e4>
1000b6c8:	1469c83a 	sub	r20,r2,r17
1000b6cc:	dd401d83 	ldbu	r21,118(sp)
1000b6d0:	ddc02415 	stw	r23,144(sp)
1000b6d4:	d8002015 	stw	zero,128(sp)
1000b6d8:	003f0b06 	br	1000b308 <__alt_data_end+0xf800b308>
1000b6dc:	8c400814 	ori	r17,r17,32
1000b6e0:	98c00007 	ldb	r3,0(r19)
1000b6e4:	003e3006 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b6e8:	8821883a 	mov	r16,r17
1000b6ec:	dc402103 	ldbu	r17,132(sp)
1000b6f0:	b811883a 	mov	r8,r23
1000b6f4:	8c403fcc 	andi	r17,r17,255
1000b6f8:	8802b01e 	bne	r17,zero,1000c1bc <___svfiprintf_internal_r+0x1344>
1000b6fc:	84000414 	ori	r16,r16,16
1000b700:	8080080c 	andi	r2,r16,32
1000b704:	103fba1e 	bne	r2,zero,1000b5f0 <__alt_data_end+0xf800b5f0>
1000b708:	8080040c 	andi	r2,r16,16
1000b70c:	1001df1e 	bne	r2,zero,1000be8c <___svfiprintf_internal_r+0x1014>
1000b710:	8080100c 	andi	r2,r16,64
1000b714:	10023d26 	beq	r2,zero,1000c00c <___svfiprintf_internal_r+0x1194>
1000b718:	d8802417 	ldw	r2,144(sp)
1000b71c:	1480000f 	ldh	r18,0(r2)
1000b720:	10800104 	addi	r2,r2,4
1000b724:	d8802415 	stw	r2,144(sp)
1000b728:	9029d7fa 	srai	r20,r18,31
1000b72c:	a005883a 	mov	r2,r20
1000b730:	103fb60e 	bge	r2,zero,1000b60c <__alt_data_end+0xf800b60c>
1000b734:	d9402017 	ldw	r5,128(sp)
1000b738:	04a5c83a 	sub	r18,zero,r18
1000b73c:	05400b44 	movi	r21,45
1000b740:	9004c03a 	cmpne	r2,r18,zero
1000b744:	0529c83a 	sub	r20,zero,r20
1000b748:	dd401d85 	stb	r21,118(sp)
1000b74c:	a0a9c83a 	sub	r20,r20,r2
1000b750:	28026c16 	blt	r5,zero,1000c104 <___svfiprintf_internal_r+0x128c>
1000b754:	00bfdfc4 	movi	r2,-129
1000b758:	80a0703a 	and	r16,r16,r2
1000b75c:	a03fb31e 	bne	r20,zero,1000b62c <__alt_data_end+0xf800b62c>
1000b760:	00004606 	br	1000b87c <___svfiprintf_internal_r+0xa04>
1000b764:	9839883a 	mov	fp,r19
1000b768:	d8002515 	stw	zero,148(sp)
1000b76c:	1c3ff404 	addi	r16,r3,-48
1000b770:	0009883a 	mov	r4,zero
1000b774:	01400284 	movi	r5,10
1000b778:	0000fc80 	call	10000fc8 <__mulsi3>
1000b77c:	e0c00007 	ldb	r3,0(fp)
1000b780:	8089883a 	add	r4,r16,r2
1000b784:	9cc00044 	addi	r19,r19,1
1000b788:	1c3ff404 	addi	r16,r3,-48
1000b78c:	9839883a 	mov	fp,r19
1000b790:	a43ff82e 	bgeu	r20,r16,1000b774 <__alt_data_end+0xf800b774>
1000b794:	d9002515 	stw	r4,148(sp)
1000b798:	18bff804 	addi	r2,r3,-32
1000b79c:	90be052e 	bgeu	r18,r2,1000afb4 <__alt_data_end+0xf800afb4>
1000b7a0:	8821883a 	mov	r16,r17
1000b7a4:	dc402103 	ldbu	r17,132(sp)
1000b7a8:	b811883a 	mov	r8,r23
1000b7ac:	8c403fcc 	andi	r17,r17,255
1000b7b0:	88028d1e 	bne	r17,zero,1000c1e8 <___svfiprintf_internal_r+0x1370>
1000b7b4:	1800ea26 	beq	r3,zero,1000bb60 <___svfiprintf_internal_r+0xce8>
1000b7b8:	04800044 	movi	r18,1
1000b7bc:	d8c01005 	stb	r3,64(sp)
1000b7c0:	d8001d85 	stb	zero,118(sp)
1000b7c4:	9029883a 	mov	r20,r18
1000b7c8:	dc401004 	addi	r17,sp,64
1000b7cc:	003f1306 	br	1000b41c <__alt_data_end+0xf800b41c>
1000b7d0:	8c402014 	ori	r17,r17,128
1000b7d4:	98c00007 	ldb	r3,0(r19)
1000b7d8:	003df306 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000b7dc:	98c00007 	ldb	r3,0(r19)
1000b7e0:	01000a84 	movi	r4,42
1000b7e4:	9f000044 	addi	fp,r19,1
1000b7e8:	19026326 	beq	r3,r4,1000c178 <___svfiprintf_internal_r+0x1300>
1000b7ec:	1c3ff404 	addi	r16,r3,-48
1000b7f0:	0009883a 	mov	r4,zero
1000b7f4:	a4025636 	bltu	r20,r16,1000c150 <___svfiprintf_internal_r+0x12d8>
1000b7f8:	01400284 	movi	r5,10
1000b7fc:	0000fc80 	call	10000fc8 <__mulsi3>
1000b800:	e0c00007 	ldb	r3,0(fp)
1000b804:	1409883a 	add	r4,r2,r16
1000b808:	e4c00044 	addi	r19,fp,1
1000b80c:	1c3ff404 	addi	r16,r3,-48
1000b810:	9839883a 	mov	fp,r19
1000b814:	a43ff82e 	bgeu	r20,r16,1000b7f8 <__alt_data_end+0xf800b7f8>
1000b818:	20020c16 	blt	r4,zero,1000c04c <___svfiprintf_internal_r+0x11d4>
1000b81c:	d9002015 	stw	r4,128(sp)
1000b820:	003de206 	br	1000afac <__alt_data_end+0xf800afac>
1000b824:	8821883a 	mov	r16,r17
1000b828:	dc402103 	ldbu	r17,132(sp)
1000b82c:	b811883a 	mov	r8,r23
1000b830:	8c403fcc 	andi	r17,r17,255
1000b834:	8802721e 	bne	r17,zero,1000c200 <___svfiprintf_internal_r+0x1388>
1000b838:	84000414 	ori	r16,r16,16
1000b83c:	8080080c 	andi	r2,r16,32
1000b840:	103e9f1e 	bne	r2,zero,1000b2c0 <__alt_data_end+0xf800b2c0>
1000b844:	8080040c 	andi	r2,r16,16
1000b848:	10015326 	beq	r2,zero,1000bd98 <___svfiprintf_internal_r+0xf20>
1000b84c:	d8c02417 	ldw	r3,144(sp)
1000b850:	d9002017 	ldw	r4,128(sp)
1000b854:	d8001d85 	stb	zero,118(sp)
1000b858:	18800104 	addi	r2,r3,4
1000b85c:	1c800017 	ldw	r18,0(r3)
1000b860:	0029883a 	mov	r20,zero
1000b864:	20015516 	blt	r4,zero,1000bdbc <___svfiprintf_internal_r+0xf44>
1000b868:	00ffdfc4 	movi	r3,-129
1000b86c:	d8802415 	stw	r2,144(sp)
1000b870:	80e0703a 	and	r16,r16,r3
1000b874:	002b883a 	mov	r21,zero
1000b878:	903e9e26 	beq	r18,zero,1000b2f4 <__alt_data_end+0xf800b2f4>
1000b87c:	00800244 	movi	r2,9
1000b880:	14bf6a36 	bltu	r2,r18,1000b62c <__alt_data_end+0xf800b62c>
1000b884:	94800c04 	addi	r18,r18,48
1000b888:	dc8019c5 	stb	r18,103(sp)
1000b88c:	dd002c17 	ldw	r20,176(sp)
1000b890:	dc4019c4 	addi	r17,sp,103
1000b894:	003e9c06 	br	1000b308 <__alt_data_end+0xf800b308>
1000b898:	8821883a 	mov	r16,r17
1000b89c:	dc402103 	ldbu	r17,132(sp)
1000b8a0:	b811883a 	mov	r8,r23
1000b8a4:	8c403fcc 	andi	r17,r17,255
1000b8a8:	8802571e 	bne	r17,zero,1000c208 <___svfiprintf_internal_r+0x1390>
1000b8ac:	84000414 	ori	r16,r16,16
1000b8b0:	8080080c 	andi	r2,r16,32
1000b8b4:	103ea91e 	bne	r2,zero,1000b35c <__alt_data_end+0xf800b35c>
1000b8b8:	8080040c 	andi	r2,r16,16
1000b8bc:	10018026 	beq	r2,zero,1000bec0 <___svfiprintf_internal_r+0x1048>
1000b8c0:	d9402417 	ldw	r5,144(sp)
1000b8c4:	d8c02017 	ldw	r3,128(sp)
1000b8c8:	d8001d85 	stb	zero,118(sp)
1000b8cc:	28800104 	addi	r2,r5,4
1000b8d0:	2c800017 	ldw	r18,0(r5)
1000b8d4:	0029883a 	mov	r20,zero
1000b8d8:	18018216 	blt	r3,zero,1000bee4 <___svfiprintf_internal_r+0x106c>
1000b8dc:	00ffdfc4 	movi	r3,-129
1000b8e0:	d8802415 	stw	r2,144(sp)
1000b8e4:	80e0703a 	and	r16,r16,r3
1000b8e8:	903ea81e 	bne	r18,zero,1000b38c <__alt_data_end+0xf800b38c>
1000b8ec:	d8802017 	ldw	r2,128(sp)
1000b8f0:	002b883a 	mov	r21,zero
1000b8f4:	1001f226 	beq	r2,zero,1000c0c0 <___svfiprintf_internal_r+0x1248>
1000b8f8:	0025883a 	mov	r18,zero
1000b8fc:	0029883a 	mov	r20,zero
1000b900:	003ea306 	br	1000b390 <__alt_data_end+0xf800b390>
1000b904:	d8c01c17 	ldw	r3,112(sp)
1000b908:	d8801b17 	ldw	r2,108(sp)
1000b90c:	d9001d87 	ldb	r4,118(sp)
1000b910:	20000b26 	beq	r4,zero,1000b940 <___svfiprintf_internal_r+0xac8>
1000b914:	d9001d84 	addi	r4,sp,118
1000b918:	18c00044 	addi	r3,r3,1
1000b91c:	10800044 	addi	r2,r2,1
1000b920:	41000015 	stw	r4,0(r8)
1000b924:	01000044 	movi	r4,1
1000b928:	41000115 	stw	r4,4(r8)
1000b92c:	d8c01c15 	stw	r3,112(sp)
1000b930:	d8801b15 	stw	r2,108(sp)
1000b934:	010001c4 	movi	r4,7
1000b938:	2080f316 	blt	r4,r2,1000bd08 <___svfiprintf_internal_r+0xe90>
1000b93c:	42000204 	addi	r8,r8,8
1000b940:	d9402117 	ldw	r5,132(sp)
1000b944:	28000b26 	beq	r5,zero,1000b974 <___svfiprintf_internal_r+0xafc>
1000b948:	d9001d04 	addi	r4,sp,116
1000b94c:	18c00084 	addi	r3,r3,2
1000b950:	10800044 	addi	r2,r2,1
1000b954:	41000015 	stw	r4,0(r8)
1000b958:	01000084 	movi	r4,2
1000b95c:	41000115 	stw	r4,4(r8)
1000b960:	d8c01c15 	stw	r3,112(sp)
1000b964:	d8801b15 	stw	r2,108(sp)
1000b968:	010001c4 	movi	r4,7
1000b96c:	2080ef16 	blt	r4,r2,1000bd2c <___svfiprintf_internal_r+0xeb4>
1000b970:	42000204 	addi	r8,r8,8
1000b974:	d9402217 	ldw	r5,136(sp)
1000b978:	01002004 	movi	r4,128
1000b97c:	29008f26 	beq	r5,r4,1000bbbc <___svfiprintf_internal_r+0xd44>
1000b980:	d9002017 	ldw	r4,128(sp)
1000b984:	252fc83a 	sub	r23,r4,r20
1000b988:	05c0310e 	bge	zero,r23,1000ba50 <___svfiprintf_internal_r+0xbd8>
1000b98c:	07000404 	movi	fp,16
1000b990:	e5c17d0e 	bge	fp,r23,1000bf88 <___svfiprintf_internal_r+0x1110>
1000b994:	01040074 	movhi	r4,4097
1000b998:	2110ae04 	addi	r4,r4,17080
1000b99c:	dc002015 	stw	r16,128(sp)
1000b9a0:	dc402215 	stw	r17,136(sp)
1000b9a4:	d9002115 	stw	r4,132(sp)
1000b9a8:	b823883a 	mov	r17,r23
1000b9ac:	054001c4 	movi	r21,7
1000b9b0:	982f883a 	mov	r23,r19
1000b9b4:	dc002717 	ldw	r16,156(sp)
1000b9b8:	9027883a 	mov	r19,r18
1000b9bc:	dc802317 	ldw	r18,140(sp)
1000b9c0:	00000306 	br	1000b9d0 <___svfiprintf_internal_r+0xb58>
1000b9c4:	8c7ffc04 	addi	r17,r17,-16
1000b9c8:	42000204 	addi	r8,r8,8
1000b9cc:	e440110e 	bge	fp,r17,1000ba14 <___svfiprintf_internal_r+0xb9c>
1000b9d0:	18c00404 	addi	r3,r3,16
1000b9d4:	10800044 	addi	r2,r2,1
1000b9d8:	45800015 	stw	r22,0(r8)
1000b9dc:	47000115 	stw	fp,4(r8)
1000b9e0:	d8c01c15 	stw	r3,112(sp)
1000b9e4:	d8801b15 	stw	r2,108(sp)
1000b9e8:	a8bff60e 	bge	r21,r2,1000b9c4 <__alt_data_end+0xf800b9c4>
1000b9ec:	d9801a04 	addi	r6,sp,104
1000b9f0:	900b883a 	mov	r5,r18
1000b9f4:	8009883a 	mov	r4,r16
1000b9f8:	000aca80 	call	1000aca8 <__ssprint_r>
1000b9fc:	10005e1e 	bne	r2,zero,1000bb78 <___svfiprintf_internal_r+0xd00>
1000ba00:	8c7ffc04 	addi	r17,r17,-16
1000ba04:	d8c01c17 	ldw	r3,112(sp)
1000ba08:	d8801b17 	ldw	r2,108(sp)
1000ba0c:	d811883a 	mov	r8,sp
1000ba10:	e47fef16 	blt	fp,r17,1000b9d0 <__alt_data_end+0xf800b9d0>
1000ba14:	9825883a 	mov	r18,r19
1000ba18:	dc002017 	ldw	r16,128(sp)
1000ba1c:	b827883a 	mov	r19,r23
1000ba20:	882f883a 	mov	r23,r17
1000ba24:	dc402217 	ldw	r17,136(sp)
1000ba28:	d9402117 	ldw	r5,132(sp)
1000ba2c:	1dc7883a 	add	r3,r3,r23
1000ba30:	10800044 	addi	r2,r2,1
1000ba34:	41400015 	stw	r5,0(r8)
1000ba38:	45c00115 	stw	r23,4(r8)
1000ba3c:	d8c01c15 	stw	r3,112(sp)
1000ba40:	d8801b15 	stw	r2,108(sp)
1000ba44:	010001c4 	movi	r4,7
1000ba48:	2080a616 	blt	r4,r2,1000bce4 <___svfiprintf_internal_r+0xe6c>
1000ba4c:	42000204 	addi	r8,r8,8
1000ba50:	a0c7883a 	add	r3,r20,r3
1000ba54:	10800044 	addi	r2,r2,1
1000ba58:	44400015 	stw	r17,0(r8)
1000ba5c:	45000115 	stw	r20,4(r8)
1000ba60:	d8c01c15 	stw	r3,112(sp)
1000ba64:	d8801b15 	stw	r2,108(sp)
1000ba68:	010001c4 	movi	r4,7
1000ba6c:	20808816 	blt	r4,r2,1000bc90 <___svfiprintf_internal_r+0xe18>
1000ba70:	42000204 	addi	r8,r8,8
1000ba74:	8400010c 	andi	r16,r16,4
1000ba78:	80002c26 	beq	r16,zero,1000bb2c <___svfiprintf_internal_r+0xcb4>
1000ba7c:	d8802517 	ldw	r2,148(sp)
1000ba80:	14a1c83a 	sub	r16,r2,r18
1000ba84:	0400290e 	bge	zero,r16,1000bb2c <___svfiprintf_internal_r+0xcb4>
1000ba88:	04400404 	movi	r17,16
1000ba8c:	d8801b17 	ldw	r2,108(sp)
1000ba90:	8c01a70e 	bge	r17,r16,1000c130 <___svfiprintf_internal_r+0x12b8>
1000ba94:	01440074 	movhi	r5,4097
1000ba98:	2950b204 	addi	r5,r5,17096
1000ba9c:	d9402815 	stw	r5,160(sp)
1000baa0:	050001c4 	movi	r20,7
1000baa4:	dd402717 	ldw	r21,156(sp)
1000baa8:	ddc02317 	ldw	r23,140(sp)
1000baac:	00000306 	br	1000babc <___svfiprintf_internal_r+0xc44>
1000bab0:	843ffc04 	addi	r16,r16,-16
1000bab4:	42000204 	addi	r8,r8,8
1000bab8:	8c00130e 	bge	r17,r16,1000bb08 <___svfiprintf_internal_r+0xc90>
1000babc:	01040074 	movhi	r4,4097
1000bac0:	18c00404 	addi	r3,r3,16
1000bac4:	10800044 	addi	r2,r2,1
1000bac8:	2110b204 	addi	r4,r4,17096
1000bacc:	41000015 	stw	r4,0(r8)
1000bad0:	44400115 	stw	r17,4(r8)
1000bad4:	d8c01c15 	stw	r3,112(sp)
1000bad8:	d8801b15 	stw	r2,108(sp)
1000badc:	a0bff40e 	bge	r20,r2,1000bab0 <__alt_data_end+0xf800bab0>
1000bae0:	d9801a04 	addi	r6,sp,104
1000bae4:	b80b883a 	mov	r5,r23
1000bae8:	a809883a 	mov	r4,r21
1000baec:	000aca80 	call	1000aca8 <__ssprint_r>
1000baf0:	1000211e 	bne	r2,zero,1000bb78 <___svfiprintf_internal_r+0xd00>
1000baf4:	843ffc04 	addi	r16,r16,-16
1000baf8:	d8c01c17 	ldw	r3,112(sp)
1000bafc:	d8801b17 	ldw	r2,108(sp)
1000bb00:	d811883a 	mov	r8,sp
1000bb04:	8c3fed16 	blt	r17,r16,1000babc <__alt_data_end+0xf800babc>
1000bb08:	d9402817 	ldw	r5,160(sp)
1000bb0c:	1c07883a 	add	r3,r3,r16
1000bb10:	10800044 	addi	r2,r2,1
1000bb14:	41400015 	stw	r5,0(r8)
1000bb18:	44000115 	stw	r16,4(r8)
1000bb1c:	d8c01c15 	stw	r3,112(sp)
1000bb20:	d8801b15 	stw	r2,108(sp)
1000bb24:	010001c4 	movi	r4,7
1000bb28:	2080b516 	blt	r4,r2,1000be00 <___svfiprintf_internal_r+0xf88>
1000bb2c:	d8802517 	ldw	r2,148(sp)
1000bb30:	1480010e 	bge	r2,r18,1000bb38 <___svfiprintf_internal_r+0xcc0>
1000bb34:	9005883a 	mov	r2,r18
1000bb38:	d9002617 	ldw	r4,152(sp)
1000bb3c:	2089883a 	add	r4,r4,r2
1000bb40:	d9002615 	stw	r4,152(sp)
1000bb44:	18005a1e 	bne	r3,zero,1000bcb0 <___svfiprintf_internal_r+0xe38>
1000bb48:	98800007 	ldb	r2,0(r19)
1000bb4c:	d8001b15 	stw	zero,108(sp)
1000bb50:	d811883a 	mov	r8,sp
1000bb54:	103cec1e 	bne	r2,zero,1000af08 <__alt_data_end+0xf800af08>
1000bb58:	9825883a 	mov	r18,r19
1000bb5c:	003d0206 	br	1000af68 <__alt_data_end+0xf800af68>
1000bb60:	d8801c17 	ldw	r2,112(sp)
1000bb64:	10000426 	beq	r2,zero,1000bb78 <___svfiprintf_internal_r+0xd00>
1000bb68:	d9402317 	ldw	r5,140(sp)
1000bb6c:	d9002717 	ldw	r4,156(sp)
1000bb70:	d9801a04 	addi	r6,sp,104
1000bb74:	000aca80 	call	1000aca8 <__ssprint_r>
1000bb78:	d9402317 	ldw	r5,140(sp)
1000bb7c:	d8802617 	ldw	r2,152(sp)
1000bb80:	28c0030b 	ldhu	r3,12(r5)
1000bb84:	18c0100c 	andi	r3,r3,64
1000bb88:	18015c1e 	bne	r3,zero,1000c0fc <___svfiprintf_internal_r+0x1284>
1000bb8c:	dfc03717 	ldw	ra,220(sp)
1000bb90:	df003617 	ldw	fp,216(sp)
1000bb94:	ddc03517 	ldw	r23,212(sp)
1000bb98:	dd803417 	ldw	r22,208(sp)
1000bb9c:	dd403317 	ldw	r21,204(sp)
1000bba0:	dd003217 	ldw	r20,200(sp)
1000bba4:	dcc03117 	ldw	r19,196(sp)
1000bba8:	dc803017 	ldw	r18,192(sp)
1000bbac:	dc402f17 	ldw	r17,188(sp)
1000bbb0:	dc002e17 	ldw	r16,184(sp)
1000bbb4:	dec03804 	addi	sp,sp,224
1000bbb8:	f800283a 	ret
1000bbbc:	d9002517 	ldw	r4,148(sp)
1000bbc0:	24afc83a 	sub	r23,r4,r18
1000bbc4:	05ff6e0e 	bge	zero,r23,1000b980 <__alt_data_end+0xf800b980>
1000bbc8:	07000404 	movi	fp,16
1000bbcc:	e5c15c0e 	bge	fp,r23,1000c140 <___svfiprintf_internal_r+0x12c8>
1000bbd0:	01040074 	movhi	r4,4097
1000bbd4:	2110ae04 	addi	r4,r4,17080
1000bbd8:	dc002215 	stw	r16,136(sp)
1000bbdc:	dc402815 	stw	r17,160(sp)
1000bbe0:	d9002115 	stw	r4,132(sp)
1000bbe4:	b823883a 	mov	r17,r23
1000bbe8:	054001c4 	movi	r21,7
1000bbec:	982f883a 	mov	r23,r19
1000bbf0:	dc002717 	ldw	r16,156(sp)
1000bbf4:	9027883a 	mov	r19,r18
1000bbf8:	dc802317 	ldw	r18,140(sp)
1000bbfc:	00000306 	br	1000bc0c <___svfiprintf_internal_r+0xd94>
1000bc00:	8c7ffc04 	addi	r17,r17,-16
1000bc04:	42000204 	addi	r8,r8,8
1000bc08:	e440110e 	bge	fp,r17,1000bc50 <___svfiprintf_internal_r+0xdd8>
1000bc0c:	18c00404 	addi	r3,r3,16
1000bc10:	10800044 	addi	r2,r2,1
1000bc14:	45800015 	stw	r22,0(r8)
1000bc18:	47000115 	stw	fp,4(r8)
1000bc1c:	d8c01c15 	stw	r3,112(sp)
1000bc20:	d8801b15 	stw	r2,108(sp)
1000bc24:	a8bff60e 	bge	r21,r2,1000bc00 <__alt_data_end+0xf800bc00>
1000bc28:	d9801a04 	addi	r6,sp,104
1000bc2c:	900b883a 	mov	r5,r18
1000bc30:	8009883a 	mov	r4,r16
1000bc34:	000aca80 	call	1000aca8 <__ssprint_r>
1000bc38:	103fcf1e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bc3c:	8c7ffc04 	addi	r17,r17,-16
1000bc40:	d8c01c17 	ldw	r3,112(sp)
1000bc44:	d8801b17 	ldw	r2,108(sp)
1000bc48:	d811883a 	mov	r8,sp
1000bc4c:	e47fef16 	blt	fp,r17,1000bc0c <__alt_data_end+0xf800bc0c>
1000bc50:	9825883a 	mov	r18,r19
1000bc54:	dc002217 	ldw	r16,136(sp)
1000bc58:	b827883a 	mov	r19,r23
1000bc5c:	882f883a 	mov	r23,r17
1000bc60:	dc402817 	ldw	r17,160(sp)
1000bc64:	d9402117 	ldw	r5,132(sp)
1000bc68:	1dc7883a 	add	r3,r3,r23
1000bc6c:	10800044 	addi	r2,r2,1
1000bc70:	41400015 	stw	r5,0(r8)
1000bc74:	45c00115 	stw	r23,4(r8)
1000bc78:	d8c01c15 	stw	r3,112(sp)
1000bc7c:	d8801b15 	stw	r2,108(sp)
1000bc80:	010001c4 	movi	r4,7
1000bc84:	2080b716 	blt	r4,r2,1000bf64 <___svfiprintf_internal_r+0x10ec>
1000bc88:	42000204 	addi	r8,r8,8
1000bc8c:	003f3c06 	br	1000b980 <__alt_data_end+0xf800b980>
1000bc90:	d9402317 	ldw	r5,140(sp)
1000bc94:	d9002717 	ldw	r4,156(sp)
1000bc98:	d9801a04 	addi	r6,sp,104
1000bc9c:	000aca80 	call	1000aca8 <__ssprint_r>
1000bca0:	103fb51e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bca4:	d8c01c17 	ldw	r3,112(sp)
1000bca8:	d811883a 	mov	r8,sp
1000bcac:	003f7106 	br	1000ba74 <__alt_data_end+0xf800ba74>
1000bcb0:	d9402317 	ldw	r5,140(sp)
1000bcb4:	d9002717 	ldw	r4,156(sp)
1000bcb8:	d9801a04 	addi	r6,sp,104
1000bcbc:	000aca80 	call	1000aca8 <__ssprint_r>
1000bcc0:	103fa126 	beq	r2,zero,1000bb48 <__alt_data_end+0xf800bb48>
1000bcc4:	003fac06 	br	1000bb78 <__alt_data_end+0xf800bb78>
1000bcc8:	d9402317 	ldw	r5,140(sp)
1000bccc:	d9002717 	ldw	r4,156(sp)
1000bcd0:	d9801a04 	addi	r6,sp,104
1000bcd4:	000aca80 	call	1000aca8 <__ssprint_r>
1000bcd8:	103fa71e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bcdc:	d811883a 	mov	r8,sp
1000bce0:	003c9e06 	br	1000af5c <__alt_data_end+0xf800af5c>
1000bce4:	d9402317 	ldw	r5,140(sp)
1000bce8:	d9002717 	ldw	r4,156(sp)
1000bcec:	d9801a04 	addi	r6,sp,104
1000bcf0:	000aca80 	call	1000aca8 <__ssprint_r>
1000bcf4:	103fa01e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bcf8:	d8c01c17 	ldw	r3,112(sp)
1000bcfc:	d8801b17 	ldw	r2,108(sp)
1000bd00:	d811883a 	mov	r8,sp
1000bd04:	003f5206 	br	1000ba50 <__alt_data_end+0xf800ba50>
1000bd08:	d9402317 	ldw	r5,140(sp)
1000bd0c:	d9002717 	ldw	r4,156(sp)
1000bd10:	d9801a04 	addi	r6,sp,104
1000bd14:	000aca80 	call	1000aca8 <__ssprint_r>
1000bd18:	103f971e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bd1c:	d8c01c17 	ldw	r3,112(sp)
1000bd20:	d8801b17 	ldw	r2,108(sp)
1000bd24:	d811883a 	mov	r8,sp
1000bd28:	003f0506 	br	1000b940 <__alt_data_end+0xf800b940>
1000bd2c:	d9402317 	ldw	r5,140(sp)
1000bd30:	d9002717 	ldw	r4,156(sp)
1000bd34:	d9801a04 	addi	r6,sp,104
1000bd38:	000aca80 	call	1000aca8 <__ssprint_r>
1000bd3c:	103f8e1e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bd40:	d8c01c17 	ldw	r3,112(sp)
1000bd44:	d8801b17 	ldw	r2,108(sp)
1000bd48:	d811883a 	mov	r8,sp
1000bd4c:	003f0906 	br	1000b974 <__alt_data_end+0xf800b974>
1000bd50:	d9402017 	ldw	r5,128(sp)
1000bd54:	d8001d85 	stb	zero,118(sp)
1000bd58:	28007716 	blt	r5,zero,1000bf38 <___svfiprintf_internal_r+0x10c0>
1000bd5c:	00ffdfc4 	movi	r3,-129
1000bd60:	9504b03a 	or	r2,r18,r20
1000bd64:	80e0703a 	and	r16,r16,r3
1000bd68:	103d3926 	beq	r2,zero,1000b250 <__alt_data_end+0xf800b250>
1000bd6c:	002b883a 	mov	r21,zero
1000bd70:	003d3c06 	br	1000b264 <__alt_data_end+0xf800b264>
1000bd74:	d9402317 	ldw	r5,140(sp)
1000bd78:	d9002717 	ldw	r4,156(sp)
1000bd7c:	d9801a04 	addi	r6,sp,104
1000bd80:	000aca80 	call	1000aca8 <__ssprint_r>
1000bd84:	103f7c1e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bd88:	d8c01c17 	ldw	r3,112(sp)
1000bd8c:	d8801b17 	ldw	r2,108(sp)
1000bd90:	d811883a 	mov	r8,sp
1000bd94:	003edd06 	br	1000b90c <__alt_data_end+0xf800b90c>
1000bd98:	8080100c 	andi	r2,r16,64
1000bd9c:	d8001d85 	stb	zero,118(sp)
1000bda0:	10008426 	beq	r2,zero,1000bfb4 <___svfiprintf_internal_r+0x113c>
1000bda4:	d9402417 	ldw	r5,144(sp)
1000bda8:	d8c02017 	ldw	r3,128(sp)
1000bdac:	0029883a 	mov	r20,zero
1000bdb0:	28800104 	addi	r2,r5,4
1000bdb4:	2c80000b 	ldhu	r18,0(r5)
1000bdb8:	183eab0e 	bge	r3,zero,1000b868 <__alt_data_end+0xf800b868>
1000bdbc:	d8802415 	stw	r2,144(sp)
1000bdc0:	002b883a 	mov	r21,zero
1000bdc4:	9504b03a 	or	r2,r18,r20
1000bdc8:	103e171e 	bne	r2,zero,1000b628 <__alt_data_end+0xf800b628>
1000bdcc:	00800044 	movi	r2,1
1000bdd0:	10803fcc 	andi	r2,r2,255
1000bdd4:	00c00044 	movi	r3,1
1000bdd8:	10c05c26 	beq	r2,r3,1000bf4c <___svfiprintf_internal_r+0x10d4>
1000bddc:	00c00084 	movi	r3,2
1000bde0:	10fd1e26 	beq	r2,r3,1000b25c <__alt_data_end+0xf800b25c>
1000bde4:	003ec406 	br	1000b8f8 <__alt_data_end+0xf800b8f8>
1000bde8:	d9401e17 	ldw	r5,120(sp)
1000bdec:	2c69c83a 	sub	r20,r5,r17
1000bdf0:	003d4506 	br	1000b308 <__alt_data_end+0xf800b308>
1000bdf4:	d8802415 	stw	r2,144(sp)
1000bdf8:	98c00007 	ldb	r3,0(r19)
1000bdfc:	003c6a06 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000be00:	d9402317 	ldw	r5,140(sp)
1000be04:	d9002717 	ldw	r4,156(sp)
1000be08:	d9801a04 	addi	r6,sp,104
1000be0c:	000aca80 	call	1000aca8 <__ssprint_r>
1000be10:	103f591e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000be14:	d8c01c17 	ldw	r3,112(sp)
1000be18:	003f4406 	br	1000bb2c <__alt_data_end+0xf800bb2c>
1000be1c:	01440074 	movhi	r5,4097
1000be20:	29504504 	addi	r5,r5,16660
1000be24:	d9402915 	stw	r5,164(sp)
1000be28:	003d0906 	br	1000b250 <__alt_data_end+0xf800b250>
1000be2c:	d8c02417 	ldw	r3,144(sp)
1000be30:	d9002617 	ldw	r4,152(sp)
1000be34:	d9402417 	ldw	r5,144(sp)
1000be38:	18800017 	ldw	r2,0(r3)
1000be3c:	2007d7fa 	srai	r3,r4,31
1000be40:	29400104 	addi	r5,r5,4
1000be44:	d9402415 	stw	r5,144(sp)
1000be48:	11000015 	stw	r4,0(r2)
1000be4c:	10c00115 	stw	r3,4(r2)
1000be50:	003c2b06 	br	1000af00 <__alt_data_end+0xf800af00>
1000be54:	d8c01d45 	stb	r3,117(sp)
1000be58:	d8c02017 	ldw	r3,128(sp)
1000be5c:	00800c04 	movi	r2,48
1000be60:	d8801d05 	stb	r2,116(sp)
1000be64:	d8001d85 	stb	zero,118(sp)
1000be68:	80800094 	ori	r2,r16,2
1000be6c:	1800ac16 	blt	r3,zero,1000c120 <___svfiprintf_internal_r+0x12a8>
1000be70:	00bfdfc4 	movi	r2,-129
1000be74:	80a0703a 	and	r16,r16,r2
1000be78:	84000094 	ori	r16,r16,2
1000be7c:	002b883a 	mov	r21,zero
1000be80:	003cf806 	br	1000b264 <__alt_data_end+0xf800b264>
1000be84:	98c00007 	ldb	r3,0(r19)
1000be88:	003c4706 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000be8c:	d9402417 	ldw	r5,144(sp)
1000be90:	2c800017 	ldw	r18,0(r5)
1000be94:	29400104 	addi	r5,r5,4
1000be98:	d9402415 	stw	r5,144(sp)
1000be9c:	9029d7fa 	srai	r20,r18,31
1000bea0:	a005883a 	mov	r2,r20
1000bea4:	003dd806 	br	1000b608 <__alt_data_end+0xf800b608>
1000bea8:	d9402417 	ldw	r5,144(sp)
1000beac:	0029883a 	mov	r20,zero
1000beb0:	2c800017 	ldw	r18,0(r5)
1000beb4:	29400104 	addi	r5,r5,4
1000beb8:	d9402415 	stw	r5,144(sp)
1000bebc:	003cdb06 	br	1000b22c <__alt_data_end+0xf800b22c>
1000bec0:	8080100c 	andi	r2,r16,64
1000bec4:	d8001d85 	stb	zero,118(sp)
1000bec8:	10003326 	beq	r2,zero,1000bf98 <___svfiprintf_internal_r+0x1120>
1000becc:	d9002417 	ldw	r4,144(sp)
1000bed0:	d9402017 	ldw	r5,128(sp)
1000bed4:	0029883a 	mov	r20,zero
1000bed8:	20800104 	addi	r2,r4,4
1000bedc:	2480000b 	ldhu	r18,0(r4)
1000bee0:	283e7e0e 	bge	r5,zero,1000b8dc <__alt_data_end+0xf800b8dc>
1000bee4:	9506b03a 	or	r3,r18,r20
1000bee8:	d8802415 	stw	r2,144(sp)
1000beec:	183d271e 	bne	r3,zero,1000b38c <__alt_data_end+0xf800b38c>
1000bef0:	002b883a 	mov	r21,zero
1000bef4:	0005883a 	mov	r2,zero
1000bef8:	003fb506 	br	1000bdd0 <__alt_data_end+0xf800bdd0>
1000befc:	98c00043 	ldbu	r3,1(r19)
1000bf00:	8c400814 	ori	r17,r17,32
1000bf04:	9cc00044 	addi	r19,r19,1
1000bf08:	18c03fcc 	andi	r3,r3,255
1000bf0c:	18c0201c 	xori	r3,r3,128
1000bf10:	18ffe004 	addi	r3,r3,-128
1000bf14:	003c2406 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000bf18:	d8c02415 	stw	r3,144(sp)
1000bf1c:	002b883a 	mov	r21,zero
1000bf20:	003fa806 	br	1000bdc4 <__alt_data_end+0xf800bdc4>
1000bf24:	01040074 	movhi	r4,4097
1000bf28:	21104504 	addi	r4,r4,16660
1000bf2c:	d9002915 	stw	r4,164(sp)
1000bf30:	d8c02415 	stw	r3,144(sp)
1000bf34:	1021883a 	mov	r16,r2
1000bf38:	9504b03a 	or	r2,r18,r20
1000bf3c:	103f8b1e 	bne	r2,zero,1000bd6c <__alt_data_end+0xf800bd6c>
1000bf40:	002b883a 	mov	r21,zero
1000bf44:	00800084 	movi	r2,2
1000bf48:	003fa106 	br	1000bdd0 <__alt_data_end+0xf800bdd0>
1000bf4c:	0025883a 	mov	r18,zero
1000bf50:	94800c04 	addi	r18,r18,48
1000bf54:	dc8019c5 	stb	r18,103(sp)
1000bf58:	dd002c17 	ldw	r20,176(sp)
1000bf5c:	dc4019c4 	addi	r17,sp,103
1000bf60:	003ce906 	br	1000b308 <__alt_data_end+0xf800b308>
1000bf64:	d9402317 	ldw	r5,140(sp)
1000bf68:	d9002717 	ldw	r4,156(sp)
1000bf6c:	d9801a04 	addi	r6,sp,104
1000bf70:	000aca80 	call	1000aca8 <__ssprint_r>
1000bf74:	103f001e 	bne	r2,zero,1000bb78 <__alt_data_end+0xf800bb78>
1000bf78:	d8c01c17 	ldw	r3,112(sp)
1000bf7c:	d8801b17 	ldw	r2,108(sp)
1000bf80:	d811883a 	mov	r8,sp
1000bf84:	003e7e06 	br	1000b980 <__alt_data_end+0xf800b980>
1000bf88:	01440074 	movhi	r5,4097
1000bf8c:	2950ae04 	addi	r5,r5,17080
1000bf90:	d9402115 	stw	r5,132(sp)
1000bf94:	003ea406 	br	1000ba28 <__alt_data_end+0xf800ba28>
1000bf98:	d8c02417 	ldw	r3,144(sp)
1000bf9c:	d9002017 	ldw	r4,128(sp)
1000bfa0:	0029883a 	mov	r20,zero
1000bfa4:	18800104 	addi	r2,r3,4
1000bfa8:	1c800017 	ldw	r18,0(r3)
1000bfac:	203e4b0e 	bge	r4,zero,1000b8dc <__alt_data_end+0xf800b8dc>
1000bfb0:	003fcc06 	br	1000bee4 <__alt_data_end+0xf800bee4>
1000bfb4:	d9002417 	ldw	r4,144(sp)
1000bfb8:	d9402017 	ldw	r5,128(sp)
1000bfbc:	0029883a 	mov	r20,zero
1000bfc0:	20800104 	addi	r2,r4,4
1000bfc4:	24800017 	ldw	r18,0(r4)
1000bfc8:	283e270e 	bge	r5,zero,1000b868 <__alt_data_end+0xf800b868>
1000bfcc:	003f7b06 	br	1000bdbc <__alt_data_end+0xf800bdbc>
1000bfd0:	8400100c 	andi	r16,r16,64
1000bfd4:	80003326 	beq	r16,zero,1000c0a4 <___svfiprintf_internal_r+0x122c>
1000bfd8:	d9402417 	ldw	r5,144(sp)
1000bfdc:	d8c02617 	ldw	r3,152(sp)
1000bfe0:	28800017 	ldw	r2,0(r5)
1000bfe4:	29400104 	addi	r5,r5,4
1000bfe8:	d9402415 	stw	r5,144(sp)
1000bfec:	10c0000d 	sth	r3,0(r2)
1000bff0:	003bc306 	br	1000af00 <__alt_data_end+0xf800af00>
1000bff4:	d9002417 	ldw	r4,144(sp)
1000bff8:	0029883a 	mov	r20,zero
1000bffc:	24800017 	ldw	r18,0(r4)
1000c000:	21000104 	addi	r4,r4,4
1000c004:	d9002415 	stw	r4,144(sp)
1000c008:	003c8806 	br	1000b22c <__alt_data_end+0xf800b22c>
1000c00c:	d8c02417 	ldw	r3,144(sp)
1000c010:	1c800017 	ldw	r18,0(r3)
1000c014:	18c00104 	addi	r3,r3,4
1000c018:	d8c02415 	stw	r3,144(sp)
1000c01c:	9029d7fa 	srai	r20,r18,31
1000c020:	a005883a 	mov	r2,r20
1000c024:	003d7806 	br	1000b608 <__alt_data_end+0xf800b608>
1000c028:	8809883a 	mov	r4,r17
1000c02c:	da002d15 	stw	r8,180(sp)
1000c030:	00012700 	call	10001270 <strlen>
1000c034:	1029883a 	mov	r20,r2
1000c038:	dd401d83 	ldbu	r21,118(sp)
1000c03c:	ddc02415 	stw	r23,144(sp)
1000c040:	d8002015 	stw	zero,128(sp)
1000c044:	da002d17 	ldw	r8,180(sp)
1000c048:	003caf06 	br	1000b308 <__alt_data_end+0xf800b308>
1000c04c:	013fffc4 	movi	r4,-1
1000c050:	003df206 	br	1000b81c <__alt_data_end+0xf800b81c>
1000c054:	dd002017 	ldw	r20,128(sp)
1000c058:	00800184 	movi	r2,6
1000c05c:	1500012e 	bgeu	r2,r20,1000c064 <___svfiprintf_internal_r+0x11ec>
1000c060:	1029883a 	mov	r20,r2
1000c064:	a025883a 	mov	r18,r20
1000c068:	a0004116 	blt	r20,zero,1000c170 <___svfiprintf_internal_r+0x12f8>
1000c06c:	04440074 	movhi	r17,4097
1000c070:	ddc02415 	stw	r23,144(sp)
1000c074:	8c504a04 	addi	r17,r17,16680
1000c078:	003ce806 	br	1000b41c <__alt_data_end+0xf800b41c>
1000c07c:	04001004 	movi	r16,64
1000c080:	800b883a 	mov	r5,r16
1000c084:	00086f00 	call	100086f0 <_malloc_r>
1000c088:	d8c02317 	ldw	r3,140(sp)
1000c08c:	18800015 	stw	r2,0(r3)
1000c090:	18800415 	stw	r2,16(r3)
1000c094:	10004d26 	beq	r2,zero,1000c1cc <___svfiprintf_internal_r+0x1354>
1000c098:	d9402317 	ldw	r5,140(sp)
1000c09c:	2c000515 	stw	r16,20(r5)
1000c0a0:	003b8906 	br	1000aec8 <__alt_data_end+0xf800aec8>
1000c0a4:	d9002417 	ldw	r4,144(sp)
1000c0a8:	d9402617 	ldw	r5,152(sp)
1000c0ac:	20800017 	ldw	r2,0(r4)
1000c0b0:	21000104 	addi	r4,r4,4
1000c0b4:	d9002415 	stw	r4,144(sp)
1000c0b8:	11400015 	stw	r5,0(r2)
1000c0bc:	003b9006 	br	1000af00 <__alt_data_end+0xf800af00>
1000c0c0:	8080004c 	andi	r2,r16,1
1000c0c4:	002b883a 	mov	r21,zero
1000c0c8:	10000526 	beq	r2,zero,1000c0e0 <___svfiprintf_internal_r+0x1268>
1000c0cc:	00800c04 	movi	r2,48
1000c0d0:	d88019c5 	stb	r2,103(sp)
1000c0d4:	dd002c17 	ldw	r20,176(sp)
1000c0d8:	dc4019c4 	addi	r17,sp,103
1000c0dc:	003c8a06 	br	1000b308 <__alt_data_end+0xf800b308>
1000c0e0:	0029883a 	mov	r20,zero
1000c0e4:	dc401a04 	addi	r17,sp,104
1000c0e8:	003c8706 	br	1000b308 <__alt_data_end+0xf800b308>
1000c0ec:	01440074 	movhi	r5,4097
1000c0f0:	2950b204 	addi	r5,r5,17096
1000c0f4:	d9402815 	stw	r5,160(sp)
1000c0f8:	003cff06 	br	1000b4f8 <__alt_data_end+0xf800b4f8>
1000c0fc:	00bfffc4 	movi	r2,-1
1000c100:	003ea206 	br	1000bb8c <__alt_data_end+0xf800bb8c>
1000c104:	00800044 	movi	r2,1
1000c108:	10803fcc 	andi	r2,r2,255
1000c10c:	00c00044 	movi	r3,1
1000c110:	10fd4526 	beq	r2,r3,1000b628 <__alt_data_end+0xf800b628>
1000c114:	00c00084 	movi	r3,2
1000c118:	10fc5226 	beq	r2,r3,1000b264 <__alt_data_end+0xf800b264>
1000c11c:	003c9c06 	br	1000b390 <__alt_data_end+0xf800b390>
1000c120:	1021883a 	mov	r16,r2
1000c124:	002b883a 	mov	r21,zero
1000c128:	00800084 	movi	r2,2
1000c12c:	003ff606 	br	1000c108 <__alt_data_end+0xf800c108>
1000c130:	01040074 	movhi	r4,4097
1000c134:	2110b204 	addi	r4,r4,17096
1000c138:	d9002815 	stw	r4,160(sp)
1000c13c:	003e7206 	br	1000bb08 <__alt_data_end+0xf800bb08>
1000c140:	01440074 	movhi	r5,4097
1000c144:	2950ae04 	addi	r5,r5,17080
1000c148:	d9402115 	stw	r5,132(sp)
1000c14c:	003ec506 	br	1000bc64 <__alt_data_end+0xf800bc64>
1000c150:	e027883a 	mov	r19,fp
1000c154:	d8002015 	stw	zero,128(sp)
1000c158:	003b9406 	br	1000afac <__alt_data_end+0xf800afac>
1000c15c:	dd002017 	ldw	r20,128(sp)
1000c160:	dd401d83 	ldbu	r21,118(sp)
1000c164:	ddc02415 	stw	r23,144(sp)
1000c168:	d8002015 	stw	zero,128(sp)
1000c16c:	003c6606 	br	1000b308 <__alt_data_end+0xf800b308>
1000c170:	0025883a 	mov	r18,zero
1000c174:	003fbd06 	br	1000c06c <__alt_data_end+0xf800c06c>
1000c178:	d9402417 	ldw	r5,144(sp)
1000c17c:	d8c02417 	ldw	r3,144(sp)
1000c180:	29400017 	ldw	r5,0(r5)
1000c184:	19000104 	addi	r4,r3,4
1000c188:	d9002415 	stw	r4,144(sp)
1000c18c:	d9402015 	stw	r5,128(sp)
1000c190:	98c00043 	ldbu	r3,1(r19)
1000c194:	e027883a 	mov	r19,fp
1000c198:	283f5b0e 	bge	r5,zero,1000bf08 <__alt_data_end+0xf800bf08>
1000c19c:	18c03fcc 	andi	r3,r3,255
1000c1a0:	013fffc4 	movi	r4,-1
1000c1a4:	18c0201c 	xori	r3,r3,128
1000c1a8:	d9002015 	stw	r4,128(sp)
1000c1ac:	18ffe004 	addi	r3,r3,-128
1000c1b0:	003b7d06 	br	1000afa8 <__alt_data_end+0xf800afa8>
1000c1b4:	dd401d85 	stb	r21,118(sp)
1000c1b8:	003cf306 	br	1000b588 <__alt_data_end+0xf800b588>
1000c1bc:	dd401d85 	stb	r21,118(sp)
1000c1c0:	003d4e06 	br	1000b6fc <__alt_data_end+0xf800b6fc>
1000c1c4:	dd401d85 	stb	r21,118(sp)
1000c1c8:	003c0e06 	br	1000b204 <__alt_data_end+0xf800b204>
1000c1cc:	d9002717 	ldw	r4,156(sp)
1000c1d0:	00800304 	movi	r2,12
1000c1d4:	20800015 	stw	r2,0(r4)
1000c1d8:	00bfffc4 	movi	r2,-1
1000c1dc:	003e6b06 	br	1000bb8c <__alt_data_end+0xf800bb8c>
1000c1e0:	dd401d85 	stb	r21,118(sp)
1000c1e4:	003d0006 	br	1000b5e8 <__alt_data_end+0xf800b5e8>
1000c1e8:	dd401d85 	stb	r21,118(sp)
1000c1ec:	003d7106 	br	1000b7b4 <__alt_data_end+0xf800b7b4>
1000c1f0:	dd401d85 	stb	r21,118(sp)
1000c1f4:	003c5706 	br	1000b354 <__alt_data_end+0xf800b354>
1000c1f8:	dd401d85 	stb	r21,118(sp)
1000c1fc:	003c2e06 	br	1000b2b8 <__alt_data_end+0xf800b2b8>
1000c200:	dd401d85 	stb	r21,118(sp)
1000c204:	003d8c06 	br	1000b838 <__alt_data_end+0xf800b838>
1000c208:	dd401d85 	stb	r21,118(sp)
1000c20c:	003da706 	br	1000b8ac <__alt_data_end+0xf800b8ac>
1000c210:	dd401d85 	stb	r21,118(sp)
1000c214:	003cc806 	br	1000b538 <__alt_data_end+0xf800b538>

1000c218 <__sprint_r.part.0>:
1000c218:	28801917 	ldw	r2,100(r5)
1000c21c:	defff604 	addi	sp,sp,-40
1000c220:	dd400515 	stw	r21,20(sp)
1000c224:	dfc00915 	stw	ra,36(sp)
1000c228:	df000815 	stw	fp,32(sp)
1000c22c:	ddc00715 	stw	r23,28(sp)
1000c230:	dd800615 	stw	r22,24(sp)
1000c234:	dd000415 	stw	r20,16(sp)
1000c238:	dcc00315 	stw	r19,12(sp)
1000c23c:	dc800215 	stw	r18,8(sp)
1000c240:	dc400115 	stw	r17,4(sp)
1000c244:	dc000015 	stw	r16,0(sp)
1000c248:	1088000c 	andi	r2,r2,8192
1000c24c:	302b883a 	mov	r21,r6
1000c250:	10002e26 	beq	r2,zero,1000c30c <__sprint_r.part.0+0xf4>
1000c254:	30800217 	ldw	r2,8(r6)
1000c258:	35800017 	ldw	r22,0(r6)
1000c25c:	10002926 	beq	r2,zero,1000c304 <__sprint_r.part.0+0xec>
1000c260:	2827883a 	mov	r19,r5
1000c264:	2029883a 	mov	r20,r4
1000c268:	b5c00104 	addi	r23,r22,4
1000c26c:	04bfffc4 	movi	r18,-1
1000c270:	bc400017 	ldw	r17,0(r23)
1000c274:	b4000017 	ldw	r16,0(r22)
1000c278:	0039883a 	mov	fp,zero
1000c27c:	8822d0ba 	srli	r17,r17,2
1000c280:	8800031e 	bne	r17,zero,1000c290 <__sprint_r.part.0+0x78>
1000c284:	00001806 	br	1000c2e8 <__sprint_r.part.0+0xd0>
1000c288:	84000104 	addi	r16,r16,4
1000c28c:	8f001526 	beq	r17,fp,1000c2e4 <__sprint_r.part.0+0xcc>
1000c290:	81400017 	ldw	r5,0(r16)
1000c294:	980d883a 	mov	r6,r19
1000c298:	a009883a 	mov	r4,r20
1000c29c:	000dd080 	call	1000dd08 <_fputwc_r>
1000c2a0:	e7000044 	addi	fp,fp,1
1000c2a4:	14bff81e 	bne	r2,r18,1000c288 <__alt_data_end+0xf800c288>
1000c2a8:	9005883a 	mov	r2,r18
1000c2ac:	a8000215 	stw	zero,8(r21)
1000c2b0:	a8000115 	stw	zero,4(r21)
1000c2b4:	dfc00917 	ldw	ra,36(sp)
1000c2b8:	df000817 	ldw	fp,32(sp)
1000c2bc:	ddc00717 	ldw	r23,28(sp)
1000c2c0:	dd800617 	ldw	r22,24(sp)
1000c2c4:	dd400517 	ldw	r21,20(sp)
1000c2c8:	dd000417 	ldw	r20,16(sp)
1000c2cc:	dcc00317 	ldw	r19,12(sp)
1000c2d0:	dc800217 	ldw	r18,8(sp)
1000c2d4:	dc400117 	ldw	r17,4(sp)
1000c2d8:	dc000017 	ldw	r16,0(sp)
1000c2dc:	dec00a04 	addi	sp,sp,40
1000c2e0:	f800283a 	ret
1000c2e4:	a8800217 	ldw	r2,8(r21)
1000c2e8:	8c63883a 	add	r17,r17,r17
1000c2ec:	8c63883a 	add	r17,r17,r17
1000c2f0:	1445c83a 	sub	r2,r2,r17
1000c2f4:	a8800215 	stw	r2,8(r21)
1000c2f8:	b5800204 	addi	r22,r22,8
1000c2fc:	bdc00204 	addi	r23,r23,8
1000c300:	103fdb1e 	bne	r2,zero,1000c270 <__alt_data_end+0xf800c270>
1000c304:	0005883a 	mov	r2,zero
1000c308:	003fe806 	br	1000c2ac <__alt_data_end+0xf800c2ac>
1000c30c:	0007e080 	call	10007e08 <__sfvwrite_r>
1000c310:	003fe606 	br	1000c2ac <__alt_data_end+0xf800c2ac>

1000c314 <__sprint_r>:
1000c314:	30c00217 	ldw	r3,8(r6)
1000c318:	18000126 	beq	r3,zero,1000c320 <__sprint_r+0xc>
1000c31c:	000c2181 	jmpi	1000c218 <__sprint_r.part.0>
1000c320:	30000115 	stw	zero,4(r6)
1000c324:	0005883a 	mov	r2,zero
1000c328:	f800283a 	ret

1000c32c <___vfiprintf_internal_r>:
1000c32c:	deffca04 	addi	sp,sp,-216
1000c330:	dd403115 	stw	r21,196(sp)
1000c334:	dfc03515 	stw	ra,212(sp)
1000c338:	df003415 	stw	fp,208(sp)
1000c33c:	ddc03315 	stw	r23,204(sp)
1000c340:	dd803215 	stw	r22,200(sp)
1000c344:	dd003015 	stw	r20,192(sp)
1000c348:	dcc02f15 	stw	r19,188(sp)
1000c34c:	dc802e15 	stw	r18,184(sp)
1000c350:	dc402d15 	stw	r17,180(sp)
1000c354:	dc002c15 	stw	r16,176(sp)
1000c358:	d9002115 	stw	r4,132(sp)
1000c35c:	d9402015 	stw	r5,128(sp)
1000c360:	d9c02215 	stw	r7,136(sp)
1000c364:	302b883a 	mov	r21,r6
1000c368:	20000226 	beq	r4,zero,1000c374 <___vfiprintf_internal_r+0x48>
1000c36c:	20800e17 	ldw	r2,56(r4)
1000c370:	1000cf26 	beq	r2,zero,1000c6b0 <___vfiprintf_internal_r+0x384>
1000c374:	d8c02017 	ldw	r3,128(sp)
1000c378:	1880030b 	ldhu	r2,12(r3)
1000c37c:	10c8000c 	andi	r3,r2,8192
1000c380:	1800071e 	bne	r3,zero,1000c3a0 <___vfiprintf_internal_r+0x74>
1000c384:	d9402017 	ldw	r5,128(sp)
1000c388:	00f7ffc4 	movi	r3,-8193
1000c38c:	10880014 	ori	r2,r2,8192
1000c390:	29001917 	ldw	r4,100(r5)
1000c394:	2880030d 	sth	r2,12(r5)
1000c398:	20c6703a 	and	r3,r4,r3
1000c39c:	28c01915 	stw	r3,100(r5)
1000c3a0:	10c0020c 	andi	r3,r2,8
1000c3a4:	1800a526 	beq	r3,zero,1000c63c <___vfiprintf_internal_r+0x310>
1000c3a8:	d9002017 	ldw	r4,128(sp)
1000c3ac:	20c00417 	ldw	r3,16(r4)
1000c3b0:	1800a226 	beq	r3,zero,1000c63c <___vfiprintf_internal_r+0x310>
1000c3b4:	1080068c 	andi	r2,r2,26
1000c3b8:	00c00284 	movi	r3,10
1000c3bc:	10c0a826 	beq	r2,r3,1000c660 <___vfiprintf_internal_r+0x334>
1000c3c0:	d9001a04 	addi	r4,sp,104
1000c3c4:	d94019c4 	addi	r5,sp,103
1000c3c8:	04840074 	movhi	r18,4097
1000c3cc:	2145c83a 	sub	r2,r4,r5
1000c3d0:	9490b604 	addi	r18,r18,17112
1000c3d4:	d9001e15 	stw	r4,120(sp)
1000c3d8:	d9401f15 	stw	r5,124(sp)
1000c3dc:	dec01a15 	stw	sp,104(sp)
1000c3e0:	d8001c15 	stw	zero,112(sp)
1000c3e4:	d8001b15 	stw	zero,108(sp)
1000c3e8:	d811883a 	mov	r8,sp
1000c3ec:	d8002615 	stw	zero,152(sp)
1000c3f0:	d8002415 	stw	zero,144(sp)
1000c3f4:	d8802815 	stw	r2,160(sp)
1000c3f8:	a82d883a 	mov	r22,r21
1000c3fc:	b0800007 	ldb	r2,0(r22)
1000c400:	10040d26 	beq	r2,zero,1000d438 <___vfiprintf_internal_r+0x110c>
1000c404:	00c00944 	movi	r3,37
1000c408:	b029883a 	mov	r20,r22
1000c40c:	10c0021e 	bne	r2,r3,1000c418 <___vfiprintf_internal_r+0xec>
1000c410:	00001606 	br	1000c46c <___vfiprintf_internal_r+0x140>
1000c414:	10c00326 	beq	r2,r3,1000c424 <___vfiprintf_internal_r+0xf8>
1000c418:	a5000044 	addi	r20,r20,1
1000c41c:	a0800007 	ldb	r2,0(r20)
1000c420:	103ffc1e 	bne	r2,zero,1000c414 <__alt_data_end+0xf800c414>
1000c424:	a5a1c83a 	sub	r16,r20,r22
1000c428:	80001026 	beq	r16,zero,1000c46c <___vfiprintf_internal_r+0x140>
1000c42c:	d8c01c17 	ldw	r3,112(sp)
1000c430:	d8801b17 	ldw	r2,108(sp)
1000c434:	45800015 	stw	r22,0(r8)
1000c438:	80c7883a 	add	r3,r16,r3
1000c43c:	10800044 	addi	r2,r2,1
1000c440:	44000115 	stw	r16,4(r8)
1000c444:	d8c01c15 	stw	r3,112(sp)
1000c448:	d8801b15 	stw	r2,108(sp)
1000c44c:	010001c4 	movi	r4,7
1000c450:	2080750e 	bge	r4,r2,1000c628 <___vfiprintf_internal_r+0x2fc>
1000c454:	1803951e 	bne	r3,zero,1000d2ac <___vfiprintf_internal_r+0xf80>
1000c458:	d8c02417 	ldw	r3,144(sp)
1000c45c:	d8001b15 	stw	zero,108(sp)
1000c460:	d811883a 	mov	r8,sp
1000c464:	1c07883a 	add	r3,r3,r16
1000c468:	d8c02415 	stw	r3,144(sp)
1000c46c:	a0800007 	ldb	r2,0(r20)
1000c470:	1002e026 	beq	r2,zero,1000cff4 <___vfiprintf_internal_r+0xcc8>
1000c474:	a5800044 	addi	r22,r20,1
1000c478:	a0c00047 	ldb	r3,1(r20)
1000c47c:	d8001d85 	stb	zero,118(sp)
1000c480:	0027883a 	mov	r19,zero
1000c484:	d8002305 	stb	zero,140(sp)
1000c488:	043fffc4 	movi	r16,-1
1000c48c:	d8002515 	stw	zero,148(sp)
1000c490:	0023883a 	mov	r17,zero
1000c494:	05001604 	movi	r20,88
1000c498:	05400244 	movi	r21,9
1000c49c:	402f883a 	mov	r23,r8
1000c4a0:	b5800044 	addi	r22,r22,1
1000c4a4:	18bff804 	addi	r2,r3,-32
1000c4a8:	a0827736 	bltu	r20,r2,1000ce88 <___vfiprintf_internal_r+0xb5c>
1000c4ac:	100490ba 	slli	r2,r2,2
1000c4b0:	01040074 	movhi	r4,4097
1000c4b4:	21313104 	addi	r4,r4,-15164
1000c4b8:	1105883a 	add	r2,r2,r4
1000c4bc:	10800017 	ldw	r2,0(r2)
1000c4c0:	1000683a 	jmp	r2
1000c4c4:	1000cb88 	cmpgei	zero,r2,814
1000c4c8:	1000ce88 	cmpgei	zero,r2,826
1000c4cc:	1000ce88 	cmpgei	zero,r2,826
1000c4d0:	1000cba4 	muli	zero,r2,814
1000c4d4:	1000ce88 	cmpgei	zero,r2,826
1000c4d8:	1000ce88 	cmpgei	zero,r2,826
1000c4dc:	1000ce88 	cmpgei	zero,r2,826
1000c4e0:	1000ce88 	cmpgei	zero,r2,826
1000c4e4:	1000ce88 	cmpgei	zero,r2,826
1000c4e8:	1000ce88 	cmpgei	zero,r2,826
1000c4ec:	1000cdac 	andhi	zero,r2,822
1000c4f0:	1000cdd0 	cmplti	zero,r2,823
1000c4f4:	1000ce88 	cmpgei	zero,r2,826
1000c4f8:	1000c6c8 	cmpgei	zero,r2,795
1000c4fc:	1000cde4 	muli	zero,r2,823
1000c500:	1000ce88 	cmpgei	zero,r2,826
1000c504:	1000cbb0 	cmpltui	zero,r2,814
1000c508:	1000cbbc 	xorhi	zero,r2,814
1000c50c:	1000cbbc 	xorhi	zero,r2,814
1000c510:	1000cbbc 	xorhi	zero,r2,814
1000c514:	1000cbbc 	xorhi	zero,r2,814
1000c518:	1000cbbc 	xorhi	zero,r2,814
1000c51c:	1000cbbc 	xorhi	zero,r2,814
1000c520:	1000cbbc 	xorhi	zero,r2,814
1000c524:	1000cbbc 	xorhi	zero,r2,814
1000c528:	1000cbbc 	xorhi	zero,r2,814
1000c52c:	1000ce88 	cmpgei	zero,r2,826
1000c530:	1000ce88 	cmpgei	zero,r2,826
1000c534:	1000ce88 	cmpgei	zero,r2,826
1000c538:	1000ce88 	cmpgei	zero,r2,826
1000c53c:	1000ce88 	cmpgei	zero,r2,826
1000c540:	1000ce88 	cmpgei	zero,r2,826
1000c544:	1000ce88 	cmpgei	zero,r2,826
1000c548:	1000ce88 	cmpgei	zero,r2,826
1000c54c:	1000ce88 	cmpgei	zero,r2,826
1000c550:	1000ce88 	cmpgei	zero,r2,826
1000c554:	1000cbfc 	xorhi	zero,r2,815
1000c558:	1000ce88 	cmpgei	zero,r2,826
1000c55c:	1000ce88 	cmpgei	zero,r2,826
1000c560:	1000ce88 	cmpgei	zero,r2,826
1000c564:	1000ce88 	cmpgei	zero,r2,826
1000c568:	1000ce88 	cmpgei	zero,r2,826
1000c56c:	1000ce88 	cmpgei	zero,r2,826
1000c570:	1000ce88 	cmpgei	zero,r2,826
1000c574:	1000ce88 	cmpgei	zero,r2,826
1000c578:	1000ce88 	cmpgei	zero,r2,826
1000c57c:	1000ce88 	cmpgei	zero,r2,826
1000c580:	1000cc38 	rdprs	zero,r2,816
1000c584:	1000ce88 	cmpgei	zero,r2,826
1000c588:	1000ce88 	cmpgei	zero,r2,826
1000c58c:	1000ce88 	cmpgei	zero,r2,826
1000c590:	1000ce88 	cmpgei	zero,r2,826
1000c594:	1000ce88 	cmpgei	zero,r2,826
1000c598:	1000cc94 	ori	zero,r2,818
1000c59c:	1000ce88 	cmpgei	zero,r2,826
1000c5a0:	1000ce88 	cmpgei	zero,r2,826
1000c5a4:	1000cd08 	cmpgei	zero,r2,820
1000c5a8:	1000ce88 	cmpgei	zero,r2,826
1000c5ac:	1000ce88 	cmpgei	zero,r2,826
1000c5b0:	1000ce88 	cmpgei	zero,r2,826
1000c5b4:	1000ce88 	cmpgei	zero,r2,826
1000c5b8:	1000ce88 	cmpgei	zero,r2,826
1000c5bc:	1000ce88 	cmpgei	zero,r2,826
1000c5c0:	1000ce88 	cmpgei	zero,r2,826
1000c5c4:	1000ce88 	cmpgei	zero,r2,826
1000c5c8:	1000ce88 	cmpgei	zero,r2,826
1000c5cc:	1000ce88 	cmpgei	zero,r2,826
1000c5d0:	1000cab0 	cmpltui	zero,r2,810
1000c5d4:	1000cae0 	cmpeqi	zero,r2,811
1000c5d8:	1000ce88 	cmpgei	zero,r2,826
1000c5dc:	1000ce88 	cmpgei	zero,r2,826
1000c5e0:	1000ce88 	cmpgei	zero,r2,826
1000c5e4:	1000ce30 	cmpltui	zero,r2,824
1000c5e8:	1000cae0 	cmpeqi	zero,r2,811
1000c5ec:	1000ce88 	cmpgei	zero,r2,826
1000c5f0:	1000ce88 	cmpgei	zero,r2,826
1000c5f4:	1000c988 	cmpgei	zero,r2,806
1000c5f8:	1000ce88 	cmpgei	zero,r2,826
1000c5fc:	1000c99c 	xori	zero,r2,806
1000c600:	1000c9d4 	ori	zero,r2,807
1000c604:	1000c6d4 	ori	zero,r2,795
1000c608:	1000c97c 	xorhi	zero,r2,805
1000c60c:	1000ce88 	cmpgei	zero,r2,826
1000c610:	1000cd48 	cmpgei	zero,r2,821
1000c614:	1000ce88 	cmpgei	zero,r2,826
1000c618:	1000cd94 	ori	zero,r2,822
1000c61c:	1000ce88 	cmpgei	zero,r2,826
1000c620:	1000ce88 	cmpgei	zero,r2,826
1000c624:	1000ca58 	cmpnei	zero,r2,809
1000c628:	42000204 	addi	r8,r8,8
1000c62c:	d8c02417 	ldw	r3,144(sp)
1000c630:	1c07883a 	add	r3,r3,r16
1000c634:	d8c02415 	stw	r3,144(sp)
1000c638:	003f8c06 	br	1000c46c <__alt_data_end+0xf800c46c>
1000c63c:	d9402017 	ldw	r5,128(sp)
1000c640:	d9002117 	ldw	r4,132(sp)
1000c644:	00059780 	call	10005978 <__swsetup_r>
1000c648:	1003c11e 	bne	r2,zero,1000d550 <___vfiprintf_internal_r+0x1224>
1000c64c:	d9402017 	ldw	r5,128(sp)
1000c650:	00c00284 	movi	r3,10
1000c654:	2880030b 	ldhu	r2,12(r5)
1000c658:	1080068c 	andi	r2,r2,26
1000c65c:	10ff581e 	bne	r2,r3,1000c3c0 <__alt_data_end+0xf800c3c0>
1000c660:	d8c02017 	ldw	r3,128(sp)
1000c664:	1880038f 	ldh	r2,14(r3)
1000c668:	103f5516 	blt	r2,zero,1000c3c0 <__alt_data_end+0xf800c3c0>
1000c66c:	d9c02217 	ldw	r7,136(sp)
1000c670:	d9002117 	ldw	r4,132(sp)
1000c674:	a80d883a 	mov	r6,r21
1000c678:	180b883a 	mov	r5,r3
1000c67c:	000d8540 	call	1000d854 <__sbprintf>
1000c680:	dfc03517 	ldw	ra,212(sp)
1000c684:	df003417 	ldw	fp,208(sp)
1000c688:	ddc03317 	ldw	r23,204(sp)
1000c68c:	dd803217 	ldw	r22,200(sp)
1000c690:	dd403117 	ldw	r21,196(sp)
1000c694:	dd003017 	ldw	r20,192(sp)
1000c698:	dcc02f17 	ldw	r19,188(sp)
1000c69c:	dc802e17 	ldw	r18,184(sp)
1000c6a0:	dc402d17 	ldw	r17,180(sp)
1000c6a4:	dc002c17 	ldw	r16,176(sp)
1000c6a8:	dec03604 	addi	sp,sp,216
1000c6ac:	f800283a 	ret
1000c6b0:	00079840 	call	10007984 <__sinit>
1000c6b4:	003f2f06 	br	1000c374 <__alt_data_end+0xf800c374>
1000c6b8:	d8c02517 	ldw	r3,148(sp)
1000c6bc:	d8802215 	stw	r2,136(sp)
1000c6c0:	00c7c83a 	sub	r3,zero,r3
1000c6c4:	d8c02515 	stw	r3,148(sp)
1000c6c8:	8c400114 	ori	r17,r17,4
1000c6cc:	b0c00007 	ldb	r3,0(r22)
1000c6d0:	003f7306 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000c6d4:	00800c04 	movi	r2,48
1000c6d8:	d9402217 	ldw	r5,136(sp)
1000c6dc:	d8801d05 	stb	r2,116(sp)
1000c6e0:	00801e04 	movi	r2,120
1000c6e4:	d8801d45 	stb	r2,117(sp)
1000c6e8:	d8001d85 	stb	zero,118(sp)
1000c6ec:	b811883a 	mov	r8,r23
1000c6f0:	28c00104 	addi	r3,r5,4
1000c6f4:	2cc00017 	ldw	r19,0(r5)
1000c6f8:	0029883a 	mov	r20,zero
1000c6fc:	88800094 	ori	r2,r17,2
1000c700:	80032516 	blt	r16,zero,1000d398 <___vfiprintf_internal_r+0x106c>
1000c704:	00bfdfc4 	movi	r2,-129
1000c708:	88a2703a 	and	r17,r17,r2
1000c70c:	d8c02215 	stw	r3,136(sp)
1000c710:	8c400094 	ori	r17,r17,2
1000c714:	98032a1e 	bne	r19,zero,1000d3c0 <___vfiprintf_internal_r+0x1094>
1000c718:	00840074 	movhi	r2,4097
1000c71c:	10904504 	addi	r2,r2,16660
1000c720:	d8802615 	stw	r2,152(sp)
1000c724:	002b883a 	mov	r21,zero
1000c728:	8001741e 	bne	r16,zero,1000ccfc <___vfiprintf_internal_r+0x9d0>
1000c72c:	0021883a 	mov	r16,zero
1000c730:	0029883a 	mov	r20,zero
1000c734:	ddc01a04 	addi	r23,sp,104
1000c738:	8027883a 	mov	r19,r16
1000c73c:	8500010e 	bge	r16,r20,1000c744 <___vfiprintf_internal_r+0x418>
1000c740:	a027883a 	mov	r19,r20
1000c744:	ad403fcc 	andi	r21,r21,255
1000c748:	ad40201c 	xori	r21,r21,128
1000c74c:	ad7fe004 	addi	r21,r21,-128
1000c750:	a8000126 	beq	r21,zero,1000c758 <___vfiprintf_internal_r+0x42c>
1000c754:	9cc00044 	addi	r19,r19,1
1000c758:	89c0008c 	andi	r7,r17,2
1000c75c:	38000126 	beq	r7,zero,1000c764 <___vfiprintf_internal_r+0x438>
1000c760:	9cc00084 	addi	r19,r19,2
1000c764:	88c0210c 	andi	r3,r17,132
1000c768:	1801dd1e 	bne	r3,zero,1000cee0 <___vfiprintf_internal_r+0xbb4>
1000c76c:	d9402517 	ldw	r5,148(sp)
1000c770:	2cebc83a 	sub	r21,r5,r19
1000c774:	0541da0e 	bge	zero,r21,1000cee0 <___vfiprintf_internal_r+0xbb4>
1000c778:	07000404 	movi	fp,16
1000c77c:	d8801c17 	ldw	r2,112(sp)
1000c780:	e543be0e 	bge	fp,r21,1000d67c <___vfiprintf_internal_r+0x1350>
1000c784:	01440074 	movhi	r5,4097
1000c788:	2950ba04 	addi	r5,r5,17128
1000c78c:	dc002715 	stw	r16,156(sp)
1000c790:	d9801b17 	ldw	r6,108(sp)
1000c794:	a821883a 	mov	r16,r21
1000c798:	d9402315 	stw	r5,140(sp)
1000c79c:	028001c4 	movi	r10,7
1000c7a0:	d9c02915 	stw	r7,164(sp)
1000c7a4:	182b883a 	mov	r21,r3
1000c7a8:	00000506 	br	1000c7c0 <___vfiprintf_internal_r+0x494>
1000c7ac:	31000084 	addi	r4,r6,2
1000c7b0:	42000204 	addi	r8,r8,8
1000c7b4:	180d883a 	mov	r6,r3
1000c7b8:	843ffc04 	addi	r16,r16,-16
1000c7bc:	e4000f0e 	bge	fp,r16,1000c7fc <___vfiprintf_internal_r+0x4d0>
1000c7c0:	01040074 	movhi	r4,4097
1000c7c4:	10800404 	addi	r2,r2,16
1000c7c8:	30c00044 	addi	r3,r6,1
1000c7cc:	2110ba04 	addi	r4,r4,17128
1000c7d0:	41000015 	stw	r4,0(r8)
1000c7d4:	47000115 	stw	fp,4(r8)
1000c7d8:	d8801c15 	stw	r2,112(sp)
1000c7dc:	d8c01b15 	stw	r3,108(sp)
1000c7e0:	50fff20e 	bge	r10,r3,1000c7ac <__alt_data_end+0xf800c7ac>
1000c7e4:	1001b21e 	bne	r2,zero,1000ceb0 <___vfiprintf_internal_r+0xb84>
1000c7e8:	843ffc04 	addi	r16,r16,-16
1000c7ec:	000d883a 	mov	r6,zero
1000c7f0:	01000044 	movi	r4,1
1000c7f4:	d811883a 	mov	r8,sp
1000c7f8:	e43ff116 	blt	fp,r16,1000c7c0 <__alt_data_end+0xf800c7c0>
1000c7fc:	a807883a 	mov	r3,r21
1000c800:	d9c02917 	ldw	r7,164(sp)
1000c804:	802b883a 	mov	r21,r16
1000c808:	dc002717 	ldw	r16,156(sp)
1000c80c:	d9402317 	ldw	r5,140(sp)
1000c810:	a885883a 	add	r2,r21,r2
1000c814:	45400115 	stw	r21,4(r8)
1000c818:	41400015 	stw	r5,0(r8)
1000c81c:	d8801c15 	stw	r2,112(sp)
1000c820:	d9001b15 	stw	r4,108(sp)
1000c824:	014001c4 	movi	r5,7
1000c828:	29026216 	blt	r5,r4,1000d1b4 <___vfiprintf_internal_r+0xe88>
1000c82c:	d9801d87 	ldb	r6,118(sp)
1000c830:	42000204 	addi	r8,r8,8
1000c834:	21400044 	addi	r5,r4,1
1000c838:	3001ae1e 	bne	r6,zero,1000cef4 <___vfiprintf_internal_r+0xbc8>
1000c83c:	3801bb26 	beq	r7,zero,1000cf2c <___vfiprintf_internal_r+0xc00>
1000c840:	d9001d04 	addi	r4,sp,116
1000c844:	10800084 	addi	r2,r2,2
1000c848:	41000015 	stw	r4,0(r8)
1000c84c:	01000084 	movi	r4,2
1000c850:	41000115 	stw	r4,4(r8)
1000c854:	d8801c15 	stw	r2,112(sp)
1000c858:	d9401b15 	stw	r5,108(sp)
1000c85c:	010001c4 	movi	r4,7
1000c860:	2142680e 	bge	r4,r5,1000d204 <___vfiprintf_internal_r+0xed8>
1000c864:	1002b11e 	bne	r2,zero,1000d32c <___vfiprintf_internal_r+0x1000>
1000c868:	01802004 	movi	r6,128
1000c86c:	01400044 	movi	r5,1
1000c870:	0009883a 	mov	r4,zero
1000c874:	d811883a 	mov	r8,sp
1000c878:	1981ae1e 	bne	r3,r6,1000cf34 <___vfiprintf_internal_r+0xc08>
1000c87c:	d8c02517 	ldw	r3,148(sp)
1000c880:	1cf9c83a 	sub	fp,r3,r19
1000c884:	0701ab0e 	bge	zero,fp,1000cf34 <___vfiprintf_internal_r+0xc08>
1000c888:	05400404 	movi	r21,16
1000c88c:	af03a90e 	bge	r21,fp,1000d734 <___vfiprintf_internal_r+0x1408>
1000c890:	01440074 	movhi	r5,4097
1000c894:	2950b604 	addi	r5,r5,17112
1000c898:	d9402315 	stw	r5,140(sp)
1000c89c:	01c001c4 	movi	r7,7
1000c8a0:	00000506 	br	1000c8b8 <___vfiprintf_internal_r+0x58c>
1000c8a4:	21800084 	addi	r6,r4,2
1000c8a8:	42000204 	addi	r8,r8,8
1000c8ac:	1809883a 	mov	r4,r3
1000c8b0:	e73ffc04 	addi	fp,fp,-16
1000c8b4:	af000d0e 	bge	r21,fp,1000c8ec <___vfiprintf_internal_r+0x5c0>
1000c8b8:	10800404 	addi	r2,r2,16
1000c8bc:	20c00044 	addi	r3,r4,1
1000c8c0:	44800015 	stw	r18,0(r8)
1000c8c4:	45400115 	stw	r21,4(r8)
1000c8c8:	d8801c15 	stw	r2,112(sp)
1000c8cc:	d8c01b15 	stw	r3,108(sp)
1000c8d0:	38fff40e 	bge	r7,r3,1000c8a4 <__alt_data_end+0xf800c8a4>
1000c8d4:	10022b1e 	bne	r2,zero,1000d184 <___vfiprintf_internal_r+0xe58>
1000c8d8:	e73ffc04 	addi	fp,fp,-16
1000c8dc:	01800044 	movi	r6,1
1000c8e0:	0009883a 	mov	r4,zero
1000c8e4:	d811883a 	mov	r8,sp
1000c8e8:	af3ff316 	blt	r21,fp,1000c8b8 <__alt_data_end+0xf800c8b8>
1000c8ec:	d8c02317 	ldw	r3,140(sp)
1000c8f0:	1705883a 	add	r2,r2,fp
1000c8f4:	47000115 	stw	fp,4(r8)
1000c8f8:	40c00015 	stw	r3,0(r8)
1000c8fc:	d8801c15 	stw	r2,112(sp)
1000c900:	d9801b15 	stw	r6,108(sp)
1000c904:	00c001c4 	movi	r3,7
1000c908:	19829416 	blt	r3,r6,1000d35c <___vfiprintf_internal_r+0x1030>
1000c90c:	8521c83a 	sub	r16,r16,r20
1000c910:	42000204 	addi	r8,r8,8
1000c914:	31400044 	addi	r5,r6,1
1000c918:	3009883a 	mov	r4,r6
1000c91c:	04018716 	blt	zero,r16,1000cf3c <___vfiprintf_internal_r+0xc10>
1000c920:	a085883a 	add	r2,r20,r2
1000c924:	45c00015 	stw	r23,0(r8)
1000c928:	45000115 	stw	r20,4(r8)
1000c92c:	d8801c15 	stw	r2,112(sp)
1000c930:	d9401b15 	stw	r5,108(sp)
1000c934:	00c001c4 	movi	r3,7
1000c938:	1941c20e 	bge	r3,r5,1000d044 <___vfiprintf_internal_r+0xd18>
1000c93c:	1002531e 	bne	r2,zero,1000d28c <___vfiprintf_internal_r+0xf60>
1000c940:	d8001b15 	stw	zero,108(sp)
1000c944:	8c40010c 	andi	r17,r17,4
1000c948:	88023226 	beq	r17,zero,1000d214 <___vfiprintf_internal_r+0xee8>
1000c94c:	d9002517 	ldw	r4,148(sp)
1000c950:	24e3c83a 	sub	r17,r4,r19
1000c954:	04432916 	blt	zero,r17,1000d5fc <___vfiprintf_internal_r+0x12d0>
1000c958:	d8802517 	ldw	r2,148(sp)
1000c95c:	14c0010e 	bge	r2,r19,1000c964 <___vfiprintf_internal_r+0x638>
1000c960:	9805883a 	mov	r2,r19
1000c964:	d8c02417 	ldw	r3,144(sp)
1000c968:	1887883a 	add	r3,r3,r2
1000c96c:	d8c02415 	stw	r3,144(sp)
1000c970:	d8001b15 	stw	zero,108(sp)
1000c974:	d811883a 	mov	r8,sp
1000c978:	003ea006 	br	1000c3fc <__alt_data_end+0xf800c3fc>
1000c97c:	8c400814 	ori	r17,r17,32
1000c980:	b0c00007 	ldb	r3,0(r22)
1000c984:	003ec606 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000c988:	b0c00007 	ldb	r3,0(r22)
1000c98c:	00801b04 	movi	r2,108
1000c990:	18832026 	beq	r3,r2,1000d614 <___vfiprintf_internal_r+0x12e8>
1000c994:	8c400414 	ori	r17,r17,16
1000c998:	003ec106 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000c99c:	9cc03fcc 	andi	r19,r19,255
1000c9a0:	b811883a 	mov	r8,r23
1000c9a4:	9803981e 	bne	r19,zero,1000d808 <___vfiprintf_internal_r+0x14dc>
1000c9a8:	8880080c 	andi	r2,r17,32
1000c9ac:	1002be26 	beq	r2,zero,1000d4a8 <___vfiprintf_internal_r+0x117c>
1000c9b0:	d9002217 	ldw	r4,136(sp)
1000c9b4:	d9402417 	ldw	r5,144(sp)
1000c9b8:	20800017 	ldw	r2,0(r4)
1000c9bc:	2807d7fa 	srai	r3,r5,31
1000c9c0:	21000104 	addi	r4,r4,4
1000c9c4:	d9002215 	stw	r4,136(sp)
1000c9c8:	11400015 	stw	r5,0(r2)
1000c9cc:	10c00115 	stw	r3,4(r2)
1000c9d0:	003e8a06 	br	1000c3fc <__alt_data_end+0xf800c3fc>
1000c9d4:	9cc03fcc 	andi	r19,r19,255
1000c9d8:	b811883a 	mov	r8,r23
1000c9dc:	9803871e 	bne	r19,zero,1000d7fc <___vfiprintf_internal_r+0x14d0>
1000c9e0:	8880080c 	andi	r2,r17,32
1000c9e4:	10009a26 	beq	r2,zero,1000cc50 <___vfiprintf_internal_r+0x924>
1000c9e8:	d9002217 	ldw	r4,136(sp)
1000c9ec:	d8001d85 	stb	zero,118(sp)
1000c9f0:	20800204 	addi	r2,r4,8
1000c9f4:	24c00017 	ldw	r19,0(r4)
1000c9f8:	25000117 	ldw	r20,4(r4)
1000c9fc:	8002a416 	blt	r16,zero,1000d490 <___vfiprintf_internal_r+0x1164>
1000ca00:	013fdfc4 	movi	r4,-129
1000ca04:	9d06b03a 	or	r3,r19,r20
1000ca08:	d8802215 	stw	r2,136(sp)
1000ca0c:	8922703a 	and	r17,r17,r4
1000ca10:	18009b26 	beq	r3,zero,1000cc80 <___vfiprintf_internal_r+0x954>
1000ca14:	002b883a 	mov	r21,zero
1000ca18:	ddc01a04 	addi	r23,sp,104
1000ca1c:	9806d0fa 	srli	r3,r19,3
1000ca20:	a008977a 	slli	r4,r20,29
1000ca24:	a028d0fa 	srli	r20,r20,3
1000ca28:	9cc001cc 	andi	r19,r19,7
1000ca2c:	98800c04 	addi	r2,r19,48
1000ca30:	bdffffc4 	addi	r23,r23,-1
1000ca34:	20e6b03a 	or	r19,r4,r3
1000ca38:	b8800005 	stb	r2,0(r23)
1000ca3c:	9d06b03a 	or	r3,r19,r20
1000ca40:	183ff61e 	bne	r3,zero,1000ca1c <__alt_data_end+0xf800ca1c>
1000ca44:	88c0004c 	andi	r3,r17,1
1000ca48:	18021f1e 	bne	r3,zero,1000d2c8 <___vfiprintf_internal_r+0xf9c>
1000ca4c:	d9401e17 	ldw	r5,120(sp)
1000ca50:	2de9c83a 	sub	r20,r5,r23
1000ca54:	003f3806 	br	1000c738 <__alt_data_end+0xf800c738>
1000ca58:	9cc03fcc 	andi	r19,r19,255
1000ca5c:	b811883a 	mov	r8,r23
1000ca60:	98034f1e 	bne	r19,zero,1000d7a0 <___vfiprintf_internal_r+0x1474>
1000ca64:	00840074 	movhi	r2,4097
1000ca68:	10904504 	addi	r2,r2,16660
1000ca6c:	d8802615 	stw	r2,152(sp)
1000ca70:	8880080c 	andi	r2,r17,32
1000ca74:	1000ac26 	beq	r2,zero,1000cd28 <___vfiprintf_internal_r+0x9fc>
1000ca78:	d9002217 	ldw	r4,136(sp)
1000ca7c:	24c00017 	ldw	r19,0(r4)
1000ca80:	25000117 	ldw	r20,4(r4)
1000ca84:	21000204 	addi	r4,r4,8
1000ca88:	d9002215 	stw	r4,136(sp)
1000ca8c:	8880004c 	andi	r2,r17,1
1000ca90:	1001e726 	beq	r2,zero,1000d230 <___vfiprintf_internal_r+0xf04>
1000ca94:	9d04b03a 	or	r2,r19,r20
1000ca98:	10025c1e 	bne	r2,zero,1000d40c <___vfiprintf_internal_r+0x10e0>
1000ca9c:	d8001d85 	stb	zero,118(sp)
1000caa0:	80024416 	blt	r16,zero,1000d3b4 <___vfiprintf_internal_r+0x1088>
1000caa4:	00bfdfc4 	movi	r2,-129
1000caa8:	88a2703a 	and	r17,r17,r2
1000caac:	003f1d06 	br	1000c724 <__alt_data_end+0xf800c724>
1000cab0:	d8c02217 	ldw	r3,136(sp)
1000cab4:	04c00044 	movi	r19,1
1000cab8:	b811883a 	mov	r8,r23
1000cabc:	18800017 	ldw	r2,0(r3)
1000cac0:	18c00104 	addi	r3,r3,4
1000cac4:	d8001d85 	stb	zero,118(sp)
1000cac8:	d8801005 	stb	r2,64(sp)
1000cacc:	d8c02215 	stw	r3,136(sp)
1000cad0:	9829883a 	mov	r20,r19
1000cad4:	ddc01004 	addi	r23,sp,64
1000cad8:	0021883a 	mov	r16,zero
1000cadc:	003f1e06 	br	1000c758 <__alt_data_end+0xf800c758>
1000cae0:	9cc03fcc 	andi	r19,r19,255
1000cae4:	b811883a 	mov	r8,r23
1000cae8:	9803331e 	bne	r19,zero,1000d7b8 <___vfiprintf_internal_r+0x148c>
1000caec:	8880080c 	andi	r2,r17,32
1000caf0:	10004826 	beq	r2,zero,1000cc14 <___vfiprintf_internal_r+0x8e8>
1000caf4:	d9002217 	ldw	r4,136(sp)
1000caf8:	20800117 	ldw	r2,4(r4)
1000cafc:	24c00017 	ldw	r19,0(r4)
1000cb00:	21000204 	addi	r4,r4,8
1000cb04:	d9002215 	stw	r4,136(sp)
1000cb08:	1029883a 	mov	r20,r2
1000cb0c:	10024c16 	blt	r2,zero,1000d440 <___vfiprintf_internal_r+0x1114>
1000cb10:	dd401d83 	ldbu	r21,118(sp)
1000cb14:	80007116 	blt	r16,zero,1000ccdc <___vfiprintf_internal_r+0x9b0>
1000cb18:	00ffdfc4 	movi	r3,-129
1000cb1c:	9d04b03a 	or	r2,r19,r20
1000cb20:	88e2703a 	and	r17,r17,r3
1000cb24:	1000d126 	beq	r2,zero,1000ce6c <___vfiprintf_internal_r+0xb40>
1000cb28:	a0023526 	beq	r20,zero,1000d400 <___vfiprintf_internal_r+0x10d4>
1000cb2c:	ddc01a04 	addi	r23,sp,104
1000cb30:	4039883a 	mov	fp,r8
1000cb34:	9809883a 	mov	r4,r19
1000cb38:	a00b883a 	mov	r5,r20
1000cb3c:	01800284 	movi	r6,10
1000cb40:	000f883a 	mov	r7,zero
1000cb44:	000e9640 	call	1000e964 <__umoddi3>
1000cb48:	10800c04 	addi	r2,r2,48
1000cb4c:	bdffffc4 	addi	r23,r23,-1
1000cb50:	9809883a 	mov	r4,r19
1000cb54:	a00b883a 	mov	r5,r20
1000cb58:	b8800005 	stb	r2,0(r23)
1000cb5c:	01800284 	movi	r6,10
1000cb60:	000f883a 	mov	r7,zero
1000cb64:	000e3680 	call	1000e368 <__udivdi3>
1000cb68:	1027883a 	mov	r19,r2
1000cb6c:	10c4b03a 	or	r2,r2,r3
1000cb70:	1829883a 	mov	r20,r3
1000cb74:	103fef1e 	bne	r2,zero,1000cb34 <__alt_data_end+0xf800cb34>
1000cb78:	d9001e17 	ldw	r4,120(sp)
1000cb7c:	e011883a 	mov	r8,fp
1000cb80:	25e9c83a 	sub	r20,r4,r23
1000cb84:	003eec06 	br	1000c738 <__alt_data_end+0xf800c738>
1000cb88:	d8802307 	ldb	r2,140(sp)
1000cb8c:	1002361e 	bne	r2,zero,1000d468 <___vfiprintf_internal_r+0x113c>
1000cb90:	00c00804 	movi	r3,32
1000cb94:	d8c02305 	stb	r3,140(sp)
1000cb98:	04c00044 	movi	r19,1
1000cb9c:	b0c00007 	ldb	r3,0(r22)
1000cba0:	003e3f06 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000cba4:	8c400054 	ori	r17,r17,1
1000cba8:	b0c00007 	ldb	r3,0(r22)
1000cbac:	003e3c06 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000cbb0:	8c402014 	ori	r17,r17,128
1000cbb4:	b0c00007 	ldb	r3,0(r22)
1000cbb8:	003e3906 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000cbbc:	dc002715 	stw	r16,156(sp)
1000cbc0:	d8002515 	stw	zero,148(sp)
1000cbc4:	1f3ff404 	addi	fp,r3,-48
1000cbc8:	0009883a 	mov	r4,zero
1000cbcc:	b021883a 	mov	r16,r22
1000cbd0:	01400284 	movi	r5,10
1000cbd4:	0000fc80 	call	10000fc8 <__mulsi3>
1000cbd8:	80c00007 	ldb	r3,0(r16)
1000cbdc:	e089883a 	add	r4,fp,r2
1000cbe0:	b5800044 	addi	r22,r22,1
1000cbe4:	1f3ff404 	addi	fp,r3,-48
1000cbe8:	b021883a 	mov	r16,r22
1000cbec:	af3ff82e 	bgeu	r21,fp,1000cbd0 <__alt_data_end+0xf800cbd0>
1000cbf0:	d9002515 	stw	r4,148(sp)
1000cbf4:	dc002717 	ldw	r16,156(sp)
1000cbf8:	003e2a06 	br	1000c4a4 <__alt_data_end+0xf800c4a4>
1000cbfc:	9cc03fcc 	andi	r19,r19,255
1000cc00:	b811883a 	mov	r8,r23
1000cc04:	9802e91e 	bne	r19,zero,1000d7ac <___vfiprintf_internal_r+0x1480>
1000cc08:	8c400414 	ori	r17,r17,16
1000cc0c:	8880080c 	andi	r2,r17,32
1000cc10:	103fb81e 	bne	r2,zero,1000caf4 <__alt_data_end+0xf800caf4>
1000cc14:	8880040c 	andi	r2,r17,16
1000cc18:	10022e26 	beq	r2,zero,1000d4d4 <___vfiprintf_internal_r+0x11a8>
1000cc1c:	d9402217 	ldw	r5,136(sp)
1000cc20:	2cc00017 	ldw	r19,0(r5)
1000cc24:	29400104 	addi	r5,r5,4
1000cc28:	d9402215 	stw	r5,136(sp)
1000cc2c:	9829d7fa 	srai	r20,r19,31
1000cc30:	a005883a 	mov	r2,r20
1000cc34:	003fb506 	br	1000cb0c <__alt_data_end+0xf800cb0c>
1000cc38:	9cc03fcc 	andi	r19,r19,255
1000cc3c:	b811883a 	mov	r8,r23
1000cc40:	9802fa1e 	bne	r19,zero,1000d82c <___vfiprintf_internal_r+0x1500>
1000cc44:	8c400414 	ori	r17,r17,16
1000cc48:	8880080c 	andi	r2,r17,32
1000cc4c:	103f661e 	bne	r2,zero,1000c9e8 <__alt_data_end+0xf800c9e8>
1000cc50:	8880040c 	andi	r2,r17,16
1000cc54:	10020626 	beq	r2,zero,1000d470 <___vfiprintf_internal_r+0x1144>
1000cc58:	d9402217 	ldw	r5,136(sp)
1000cc5c:	d8001d85 	stb	zero,118(sp)
1000cc60:	0029883a 	mov	r20,zero
1000cc64:	28800104 	addi	r2,r5,4
1000cc68:	2cc00017 	ldw	r19,0(r5)
1000cc6c:	80020816 	blt	r16,zero,1000d490 <___vfiprintf_internal_r+0x1164>
1000cc70:	00ffdfc4 	movi	r3,-129
1000cc74:	d8802215 	stw	r2,136(sp)
1000cc78:	88e2703a 	and	r17,r17,r3
1000cc7c:	983f651e 	bne	r19,zero,1000ca14 <__alt_data_end+0xf800ca14>
1000cc80:	002b883a 	mov	r21,zero
1000cc84:	8002cf26 	beq	r16,zero,1000d7c4 <___vfiprintf_internal_r+0x1498>
1000cc88:	0027883a 	mov	r19,zero
1000cc8c:	0029883a 	mov	r20,zero
1000cc90:	003f6106 	br	1000ca18 <__alt_data_end+0xf800ca18>
1000cc94:	9cc03fcc 	andi	r19,r19,255
1000cc98:	b811883a 	mov	r8,r23
1000cc9c:	9802e01e 	bne	r19,zero,1000d820 <___vfiprintf_internal_r+0x14f4>
1000cca0:	8c400414 	ori	r17,r17,16
1000cca4:	8880080c 	andi	r2,r17,32
1000cca8:	1000641e 	bne	r2,zero,1000ce3c <___vfiprintf_internal_r+0xb10>
1000ccac:	8880040c 	andi	r2,r17,16
1000ccb0:	1001c81e 	bne	r2,zero,1000d3d4 <___vfiprintf_internal_r+0x10a8>
1000ccb4:	8880100c 	andi	r2,r17,64
1000ccb8:	d8001d85 	stb	zero,118(sp)
1000ccbc:	1002281e 	bne	r2,zero,1000d560 <___vfiprintf_internal_r+0x1234>
1000ccc0:	d9002217 	ldw	r4,136(sp)
1000ccc4:	0029883a 	mov	r20,zero
1000ccc8:	20800104 	addi	r2,r4,4
1000cccc:	24c00017 	ldw	r19,0(r4)
1000ccd0:	8001c60e 	bge	r16,zero,1000d3ec <___vfiprintf_internal_r+0x10c0>
1000ccd4:	d8802215 	stw	r2,136(sp)
1000ccd8:	002b883a 	mov	r21,zero
1000ccdc:	9d04b03a 	or	r2,r19,r20
1000cce0:	103f911e 	bne	r2,zero,1000cb28 <__alt_data_end+0xf800cb28>
1000cce4:	00800044 	movi	r2,1
1000cce8:	10803fcc 	andi	r2,r2,255
1000ccec:	00c00044 	movi	r3,1
1000ccf0:	10c05f26 	beq	r2,r3,1000ce70 <___vfiprintf_internal_r+0xb44>
1000ccf4:	00c00084 	movi	r3,2
1000ccf8:	10ffe31e 	bne	r2,r3,1000cc88 <__alt_data_end+0xf800cc88>
1000ccfc:	0027883a 	mov	r19,zero
1000cd00:	0029883a 	mov	r20,zero
1000cd04:	00015106 	br	1000d24c <___vfiprintf_internal_r+0xf20>
1000cd08:	9cc03fcc 	andi	r19,r19,255
1000cd0c:	b811883a 	mov	r8,r23
1000cd10:	9802c01e 	bne	r19,zero,1000d814 <___vfiprintf_internal_r+0x14e8>
1000cd14:	01440074 	movhi	r5,4097
1000cd18:	29504004 	addi	r5,r5,16640
1000cd1c:	d9402615 	stw	r5,152(sp)
1000cd20:	8880080c 	andi	r2,r17,32
1000cd24:	103f541e 	bne	r2,zero,1000ca78 <__alt_data_end+0xf800ca78>
1000cd28:	8880040c 	andi	r2,r17,16
1000cd2c:	1001f226 	beq	r2,zero,1000d4f8 <___vfiprintf_internal_r+0x11cc>
1000cd30:	d9402217 	ldw	r5,136(sp)
1000cd34:	0029883a 	mov	r20,zero
1000cd38:	2cc00017 	ldw	r19,0(r5)
1000cd3c:	29400104 	addi	r5,r5,4
1000cd40:	d9402215 	stw	r5,136(sp)
1000cd44:	003f5106 	br	1000ca8c <__alt_data_end+0xf800ca8c>
1000cd48:	d8c02217 	ldw	r3,136(sp)
1000cd4c:	b811883a 	mov	r8,r23
1000cd50:	d8001d85 	stb	zero,118(sp)
1000cd54:	1dc00017 	ldw	r23,0(r3)
1000cd58:	1f000104 	addi	fp,r3,4
1000cd5c:	b8025926 	beq	r23,zero,1000d6c4 <___vfiprintf_internal_r+0x1398>
1000cd60:	80023316 	blt	r16,zero,1000d630 <___vfiprintf_internal_r+0x1304>
1000cd64:	800d883a 	mov	r6,r16
1000cd68:	000b883a 	mov	r5,zero
1000cd6c:	b809883a 	mov	r4,r23
1000cd70:	da002a15 	stw	r8,168(sp)
1000cd74:	0008efc0 	call	10008efc <memchr>
1000cd78:	da002a17 	ldw	r8,168(sp)
1000cd7c:	10026826 	beq	r2,zero,1000d720 <___vfiprintf_internal_r+0x13f4>
1000cd80:	15e9c83a 	sub	r20,r2,r23
1000cd84:	dd401d83 	ldbu	r21,118(sp)
1000cd88:	df002215 	stw	fp,136(sp)
1000cd8c:	0021883a 	mov	r16,zero
1000cd90:	003e6906 	br	1000c738 <__alt_data_end+0xf800c738>
1000cd94:	9cc03fcc 	andi	r19,r19,255
1000cd98:	b811883a 	mov	r8,r23
1000cd9c:	983fc126 	beq	r19,zero,1000cca4 <__alt_data_end+0xf800cca4>
1000cda0:	d8c02303 	ldbu	r3,140(sp)
1000cda4:	d8c01d85 	stb	r3,118(sp)
1000cda8:	003fbe06 	br	1000cca4 <__alt_data_end+0xf800cca4>
1000cdac:	d9002217 	ldw	r4,136(sp)
1000cdb0:	d9402217 	ldw	r5,136(sp)
1000cdb4:	21000017 	ldw	r4,0(r4)
1000cdb8:	28800104 	addi	r2,r5,4
1000cdbc:	d9002515 	stw	r4,148(sp)
1000cdc0:	203e3d16 	blt	r4,zero,1000c6b8 <__alt_data_end+0xf800c6b8>
1000cdc4:	d8802215 	stw	r2,136(sp)
1000cdc8:	b0c00007 	ldb	r3,0(r22)
1000cdcc:	003db406 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000cdd0:	00c00ac4 	movi	r3,43
1000cdd4:	d8c02305 	stb	r3,140(sp)
1000cdd8:	04c00044 	movi	r19,1
1000cddc:	b0c00007 	ldb	r3,0(r22)
1000cde0:	003daf06 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000cde4:	b0c00007 	ldb	r3,0(r22)
1000cde8:	01000a84 	movi	r4,42
1000cdec:	b4000044 	addi	r16,r22,1
1000cdf0:	19025e26 	beq	r3,r4,1000d76c <___vfiprintf_internal_r+0x1440>
1000cdf4:	1f3ff404 	addi	fp,r3,-48
1000cdf8:	0009883a 	mov	r4,zero
1000cdfc:	af025236 	bltu	r21,fp,1000d748 <___vfiprintf_internal_r+0x141c>
1000ce00:	01400284 	movi	r5,10
1000ce04:	0000fc80 	call	10000fc8 <__mulsi3>
1000ce08:	80c00007 	ldb	r3,0(r16)
1000ce0c:	1709883a 	add	r4,r2,fp
1000ce10:	85800044 	addi	r22,r16,1
1000ce14:	1f3ff404 	addi	fp,r3,-48
1000ce18:	b021883a 	mov	r16,r22
1000ce1c:	af3ff82e 	bgeu	r21,fp,1000ce00 <__alt_data_end+0xf800ce00>
1000ce20:	2021883a 	mov	r16,r4
1000ce24:	203d9f0e 	bge	r4,zero,1000c4a4 <__alt_data_end+0xf800c4a4>
1000ce28:	043fffc4 	movi	r16,-1
1000ce2c:	003d9d06 	br	1000c4a4 <__alt_data_end+0xf800c4a4>
1000ce30:	8c401014 	ori	r17,r17,64
1000ce34:	b0c00007 	ldb	r3,0(r22)
1000ce38:	003d9906 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000ce3c:	d9002217 	ldw	r4,136(sp)
1000ce40:	d8001d85 	stb	zero,118(sp)
1000ce44:	20c00204 	addi	r3,r4,8
1000ce48:	24c00017 	ldw	r19,0(r4)
1000ce4c:	25000117 	ldw	r20,4(r4)
1000ce50:	8001e716 	blt	r16,zero,1000d5f0 <___vfiprintf_internal_r+0x12c4>
1000ce54:	013fdfc4 	movi	r4,-129
1000ce58:	9d04b03a 	or	r2,r19,r20
1000ce5c:	d8c02215 	stw	r3,136(sp)
1000ce60:	8922703a 	and	r17,r17,r4
1000ce64:	002b883a 	mov	r21,zero
1000ce68:	103f2f1e 	bne	r2,zero,1000cb28 <__alt_data_end+0xf800cb28>
1000ce6c:	803e2f26 	beq	r16,zero,1000c72c <__alt_data_end+0xf800c72c>
1000ce70:	0027883a 	mov	r19,zero
1000ce74:	9cc00c04 	addi	r19,r19,48
1000ce78:	dcc019c5 	stb	r19,103(sp)
1000ce7c:	dd002817 	ldw	r20,160(sp)
1000ce80:	ddc019c4 	addi	r23,sp,103
1000ce84:	003e2c06 	br	1000c738 <__alt_data_end+0xf800c738>
1000ce88:	9cc03fcc 	andi	r19,r19,255
1000ce8c:	b811883a 	mov	r8,r23
1000ce90:	9802571e 	bne	r19,zero,1000d7f0 <___vfiprintf_internal_r+0x14c4>
1000ce94:	18005726 	beq	r3,zero,1000cff4 <___vfiprintf_internal_r+0xcc8>
1000ce98:	04c00044 	movi	r19,1
1000ce9c:	d8c01005 	stb	r3,64(sp)
1000cea0:	d8001d85 	stb	zero,118(sp)
1000cea4:	9829883a 	mov	r20,r19
1000cea8:	ddc01004 	addi	r23,sp,64
1000ceac:	003f0a06 	br	1000cad8 <__alt_data_end+0xf800cad8>
1000ceb0:	d9402017 	ldw	r5,128(sp)
1000ceb4:	d9002117 	ldw	r4,132(sp)
1000ceb8:	d9801a04 	addi	r6,sp,104
1000cebc:	da802a15 	stw	r10,168(sp)
1000cec0:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000cec4:	da802a17 	ldw	r10,168(sp)
1000cec8:	1000501e 	bne	r2,zero,1000d00c <___vfiprintf_internal_r+0xce0>
1000cecc:	d9801b17 	ldw	r6,108(sp)
1000ced0:	d8801c17 	ldw	r2,112(sp)
1000ced4:	d811883a 	mov	r8,sp
1000ced8:	31000044 	addi	r4,r6,1
1000cedc:	003e3606 	br	1000c7b8 <__alt_data_end+0xf800c7b8>
1000cee0:	d9001b17 	ldw	r4,108(sp)
1000cee4:	d8801c17 	ldw	r2,112(sp)
1000cee8:	21400044 	addi	r5,r4,1
1000ceec:	d9801d87 	ldb	r6,118(sp)
1000cef0:	303e5226 	beq	r6,zero,1000c83c <__alt_data_end+0xf800c83c>
1000cef4:	01800044 	movi	r6,1
1000cef8:	d9001d84 	addi	r4,sp,118
1000cefc:	1185883a 	add	r2,r2,r6
1000cf00:	41000015 	stw	r4,0(r8)
1000cf04:	41800115 	stw	r6,4(r8)
1000cf08:	d8801c15 	stw	r2,112(sp)
1000cf0c:	d9401b15 	stw	r5,108(sp)
1000cf10:	010001c4 	movi	r4,7
1000cf14:	2140b00e 	bge	r4,r5,1000d1d8 <___vfiprintf_internal_r+0xeac>
1000cf18:	1000f61e 	bne	r2,zero,1000d2f4 <___vfiprintf_internal_r+0xfc8>
1000cf1c:	3800b31e 	bne	r7,zero,1000d1ec <___vfiprintf_internal_r+0xec0>
1000cf20:	0009883a 	mov	r4,zero
1000cf24:	300b883a 	mov	r5,r6
1000cf28:	d811883a 	mov	r8,sp
1000cf2c:	01802004 	movi	r6,128
1000cf30:	19be5226 	beq	r3,r6,1000c87c <__alt_data_end+0xf800c87c>
1000cf34:	8521c83a 	sub	r16,r16,r20
1000cf38:	043e790e 	bge	zero,r16,1000c920 <__alt_data_end+0xf800c920>
1000cf3c:	05400404 	movi	r21,16
1000cf40:	ac01b00e 	bge	r21,r16,1000d604 <___vfiprintf_internal_r+0x12d8>
1000cf44:	01440074 	movhi	r5,4097
1000cf48:	2950b604 	addi	r5,r5,17112
1000cf4c:	d9402315 	stw	r5,140(sp)
1000cf50:	070001c4 	movi	fp,7
1000cf54:	00000506 	br	1000cf6c <___vfiprintf_internal_r+0xc40>
1000cf58:	21400084 	addi	r5,r4,2
1000cf5c:	42000204 	addi	r8,r8,8
1000cf60:	1809883a 	mov	r4,r3
1000cf64:	843ffc04 	addi	r16,r16,-16
1000cf68:	ac000d0e 	bge	r21,r16,1000cfa0 <___vfiprintf_internal_r+0xc74>
1000cf6c:	10800404 	addi	r2,r2,16
1000cf70:	20c00044 	addi	r3,r4,1
1000cf74:	44800015 	stw	r18,0(r8)
1000cf78:	45400115 	stw	r21,4(r8)
1000cf7c:	d8801c15 	stw	r2,112(sp)
1000cf80:	d8c01b15 	stw	r3,108(sp)
1000cf84:	e0fff40e 	bge	fp,r3,1000cf58 <__alt_data_end+0xf800cf58>
1000cf88:	1000101e 	bne	r2,zero,1000cfcc <___vfiprintf_internal_r+0xca0>
1000cf8c:	843ffc04 	addi	r16,r16,-16
1000cf90:	01400044 	movi	r5,1
1000cf94:	0009883a 	mov	r4,zero
1000cf98:	d811883a 	mov	r8,sp
1000cf9c:	ac3ff316 	blt	r21,r16,1000cf6c <__alt_data_end+0xf800cf6c>
1000cfa0:	d8c02317 	ldw	r3,140(sp)
1000cfa4:	1405883a 	add	r2,r2,r16
1000cfa8:	44000115 	stw	r16,4(r8)
1000cfac:	40c00015 	stw	r3,0(r8)
1000cfb0:	d8801c15 	stw	r2,112(sp)
1000cfb4:	d9401b15 	stw	r5,108(sp)
1000cfb8:	00c001c4 	movi	r3,7
1000cfbc:	19401916 	blt	r3,r5,1000d024 <___vfiprintf_internal_r+0xcf8>
1000cfc0:	42000204 	addi	r8,r8,8
1000cfc4:	29400044 	addi	r5,r5,1
1000cfc8:	003e5506 	br	1000c920 <__alt_data_end+0xf800c920>
1000cfcc:	d9402017 	ldw	r5,128(sp)
1000cfd0:	d9002117 	ldw	r4,132(sp)
1000cfd4:	d9801a04 	addi	r6,sp,104
1000cfd8:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000cfdc:	10000b1e 	bne	r2,zero,1000d00c <___vfiprintf_internal_r+0xce0>
1000cfe0:	d9001b17 	ldw	r4,108(sp)
1000cfe4:	d8801c17 	ldw	r2,112(sp)
1000cfe8:	d811883a 	mov	r8,sp
1000cfec:	21400044 	addi	r5,r4,1
1000cff0:	003fdc06 	br	1000cf64 <__alt_data_end+0xf800cf64>
1000cff4:	d8801c17 	ldw	r2,112(sp)
1000cff8:	10000426 	beq	r2,zero,1000d00c <___vfiprintf_internal_r+0xce0>
1000cffc:	d9402017 	ldw	r5,128(sp)
1000d000:	d9002117 	ldw	r4,132(sp)
1000d004:	d9801a04 	addi	r6,sp,104
1000d008:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d00c:	d9402017 	ldw	r5,128(sp)
1000d010:	2880030b 	ldhu	r2,12(r5)
1000d014:	1080100c 	andi	r2,r2,64
1000d018:	10014d1e 	bne	r2,zero,1000d550 <___vfiprintf_internal_r+0x1224>
1000d01c:	d8802417 	ldw	r2,144(sp)
1000d020:	003d9706 	br	1000c680 <__alt_data_end+0xf800c680>
1000d024:	1000d21e 	bne	r2,zero,1000d370 <___vfiprintf_internal_r+0x1044>
1000d028:	00c00044 	movi	r3,1
1000d02c:	a005883a 	mov	r2,r20
1000d030:	ddc00015 	stw	r23,0(sp)
1000d034:	dd000115 	stw	r20,4(sp)
1000d038:	dd001c15 	stw	r20,112(sp)
1000d03c:	d8c01b15 	stw	r3,108(sp)
1000d040:	d811883a 	mov	r8,sp
1000d044:	42000204 	addi	r8,r8,8
1000d048:	8c40010c 	andi	r17,r17,4
1000d04c:	88004026 	beq	r17,zero,1000d150 <___vfiprintf_internal_r+0xe24>
1000d050:	d9002517 	ldw	r4,148(sp)
1000d054:	24e3c83a 	sub	r17,r4,r19
1000d058:	04403d0e 	bge	zero,r17,1000d150 <___vfiprintf_internal_r+0xe24>
1000d05c:	04000404 	movi	r16,16
1000d060:	8441a90e 	bge	r16,r17,1000d708 <___vfiprintf_internal_r+0x13dc>
1000d064:	00c40074 	movhi	r3,4097
1000d068:	18d0ba04 	addi	r3,r3,17128
1000d06c:	d9001b17 	ldw	r4,108(sp)
1000d070:	d8c02315 	stw	r3,140(sp)
1000d074:	050001c4 	movi	r20,7
1000d078:	dd402117 	ldw	r21,132(sp)
1000d07c:	ddc02017 	ldw	r23,128(sp)
1000d080:	00000506 	br	1000d098 <___vfiprintf_internal_r+0xd6c>
1000d084:	21400084 	addi	r5,r4,2
1000d088:	42000204 	addi	r8,r8,8
1000d08c:	1809883a 	mov	r4,r3
1000d090:	8c7ffc04 	addi	r17,r17,-16
1000d094:	84400f0e 	bge	r16,r17,1000d0d4 <___vfiprintf_internal_r+0xda8>
1000d098:	01440074 	movhi	r5,4097
1000d09c:	10800404 	addi	r2,r2,16
1000d0a0:	20c00044 	addi	r3,r4,1
1000d0a4:	2950ba04 	addi	r5,r5,17128
1000d0a8:	41400015 	stw	r5,0(r8)
1000d0ac:	44000115 	stw	r16,4(r8)
1000d0b0:	d8801c15 	stw	r2,112(sp)
1000d0b4:	d8c01b15 	stw	r3,108(sp)
1000d0b8:	a0fff20e 	bge	r20,r3,1000d084 <__alt_data_end+0xf800d084>
1000d0bc:	1000141e 	bne	r2,zero,1000d110 <___vfiprintf_internal_r+0xde4>
1000d0c0:	8c7ffc04 	addi	r17,r17,-16
1000d0c4:	01400044 	movi	r5,1
1000d0c8:	0009883a 	mov	r4,zero
1000d0cc:	d811883a 	mov	r8,sp
1000d0d0:	847ff116 	blt	r16,r17,1000d098 <__alt_data_end+0xf800d098>
1000d0d4:	d8c02317 	ldw	r3,140(sp)
1000d0d8:	1445883a 	add	r2,r2,r17
1000d0dc:	44400115 	stw	r17,4(r8)
1000d0e0:	40c00015 	stw	r3,0(r8)
1000d0e4:	d8801c15 	stw	r2,112(sp)
1000d0e8:	d9401b15 	stw	r5,108(sp)
1000d0ec:	00c001c4 	movi	r3,7
1000d0f0:	1940170e 	bge	r3,r5,1000d150 <___vfiprintf_internal_r+0xe24>
1000d0f4:	1000101e 	bne	r2,zero,1000d138 <___vfiprintf_internal_r+0xe0c>
1000d0f8:	d8802517 	ldw	r2,148(sp)
1000d0fc:	14c11616 	blt	r2,r19,1000d558 <___vfiprintf_internal_r+0x122c>
1000d100:	d9002417 	ldw	r4,144(sp)
1000d104:	2089883a 	add	r4,r4,r2
1000d108:	d9002415 	stw	r4,144(sp)
1000d10c:	003e1806 	br	1000c970 <__alt_data_end+0xf800c970>
1000d110:	d9801a04 	addi	r6,sp,104
1000d114:	b80b883a 	mov	r5,r23
1000d118:	a809883a 	mov	r4,r21
1000d11c:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d120:	103fba1e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d124:	d9001b17 	ldw	r4,108(sp)
1000d128:	d8801c17 	ldw	r2,112(sp)
1000d12c:	d811883a 	mov	r8,sp
1000d130:	21400044 	addi	r5,r4,1
1000d134:	003fd606 	br	1000d090 <__alt_data_end+0xf800d090>
1000d138:	d9402017 	ldw	r5,128(sp)
1000d13c:	d9002117 	ldw	r4,132(sp)
1000d140:	d9801a04 	addi	r6,sp,104
1000d144:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d148:	103fb01e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d14c:	d8801c17 	ldw	r2,112(sp)
1000d150:	d8c02517 	ldw	r3,148(sp)
1000d154:	1cc0010e 	bge	r3,r19,1000d15c <___vfiprintf_internal_r+0xe30>
1000d158:	9807883a 	mov	r3,r19
1000d15c:	d9002417 	ldw	r4,144(sp)
1000d160:	20c9883a 	add	r4,r4,r3
1000d164:	d9002415 	stw	r4,144(sp)
1000d168:	103e0126 	beq	r2,zero,1000c970 <__alt_data_end+0xf800c970>
1000d16c:	d9402017 	ldw	r5,128(sp)
1000d170:	d9002117 	ldw	r4,132(sp)
1000d174:	d9801a04 	addi	r6,sp,104
1000d178:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d17c:	103dfc26 	beq	r2,zero,1000c970 <__alt_data_end+0xf800c970>
1000d180:	003fa206 	br	1000d00c <__alt_data_end+0xf800d00c>
1000d184:	d9402017 	ldw	r5,128(sp)
1000d188:	d9002117 	ldw	r4,132(sp)
1000d18c:	d9801a04 	addi	r6,sp,104
1000d190:	d9c02b15 	stw	r7,172(sp)
1000d194:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d198:	d9c02b17 	ldw	r7,172(sp)
1000d19c:	103f9b1e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d1a0:	d9001b17 	ldw	r4,108(sp)
1000d1a4:	d8801c17 	ldw	r2,112(sp)
1000d1a8:	d811883a 	mov	r8,sp
1000d1ac:	21800044 	addi	r6,r4,1
1000d1b0:	003dbf06 	br	1000c8b0 <__alt_data_end+0xf800c8b0>
1000d1b4:	1000d81e 	bne	r2,zero,1000d518 <___vfiprintf_internal_r+0x11ec>
1000d1b8:	d9001d87 	ldb	r4,118(sp)
1000d1bc:	20000a26 	beq	r4,zero,1000d1e8 <___vfiprintf_internal_r+0xebc>
1000d1c0:	00800044 	movi	r2,1
1000d1c4:	d9001d84 	addi	r4,sp,118
1000d1c8:	100b883a 	mov	r5,r2
1000d1cc:	d9000015 	stw	r4,0(sp)
1000d1d0:	d8800115 	stw	r2,4(sp)
1000d1d4:	d811883a 	mov	r8,sp
1000d1d8:	2809883a 	mov	r4,r5
1000d1dc:	42000204 	addi	r8,r8,8
1000d1e0:	29400044 	addi	r5,r5,1
1000d1e4:	003d9506 	br	1000c83c <__alt_data_end+0xf800c83c>
1000d1e8:	3800fd26 	beq	r7,zero,1000d5e0 <___vfiprintf_internal_r+0x12b4>
1000d1ec:	00800084 	movi	r2,2
1000d1f0:	d9001d04 	addi	r4,sp,116
1000d1f4:	d9000015 	stw	r4,0(sp)
1000d1f8:	d8800115 	stw	r2,4(sp)
1000d1fc:	01400044 	movi	r5,1
1000d200:	d811883a 	mov	r8,sp
1000d204:	2809883a 	mov	r4,r5
1000d208:	42000204 	addi	r8,r8,8
1000d20c:	29400044 	addi	r5,r5,1
1000d210:	003f4606 	br	1000cf2c <__alt_data_end+0xf800cf2c>
1000d214:	d8802517 	ldw	r2,148(sp)
1000d218:	14c0010e 	bge	r2,r19,1000d220 <___vfiprintf_internal_r+0xef4>
1000d21c:	9805883a 	mov	r2,r19
1000d220:	d9402417 	ldw	r5,144(sp)
1000d224:	288b883a 	add	r5,r5,r2
1000d228:	d9402415 	stw	r5,144(sp)
1000d22c:	003dd006 	br	1000c970 <__alt_data_end+0xf800c970>
1000d230:	d8001d85 	stb	zero,118(sp)
1000d234:	80005d16 	blt	r16,zero,1000d3ac <___vfiprintf_internal_r+0x1080>
1000d238:	00ffdfc4 	movi	r3,-129
1000d23c:	9d04b03a 	or	r2,r19,r20
1000d240:	88e2703a 	and	r17,r17,r3
1000d244:	103d3726 	beq	r2,zero,1000c724 <__alt_data_end+0xf800c724>
1000d248:	002b883a 	mov	r21,zero
1000d24c:	d9002617 	ldw	r4,152(sp)
1000d250:	ddc01a04 	addi	r23,sp,104
1000d254:	988003cc 	andi	r2,r19,15
1000d258:	a006973a 	slli	r3,r20,28
1000d25c:	2085883a 	add	r2,r4,r2
1000d260:	9826d13a 	srli	r19,r19,4
1000d264:	10800003 	ldbu	r2,0(r2)
1000d268:	a028d13a 	srli	r20,r20,4
1000d26c:	bdffffc4 	addi	r23,r23,-1
1000d270:	1ce6b03a 	or	r19,r3,r19
1000d274:	b8800005 	stb	r2,0(r23)
1000d278:	9d04b03a 	or	r2,r19,r20
1000d27c:	103ff51e 	bne	r2,zero,1000d254 <__alt_data_end+0xf800d254>
1000d280:	d8801e17 	ldw	r2,120(sp)
1000d284:	15e9c83a 	sub	r20,r2,r23
1000d288:	003d2b06 	br	1000c738 <__alt_data_end+0xf800c738>
1000d28c:	d9402017 	ldw	r5,128(sp)
1000d290:	d9002117 	ldw	r4,132(sp)
1000d294:	d9801a04 	addi	r6,sp,104
1000d298:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d29c:	103f5b1e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d2a0:	d8801c17 	ldw	r2,112(sp)
1000d2a4:	d811883a 	mov	r8,sp
1000d2a8:	003f6706 	br	1000d048 <__alt_data_end+0xf800d048>
1000d2ac:	d9402017 	ldw	r5,128(sp)
1000d2b0:	d9002117 	ldw	r4,132(sp)
1000d2b4:	d9801a04 	addi	r6,sp,104
1000d2b8:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d2bc:	103f531e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d2c0:	d811883a 	mov	r8,sp
1000d2c4:	003cd906 	br	1000c62c <__alt_data_end+0xf800c62c>
1000d2c8:	10803fcc 	andi	r2,r2,255
1000d2cc:	1080201c 	xori	r2,r2,128
1000d2d0:	10bfe004 	addi	r2,r2,-128
1000d2d4:	00c00c04 	movi	r3,48
1000d2d8:	10ffe926 	beq	r2,r3,1000d280 <__alt_data_end+0xf800d280>
1000d2dc:	b8ffffc5 	stb	r3,-1(r23)
1000d2e0:	d8c01e17 	ldw	r3,120(sp)
1000d2e4:	b8bfffc4 	addi	r2,r23,-1
1000d2e8:	102f883a 	mov	r23,r2
1000d2ec:	18a9c83a 	sub	r20,r3,r2
1000d2f0:	003d1106 	br	1000c738 <__alt_data_end+0xf800c738>
1000d2f4:	d9402017 	ldw	r5,128(sp)
1000d2f8:	d9002117 	ldw	r4,132(sp)
1000d2fc:	d9801a04 	addi	r6,sp,104
1000d300:	d8c02a15 	stw	r3,168(sp)
1000d304:	d9c02b15 	stw	r7,172(sp)
1000d308:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d30c:	d8c02a17 	ldw	r3,168(sp)
1000d310:	d9c02b17 	ldw	r7,172(sp)
1000d314:	103f3d1e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d318:	d9001b17 	ldw	r4,108(sp)
1000d31c:	d8801c17 	ldw	r2,112(sp)
1000d320:	d811883a 	mov	r8,sp
1000d324:	21400044 	addi	r5,r4,1
1000d328:	003d4406 	br	1000c83c <__alt_data_end+0xf800c83c>
1000d32c:	d9402017 	ldw	r5,128(sp)
1000d330:	d9002117 	ldw	r4,132(sp)
1000d334:	d9801a04 	addi	r6,sp,104
1000d338:	d8c02a15 	stw	r3,168(sp)
1000d33c:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d340:	d8c02a17 	ldw	r3,168(sp)
1000d344:	103f311e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d348:	d9001b17 	ldw	r4,108(sp)
1000d34c:	d8801c17 	ldw	r2,112(sp)
1000d350:	d811883a 	mov	r8,sp
1000d354:	21400044 	addi	r5,r4,1
1000d358:	003ef406 	br	1000cf2c <__alt_data_end+0xf800cf2c>
1000d35c:	1000bd1e 	bne	r2,zero,1000d654 <___vfiprintf_internal_r+0x1328>
1000d360:	01400044 	movi	r5,1
1000d364:	0009883a 	mov	r4,zero
1000d368:	d811883a 	mov	r8,sp
1000d36c:	003ef106 	br	1000cf34 <__alt_data_end+0xf800cf34>
1000d370:	d9402017 	ldw	r5,128(sp)
1000d374:	d9002117 	ldw	r4,132(sp)
1000d378:	d9801a04 	addi	r6,sp,104
1000d37c:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d380:	103f221e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d384:	d9401b17 	ldw	r5,108(sp)
1000d388:	d8801c17 	ldw	r2,112(sp)
1000d38c:	d811883a 	mov	r8,sp
1000d390:	29400044 	addi	r5,r5,1
1000d394:	003d6206 	br	1000c920 <__alt_data_end+0xf800c920>
1000d398:	01440074 	movhi	r5,4097
1000d39c:	29504504 	addi	r5,r5,16660
1000d3a0:	d9402615 	stw	r5,152(sp)
1000d3a4:	d8c02215 	stw	r3,136(sp)
1000d3a8:	1023883a 	mov	r17,r2
1000d3ac:	9d04b03a 	or	r2,r19,r20
1000d3b0:	103fa51e 	bne	r2,zero,1000d248 <__alt_data_end+0xf800d248>
1000d3b4:	002b883a 	mov	r21,zero
1000d3b8:	00800084 	movi	r2,2
1000d3bc:	003e4a06 	br	1000cce8 <__alt_data_end+0xf800cce8>
1000d3c0:	01440074 	movhi	r5,4097
1000d3c4:	29504504 	addi	r5,r5,16660
1000d3c8:	002b883a 	mov	r21,zero
1000d3cc:	d9402615 	stw	r5,152(sp)
1000d3d0:	003f9e06 	br	1000d24c <__alt_data_end+0xf800d24c>
1000d3d4:	d9402217 	ldw	r5,136(sp)
1000d3d8:	d8001d85 	stb	zero,118(sp)
1000d3dc:	0029883a 	mov	r20,zero
1000d3e0:	28800104 	addi	r2,r5,4
1000d3e4:	2cc00017 	ldw	r19,0(r5)
1000d3e8:	803e3a16 	blt	r16,zero,1000ccd4 <__alt_data_end+0xf800ccd4>
1000d3ec:	00ffdfc4 	movi	r3,-129
1000d3f0:	d8802215 	stw	r2,136(sp)
1000d3f4:	88e2703a 	and	r17,r17,r3
1000d3f8:	002b883a 	mov	r21,zero
1000d3fc:	983e9b26 	beq	r19,zero,1000ce6c <__alt_data_end+0xf800ce6c>
1000d400:	00800244 	movi	r2,9
1000d404:	14fdc936 	bltu	r2,r19,1000cb2c <__alt_data_end+0xf800cb2c>
1000d408:	003e9a06 	br	1000ce74 <__alt_data_end+0xf800ce74>
1000d40c:	00800c04 	movi	r2,48
1000d410:	d8c01d45 	stb	r3,117(sp)
1000d414:	d8801d05 	stb	r2,116(sp)
1000d418:	d8001d85 	stb	zero,118(sp)
1000d41c:	88c00094 	ori	r3,r17,2
1000d420:	80009c16 	blt	r16,zero,1000d694 <___vfiprintf_internal_r+0x1368>
1000d424:	00bfdfc4 	movi	r2,-129
1000d428:	88a2703a 	and	r17,r17,r2
1000d42c:	8c400094 	ori	r17,r17,2
1000d430:	002b883a 	mov	r21,zero
1000d434:	003f8506 	br	1000d24c <__alt_data_end+0xf800d24c>
1000d438:	b029883a 	mov	r20,r22
1000d43c:	003c0b06 	br	1000c46c <__alt_data_end+0xf800c46c>
1000d440:	04e7c83a 	sub	r19,zero,r19
1000d444:	05400b44 	movi	r21,45
1000d448:	9804c03a 	cmpne	r2,r19,zero
1000d44c:	0529c83a 	sub	r20,zero,r20
1000d450:	dd401d85 	stb	r21,118(sp)
1000d454:	a0a9c83a 	sub	r20,r20,r2
1000d458:	80009716 	blt	r16,zero,1000d6b8 <___vfiprintf_internal_r+0x138c>
1000d45c:	00bfdfc4 	movi	r2,-129
1000d460:	88a2703a 	and	r17,r17,r2
1000d464:	003db006 	br	1000cb28 <__alt_data_end+0xf800cb28>
1000d468:	b0c00007 	ldb	r3,0(r22)
1000d46c:	003c0c06 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000d470:	8880100c 	andi	r2,r17,64
1000d474:	d8001d85 	stb	zero,118(sp)
1000d478:	1000461e 	bne	r2,zero,1000d594 <___vfiprintf_internal_r+0x1268>
1000d47c:	d9002217 	ldw	r4,136(sp)
1000d480:	0029883a 	mov	r20,zero
1000d484:	20800104 	addi	r2,r4,4
1000d488:	24c00017 	ldw	r19,0(r4)
1000d48c:	803df80e 	bge	r16,zero,1000cc70 <__alt_data_end+0xf800cc70>
1000d490:	9d06b03a 	or	r3,r19,r20
1000d494:	d8802215 	stw	r2,136(sp)
1000d498:	183d5e1e 	bne	r3,zero,1000ca14 <__alt_data_end+0xf800ca14>
1000d49c:	002b883a 	mov	r21,zero
1000d4a0:	0005883a 	mov	r2,zero
1000d4a4:	003e1006 	br	1000cce8 <__alt_data_end+0xf800cce8>
1000d4a8:	8880040c 	andi	r2,r17,16
1000d4ac:	1000321e 	bne	r2,zero,1000d578 <___vfiprintf_internal_r+0x124c>
1000d4b0:	8c40100c 	andi	r17,r17,64
1000d4b4:	88008d26 	beq	r17,zero,1000d6ec <___vfiprintf_internal_r+0x13c0>
1000d4b8:	d9402217 	ldw	r5,136(sp)
1000d4bc:	d8c02417 	ldw	r3,144(sp)
1000d4c0:	28800017 	ldw	r2,0(r5)
1000d4c4:	29400104 	addi	r5,r5,4
1000d4c8:	d9402215 	stw	r5,136(sp)
1000d4cc:	10c0000d 	sth	r3,0(r2)
1000d4d0:	003bca06 	br	1000c3fc <__alt_data_end+0xf800c3fc>
1000d4d4:	8880100c 	andi	r2,r17,64
1000d4d8:	10003a26 	beq	r2,zero,1000d5c4 <___vfiprintf_internal_r+0x1298>
1000d4dc:	d8802217 	ldw	r2,136(sp)
1000d4e0:	14c0000f 	ldh	r19,0(r2)
1000d4e4:	10800104 	addi	r2,r2,4
1000d4e8:	d8802215 	stw	r2,136(sp)
1000d4ec:	9829d7fa 	srai	r20,r19,31
1000d4f0:	a005883a 	mov	r2,r20
1000d4f4:	003d8506 	br	1000cb0c <__alt_data_end+0xf800cb0c>
1000d4f8:	8880100c 	andi	r2,r17,64
1000d4fc:	10002b26 	beq	r2,zero,1000d5ac <___vfiprintf_internal_r+0x1280>
1000d500:	d8802217 	ldw	r2,136(sp)
1000d504:	0029883a 	mov	r20,zero
1000d508:	14c0000b 	ldhu	r19,0(r2)
1000d50c:	10800104 	addi	r2,r2,4
1000d510:	d8802215 	stw	r2,136(sp)
1000d514:	003d5d06 	br	1000ca8c <__alt_data_end+0xf800ca8c>
1000d518:	d9402017 	ldw	r5,128(sp)
1000d51c:	d9002117 	ldw	r4,132(sp)
1000d520:	d9801a04 	addi	r6,sp,104
1000d524:	d8c02a15 	stw	r3,168(sp)
1000d528:	d9c02b15 	stw	r7,172(sp)
1000d52c:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d530:	d8c02a17 	ldw	r3,168(sp)
1000d534:	d9c02b17 	ldw	r7,172(sp)
1000d538:	103eb41e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d53c:	d9001b17 	ldw	r4,108(sp)
1000d540:	d8801c17 	ldw	r2,112(sp)
1000d544:	d811883a 	mov	r8,sp
1000d548:	21400044 	addi	r5,r4,1
1000d54c:	003e6706 	br	1000ceec <__alt_data_end+0xf800ceec>
1000d550:	00bfffc4 	movi	r2,-1
1000d554:	003c4a06 	br	1000c680 <__alt_data_end+0xf800c680>
1000d558:	9805883a 	mov	r2,r19
1000d55c:	003ee806 	br	1000d100 <__alt_data_end+0xf800d100>
1000d560:	d8c02217 	ldw	r3,136(sp)
1000d564:	0029883a 	mov	r20,zero
1000d568:	18800104 	addi	r2,r3,4
1000d56c:	1cc0000b 	ldhu	r19,0(r3)
1000d570:	803f9e0e 	bge	r16,zero,1000d3ec <__alt_data_end+0xf800d3ec>
1000d574:	003dd706 	br	1000ccd4 <__alt_data_end+0xf800ccd4>
1000d578:	d8c02217 	ldw	r3,136(sp)
1000d57c:	d9002417 	ldw	r4,144(sp)
1000d580:	18800017 	ldw	r2,0(r3)
1000d584:	18c00104 	addi	r3,r3,4
1000d588:	d8c02215 	stw	r3,136(sp)
1000d58c:	11000015 	stw	r4,0(r2)
1000d590:	003b9a06 	br	1000c3fc <__alt_data_end+0xf800c3fc>
1000d594:	d8c02217 	ldw	r3,136(sp)
1000d598:	0029883a 	mov	r20,zero
1000d59c:	18800104 	addi	r2,r3,4
1000d5a0:	1cc0000b 	ldhu	r19,0(r3)
1000d5a4:	803db20e 	bge	r16,zero,1000cc70 <__alt_data_end+0xf800cc70>
1000d5a8:	003fb906 	br	1000d490 <__alt_data_end+0xf800d490>
1000d5ac:	d9002217 	ldw	r4,136(sp)
1000d5b0:	0029883a 	mov	r20,zero
1000d5b4:	24c00017 	ldw	r19,0(r4)
1000d5b8:	21000104 	addi	r4,r4,4
1000d5bc:	d9002215 	stw	r4,136(sp)
1000d5c0:	003d3206 	br	1000ca8c <__alt_data_end+0xf800ca8c>
1000d5c4:	d8c02217 	ldw	r3,136(sp)
1000d5c8:	1cc00017 	ldw	r19,0(r3)
1000d5cc:	18c00104 	addi	r3,r3,4
1000d5d0:	d8c02215 	stw	r3,136(sp)
1000d5d4:	9829d7fa 	srai	r20,r19,31
1000d5d8:	a005883a 	mov	r2,r20
1000d5dc:	003d4b06 	br	1000cb0c <__alt_data_end+0xf800cb0c>
1000d5e0:	0009883a 	mov	r4,zero
1000d5e4:	01400044 	movi	r5,1
1000d5e8:	d811883a 	mov	r8,sp
1000d5ec:	003e4f06 	br	1000cf2c <__alt_data_end+0xf800cf2c>
1000d5f0:	d8c02215 	stw	r3,136(sp)
1000d5f4:	002b883a 	mov	r21,zero
1000d5f8:	003db806 	br	1000ccdc <__alt_data_end+0xf800ccdc>
1000d5fc:	d811883a 	mov	r8,sp
1000d600:	003e9606 	br	1000d05c <__alt_data_end+0xf800d05c>
1000d604:	01040074 	movhi	r4,4097
1000d608:	2110b604 	addi	r4,r4,17112
1000d60c:	d9002315 	stw	r4,140(sp)
1000d610:	003e6306 	br	1000cfa0 <__alt_data_end+0xf800cfa0>
1000d614:	b0c00043 	ldbu	r3,1(r22)
1000d618:	8c400814 	ori	r17,r17,32
1000d61c:	b5800044 	addi	r22,r22,1
1000d620:	18c03fcc 	andi	r3,r3,255
1000d624:	18c0201c 	xori	r3,r3,128
1000d628:	18ffe004 	addi	r3,r3,-128
1000d62c:	003b9c06 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000d630:	b809883a 	mov	r4,r23
1000d634:	da002a15 	stw	r8,168(sp)
1000d638:	00012700 	call	10001270 <strlen>
1000d63c:	1029883a 	mov	r20,r2
1000d640:	dd401d83 	ldbu	r21,118(sp)
1000d644:	df002215 	stw	fp,136(sp)
1000d648:	0021883a 	mov	r16,zero
1000d64c:	da002a17 	ldw	r8,168(sp)
1000d650:	003c3906 	br	1000c738 <__alt_data_end+0xf800c738>
1000d654:	d9402017 	ldw	r5,128(sp)
1000d658:	d9002117 	ldw	r4,132(sp)
1000d65c:	d9801a04 	addi	r6,sp,104
1000d660:	000c2180 	call	1000c218 <__sprint_r.part.0>
1000d664:	103e691e 	bne	r2,zero,1000d00c <__alt_data_end+0xf800d00c>
1000d668:	d9001b17 	ldw	r4,108(sp)
1000d66c:	d8801c17 	ldw	r2,112(sp)
1000d670:	d811883a 	mov	r8,sp
1000d674:	21400044 	addi	r5,r4,1
1000d678:	003e2e06 	br	1000cf34 <__alt_data_end+0xf800cf34>
1000d67c:	01040074 	movhi	r4,4097
1000d680:	2110ba04 	addi	r4,r4,17128
1000d684:	d9002315 	stw	r4,140(sp)
1000d688:	d9001b17 	ldw	r4,108(sp)
1000d68c:	21000044 	addi	r4,r4,1
1000d690:	003c5e06 	br	1000c80c <__alt_data_end+0xf800c80c>
1000d694:	002b883a 	mov	r21,zero
1000d698:	00800084 	movi	r2,2
1000d69c:	10803fcc 	andi	r2,r2,255
1000d6a0:	01000044 	movi	r4,1
1000d6a4:	11002b26 	beq	r2,r4,1000d754 <___vfiprintf_internal_r+0x1428>
1000d6a8:	01000084 	movi	r4,2
1000d6ac:	11002b1e 	bne	r2,r4,1000d75c <___vfiprintf_internal_r+0x1430>
1000d6b0:	1823883a 	mov	r17,r3
1000d6b4:	003ee506 	br	1000d24c <__alt_data_end+0xf800d24c>
1000d6b8:	8807883a 	mov	r3,r17
1000d6bc:	00800044 	movi	r2,1
1000d6c0:	003ff606 	br	1000d69c <__alt_data_end+0xf800d69c>
1000d6c4:	00800184 	movi	r2,6
1000d6c8:	1400012e 	bgeu	r2,r16,1000d6d0 <___vfiprintf_internal_r+0x13a4>
1000d6cc:	1021883a 	mov	r16,r2
1000d6d0:	8029883a 	mov	r20,r16
1000d6d4:	8027883a 	mov	r19,r16
1000d6d8:	80002216 	blt	r16,zero,1000d764 <___vfiprintf_internal_r+0x1438>
1000d6dc:	05c40074 	movhi	r23,4097
1000d6e0:	df002215 	stw	fp,136(sp)
1000d6e4:	bdd04a04 	addi	r23,r23,16680
1000d6e8:	003cfb06 	br	1000cad8 <__alt_data_end+0xf800cad8>
1000d6ec:	d9002217 	ldw	r4,136(sp)
1000d6f0:	d9402417 	ldw	r5,144(sp)
1000d6f4:	20800017 	ldw	r2,0(r4)
1000d6f8:	21000104 	addi	r4,r4,4
1000d6fc:	d9002215 	stw	r4,136(sp)
1000d700:	11400015 	stw	r5,0(r2)
1000d704:	003b3d06 	br	1000c3fc <__alt_data_end+0xf800c3fc>
1000d708:	01440074 	movhi	r5,4097
1000d70c:	2950ba04 	addi	r5,r5,17128
1000d710:	d9402315 	stw	r5,140(sp)
1000d714:	d9401b17 	ldw	r5,108(sp)
1000d718:	29400044 	addi	r5,r5,1
1000d71c:	003e6d06 	br	1000d0d4 <__alt_data_end+0xf800d0d4>
1000d720:	8029883a 	mov	r20,r16
1000d724:	dd401d83 	ldbu	r21,118(sp)
1000d728:	df002215 	stw	fp,136(sp)
1000d72c:	0021883a 	mov	r16,zero
1000d730:	003c0106 	br	1000c738 <__alt_data_end+0xf800c738>
1000d734:	00c40074 	movhi	r3,4097
1000d738:	18d0b604 	addi	r3,r3,17112
1000d73c:	d8c02315 	stw	r3,140(sp)
1000d740:	280d883a 	mov	r6,r5
1000d744:	003c6906 	br	1000c8ec <__alt_data_end+0xf800c8ec>
1000d748:	802d883a 	mov	r22,r16
1000d74c:	0021883a 	mov	r16,zero
1000d750:	003b5406 	br	1000c4a4 <__alt_data_end+0xf800c4a4>
1000d754:	1823883a 	mov	r17,r3
1000d758:	003cf306 	br	1000cb28 <__alt_data_end+0xf800cb28>
1000d75c:	1823883a 	mov	r17,r3
1000d760:	003cad06 	br	1000ca18 <__alt_data_end+0xf800ca18>
1000d764:	0027883a 	mov	r19,zero
1000d768:	003fdc06 	br	1000d6dc <__alt_data_end+0xf800d6dc>
1000d76c:	d9402217 	ldw	r5,136(sp)
1000d770:	8005883a 	mov	r2,r16
1000d774:	b0c00043 	ldbu	r3,1(r22)
1000d778:	2c000017 	ldw	r16,0(r5)
1000d77c:	29000104 	addi	r4,r5,4
1000d780:	d9002215 	stw	r4,136(sp)
1000d784:	102d883a 	mov	r22,r2
1000d788:	803fa50e 	bge	r16,zero,1000d620 <__alt_data_end+0xf800d620>
1000d78c:	18c03fcc 	andi	r3,r3,255
1000d790:	18c0201c 	xori	r3,r3,128
1000d794:	043fffc4 	movi	r16,-1
1000d798:	18ffe004 	addi	r3,r3,-128
1000d79c:	003b4006 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000d7a0:	d9402303 	ldbu	r5,140(sp)
1000d7a4:	d9401d85 	stb	r5,118(sp)
1000d7a8:	003cae06 	br	1000ca64 <__alt_data_end+0xf800ca64>
1000d7ac:	d8c02303 	ldbu	r3,140(sp)
1000d7b0:	d8c01d85 	stb	r3,118(sp)
1000d7b4:	003d1406 	br	1000cc08 <__alt_data_end+0xf800cc08>
1000d7b8:	d8c02303 	ldbu	r3,140(sp)
1000d7bc:	d8c01d85 	stb	r3,118(sp)
1000d7c0:	003cca06 	br	1000caec <__alt_data_end+0xf800caec>
1000d7c4:	8880004c 	andi	r2,r17,1
1000d7c8:	002b883a 	mov	r21,zero
1000d7cc:	10000526 	beq	r2,zero,1000d7e4 <___vfiprintf_internal_r+0x14b8>
1000d7d0:	00800c04 	movi	r2,48
1000d7d4:	d88019c5 	stb	r2,103(sp)
1000d7d8:	dd002817 	ldw	r20,160(sp)
1000d7dc:	ddc019c4 	addi	r23,sp,103
1000d7e0:	003bd506 	br	1000c738 <__alt_data_end+0xf800c738>
1000d7e4:	0029883a 	mov	r20,zero
1000d7e8:	ddc01a04 	addi	r23,sp,104
1000d7ec:	003bd206 	br	1000c738 <__alt_data_end+0xf800c738>
1000d7f0:	d9002303 	ldbu	r4,140(sp)
1000d7f4:	d9001d85 	stb	r4,118(sp)
1000d7f8:	003da606 	br	1000ce94 <__alt_data_end+0xf800ce94>
1000d7fc:	d8c02303 	ldbu	r3,140(sp)
1000d800:	d8c01d85 	stb	r3,118(sp)
1000d804:	003c7606 	br	1000c9e0 <__alt_data_end+0xf800c9e0>
1000d808:	d8c02303 	ldbu	r3,140(sp)
1000d80c:	d8c01d85 	stb	r3,118(sp)
1000d810:	003c6506 	br	1000c9a8 <__alt_data_end+0xf800c9a8>
1000d814:	d9002303 	ldbu	r4,140(sp)
1000d818:	d9001d85 	stb	r4,118(sp)
1000d81c:	003d3d06 	br	1000cd14 <__alt_data_end+0xf800cd14>
1000d820:	d8c02303 	ldbu	r3,140(sp)
1000d824:	d8c01d85 	stb	r3,118(sp)
1000d828:	003d1d06 	br	1000cca0 <__alt_data_end+0xf800cca0>
1000d82c:	d8c02303 	ldbu	r3,140(sp)
1000d830:	d8c01d85 	stb	r3,118(sp)
1000d834:	003d0306 	br	1000cc44 <__alt_data_end+0xf800cc44>

1000d838 <__vfiprintf_internal>:
1000d838:	00840074 	movhi	r2,4097
1000d83c:	10987104 	addi	r2,r2,25028
1000d840:	300f883a 	mov	r7,r6
1000d844:	280d883a 	mov	r6,r5
1000d848:	200b883a 	mov	r5,r4
1000d84c:	11000017 	ldw	r4,0(r2)
1000d850:	000c32c1 	jmpi	1000c32c <___vfiprintf_internal_r>

1000d854 <__sbprintf>:
1000d854:	2880030b 	ldhu	r2,12(r5)
1000d858:	2ac01917 	ldw	r11,100(r5)
1000d85c:	2a80038b 	ldhu	r10,14(r5)
1000d860:	2a400717 	ldw	r9,28(r5)
1000d864:	2a000917 	ldw	r8,36(r5)
1000d868:	defee204 	addi	sp,sp,-1144
1000d86c:	00c10004 	movi	r3,1024
1000d870:	dc011a15 	stw	r16,1128(sp)
1000d874:	10bfff4c 	andi	r2,r2,65533
1000d878:	2821883a 	mov	r16,r5
1000d87c:	d8cb883a 	add	r5,sp,r3
1000d880:	dc811c15 	stw	r18,1136(sp)
1000d884:	dc411b15 	stw	r17,1132(sp)
1000d888:	dfc11d15 	stw	ra,1140(sp)
1000d88c:	2025883a 	mov	r18,r4
1000d890:	d881030d 	sth	r2,1036(sp)
1000d894:	dac11915 	stw	r11,1124(sp)
1000d898:	da81038d 	sth	r10,1038(sp)
1000d89c:	da410715 	stw	r9,1052(sp)
1000d8a0:	da010915 	stw	r8,1060(sp)
1000d8a4:	dec10015 	stw	sp,1024(sp)
1000d8a8:	dec10415 	stw	sp,1040(sp)
1000d8ac:	d8c10215 	stw	r3,1032(sp)
1000d8b0:	d8c10515 	stw	r3,1044(sp)
1000d8b4:	d8010615 	stw	zero,1048(sp)
1000d8b8:	000c32c0 	call	1000c32c <___vfiprintf_internal_r>
1000d8bc:	1023883a 	mov	r17,r2
1000d8c0:	10000416 	blt	r2,zero,1000d8d4 <__sbprintf+0x80>
1000d8c4:	d9410004 	addi	r5,sp,1024
1000d8c8:	9009883a 	mov	r4,r18
1000d8cc:	00075980 	call	10007598 <_fflush_r>
1000d8d0:	10000d1e 	bne	r2,zero,1000d908 <__sbprintf+0xb4>
1000d8d4:	d881030b 	ldhu	r2,1036(sp)
1000d8d8:	1080100c 	andi	r2,r2,64
1000d8dc:	10000326 	beq	r2,zero,1000d8ec <__sbprintf+0x98>
1000d8e0:	8080030b 	ldhu	r2,12(r16)
1000d8e4:	10801014 	ori	r2,r2,64
1000d8e8:	8080030d 	sth	r2,12(r16)
1000d8ec:	8805883a 	mov	r2,r17
1000d8f0:	dfc11d17 	ldw	ra,1140(sp)
1000d8f4:	dc811c17 	ldw	r18,1136(sp)
1000d8f8:	dc411b17 	ldw	r17,1132(sp)
1000d8fc:	dc011a17 	ldw	r16,1128(sp)
1000d900:	dec11e04 	addi	sp,sp,1144
1000d904:	f800283a 	ret
1000d908:	047fffc4 	movi	r17,-1
1000d90c:	003ff106 	br	1000d8d4 <__alt_data_end+0xf800d8d4>

1000d910 <_write_r>:
1000d910:	defffd04 	addi	sp,sp,-12
1000d914:	2805883a 	mov	r2,r5
1000d918:	dc000015 	stw	r16,0(sp)
1000d91c:	04040074 	movhi	r16,4097
1000d920:	dc400115 	stw	r17,4(sp)
1000d924:	300b883a 	mov	r5,r6
1000d928:	841ffb04 	addi	r16,r16,32748
1000d92c:	2023883a 	mov	r17,r4
1000d930:	380d883a 	mov	r6,r7
1000d934:	1009883a 	mov	r4,r2
1000d938:	dfc00215 	stw	ra,8(sp)
1000d93c:	80000015 	stw	zero,0(r16)
1000d940:	00120900 	call	10012090 <write>
1000d944:	00ffffc4 	movi	r3,-1
1000d948:	10c00526 	beq	r2,r3,1000d960 <_write_r+0x50>
1000d94c:	dfc00217 	ldw	ra,8(sp)
1000d950:	dc400117 	ldw	r17,4(sp)
1000d954:	dc000017 	ldw	r16,0(sp)
1000d958:	dec00304 	addi	sp,sp,12
1000d95c:	f800283a 	ret
1000d960:	80c00017 	ldw	r3,0(r16)
1000d964:	183ff926 	beq	r3,zero,1000d94c <__alt_data_end+0xf800d94c>
1000d968:	88c00015 	stw	r3,0(r17)
1000d96c:	003ff706 	br	1000d94c <__alt_data_end+0xf800d94c>

1000d970 <_close_r>:
1000d970:	defffd04 	addi	sp,sp,-12
1000d974:	dc000015 	stw	r16,0(sp)
1000d978:	04040074 	movhi	r16,4097
1000d97c:	dc400115 	stw	r17,4(sp)
1000d980:	841ffb04 	addi	r16,r16,32748
1000d984:	2023883a 	mov	r17,r4
1000d988:	2809883a 	mov	r4,r5
1000d98c:	dfc00215 	stw	ra,8(sp)
1000d990:	80000015 	stw	zero,0(r16)
1000d994:	00118080 	call	10011808 <close>
1000d998:	00ffffc4 	movi	r3,-1
1000d99c:	10c00526 	beq	r2,r3,1000d9b4 <_close_r+0x44>
1000d9a0:	dfc00217 	ldw	ra,8(sp)
1000d9a4:	dc400117 	ldw	r17,4(sp)
1000d9a8:	dc000017 	ldw	r16,0(sp)
1000d9ac:	dec00304 	addi	sp,sp,12
1000d9b0:	f800283a 	ret
1000d9b4:	80c00017 	ldw	r3,0(r16)
1000d9b8:	183ff926 	beq	r3,zero,1000d9a0 <__alt_data_end+0xf800d9a0>
1000d9bc:	88c00015 	stw	r3,0(r17)
1000d9c0:	003ff706 	br	1000d9a0 <__alt_data_end+0xf800d9a0>

1000d9c4 <_calloc_r>:
1000d9c4:	defffe04 	addi	sp,sp,-8
1000d9c8:	2805883a 	mov	r2,r5
1000d9cc:	dc000015 	stw	r16,0(sp)
1000d9d0:	300b883a 	mov	r5,r6
1000d9d4:	2021883a 	mov	r16,r4
1000d9d8:	1009883a 	mov	r4,r2
1000d9dc:	dfc00115 	stw	ra,4(sp)
1000d9e0:	0000fc80 	call	10000fc8 <__mulsi3>
1000d9e4:	100b883a 	mov	r5,r2
1000d9e8:	8009883a 	mov	r4,r16
1000d9ec:	00086f00 	call	100086f0 <_malloc_r>
1000d9f0:	10002926 	beq	r2,zero,1000da98 <_calloc_r+0xd4>
1000d9f4:	11bfff17 	ldw	r6,-4(r2)
1000d9f8:	1021883a 	mov	r16,r2
1000d9fc:	00bfff04 	movi	r2,-4
1000da00:	308c703a 	and	r6,r6,r2
1000da04:	00c00904 	movi	r3,36
1000da08:	308d883a 	add	r6,r6,r2
1000da0c:	19801636 	bltu	r3,r6,1000da68 <_calloc_r+0xa4>
1000da10:	008004c4 	movi	r2,19
1000da14:	11800b2e 	bgeu	r2,r6,1000da44 <_calloc_r+0x80>
1000da18:	80000015 	stw	zero,0(r16)
1000da1c:	80000115 	stw	zero,4(r16)
1000da20:	008006c4 	movi	r2,27
1000da24:	11801a2e 	bgeu	r2,r6,1000da90 <_calloc_r+0xcc>
1000da28:	80000215 	stw	zero,8(r16)
1000da2c:	80000315 	stw	zero,12(r16)
1000da30:	30c0151e 	bne	r6,r3,1000da88 <_calloc_r+0xc4>
1000da34:	80000415 	stw	zero,16(r16)
1000da38:	80800604 	addi	r2,r16,24
1000da3c:	80000515 	stw	zero,20(r16)
1000da40:	00000106 	br	1000da48 <_calloc_r+0x84>
1000da44:	8005883a 	mov	r2,r16
1000da48:	10000015 	stw	zero,0(r2)
1000da4c:	10000115 	stw	zero,4(r2)
1000da50:	10000215 	stw	zero,8(r2)
1000da54:	8005883a 	mov	r2,r16
1000da58:	dfc00117 	ldw	ra,4(sp)
1000da5c:	dc000017 	ldw	r16,0(sp)
1000da60:	dec00204 	addi	sp,sp,8
1000da64:	f800283a 	ret
1000da68:	000b883a 	mov	r5,zero
1000da6c:	8009883a 	mov	r4,r16
1000da70:	00092840 	call	10009284 <memset>
1000da74:	8005883a 	mov	r2,r16
1000da78:	dfc00117 	ldw	ra,4(sp)
1000da7c:	dc000017 	ldw	r16,0(sp)
1000da80:	dec00204 	addi	sp,sp,8
1000da84:	f800283a 	ret
1000da88:	80800404 	addi	r2,r16,16
1000da8c:	003fee06 	br	1000da48 <__alt_data_end+0xf800da48>
1000da90:	80800204 	addi	r2,r16,8
1000da94:	003fec06 	br	1000da48 <__alt_data_end+0xf800da48>
1000da98:	0005883a 	mov	r2,zero
1000da9c:	003fee06 	br	1000da58 <__alt_data_end+0xf800da58>

1000daa0 <_fclose_r>:
1000daa0:	28003926 	beq	r5,zero,1000db88 <_fclose_r+0xe8>
1000daa4:	defffc04 	addi	sp,sp,-16
1000daa8:	dc400115 	stw	r17,4(sp)
1000daac:	dc000015 	stw	r16,0(sp)
1000dab0:	dfc00315 	stw	ra,12(sp)
1000dab4:	dc800215 	stw	r18,8(sp)
1000dab8:	2023883a 	mov	r17,r4
1000dabc:	2821883a 	mov	r16,r5
1000dac0:	20000226 	beq	r4,zero,1000dacc <_fclose_r+0x2c>
1000dac4:	20800e17 	ldw	r2,56(r4)
1000dac8:	10002726 	beq	r2,zero,1000db68 <_fclose_r+0xc8>
1000dacc:	8080030f 	ldh	r2,12(r16)
1000dad0:	1000071e 	bne	r2,zero,1000daf0 <_fclose_r+0x50>
1000dad4:	0005883a 	mov	r2,zero
1000dad8:	dfc00317 	ldw	ra,12(sp)
1000dadc:	dc800217 	ldw	r18,8(sp)
1000dae0:	dc400117 	ldw	r17,4(sp)
1000dae4:	dc000017 	ldw	r16,0(sp)
1000dae8:	dec00404 	addi	sp,sp,16
1000daec:	f800283a 	ret
1000daf0:	800b883a 	mov	r5,r16
1000daf4:	8809883a 	mov	r4,r17
1000daf8:	000737c0 	call	1000737c <__sflush_r>
1000dafc:	1025883a 	mov	r18,r2
1000db00:	80800b17 	ldw	r2,44(r16)
1000db04:	10000426 	beq	r2,zero,1000db18 <_fclose_r+0x78>
1000db08:	81400717 	ldw	r5,28(r16)
1000db0c:	8809883a 	mov	r4,r17
1000db10:	103ee83a 	callr	r2
1000db14:	10001616 	blt	r2,zero,1000db70 <_fclose_r+0xd0>
1000db18:	8080030b 	ldhu	r2,12(r16)
1000db1c:	1080200c 	andi	r2,r2,128
1000db20:	1000151e 	bne	r2,zero,1000db78 <_fclose_r+0xd8>
1000db24:	81400c17 	ldw	r5,48(r16)
1000db28:	28000526 	beq	r5,zero,1000db40 <_fclose_r+0xa0>
1000db2c:	80801004 	addi	r2,r16,64
1000db30:	28800226 	beq	r5,r2,1000db3c <_fclose_r+0x9c>
1000db34:	8809883a 	mov	r4,r17
1000db38:	0007af80 	call	10007af8 <_free_r>
1000db3c:	80000c15 	stw	zero,48(r16)
1000db40:	81401117 	ldw	r5,68(r16)
1000db44:	28000326 	beq	r5,zero,1000db54 <_fclose_r+0xb4>
1000db48:	8809883a 	mov	r4,r17
1000db4c:	0007af80 	call	10007af8 <_free_r>
1000db50:	80001115 	stw	zero,68(r16)
1000db54:	00079940 	call	10007994 <__sfp_lock_acquire>
1000db58:	8000030d 	sth	zero,12(r16)
1000db5c:	00079980 	call	10007998 <__sfp_lock_release>
1000db60:	9005883a 	mov	r2,r18
1000db64:	003fdc06 	br	1000dad8 <__alt_data_end+0xf800dad8>
1000db68:	00079840 	call	10007984 <__sinit>
1000db6c:	003fd706 	br	1000dacc <__alt_data_end+0xf800dacc>
1000db70:	04bfffc4 	movi	r18,-1
1000db74:	003fe806 	br	1000db18 <__alt_data_end+0xf800db18>
1000db78:	81400417 	ldw	r5,16(r16)
1000db7c:	8809883a 	mov	r4,r17
1000db80:	0007af80 	call	10007af8 <_free_r>
1000db84:	003fe706 	br	1000db24 <__alt_data_end+0xf800db24>
1000db88:	0005883a 	mov	r2,zero
1000db8c:	f800283a 	ret

1000db90 <fclose>:
1000db90:	00840074 	movhi	r2,4097
1000db94:	10987104 	addi	r2,r2,25028
1000db98:	200b883a 	mov	r5,r4
1000db9c:	11000017 	ldw	r4,0(r2)
1000dba0:	000daa01 	jmpi	1000daa0 <_fclose_r>

1000dba4 <__fputwc>:
1000dba4:	defff804 	addi	sp,sp,-32
1000dba8:	dcc00415 	stw	r19,16(sp)
1000dbac:	dc800315 	stw	r18,12(sp)
1000dbb0:	dc000115 	stw	r16,4(sp)
1000dbb4:	dfc00715 	stw	ra,28(sp)
1000dbb8:	dd400615 	stw	r21,24(sp)
1000dbbc:	dd000515 	stw	r20,20(sp)
1000dbc0:	dc400215 	stw	r17,8(sp)
1000dbc4:	2027883a 	mov	r19,r4
1000dbc8:	2825883a 	mov	r18,r5
1000dbcc:	3021883a 	mov	r16,r6
1000dbd0:	00084e00 	call	100084e0 <__locale_mb_cur_max>
1000dbd4:	00c00044 	movi	r3,1
1000dbd8:	10c03e26 	beq	r2,r3,1000dcd4 <__fputwc+0x130>
1000dbdc:	81c01704 	addi	r7,r16,92
1000dbe0:	900d883a 	mov	r6,r18
1000dbe4:	d80b883a 	mov	r5,sp
1000dbe8:	9809883a 	mov	r4,r19
1000dbec:	000e0740 	call	1000e074 <_wcrtomb_r>
1000dbf0:	1029883a 	mov	r20,r2
1000dbf4:	00bfffc4 	movi	r2,-1
1000dbf8:	a0802026 	beq	r20,r2,1000dc7c <__fputwc+0xd8>
1000dbfc:	d9400003 	ldbu	r5,0(sp)
1000dc00:	a0001c26 	beq	r20,zero,1000dc74 <__fputwc+0xd0>
1000dc04:	0023883a 	mov	r17,zero
1000dc08:	05400284 	movi	r21,10
1000dc0c:	00000906 	br	1000dc34 <__fputwc+0x90>
1000dc10:	80800017 	ldw	r2,0(r16)
1000dc14:	11400005 	stb	r5,0(r2)
1000dc18:	80c00017 	ldw	r3,0(r16)
1000dc1c:	18c00044 	addi	r3,r3,1
1000dc20:	80c00015 	stw	r3,0(r16)
1000dc24:	8c400044 	addi	r17,r17,1
1000dc28:	dc45883a 	add	r2,sp,r17
1000dc2c:	8d00112e 	bgeu	r17,r20,1000dc74 <__fputwc+0xd0>
1000dc30:	11400003 	ldbu	r5,0(r2)
1000dc34:	80c00217 	ldw	r3,8(r16)
1000dc38:	18ffffc4 	addi	r3,r3,-1
1000dc3c:	80c00215 	stw	r3,8(r16)
1000dc40:	183ff30e 	bge	r3,zero,1000dc10 <__alt_data_end+0xf800dc10>
1000dc44:	80800617 	ldw	r2,24(r16)
1000dc48:	18801916 	blt	r3,r2,1000dcb0 <__fputwc+0x10c>
1000dc4c:	80800017 	ldw	r2,0(r16)
1000dc50:	11400005 	stb	r5,0(r2)
1000dc54:	80800017 	ldw	r2,0(r16)
1000dc58:	10c00003 	ldbu	r3,0(r2)
1000dc5c:	10800044 	addi	r2,r2,1
1000dc60:	1d402326 	beq	r3,r21,1000dcf0 <__fputwc+0x14c>
1000dc64:	80800015 	stw	r2,0(r16)
1000dc68:	8c400044 	addi	r17,r17,1
1000dc6c:	dc45883a 	add	r2,sp,r17
1000dc70:	8d3fef36 	bltu	r17,r20,1000dc30 <__alt_data_end+0xf800dc30>
1000dc74:	9005883a 	mov	r2,r18
1000dc78:	00000406 	br	1000dc8c <__fputwc+0xe8>
1000dc7c:	80c0030b 	ldhu	r3,12(r16)
1000dc80:	a005883a 	mov	r2,r20
1000dc84:	18c01014 	ori	r3,r3,64
1000dc88:	80c0030d 	sth	r3,12(r16)
1000dc8c:	dfc00717 	ldw	ra,28(sp)
1000dc90:	dd400617 	ldw	r21,24(sp)
1000dc94:	dd000517 	ldw	r20,20(sp)
1000dc98:	dcc00417 	ldw	r19,16(sp)
1000dc9c:	dc800317 	ldw	r18,12(sp)
1000dca0:	dc400217 	ldw	r17,8(sp)
1000dca4:	dc000117 	ldw	r16,4(sp)
1000dca8:	dec00804 	addi	sp,sp,32
1000dcac:	f800283a 	ret
1000dcb0:	800d883a 	mov	r6,r16
1000dcb4:	29403fcc 	andi	r5,r5,255
1000dcb8:	9809883a 	mov	r4,r19
1000dcbc:	000df1c0 	call	1000df1c <__swbuf_r>
1000dcc0:	10bfffe0 	cmpeqi	r2,r2,-1
1000dcc4:	10803fcc 	andi	r2,r2,255
1000dcc8:	103fd626 	beq	r2,zero,1000dc24 <__alt_data_end+0xf800dc24>
1000dccc:	00bfffc4 	movi	r2,-1
1000dcd0:	003fee06 	br	1000dc8c <__alt_data_end+0xf800dc8c>
1000dcd4:	90ffffc4 	addi	r3,r18,-1
1000dcd8:	01003f84 	movi	r4,254
1000dcdc:	20ffbf36 	bltu	r4,r3,1000dbdc <__alt_data_end+0xf800dbdc>
1000dce0:	900b883a 	mov	r5,r18
1000dce4:	dc800005 	stb	r18,0(sp)
1000dce8:	1029883a 	mov	r20,r2
1000dcec:	003fc506 	br	1000dc04 <__alt_data_end+0xf800dc04>
1000dcf0:	800d883a 	mov	r6,r16
1000dcf4:	a80b883a 	mov	r5,r21
1000dcf8:	9809883a 	mov	r4,r19
1000dcfc:	000df1c0 	call	1000df1c <__swbuf_r>
1000dd00:	10bfffe0 	cmpeqi	r2,r2,-1
1000dd04:	003fef06 	br	1000dcc4 <__alt_data_end+0xf800dcc4>

1000dd08 <_fputwc_r>:
1000dd08:	3080030b 	ldhu	r2,12(r6)
1000dd0c:	10c8000c 	andi	r3,r2,8192
1000dd10:	1800051e 	bne	r3,zero,1000dd28 <_fputwc_r+0x20>
1000dd14:	30c01917 	ldw	r3,100(r6)
1000dd18:	10880014 	ori	r2,r2,8192
1000dd1c:	3080030d 	sth	r2,12(r6)
1000dd20:	18880014 	ori	r2,r3,8192
1000dd24:	30801915 	stw	r2,100(r6)
1000dd28:	000dba41 	jmpi	1000dba4 <__fputwc>

1000dd2c <fputwc>:
1000dd2c:	00840074 	movhi	r2,4097
1000dd30:	defffc04 	addi	sp,sp,-16
1000dd34:	10987104 	addi	r2,r2,25028
1000dd38:	dc000115 	stw	r16,4(sp)
1000dd3c:	14000017 	ldw	r16,0(r2)
1000dd40:	dc400215 	stw	r17,8(sp)
1000dd44:	dfc00315 	stw	ra,12(sp)
1000dd48:	2023883a 	mov	r17,r4
1000dd4c:	80000226 	beq	r16,zero,1000dd58 <fputwc+0x2c>
1000dd50:	80800e17 	ldw	r2,56(r16)
1000dd54:	10001026 	beq	r2,zero,1000dd98 <fputwc+0x6c>
1000dd58:	2880030b 	ldhu	r2,12(r5)
1000dd5c:	10c8000c 	andi	r3,r2,8192
1000dd60:	1800051e 	bne	r3,zero,1000dd78 <fputwc+0x4c>
1000dd64:	28c01917 	ldw	r3,100(r5)
1000dd68:	10880014 	ori	r2,r2,8192
1000dd6c:	2880030d 	sth	r2,12(r5)
1000dd70:	18880014 	ori	r2,r3,8192
1000dd74:	28801915 	stw	r2,100(r5)
1000dd78:	280d883a 	mov	r6,r5
1000dd7c:	8009883a 	mov	r4,r16
1000dd80:	880b883a 	mov	r5,r17
1000dd84:	dfc00317 	ldw	ra,12(sp)
1000dd88:	dc400217 	ldw	r17,8(sp)
1000dd8c:	dc000117 	ldw	r16,4(sp)
1000dd90:	dec00404 	addi	sp,sp,16
1000dd94:	000dba41 	jmpi	1000dba4 <__fputwc>
1000dd98:	8009883a 	mov	r4,r16
1000dd9c:	d9400015 	stw	r5,0(sp)
1000dda0:	00079840 	call	10007984 <__sinit>
1000dda4:	d9400017 	ldw	r5,0(sp)
1000dda8:	003feb06 	br	1000dd58 <__alt_data_end+0xf800dd58>

1000ddac <_fstat_r>:
1000ddac:	defffd04 	addi	sp,sp,-12
1000ddb0:	2805883a 	mov	r2,r5
1000ddb4:	dc000015 	stw	r16,0(sp)
1000ddb8:	04040074 	movhi	r16,4097
1000ddbc:	dc400115 	stw	r17,4(sp)
1000ddc0:	841ffb04 	addi	r16,r16,32748
1000ddc4:	2023883a 	mov	r17,r4
1000ddc8:	300b883a 	mov	r5,r6
1000ddcc:	1009883a 	mov	r4,r2
1000ddd0:	dfc00215 	stw	ra,8(sp)
1000ddd4:	80000015 	stw	zero,0(r16)
1000ddd8:	00119480 	call	10011948 <fstat>
1000dddc:	00ffffc4 	movi	r3,-1
1000dde0:	10c00526 	beq	r2,r3,1000ddf8 <_fstat_r+0x4c>
1000dde4:	dfc00217 	ldw	ra,8(sp)
1000dde8:	dc400117 	ldw	r17,4(sp)
1000ddec:	dc000017 	ldw	r16,0(sp)
1000ddf0:	dec00304 	addi	sp,sp,12
1000ddf4:	f800283a 	ret
1000ddf8:	80c00017 	ldw	r3,0(r16)
1000ddfc:	183ff926 	beq	r3,zero,1000dde4 <__alt_data_end+0xf800dde4>
1000de00:	88c00015 	stw	r3,0(r17)
1000de04:	003ff706 	br	1000dde4 <__alt_data_end+0xf800dde4>

1000de08 <_isatty_r>:
1000de08:	defffd04 	addi	sp,sp,-12
1000de0c:	dc000015 	stw	r16,0(sp)
1000de10:	04040074 	movhi	r16,4097
1000de14:	dc400115 	stw	r17,4(sp)
1000de18:	841ffb04 	addi	r16,r16,32748
1000de1c:	2023883a 	mov	r17,r4
1000de20:	2809883a 	mov	r4,r5
1000de24:	dfc00215 	stw	ra,8(sp)
1000de28:	80000015 	stw	zero,0(r16)
1000de2c:	0011a3c0 	call	10011a3c <isatty>
1000de30:	00ffffc4 	movi	r3,-1
1000de34:	10c00526 	beq	r2,r3,1000de4c <_isatty_r+0x44>
1000de38:	dfc00217 	ldw	ra,8(sp)
1000de3c:	dc400117 	ldw	r17,4(sp)
1000de40:	dc000017 	ldw	r16,0(sp)
1000de44:	dec00304 	addi	sp,sp,12
1000de48:	f800283a 	ret
1000de4c:	80c00017 	ldw	r3,0(r16)
1000de50:	183ff926 	beq	r3,zero,1000de38 <__alt_data_end+0xf800de38>
1000de54:	88c00015 	stw	r3,0(r17)
1000de58:	003ff706 	br	1000de38 <__alt_data_end+0xf800de38>

1000de5c <_lseek_r>:
1000de5c:	defffd04 	addi	sp,sp,-12
1000de60:	2805883a 	mov	r2,r5
1000de64:	dc000015 	stw	r16,0(sp)
1000de68:	04040074 	movhi	r16,4097
1000de6c:	dc400115 	stw	r17,4(sp)
1000de70:	300b883a 	mov	r5,r6
1000de74:	841ffb04 	addi	r16,r16,32748
1000de78:	2023883a 	mov	r17,r4
1000de7c:	380d883a 	mov	r6,r7
1000de80:	1009883a 	mov	r4,r2
1000de84:	dfc00215 	stw	ra,8(sp)
1000de88:	80000015 	stw	zero,0(r16)
1000de8c:	0011c100 	call	10011c10 <lseek>
1000de90:	00ffffc4 	movi	r3,-1
1000de94:	10c00526 	beq	r2,r3,1000deac <_lseek_r+0x50>
1000de98:	dfc00217 	ldw	ra,8(sp)
1000de9c:	dc400117 	ldw	r17,4(sp)
1000dea0:	dc000017 	ldw	r16,0(sp)
1000dea4:	dec00304 	addi	sp,sp,12
1000dea8:	f800283a 	ret
1000deac:	80c00017 	ldw	r3,0(r16)
1000deb0:	183ff926 	beq	r3,zero,1000de98 <__alt_data_end+0xf800de98>
1000deb4:	88c00015 	stw	r3,0(r17)
1000deb8:	003ff706 	br	1000de98 <__alt_data_end+0xf800de98>

1000debc <_read_r>:
1000debc:	defffd04 	addi	sp,sp,-12
1000dec0:	2805883a 	mov	r2,r5
1000dec4:	dc000015 	stw	r16,0(sp)
1000dec8:	04040074 	movhi	r16,4097
1000decc:	dc400115 	stw	r17,4(sp)
1000ded0:	300b883a 	mov	r5,r6
1000ded4:	841ffb04 	addi	r16,r16,32748
1000ded8:	2023883a 	mov	r17,r4
1000dedc:	380d883a 	mov	r6,r7
1000dee0:	1009883a 	mov	r4,r2
1000dee4:	dfc00215 	stw	ra,8(sp)
1000dee8:	80000015 	stw	zero,0(r16)
1000deec:	0011dec0 	call	10011dec <read>
1000def0:	00ffffc4 	movi	r3,-1
1000def4:	10c00526 	beq	r2,r3,1000df0c <_read_r+0x50>
1000def8:	dfc00217 	ldw	ra,8(sp)
1000defc:	dc400117 	ldw	r17,4(sp)
1000df00:	dc000017 	ldw	r16,0(sp)
1000df04:	dec00304 	addi	sp,sp,12
1000df08:	f800283a 	ret
1000df0c:	80c00017 	ldw	r3,0(r16)
1000df10:	183ff926 	beq	r3,zero,1000def8 <__alt_data_end+0xf800def8>
1000df14:	88c00015 	stw	r3,0(r17)
1000df18:	003ff706 	br	1000def8 <__alt_data_end+0xf800def8>

1000df1c <__swbuf_r>:
1000df1c:	defffb04 	addi	sp,sp,-20
1000df20:	dcc00315 	stw	r19,12(sp)
1000df24:	dc800215 	stw	r18,8(sp)
1000df28:	dc000015 	stw	r16,0(sp)
1000df2c:	dfc00415 	stw	ra,16(sp)
1000df30:	dc400115 	stw	r17,4(sp)
1000df34:	2025883a 	mov	r18,r4
1000df38:	2827883a 	mov	r19,r5
1000df3c:	3021883a 	mov	r16,r6
1000df40:	20000226 	beq	r4,zero,1000df4c <__swbuf_r+0x30>
1000df44:	20800e17 	ldw	r2,56(r4)
1000df48:	10004226 	beq	r2,zero,1000e054 <__swbuf_r+0x138>
1000df4c:	80800617 	ldw	r2,24(r16)
1000df50:	8100030b 	ldhu	r4,12(r16)
1000df54:	80800215 	stw	r2,8(r16)
1000df58:	2080020c 	andi	r2,r4,8
1000df5c:	10003626 	beq	r2,zero,1000e038 <__swbuf_r+0x11c>
1000df60:	80c00417 	ldw	r3,16(r16)
1000df64:	18003426 	beq	r3,zero,1000e038 <__swbuf_r+0x11c>
1000df68:	2088000c 	andi	r2,r4,8192
1000df6c:	9c403fcc 	andi	r17,r19,255
1000df70:	10001a26 	beq	r2,zero,1000dfdc <__swbuf_r+0xc0>
1000df74:	80800017 	ldw	r2,0(r16)
1000df78:	81000517 	ldw	r4,20(r16)
1000df7c:	10c7c83a 	sub	r3,r2,r3
1000df80:	1900200e 	bge	r3,r4,1000e004 <__swbuf_r+0xe8>
1000df84:	18c00044 	addi	r3,r3,1
1000df88:	81000217 	ldw	r4,8(r16)
1000df8c:	11400044 	addi	r5,r2,1
1000df90:	81400015 	stw	r5,0(r16)
1000df94:	213fffc4 	addi	r4,r4,-1
1000df98:	81000215 	stw	r4,8(r16)
1000df9c:	14c00005 	stb	r19,0(r2)
1000dfa0:	80800517 	ldw	r2,20(r16)
1000dfa4:	10c01e26 	beq	r2,r3,1000e020 <__swbuf_r+0x104>
1000dfa8:	8080030b 	ldhu	r2,12(r16)
1000dfac:	1080004c 	andi	r2,r2,1
1000dfb0:	10000226 	beq	r2,zero,1000dfbc <__swbuf_r+0xa0>
1000dfb4:	00800284 	movi	r2,10
1000dfb8:	88801926 	beq	r17,r2,1000e020 <__swbuf_r+0x104>
1000dfbc:	8805883a 	mov	r2,r17
1000dfc0:	dfc00417 	ldw	ra,16(sp)
1000dfc4:	dcc00317 	ldw	r19,12(sp)
1000dfc8:	dc800217 	ldw	r18,8(sp)
1000dfcc:	dc400117 	ldw	r17,4(sp)
1000dfd0:	dc000017 	ldw	r16,0(sp)
1000dfd4:	dec00504 	addi	sp,sp,20
1000dfd8:	f800283a 	ret
1000dfdc:	81401917 	ldw	r5,100(r16)
1000dfe0:	00b7ffc4 	movi	r2,-8193
1000dfe4:	21080014 	ori	r4,r4,8192
1000dfe8:	2884703a 	and	r2,r5,r2
1000dfec:	80801915 	stw	r2,100(r16)
1000dff0:	80800017 	ldw	r2,0(r16)
1000dff4:	8100030d 	sth	r4,12(r16)
1000dff8:	81000517 	ldw	r4,20(r16)
1000dffc:	10c7c83a 	sub	r3,r2,r3
1000e000:	193fe016 	blt	r3,r4,1000df84 <__alt_data_end+0xf800df84>
1000e004:	800b883a 	mov	r5,r16
1000e008:	9009883a 	mov	r4,r18
1000e00c:	00075980 	call	10007598 <_fflush_r>
1000e010:	1000071e 	bne	r2,zero,1000e030 <__swbuf_r+0x114>
1000e014:	80800017 	ldw	r2,0(r16)
1000e018:	00c00044 	movi	r3,1
1000e01c:	003fda06 	br	1000df88 <__alt_data_end+0xf800df88>
1000e020:	800b883a 	mov	r5,r16
1000e024:	9009883a 	mov	r4,r18
1000e028:	00075980 	call	10007598 <_fflush_r>
1000e02c:	103fe326 	beq	r2,zero,1000dfbc <__alt_data_end+0xf800dfbc>
1000e030:	00bfffc4 	movi	r2,-1
1000e034:	003fe206 	br	1000dfc0 <__alt_data_end+0xf800dfc0>
1000e038:	800b883a 	mov	r5,r16
1000e03c:	9009883a 	mov	r4,r18
1000e040:	00059780 	call	10005978 <__swsetup_r>
1000e044:	103ffa1e 	bne	r2,zero,1000e030 <__alt_data_end+0xf800e030>
1000e048:	8100030b 	ldhu	r4,12(r16)
1000e04c:	80c00417 	ldw	r3,16(r16)
1000e050:	003fc506 	br	1000df68 <__alt_data_end+0xf800df68>
1000e054:	00079840 	call	10007984 <__sinit>
1000e058:	003fbc06 	br	1000df4c <__alt_data_end+0xf800df4c>

1000e05c <__swbuf>:
1000e05c:	00840074 	movhi	r2,4097
1000e060:	10987104 	addi	r2,r2,25028
1000e064:	280d883a 	mov	r6,r5
1000e068:	200b883a 	mov	r5,r4
1000e06c:	11000017 	ldw	r4,0(r2)
1000e070:	000df1c1 	jmpi	1000df1c <__swbuf_r>

1000e074 <_wcrtomb_r>:
1000e074:	defff604 	addi	sp,sp,-40
1000e078:	00840074 	movhi	r2,4097
1000e07c:	dc800815 	stw	r18,32(sp)
1000e080:	dc400715 	stw	r17,28(sp)
1000e084:	dc000615 	stw	r16,24(sp)
1000e088:	10987504 	addi	r2,r2,25044
1000e08c:	dfc00915 	stw	ra,36(sp)
1000e090:	2021883a 	mov	r16,r4
1000e094:	3823883a 	mov	r17,r7
1000e098:	14800017 	ldw	r18,0(r2)
1000e09c:	28001426 	beq	r5,zero,1000e0f0 <_wcrtomb_r+0x7c>
1000e0a0:	d9400415 	stw	r5,16(sp)
1000e0a4:	d9800515 	stw	r6,20(sp)
1000e0a8:	00084d40 	call	100084d4 <__locale_charset>
1000e0ac:	d9800517 	ldw	r6,20(sp)
1000e0b0:	d9400417 	ldw	r5,16(sp)
1000e0b4:	100f883a 	mov	r7,r2
1000e0b8:	dc400015 	stw	r17,0(sp)
1000e0bc:	8009883a 	mov	r4,r16
1000e0c0:	903ee83a 	callr	r18
1000e0c4:	00ffffc4 	movi	r3,-1
1000e0c8:	10c0031e 	bne	r2,r3,1000e0d8 <_wcrtomb_r+0x64>
1000e0cc:	88000015 	stw	zero,0(r17)
1000e0d0:	00c02284 	movi	r3,138
1000e0d4:	80c00015 	stw	r3,0(r16)
1000e0d8:	dfc00917 	ldw	ra,36(sp)
1000e0dc:	dc800817 	ldw	r18,32(sp)
1000e0e0:	dc400717 	ldw	r17,28(sp)
1000e0e4:	dc000617 	ldw	r16,24(sp)
1000e0e8:	dec00a04 	addi	sp,sp,40
1000e0ec:	f800283a 	ret
1000e0f0:	00084d40 	call	100084d4 <__locale_charset>
1000e0f4:	100f883a 	mov	r7,r2
1000e0f8:	dc400015 	stw	r17,0(sp)
1000e0fc:	000d883a 	mov	r6,zero
1000e100:	d9400104 	addi	r5,sp,4
1000e104:	8009883a 	mov	r4,r16
1000e108:	903ee83a 	callr	r18
1000e10c:	003fed06 	br	1000e0c4 <__alt_data_end+0xf800e0c4>

1000e110 <wcrtomb>:
1000e110:	defff604 	addi	sp,sp,-40
1000e114:	00840074 	movhi	r2,4097
1000e118:	dc800615 	stw	r18,24(sp)
1000e11c:	dc400515 	stw	r17,20(sp)
1000e120:	10987104 	addi	r2,r2,25028
1000e124:	dfc00915 	stw	ra,36(sp)
1000e128:	dd000815 	stw	r20,32(sp)
1000e12c:	dcc00715 	stw	r19,28(sp)
1000e130:	dc000415 	stw	r16,16(sp)
1000e134:	3025883a 	mov	r18,r6
1000e138:	14400017 	ldw	r17,0(r2)
1000e13c:	20001926 	beq	r4,zero,1000e1a4 <wcrtomb+0x94>
1000e140:	00840074 	movhi	r2,4097
1000e144:	10987504 	addi	r2,r2,25044
1000e148:	15000017 	ldw	r20,0(r2)
1000e14c:	2021883a 	mov	r16,r4
1000e150:	2827883a 	mov	r19,r5
1000e154:	00084d40 	call	100084d4 <__locale_charset>
1000e158:	100f883a 	mov	r7,r2
1000e15c:	dc800015 	stw	r18,0(sp)
1000e160:	980d883a 	mov	r6,r19
1000e164:	800b883a 	mov	r5,r16
1000e168:	8809883a 	mov	r4,r17
1000e16c:	a03ee83a 	callr	r20
1000e170:	00ffffc4 	movi	r3,-1
1000e174:	10c0031e 	bne	r2,r3,1000e184 <wcrtomb+0x74>
1000e178:	90000015 	stw	zero,0(r18)
1000e17c:	00c02284 	movi	r3,138
1000e180:	88c00015 	stw	r3,0(r17)
1000e184:	dfc00917 	ldw	ra,36(sp)
1000e188:	dd000817 	ldw	r20,32(sp)
1000e18c:	dcc00717 	ldw	r19,28(sp)
1000e190:	dc800617 	ldw	r18,24(sp)
1000e194:	dc400517 	ldw	r17,20(sp)
1000e198:	dc000417 	ldw	r16,16(sp)
1000e19c:	dec00a04 	addi	sp,sp,40
1000e1a0:	f800283a 	ret
1000e1a4:	00840074 	movhi	r2,4097
1000e1a8:	10987504 	addi	r2,r2,25044
1000e1ac:	14000017 	ldw	r16,0(r2)
1000e1b0:	00084d40 	call	100084d4 <__locale_charset>
1000e1b4:	100f883a 	mov	r7,r2
1000e1b8:	dc800015 	stw	r18,0(sp)
1000e1bc:	000d883a 	mov	r6,zero
1000e1c0:	d9400104 	addi	r5,sp,4
1000e1c4:	8809883a 	mov	r4,r17
1000e1c8:	803ee83a 	callr	r16
1000e1cc:	003fe806 	br	1000e170 <__alt_data_end+0xf800e170>

1000e1d0 <__ascii_wctomb>:
1000e1d0:	28000526 	beq	r5,zero,1000e1e8 <__ascii_wctomb+0x18>
1000e1d4:	00803fc4 	movi	r2,255
1000e1d8:	11800536 	bltu	r2,r6,1000e1f0 <__ascii_wctomb+0x20>
1000e1dc:	29800005 	stb	r6,0(r5)
1000e1e0:	00800044 	movi	r2,1
1000e1e4:	f800283a 	ret
1000e1e8:	0005883a 	mov	r2,zero
1000e1ec:	f800283a 	ret
1000e1f0:	00802284 	movi	r2,138
1000e1f4:	20800015 	stw	r2,0(r4)
1000e1f8:	00bfffc4 	movi	r2,-1
1000e1fc:	f800283a 	ret

1000e200 <_wctomb_r>:
1000e200:	00840074 	movhi	r2,4097
1000e204:	defff904 	addi	sp,sp,-28
1000e208:	10987504 	addi	r2,r2,25044
1000e20c:	dfc00615 	stw	ra,24(sp)
1000e210:	dc400515 	stw	r17,20(sp)
1000e214:	dc000415 	stw	r16,16(sp)
1000e218:	3823883a 	mov	r17,r7
1000e21c:	14000017 	ldw	r16,0(r2)
1000e220:	d9000115 	stw	r4,4(sp)
1000e224:	d9400215 	stw	r5,8(sp)
1000e228:	d9800315 	stw	r6,12(sp)
1000e22c:	00084d40 	call	100084d4 <__locale_charset>
1000e230:	d9800317 	ldw	r6,12(sp)
1000e234:	d9400217 	ldw	r5,8(sp)
1000e238:	d9000117 	ldw	r4,4(sp)
1000e23c:	100f883a 	mov	r7,r2
1000e240:	dc400015 	stw	r17,0(sp)
1000e244:	803ee83a 	callr	r16
1000e248:	dfc00617 	ldw	ra,24(sp)
1000e24c:	dc400517 	ldw	r17,20(sp)
1000e250:	dc000417 	ldw	r16,16(sp)
1000e254:	dec00704 	addi	sp,sp,28
1000e258:	f800283a 	ret

1000e25c <__muldi3>:
1000e25c:	defff604 	addi	sp,sp,-40
1000e260:	dd800615 	stw	r22,24(sp)
1000e264:	dd400515 	stw	r21,20(sp)
1000e268:	dc400115 	stw	r17,4(sp)
1000e26c:	357fffcc 	andi	r21,r6,65535
1000e270:	2022d43a 	srli	r17,r4,16
1000e274:	25bfffcc 	andi	r22,r4,65535
1000e278:	dcc00315 	stw	r19,12(sp)
1000e27c:	dc800215 	stw	r18,8(sp)
1000e280:	2027883a 	mov	r19,r4
1000e284:	2825883a 	mov	r18,r5
1000e288:	b009883a 	mov	r4,r22
1000e28c:	a80b883a 	mov	r5,r21
1000e290:	dfc00915 	stw	ra,36(sp)
1000e294:	df000815 	stw	fp,32(sp)
1000e298:	ddc00715 	stw	r23,28(sp)
1000e29c:	3839883a 	mov	fp,r7
1000e2a0:	302ed43a 	srli	r23,r6,16
1000e2a4:	dd000415 	stw	r20,16(sp)
1000e2a8:	dc000015 	stw	r16,0(sp)
1000e2ac:	3029883a 	mov	r20,r6
1000e2b0:	0000fc80 	call	10000fc8 <__mulsi3>
1000e2b4:	a80b883a 	mov	r5,r21
1000e2b8:	8809883a 	mov	r4,r17
1000e2bc:	1021883a 	mov	r16,r2
1000e2c0:	0000fc80 	call	10000fc8 <__mulsi3>
1000e2c4:	8809883a 	mov	r4,r17
1000e2c8:	b80b883a 	mov	r5,r23
1000e2cc:	102b883a 	mov	r21,r2
1000e2d0:	0000fc80 	call	10000fc8 <__mulsi3>
1000e2d4:	b80b883a 	mov	r5,r23
1000e2d8:	b009883a 	mov	r4,r22
1000e2dc:	1023883a 	mov	r17,r2
1000e2e0:	0000fc80 	call	10000fc8 <__mulsi3>
1000e2e4:	8006d43a 	srli	r3,r16,16
1000e2e8:	1545883a 	add	r2,r2,r21
1000e2ec:	1885883a 	add	r2,r3,r2
1000e2f0:	1540022e 	bgeu	r2,r21,1000e2fc <__muldi3+0xa0>
1000e2f4:	00c00074 	movhi	r3,1
1000e2f8:	88e3883a 	add	r17,r17,r3
1000e2fc:	1006d43a 	srli	r3,r2,16
1000e300:	1004943a 	slli	r2,r2,16
1000e304:	e00b883a 	mov	r5,fp
1000e308:	9809883a 	mov	r4,r19
1000e30c:	843fffcc 	andi	r16,r16,65535
1000e310:	1c63883a 	add	r17,r3,r17
1000e314:	1421883a 	add	r16,r2,r16
1000e318:	0000fc80 	call	10000fc8 <__mulsi3>
1000e31c:	900b883a 	mov	r5,r18
1000e320:	a009883a 	mov	r4,r20
1000e324:	1027883a 	mov	r19,r2
1000e328:	0000fc80 	call	10000fc8 <__mulsi3>
1000e32c:	9885883a 	add	r2,r19,r2
1000e330:	1447883a 	add	r3,r2,r17
1000e334:	8005883a 	mov	r2,r16
1000e338:	dfc00917 	ldw	ra,36(sp)
1000e33c:	df000817 	ldw	fp,32(sp)
1000e340:	ddc00717 	ldw	r23,28(sp)
1000e344:	dd800617 	ldw	r22,24(sp)
1000e348:	dd400517 	ldw	r21,20(sp)
1000e34c:	dd000417 	ldw	r20,16(sp)
1000e350:	dcc00317 	ldw	r19,12(sp)
1000e354:	dc800217 	ldw	r18,8(sp)
1000e358:	dc400117 	ldw	r17,4(sp)
1000e35c:	dc000017 	ldw	r16,0(sp)
1000e360:	dec00a04 	addi	sp,sp,40
1000e364:	f800283a 	ret

1000e368 <__udivdi3>:
1000e368:	defff404 	addi	sp,sp,-48
1000e36c:	dcc00515 	stw	r19,20(sp)
1000e370:	dc000215 	stw	r16,8(sp)
1000e374:	dfc00b15 	stw	ra,44(sp)
1000e378:	df000a15 	stw	fp,40(sp)
1000e37c:	ddc00915 	stw	r23,36(sp)
1000e380:	dd800815 	stw	r22,32(sp)
1000e384:	dd400715 	stw	r21,28(sp)
1000e388:	dd000615 	stw	r20,24(sp)
1000e38c:	dc800415 	stw	r18,16(sp)
1000e390:	dc400315 	stw	r17,12(sp)
1000e394:	2027883a 	mov	r19,r4
1000e398:	2821883a 	mov	r16,r5
1000e39c:	3800461e 	bne	r7,zero,1000e4b8 <__udivdi3+0x150>
1000e3a0:	3023883a 	mov	r17,r6
1000e3a4:	2025883a 	mov	r18,r4
1000e3a8:	2980572e 	bgeu	r5,r6,1000e508 <__udivdi3+0x1a0>
1000e3ac:	00bfffd4 	movui	r2,65535
1000e3b0:	282d883a 	mov	r22,r5
1000e3b4:	1180b236 	bltu	r2,r6,1000e680 <__udivdi3+0x318>
1000e3b8:	00803fc4 	movi	r2,255
1000e3bc:	1185803a 	cmpltu	r2,r2,r6
1000e3c0:	100490fa 	slli	r2,r2,3
1000e3c4:	3086d83a 	srl	r3,r6,r2
1000e3c8:	01040074 	movhi	r4,4097
1000e3cc:	2110be04 	addi	r4,r4,17144
1000e3d0:	20c7883a 	add	r3,r4,r3
1000e3d4:	18c00003 	ldbu	r3,0(r3)
1000e3d8:	1885883a 	add	r2,r3,r2
1000e3dc:	00c00804 	movi	r3,32
1000e3e0:	1887c83a 	sub	r3,r3,r2
1000e3e4:	18000526 	beq	r3,zero,1000e3fc <__udivdi3+0x94>
1000e3e8:	80e0983a 	sll	r16,r16,r3
1000e3ec:	9884d83a 	srl	r2,r19,r2
1000e3f0:	30e2983a 	sll	r17,r6,r3
1000e3f4:	98e4983a 	sll	r18,r19,r3
1000e3f8:	142cb03a 	or	r22,r2,r16
1000e3fc:	882ad43a 	srli	r21,r17,16
1000e400:	b009883a 	mov	r4,r22
1000e404:	8d3fffcc 	andi	r20,r17,65535
1000e408:	a80b883a 	mov	r5,r21
1000e40c:	0000f700 	call	10000f70 <__umodsi3>
1000e410:	b009883a 	mov	r4,r22
1000e414:	a80b883a 	mov	r5,r21
1000e418:	1027883a 	mov	r19,r2
1000e41c:	0000f0c0 	call	10000f0c <__udivsi3>
1000e420:	100b883a 	mov	r5,r2
1000e424:	a009883a 	mov	r4,r20
1000e428:	102d883a 	mov	r22,r2
1000e42c:	0000fc80 	call	10000fc8 <__mulsi3>
1000e430:	9826943a 	slli	r19,r19,16
1000e434:	9006d43a 	srli	r3,r18,16
1000e438:	1cc6b03a 	or	r3,r3,r19
1000e43c:	1880052e 	bgeu	r3,r2,1000e454 <__udivdi3+0xec>
1000e440:	1c47883a 	add	r3,r3,r17
1000e444:	b13fffc4 	addi	r4,r22,-1
1000e448:	1c400136 	bltu	r3,r17,1000e450 <__udivdi3+0xe8>
1000e44c:	18814236 	bltu	r3,r2,1000e958 <__udivdi3+0x5f0>
1000e450:	202d883a 	mov	r22,r4
1000e454:	18a1c83a 	sub	r16,r3,r2
1000e458:	8009883a 	mov	r4,r16
1000e45c:	a80b883a 	mov	r5,r21
1000e460:	0000f700 	call	10000f70 <__umodsi3>
1000e464:	1027883a 	mov	r19,r2
1000e468:	8009883a 	mov	r4,r16
1000e46c:	a80b883a 	mov	r5,r21
1000e470:	9826943a 	slli	r19,r19,16
1000e474:	0000f0c0 	call	10000f0c <__udivsi3>
1000e478:	100b883a 	mov	r5,r2
1000e47c:	a009883a 	mov	r4,r20
1000e480:	94bfffcc 	andi	r18,r18,65535
1000e484:	1021883a 	mov	r16,r2
1000e488:	94e4b03a 	or	r18,r18,r19
1000e48c:	0000fc80 	call	10000fc8 <__mulsi3>
1000e490:	9080052e 	bgeu	r18,r2,1000e4a8 <__udivdi3+0x140>
1000e494:	8ca5883a 	add	r18,r17,r18
1000e498:	80ffffc4 	addi	r3,r16,-1
1000e49c:	94410c36 	bltu	r18,r17,1000e8d0 <__udivdi3+0x568>
1000e4a0:	90810b2e 	bgeu	r18,r2,1000e8d0 <__udivdi3+0x568>
1000e4a4:	843fff84 	addi	r16,r16,-2
1000e4a8:	b004943a 	slli	r2,r22,16
1000e4ac:	0007883a 	mov	r3,zero
1000e4b0:	1404b03a 	or	r2,r2,r16
1000e4b4:	00005e06 	br	1000e630 <__udivdi3+0x2c8>
1000e4b8:	29c05b36 	bltu	r5,r7,1000e628 <__udivdi3+0x2c0>
1000e4bc:	00bfffd4 	movui	r2,65535
1000e4c0:	11c0672e 	bgeu	r2,r7,1000e660 <__udivdi3+0x2f8>
1000e4c4:	00804034 	movhi	r2,256
1000e4c8:	10bfffc4 	addi	r2,r2,-1
1000e4cc:	11c10a36 	bltu	r2,r7,1000e8f8 <__udivdi3+0x590>
1000e4d0:	00800404 	movi	r2,16
1000e4d4:	3886d83a 	srl	r3,r7,r2
1000e4d8:	01040074 	movhi	r4,4097
1000e4dc:	2110be04 	addi	r4,r4,17144
1000e4e0:	20c7883a 	add	r3,r4,r3
1000e4e4:	18c00003 	ldbu	r3,0(r3)
1000e4e8:	05c00804 	movi	r23,32
1000e4ec:	1885883a 	add	r2,r3,r2
1000e4f0:	b8afc83a 	sub	r23,r23,r2
1000e4f4:	b800671e 	bne	r23,zero,1000e694 <__udivdi3+0x32c>
1000e4f8:	3c010536 	bltu	r7,r16,1000e910 <__udivdi3+0x5a8>
1000e4fc:	9985403a 	cmpgeu	r2,r19,r6
1000e500:	0007883a 	mov	r3,zero
1000e504:	00004a06 	br	1000e630 <__udivdi3+0x2c8>
1000e508:	3000041e 	bne	r6,zero,1000e51c <__udivdi3+0x1b4>
1000e50c:	000b883a 	mov	r5,zero
1000e510:	01000044 	movi	r4,1
1000e514:	0000f0c0 	call	10000f0c <__udivsi3>
1000e518:	1023883a 	mov	r17,r2
1000e51c:	00bfffd4 	movui	r2,65535
1000e520:	1440532e 	bgeu	r2,r17,1000e670 <__udivdi3+0x308>
1000e524:	00804034 	movhi	r2,256
1000e528:	10bfffc4 	addi	r2,r2,-1
1000e52c:	1440f436 	bltu	r2,r17,1000e900 <__udivdi3+0x598>
1000e530:	00800404 	movi	r2,16
1000e534:	8886d83a 	srl	r3,r17,r2
1000e538:	01040074 	movhi	r4,4097
1000e53c:	2110be04 	addi	r4,r4,17144
1000e540:	20c7883a 	add	r3,r4,r3
1000e544:	18c00003 	ldbu	r3,0(r3)
1000e548:	1885883a 	add	r2,r3,r2
1000e54c:	00c00804 	movi	r3,32
1000e550:	1887c83a 	sub	r3,r3,r2
1000e554:	1800a51e 	bne	r3,zero,1000e7ec <__udivdi3+0x484>
1000e558:	882ad43a 	srli	r21,r17,16
1000e55c:	8461c83a 	sub	r16,r16,r17
1000e560:	8d3fffcc 	andi	r20,r17,65535
1000e564:	00c00044 	movi	r3,1
1000e568:	a80b883a 	mov	r5,r21
1000e56c:	8009883a 	mov	r4,r16
1000e570:	d8c00115 	stw	r3,4(sp)
1000e574:	0000f700 	call	10000f70 <__umodsi3>
1000e578:	a80b883a 	mov	r5,r21
1000e57c:	8009883a 	mov	r4,r16
1000e580:	1027883a 	mov	r19,r2
1000e584:	0000f0c0 	call	10000f0c <__udivsi3>
1000e588:	a00b883a 	mov	r5,r20
1000e58c:	1009883a 	mov	r4,r2
1000e590:	102d883a 	mov	r22,r2
1000e594:	0000fc80 	call	10000fc8 <__mulsi3>
1000e598:	9826943a 	slli	r19,r19,16
1000e59c:	900ed43a 	srli	r7,r18,16
1000e5a0:	d8c00117 	ldw	r3,4(sp)
1000e5a4:	3cceb03a 	or	r7,r7,r19
1000e5a8:	3880052e 	bgeu	r7,r2,1000e5c0 <__udivdi3+0x258>
1000e5ac:	3c4f883a 	add	r7,r7,r17
1000e5b0:	b13fffc4 	addi	r4,r22,-1
1000e5b4:	3c400136 	bltu	r7,r17,1000e5bc <__udivdi3+0x254>
1000e5b8:	3880e436 	bltu	r7,r2,1000e94c <__udivdi3+0x5e4>
1000e5bc:	202d883a 	mov	r22,r4
1000e5c0:	38a1c83a 	sub	r16,r7,r2
1000e5c4:	8009883a 	mov	r4,r16
1000e5c8:	a80b883a 	mov	r5,r21
1000e5cc:	d8c00115 	stw	r3,4(sp)
1000e5d0:	0000f700 	call	10000f70 <__umodsi3>
1000e5d4:	1027883a 	mov	r19,r2
1000e5d8:	8009883a 	mov	r4,r16
1000e5dc:	a80b883a 	mov	r5,r21
1000e5e0:	9826943a 	slli	r19,r19,16
1000e5e4:	0000f0c0 	call	10000f0c <__udivsi3>
1000e5e8:	a00b883a 	mov	r5,r20
1000e5ec:	1009883a 	mov	r4,r2
1000e5f0:	94bfffcc 	andi	r18,r18,65535
1000e5f4:	1021883a 	mov	r16,r2
1000e5f8:	94e4b03a 	or	r18,r18,r19
1000e5fc:	0000fc80 	call	10000fc8 <__mulsi3>
1000e600:	d8c00117 	ldw	r3,4(sp)
1000e604:	9080052e 	bgeu	r18,r2,1000e61c <__udivdi3+0x2b4>
1000e608:	8ca5883a 	add	r18,r17,r18
1000e60c:	813fffc4 	addi	r4,r16,-1
1000e610:	9440ad36 	bltu	r18,r17,1000e8c8 <__udivdi3+0x560>
1000e614:	9080ac2e 	bgeu	r18,r2,1000e8c8 <__udivdi3+0x560>
1000e618:	843fff84 	addi	r16,r16,-2
1000e61c:	b004943a 	slli	r2,r22,16
1000e620:	1404b03a 	or	r2,r2,r16
1000e624:	00000206 	br	1000e630 <__udivdi3+0x2c8>
1000e628:	0007883a 	mov	r3,zero
1000e62c:	0005883a 	mov	r2,zero
1000e630:	dfc00b17 	ldw	ra,44(sp)
1000e634:	df000a17 	ldw	fp,40(sp)
1000e638:	ddc00917 	ldw	r23,36(sp)
1000e63c:	dd800817 	ldw	r22,32(sp)
1000e640:	dd400717 	ldw	r21,28(sp)
1000e644:	dd000617 	ldw	r20,24(sp)
1000e648:	dcc00517 	ldw	r19,20(sp)
1000e64c:	dc800417 	ldw	r18,16(sp)
1000e650:	dc400317 	ldw	r17,12(sp)
1000e654:	dc000217 	ldw	r16,8(sp)
1000e658:	dec00c04 	addi	sp,sp,48
1000e65c:	f800283a 	ret
1000e660:	00803fc4 	movi	r2,255
1000e664:	11c5803a 	cmpltu	r2,r2,r7
1000e668:	100490fa 	slli	r2,r2,3
1000e66c:	003f9906 	br	1000e4d4 <__alt_data_end+0xf800e4d4>
1000e670:	00803fc4 	movi	r2,255
1000e674:	1445803a 	cmpltu	r2,r2,r17
1000e678:	100490fa 	slli	r2,r2,3
1000e67c:	003fad06 	br	1000e534 <__alt_data_end+0xf800e534>
1000e680:	00804034 	movhi	r2,256
1000e684:	10bfffc4 	addi	r2,r2,-1
1000e688:	11809f36 	bltu	r2,r6,1000e908 <__udivdi3+0x5a0>
1000e68c:	00800404 	movi	r2,16
1000e690:	003f4c06 	br	1000e3c4 <__alt_data_end+0xf800e3c4>
1000e694:	3dce983a 	sll	r7,r7,r23
1000e698:	30b8d83a 	srl	fp,r6,r2
1000e69c:	80a2d83a 	srl	r17,r16,r2
1000e6a0:	35cc983a 	sll	r6,r6,r23
1000e6a4:	3f38b03a 	or	fp,r7,fp
1000e6a8:	e024d43a 	srli	r18,fp,16
1000e6ac:	9884d83a 	srl	r2,r19,r2
1000e6b0:	85e0983a 	sll	r16,r16,r23
1000e6b4:	8809883a 	mov	r4,r17
1000e6b8:	900b883a 	mov	r5,r18
1000e6bc:	d9800015 	stw	r6,0(sp)
1000e6c0:	1420b03a 	or	r16,r2,r16
1000e6c4:	0000f700 	call	10000f70 <__umodsi3>
1000e6c8:	900b883a 	mov	r5,r18
1000e6cc:	8809883a 	mov	r4,r17
1000e6d0:	1029883a 	mov	r20,r2
1000e6d4:	e5bfffcc 	andi	r22,fp,65535
1000e6d8:	0000f0c0 	call	10000f0c <__udivsi3>
1000e6dc:	100b883a 	mov	r5,r2
1000e6e0:	b009883a 	mov	r4,r22
1000e6e4:	102b883a 	mov	r21,r2
1000e6e8:	0000fc80 	call	10000fc8 <__mulsi3>
1000e6ec:	a028943a 	slli	r20,r20,16
1000e6f0:	8006d43a 	srli	r3,r16,16
1000e6f4:	1d06b03a 	or	r3,r3,r20
1000e6f8:	1880042e 	bgeu	r3,r2,1000e70c <__udivdi3+0x3a4>
1000e6fc:	1f07883a 	add	r3,r3,fp
1000e700:	a93fffc4 	addi	r4,r21,-1
1000e704:	1f00892e 	bgeu	r3,fp,1000e92c <__udivdi3+0x5c4>
1000e708:	202b883a 	mov	r21,r4
1000e70c:	18a3c83a 	sub	r17,r3,r2
1000e710:	8809883a 	mov	r4,r17
1000e714:	900b883a 	mov	r5,r18
1000e718:	0000f700 	call	10000f70 <__umodsi3>
1000e71c:	1029883a 	mov	r20,r2
1000e720:	8809883a 	mov	r4,r17
1000e724:	900b883a 	mov	r5,r18
1000e728:	a028943a 	slli	r20,r20,16
1000e72c:	0000f0c0 	call	10000f0c <__udivsi3>
1000e730:	100b883a 	mov	r5,r2
1000e734:	b009883a 	mov	r4,r22
1000e738:	843fffcc 	andi	r16,r16,65535
1000e73c:	1023883a 	mov	r17,r2
1000e740:	8520b03a 	or	r16,r16,r20
1000e744:	0000fc80 	call	10000fc8 <__mulsi3>
1000e748:	8080042e 	bgeu	r16,r2,1000e75c <__udivdi3+0x3f4>
1000e74c:	8721883a 	add	r16,r16,fp
1000e750:	88ffffc4 	addi	r3,r17,-1
1000e754:	8700712e 	bgeu	r16,fp,1000e91c <__udivdi3+0x5b4>
1000e758:	1823883a 	mov	r17,r3
1000e75c:	a80e943a 	slli	r7,r21,16
1000e760:	d8c00017 	ldw	r3,0(sp)
1000e764:	80a1c83a 	sub	r16,r16,r2
1000e768:	3c64b03a 	or	r18,r7,r17
1000e76c:	1d3fffcc 	andi	r20,r3,65535
1000e770:	9022d43a 	srli	r17,r18,16
1000e774:	95bfffcc 	andi	r22,r18,65535
1000e778:	a00b883a 	mov	r5,r20
1000e77c:	b009883a 	mov	r4,r22
1000e780:	182ad43a 	srli	r21,r3,16
1000e784:	0000fc80 	call	10000fc8 <__mulsi3>
1000e788:	a00b883a 	mov	r5,r20
1000e78c:	8809883a 	mov	r4,r17
1000e790:	1039883a 	mov	fp,r2
1000e794:	0000fc80 	call	10000fc8 <__mulsi3>
1000e798:	8809883a 	mov	r4,r17
1000e79c:	a80b883a 	mov	r5,r21
1000e7a0:	1029883a 	mov	r20,r2
1000e7a4:	0000fc80 	call	10000fc8 <__mulsi3>
1000e7a8:	a80b883a 	mov	r5,r21
1000e7ac:	b009883a 	mov	r4,r22
1000e7b0:	1023883a 	mov	r17,r2
1000e7b4:	0000fc80 	call	10000fc8 <__mulsi3>
1000e7b8:	e006d43a 	srli	r3,fp,16
1000e7bc:	1505883a 	add	r2,r2,r20
1000e7c0:	1887883a 	add	r3,r3,r2
1000e7c4:	1d00022e 	bgeu	r3,r20,1000e7d0 <__udivdi3+0x468>
1000e7c8:	00800074 	movhi	r2,1
1000e7cc:	88a3883a 	add	r17,r17,r2
1000e7d0:	1804d43a 	srli	r2,r3,16
1000e7d4:	1463883a 	add	r17,r2,r17
1000e7d8:	84404436 	bltu	r16,r17,1000e8ec <__udivdi3+0x584>
1000e7dc:	84403e26 	beq	r16,r17,1000e8d8 <__udivdi3+0x570>
1000e7e0:	9005883a 	mov	r2,r18
1000e7e4:	0007883a 	mov	r3,zero
1000e7e8:	003f9106 	br	1000e630 <__alt_data_end+0xf800e630>
1000e7ec:	88e2983a 	sll	r17,r17,r3
1000e7f0:	80aed83a 	srl	r23,r16,r2
1000e7f4:	80e0983a 	sll	r16,r16,r3
1000e7f8:	882ad43a 	srli	r21,r17,16
1000e7fc:	9884d83a 	srl	r2,r19,r2
1000e800:	b809883a 	mov	r4,r23
1000e804:	a80b883a 	mov	r5,r21
1000e808:	98e4983a 	sll	r18,r19,r3
1000e80c:	142cb03a 	or	r22,r2,r16
1000e810:	0000f700 	call	10000f70 <__umodsi3>
1000e814:	b809883a 	mov	r4,r23
1000e818:	a80b883a 	mov	r5,r21
1000e81c:	1027883a 	mov	r19,r2
1000e820:	8d3fffcc 	andi	r20,r17,65535
1000e824:	0000f0c0 	call	10000f0c <__udivsi3>
1000e828:	a009883a 	mov	r4,r20
1000e82c:	100b883a 	mov	r5,r2
1000e830:	102f883a 	mov	r23,r2
1000e834:	0000fc80 	call	10000fc8 <__mulsi3>
1000e838:	9826943a 	slli	r19,r19,16
1000e83c:	b008d43a 	srli	r4,r22,16
1000e840:	24c8b03a 	or	r4,r4,r19
1000e844:	2080062e 	bgeu	r4,r2,1000e860 <__udivdi3+0x4f8>
1000e848:	2449883a 	add	r4,r4,r17
1000e84c:	b8ffffc4 	addi	r3,r23,-1
1000e850:	24403c36 	bltu	r4,r17,1000e944 <__udivdi3+0x5dc>
1000e854:	20803b2e 	bgeu	r4,r2,1000e944 <__udivdi3+0x5dc>
1000e858:	bdffff84 	addi	r23,r23,-2
1000e85c:	2449883a 	add	r4,r4,r17
1000e860:	20a1c83a 	sub	r16,r4,r2
1000e864:	a80b883a 	mov	r5,r21
1000e868:	8009883a 	mov	r4,r16
1000e86c:	0000f700 	call	10000f70 <__umodsi3>
1000e870:	a80b883a 	mov	r5,r21
1000e874:	8009883a 	mov	r4,r16
1000e878:	1027883a 	mov	r19,r2
1000e87c:	0000f0c0 	call	10000f0c <__udivsi3>
1000e880:	a009883a 	mov	r4,r20
1000e884:	100b883a 	mov	r5,r2
1000e888:	9826943a 	slli	r19,r19,16
1000e88c:	1039883a 	mov	fp,r2
1000e890:	0000fc80 	call	10000fc8 <__mulsi3>
1000e894:	b13fffcc 	andi	r4,r22,65535
1000e898:	24c8b03a 	or	r4,r4,r19
1000e89c:	2080062e 	bgeu	r4,r2,1000e8b8 <__udivdi3+0x550>
1000e8a0:	2449883a 	add	r4,r4,r17
1000e8a4:	e0ffffc4 	addi	r3,fp,-1
1000e8a8:	24402436 	bltu	r4,r17,1000e93c <__udivdi3+0x5d4>
1000e8ac:	2080232e 	bgeu	r4,r2,1000e93c <__udivdi3+0x5d4>
1000e8b0:	e73fff84 	addi	fp,fp,-2
1000e8b4:	2449883a 	add	r4,r4,r17
1000e8b8:	b82e943a 	slli	r23,r23,16
1000e8bc:	20a1c83a 	sub	r16,r4,r2
1000e8c0:	bf06b03a 	or	r3,r23,fp
1000e8c4:	003f2806 	br	1000e568 <__alt_data_end+0xf800e568>
1000e8c8:	2021883a 	mov	r16,r4
1000e8cc:	003f5306 	br	1000e61c <__alt_data_end+0xf800e61c>
1000e8d0:	1821883a 	mov	r16,r3
1000e8d4:	003ef406 	br	1000e4a8 <__alt_data_end+0xf800e4a8>
1000e8d8:	1806943a 	slli	r3,r3,16
1000e8dc:	9de6983a 	sll	r19,r19,r23
1000e8e0:	e73fffcc 	andi	fp,fp,65535
1000e8e4:	1f07883a 	add	r3,r3,fp
1000e8e8:	98ffbd2e 	bgeu	r19,r3,1000e7e0 <__alt_data_end+0xf800e7e0>
1000e8ec:	90bfffc4 	addi	r2,r18,-1
1000e8f0:	0007883a 	mov	r3,zero
1000e8f4:	003f4e06 	br	1000e630 <__alt_data_end+0xf800e630>
1000e8f8:	00800604 	movi	r2,24
1000e8fc:	003ef506 	br	1000e4d4 <__alt_data_end+0xf800e4d4>
1000e900:	00800604 	movi	r2,24
1000e904:	003f0b06 	br	1000e534 <__alt_data_end+0xf800e534>
1000e908:	00800604 	movi	r2,24
1000e90c:	003ead06 	br	1000e3c4 <__alt_data_end+0xf800e3c4>
1000e910:	0007883a 	mov	r3,zero
1000e914:	00800044 	movi	r2,1
1000e918:	003f4506 	br	1000e630 <__alt_data_end+0xf800e630>
1000e91c:	80bf8e2e 	bgeu	r16,r2,1000e758 <__alt_data_end+0xf800e758>
1000e920:	8c7fff84 	addi	r17,r17,-2
1000e924:	8721883a 	add	r16,r16,fp
1000e928:	003f8c06 	br	1000e75c <__alt_data_end+0xf800e75c>
1000e92c:	18bf762e 	bgeu	r3,r2,1000e708 <__alt_data_end+0xf800e708>
1000e930:	ad7fff84 	addi	r21,r21,-2
1000e934:	1f07883a 	add	r3,r3,fp
1000e938:	003f7406 	br	1000e70c <__alt_data_end+0xf800e70c>
1000e93c:	1839883a 	mov	fp,r3
1000e940:	003fdd06 	br	1000e8b8 <__alt_data_end+0xf800e8b8>
1000e944:	182f883a 	mov	r23,r3
1000e948:	003fc506 	br	1000e860 <__alt_data_end+0xf800e860>
1000e94c:	b5bfff84 	addi	r22,r22,-2
1000e950:	3c4f883a 	add	r7,r7,r17
1000e954:	003f1a06 	br	1000e5c0 <__alt_data_end+0xf800e5c0>
1000e958:	b5bfff84 	addi	r22,r22,-2
1000e95c:	1c47883a 	add	r3,r3,r17
1000e960:	003ebc06 	br	1000e454 <__alt_data_end+0xf800e454>

1000e964 <__umoddi3>:
1000e964:	defff304 	addi	sp,sp,-52
1000e968:	df000b15 	stw	fp,44(sp)
1000e96c:	dc400415 	stw	r17,16(sp)
1000e970:	dc000315 	stw	r16,12(sp)
1000e974:	dfc00c15 	stw	ra,48(sp)
1000e978:	ddc00a15 	stw	r23,40(sp)
1000e97c:	dd800915 	stw	r22,36(sp)
1000e980:	dd400815 	stw	r21,32(sp)
1000e984:	dd000715 	stw	r20,28(sp)
1000e988:	dcc00615 	stw	r19,24(sp)
1000e98c:	dc800515 	stw	r18,20(sp)
1000e990:	2021883a 	mov	r16,r4
1000e994:	2823883a 	mov	r17,r5
1000e998:	2839883a 	mov	fp,r5
1000e99c:	3800401e 	bne	r7,zero,1000eaa0 <__umoddi3+0x13c>
1000e9a0:	3027883a 	mov	r19,r6
1000e9a4:	2029883a 	mov	r20,r4
1000e9a8:	2980552e 	bgeu	r5,r6,1000eb00 <__umoddi3+0x19c>
1000e9ac:	00bfffd4 	movui	r2,65535
1000e9b0:	1180a236 	bltu	r2,r6,1000ec3c <__umoddi3+0x2d8>
1000e9b4:	01003fc4 	movi	r4,255
1000e9b8:	2189803a 	cmpltu	r4,r4,r6
1000e9bc:	200890fa 	slli	r4,r4,3
1000e9c0:	3104d83a 	srl	r2,r6,r4
1000e9c4:	00c40074 	movhi	r3,4097
1000e9c8:	18d0be04 	addi	r3,r3,17144
1000e9cc:	1885883a 	add	r2,r3,r2
1000e9d0:	10c00003 	ldbu	r3,0(r2)
1000e9d4:	00800804 	movi	r2,32
1000e9d8:	1909883a 	add	r4,r3,r4
1000e9dc:	1125c83a 	sub	r18,r2,r4
1000e9e0:	90000526 	beq	r18,zero,1000e9f8 <__umoddi3+0x94>
1000e9e4:	8ca2983a 	sll	r17,r17,r18
1000e9e8:	8108d83a 	srl	r4,r16,r4
1000e9ec:	34a6983a 	sll	r19,r6,r18
1000e9f0:	84a8983a 	sll	r20,r16,r18
1000e9f4:	2478b03a 	or	fp,r4,r17
1000e9f8:	982cd43a 	srli	r22,r19,16
1000e9fc:	e009883a 	mov	r4,fp
1000ea00:	9dffffcc 	andi	r23,r19,65535
1000ea04:	b00b883a 	mov	r5,r22
1000ea08:	0000f700 	call	10000f70 <__umodsi3>
1000ea0c:	b00b883a 	mov	r5,r22
1000ea10:	e009883a 	mov	r4,fp
1000ea14:	102b883a 	mov	r21,r2
1000ea18:	0000f0c0 	call	10000f0c <__udivsi3>
1000ea1c:	100b883a 	mov	r5,r2
1000ea20:	b809883a 	mov	r4,r23
1000ea24:	0000fc80 	call	10000fc8 <__mulsi3>
1000ea28:	a82a943a 	slli	r21,r21,16
1000ea2c:	a006d43a 	srli	r3,r20,16
1000ea30:	1d46b03a 	or	r3,r3,r21
1000ea34:	1880032e 	bgeu	r3,r2,1000ea44 <__umoddi3+0xe0>
1000ea38:	1cc7883a 	add	r3,r3,r19
1000ea3c:	1cc00136 	bltu	r3,r19,1000ea44 <__umoddi3+0xe0>
1000ea40:	18813136 	bltu	r3,r2,1000ef08 <__umoddi3+0x5a4>
1000ea44:	18a1c83a 	sub	r16,r3,r2
1000ea48:	b00b883a 	mov	r5,r22
1000ea4c:	8009883a 	mov	r4,r16
1000ea50:	0000f700 	call	10000f70 <__umodsi3>
1000ea54:	b00b883a 	mov	r5,r22
1000ea58:	8009883a 	mov	r4,r16
1000ea5c:	1023883a 	mov	r17,r2
1000ea60:	0000f0c0 	call	10000f0c <__udivsi3>
1000ea64:	100b883a 	mov	r5,r2
1000ea68:	b809883a 	mov	r4,r23
1000ea6c:	8822943a 	slli	r17,r17,16
1000ea70:	0000fc80 	call	10000fc8 <__mulsi3>
1000ea74:	a0ffffcc 	andi	r3,r20,65535
1000ea78:	1c46b03a 	or	r3,r3,r17
1000ea7c:	1880042e 	bgeu	r3,r2,1000ea90 <__umoddi3+0x12c>
1000ea80:	1cc7883a 	add	r3,r3,r19
1000ea84:	1cc00236 	bltu	r3,r19,1000ea90 <__umoddi3+0x12c>
1000ea88:	1880012e 	bgeu	r3,r2,1000ea90 <__umoddi3+0x12c>
1000ea8c:	1cc7883a 	add	r3,r3,r19
1000ea90:	1885c83a 	sub	r2,r3,r2
1000ea94:	1484d83a 	srl	r2,r2,r18
1000ea98:	0007883a 	mov	r3,zero
1000ea9c:	00005306 	br	1000ebec <__umoddi3+0x288>
1000eaa0:	29c05036 	bltu	r5,r7,1000ebe4 <__umoddi3+0x280>
1000eaa4:	00bfffd4 	movui	r2,65535
1000eaa8:	11c05c2e 	bgeu	r2,r7,1000ec1c <__umoddi3+0x2b8>
1000eaac:	00804034 	movhi	r2,256
1000eab0:	10bfffc4 	addi	r2,r2,-1
1000eab4:	11c10636 	bltu	r2,r7,1000eed0 <__umoddi3+0x56c>
1000eab8:	01000404 	movi	r4,16
1000eabc:	3904d83a 	srl	r2,r7,r4
1000eac0:	00c40074 	movhi	r3,4097
1000eac4:	18d0be04 	addi	r3,r3,17144
1000eac8:	1885883a 	add	r2,r3,r2
1000eacc:	14c00003 	ldbu	r19,0(r2)
1000ead0:	00c00804 	movi	r3,32
1000ead4:	9927883a 	add	r19,r19,r4
1000ead8:	1ce9c83a 	sub	r20,r3,r19
1000eadc:	a0005c1e 	bne	r20,zero,1000ec50 <__umoddi3+0x2ec>
1000eae0:	3c400136 	bltu	r7,r17,1000eae8 <__umoddi3+0x184>
1000eae4:	81810a36 	bltu	r16,r6,1000ef10 <__umoddi3+0x5ac>
1000eae8:	8185c83a 	sub	r2,r16,r6
1000eaec:	89e3c83a 	sub	r17,r17,r7
1000eaf0:	8089803a 	cmpltu	r4,r16,r2
1000eaf4:	8939c83a 	sub	fp,r17,r4
1000eaf8:	e007883a 	mov	r3,fp
1000eafc:	00003b06 	br	1000ebec <__umoddi3+0x288>
1000eb00:	3000041e 	bne	r6,zero,1000eb14 <__umoddi3+0x1b0>
1000eb04:	000b883a 	mov	r5,zero
1000eb08:	01000044 	movi	r4,1
1000eb0c:	0000f0c0 	call	10000f0c <__udivsi3>
1000eb10:	1027883a 	mov	r19,r2
1000eb14:	00bfffd4 	movui	r2,65535
1000eb18:	14c0442e 	bgeu	r2,r19,1000ec2c <__umoddi3+0x2c8>
1000eb1c:	00804034 	movhi	r2,256
1000eb20:	10bfffc4 	addi	r2,r2,-1
1000eb24:	14c0ec36 	bltu	r2,r19,1000eed8 <__umoddi3+0x574>
1000eb28:	00800404 	movi	r2,16
1000eb2c:	9886d83a 	srl	r3,r19,r2
1000eb30:	01040074 	movhi	r4,4097
1000eb34:	2110be04 	addi	r4,r4,17144
1000eb38:	20c7883a 	add	r3,r4,r3
1000eb3c:	18c00003 	ldbu	r3,0(r3)
1000eb40:	1887883a 	add	r3,r3,r2
1000eb44:	00800804 	movi	r2,32
1000eb48:	10e5c83a 	sub	r18,r2,r3
1000eb4c:	9000ab1e 	bne	r18,zero,1000edfc <__umoddi3+0x498>
1000eb50:	982cd43a 	srli	r22,r19,16
1000eb54:	8ce3c83a 	sub	r17,r17,r19
1000eb58:	9dffffcc 	andi	r23,r19,65535
1000eb5c:	b00b883a 	mov	r5,r22
1000eb60:	8809883a 	mov	r4,r17
1000eb64:	0000f700 	call	10000f70 <__umodsi3>
1000eb68:	b00b883a 	mov	r5,r22
1000eb6c:	8809883a 	mov	r4,r17
1000eb70:	102b883a 	mov	r21,r2
1000eb74:	0000f0c0 	call	10000f0c <__udivsi3>
1000eb78:	b80b883a 	mov	r5,r23
1000eb7c:	1009883a 	mov	r4,r2
1000eb80:	0000fc80 	call	10000fc8 <__mulsi3>
1000eb84:	a82a943a 	slli	r21,r21,16
1000eb88:	a006d43a 	srli	r3,r20,16
1000eb8c:	1d46b03a 	or	r3,r3,r21
1000eb90:	1880042e 	bgeu	r3,r2,1000eba4 <__umoddi3+0x240>
1000eb94:	1cc7883a 	add	r3,r3,r19
1000eb98:	1cc00236 	bltu	r3,r19,1000eba4 <__umoddi3+0x240>
1000eb9c:	1880012e 	bgeu	r3,r2,1000eba4 <__umoddi3+0x240>
1000eba0:	1cc7883a 	add	r3,r3,r19
1000eba4:	18a1c83a 	sub	r16,r3,r2
1000eba8:	b00b883a 	mov	r5,r22
1000ebac:	8009883a 	mov	r4,r16
1000ebb0:	0000f700 	call	10000f70 <__umodsi3>
1000ebb4:	1023883a 	mov	r17,r2
1000ebb8:	b00b883a 	mov	r5,r22
1000ebbc:	8009883a 	mov	r4,r16
1000ebc0:	0000f0c0 	call	10000f0c <__udivsi3>
1000ebc4:	8822943a 	slli	r17,r17,16
1000ebc8:	b80b883a 	mov	r5,r23
1000ebcc:	1009883a 	mov	r4,r2
1000ebd0:	0000fc80 	call	10000fc8 <__mulsi3>
1000ebd4:	a53fffcc 	andi	r20,r20,65535
1000ebd8:	a446b03a 	or	r3,r20,r17
1000ebdc:	18bfac2e 	bgeu	r3,r2,1000ea90 <__alt_data_end+0xf800ea90>
1000ebe0:	003fa706 	br	1000ea80 <__alt_data_end+0xf800ea80>
1000ebe4:	2005883a 	mov	r2,r4
1000ebe8:	2807883a 	mov	r3,r5
1000ebec:	dfc00c17 	ldw	ra,48(sp)
1000ebf0:	df000b17 	ldw	fp,44(sp)
1000ebf4:	ddc00a17 	ldw	r23,40(sp)
1000ebf8:	dd800917 	ldw	r22,36(sp)
1000ebfc:	dd400817 	ldw	r21,32(sp)
1000ec00:	dd000717 	ldw	r20,28(sp)
1000ec04:	dcc00617 	ldw	r19,24(sp)
1000ec08:	dc800517 	ldw	r18,20(sp)
1000ec0c:	dc400417 	ldw	r17,16(sp)
1000ec10:	dc000317 	ldw	r16,12(sp)
1000ec14:	dec00d04 	addi	sp,sp,52
1000ec18:	f800283a 	ret
1000ec1c:	04c03fc4 	movi	r19,255
1000ec20:	99c9803a 	cmpltu	r4,r19,r7
1000ec24:	200890fa 	slli	r4,r4,3
1000ec28:	003fa406 	br	1000eabc <__alt_data_end+0xf800eabc>
1000ec2c:	00803fc4 	movi	r2,255
1000ec30:	14c5803a 	cmpltu	r2,r2,r19
1000ec34:	100490fa 	slli	r2,r2,3
1000ec38:	003fbc06 	br	1000eb2c <__alt_data_end+0xf800eb2c>
1000ec3c:	00804034 	movhi	r2,256
1000ec40:	10bfffc4 	addi	r2,r2,-1
1000ec44:	1180a636 	bltu	r2,r6,1000eee0 <__umoddi3+0x57c>
1000ec48:	01000404 	movi	r4,16
1000ec4c:	003f5c06 	br	1000e9c0 <__alt_data_end+0xf800e9c0>
1000ec50:	3d0e983a 	sll	r7,r7,r20
1000ec54:	34ead83a 	srl	r21,r6,r19
1000ec58:	8cc6d83a 	srl	r3,r17,r19
1000ec5c:	8d10983a 	sll	r8,r17,r20
1000ec60:	3d6ab03a 	or	r21,r7,r21
1000ec64:	a82cd43a 	srli	r22,r21,16
1000ec68:	84e2d83a 	srl	r17,r16,r19
1000ec6c:	1809883a 	mov	r4,r3
1000ec70:	b00b883a 	mov	r5,r22
1000ec74:	8a22b03a 	or	r17,r17,r8
1000ec78:	3524983a 	sll	r18,r6,r20
1000ec7c:	dc400015 	stw	r17,0(sp)
1000ec80:	d8c00115 	stw	r3,4(sp)
1000ec84:	0000f700 	call	10000f70 <__umodsi3>
1000ec88:	d8c00117 	ldw	r3,4(sp)
1000ec8c:	b00b883a 	mov	r5,r22
1000ec90:	1039883a 	mov	fp,r2
1000ec94:	1809883a 	mov	r4,r3
1000ec98:	0000f0c0 	call	10000f0c <__udivsi3>
1000ec9c:	adffffcc 	andi	r23,r21,65535
1000eca0:	100b883a 	mov	r5,r2
1000eca4:	b809883a 	mov	r4,r23
1000eca8:	1023883a 	mov	r17,r2
1000ecac:	0000fc80 	call	10000fc8 <__mulsi3>
1000ecb0:	d9400017 	ldw	r5,0(sp)
1000ecb4:	e008943a 	slli	r4,fp,16
1000ecb8:	8520983a 	sll	r16,r16,r20
1000ecbc:	2806d43a 	srli	r3,r5,16
1000ecc0:	1906b03a 	or	r3,r3,r4
1000ecc4:	1880042e 	bgeu	r3,r2,1000ecd8 <__umoddi3+0x374>
1000ecc8:	1d47883a 	add	r3,r3,r21
1000eccc:	893fffc4 	addi	r4,r17,-1
1000ecd0:	1d40892e 	bgeu	r3,r21,1000eef8 <__umoddi3+0x594>
1000ecd4:	2023883a 	mov	r17,r4
1000ecd8:	18b9c83a 	sub	fp,r3,r2
1000ecdc:	b00b883a 	mov	r5,r22
1000ece0:	e009883a 	mov	r4,fp
1000ece4:	0000f700 	call	10000f70 <__umodsi3>
1000ece8:	b00b883a 	mov	r5,r22
1000ecec:	e009883a 	mov	r4,fp
1000ecf0:	d8800215 	stw	r2,8(sp)
1000ecf4:	0000f0c0 	call	10000f0c <__udivsi3>
1000ecf8:	100b883a 	mov	r5,r2
1000ecfc:	b809883a 	mov	r4,r23
1000ed00:	102d883a 	mov	r22,r2
1000ed04:	0000fc80 	call	10000fc8 <__mulsi3>
1000ed08:	d9800217 	ldw	r6,8(sp)
1000ed0c:	d8c00017 	ldw	r3,0(sp)
1000ed10:	300c943a 	slli	r6,r6,16
1000ed14:	1a3fffcc 	andi	r8,r3,65535
1000ed18:	4190b03a 	or	r8,r8,r6
1000ed1c:	4080042e 	bgeu	r8,r2,1000ed30 <__umoddi3+0x3cc>
1000ed20:	4551883a 	add	r8,r8,r21
1000ed24:	b0ffffc4 	addi	r3,r22,-1
1000ed28:	45406f2e 	bgeu	r8,r21,1000eee8 <__umoddi3+0x584>
1000ed2c:	182d883a 	mov	r22,r3
1000ed30:	880e943a 	slli	r7,r17,16
1000ed34:	9006d43a 	srli	r3,r18,16
1000ed38:	91bfffcc 	andi	r6,r18,65535
1000ed3c:	3dacb03a 	or	r22,r7,r22
1000ed40:	b02ed43a 	srli	r23,r22,16
1000ed44:	b5bfffcc 	andi	r22,r22,65535
1000ed48:	300b883a 	mov	r5,r6
1000ed4c:	b009883a 	mov	r4,r22
1000ed50:	40a3c83a 	sub	r17,r8,r2
1000ed54:	d8c00115 	stw	r3,4(sp)
1000ed58:	d9800215 	stw	r6,8(sp)
1000ed5c:	0000fc80 	call	10000fc8 <__mulsi3>
1000ed60:	d9800217 	ldw	r6,8(sp)
1000ed64:	b809883a 	mov	r4,r23
1000ed68:	1039883a 	mov	fp,r2
1000ed6c:	300b883a 	mov	r5,r6
1000ed70:	0000fc80 	call	10000fc8 <__mulsi3>
1000ed74:	d8c00117 	ldw	r3,4(sp)
1000ed78:	b809883a 	mov	r4,r23
1000ed7c:	d8800215 	stw	r2,8(sp)
1000ed80:	180b883a 	mov	r5,r3
1000ed84:	0000fc80 	call	10000fc8 <__mulsi3>
1000ed88:	d8c00117 	ldw	r3,4(sp)
1000ed8c:	b009883a 	mov	r4,r22
1000ed90:	102f883a 	mov	r23,r2
1000ed94:	180b883a 	mov	r5,r3
1000ed98:	0000fc80 	call	10000fc8 <__mulsi3>
1000ed9c:	d9800217 	ldw	r6,8(sp)
1000eda0:	e006d43a 	srli	r3,fp,16
1000eda4:	1185883a 	add	r2,r2,r6
1000eda8:	1885883a 	add	r2,r3,r2
1000edac:	1180022e 	bgeu	r2,r6,1000edb8 <__umoddi3+0x454>
1000edb0:	00c00074 	movhi	r3,1
1000edb4:	b8ef883a 	add	r23,r23,r3
1000edb8:	1006d43a 	srli	r3,r2,16
1000edbc:	1004943a 	slli	r2,r2,16
1000edc0:	e73fffcc 	andi	fp,fp,65535
1000edc4:	1dc7883a 	add	r3,r3,r23
1000edc8:	1739883a 	add	fp,r2,fp
1000edcc:	88c03a36 	bltu	r17,r3,1000eeb8 <__umoddi3+0x554>
1000edd0:	88c05126 	beq	r17,r3,1000ef18 <__umoddi3+0x5b4>
1000edd4:	88c9c83a 	sub	r4,r17,r3
1000edd8:	e00f883a 	mov	r7,fp
1000eddc:	81cfc83a 	sub	r7,r16,r7
1000ede0:	81c7803a 	cmpltu	r3,r16,r7
1000ede4:	20c7c83a 	sub	r3,r4,r3
1000ede8:	1cc4983a 	sll	r2,r3,r19
1000edec:	3d0ed83a 	srl	r7,r7,r20
1000edf0:	1d06d83a 	srl	r3,r3,r20
1000edf4:	11c4b03a 	or	r2,r2,r7
1000edf8:	003f7c06 	br	1000ebec <__alt_data_end+0xf800ebec>
1000edfc:	9ca6983a 	sll	r19,r19,r18
1000ee00:	88f8d83a 	srl	fp,r17,r3
1000ee04:	80c4d83a 	srl	r2,r16,r3
1000ee08:	982cd43a 	srli	r22,r19,16
1000ee0c:	8ca2983a 	sll	r17,r17,r18
1000ee10:	e009883a 	mov	r4,fp
1000ee14:	b00b883a 	mov	r5,r22
1000ee18:	146ab03a 	or	r21,r2,r17
1000ee1c:	0000f700 	call	10000f70 <__umodsi3>
1000ee20:	b00b883a 	mov	r5,r22
1000ee24:	e009883a 	mov	r4,fp
1000ee28:	1029883a 	mov	r20,r2
1000ee2c:	9dffffcc 	andi	r23,r19,65535
1000ee30:	0000f0c0 	call	10000f0c <__udivsi3>
1000ee34:	b809883a 	mov	r4,r23
1000ee38:	100b883a 	mov	r5,r2
1000ee3c:	0000fc80 	call	10000fc8 <__mulsi3>
1000ee40:	a008943a 	slli	r4,r20,16
1000ee44:	a806d43a 	srli	r3,r21,16
1000ee48:	84a8983a 	sll	r20,r16,r18
1000ee4c:	1906b03a 	or	r3,r3,r4
1000ee50:	1880042e 	bgeu	r3,r2,1000ee64 <__umoddi3+0x500>
1000ee54:	1cc7883a 	add	r3,r3,r19
1000ee58:	1cc00236 	bltu	r3,r19,1000ee64 <__umoddi3+0x500>
1000ee5c:	1880012e 	bgeu	r3,r2,1000ee64 <__umoddi3+0x500>
1000ee60:	1cc7883a 	add	r3,r3,r19
1000ee64:	18a3c83a 	sub	r17,r3,r2
1000ee68:	b00b883a 	mov	r5,r22
1000ee6c:	8809883a 	mov	r4,r17
1000ee70:	0000f700 	call	10000f70 <__umodsi3>
1000ee74:	b00b883a 	mov	r5,r22
1000ee78:	8809883a 	mov	r4,r17
1000ee7c:	1021883a 	mov	r16,r2
1000ee80:	0000f0c0 	call	10000f0c <__udivsi3>
1000ee84:	100b883a 	mov	r5,r2
1000ee88:	b809883a 	mov	r4,r23
1000ee8c:	8020943a 	slli	r16,r16,16
1000ee90:	0000fc80 	call	10000fc8 <__mulsi3>
1000ee94:	a8ffffcc 	andi	r3,r21,65535
1000ee98:	1c06b03a 	or	r3,r3,r16
1000ee9c:	1880042e 	bgeu	r3,r2,1000eeb0 <__umoddi3+0x54c>
1000eea0:	1cc7883a 	add	r3,r3,r19
1000eea4:	1cc00236 	bltu	r3,r19,1000eeb0 <__umoddi3+0x54c>
1000eea8:	1880012e 	bgeu	r3,r2,1000eeb0 <__umoddi3+0x54c>
1000eeac:	1cc7883a 	add	r3,r3,r19
1000eeb0:	18a3c83a 	sub	r17,r3,r2
1000eeb4:	003f2906 	br	1000eb5c <__alt_data_end+0xf800eb5c>
1000eeb8:	e48fc83a 	sub	r7,fp,r18
1000eebc:	1d49c83a 	sub	r4,r3,r21
1000eec0:	e1f9803a 	cmpltu	fp,fp,r7
1000eec4:	2739c83a 	sub	fp,r4,fp
1000eec8:	8f09c83a 	sub	r4,r17,fp
1000eecc:	003fc306 	br	1000eddc <__alt_data_end+0xf800eddc>
1000eed0:	01000604 	movi	r4,24
1000eed4:	003ef906 	br	1000eabc <__alt_data_end+0xf800eabc>
1000eed8:	00800604 	movi	r2,24
1000eedc:	003f1306 	br	1000eb2c <__alt_data_end+0xf800eb2c>
1000eee0:	01000604 	movi	r4,24
1000eee4:	003eb606 	br	1000e9c0 <__alt_data_end+0xf800e9c0>
1000eee8:	40bf902e 	bgeu	r8,r2,1000ed2c <__alt_data_end+0xf800ed2c>
1000eeec:	b5bfff84 	addi	r22,r22,-2
1000eef0:	4551883a 	add	r8,r8,r21
1000eef4:	003f8e06 	br	1000ed30 <__alt_data_end+0xf800ed30>
1000eef8:	18bf762e 	bgeu	r3,r2,1000ecd4 <__alt_data_end+0xf800ecd4>
1000eefc:	8c7fff84 	addi	r17,r17,-2
1000ef00:	1d47883a 	add	r3,r3,r21
1000ef04:	003f7406 	br	1000ecd8 <__alt_data_end+0xf800ecd8>
1000ef08:	1cc7883a 	add	r3,r3,r19
1000ef0c:	003ecd06 	br	1000ea44 <__alt_data_end+0xf800ea44>
1000ef10:	8005883a 	mov	r2,r16
1000ef14:	003ef806 	br	1000eaf8 <__alt_data_end+0xf800eaf8>
1000ef18:	873fe736 	bltu	r16,fp,1000eeb8 <__alt_data_end+0xf800eeb8>
1000ef1c:	e00f883a 	mov	r7,fp
1000ef20:	0009883a 	mov	r4,zero
1000ef24:	003fad06 	br	1000eddc <__alt_data_end+0xf800eddc>

1000ef28 <__adddf3>:
1000ef28:	02c00434 	movhi	r11,16
1000ef2c:	5affffc4 	addi	r11,r11,-1
1000ef30:	2806d7fa 	srli	r3,r5,31
1000ef34:	2ad4703a 	and	r10,r5,r11
1000ef38:	3ad2703a 	and	r9,r7,r11
1000ef3c:	3804d53a 	srli	r2,r7,20
1000ef40:	3018d77a 	srli	r12,r6,29
1000ef44:	280ad53a 	srli	r5,r5,20
1000ef48:	501490fa 	slli	r10,r10,3
1000ef4c:	2010d77a 	srli	r8,r4,29
1000ef50:	481290fa 	slli	r9,r9,3
1000ef54:	380ed7fa 	srli	r7,r7,31
1000ef58:	defffb04 	addi	sp,sp,-20
1000ef5c:	dc800215 	stw	r18,8(sp)
1000ef60:	dc400115 	stw	r17,4(sp)
1000ef64:	dc000015 	stw	r16,0(sp)
1000ef68:	dfc00415 	stw	ra,16(sp)
1000ef6c:	dcc00315 	stw	r19,12(sp)
1000ef70:	1c803fcc 	andi	r18,r3,255
1000ef74:	2c01ffcc 	andi	r16,r5,2047
1000ef78:	5210b03a 	or	r8,r10,r8
1000ef7c:	202290fa 	slli	r17,r4,3
1000ef80:	1081ffcc 	andi	r2,r2,2047
1000ef84:	4b12b03a 	or	r9,r9,r12
1000ef88:	300c90fa 	slli	r6,r6,3
1000ef8c:	91c07526 	beq	r18,r7,1000f164 <__adddf3+0x23c>
1000ef90:	8087c83a 	sub	r3,r16,r2
1000ef94:	00c0ab0e 	bge	zero,r3,1000f244 <__adddf3+0x31c>
1000ef98:	10002a1e 	bne	r2,zero,1000f044 <__adddf3+0x11c>
1000ef9c:	4984b03a 	or	r2,r9,r6
1000efa0:	1000961e 	bne	r2,zero,1000f1fc <__adddf3+0x2d4>
1000efa4:	888001cc 	andi	r2,r17,7
1000efa8:	10000726 	beq	r2,zero,1000efc8 <__adddf3+0xa0>
1000efac:	888003cc 	andi	r2,r17,15
1000efb0:	00c00104 	movi	r3,4
1000efb4:	10c00426 	beq	r2,r3,1000efc8 <__adddf3+0xa0>
1000efb8:	88c7883a 	add	r3,r17,r3
1000efbc:	1c63803a 	cmpltu	r17,r3,r17
1000efc0:	4451883a 	add	r8,r8,r17
1000efc4:	1823883a 	mov	r17,r3
1000efc8:	4080202c 	andhi	r2,r8,128
1000efcc:	10005926 	beq	r2,zero,1000f134 <__adddf3+0x20c>
1000efd0:	84000044 	addi	r16,r16,1
1000efd4:	0081ffc4 	movi	r2,2047
1000efd8:	8080ba26 	beq	r16,r2,1000f2c4 <__adddf3+0x39c>
1000efdc:	00bfe034 	movhi	r2,65408
1000efe0:	10bfffc4 	addi	r2,r2,-1
1000efe4:	4090703a 	and	r8,r8,r2
1000efe8:	4004977a 	slli	r2,r8,29
1000efec:	4010927a 	slli	r8,r8,9
1000eff0:	8822d0fa 	srli	r17,r17,3
1000eff4:	8401ffcc 	andi	r16,r16,2047
1000eff8:	4010d33a 	srli	r8,r8,12
1000effc:	9007883a 	mov	r3,r18
1000f000:	1444b03a 	or	r2,r2,r17
1000f004:	8401ffcc 	andi	r16,r16,2047
1000f008:	8020953a 	slli	r16,r16,20
1000f00c:	18c03fcc 	andi	r3,r3,255
1000f010:	01000434 	movhi	r4,16
1000f014:	213fffc4 	addi	r4,r4,-1
1000f018:	180697fa 	slli	r3,r3,31
1000f01c:	4110703a 	and	r8,r8,r4
1000f020:	4410b03a 	or	r8,r8,r16
1000f024:	40c6b03a 	or	r3,r8,r3
1000f028:	dfc00417 	ldw	ra,16(sp)
1000f02c:	dcc00317 	ldw	r19,12(sp)
1000f030:	dc800217 	ldw	r18,8(sp)
1000f034:	dc400117 	ldw	r17,4(sp)
1000f038:	dc000017 	ldw	r16,0(sp)
1000f03c:	dec00504 	addi	sp,sp,20
1000f040:	f800283a 	ret
1000f044:	0081ffc4 	movi	r2,2047
1000f048:	80bfd626 	beq	r16,r2,1000efa4 <__alt_data_end+0xf800efa4>
1000f04c:	4a402034 	orhi	r9,r9,128
1000f050:	00800e04 	movi	r2,56
1000f054:	10c09f16 	blt	r2,r3,1000f2d4 <__adddf3+0x3ac>
1000f058:	008007c4 	movi	r2,31
1000f05c:	10c0c216 	blt	r2,r3,1000f368 <__adddf3+0x440>
1000f060:	00800804 	movi	r2,32
1000f064:	10c5c83a 	sub	r2,r2,r3
1000f068:	488a983a 	sll	r5,r9,r2
1000f06c:	30c8d83a 	srl	r4,r6,r3
1000f070:	3084983a 	sll	r2,r6,r2
1000f074:	48c6d83a 	srl	r3,r9,r3
1000f078:	290cb03a 	or	r6,r5,r4
1000f07c:	1004c03a 	cmpne	r2,r2,zero
1000f080:	308cb03a 	or	r6,r6,r2
1000f084:	898dc83a 	sub	r6,r17,r6
1000f088:	89a3803a 	cmpltu	r17,r17,r6
1000f08c:	40d1c83a 	sub	r8,r8,r3
1000f090:	4451c83a 	sub	r8,r8,r17
1000f094:	3023883a 	mov	r17,r6
1000f098:	4080202c 	andhi	r2,r8,128
1000f09c:	10002326 	beq	r2,zero,1000f12c <__adddf3+0x204>
1000f0a0:	04c02034 	movhi	r19,128
1000f0a4:	9cffffc4 	addi	r19,r19,-1
1000f0a8:	44e6703a 	and	r19,r8,r19
1000f0ac:	98007626 	beq	r19,zero,1000f288 <__adddf3+0x360>
1000f0b0:	9809883a 	mov	r4,r19
1000f0b4:	00117680 	call	10011768 <__clzsi2>
1000f0b8:	10fffe04 	addi	r3,r2,-8
1000f0bc:	010007c4 	movi	r4,31
1000f0c0:	20c07716 	blt	r4,r3,1000f2a0 <__adddf3+0x378>
1000f0c4:	00800804 	movi	r2,32
1000f0c8:	10c5c83a 	sub	r2,r2,r3
1000f0cc:	8884d83a 	srl	r2,r17,r2
1000f0d0:	98d0983a 	sll	r8,r19,r3
1000f0d4:	88e2983a 	sll	r17,r17,r3
1000f0d8:	1204b03a 	or	r2,r2,r8
1000f0dc:	1c007416 	blt	r3,r16,1000f2b0 <__adddf3+0x388>
1000f0e0:	1c21c83a 	sub	r16,r3,r16
1000f0e4:	82000044 	addi	r8,r16,1
1000f0e8:	00c007c4 	movi	r3,31
1000f0ec:	1a009116 	blt	r3,r8,1000f334 <__adddf3+0x40c>
1000f0f0:	00c00804 	movi	r3,32
1000f0f4:	1a07c83a 	sub	r3,r3,r8
1000f0f8:	8a08d83a 	srl	r4,r17,r8
1000f0fc:	88e2983a 	sll	r17,r17,r3
1000f100:	10c6983a 	sll	r3,r2,r3
1000f104:	1210d83a 	srl	r8,r2,r8
1000f108:	8804c03a 	cmpne	r2,r17,zero
1000f10c:	1906b03a 	or	r3,r3,r4
1000f110:	18a2b03a 	or	r17,r3,r2
1000f114:	0021883a 	mov	r16,zero
1000f118:	003fa206 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f11c:	1890b03a 	or	r8,r3,r2
1000f120:	40017d26 	beq	r8,zero,1000f718 <__adddf3+0x7f0>
1000f124:	1011883a 	mov	r8,r2
1000f128:	1823883a 	mov	r17,r3
1000f12c:	888001cc 	andi	r2,r17,7
1000f130:	103f9e1e 	bne	r2,zero,1000efac <__alt_data_end+0xf800efac>
1000f134:	4004977a 	slli	r2,r8,29
1000f138:	8822d0fa 	srli	r17,r17,3
1000f13c:	4010d0fa 	srli	r8,r8,3
1000f140:	9007883a 	mov	r3,r18
1000f144:	1444b03a 	or	r2,r2,r17
1000f148:	0101ffc4 	movi	r4,2047
1000f14c:	81002426 	beq	r16,r4,1000f1e0 <__adddf3+0x2b8>
1000f150:	8120703a 	and	r16,r16,r4
1000f154:	01000434 	movhi	r4,16
1000f158:	213fffc4 	addi	r4,r4,-1
1000f15c:	4110703a 	and	r8,r8,r4
1000f160:	003fa806 	br	1000f004 <__alt_data_end+0xf800f004>
1000f164:	8089c83a 	sub	r4,r16,r2
1000f168:	01005e0e 	bge	zero,r4,1000f2e4 <__adddf3+0x3bc>
1000f16c:	10002b26 	beq	r2,zero,1000f21c <__adddf3+0x2f4>
1000f170:	0081ffc4 	movi	r2,2047
1000f174:	80bf8b26 	beq	r16,r2,1000efa4 <__alt_data_end+0xf800efa4>
1000f178:	4a402034 	orhi	r9,r9,128
1000f17c:	00800e04 	movi	r2,56
1000f180:	1100a40e 	bge	r2,r4,1000f414 <__adddf3+0x4ec>
1000f184:	498cb03a 	or	r6,r9,r6
1000f188:	300ac03a 	cmpne	r5,r6,zero
1000f18c:	0013883a 	mov	r9,zero
1000f190:	2c4b883a 	add	r5,r5,r17
1000f194:	2c63803a 	cmpltu	r17,r5,r17
1000f198:	4a11883a 	add	r8,r9,r8
1000f19c:	8a11883a 	add	r8,r17,r8
1000f1a0:	2823883a 	mov	r17,r5
1000f1a4:	4080202c 	andhi	r2,r8,128
1000f1a8:	103fe026 	beq	r2,zero,1000f12c <__alt_data_end+0xf800f12c>
1000f1ac:	84000044 	addi	r16,r16,1
1000f1b0:	0081ffc4 	movi	r2,2047
1000f1b4:	8080d226 	beq	r16,r2,1000f500 <__adddf3+0x5d8>
1000f1b8:	00bfe034 	movhi	r2,65408
1000f1bc:	10bfffc4 	addi	r2,r2,-1
1000f1c0:	4090703a 	and	r8,r8,r2
1000f1c4:	880ad07a 	srli	r5,r17,1
1000f1c8:	400897fa 	slli	r4,r8,31
1000f1cc:	88c0004c 	andi	r3,r17,1
1000f1d0:	28e2b03a 	or	r17,r5,r3
1000f1d4:	4010d07a 	srli	r8,r8,1
1000f1d8:	2462b03a 	or	r17,r4,r17
1000f1dc:	003f7106 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f1e0:	4088b03a 	or	r4,r8,r2
1000f1e4:	20014526 	beq	r4,zero,1000f6fc <__adddf3+0x7d4>
1000f1e8:	01000434 	movhi	r4,16
1000f1ec:	42000234 	orhi	r8,r8,8
1000f1f0:	213fffc4 	addi	r4,r4,-1
1000f1f4:	4110703a 	and	r8,r8,r4
1000f1f8:	003f8206 	br	1000f004 <__alt_data_end+0xf800f004>
1000f1fc:	18ffffc4 	addi	r3,r3,-1
1000f200:	1800491e 	bne	r3,zero,1000f328 <__adddf3+0x400>
1000f204:	898bc83a 	sub	r5,r17,r6
1000f208:	8963803a 	cmpltu	r17,r17,r5
1000f20c:	4251c83a 	sub	r8,r8,r9
1000f210:	4451c83a 	sub	r8,r8,r17
1000f214:	2823883a 	mov	r17,r5
1000f218:	003f9f06 	br	1000f098 <__alt_data_end+0xf800f098>
1000f21c:	4984b03a 	or	r2,r9,r6
1000f220:	103f6026 	beq	r2,zero,1000efa4 <__alt_data_end+0xf800efa4>
1000f224:	213fffc4 	addi	r4,r4,-1
1000f228:	2000931e 	bne	r4,zero,1000f478 <__adddf3+0x550>
1000f22c:	898d883a 	add	r6,r17,r6
1000f230:	3463803a 	cmpltu	r17,r6,r17
1000f234:	4251883a 	add	r8,r8,r9
1000f238:	8a11883a 	add	r8,r17,r8
1000f23c:	3023883a 	mov	r17,r6
1000f240:	003fd806 	br	1000f1a4 <__alt_data_end+0xf800f1a4>
1000f244:	1800541e 	bne	r3,zero,1000f398 <__adddf3+0x470>
1000f248:	80800044 	addi	r2,r16,1
1000f24c:	1081ffcc 	andi	r2,r2,2047
1000f250:	00c00044 	movi	r3,1
1000f254:	1880a00e 	bge	r3,r2,1000f4d8 <__adddf3+0x5b0>
1000f258:	8989c83a 	sub	r4,r17,r6
1000f25c:	8905803a 	cmpltu	r2,r17,r4
1000f260:	4267c83a 	sub	r19,r8,r9
1000f264:	98a7c83a 	sub	r19,r19,r2
1000f268:	9880202c 	andhi	r2,r19,128
1000f26c:	10006326 	beq	r2,zero,1000f3fc <__adddf3+0x4d4>
1000f270:	3463c83a 	sub	r17,r6,r17
1000f274:	4a07c83a 	sub	r3,r9,r8
1000f278:	344d803a 	cmpltu	r6,r6,r17
1000f27c:	19a7c83a 	sub	r19,r3,r6
1000f280:	3825883a 	mov	r18,r7
1000f284:	983f8a1e 	bne	r19,zero,1000f0b0 <__alt_data_end+0xf800f0b0>
1000f288:	8809883a 	mov	r4,r17
1000f28c:	00117680 	call	10011768 <__clzsi2>
1000f290:	10800804 	addi	r2,r2,32
1000f294:	10fffe04 	addi	r3,r2,-8
1000f298:	010007c4 	movi	r4,31
1000f29c:	20ff890e 	bge	r4,r3,1000f0c4 <__alt_data_end+0xf800f0c4>
1000f2a0:	10bff604 	addi	r2,r2,-40
1000f2a4:	8884983a 	sll	r2,r17,r2
1000f2a8:	0023883a 	mov	r17,zero
1000f2ac:	1c3f8c0e 	bge	r3,r16,1000f0e0 <__alt_data_end+0xf800f0e0>
1000f2b0:	023fe034 	movhi	r8,65408
1000f2b4:	423fffc4 	addi	r8,r8,-1
1000f2b8:	80e1c83a 	sub	r16,r16,r3
1000f2bc:	1210703a 	and	r8,r2,r8
1000f2c0:	003f3806 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f2c4:	9007883a 	mov	r3,r18
1000f2c8:	0011883a 	mov	r8,zero
1000f2cc:	0005883a 	mov	r2,zero
1000f2d0:	003f4c06 	br	1000f004 <__alt_data_end+0xf800f004>
1000f2d4:	498cb03a 	or	r6,r9,r6
1000f2d8:	300cc03a 	cmpne	r6,r6,zero
1000f2dc:	0007883a 	mov	r3,zero
1000f2e0:	003f6806 	br	1000f084 <__alt_data_end+0xf800f084>
1000f2e4:	20009c1e 	bne	r4,zero,1000f558 <__adddf3+0x630>
1000f2e8:	80800044 	addi	r2,r16,1
1000f2ec:	1141ffcc 	andi	r5,r2,2047
1000f2f0:	01000044 	movi	r4,1
1000f2f4:	2140670e 	bge	r4,r5,1000f494 <__adddf3+0x56c>
1000f2f8:	0101ffc4 	movi	r4,2047
1000f2fc:	11007f26 	beq	r2,r4,1000f4fc <__adddf3+0x5d4>
1000f300:	898d883a 	add	r6,r17,r6
1000f304:	4247883a 	add	r3,r8,r9
1000f308:	3451803a 	cmpltu	r8,r6,r17
1000f30c:	40d1883a 	add	r8,r8,r3
1000f310:	402297fa 	slli	r17,r8,31
1000f314:	300cd07a 	srli	r6,r6,1
1000f318:	4010d07a 	srli	r8,r8,1
1000f31c:	1021883a 	mov	r16,r2
1000f320:	89a2b03a 	or	r17,r17,r6
1000f324:	003f1f06 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f328:	0081ffc4 	movi	r2,2047
1000f32c:	80bf481e 	bne	r16,r2,1000f050 <__alt_data_end+0xf800f050>
1000f330:	003f1c06 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f334:	843ff844 	addi	r16,r16,-31
1000f338:	01000804 	movi	r4,32
1000f33c:	1406d83a 	srl	r3,r2,r16
1000f340:	41005026 	beq	r8,r4,1000f484 <__adddf3+0x55c>
1000f344:	01001004 	movi	r4,64
1000f348:	2211c83a 	sub	r8,r4,r8
1000f34c:	1204983a 	sll	r2,r2,r8
1000f350:	88a2b03a 	or	r17,r17,r2
1000f354:	8822c03a 	cmpne	r17,r17,zero
1000f358:	1c62b03a 	or	r17,r3,r17
1000f35c:	0011883a 	mov	r8,zero
1000f360:	0021883a 	mov	r16,zero
1000f364:	003f7106 	br	1000f12c <__alt_data_end+0xf800f12c>
1000f368:	193ff804 	addi	r4,r3,-32
1000f36c:	00800804 	movi	r2,32
1000f370:	4908d83a 	srl	r4,r9,r4
1000f374:	18804526 	beq	r3,r2,1000f48c <__adddf3+0x564>
1000f378:	00801004 	movi	r2,64
1000f37c:	10c5c83a 	sub	r2,r2,r3
1000f380:	4886983a 	sll	r3,r9,r2
1000f384:	198cb03a 	or	r6,r3,r6
1000f388:	300cc03a 	cmpne	r6,r6,zero
1000f38c:	218cb03a 	or	r6,r4,r6
1000f390:	0007883a 	mov	r3,zero
1000f394:	003f3b06 	br	1000f084 <__alt_data_end+0xf800f084>
1000f398:	80002a26 	beq	r16,zero,1000f444 <__adddf3+0x51c>
1000f39c:	0101ffc4 	movi	r4,2047
1000f3a0:	11006826 	beq	r2,r4,1000f544 <__adddf3+0x61c>
1000f3a4:	00c7c83a 	sub	r3,zero,r3
1000f3a8:	42002034 	orhi	r8,r8,128
1000f3ac:	01000e04 	movi	r4,56
1000f3b0:	20c07c16 	blt	r4,r3,1000f5a4 <__adddf3+0x67c>
1000f3b4:	010007c4 	movi	r4,31
1000f3b8:	20c0da16 	blt	r4,r3,1000f724 <__adddf3+0x7fc>
1000f3bc:	01000804 	movi	r4,32
1000f3c0:	20c9c83a 	sub	r4,r4,r3
1000f3c4:	4114983a 	sll	r10,r8,r4
1000f3c8:	88cad83a 	srl	r5,r17,r3
1000f3cc:	8908983a 	sll	r4,r17,r4
1000f3d0:	40c6d83a 	srl	r3,r8,r3
1000f3d4:	5162b03a 	or	r17,r10,r5
1000f3d8:	2008c03a 	cmpne	r4,r4,zero
1000f3dc:	8922b03a 	or	r17,r17,r4
1000f3e0:	3463c83a 	sub	r17,r6,r17
1000f3e4:	48c7c83a 	sub	r3,r9,r3
1000f3e8:	344d803a 	cmpltu	r6,r6,r17
1000f3ec:	1991c83a 	sub	r8,r3,r6
1000f3f0:	1021883a 	mov	r16,r2
1000f3f4:	3825883a 	mov	r18,r7
1000f3f8:	003f2706 	br	1000f098 <__alt_data_end+0xf800f098>
1000f3fc:	24d0b03a 	or	r8,r4,r19
1000f400:	40001b1e 	bne	r8,zero,1000f470 <__adddf3+0x548>
1000f404:	0005883a 	mov	r2,zero
1000f408:	0007883a 	mov	r3,zero
1000f40c:	0021883a 	mov	r16,zero
1000f410:	003f4d06 	br	1000f148 <__alt_data_end+0xf800f148>
1000f414:	008007c4 	movi	r2,31
1000f418:	11003c16 	blt	r2,r4,1000f50c <__adddf3+0x5e4>
1000f41c:	00800804 	movi	r2,32
1000f420:	1105c83a 	sub	r2,r2,r4
1000f424:	488e983a 	sll	r7,r9,r2
1000f428:	310ad83a 	srl	r5,r6,r4
1000f42c:	3084983a 	sll	r2,r6,r2
1000f430:	4912d83a 	srl	r9,r9,r4
1000f434:	394ab03a 	or	r5,r7,r5
1000f438:	1004c03a 	cmpne	r2,r2,zero
1000f43c:	288ab03a 	or	r5,r5,r2
1000f440:	003f5306 	br	1000f190 <__alt_data_end+0xf800f190>
1000f444:	4448b03a 	or	r4,r8,r17
1000f448:	20003e26 	beq	r4,zero,1000f544 <__adddf3+0x61c>
1000f44c:	00c6303a 	nor	r3,zero,r3
1000f450:	18003a1e 	bne	r3,zero,1000f53c <__adddf3+0x614>
1000f454:	3463c83a 	sub	r17,r6,r17
1000f458:	4a07c83a 	sub	r3,r9,r8
1000f45c:	344d803a 	cmpltu	r6,r6,r17
1000f460:	1991c83a 	sub	r8,r3,r6
1000f464:	1021883a 	mov	r16,r2
1000f468:	3825883a 	mov	r18,r7
1000f46c:	003f0a06 	br	1000f098 <__alt_data_end+0xf800f098>
1000f470:	2023883a 	mov	r17,r4
1000f474:	003f0d06 	br	1000f0ac <__alt_data_end+0xf800f0ac>
1000f478:	0081ffc4 	movi	r2,2047
1000f47c:	80bf3f1e 	bne	r16,r2,1000f17c <__alt_data_end+0xf800f17c>
1000f480:	003ec806 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f484:	0005883a 	mov	r2,zero
1000f488:	003fb106 	br	1000f350 <__alt_data_end+0xf800f350>
1000f48c:	0007883a 	mov	r3,zero
1000f490:	003fbc06 	br	1000f384 <__alt_data_end+0xf800f384>
1000f494:	4444b03a 	or	r2,r8,r17
1000f498:	8000871e 	bne	r16,zero,1000f6b8 <__adddf3+0x790>
1000f49c:	1000ba26 	beq	r2,zero,1000f788 <__adddf3+0x860>
1000f4a0:	4984b03a 	or	r2,r9,r6
1000f4a4:	103ebf26 	beq	r2,zero,1000efa4 <__alt_data_end+0xf800efa4>
1000f4a8:	8985883a 	add	r2,r17,r6
1000f4ac:	4247883a 	add	r3,r8,r9
1000f4b0:	1451803a 	cmpltu	r8,r2,r17
1000f4b4:	40d1883a 	add	r8,r8,r3
1000f4b8:	40c0202c 	andhi	r3,r8,128
1000f4bc:	1023883a 	mov	r17,r2
1000f4c0:	183f1a26 	beq	r3,zero,1000f12c <__alt_data_end+0xf800f12c>
1000f4c4:	00bfe034 	movhi	r2,65408
1000f4c8:	10bfffc4 	addi	r2,r2,-1
1000f4cc:	2021883a 	mov	r16,r4
1000f4d0:	4090703a 	and	r8,r8,r2
1000f4d4:	003eb306 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f4d8:	4444b03a 	or	r2,r8,r17
1000f4dc:	8000291e 	bne	r16,zero,1000f584 <__adddf3+0x65c>
1000f4e0:	10004b1e 	bne	r2,zero,1000f610 <__adddf3+0x6e8>
1000f4e4:	4990b03a 	or	r8,r9,r6
1000f4e8:	40008b26 	beq	r8,zero,1000f718 <__adddf3+0x7f0>
1000f4ec:	4811883a 	mov	r8,r9
1000f4f0:	3023883a 	mov	r17,r6
1000f4f4:	3825883a 	mov	r18,r7
1000f4f8:	003eaa06 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f4fc:	1021883a 	mov	r16,r2
1000f500:	0011883a 	mov	r8,zero
1000f504:	0005883a 	mov	r2,zero
1000f508:	003f0f06 	br	1000f148 <__alt_data_end+0xf800f148>
1000f50c:	217ff804 	addi	r5,r4,-32
1000f510:	00800804 	movi	r2,32
1000f514:	494ad83a 	srl	r5,r9,r5
1000f518:	20807d26 	beq	r4,r2,1000f710 <__adddf3+0x7e8>
1000f51c:	00801004 	movi	r2,64
1000f520:	1109c83a 	sub	r4,r2,r4
1000f524:	4912983a 	sll	r9,r9,r4
1000f528:	498cb03a 	or	r6,r9,r6
1000f52c:	300cc03a 	cmpne	r6,r6,zero
1000f530:	298ab03a 	or	r5,r5,r6
1000f534:	0013883a 	mov	r9,zero
1000f538:	003f1506 	br	1000f190 <__alt_data_end+0xf800f190>
1000f53c:	0101ffc4 	movi	r4,2047
1000f540:	113f9a1e 	bne	r2,r4,1000f3ac <__alt_data_end+0xf800f3ac>
1000f544:	4811883a 	mov	r8,r9
1000f548:	3023883a 	mov	r17,r6
1000f54c:	1021883a 	mov	r16,r2
1000f550:	3825883a 	mov	r18,r7
1000f554:	003e9306 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f558:	8000161e 	bne	r16,zero,1000f5b4 <__adddf3+0x68c>
1000f55c:	444ab03a 	or	r5,r8,r17
1000f560:	28005126 	beq	r5,zero,1000f6a8 <__adddf3+0x780>
1000f564:	0108303a 	nor	r4,zero,r4
1000f568:	20004d1e 	bne	r4,zero,1000f6a0 <__adddf3+0x778>
1000f56c:	89a3883a 	add	r17,r17,r6
1000f570:	4253883a 	add	r9,r8,r9
1000f574:	898d803a 	cmpltu	r6,r17,r6
1000f578:	3251883a 	add	r8,r6,r9
1000f57c:	1021883a 	mov	r16,r2
1000f580:	003f0806 	br	1000f1a4 <__alt_data_end+0xf800f1a4>
1000f584:	1000301e 	bne	r2,zero,1000f648 <__adddf3+0x720>
1000f588:	4984b03a 	or	r2,r9,r6
1000f58c:	10007126 	beq	r2,zero,1000f754 <__adddf3+0x82c>
1000f590:	4811883a 	mov	r8,r9
1000f594:	3023883a 	mov	r17,r6
1000f598:	3825883a 	mov	r18,r7
1000f59c:	0401ffc4 	movi	r16,2047
1000f5a0:	003e8006 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f5a4:	4462b03a 	or	r17,r8,r17
1000f5a8:	8822c03a 	cmpne	r17,r17,zero
1000f5ac:	0007883a 	mov	r3,zero
1000f5b0:	003f8b06 	br	1000f3e0 <__alt_data_end+0xf800f3e0>
1000f5b4:	0141ffc4 	movi	r5,2047
1000f5b8:	11403b26 	beq	r2,r5,1000f6a8 <__adddf3+0x780>
1000f5bc:	0109c83a 	sub	r4,zero,r4
1000f5c0:	42002034 	orhi	r8,r8,128
1000f5c4:	01400e04 	movi	r5,56
1000f5c8:	29006716 	blt	r5,r4,1000f768 <__adddf3+0x840>
1000f5cc:	014007c4 	movi	r5,31
1000f5d0:	29007016 	blt	r5,r4,1000f794 <__adddf3+0x86c>
1000f5d4:	01400804 	movi	r5,32
1000f5d8:	290bc83a 	sub	r5,r5,r4
1000f5dc:	4154983a 	sll	r10,r8,r5
1000f5e0:	890ed83a 	srl	r7,r17,r4
1000f5e4:	894a983a 	sll	r5,r17,r5
1000f5e8:	4108d83a 	srl	r4,r8,r4
1000f5ec:	51e2b03a 	or	r17,r10,r7
1000f5f0:	280ac03a 	cmpne	r5,r5,zero
1000f5f4:	8962b03a 	or	r17,r17,r5
1000f5f8:	89a3883a 	add	r17,r17,r6
1000f5fc:	2253883a 	add	r9,r4,r9
1000f600:	898d803a 	cmpltu	r6,r17,r6
1000f604:	3251883a 	add	r8,r6,r9
1000f608:	1021883a 	mov	r16,r2
1000f60c:	003ee506 	br	1000f1a4 <__alt_data_end+0xf800f1a4>
1000f610:	4984b03a 	or	r2,r9,r6
1000f614:	103e6326 	beq	r2,zero,1000efa4 <__alt_data_end+0xf800efa4>
1000f618:	8987c83a 	sub	r3,r17,r6
1000f61c:	88c9803a 	cmpltu	r4,r17,r3
1000f620:	4245c83a 	sub	r2,r8,r9
1000f624:	1105c83a 	sub	r2,r2,r4
1000f628:	1100202c 	andhi	r4,r2,128
1000f62c:	203ebb26 	beq	r4,zero,1000f11c <__alt_data_end+0xf800f11c>
1000f630:	3463c83a 	sub	r17,r6,r17
1000f634:	4a07c83a 	sub	r3,r9,r8
1000f638:	344d803a 	cmpltu	r6,r6,r17
1000f63c:	1991c83a 	sub	r8,r3,r6
1000f640:	3825883a 	mov	r18,r7
1000f644:	003e5706 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f648:	4984b03a 	or	r2,r9,r6
1000f64c:	10002e26 	beq	r2,zero,1000f708 <__adddf3+0x7e0>
1000f650:	4004d0fa 	srli	r2,r8,3
1000f654:	8822d0fa 	srli	r17,r17,3
1000f658:	4010977a 	slli	r8,r8,29
1000f65c:	10c0022c 	andhi	r3,r2,8
1000f660:	4462b03a 	or	r17,r8,r17
1000f664:	18000826 	beq	r3,zero,1000f688 <__adddf3+0x760>
1000f668:	4808d0fa 	srli	r4,r9,3
1000f66c:	20c0022c 	andhi	r3,r4,8
1000f670:	1800051e 	bne	r3,zero,1000f688 <__adddf3+0x760>
1000f674:	300cd0fa 	srli	r6,r6,3
1000f678:	4806977a 	slli	r3,r9,29
1000f67c:	2005883a 	mov	r2,r4
1000f680:	3825883a 	mov	r18,r7
1000f684:	19a2b03a 	or	r17,r3,r6
1000f688:	8810d77a 	srli	r8,r17,29
1000f68c:	100490fa 	slli	r2,r2,3
1000f690:	882290fa 	slli	r17,r17,3
1000f694:	0401ffc4 	movi	r16,2047
1000f698:	4090b03a 	or	r8,r8,r2
1000f69c:	003e4106 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f6a0:	0141ffc4 	movi	r5,2047
1000f6a4:	117fc71e 	bne	r2,r5,1000f5c4 <__alt_data_end+0xf800f5c4>
1000f6a8:	4811883a 	mov	r8,r9
1000f6ac:	3023883a 	mov	r17,r6
1000f6b0:	1021883a 	mov	r16,r2
1000f6b4:	003e3b06 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f6b8:	10002f26 	beq	r2,zero,1000f778 <__adddf3+0x850>
1000f6bc:	4984b03a 	or	r2,r9,r6
1000f6c0:	10001126 	beq	r2,zero,1000f708 <__adddf3+0x7e0>
1000f6c4:	4004d0fa 	srli	r2,r8,3
1000f6c8:	8822d0fa 	srli	r17,r17,3
1000f6cc:	4010977a 	slli	r8,r8,29
1000f6d0:	10c0022c 	andhi	r3,r2,8
1000f6d4:	4462b03a 	or	r17,r8,r17
1000f6d8:	183feb26 	beq	r3,zero,1000f688 <__alt_data_end+0xf800f688>
1000f6dc:	4808d0fa 	srli	r4,r9,3
1000f6e0:	20c0022c 	andhi	r3,r4,8
1000f6e4:	183fe81e 	bne	r3,zero,1000f688 <__alt_data_end+0xf800f688>
1000f6e8:	300cd0fa 	srli	r6,r6,3
1000f6ec:	4806977a 	slli	r3,r9,29
1000f6f0:	2005883a 	mov	r2,r4
1000f6f4:	19a2b03a 	or	r17,r3,r6
1000f6f8:	003fe306 	br	1000f688 <__alt_data_end+0xf800f688>
1000f6fc:	0011883a 	mov	r8,zero
1000f700:	0005883a 	mov	r2,zero
1000f704:	003e3f06 	br	1000f004 <__alt_data_end+0xf800f004>
1000f708:	0401ffc4 	movi	r16,2047
1000f70c:	003e2506 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f710:	0013883a 	mov	r9,zero
1000f714:	003f8406 	br	1000f528 <__alt_data_end+0xf800f528>
1000f718:	0005883a 	mov	r2,zero
1000f71c:	0007883a 	mov	r3,zero
1000f720:	003e8906 	br	1000f148 <__alt_data_end+0xf800f148>
1000f724:	197ff804 	addi	r5,r3,-32
1000f728:	01000804 	movi	r4,32
1000f72c:	414ad83a 	srl	r5,r8,r5
1000f730:	19002426 	beq	r3,r4,1000f7c4 <__adddf3+0x89c>
1000f734:	01001004 	movi	r4,64
1000f738:	20c7c83a 	sub	r3,r4,r3
1000f73c:	40c6983a 	sll	r3,r8,r3
1000f740:	1c46b03a 	or	r3,r3,r17
1000f744:	1806c03a 	cmpne	r3,r3,zero
1000f748:	28e2b03a 	or	r17,r5,r3
1000f74c:	0007883a 	mov	r3,zero
1000f750:	003f2306 	br	1000f3e0 <__alt_data_end+0xf800f3e0>
1000f754:	0007883a 	mov	r3,zero
1000f758:	5811883a 	mov	r8,r11
1000f75c:	00bfffc4 	movi	r2,-1
1000f760:	0401ffc4 	movi	r16,2047
1000f764:	003e7806 	br	1000f148 <__alt_data_end+0xf800f148>
1000f768:	4462b03a 	or	r17,r8,r17
1000f76c:	8822c03a 	cmpne	r17,r17,zero
1000f770:	0009883a 	mov	r4,zero
1000f774:	003fa006 	br	1000f5f8 <__alt_data_end+0xf800f5f8>
1000f778:	4811883a 	mov	r8,r9
1000f77c:	3023883a 	mov	r17,r6
1000f780:	0401ffc4 	movi	r16,2047
1000f784:	003e0706 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f788:	4811883a 	mov	r8,r9
1000f78c:	3023883a 	mov	r17,r6
1000f790:	003e0406 	br	1000efa4 <__alt_data_end+0xf800efa4>
1000f794:	21fff804 	addi	r7,r4,-32
1000f798:	01400804 	movi	r5,32
1000f79c:	41ced83a 	srl	r7,r8,r7
1000f7a0:	21400a26 	beq	r4,r5,1000f7cc <__adddf3+0x8a4>
1000f7a4:	01401004 	movi	r5,64
1000f7a8:	2909c83a 	sub	r4,r5,r4
1000f7ac:	4108983a 	sll	r4,r8,r4
1000f7b0:	2448b03a 	or	r4,r4,r17
1000f7b4:	2008c03a 	cmpne	r4,r4,zero
1000f7b8:	3922b03a 	or	r17,r7,r4
1000f7bc:	0009883a 	mov	r4,zero
1000f7c0:	003f8d06 	br	1000f5f8 <__alt_data_end+0xf800f5f8>
1000f7c4:	0007883a 	mov	r3,zero
1000f7c8:	003fdd06 	br	1000f740 <__alt_data_end+0xf800f740>
1000f7cc:	0009883a 	mov	r4,zero
1000f7d0:	003ff706 	br	1000f7b0 <__alt_data_end+0xf800f7b0>

1000f7d4 <__divdf3>:
1000f7d4:	defff004 	addi	sp,sp,-64
1000f7d8:	dc800815 	stw	r18,32(sp)
1000f7dc:	2824d53a 	srli	r18,r5,20
1000f7e0:	dd800c15 	stw	r22,48(sp)
1000f7e4:	282cd7fa 	srli	r22,r5,31
1000f7e8:	dc000615 	stw	r16,24(sp)
1000f7ec:	04000434 	movhi	r16,16
1000f7f0:	843fffc4 	addi	r16,r16,-1
1000f7f4:	dfc00f15 	stw	ra,60(sp)
1000f7f8:	df000e15 	stw	fp,56(sp)
1000f7fc:	ddc00d15 	stw	r23,52(sp)
1000f800:	dd400b15 	stw	r21,44(sp)
1000f804:	dd000a15 	stw	r20,40(sp)
1000f808:	dcc00915 	stw	r19,36(sp)
1000f80c:	dc400715 	stw	r17,28(sp)
1000f810:	9481ffcc 	andi	r18,r18,2047
1000f814:	2c20703a 	and	r16,r5,r16
1000f818:	b2003fcc 	andi	r8,r22,255
1000f81c:	90006126 	beq	r18,zero,1000f9a4 <__divdf3+0x1d0>
1000f820:	0081ffc4 	movi	r2,2047
1000f824:	202b883a 	mov	r21,r4
1000f828:	90803726 	beq	r18,r2,1000f908 <__divdf3+0x134>
1000f82c:	80800434 	orhi	r2,r16,16
1000f830:	100490fa 	slli	r2,r2,3
1000f834:	2020d77a 	srli	r16,r4,29
1000f838:	202a90fa 	slli	r21,r4,3
1000f83c:	94bf0044 	addi	r18,r18,-1023
1000f840:	80a0b03a 	or	r16,r16,r2
1000f844:	0013883a 	mov	r9,zero
1000f848:	000b883a 	mov	r5,zero
1000f84c:	3806d53a 	srli	r3,r7,20
1000f850:	382ed7fa 	srli	r23,r7,31
1000f854:	04400434 	movhi	r17,16
1000f858:	8c7fffc4 	addi	r17,r17,-1
1000f85c:	18c1ffcc 	andi	r3,r3,2047
1000f860:	3029883a 	mov	r20,r6
1000f864:	3c62703a 	and	r17,r7,r17
1000f868:	bf003fcc 	andi	fp,r23,255
1000f86c:	18006e26 	beq	r3,zero,1000fa28 <__divdf3+0x254>
1000f870:	0081ffc4 	movi	r2,2047
1000f874:	18806626 	beq	r3,r2,1000fa10 <__divdf3+0x23c>
1000f878:	88800434 	orhi	r2,r17,16
1000f87c:	100490fa 	slli	r2,r2,3
1000f880:	3022d77a 	srli	r17,r6,29
1000f884:	302890fa 	slli	r20,r6,3
1000f888:	18ff0044 	addi	r3,r3,-1023
1000f88c:	88a2b03a 	or	r17,r17,r2
1000f890:	000f883a 	mov	r7,zero
1000f894:	b5e6f03a 	xor	r19,r22,r23
1000f898:	3a4cb03a 	or	r6,r7,r9
1000f89c:	008003c4 	movi	r2,15
1000f8a0:	9809883a 	mov	r4,r19
1000f8a4:	90c7c83a 	sub	r3,r18,r3
1000f8a8:	9cc03fcc 	andi	r19,r19,255
1000f8ac:	11809636 	bltu	r2,r6,1000fb08 <__divdf3+0x334>
1000f8b0:	300c90ba 	slli	r6,r6,2
1000f8b4:	00840074 	movhi	r2,4097
1000f8b8:	10be3204 	addi	r2,r2,-1848
1000f8bc:	308d883a 	add	r6,r6,r2
1000f8c0:	30800017 	ldw	r2,0(r6)
1000f8c4:	1000683a 	jmp	r2
1000f8c8:	1000fb08 	cmpgei	zero,r2,1004
1000f8cc:	1000f940 	call	11000f94 <_gp+0xfe2ddc>
1000f8d0:	1000faf8 	rdprs	zero,r2,1003
1000f8d4:	1000f934 	orhi	zero,r2,996
1000f8d8:	1000faf8 	rdprs	zero,r2,1003
1000f8dc:	1000facc 	andi	zero,r2,1003
1000f8e0:	1000faf8 	rdprs	zero,r2,1003
1000f8e4:	1000f934 	orhi	zero,r2,996
1000f8e8:	1000f940 	call	11000f94 <_gp+0xfe2ddc>
1000f8ec:	1000f940 	call	11000f94 <_gp+0xfe2ddc>
1000f8f0:	1000facc 	andi	zero,r2,1003
1000f8f4:	1000f934 	orhi	zero,r2,996
1000f8f8:	1000f924 	muli	zero,r2,996
1000f8fc:	1000f924 	muli	zero,r2,996
1000f900:	1000f924 	muli	zero,r2,996
1000f904:	1000fe90 	cmplti	zero,r2,1018
1000f908:	2404b03a 	or	r2,r4,r16
1000f90c:	10006c1e 	bne	r2,zero,1000fac0 <__divdf3+0x2ec>
1000f910:	02400204 	movi	r9,8
1000f914:	0021883a 	mov	r16,zero
1000f918:	002b883a 	mov	r21,zero
1000f91c:	01400084 	movi	r5,2
1000f920:	003fca06 	br	1000f84c <__alt_data_end+0xf800f84c>
1000f924:	8023883a 	mov	r17,r16
1000f928:	a829883a 	mov	r20,r21
1000f92c:	4039883a 	mov	fp,r8
1000f930:	280f883a 	mov	r7,r5
1000f934:	00800084 	movi	r2,2
1000f938:	3881601e 	bne	r7,r2,1000febc <__divdf3+0x6e8>
1000f93c:	e027883a 	mov	r19,fp
1000f940:	9900004c 	andi	r4,r19,1
1000f944:	0081ffc4 	movi	r2,2047
1000f948:	0021883a 	mov	r16,zero
1000f94c:	002b883a 	mov	r21,zero
1000f950:	1004953a 	slli	r2,r2,20
1000f954:	20c03fcc 	andi	r3,r4,255
1000f958:	01400434 	movhi	r5,16
1000f95c:	297fffc4 	addi	r5,r5,-1
1000f960:	180697fa 	slli	r3,r3,31
1000f964:	8160703a 	and	r16,r16,r5
1000f968:	80a0b03a 	or	r16,r16,r2
1000f96c:	80c6b03a 	or	r3,r16,r3
1000f970:	a805883a 	mov	r2,r21
1000f974:	dfc00f17 	ldw	ra,60(sp)
1000f978:	df000e17 	ldw	fp,56(sp)
1000f97c:	ddc00d17 	ldw	r23,52(sp)
1000f980:	dd800c17 	ldw	r22,48(sp)
1000f984:	dd400b17 	ldw	r21,44(sp)
1000f988:	dd000a17 	ldw	r20,40(sp)
1000f98c:	dcc00917 	ldw	r19,36(sp)
1000f990:	dc800817 	ldw	r18,32(sp)
1000f994:	dc400717 	ldw	r17,28(sp)
1000f998:	dc000617 	ldw	r16,24(sp)
1000f99c:	dec01004 	addi	sp,sp,64
1000f9a0:	f800283a 	ret
1000f9a4:	2404b03a 	or	r2,r4,r16
1000f9a8:	2023883a 	mov	r17,r4
1000f9ac:	10003f26 	beq	r2,zero,1000faac <__divdf3+0x2d8>
1000f9b0:	80015e26 	beq	r16,zero,1000ff2c <__divdf3+0x758>
1000f9b4:	8009883a 	mov	r4,r16
1000f9b8:	d9800215 	stw	r6,8(sp)
1000f9bc:	d9c00515 	stw	r7,20(sp)
1000f9c0:	da000415 	stw	r8,16(sp)
1000f9c4:	00117680 	call	10011768 <__clzsi2>
1000f9c8:	d9800217 	ldw	r6,8(sp)
1000f9cc:	d9c00517 	ldw	r7,20(sp)
1000f9d0:	da000417 	ldw	r8,16(sp)
1000f9d4:	113ffd44 	addi	r4,r2,-11
1000f9d8:	00c00704 	movi	r3,28
1000f9dc:	19014f16 	blt	r3,r4,1000ff1c <__divdf3+0x748>
1000f9e0:	00c00744 	movi	r3,29
1000f9e4:	157ffe04 	addi	r21,r2,-8
1000f9e8:	1907c83a 	sub	r3,r3,r4
1000f9ec:	8560983a 	sll	r16,r16,r21
1000f9f0:	88c6d83a 	srl	r3,r17,r3
1000f9f4:	8d6a983a 	sll	r21,r17,r21
1000f9f8:	1c20b03a 	or	r16,r3,r16
1000f9fc:	1080fcc4 	addi	r2,r2,1011
1000fa00:	00a5c83a 	sub	r18,zero,r2
1000fa04:	0013883a 	mov	r9,zero
1000fa08:	000b883a 	mov	r5,zero
1000fa0c:	003f8f06 	br	1000f84c <__alt_data_end+0xf800f84c>
1000fa10:	3444b03a 	or	r2,r6,r17
1000fa14:	1000231e 	bne	r2,zero,1000faa4 <__divdf3+0x2d0>
1000fa18:	0023883a 	mov	r17,zero
1000fa1c:	0029883a 	mov	r20,zero
1000fa20:	01c00084 	movi	r7,2
1000fa24:	003f9b06 	br	1000f894 <__alt_data_end+0xf800f894>
1000fa28:	3444b03a 	or	r2,r6,r17
1000fa2c:	10001926 	beq	r2,zero,1000fa94 <__divdf3+0x2c0>
1000fa30:	88014b26 	beq	r17,zero,1000ff60 <__divdf3+0x78c>
1000fa34:	8809883a 	mov	r4,r17
1000fa38:	d9400115 	stw	r5,4(sp)
1000fa3c:	d9800215 	stw	r6,8(sp)
1000fa40:	da000415 	stw	r8,16(sp)
1000fa44:	da400315 	stw	r9,12(sp)
1000fa48:	00117680 	call	10011768 <__clzsi2>
1000fa4c:	d9400117 	ldw	r5,4(sp)
1000fa50:	d9800217 	ldw	r6,8(sp)
1000fa54:	da000417 	ldw	r8,16(sp)
1000fa58:	da400317 	ldw	r9,12(sp)
1000fa5c:	113ffd44 	addi	r4,r2,-11
1000fa60:	00c00704 	movi	r3,28
1000fa64:	19013a16 	blt	r3,r4,1000ff50 <__divdf3+0x77c>
1000fa68:	00c00744 	movi	r3,29
1000fa6c:	153ffe04 	addi	r20,r2,-8
1000fa70:	1907c83a 	sub	r3,r3,r4
1000fa74:	8d22983a 	sll	r17,r17,r20
1000fa78:	30c6d83a 	srl	r3,r6,r3
1000fa7c:	3528983a 	sll	r20,r6,r20
1000fa80:	1c62b03a 	or	r17,r3,r17
1000fa84:	1080fcc4 	addi	r2,r2,1011
1000fa88:	0087c83a 	sub	r3,zero,r2
1000fa8c:	000f883a 	mov	r7,zero
1000fa90:	003f8006 	br	1000f894 <__alt_data_end+0xf800f894>
1000fa94:	0023883a 	mov	r17,zero
1000fa98:	0029883a 	mov	r20,zero
1000fa9c:	01c00044 	movi	r7,1
1000faa0:	003f7c06 	br	1000f894 <__alt_data_end+0xf800f894>
1000faa4:	01c000c4 	movi	r7,3
1000faa8:	003f7a06 	br	1000f894 <__alt_data_end+0xf800f894>
1000faac:	02400104 	movi	r9,4
1000fab0:	0021883a 	mov	r16,zero
1000fab4:	002b883a 	mov	r21,zero
1000fab8:	01400044 	movi	r5,1
1000fabc:	003f6306 	br	1000f84c <__alt_data_end+0xf800f84c>
1000fac0:	02400304 	movi	r9,12
1000fac4:	014000c4 	movi	r5,3
1000fac8:	003f6006 	br	1000f84c <__alt_data_end+0xf800f84c>
1000facc:	04000434 	movhi	r16,16
1000fad0:	0009883a 	mov	r4,zero
1000fad4:	843fffc4 	addi	r16,r16,-1
1000fad8:	057fffc4 	movi	r21,-1
1000fadc:	0081ffc4 	movi	r2,2047
1000fae0:	003f9b06 	br	1000f950 <__alt_data_end+0xf800f950>
1000fae4:	00c00044 	movi	r3,1
1000fae8:	1887c83a 	sub	r3,r3,r2
1000faec:	01000e04 	movi	r4,56
1000faf0:	20c1530e 	bge	r4,r3,10010040 <__divdf3+0x86c>
1000faf4:	9900004c 	andi	r4,r19,1
1000faf8:	0005883a 	mov	r2,zero
1000fafc:	0021883a 	mov	r16,zero
1000fb00:	002b883a 	mov	r21,zero
1000fb04:	003f9206 	br	1000f950 <__alt_data_end+0xf800f950>
1000fb08:	8c012e36 	bltu	r17,r16,1000ffc4 <__divdf3+0x7f0>
1000fb0c:	84412c26 	beq	r16,r17,1000ffc0 <__divdf3+0x7ec>
1000fb10:	a82f883a 	mov	r23,r21
1000fb14:	18ffffc4 	addi	r3,r3,-1
1000fb18:	002b883a 	mov	r21,zero
1000fb1c:	a004d63a 	srli	r2,r20,24
1000fb20:	8822923a 	slli	r17,r17,8
1000fb24:	a028923a 	slli	r20,r20,8
1000fb28:	8009883a 	mov	r4,r16
1000fb2c:	88acb03a 	or	r22,r17,r2
1000fb30:	dd000015 	stw	r20,0(sp)
1000fb34:	b028d43a 	srli	r20,r22,16
1000fb38:	d8c00215 	stw	r3,8(sp)
1000fb3c:	b4bfffcc 	andi	r18,r22,65535
1000fb40:	a00b883a 	mov	r5,r20
1000fb44:	0000f0c0 	call	10000f0c <__udivsi3>
1000fb48:	100b883a 	mov	r5,r2
1000fb4c:	9009883a 	mov	r4,r18
1000fb50:	1023883a 	mov	r17,r2
1000fb54:	0000fc80 	call	10000fc8 <__mulsi3>
1000fb58:	8009883a 	mov	r4,r16
1000fb5c:	a00b883a 	mov	r5,r20
1000fb60:	1039883a 	mov	fp,r2
1000fb64:	0000f700 	call	10000f70 <__umodsi3>
1000fb68:	1004943a 	slli	r2,r2,16
1000fb6c:	b808d43a 	srli	r4,r23,16
1000fb70:	d8c00217 	ldw	r3,8(sp)
1000fb74:	2084b03a 	or	r2,r4,r2
1000fb78:	1700062e 	bgeu	r2,fp,1000fb94 <__divdf3+0x3c0>
1000fb7c:	1585883a 	add	r2,r2,r22
1000fb80:	893fffc4 	addi	r4,r17,-1
1000fb84:	15811d36 	bltu	r2,r22,1000fffc <__divdf3+0x828>
1000fb88:	17011c2e 	bgeu	r2,fp,1000fffc <__divdf3+0x828>
1000fb8c:	8c7fff84 	addi	r17,r17,-2
1000fb90:	1585883a 	add	r2,r2,r22
1000fb94:	1739c83a 	sub	fp,r2,fp
1000fb98:	a00b883a 	mov	r5,r20
1000fb9c:	e009883a 	mov	r4,fp
1000fba0:	d8c00215 	stw	r3,8(sp)
1000fba4:	0000f0c0 	call	10000f0c <__udivsi3>
1000fba8:	100b883a 	mov	r5,r2
1000fbac:	9009883a 	mov	r4,r18
1000fbb0:	1021883a 	mov	r16,r2
1000fbb4:	0000fc80 	call	10000fc8 <__mulsi3>
1000fbb8:	a00b883a 	mov	r5,r20
1000fbbc:	e009883a 	mov	r4,fp
1000fbc0:	d8800415 	stw	r2,16(sp)
1000fbc4:	0000f700 	call	10000f70 <__umodsi3>
1000fbc8:	1004943a 	slli	r2,r2,16
1000fbcc:	da000417 	ldw	r8,16(sp)
1000fbd0:	bdffffcc 	andi	r23,r23,65535
1000fbd4:	b884b03a 	or	r2,r23,r2
1000fbd8:	d8c00217 	ldw	r3,8(sp)
1000fbdc:	1200062e 	bgeu	r2,r8,1000fbf8 <__divdf3+0x424>
1000fbe0:	1585883a 	add	r2,r2,r22
1000fbe4:	813fffc4 	addi	r4,r16,-1
1000fbe8:	15810236 	bltu	r2,r22,1000fff4 <__divdf3+0x820>
1000fbec:	1201012e 	bgeu	r2,r8,1000fff4 <__divdf3+0x820>
1000fbf0:	843fff84 	addi	r16,r16,-2
1000fbf4:	1585883a 	add	r2,r2,r22
1000fbf8:	8822943a 	slli	r17,r17,16
1000fbfc:	d9800017 	ldw	r6,0(sp)
1000fc00:	1211c83a 	sub	r8,r2,r8
1000fc04:	8c22b03a 	or	r17,r17,r16
1000fc08:	373fffcc 	andi	fp,r6,65535
1000fc0c:	8abfffcc 	andi	r10,r17,65535
1000fc10:	8820d43a 	srli	r16,r17,16
1000fc14:	5009883a 	mov	r4,r10
1000fc18:	e00b883a 	mov	r5,fp
1000fc1c:	302ed43a 	srli	r23,r6,16
1000fc20:	d8c00215 	stw	r3,8(sp)
1000fc24:	da000415 	stw	r8,16(sp)
1000fc28:	da800115 	stw	r10,4(sp)
1000fc2c:	0000fc80 	call	10000fc8 <__mulsi3>
1000fc30:	800b883a 	mov	r5,r16
1000fc34:	e009883a 	mov	r4,fp
1000fc38:	d8800515 	stw	r2,20(sp)
1000fc3c:	0000fc80 	call	10000fc8 <__mulsi3>
1000fc40:	8009883a 	mov	r4,r16
1000fc44:	b80b883a 	mov	r5,r23
1000fc48:	d8800315 	stw	r2,12(sp)
1000fc4c:	0000fc80 	call	10000fc8 <__mulsi3>
1000fc50:	da800117 	ldw	r10,4(sp)
1000fc54:	b80b883a 	mov	r5,r23
1000fc58:	1021883a 	mov	r16,r2
1000fc5c:	5009883a 	mov	r4,r10
1000fc60:	0000fc80 	call	10000fc8 <__mulsi3>
1000fc64:	d9c00517 	ldw	r7,20(sp)
1000fc68:	da400317 	ldw	r9,12(sp)
1000fc6c:	d8c00217 	ldw	r3,8(sp)
1000fc70:	3808d43a 	srli	r4,r7,16
1000fc74:	1245883a 	add	r2,r2,r9
1000fc78:	da000417 	ldw	r8,16(sp)
1000fc7c:	2085883a 	add	r2,r4,r2
1000fc80:	1240022e 	bgeu	r2,r9,1000fc8c <__divdf3+0x4b8>
1000fc84:	01000074 	movhi	r4,1
1000fc88:	8121883a 	add	r16,r16,r4
1000fc8c:	1008d43a 	srli	r4,r2,16
1000fc90:	1004943a 	slli	r2,r2,16
1000fc94:	39ffffcc 	andi	r7,r7,65535
1000fc98:	2409883a 	add	r4,r4,r16
1000fc9c:	11c5883a 	add	r2,r2,r7
1000fca0:	4100bb36 	bltu	r8,r4,1000ff90 <__divdf3+0x7bc>
1000fca4:	4100d726 	beq	r8,r4,10010004 <__divdf3+0x830>
1000fca8:	4109c83a 	sub	r4,r8,r4
1000fcac:	a8a1c83a 	sub	r16,r21,r2
1000fcb0:	ac2b803a 	cmpltu	r21,r21,r16
1000fcb4:	256bc83a 	sub	r21,r4,r21
1000fcb8:	b540d926 	beq	r22,r21,10010020 <__divdf3+0x84c>
1000fcbc:	a00b883a 	mov	r5,r20
1000fcc0:	a809883a 	mov	r4,r21
1000fcc4:	d8c00215 	stw	r3,8(sp)
1000fcc8:	0000f0c0 	call	10000f0c <__udivsi3>
1000fccc:	100b883a 	mov	r5,r2
1000fcd0:	9009883a 	mov	r4,r18
1000fcd4:	d8800515 	stw	r2,20(sp)
1000fcd8:	0000fc80 	call	10000fc8 <__mulsi3>
1000fcdc:	a809883a 	mov	r4,r21
1000fce0:	a00b883a 	mov	r5,r20
1000fce4:	d8800415 	stw	r2,16(sp)
1000fce8:	0000f700 	call	10000f70 <__umodsi3>
1000fcec:	1004943a 	slli	r2,r2,16
1000fcf0:	8008d43a 	srli	r4,r16,16
1000fcf4:	da000417 	ldw	r8,16(sp)
1000fcf8:	d8c00217 	ldw	r3,8(sp)
1000fcfc:	2084b03a 	or	r2,r4,r2
1000fd00:	d9c00517 	ldw	r7,20(sp)
1000fd04:	1200062e 	bgeu	r2,r8,1000fd20 <__divdf3+0x54c>
1000fd08:	1585883a 	add	r2,r2,r22
1000fd0c:	393fffc4 	addi	r4,r7,-1
1000fd10:	1580c536 	bltu	r2,r22,10010028 <__divdf3+0x854>
1000fd14:	1200c42e 	bgeu	r2,r8,10010028 <__divdf3+0x854>
1000fd18:	39ffff84 	addi	r7,r7,-2
1000fd1c:	1585883a 	add	r2,r2,r22
1000fd20:	122bc83a 	sub	r21,r2,r8
1000fd24:	a00b883a 	mov	r5,r20
1000fd28:	a809883a 	mov	r4,r21
1000fd2c:	d8c00215 	stw	r3,8(sp)
1000fd30:	d9c00515 	stw	r7,20(sp)
1000fd34:	0000f0c0 	call	10000f0c <__udivsi3>
1000fd38:	9009883a 	mov	r4,r18
1000fd3c:	100b883a 	mov	r5,r2
1000fd40:	d8800415 	stw	r2,16(sp)
1000fd44:	0000fc80 	call	10000fc8 <__mulsi3>
1000fd48:	a809883a 	mov	r4,r21
1000fd4c:	a00b883a 	mov	r5,r20
1000fd50:	1025883a 	mov	r18,r2
1000fd54:	0000f700 	call	10000f70 <__umodsi3>
1000fd58:	1004943a 	slli	r2,r2,16
1000fd5c:	813fffcc 	andi	r4,r16,65535
1000fd60:	d8c00217 	ldw	r3,8(sp)
1000fd64:	20a0b03a 	or	r16,r4,r2
1000fd68:	d9c00517 	ldw	r7,20(sp)
1000fd6c:	da000417 	ldw	r8,16(sp)
1000fd70:	8480062e 	bgeu	r16,r18,1000fd8c <__divdf3+0x5b8>
1000fd74:	85a1883a 	add	r16,r16,r22
1000fd78:	40bfffc4 	addi	r2,r8,-1
1000fd7c:	8580ac36 	bltu	r16,r22,10010030 <__divdf3+0x85c>
1000fd80:	8480ab2e 	bgeu	r16,r18,10010030 <__divdf3+0x85c>
1000fd84:	423fff84 	addi	r8,r8,-2
1000fd88:	85a1883a 	add	r16,r16,r22
1000fd8c:	3804943a 	slli	r2,r7,16
1000fd90:	84a1c83a 	sub	r16,r16,r18
1000fd94:	e009883a 	mov	r4,fp
1000fd98:	1228b03a 	or	r20,r2,r8
1000fd9c:	a1ffffcc 	andi	r7,r20,65535
1000fda0:	a024d43a 	srli	r18,r20,16
1000fda4:	380b883a 	mov	r5,r7
1000fda8:	d8c00215 	stw	r3,8(sp)
1000fdac:	d9c00515 	stw	r7,20(sp)
1000fdb0:	0000fc80 	call	10000fc8 <__mulsi3>
1000fdb4:	900b883a 	mov	r5,r18
1000fdb8:	e009883a 	mov	r4,fp
1000fdbc:	102b883a 	mov	r21,r2
1000fdc0:	0000fc80 	call	10000fc8 <__mulsi3>
1000fdc4:	900b883a 	mov	r5,r18
1000fdc8:	b809883a 	mov	r4,r23
1000fdcc:	1039883a 	mov	fp,r2
1000fdd0:	0000fc80 	call	10000fc8 <__mulsi3>
1000fdd4:	d9c00517 	ldw	r7,20(sp)
1000fdd8:	b80b883a 	mov	r5,r23
1000fddc:	1025883a 	mov	r18,r2
1000fde0:	3809883a 	mov	r4,r7
1000fde4:	0000fc80 	call	10000fc8 <__mulsi3>
1000fde8:	a808d43a 	srli	r4,r21,16
1000fdec:	1705883a 	add	r2,r2,fp
1000fdf0:	d8c00217 	ldw	r3,8(sp)
1000fdf4:	2085883a 	add	r2,r4,r2
1000fdf8:	1700022e 	bgeu	r2,fp,1000fe04 <__divdf3+0x630>
1000fdfc:	01000074 	movhi	r4,1
1000fe00:	9125883a 	add	r18,r18,r4
1000fe04:	1008d43a 	srli	r4,r2,16
1000fe08:	1004943a 	slli	r2,r2,16
1000fe0c:	ad7fffcc 	andi	r21,r21,65535
1000fe10:	2489883a 	add	r4,r4,r18
1000fe14:	1545883a 	add	r2,r2,r21
1000fe18:	81003836 	bltu	r16,r4,1000fefc <__divdf3+0x728>
1000fe1c:	81003626 	beq	r16,r4,1000fef8 <__divdf3+0x724>
1000fe20:	a5000054 	ori	r20,r20,1
1000fe24:	1880ffc4 	addi	r2,r3,1023
1000fe28:	00bf2e0e 	bge	zero,r2,1000fae4 <__alt_data_end+0xf800fae4>
1000fe2c:	a10001cc 	andi	r4,r20,7
1000fe30:	20000726 	beq	r4,zero,1000fe50 <__divdf3+0x67c>
1000fe34:	a10003cc 	andi	r4,r20,15
1000fe38:	01400104 	movi	r5,4
1000fe3c:	21400426 	beq	r4,r5,1000fe50 <__divdf3+0x67c>
1000fe40:	a149883a 	add	r4,r20,r5
1000fe44:	2529803a 	cmpltu	r20,r4,r20
1000fe48:	8d23883a 	add	r17,r17,r20
1000fe4c:	2029883a 	mov	r20,r4
1000fe50:	8900402c 	andhi	r4,r17,256
1000fe54:	20000426 	beq	r4,zero,1000fe68 <__divdf3+0x694>
1000fe58:	18810004 	addi	r2,r3,1024
1000fe5c:	00ffc034 	movhi	r3,65280
1000fe60:	18ffffc4 	addi	r3,r3,-1
1000fe64:	88e2703a 	and	r17,r17,r3
1000fe68:	00c1ff84 	movi	r3,2046
1000fe6c:	18beb416 	blt	r3,r2,1000f940 <__alt_data_end+0xf800f940>
1000fe70:	a028d0fa 	srli	r20,r20,3
1000fe74:	882a977a 	slli	r21,r17,29
1000fe78:	8820927a 	slli	r16,r17,9
1000fe7c:	1081ffcc 	andi	r2,r2,2047
1000fe80:	ad2ab03a 	or	r21,r21,r20
1000fe84:	8020d33a 	srli	r16,r16,12
1000fe88:	9900004c 	andi	r4,r19,1
1000fe8c:	003eb006 	br	1000f950 <__alt_data_end+0xf800f950>
1000fe90:	8080022c 	andhi	r2,r16,8
1000fe94:	10001226 	beq	r2,zero,1000fee0 <__divdf3+0x70c>
1000fe98:	8880022c 	andhi	r2,r17,8
1000fe9c:	1000101e 	bne	r2,zero,1000fee0 <__divdf3+0x70c>
1000fea0:	00800434 	movhi	r2,16
1000fea4:	8c000234 	orhi	r16,r17,8
1000fea8:	10bfffc4 	addi	r2,r2,-1
1000feac:	b809883a 	mov	r4,r23
1000feb0:	80a0703a 	and	r16,r16,r2
1000feb4:	a02b883a 	mov	r21,r20
1000feb8:	003f0806 	br	1000fadc <__alt_data_end+0xf800fadc>
1000febc:	008000c4 	movi	r2,3
1000fec0:	3880b126 	beq	r7,r2,10010188 <__divdf3+0x9b4>
1000fec4:	00800044 	movi	r2,1
1000fec8:	38805b1e 	bne	r7,r2,10010038 <__divdf3+0x864>
1000fecc:	e009883a 	mov	r4,fp
1000fed0:	0005883a 	mov	r2,zero
1000fed4:	0021883a 	mov	r16,zero
1000fed8:	002b883a 	mov	r21,zero
1000fedc:	003e9c06 	br	1000f950 <__alt_data_end+0xf800f950>
1000fee0:	00800434 	movhi	r2,16
1000fee4:	84000234 	orhi	r16,r16,8
1000fee8:	10bfffc4 	addi	r2,r2,-1
1000feec:	b009883a 	mov	r4,r22
1000fef0:	80a0703a 	and	r16,r16,r2
1000fef4:	003ef906 	br	1000fadc <__alt_data_end+0xf800fadc>
1000fef8:	103fca26 	beq	r2,zero,1000fe24 <__alt_data_end+0xf800fe24>
1000fefc:	b421883a 	add	r16,r22,r16
1000ff00:	a17fffc4 	addi	r5,r20,-1
1000ff04:	8580422e 	bgeu	r16,r22,10010010 <__divdf3+0x83c>
1000ff08:	2829883a 	mov	r20,r5
1000ff0c:	813fc41e 	bne	r16,r4,1000fe20 <__alt_data_end+0xf800fe20>
1000ff10:	d9800017 	ldw	r6,0(sp)
1000ff14:	30bfc21e 	bne	r6,r2,1000fe20 <__alt_data_end+0xf800fe20>
1000ff18:	003fc206 	br	1000fe24 <__alt_data_end+0xf800fe24>
1000ff1c:	143ff604 	addi	r16,r2,-40
1000ff20:	8c20983a 	sll	r16,r17,r16
1000ff24:	002b883a 	mov	r21,zero
1000ff28:	003eb406 	br	1000f9fc <__alt_data_end+0xf800f9fc>
1000ff2c:	d9800215 	stw	r6,8(sp)
1000ff30:	d9c00515 	stw	r7,20(sp)
1000ff34:	da000415 	stw	r8,16(sp)
1000ff38:	00117680 	call	10011768 <__clzsi2>
1000ff3c:	10800804 	addi	r2,r2,32
1000ff40:	da000417 	ldw	r8,16(sp)
1000ff44:	d9c00517 	ldw	r7,20(sp)
1000ff48:	d9800217 	ldw	r6,8(sp)
1000ff4c:	003ea106 	br	1000f9d4 <__alt_data_end+0xf800f9d4>
1000ff50:	147ff604 	addi	r17,r2,-40
1000ff54:	3462983a 	sll	r17,r6,r17
1000ff58:	0029883a 	mov	r20,zero
1000ff5c:	003ec906 	br	1000fa84 <__alt_data_end+0xf800fa84>
1000ff60:	3009883a 	mov	r4,r6
1000ff64:	d9400115 	stw	r5,4(sp)
1000ff68:	d9800215 	stw	r6,8(sp)
1000ff6c:	da000415 	stw	r8,16(sp)
1000ff70:	da400315 	stw	r9,12(sp)
1000ff74:	00117680 	call	10011768 <__clzsi2>
1000ff78:	10800804 	addi	r2,r2,32
1000ff7c:	da400317 	ldw	r9,12(sp)
1000ff80:	da000417 	ldw	r8,16(sp)
1000ff84:	d9800217 	ldw	r6,8(sp)
1000ff88:	d9400117 	ldw	r5,4(sp)
1000ff8c:	003eb306 	br	1000fa5c <__alt_data_end+0xf800fa5c>
1000ff90:	d9800017 	ldw	r6,0(sp)
1000ff94:	a9ab883a 	add	r21,r21,r6
1000ff98:	a98b803a 	cmpltu	r5,r21,r6
1000ff9c:	2d8b883a 	add	r5,r5,r22
1000ffa0:	2a11883a 	add	r8,r5,r8
1000ffa4:	897fffc4 	addi	r5,r17,-1
1000ffa8:	b2000c2e 	bgeu	r22,r8,1000ffdc <__divdf3+0x808>
1000ffac:	41003f36 	bltu	r8,r4,100100ac <__divdf3+0x8d8>
1000ffb0:	22006c26 	beq	r4,r8,10010164 <__divdf3+0x990>
1000ffb4:	4109c83a 	sub	r4,r8,r4
1000ffb8:	2823883a 	mov	r17,r5
1000ffbc:	003f3b06 	br	1000fcac <__alt_data_end+0xf800fcac>
1000ffc0:	ad3ed336 	bltu	r21,r20,1000fb10 <__alt_data_end+0xf800fb10>
1000ffc4:	a804d07a 	srli	r2,r21,1
1000ffc8:	802e97fa 	slli	r23,r16,31
1000ffcc:	a82a97fa 	slli	r21,r21,31
1000ffd0:	8020d07a 	srli	r16,r16,1
1000ffd4:	b8aeb03a 	or	r23,r23,r2
1000ffd8:	003ed006 	br	1000fb1c <__alt_data_end+0xf800fb1c>
1000ffdc:	b23ff51e 	bne	r22,r8,1000ffb4 <__alt_data_end+0xf800ffb4>
1000ffe0:	d9800017 	ldw	r6,0(sp)
1000ffe4:	a9bff12e 	bgeu	r21,r6,1000ffac <__alt_data_end+0xf800ffac>
1000ffe8:	b109c83a 	sub	r4,r22,r4
1000ffec:	2823883a 	mov	r17,r5
1000fff0:	003f2e06 	br	1000fcac <__alt_data_end+0xf800fcac>
1000fff4:	2021883a 	mov	r16,r4
1000fff8:	003eff06 	br	1000fbf8 <__alt_data_end+0xf800fbf8>
1000fffc:	2023883a 	mov	r17,r4
10010000:	003ee406 	br	1000fb94 <__alt_data_end+0xf800fb94>
10010004:	a8bfe236 	bltu	r21,r2,1000ff90 <__alt_data_end+0xf800ff90>
10010008:	0009883a 	mov	r4,zero
1001000c:	003f2706 	br	1000fcac <__alt_data_end+0xf800fcac>
10010010:	81002d36 	bltu	r16,r4,100100c8 <__divdf3+0x8f4>
10010014:	24005626 	beq	r4,r16,10010170 <__divdf3+0x99c>
10010018:	2829883a 	mov	r20,r5
1001001c:	003f8006 	br	1000fe20 <__alt_data_end+0xf800fe20>
10010020:	053fffc4 	movi	r20,-1
10010024:	003f7f06 	br	1000fe24 <__alt_data_end+0xf800fe24>
10010028:	200f883a 	mov	r7,r4
1001002c:	003f3c06 	br	1000fd20 <__alt_data_end+0xf800fd20>
10010030:	1011883a 	mov	r8,r2
10010034:	003f5506 	br	1000fd8c <__alt_data_end+0xf800fd8c>
10010038:	e027883a 	mov	r19,fp
1001003c:	003f7906 	br	1000fe24 <__alt_data_end+0xf800fe24>
10010040:	010007c4 	movi	r4,31
10010044:	20c02816 	blt	r4,r3,100100e8 <__divdf3+0x914>
10010048:	00800804 	movi	r2,32
1001004c:	10c5c83a 	sub	r2,r2,r3
10010050:	888a983a 	sll	r5,r17,r2
10010054:	a0c8d83a 	srl	r4,r20,r3
10010058:	a084983a 	sll	r2,r20,r2
1001005c:	88e2d83a 	srl	r17,r17,r3
10010060:	2906b03a 	or	r3,r5,r4
10010064:	1004c03a 	cmpne	r2,r2,zero
10010068:	1886b03a 	or	r3,r3,r2
1001006c:	188001cc 	andi	r2,r3,7
10010070:	10000726 	beq	r2,zero,10010090 <__divdf3+0x8bc>
10010074:	188003cc 	andi	r2,r3,15
10010078:	01000104 	movi	r4,4
1001007c:	11000426 	beq	r2,r4,10010090 <__divdf3+0x8bc>
10010080:	1805883a 	mov	r2,r3
10010084:	10c00104 	addi	r3,r2,4
10010088:	1885803a 	cmpltu	r2,r3,r2
1001008c:	88a3883a 	add	r17,r17,r2
10010090:	8880202c 	andhi	r2,r17,128
10010094:	10002926 	beq	r2,zero,1001013c <__divdf3+0x968>
10010098:	9900004c 	andi	r4,r19,1
1001009c:	00800044 	movi	r2,1
100100a0:	0021883a 	mov	r16,zero
100100a4:	002b883a 	mov	r21,zero
100100a8:	003e2906 	br	1000f950 <__alt_data_end+0xf800f950>
100100ac:	d9800017 	ldw	r6,0(sp)
100100b0:	8c7fff84 	addi	r17,r17,-2
100100b4:	a9ab883a 	add	r21,r21,r6
100100b8:	a98b803a 	cmpltu	r5,r21,r6
100100bc:	2d8b883a 	add	r5,r5,r22
100100c0:	2a11883a 	add	r8,r5,r8
100100c4:	003ef806 	br	1000fca8 <__alt_data_end+0xf800fca8>
100100c8:	d9800017 	ldw	r6,0(sp)
100100cc:	318f883a 	add	r7,r6,r6
100100d0:	398b803a 	cmpltu	r5,r7,r6
100100d4:	2d8d883a 	add	r6,r5,r22
100100d8:	81a1883a 	add	r16,r16,r6
100100dc:	a17fff84 	addi	r5,r20,-2
100100e0:	d9c00015 	stw	r7,0(sp)
100100e4:	003f8806 	br	1000ff08 <__alt_data_end+0xf800ff08>
100100e8:	013ff844 	movi	r4,-31
100100ec:	2085c83a 	sub	r2,r4,r2
100100f0:	8888d83a 	srl	r4,r17,r2
100100f4:	00800804 	movi	r2,32
100100f8:	18802126 	beq	r3,r2,10010180 <__divdf3+0x9ac>
100100fc:	04001004 	movi	r16,64
10010100:	80c7c83a 	sub	r3,r16,r3
10010104:	88e0983a 	sll	r16,r17,r3
10010108:	8504b03a 	or	r2,r16,r20
1001010c:	1004c03a 	cmpne	r2,r2,zero
10010110:	2084b03a 	or	r2,r4,r2
10010114:	144001cc 	andi	r17,r2,7
10010118:	88000d1e 	bne	r17,zero,10010150 <__divdf3+0x97c>
1001011c:	0021883a 	mov	r16,zero
10010120:	102ad0fa 	srli	r21,r2,3
10010124:	9900004c 	andi	r4,r19,1
10010128:	0005883a 	mov	r2,zero
1001012c:	ac6ab03a 	or	r21,r21,r17
10010130:	003e0706 	br	1000f950 <__alt_data_end+0xf800f950>
10010134:	1007883a 	mov	r3,r2
10010138:	0023883a 	mov	r17,zero
1001013c:	8820927a 	slli	r16,r17,9
10010140:	1805883a 	mov	r2,r3
10010144:	8822977a 	slli	r17,r17,29
10010148:	8020d33a 	srli	r16,r16,12
1001014c:	003ff406 	br	10010120 <__alt_data_end+0xf8010120>
10010150:	10c003cc 	andi	r3,r2,15
10010154:	01000104 	movi	r4,4
10010158:	193ff626 	beq	r3,r4,10010134 <__alt_data_end+0xf8010134>
1001015c:	0023883a 	mov	r17,zero
10010160:	003fc806 	br	10010084 <__alt_data_end+0xf8010084>
10010164:	a8bfd136 	bltu	r21,r2,100100ac <__alt_data_end+0xf80100ac>
10010168:	2823883a 	mov	r17,r5
1001016c:	003fa606 	br	10010008 <__alt_data_end+0xf8010008>
10010170:	d9800017 	ldw	r6,0(sp)
10010174:	30bfd436 	bltu	r6,r2,100100c8 <__alt_data_end+0xf80100c8>
10010178:	2829883a 	mov	r20,r5
1001017c:	003f6406 	br	1000ff10 <__alt_data_end+0xf800ff10>
10010180:	0021883a 	mov	r16,zero
10010184:	003fe006 	br	10010108 <__alt_data_end+0xf8010108>
10010188:	00800434 	movhi	r2,16
1001018c:	8c000234 	orhi	r16,r17,8
10010190:	10bfffc4 	addi	r2,r2,-1
10010194:	e009883a 	mov	r4,fp
10010198:	80a0703a 	and	r16,r16,r2
1001019c:	a02b883a 	mov	r21,r20
100101a0:	003e4e06 	br	1000fadc <__alt_data_end+0xf800fadc>

100101a4 <__eqdf2>:
100101a4:	2804d53a 	srli	r2,r5,20
100101a8:	3806d53a 	srli	r3,r7,20
100101ac:	02000434 	movhi	r8,16
100101b0:	423fffc4 	addi	r8,r8,-1
100101b4:	1081ffcc 	andi	r2,r2,2047
100101b8:	0281ffc4 	movi	r10,2047
100101bc:	2a12703a 	and	r9,r5,r8
100101c0:	18c1ffcc 	andi	r3,r3,2047
100101c4:	3a10703a 	and	r8,r7,r8
100101c8:	280ad7fa 	srli	r5,r5,31
100101cc:	380ed7fa 	srli	r7,r7,31
100101d0:	12801026 	beq	r2,r10,10010214 <__eqdf2+0x70>
100101d4:	0281ffc4 	movi	r10,2047
100101d8:	1a800a26 	beq	r3,r10,10010204 <__eqdf2+0x60>
100101dc:	10c00226 	beq	r2,r3,100101e8 <__eqdf2+0x44>
100101e0:	00800044 	movi	r2,1
100101e4:	f800283a 	ret
100101e8:	4a3ffd1e 	bne	r9,r8,100101e0 <__alt_data_end+0xf80101e0>
100101ec:	21bffc1e 	bne	r4,r6,100101e0 <__alt_data_end+0xf80101e0>
100101f0:	29c00c26 	beq	r5,r7,10010224 <__eqdf2+0x80>
100101f4:	103ffa1e 	bne	r2,zero,100101e0 <__alt_data_end+0xf80101e0>
100101f8:	2244b03a 	or	r2,r4,r9
100101fc:	1004c03a 	cmpne	r2,r2,zero
10010200:	f800283a 	ret
10010204:	3214b03a 	or	r10,r6,r8
10010208:	503ff426 	beq	r10,zero,100101dc <__alt_data_end+0xf80101dc>
1001020c:	00800044 	movi	r2,1
10010210:	f800283a 	ret
10010214:	2254b03a 	or	r10,r4,r9
10010218:	503fee26 	beq	r10,zero,100101d4 <__alt_data_end+0xf80101d4>
1001021c:	00800044 	movi	r2,1
10010220:	f800283a 	ret
10010224:	0005883a 	mov	r2,zero
10010228:	f800283a 	ret

1001022c <__gedf2>:
1001022c:	2804d53a 	srli	r2,r5,20
10010230:	3806d53a 	srli	r3,r7,20
10010234:	02000434 	movhi	r8,16
10010238:	423fffc4 	addi	r8,r8,-1
1001023c:	1081ffcc 	andi	r2,r2,2047
10010240:	0241ffc4 	movi	r9,2047
10010244:	2a14703a 	and	r10,r5,r8
10010248:	18c1ffcc 	andi	r3,r3,2047
1001024c:	3a10703a 	and	r8,r7,r8
10010250:	280ad7fa 	srli	r5,r5,31
10010254:	380ed7fa 	srli	r7,r7,31
10010258:	12401d26 	beq	r2,r9,100102d0 <__gedf2+0xa4>
1001025c:	0241ffc4 	movi	r9,2047
10010260:	1a401226 	beq	r3,r9,100102ac <__gedf2+0x80>
10010264:	1000081e 	bne	r2,zero,10010288 <__gedf2+0x5c>
10010268:	2296b03a 	or	r11,r4,r10
1001026c:	5813003a 	cmpeq	r9,r11,zero
10010270:	1800091e 	bne	r3,zero,10010298 <__gedf2+0x6c>
10010274:	3218b03a 	or	r12,r6,r8
10010278:	6000071e 	bne	r12,zero,10010298 <__gedf2+0x6c>
1001027c:	0005883a 	mov	r2,zero
10010280:	5800101e 	bne	r11,zero,100102c4 <__gedf2+0x98>
10010284:	f800283a 	ret
10010288:	18000c1e 	bne	r3,zero,100102bc <__gedf2+0x90>
1001028c:	3212b03a 	or	r9,r6,r8
10010290:	48000c26 	beq	r9,zero,100102c4 <__gedf2+0x98>
10010294:	0013883a 	mov	r9,zero
10010298:	39c03fcc 	andi	r7,r7,255
1001029c:	48000826 	beq	r9,zero,100102c0 <__gedf2+0x94>
100102a0:	38000926 	beq	r7,zero,100102c8 <__gedf2+0x9c>
100102a4:	00800044 	movi	r2,1
100102a8:	f800283a 	ret
100102ac:	3212b03a 	or	r9,r6,r8
100102b0:	483fec26 	beq	r9,zero,10010264 <__alt_data_end+0xf8010264>
100102b4:	00bfff84 	movi	r2,-2
100102b8:	f800283a 	ret
100102bc:	39c03fcc 	andi	r7,r7,255
100102c0:	29c00626 	beq	r5,r7,100102dc <__gedf2+0xb0>
100102c4:	283ff726 	beq	r5,zero,100102a4 <__alt_data_end+0xf80102a4>
100102c8:	00bfffc4 	movi	r2,-1
100102cc:	f800283a 	ret
100102d0:	2292b03a 	or	r9,r4,r10
100102d4:	483fe126 	beq	r9,zero,1001025c <__alt_data_end+0xf801025c>
100102d8:	003ff606 	br	100102b4 <__alt_data_end+0xf80102b4>
100102dc:	18bff916 	blt	r3,r2,100102c4 <__alt_data_end+0xf80102c4>
100102e0:	10c00316 	blt	r2,r3,100102f0 <__gedf2+0xc4>
100102e4:	42bff736 	bltu	r8,r10,100102c4 <__alt_data_end+0xf80102c4>
100102e8:	52000326 	beq	r10,r8,100102f8 <__gedf2+0xcc>
100102ec:	5200042e 	bgeu	r10,r8,10010300 <__gedf2+0xd4>
100102f0:	283fec1e 	bne	r5,zero,100102a4 <__alt_data_end+0xf80102a4>
100102f4:	003ff406 	br	100102c8 <__alt_data_end+0xf80102c8>
100102f8:	313ff236 	bltu	r6,r4,100102c4 <__alt_data_end+0xf80102c4>
100102fc:	21bffc36 	bltu	r4,r6,100102f0 <__alt_data_end+0xf80102f0>
10010300:	0005883a 	mov	r2,zero
10010304:	f800283a 	ret

10010308 <__ledf2>:
10010308:	2804d53a 	srli	r2,r5,20
1001030c:	3810d53a 	srli	r8,r7,20
10010310:	00c00434 	movhi	r3,16
10010314:	18ffffc4 	addi	r3,r3,-1
10010318:	1081ffcc 	andi	r2,r2,2047
1001031c:	0241ffc4 	movi	r9,2047
10010320:	28d4703a 	and	r10,r5,r3
10010324:	4201ffcc 	andi	r8,r8,2047
10010328:	38c6703a 	and	r3,r7,r3
1001032c:	280ad7fa 	srli	r5,r5,31
10010330:	380ed7fa 	srli	r7,r7,31
10010334:	12401f26 	beq	r2,r9,100103b4 <__ledf2+0xac>
10010338:	0241ffc4 	movi	r9,2047
1001033c:	42401426 	beq	r8,r9,10010390 <__ledf2+0x88>
10010340:	1000091e 	bne	r2,zero,10010368 <__ledf2+0x60>
10010344:	2296b03a 	or	r11,r4,r10
10010348:	5813003a 	cmpeq	r9,r11,zero
1001034c:	29403fcc 	andi	r5,r5,255
10010350:	40000a1e 	bne	r8,zero,1001037c <__ledf2+0x74>
10010354:	30d8b03a 	or	r12,r6,r3
10010358:	6000081e 	bne	r12,zero,1001037c <__ledf2+0x74>
1001035c:	0005883a 	mov	r2,zero
10010360:	5800111e 	bne	r11,zero,100103a8 <__ledf2+0xa0>
10010364:	f800283a 	ret
10010368:	29403fcc 	andi	r5,r5,255
1001036c:	40000c1e 	bne	r8,zero,100103a0 <__ledf2+0x98>
10010370:	30d2b03a 	or	r9,r6,r3
10010374:	48000c26 	beq	r9,zero,100103a8 <__ledf2+0xa0>
10010378:	0013883a 	mov	r9,zero
1001037c:	39c03fcc 	andi	r7,r7,255
10010380:	48000826 	beq	r9,zero,100103a4 <__ledf2+0x9c>
10010384:	38001126 	beq	r7,zero,100103cc <__ledf2+0xc4>
10010388:	00800044 	movi	r2,1
1001038c:	f800283a 	ret
10010390:	30d2b03a 	or	r9,r6,r3
10010394:	483fea26 	beq	r9,zero,10010340 <__alt_data_end+0xf8010340>
10010398:	00800084 	movi	r2,2
1001039c:	f800283a 	ret
100103a0:	39c03fcc 	andi	r7,r7,255
100103a4:	39400726 	beq	r7,r5,100103c4 <__ledf2+0xbc>
100103a8:	2800081e 	bne	r5,zero,100103cc <__ledf2+0xc4>
100103ac:	00800044 	movi	r2,1
100103b0:	f800283a 	ret
100103b4:	2292b03a 	or	r9,r4,r10
100103b8:	483fdf26 	beq	r9,zero,10010338 <__alt_data_end+0xf8010338>
100103bc:	00800084 	movi	r2,2
100103c0:	f800283a 	ret
100103c4:	4080030e 	bge	r8,r2,100103d4 <__ledf2+0xcc>
100103c8:	383fef26 	beq	r7,zero,10010388 <__alt_data_end+0xf8010388>
100103cc:	00bfffc4 	movi	r2,-1
100103d0:	f800283a 	ret
100103d4:	123feb16 	blt	r2,r8,10010384 <__alt_data_end+0xf8010384>
100103d8:	1abff336 	bltu	r3,r10,100103a8 <__alt_data_end+0xf80103a8>
100103dc:	50c00326 	beq	r10,r3,100103ec <__ledf2+0xe4>
100103e0:	50c0042e 	bgeu	r10,r3,100103f4 <__ledf2+0xec>
100103e4:	283fe81e 	bne	r5,zero,10010388 <__alt_data_end+0xf8010388>
100103e8:	003ff806 	br	100103cc <__alt_data_end+0xf80103cc>
100103ec:	313fee36 	bltu	r6,r4,100103a8 <__alt_data_end+0xf80103a8>
100103f0:	21bffc36 	bltu	r4,r6,100103e4 <__alt_data_end+0xf80103e4>
100103f4:	0005883a 	mov	r2,zero
100103f8:	f800283a 	ret

100103fc <__muldf3>:
100103fc:	deffee04 	addi	sp,sp,-72
10010400:	dd000c15 	stw	r20,48(sp)
10010404:	2828d53a 	srli	r20,r5,20
10010408:	ddc00f15 	stw	r23,60(sp)
1001040c:	282ed7fa 	srli	r23,r5,31
10010410:	dc000815 	stw	r16,32(sp)
10010414:	04000434 	movhi	r16,16
10010418:	dcc00b15 	stw	r19,44(sp)
1001041c:	843fffc4 	addi	r16,r16,-1
10010420:	dfc01115 	stw	ra,68(sp)
10010424:	df001015 	stw	fp,64(sp)
10010428:	dd800e15 	stw	r22,56(sp)
1001042c:	dd400d15 	stw	r21,52(sp)
10010430:	dc800a15 	stw	r18,40(sp)
10010434:	dc400915 	stw	r17,36(sp)
10010438:	a501ffcc 	andi	r20,r20,2047
1001043c:	2c20703a 	and	r16,r5,r16
10010440:	b827883a 	mov	r19,r23
10010444:	ba403fcc 	andi	r9,r23,255
10010448:	a0006026 	beq	r20,zero,100105cc <__muldf3+0x1d0>
1001044c:	0081ffc4 	movi	r2,2047
10010450:	202d883a 	mov	r22,r4
10010454:	a0803626 	beq	r20,r2,10010530 <__muldf3+0x134>
10010458:	84000434 	orhi	r16,r16,16
1001045c:	200ad77a 	srli	r5,r4,29
10010460:	800490fa 	slli	r2,r16,3
10010464:	202c90fa 	slli	r22,r4,3
10010468:	a53f0044 	addi	r20,r20,-1023
1001046c:	28a0b03a 	or	r16,r5,r2
10010470:	002b883a 	mov	r21,zero
10010474:	000b883a 	mov	r5,zero
10010478:	3804d53a 	srli	r2,r7,20
1001047c:	3838d7fa 	srli	fp,r7,31
10010480:	04400434 	movhi	r17,16
10010484:	8c7fffc4 	addi	r17,r17,-1
10010488:	1081ffcc 	andi	r2,r2,2047
1001048c:	3025883a 	mov	r18,r6
10010490:	3c62703a 	and	r17,r7,r17
10010494:	e2803fcc 	andi	r10,fp,255
10010498:	10006d26 	beq	r2,zero,10010650 <__muldf3+0x254>
1001049c:	00c1ffc4 	movi	r3,2047
100104a0:	10c06526 	beq	r2,r3,10010638 <__muldf3+0x23c>
100104a4:	8c400434 	orhi	r17,r17,16
100104a8:	300ed77a 	srli	r7,r6,29
100104ac:	880690fa 	slli	r3,r17,3
100104b0:	302490fa 	slli	r18,r6,3
100104b4:	10bf0044 	addi	r2,r2,-1023
100104b8:	38e2b03a 	or	r17,r7,r3
100104bc:	000f883a 	mov	r7,zero
100104c0:	a087883a 	add	r3,r20,r2
100104c4:	010003c4 	movi	r4,15
100104c8:	3d44b03a 	or	r2,r7,r21
100104cc:	e5ccf03a 	xor	r6,fp,r23
100104d0:	1a000044 	addi	r8,r3,1
100104d4:	20809b36 	bltu	r4,r2,10010744 <__muldf3+0x348>
100104d8:	100490ba 	slli	r2,r2,2
100104dc:	01040074 	movhi	r4,4097
100104e0:	21013c04 	addi	r4,r4,1264
100104e4:	1105883a 	add	r2,r2,r4
100104e8:	10800017 	ldw	r2,0(r2)
100104ec:	1000683a 	jmp	r2
100104f0:	10010744 	addi	zero,r2,1053
100104f4:	10010550 	cmplti	zero,r2,1045
100104f8:	10010550 	cmplti	zero,r2,1045
100104fc:	1001054c 	andi	zero,r2,1045
10010500:	10010720 	cmpeqi	zero,r2,1052
10010504:	10010720 	cmpeqi	zero,r2,1052
10010508:	10010708 	cmpgei	zero,r2,1052
1001050c:	1001054c 	andi	zero,r2,1045
10010510:	10010720 	cmpeqi	zero,r2,1052
10010514:	10010708 	cmpgei	zero,r2,1052
10010518:	10010720 	cmpeqi	zero,r2,1052
1001051c:	1001054c 	andi	zero,r2,1045
10010520:	10010730 	cmpltui	zero,r2,1052
10010524:	10010730 	cmpltui	zero,r2,1052
10010528:	10010730 	cmpltui	zero,r2,1052
1001052c:	10010a90 	cmplti	zero,r2,1066
10010530:	2404b03a 	or	r2,r4,r16
10010534:	1000711e 	bne	r2,zero,100106fc <__muldf3+0x300>
10010538:	05400204 	movi	r21,8
1001053c:	0021883a 	mov	r16,zero
10010540:	002d883a 	mov	r22,zero
10010544:	01400084 	movi	r5,2
10010548:	003fcb06 	br	10010478 <__alt_data_end+0xf8010478>
1001054c:	500d883a 	mov	r6,r10
10010550:	00800084 	movi	r2,2
10010554:	38805926 	beq	r7,r2,100106bc <__muldf3+0x2c0>
10010558:	008000c4 	movi	r2,3
1001055c:	3881bb26 	beq	r7,r2,10010c4c <__muldf3+0x850>
10010560:	00800044 	movi	r2,1
10010564:	3881961e 	bne	r7,r2,10010bc0 <__muldf3+0x7c4>
10010568:	3027883a 	mov	r19,r6
1001056c:	0005883a 	mov	r2,zero
10010570:	0021883a 	mov	r16,zero
10010574:	002d883a 	mov	r22,zero
10010578:	1004953a 	slli	r2,r2,20
1001057c:	98c03fcc 	andi	r3,r19,255
10010580:	04400434 	movhi	r17,16
10010584:	8c7fffc4 	addi	r17,r17,-1
10010588:	180697fa 	slli	r3,r3,31
1001058c:	8460703a 	and	r16,r16,r17
10010590:	80a0b03a 	or	r16,r16,r2
10010594:	80c6b03a 	or	r3,r16,r3
10010598:	b005883a 	mov	r2,r22
1001059c:	dfc01117 	ldw	ra,68(sp)
100105a0:	df001017 	ldw	fp,64(sp)
100105a4:	ddc00f17 	ldw	r23,60(sp)
100105a8:	dd800e17 	ldw	r22,56(sp)
100105ac:	dd400d17 	ldw	r21,52(sp)
100105b0:	dd000c17 	ldw	r20,48(sp)
100105b4:	dcc00b17 	ldw	r19,44(sp)
100105b8:	dc800a17 	ldw	r18,40(sp)
100105bc:	dc400917 	ldw	r17,36(sp)
100105c0:	dc000817 	ldw	r16,32(sp)
100105c4:	dec01204 	addi	sp,sp,72
100105c8:	f800283a 	ret
100105cc:	2404b03a 	or	r2,r4,r16
100105d0:	202b883a 	mov	r21,r4
100105d4:	10004426 	beq	r2,zero,100106e8 <__muldf3+0x2ec>
100105d8:	80015126 	beq	r16,zero,10010b20 <__muldf3+0x724>
100105dc:	8009883a 	mov	r4,r16
100105e0:	d9800715 	stw	r6,28(sp)
100105e4:	d9c00215 	stw	r7,8(sp)
100105e8:	da400415 	stw	r9,16(sp)
100105ec:	00117680 	call	10011768 <__clzsi2>
100105f0:	d9800717 	ldw	r6,28(sp)
100105f4:	d9c00217 	ldw	r7,8(sp)
100105f8:	da400417 	ldw	r9,16(sp)
100105fc:	113ffd44 	addi	r4,r2,-11
10010600:	00c00704 	movi	r3,28
10010604:	19014216 	blt	r3,r4,10010b10 <__muldf3+0x714>
10010608:	00c00744 	movi	r3,29
1001060c:	15bffe04 	addi	r22,r2,-8
10010610:	1907c83a 	sub	r3,r3,r4
10010614:	85a0983a 	sll	r16,r16,r22
10010618:	a8c6d83a 	srl	r3,r21,r3
1001061c:	adac983a 	sll	r22,r21,r22
10010620:	1c20b03a 	or	r16,r3,r16
10010624:	1080fcc4 	addi	r2,r2,1011
10010628:	00a9c83a 	sub	r20,zero,r2
1001062c:	002b883a 	mov	r21,zero
10010630:	000b883a 	mov	r5,zero
10010634:	003f9006 	br	10010478 <__alt_data_end+0xf8010478>
10010638:	3446b03a 	or	r3,r6,r17
1001063c:	1800281e 	bne	r3,zero,100106e0 <__muldf3+0x2e4>
10010640:	0023883a 	mov	r17,zero
10010644:	0025883a 	mov	r18,zero
10010648:	01c00084 	movi	r7,2
1001064c:	003f9c06 	br	100104c0 <__alt_data_end+0xf80104c0>
10010650:	3446b03a 	or	r3,r6,r17
10010654:	18001e26 	beq	r3,zero,100106d0 <__muldf3+0x2d4>
10010658:	88012126 	beq	r17,zero,10010ae0 <__muldf3+0x6e4>
1001065c:	8809883a 	mov	r4,r17
10010660:	d9400215 	stw	r5,8(sp)
10010664:	d9800715 	stw	r6,28(sp)
10010668:	da400415 	stw	r9,16(sp)
1001066c:	da800315 	stw	r10,12(sp)
10010670:	00117680 	call	10011768 <__clzsi2>
10010674:	d9400217 	ldw	r5,8(sp)
10010678:	d9800717 	ldw	r6,28(sp)
1001067c:	da400417 	ldw	r9,16(sp)
10010680:	da800317 	ldw	r10,12(sp)
10010684:	113ffd44 	addi	r4,r2,-11
10010688:	00c00704 	movi	r3,28
1001068c:	19011016 	blt	r3,r4,10010ad0 <__muldf3+0x6d4>
10010690:	00c00744 	movi	r3,29
10010694:	14bffe04 	addi	r18,r2,-8
10010698:	1907c83a 	sub	r3,r3,r4
1001069c:	8ca2983a 	sll	r17,r17,r18
100106a0:	30c6d83a 	srl	r3,r6,r3
100106a4:	34a4983a 	sll	r18,r6,r18
100106a8:	1c62b03a 	or	r17,r3,r17
100106ac:	1080fcc4 	addi	r2,r2,1011
100106b0:	0085c83a 	sub	r2,zero,r2
100106b4:	000f883a 	mov	r7,zero
100106b8:	003f8106 	br	100104c0 <__alt_data_end+0xf80104c0>
100106bc:	3027883a 	mov	r19,r6
100106c0:	0081ffc4 	movi	r2,2047
100106c4:	0021883a 	mov	r16,zero
100106c8:	002d883a 	mov	r22,zero
100106cc:	003faa06 	br	10010578 <__alt_data_end+0xf8010578>
100106d0:	0023883a 	mov	r17,zero
100106d4:	0025883a 	mov	r18,zero
100106d8:	01c00044 	movi	r7,1
100106dc:	003f7806 	br	100104c0 <__alt_data_end+0xf80104c0>
100106e0:	01c000c4 	movi	r7,3
100106e4:	003f7606 	br	100104c0 <__alt_data_end+0xf80104c0>
100106e8:	05400104 	movi	r21,4
100106ec:	0021883a 	mov	r16,zero
100106f0:	002d883a 	mov	r22,zero
100106f4:	01400044 	movi	r5,1
100106f8:	003f5f06 	br	10010478 <__alt_data_end+0xf8010478>
100106fc:	05400304 	movi	r21,12
10010700:	014000c4 	movi	r5,3
10010704:	003f5c06 	br	10010478 <__alt_data_end+0xf8010478>
10010708:	04000434 	movhi	r16,16
1001070c:	0027883a 	mov	r19,zero
10010710:	843fffc4 	addi	r16,r16,-1
10010714:	05bfffc4 	movi	r22,-1
10010718:	0081ffc4 	movi	r2,2047
1001071c:	003f9606 	br	10010578 <__alt_data_end+0xf8010578>
10010720:	8023883a 	mov	r17,r16
10010724:	b025883a 	mov	r18,r22
10010728:	280f883a 	mov	r7,r5
1001072c:	003f8806 	br	10010550 <__alt_data_end+0xf8010550>
10010730:	8023883a 	mov	r17,r16
10010734:	b025883a 	mov	r18,r22
10010738:	480d883a 	mov	r6,r9
1001073c:	280f883a 	mov	r7,r5
10010740:	003f8306 	br	10010550 <__alt_data_end+0xf8010550>
10010744:	b026d43a 	srli	r19,r22,16
10010748:	902ed43a 	srli	r23,r18,16
1001074c:	b5bfffcc 	andi	r22,r22,65535
10010750:	94bfffcc 	andi	r18,r18,65535
10010754:	b00b883a 	mov	r5,r22
10010758:	9009883a 	mov	r4,r18
1001075c:	d8c00515 	stw	r3,20(sp)
10010760:	d9800715 	stw	r6,28(sp)
10010764:	da000615 	stw	r8,24(sp)
10010768:	0000fc80 	call	10000fc8 <__mulsi3>
1001076c:	980b883a 	mov	r5,r19
10010770:	9009883a 	mov	r4,r18
10010774:	1029883a 	mov	r20,r2
10010778:	0000fc80 	call	10000fc8 <__mulsi3>
1001077c:	b80b883a 	mov	r5,r23
10010780:	9809883a 	mov	r4,r19
10010784:	102b883a 	mov	r21,r2
10010788:	0000fc80 	call	10000fc8 <__mulsi3>
1001078c:	b809883a 	mov	r4,r23
10010790:	b00b883a 	mov	r5,r22
10010794:	1039883a 	mov	fp,r2
10010798:	0000fc80 	call	10000fc8 <__mulsi3>
1001079c:	a008d43a 	srli	r4,r20,16
100107a0:	1545883a 	add	r2,r2,r21
100107a4:	d8c00517 	ldw	r3,20(sp)
100107a8:	2085883a 	add	r2,r4,r2
100107ac:	d9800717 	ldw	r6,28(sp)
100107b0:	da000617 	ldw	r8,24(sp)
100107b4:	1540022e 	bgeu	r2,r21,100107c0 <__muldf3+0x3c4>
100107b8:	01000074 	movhi	r4,1
100107bc:	e139883a 	add	fp,fp,r4
100107c0:	100e943a 	slli	r7,r2,16
100107c4:	1004d43a 	srli	r2,r2,16
100107c8:	882ad43a 	srli	r21,r17,16
100107cc:	a53fffcc 	andi	r20,r20,65535
100107d0:	8c7fffcc 	andi	r17,r17,65535
100107d4:	3d29883a 	add	r20,r7,r20
100107d8:	b00b883a 	mov	r5,r22
100107dc:	8809883a 	mov	r4,r17
100107e0:	d8c00515 	stw	r3,20(sp)
100107e4:	d9800715 	stw	r6,28(sp)
100107e8:	da000615 	stw	r8,24(sp)
100107ec:	dd000115 	stw	r20,4(sp)
100107f0:	d8800015 	stw	r2,0(sp)
100107f4:	0000fc80 	call	10000fc8 <__mulsi3>
100107f8:	980b883a 	mov	r5,r19
100107fc:	8809883a 	mov	r4,r17
10010800:	d8800215 	stw	r2,8(sp)
10010804:	0000fc80 	call	10000fc8 <__mulsi3>
10010808:	9809883a 	mov	r4,r19
1001080c:	a80b883a 	mov	r5,r21
10010810:	1029883a 	mov	r20,r2
10010814:	0000fc80 	call	10000fc8 <__mulsi3>
10010818:	b00b883a 	mov	r5,r22
1001081c:	a809883a 	mov	r4,r21
10010820:	d8800415 	stw	r2,16(sp)
10010824:	0000fc80 	call	10000fc8 <__mulsi3>
10010828:	d9c00217 	ldw	r7,8(sp)
1001082c:	1505883a 	add	r2,r2,r20
10010830:	d8c00517 	ldw	r3,20(sp)
10010834:	3826d43a 	srli	r19,r7,16
10010838:	d9800717 	ldw	r6,28(sp)
1001083c:	da000617 	ldw	r8,24(sp)
10010840:	9885883a 	add	r2,r19,r2
10010844:	da400417 	ldw	r9,16(sp)
10010848:	1500022e 	bgeu	r2,r20,10010854 <__muldf3+0x458>
1001084c:	01000074 	movhi	r4,1
10010850:	4913883a 	add	r9,r9,r4
10010854:	1028d43a 	srli	r20,r2,16
10010858:	1004943a 	slli	r2,r2,16
1001085c:	802cd43a 	srli	r22,r16,16
10010860:	843fffcc 	andi	r16,r16,65535
10010864:	3cffffcc 	andi	r19,r7,65535
10010868:	9009883a 	mov	r4,r18
1001086c:	800b883a 	mov	r5,r16
10010870:	a269883a 	add	r20,r20,r9
10010874:	d8c00515 	stw	r3,20(sp)
10010878:	d9800715 	stw	r6,28(sp)
1001087c:	da000615 	stw	r8,24(sp)
10010880:	14e7883a 	add	r19,r2,r19
10010884:	0000fc80 	call	10000fc8 <__mulsi3>
10010888:	9009883a 	mov	r4,r18
1001088c:	b00b883a 	mov	r5,r22
10010890:	d8800315 	stw	r2,12(sp)
10010894:	0000fc80 	call	10000fc8 <__mulsi3>
10010898:	b809883a 	mov	r4,r23
1001089c:	b00b883a 	mov	r5,r22
100108a0:	d8800215 	stw	r2,8(sp)
100108a4:	0000fc80 	call	10000fc8 <__mulsi3>
100108a8:	b80b883a 	mov	r5,r23
100108ac:	8009883a 	mov	r4,r16
100108b0:	d8800415 	stw	r2,16(sp)
100108b4:	0000fc80 	call	10000fc8 <__mulsi3>
100108b8:	da800317 	ldw	r10,12(sp)
100108bc:	d9c00217 	ldw	r7,8(sp)
100108c0:	d9000017 	ldw	r4,0(sp)
100108c4:	502ed43a 	srli	r23,r10,16
100108c8:	11c5883a 	add	r2,r2,r7
100108cc:	24e5883a 	add	r18,r4,r19
100108d0:	b885883a 	add	r2,r23,r2
100108d4:	d8c00517 	ldw	r3,20(sp)
100108d8:	d9800717 	ldw	r6,28(sp)
100108dc:	da000617 	ldw	r8,24(sp)
100108e0:	da400417 	ldw	r9,16(sp)
100108e4:	11c0022e 	bgeu	r2,r7,100108f0 <__muldf3+0x4f4>
100108e8:	01000074 	movhi	r4,1
100108ec:	4913883a 	add	r9,r9,r4
100108f0:	100ed43a 	srli	r7,r2,16
100108f4:	1004943a 	slli	r2,r2,16
100108f8:	55ffffcc 	andi	r23,r10,65535
100108fc:	3a53883a 	add	r9,r7,r9
10010900:	8809883a 	mov	r4,r17
10010904:	800b883a 	mov	r5,r16
10010908:	d8c00515 	stw	r3,20(sp)
1001090c:	d9800715 	stw	r6,28(sp)
10010910:	da000615 	stw	r8,24(sp)
10010914:	da400415 	stw	r9,16(sp)
10010918:	15ef883a 	add	r23,r2,r23
1001091c:	0000fc80 	call	10000fc8 <__mulsi3>
10010920:	8809883a 	mov	r4,r17
10010924:	b00b883a 	mov	r5,r22
10010928:	d8800215 	stw	r2,8(sp)
1001092c:	0000fc80 	call	10000fc8 <__mulsi3>
10010930:	b00b883a 	mov	r5,r22
10010934:	a809883a 	mov	r4,r21
10010938:	d8800315 	stw	r2,12(sp)
1001093c:	0000fc80 	call	10000fc8 <__mulsi3>
10010940:	8009883a 	mov	r4,r16
10010944:	a80b883a 	mov	r5,r21
10010948:	1023883a 	mov	r17,r2
1001094c:	0000fc80 	call	10000fc8 <__mulsi3>
10010950:	d9c00217 	ldw	r7,8(sp)
10010954:	da800317 	ldw	r10,12(sp)
10010958:	d8c00517 	ldw	r3,20(sp)
1001095c:	3808d43a 	srli	r4,r7,16
10010960:	1285883a 	add	r2,r2,r10
10010964:	d9800717 	ldw	r6,28(sp)
10010968:	2085883a 	add	r2,r4,r2
1001096c:	da000617 	ldw	r8,24(sp)
10010970:	da400417 	ldw	r9,16(sp)
10010974:	1280022e 	bgeu	r2,r10,10010980 <__muldf3+0x584>
10010978:	01000074 	movhi	r4,1
1001097c:	8923883a 	add	r17,r17,r4
10010980:	1008943a 	slli	r4,r2,16
10010984:	39ffffcc 	andi	r7,r7,65535
10010988:	e4b9883a 	add	fp,fp,r18
1001098c:	21cf883a 	add	r7,r4,r7
10010990:	e4e7803a 	cmpltu	r19,fp,r19
10010994:	3d0f883a 	add	r7,r7,r20
10010998:	bf39883a 	add	fp,r23,fp
1001099c:	99c9883a 	add	r4,r19,r7
100109a0:	e5ef803a 	cmpltu	r23,fp,r23
100109a4:	490b883a 	add	r5,r9,r4
100109a8:	1004d43a 	srli	r2,r2,16
100109ac:	b965883a 	add	r18,r23,r5
100109b0:	24c9803a 	cmpltu	r4,r4,r19
100109b4:	3d29803a 	cmpltu	r20,r7,r20
100109b8:	a128b03a 	or	r20,r20,r4
100109bc:	95ef803a 	cmpltu	r23,r18,r23
100109c0:	2a53803a 	cmpltu	r9,r5,r9
100109c4:	a0a9883a 	add	r20,r20,r2
100109c8:	4deeb03a 	or	r23,r9,r23
100109cc:	a5ef883a 	add	r23,r20,r23
100109d0:	bc63883a 	add	r17,r23,r17
100109d4:	e004927a 	slli	r2,fp,9
100109d8:	d9000117 	ldw	r4,4(sp)
100109dc:	882e927a 	slli	r23,r17,9
100109e0:	9022d5fa 	srli	r17,r18,23
100109e4:	e038d5fa 	srli	fp,fp,23
100109e8:	1104b03a 	or	r2,r2,r4
100109ec:	9024927a 	slli	r18,r18,9
100109f0:	1004c03a 	cmpne	r2,r2,zero
100109f4:	bc62b03a 	or	r17,r23,r17
100109f8:	1738b03a 	or	fp,r2,fp
100109fc:	8880402c 	andhi	r2,r17,256
10010a00:	e4a4b03a 	or	r18,fp,r18
10010a04:	10000726 	beq	r2,zero,10010a24 <__muldf3+0x628>
10010a08:	9006d07a 	srli	r3,r18,1
10010a0c:	880497fa 	slli	r2,r17,31
10010a10:	9480004c 	andi	r18,r18,1
10010a14:	8822d07a 	srli	r17,r17,1
10010a18:	1ca4b03a 	or	r18,r3,r18
10010a1c:	14a4b03a 	or	r18,r2,r18
10010a20:	4007883a 	mov	r3,r8
10010a24:	1880ffc4 	addi	r2,r3,1023
10010a28:	0080460e 	bge	zero,r2,10010b44 <__muldf3+0x748>
10010a2c:	910001cc 	andi	r4,r18,7
10010a30:	20000726 	beq	r4,zero,10010a50 <__muldf3+0x654>
10010a34:	910003cc 	andi	r4,r18,15
10010a38:	01400104 	movi	r5,4
10010a3c:	21400426 	beq	r4,r5,10010a50 <__muldf3+0x654>
10010a40:	9149883a 	add	r4,r18,r5
10010a44:	24a5803a 	cmpltu	r18,r4,r18
10010a48:	8ca3883a 	add	r17,r17,r18
10010a4c:	2025883a 	mov	r18,r4
10010a50:	8900402c 	andhi	r4,r17,256
10010a54:	20000426 	beq	r4,zero,10010a68 <__muldf3+0x66c>
10010a58:	18810004 	addi	r2,r3,1024
10010a5c:	00ffc034 	movhi	r3,65280
10010a60:	18ffffc4 	addi	r3,r3,-1
10010a64:	88e2703a 	and	r17,r17,r3
10010a68:	00c1ff84 	movi	r3,2046
10010a6c:	18bf1316 	blt	r3,r2,100106bc <__alt_data_end+0xf80106bc>
10010a70:	882c977a 	slli	r22,r17,29
10010a74:	9024d0fa 	srli	r18,r18,3
10010a78:	8822927a 	slli	r17,r17,9
10010a7c:	1081ffcc 	andi	r2,r2,2047
10010a80:	b4acb03a 	or	r22,r22,r18
10010a84:	8820d33a 	srli	r16,r17,12
10010a88:	3027883a 	mov	r19,r6
10010a8c:	003eba06 	br	10010578 <__alt_data_end+0xf8010578>
10010a90:	8080022c 	andhi	r2,r16,8
10010a94:	10000926 	beq	r2,zero,10010abc <__muldf3+0x6c0>
10010a98:	8880022c 	andhi	r2,r17,8
10010a9c:	1000071e 	bne	r2,zero,10010abc <__muldf3+0x6c0>
10010aa0:	00800434 	movhi	r2,16
10010aa4:	8c000234 	orhi	r16,r17,8
10010aa8:	10bfffc4 	addi	r2,r2,-1
10010aac:	e027883a 	mov	r19,fp
10010ab0:	80a0703a 	and	r16,r16,r2
10010ab4:	902d883a 	mov	r22,r18
10010ab8:	003f1706 	br	10010718 <__alt_data_end+0xf8010718>
10010abc:	00800434 	movhi	r2,16
10010ac0:	84000234 	orhi	r16,r16,8
10010ac4:	10bfffc4 	addi	r2,r2,-1
10010ac8:	80a0703a 	and	r16,r16,r2
10010acc:	003f1206 	br	10010718 <__alt_data_end+0xf8010718>
10010ad0:	147ff604 	addi	r17,r2,-40
10010ad4:	3462983a 	sll	r17,r6,r17
10010ad8:	0025883a 	mov	r18,zero
10010adc:	003ef306 	br	100106ac <__alt_data_end+0xf80106ac>
10010ae0:	3009883a 	mov	r4,r6
10010ae4:	d9400215 	stw	r5,8(sp)
10010ae8:	d9800715 	stw	r6,28(sp)
10010aec:	da400415 	stw	r9,16(sp)
10010af0:	da800315 	stw	r10,12(sp)
10010af4:	00117680 	call	10011768 <__clzsi2>
10010af8:	10800804 	addi	r2,r2,32
10010afc:	da800317 	ldw	r10,12(sp)
10010b00:	da400417 	ldw	r9,16(sp)
10010b04:	d9800717 	ldw	r6,28(sp)
10010b08:	d9400217 	ldw	r5,8(sp)
10010b0c:	003edd06 	br	10010684 <__alt_data_end+0xf8010684>
10010b10:	143ff604 	addi	r16,r2,-40
10010b14:	ac20983a 	sll	r16,r21,r16
10010b18:	002d883a 	mov	r22,zero
10010b1c:	003ec106 	br	10010624 <__alt_data_end+0xf8010624>
10010b20:	d9800715 	stw	r6,28(sp)
10010b24:	d9c00215 	stw	r7,8(sp)
10010b28:	da400415 	stw	r9,16(sp)
10010b2c:	00117680 	call	10011768 <__clzsi2>
10010b30:	10800804 	addi	r2,r2,32
10010b34:	da400417 	ldw	r9,16(sp)
10010b38:	d9c00217 	ldw	r7,8(sp)
10010b3c:	d9800717 	ldw	r6,28(sp)
10010b40:	003eae06 	br	100105fc <__alt_data_end+0xf80105fc>
10010b44:	00c00044 	movi	r3,1
10010b48:	1887c83a 	sub	r3,r3,r2
10010b4c:	01000e04 	movi	r4,56
10010b50:	20fe8516 	blt	r4,r3,10010568 <__alt_data_end+0xf8010568>
10010b54:	010007c4 	movi	r4,31
10010b58:	20c01b16 	blt	r4,r3,10010bc8 <__muldf3+0x7cc>
10010b5c:	00800804 	movi	r2,32
10010b60:	10c5c83a 	sub	r2,r2,r3
10010b64:	888a983a 	sll	r5,r17,r2
10010b68:	90c8d83a 	srl	r4,r18,r3
10010b6c:	9084983a 	sll	r2,r18,r2
10010b70:	88e2d83a 	srl	r17,r17,r3
10010b74:	2906b03a 	or	r3,r5,r4
10010b78:	1004c03a 	cmpne	r2,r2,zero
10010b7c:	1886b03a 	or	r3,r3,r2
10010b80:	188001cc 	andi	r2,r3,7
10010b84:	10000726 	beq	r2,zero,10010ba4 <__muldf3+0x7a8>
10010b88:	188003cc 	andi	r2,r3,15
10010b8c:	01000104 	movi	r4,4
10010b90:	11000426 	beq	r2,r4,10010ba4 <__muldf3+0x7a8>
10010b94:	1805883a 	mov	r2,r3
10010b98:	10c00104 	addi	r3,r2,4
10010b9c:	1885803a 	cmpltu	r2,r3,r2
10010ba0:	88a3883a 	add	r17,r17,r2
10010ba4:	8880202c 	andhi	r2,r17,128
10010ba8:	10001c26 	beq	r2,zero,10010c1c <__muldf3+0x820>
10010bac:	3027883a 	mov	r19,r6
10010bb0:	00800044 	movi	r2,1
10010bb4:	0021883a 	mov	r16,zero
10010bb8:	002d883a 	mov	r22,zero
10010bbc:	003e6e06 	br	10010578 <__alt_data_end+0xf8010578>
10010bc0:	4007883a 	mov	r3,r8
10010bc4:	003f9706 	br	10010a24 <__alt_data_end+0xf8010a24>
10010bc8:	017ff844 	movi	r5,-31
10010bcc:	2885c83a 	sub	r2,r5,r2
10010bd0:	888ad83a 	srl	r5,r17,r2
10010bd4:	00800804 	movi	r2,32
10010bd8:	18801a26 	beq	r3,r2,10010c44 <__muldf3+0x848>
10010bdc:	01001004 	movi	r4,64
10010be0:	20c7c83a 	sub	r3,r4,r3
10010be4:	88e2983a 	sll	r17,r17,r3
10010be8:	8ca4b03a 	or	r18,r17,r18
10010bec:	9004c03a 	cmpne	r2,r18,zero
10010bf0:	2884b03a 	or	r2,r5,r2
10010bf4:	144001cc 	andi	r17,r2,7
10010bf8:	88000d1e 	bne	r17,zero,10010c30 <__muldf3+0x834>
10010bfc:	0021883a 	mov	r16,zero
10010c00:	102cd0fa 	srli	r22,r2,3
10010c04:	3027883a 	mov	r19,r6
10010c08:	0005883a 	mov	r2,zero
10010c0c:	b46cb03a 	or	r22,r22,r17
10010c10:	003e5906 	br	10010578 <__alt_data_end+0xf8010578>
10010c14:	1007883a 	mov	r3,r2
10010c18:	0023883a 	mov	r17,zero
10010c1c:	8820927a 	slli	r16,r17,9
10010c20:	1805883a 	mov	r2,r3
10010c24:	8822977a 	slli	r17,r17,29
10010c28:	8020d33a 	srli	r16,r16,12
10010c2c:	003ff406 	br	10010c00 <__alt_data_end+0xf8010c00>
10010c30:	10c003cc 	andi	r3,r2,15
10010c34:	01000104 	movi	r4,4
10010c38:	193ff626 	beq	r3,r4,10010c14 <__alt_data_end+0xf8010c14>
10010c3c:	0023883a 	mov	r17,zero
10010c40:	003fd506 	br	10010b98 <__alt_data_end+0xf8010b98>
10010c44:	0023883a 	mov	r17,zero
10010c48:	003fe706 	br	10010be8 <__alt_data_end+0xf8010be8>
10010c4c:	00800434 	movhi	r2,16
10010c50:	8c000234 	orhi	r16,r17,8
10010c54:	10bfffc4 	addi	r2,r2,-1
10010c58:	3027883a 	mov	r19,r6
10010c5c:	80a0703a 	and	r16,r16,r2
10010c60:	902d883a 	mov	r22,r18
10010c64:	003eac06 	br	10010718 <__alt_data_end+0xf8010718>

10010c68 <__subdf3>:
10010c68:	02000434 	movhi	r8,16
10010c6c:	423fffc4 	addi	r8,r8,-1
10010c70:	defffb04 	addi	sp,sp,-20
10010c74:	2a14703a 	and	r10,r5,r8
10010c78:	3812d53a 	srli	r9,r7,20
10010c7c:	3a10703a 	and	r8,r7,r8
10010c80:	2006d77a 	srli	r3,r4,29
10010c84:	3004d77a 	srli	r2,r6,29
10010c88:	dc000015 	stw	r16,0(sp)
10010c8c:	501490fa 	slli	r10,r10,3
10010c90:	2820d53a 	srli	r16,r5,20
10010c94:	401090fa 	slli	r8,r8,3
10010c98:	dc800215 	stw	r18,8(sp)
10010c9c:	dc400115 	stw	r17,4(sp)
10010ca0:	dfc00415 	stw	ra,16(sp)
10010ca4:	202290fa 	slli	r17,r4,3
10010ca8:	dcc00315 	stw	r19,12(sp)
10010cac:	4a41ffcc 	andi	r9,r9,2047
10010cb0:	0101ffc4 	movi	r4,2047
10010cb4:	2824d7fa 	srli	r18,r5,31
10010cb8:	8401ffcc 	andi	r16,r16,2047
10010cbc:	50c6b03a 	or	r3,r10,r3
10010cc0:	380ed7fa 	srli	r7,r7,31
10010cc4:	408ab03a 	or	r5,r8,r2
10010cc8:	300c90fa 	slli	r6,r6,3
10010ccc:	49009626 	beq	r9,r4,10010f28 <__subdf3+0x2c0>
10010cd0:	39c0005c 	xori	r7,r7,1
10010cd4:	8245c83a 	sub	r2,r16,r9
10010cd8:	3c807426 	beq	r7,r18,10010eac <__subdf3+0x244>
10010cdc:	0080af0e 	bge	zero,r2,10010f9c <__subdf3+0x334>
10010ce0:	48002a1e 	bne	r9,zero,10010d8c <__subdf3+0x124>
10010ce4:	2988b03a 	or	r4,r5,r6
10010ce8:	20009a1e 	bne	r4,zero,10010f54 <__subdf3+0x2ec>
10010cec:	888001cc 	andi	r2,r17,7
10010cf0:	10000726 	beq	r2,zero,10010d10 <__subdf3+0xa8>
10010cf4:	888003cc 	andi	r2,r17,15
10010cf8:	01000104 	movi	r4,4
10010cfc:	11000426 	beq	r2,r4,10010d10 <__subdf3+0xa8>
10010d00:	890b883a 	add	r5,r17,r4
10010d04:	2c63803a 	cmpltu	r17,r5,r17
10010d08:	1c47883a 	add	r3,r3,r17
10010d0c:	2823883a 	mov	r17,r5
10010d10:	1880202c 	andhi	r2,r3,128
10010d14:	10005926 	beq	r2,zero,10010e7c <__subdf3+0x214>
10010d18:	84000044 	addi	r16,r16,1
10010d1c:	0081ffc4 	movi	r2,2047
10010d20:	8080be26 	beq	r16,r2,1001101c <__subdf3+0x3b4>
10010d24:	017fe034 	movhi	r5,65408
10010d28:	297fffc4 	addi	r5,r5,-1
10010d2c:	1946703a 	and	r3,r3,r5
10010d30:	1804977a 	slli	r2,r3,29
10010d34:	1806927a 	slli	r3,r3,9
10010d38:	8822d0fa 	srli	r17,r17,3
10010d3c:	8401ffcc 	andi	r16,r16,2047
10010d40:	180ad33a 	srli	r5,r3,12
10010d44:	9100004c 	andi	r4,r18,1
10010d48:	1444b03a 	or	r2,r2,r17
10010d4c:	80c1ffcc 	andi	r3,r16,2047
10010d50:	1820953a 	slli	r16,r3,20
10010d54:	20c03fcc 	andi	r3,r4,255
10010d58:	180897fa 	slli	r4,r3,31
10010d5c:	00c00434 	movhi	r3,16
10010d60:	18ffffc4 	addi	r3,r3,-1
10010d64:	28c6703a 	and	r3,r5,r3
10010d68:	1c06b03a 	or	r3,r3,r16
10010d6c:	1906b03a 	or	r3,r3,r4
10010d70:	dfc00417 	ldw	ra,16(sp)
10010d74:	dcc00317 	ldw	r19,12(sp)
10010d78:	dc800217 	ldw	r18,8(sp)
10010d7c:	dc400117 	ldw	r17,4(sp)
10010d80:	dc000017 	ldw	r16,0(sp)
10010d84:	dec00504 	addi	sp,sp,20
10010d88:	f800283a 	ret
10010d8c:	0101ffc4 	movi	r4,2047
10010d90:	813fd626 	beq	r16,r4,10010cec <__alt_data_end+0xf8010cec>
10010d94:	29402034 	orhi	r5,r5,128
10010d98:	01000e04 	movi	r4,56
10010d9c:	2080a316 	blt	r4,r2,1001102c <__subdf3+0x3c4>
10010da0:	010007c4 	movi	r4,31
10010da4:	2080c616 	blt	r4,r2,100110c0 <__subdf3+0x458>
10010da8:	01000804 	movi	r4,32
10010dac:	2089c83a 	sub	r4,r4,r2
10010db0:	2910983a 	sll	r8,r5,r4
10010db4:	308ed83a 	srl	r7,r6,r2
10010db8:	3108983a 	sll	r4,r6,r4
10010dbc:	2884d83a 	srl	r2,r5,r2
10010dc0:	41ccb03a 	or	r6,r8,r7
10010dc4:	2008c03a 	cmpne	r4,r4,zero
10010dc8:	310cb03a 	or	r6,r6,r4
10010dcc:	898dc83a 	sub	r6,r17,r6
10010dd0:	89a3803a 	cmpltu	r17,r17,r6
10010dd4:	1887c83a 	sub	r3,r3,r2
10010dd8:	1c47c83a 	sub	r3,r3,r17
10010ddc:	3023883a 	mov	r17,r6
10010de0:	1880202c 	andhi	r2,r3,128
10010de4:	10002326 	beq	r2,zero,10010e74 <__subdf3+0x20c>
10010de8:	04c02034 	movhi	r19,128
10010dec:	9cffffc4 	addi	r19,r19,-1
10010df0:	1ce6703a 	and	r19,r3,r19
10010df4:	98007a26 	beq	r19,zero,10010fe0 <__subdf3+0x378>
10010df8:	9809883a 	mov	r4,r19
10010dfc:	00117680 	call	10011768 <__clzsi2>
10010e00:	113ffe04 	addi	r4,r2,-8
10010e04:	00c007c4 	movi	r3,31
10010e08:	19007b16 	blt	r3,r4,10010ff8 <__subdf3+0x390>
10010e0c:	00800804 	movi	r2,32
10010e10:	1105c83a 	sub	r2,r2,r4
10010e14:	8884d83a 	srl	r2,r17,r2
10010e18:	9906983a 	sll	r3,r19,r4
10010e1c:	8922983a 	sll	r17,r17,r4
10010e20:	10c4b03a 	or	r2,r2,r3
10010e24:	24007816 	blt	r4,r16,10011008 <__subdf3+0x3a0>
10010e28:	2421c83a 	sub	r16,r4,r16
10010e2c:	80c00044 	addi	r3,r16,1
10010e30:	010007c4 	movi	r4,31
10010e34:	20c09516 	blt	r4,r3,1001108c <__subdf3+0x424>
10010e38:	01400804 	movi	r5,32
10010e3c:	28cbc83a 	sub	r5,r5,r3
10010e40:	88c8d83a 	srl	r4,r17,r3
10010e44:	8962983a 	sll	r17,r17,r5
10010e48:	114a983a 	sll	r5,r2,r5
10010e4c:	10c6d83a 	srl	r3,r2,r3
10010e50:	8804c03a 	cmpne	r2,r17,zero
10010e54:	290ab03a 	or	r5,r5,r4
10010e58:	28a2b03a 	or	r17,r5,r2
10010e5c:	0021883a 	mov	r16,zero
10010e60:	003fa206 	br	10010cec <__alt_data_end+0xf8010cec>
10010e64:	2090b03a 	or	r8,r4,r2
10010e68:	40018e26 	beq	r8,zero,100114a4 <__subdf3+0x83c>
10010e6c:	1007883a 	mov	r3,r2
10010e70:	2023883a 	mov	r17,r4
10010e74:	888001cc 	andi	r2,r17,7
10010e78:	103f9e1e 	bne	r2,zero,10010cf4 <__alt_data_end+0xf8010cf4>
10010e7c:	1804977a 	slli	r2,r3,29
10010e80:	8822d0fa 	srli	r17,r17,3
10010e84:	1810d0fa 	srli	r8,r3,3
10010e88:	9100004c 	andi	r4,r18,1
10010e8c:	1444b03a 	or	r2,r2,r17
10010e90:	00c1ffc4 	movi	r3,2047
10010e94:	80c02826 	beq	r16,r3,10010f38 <__subdf3+0x2d0>
10010e98:	01400434 	movhi	r5,16
10010e9c:	297fffc4 	addi	r5,r5,-1
10010ea0:	80e0703a 	and	r16,r16,r3
10010ea4:	414a703a 	and	r5,r8,r5
10010ea8:	003fa806 	br	10010d4c <__alt_data_end+0xf8010d4c>
10010eac:	0080630e 	bge	zero,r2,1001103c <__subdf3+0x3d4>
10010eb0:	48003026 	beq	r9,zero,10010f74 <__subdf3+0x30c>
10010eb4:	0101ffc4 	movi	r4,2047
10010eb8:	813f8c26 	beq	r16,r4,10010cec <__alt_data_end+0xf8010cec>
10010ebc:	29402034 	orhi	r5,r5,128
10010ec0:	01000e04 	movi	r4,56
10010ec4:	2080a90e 	bge	r4,r2,1001116c <__subdf3+0x504>
10010ec8:	298cb03a 	or	r6,r5,r6
10010ecc:	3012c03a 	cmpne	r9,r6,zero
10010ed0:	0005883a 	mov	r2,zero
10010ed4:	4c53883a 	add	r9,r9,r17
10010ed8:	4c63803a 	cmpltu	r17,r9,r17
10010edc:	10c7883a 	add	r3,r2,r3
10010ee0:	88c7883a 	add	r3,r17,r3
10010ee4:	4823883a 	mov	r17,r9
10010ee8:	1880202c 	andhi	r2,r3,128
10010eec:	1000d026 	beq	r2,zero,10011230 <__subdf3+0x5c8>
10010ef0:	84000044 	addi	r16,r16,1
10010ef4:	0081ffc4 	movi	r2,2047
10010ef8:	8080fe26 	beq	r16,r2,100112f4 <__subdf3+0x68c>
10010efc:	00bfe034 	movhi	r2,65408
10010f00:	10bfffc4 	addi	r2,r2,-1
10010f04:	1886703a 	and	r3,r3,r2
10010f08:	880ad07a 	srli	r5,r17,1
10010f0c:	180497fa 	slli	r2,r3,31
10010f10:	8900004c 	andi	r4,r17,1
10010f14:	2922b03a 	or	r17,r5,r4
10010f18:	1806d07a 	srli	r3,r3,1
10010f1c:	1462b03a 	or	r17,r2,r17
10010f20:	3825883a 	mov	r18,r7
10010f24:	003f7106 	br	10010cec <__alt_data_end+0xf8010cec>
10010f28:	2984b03a 	or	r2,r5,r6
10010f2c:	103f6826 	beq	r2,zero,10010cd0 <__alt_data_end+0xf8010cd0>
10010f30:	39c03fcc 	andi	r7,r7,255
10010f34:	003f6706 	br	10010cd4 <__alt_data_end+0xf8010cd4>
10010f38:	4086b03a 	or	r3,r8,r2
10010f3c:	18015226 	beq	r3,zero,10011488 <__subdf3+0x820>
10010f40:	00c00434 	movhi	r3,16
10010f44:	41400234 	orhi	r5,r8,8
10010f48:	18ffffc4 	addi	r3,r3,-1
10010f4c:	28ca703a 	and	r5,r5,r3
10010f50:	003f7e06 	br	10010d4c <__alt_data_end+0xf8010d4c>
10010f54:	10bfffc4 	addi	r2,r2,-1
10010f58:	1000491e 	bne	r2,zero,10011080 <__subdf3+0x418>
10010f5c:	898fc83a 	sub	r7,r17,r6
10010f60:	89e3803a 	cmpltu	r17,r17,r7
10010f64:	1947c83a 	sub	r3,r3,r5
10010f68:	1c47c83a 	sub	r3,r3,r17
10010f6c:	3823883a 	mov	r17,r7
10010f70:	003f9b06 	br	10010de0 <__alt_data_end+0xf8010de0>
10010f74:	2988b03a 	or	r4,r5,r6
10010f78:	203f5c26 	beq	r4,zero,10010cec <__alt_data_end+0xf8010cec>
10010f7c:	10bfffc4 	addi	r2,r2,-1
10010f80:	1000931e 	bne	r2,zero,100111d0 <__subdf3+0x568>
10010f84:	898d883a 	add	r6,r17,r6
10010f88:	3463803a 	cmpltu	r17,r6,r17
10010f8c:	1947883a 	add	r3,r3,r5
10010f90:	88c7883a 	add	r3,r17,r3
10010f94:	3023883a 	mov	r17,r6
10010f98:	003fd306 	br	10010ee8 <__alt_data_end+0xf8010ee8>
10010f9c:	1000541e 	bne	r2,zero,100110f0 <__subdf3+0x488>
10010fa0:	80800044 	addi	r2,r16,1
10010fa4:	1081ffcc 	andi	r2,r2,2047
10010fa8:	01000044 	movi	r4,1
10010fac:	2080a20e 	bge	r4,r2,10011238 <__subdf3+0x5d0>
10010fb0:	8989c83a 	sub	r4,r17,r6
10010fb4:	8905803a 	cmpltu	r2,r17,r4
10010fb8:	1967c83a 	sub	r19,r3,r5
10010fbc:	98a7c83a 	sub	r19,r19,r2
10010fc0:	9880202c 	andhi	r2,r19,128
10010fc4:	10006326 	beq	r2,zero,10011154 <__subdf3+0x4ec>
10010fc8:	3463c83a 	sub	r17,r6,r17
10010fcc:	28c7c83a 	sub	r3,r5,r3
10010fd0:	344d803a 	cmpltu	r6,r6,r17
10010fd4:	19a7c83a 	sub	r19,r3,r6
10010fd8:	3825883a 	mov	r18,r7
10010fdc:	983f861e 	bne	r19,zero,10010df8 <__alt_data_end+0xf8010df8>
10010fe0:	8809883a 	mov	r4,r17
10010fe4:	00117680 	call	10011768 <__clzsi2>
10010fe8:	10800804 	addi	r2,r2,32
10010fec:	113ffe04 	addi	r4,r2,-8
10010ff0:	00c007c4 	movi	r3,31
10010ff4:	193f850e 	bge	r3,r4,10010e0c <__alt_data_end+0xf8010e0c>
10010ff8:	10bff604 	addi	r2,r2,-40
10010ffc:	8884983a 	sll	r2,r17,r2
10011000:	0023883a 	mov	r17,zero
10011004:	243f880e 	bge	r4,r16,10010e28 <__alt_data_end+0xf8010e28>
10011008:	00ffe034 	movhi	r3,65408
1001100c:	18ffffc4 	addi	r3,r3,-1
10011010:	8121c83a 	sub	r16,r16,r4
10011014:	10c6703a 	and	r3,r2,r3
10011018:	003f3406 	br	10010cec <__alt_data_end+0xf8010cec>
1001101c:	9100004c 	andi	r4,r18,1
10011020:	000b883a 	mov	r5,zero
10011024:	0005883a 	mov	r2,zero
10011028:	003f4806 	br	10010d4c <__alt_data_end+0xf8010d4c>
1001102c:	298cb03a 	or	r6,r5,r6
10011030:	300cc03a 	cmpne	r6,r6,zero
10011034:	0005883a 	mov	r2,zero
10011038:	003f6406 	br	10010dcc <__alt_data_end+0xf8010dcc>
1001103c:	10009a1e 	bne	r2,zero,100112a8 <__subdf3+0x640>
10011040:	82400044 	addi	r9,r16,1
10011044:	4881ffcc 	andi	r2,r9,2047
10011048:	02800044 	movi	r10,1
1001104c:	5080670e 	bge	r10,r2,100111ec <__subdf3+0x584>
10011050:	0081ffc4 	movi	r2,2047
10011054:	4880af26 	beq	r9,r2,10011314 <__subdf3+0x6ac>
10011058:	898d883a 	add	r6,r17,r6
1001105c:	1945883a 	add	r2,r3,r5
10011060:	3447803a 	cmpltu	r3,r6,r17
10011064:	1887883a 	add	r3,r3,r2
10011068:	182297fa 	slli	r17,r3,31
1001106c:	300cd07a 	srli	r6,r6,1
10011070:	1806d07a 	srli	r3,r3,1
10011074:	4821883a 	mov	r16,r9
10011078:	89a2b03a 	or	r17,r17,r6
1001107c:	003f1b06 	br	10010cec <__alt_data_end+0xf8010cec>
10011080:	0101ffc4 	movi	r4,2047
10011084:	813f441e 	bne	r16,r4,10010d98 <__alt_data_end+0xf8010d98>
10011088:	003f1806 	br	10010cec <__alt_data_end+0xf8010cec>
1001108c:	843ff844 	addi	r16,r16,-31
10011090:	01400804 	movi	r5,32
10011094:	1408d83a 	srl	r4,r2,r16
10011098:	19405026 	beq	r3,r5,100111dc <__subdf3+0x574>
1001109c:	01401004 	movi	r5,64
100110a0:	28c7c83a 	sub	r3,r5,r3
100110a4:	10c4983a 	sll	r2,r2,r3
100110a8:	88a2b03a 	or	r17,r17,r2
100110ac:	8822c03a 	cmpne	r17,r17,zero
100110b0:	2462b03a 	or	r17,r4,r17
100110b4:	0007883a 	mov	r3,zero
100110b8:	0021883a 	mov	r16,zero
100110bc:	003f6d06 	br	10010e74 <__alt_data_end+0xf8010e74>
100110c0:	11fff804 	addi	r7,r2,-32
100110c4:	01000804 	movi	r4,32
100110c8:	29ced83a 	srl	r7,r5,r7
100110cc:	11004526 	beq	r2,r4,100111e4 <__subdf3+0x57c>
100110d0:	01001004 	movi	r4,64
100110d4:	2089c83a 	sub	r4,r4,r2
100110d8:	2904983a 	sll	r2,r5,r4
100110dc:	118cb03a 	or	r6,r2,r6
100110e0:	300cc03a 	cmpne	r6,r6,zero
100110e4:	398cb03a 	or	r6,r7,r6
100110e8:	0005883a 	mov	r2,zero
100110ec:	003f3706 	br	10010dcc <__alt_data_end+0xf8010dcc>
100110f0:	80002a26 	beq	r16,zero,1001119c <__subdf3+0x534>
100110f4:	0101ffc4 	movi	r4,2047
100110f8:	49006626 	beq	r9,r4,10011294 <__subdf3+0x62c>
100110fc:	0085c83a 	sub	r2,zero,r2
10011100:	18c02034 	orhi	r3,r3,128
10011104:	01000e04 	movi	r4,56
10011108:	20807e16 	blt	r4,r2,10011304 <__subdf3+0x69c>
1001110c:	010007c4 	movi	r4,31
10011110:	2080e716 	blt	r4,r2,100114b0 <__subdf3+0x848>
10011114:	01000804 	movi	r4,32
10011118:	2089c83a 	sub	r4,r4,r2
1001111c:	1914983a 	sll	r10,r3,r4
10011120:	8890d83a 	srl	r8,r17,r2
10011124:	8908983a 	sll	r4,r17,r4
10011128:	1884d83a 	srl	r2,r3,r2
1001112c:	5222b03a 	or	r17,r10,r8
10011130:	2006c03a 	cmpne	r3,r4,zero
10011134:	88e2b03a 	or	r17,r17,r3
10011138:	3463c83a 	sub	r17,r6,r17
1001113c:	2885c83a 	sub	r2,r5,r2
10011140:	344d803a 	cmpltu	r6,r6,r17
10011144:	1187c83a 	sub	r3,r2,r6
10011148:	4821883a 	mov	r16,r9
1001114c:	3825883a 	mov	r18,r7
10011150:	003f2306 	br	10010de0 <__alt_data_end+0xf8010de0>
10011154:	24d0b03a 	or	r8,r4,r19
10011158:	40001b1e 	bne	r8,zero,100111c8 <__subdf3+0x560>
1001115c:	0005883a 	mov	r2,zero
10011160:	0009883a 	mov	r4,zero
10011164:	0021883a 	mov	r16,zero
10011168:	003f4906 	br	10010e90 <__alt_data_end+0xf8010e90>
1001116c:	010007c4 	movi	r4,31
10011170:	20803a16 	blt	r4,r2,1001125c <__subdf3+0x5f4>
10011174:	01000804 	movi	r4,32
10011178:	2089c83a 	sub	r4,r4,r2
1001117c:	2912983a 	sll	r9,r5,r4
10011180:	3090d83a 	srl	r8,r6,r2
10011184:	3108983a 	sll	r4,r6,r4
10011188:	2884d83a 	srl	r2,r5,r2
1001118c:	4a12b03a 	or	r9,r9,r8
10011190:	2008c03a 	cmpne	r4,r4,zero
10011194:	4912b03a 	or	r9,r9,r4
10011198:	003f4e06 	br	10010ed4 <__alt_data_end+0xf8010ed4>
1001119c:	1c48b03a 	or	r4,r3,r17
100111a0:	20003c26 	beq	r4,zero,10011294 <__subdf3+0x62c>
100111a4:	0084303a 	nor	r2,zero,r2
100111a8:	1000381e 	bne	r2,zero,1001128c <__subdf3+0x624>
100111ac:	3463c83a 	sub	r17,r6,r17
100111b0:	28c5c83a 	sub	r2,r5,r3
100111b4:	344d803a 	cmpltu	r6,r6,r17
100111b8:	1187c83a 	sub	r3,r2,r6
100111bc:	4821883a 	mov	r16,r9
100111c0:	3825883a 	mov	r18,r7
100111c4:	003f0606 	br	10010de0 <__alt_data_end+0xf8010de0>
100111c8:	2023883a 	mov	r17,r4
100111cc:	003f0906 	br	10010df4 <__alt_data_end+0xf8010df4>
100111d0:	0101ffc4 	movi	r4,2047
100111d4:	813f3a1e 	bne	r16,r4,10010ec0 <__alt_data_end+0xf8010ec0>
100111d8:	003ec406 	br	10010cec <__alt_data_end+0xf8010cec>
100111dc:	0005883a 	mov	r2,zero
100111e0:	003fb106 	br	100110a8 <__alt_data_end+0xf80110a8>
100111e4:	0005883a 	mov	r2,zero
100111e8:	003fbc06 	br	100110dc <__alt_data_end+0xf80110dc>
100111ec:	1c44b03a 	or	r2,r3,r17
100111f0:	80008e1e 	bne	r16,zero,1001142c <__subdf3+0x7c4>
100111f4:	1000c826 	beq	r2,zero,10011518 <__subdf3+0x8b0>
100111f8:	2984b03a 	or	r2,r5,r6
100111fc:	103ebb26 	beq	r2,zero,10010cec <__alt_data_end+0xf8010cec>
10011200:	8989883a 	add	r4,r17,r6
10011204:	1945883a 	add	r2,r3,r5
10011208:	2447803a 	cmpltu	r3,r4,r17
1001120c:	1887883a 	add	r3,r3,r2
10011210:	1880202c 	andhi	r2,r3,128
10011214:	2023883a 	mov	r17,r4
10011218:	103f1626 	beq	r2,zero,10010e74 <__alt_data_end+0xf8010e74>
1001121c:	00bfe034 	movhi	r2,65408
10011220:	10bfffc4 	addi	r2,r2,-1
10011224:	5021883a 	mov	r16,r10
10011228:	1886703a 	and	r3,r3,r2
1001122c:	003eaf06 	br	10010cec <__alt_data_end+0xf8010cec>
10011230:	3825883a 	mov	r18,r7
10011234:	003f0f06 	br	10010e74 <__alt_data_end+0xf8010e74>
10011238:	1c44b03a 	or	r2,r3,r17
1001123c:	8000251e 	bne	r16,zero,100112d4 <__subdf3+0x66c>
10011240:	1000661e 	bne	r2,zero,100113dc <__subdf3+0x774>
10011244:	2990b03a 	or	r8,r5,r6
10011248:	40009626 	beq	r8,zero,100114a4 <__subdf3+0x83c>
1001124c:	2807883a 	mov	r3,r5
10011250:	3023883a 	mov	r17,r6
10011254:	3825883a 	mov	r18,r7
10011258:	003ea406 	br	10010cec <__alt_data_end+0xf8010cec>
1001125c:	127ff804 	addi	r9,r2,-32
10011260:	01000804 	movi	r4,32
10011264:	2a52d83a 	srl	r9,r5,r9
10011268:	11008c26 	beq	r2,r4,1001149c <__subdf3+0x834>
1001126c:	01001004 	movi	r4,64
10011270:	2085c83a 	sub	r2,r4,r2
10011274:	2884983a 	sll	r2,r5,r2
10011278:	118cb03a 	or	r6,r2,r6
1001127c:	300cc03a 	cmpne	r6,r6,zero
10011280:	4992b03a 	or	r9,r9,r6
10011284:	0005883a 	mov	r2,zero
10011288:	003f1206 	br	10010ed4 <__alt_data_end+0xf8010ed4>
1001128c:	0101ffc4 	movi	r4,2047
10011290:	493f9c1e 	bne	r9,r4,10011104 <__alt_data_end+0xf8011104>
10011294:	2807883a 	mov	r3,r5
10011298:	3023883a 	mov	r17,r6
1001129c:	4821883a 	mov	r16,r9
100112a0:	3825883a 	mov	r18,r7
100112a4:	003e9106 	br	10010cec <__alt_data_end+0xf8010cec>
100112a8:	80001f1e 	bne	r16,zero,10011328 <__subdf3+0x6c0>
100112ac:	1c48b03a 	or	r4,r3,r17
100112b0:	20005a26 	beq	r4,zero,1001141c <__subdf3+0x7b4>
100112b4:	0084303a 	nor	r2,zero,r2
100112b8:	1000561e 	bne	r2,zero,10011414 <__subdf3+0x7ac>
100112bc:	89a3883a 	add	r17,r17,r6
100112c0:	1945883a 	add	r2,r3,r5
100112c4:	898d803a 	cmpltu	r6,r17,r6
100112c8:	3087883a 	add	r3,r6,r2
100112cc:	4821883a 	mov	r16,r9
100112d0:	003f0506 	br	10010ee8 <__alt_data_end+0xf8010ee8>
100112d4:	10002b1e 	bne	r2,zero,10011384 <__subdf3+0x71c>
100112d8:	2984b03a 	or	r2,r5,r6
100112dc:	10008026 	beq	r2,zero,100114e0 <__subdf3+0x878>
100112e0:	2807883a 	mov	r3,r5
100112e4:	3023883a 	mov	r17,r6
100112e8:	3825883a 	mov	r18,r7
100112ec:	0401ffc4 	movi	r16,2047
100112f0:	003e7e06 	br	10010cec <__alt_data_end+0xf8010cec>
100112f4:	3809883a 	mov	r4,r7
100112f8:	0011883a 	mov	r8,zero
100112fc:	0005883a 	mov	r2,zero
10011300:	003ee306 	br	10010e90 <__alt_data_end+0xf8010e90>
10011304:	1c62b03a 	or	r17,r3,r17
10011308:	8822c03a 	cmpne	r17,r17,zero
1001130c:	0005883a 	mov	r2,zero
10011310:	003f8906 	br	10011138 <__alt_data_end+0xf8011138>
10011314:	3809883a 	mov	r4,r7
10011318:	4821883a 	mov	r16,r9
1001131c:	0011883a 	mov	r8,zero
10011320:	0005883a 	mov	r2,zero
10011324:	003eda06 	br	10010e90 <__alt_data_end+0xf8010e90>
10011328:	0101ffc4 	movi	r4,2047
1001132c:	49003b26 	beq	r9,r4,1001141c <__subdf3+0x7b4>
10011330:	0085c83a 	sub	r2,zero,r2
10011334:	18c02034 	orhi	r3,r3,128
10011338:	01000e04 	movi	r4,56
1001133c:	20806e16 	blt	r4,r2,100114f8 <__subdf3+0x890>
10011340:	010007c4 	movi	r4,31
10011344:	20807716 	blt	r4,r2,10011524 <__subdf3+0x8bc>
10011348:	01000804 	movi	r4,32
1001134c:	2089c83a 	sub	r4,r4,r2
10011350:	1914983a 	sll	r10,r3,r4
10011354:	8890d83a 	srl	r8,r17,r2
10011358:	8908983a 	sll	r4,r17,r4
1001135c:	1884d83a 	srl	r2,r3,r2
10011360:	5222b03a 	or	r17,r10,r8
10011364:	2006c03a 	cmpne	r3,r4,zero
10011368:	88e2b03a 	or	r17,r17,r3
1001136c:	89a3883a 	add	r17,r17,r6
10011370:	1145883a 	add	r2,r2,r5
10011374:	898d803a 	cmpltu	r6,r17,r6
10011378:	3087883a 	add	r3,r6,r2
1001137c:	4821883a 	mov	r16,r9
10011380:	003ed906 	br	10010ee8 <__alt_data_end+0xf8010ee8>
10011384:	2984b03a 	or	r2,r5,r6
10011388:	10004226 	beq	r2,zero,10011494 <__subdf3+0x82c>
1001138c:	1808d0fa 	srli	r4,r3,3
10011390:	8822d0fa 	srli	r17,r17,3
10011394:	1806977a 	slli	r3,r3,29
10011398:	2080022c 	andhi	r2,r4,8
1001139c:	1c62b03a 	or	r17,r3,r17
100113a0:	10000826 	beq	r2,zero,100113c4 <__subdf3+0x75c>
100113a4:	2812d0fa 	srli	r9,r5,3
100113a8:	4880022c 	andhi	r2,r9,8
100113ac:	1000051e 	bne	r2,zero,100113c4 <__subdf3+0x75c>
100113b0:	300cd0fa 	srli	r6,r6,3
100113b4:	2804977a 	slli	r2,r5,29
100113b8:	4809883a 	mov	r4,r9
100113bc:	3825883a 	mov	r18,r7
100113c0:	11a2b03a 	or	r17,r2,r6
100113c4:	8806d77a 	srli	r3,r17,29
100113c8:	200890fa 	slli	r4,r4,3
100113cc:	882290fa 	slli	r17,r17,3
100113d0:	0401ffc4 	movi	r16,2047
100113d4:	1906b03a 	or	r3,r3,r4
100113d8:	003e4406 	br	10010cec <__alt_data_end+0xf8010cec>
100113dc:	2984b03a 	or	r2,r5,r6
100113e0:	103e4226 	beq	r2,zero,10010cec <__alt_data_end+0xf8010cec>
100113e4:	8989c83a 	sub	r4,r17,r6
100113e8:	8911803a 	cmpltu	r8,r17,r4
100113ec:	1945c83a 	sub	r2,r3,r5
100113f0:	1205c83a 	sub	r2,r2,r8
100113f4:	1200202c 	andhi	r8,r2,128
100113f8:	403e9a26 	beq	r8,zero,10010e64 <__alt_data_end+0xf8010e64>
100113fc:	3463c83a 	sub	r17,r6,r17
10011400:	28c5c83a 	sub	r2,r5,r3
10011404:	344d803a 	cmpltu	r6,r6,r17
10011408:	1187c83a 	sub	r3,r2,r6
1001140c:	3825883a 	mov	r18,r7
10011410:	003e3606 	br	10010cec <__alt_data_end+0xf8010cec>
10011414:	0101ffc4 	movi	r4,2047
10011418:	493fc71e 	bne	r9,r4,10011338 <__alt_data_end+0xf8011338>
1001141c:	2807883a 	mov	r3,r5
10011420:	3023883a 	mov	r17,r6
10011424:	4821883a 	mov	r16,r9
10011428:	003e3006 	br	10010cec <__alt_data_end+0xf8010cec>
1001142c:	10003626 	beq	r2,zero,10011508 <__subdf3+0x8a0>
10011430:	2984b03a 	or	r2,r5,r6
10011434:	10001726 	beq	r2,zero,10011494 <__subdf3+0x82c>
10011438:	1808d0fa 	srli	r4,r3,3
1001143c:	8822d0fa 	srli	r17,r17,3
10011440:	1806977a 	slli	r3,r3,29
10011444:	2080022c 	andhi	r2,r4,8
10011448:	1c62b03a 	or	r17,r3,r17
1001144c:	10000726 	beq	r2,zero,1001146c <__subdf3+0x804>
10011450:	2812d0fa 	srli	r9,r5,3
10011454:	4880022c 	andhi	r2,r9,8
10011458:	1000041e 	bne	r2,zero,1001146c <__subdf3+0x804>
1001145c:	300cd0fa 	srli	r6,r6,3
10011460:	2804977a 	slli	r2,r5,29
10011464:	4809883a 	mov	r4,r9
10011468:	11a2b03a 	or	r17,r2,r6
1001146c:	8806d77a 	srli	r3,r17,29
10011470:	200890fa 	slli	r4,r4,3
10011474:	882290fa 	slli	r17,r17,3
10011478:	3825883a 	mov	r18,r7
1001147c:	1906b03a 	or	r3,r3,r4
10011480:	0401ffc4 	movi	r16,2047
10011484:	003e1906 	br	10010cec <__alt_data_end+0xf8010cec>
10011488:	000b883a 	mov	r5,zero
1001148c:	0005883a 	mov	r2,zero
10011490:	003e2e06 	br	10010d4c <__alt_data_end+0xf8010d4c>
10011494:	0401ffc4 	movi	r16,2047
10011498:	003e1406 	br	10010cec <__alt_data_end+0xf8010cec>
1001149c:	0005883a 	mov	r2,zero
100114a0:	003f7506 	br	10011278 <__alt_data_end+0xf8011278>
100114a4:	0005883a 	mov	r2,zero
100114a8:	0009883a 	mov	r4,zero
100114ac:	003e7806 	br	10010e90 <__alt_data_end+0xf8010e90>
100114b0:	123ff804 	addi	r8,r2,-32
100114b4:	01000804 	movi	r4,32
100114b8:	1a10d83a 	srl	r8,r3,r8
100114bc:	11002526 	beq	r2,r4,10011554 <__subdf3+0x8ec>
100114c0:	01001004 	movi	r4,64
100114c4:	2085c83a 	sub	r2,r4,r2
100114c8:	1884983a 	sll	r2,r3,r2
100114cc:	1444b03a 	or	r2,r2,r17
100114d0:	1004c03a 	cmpne	r2,r2,zero
100114d4:	40a2b03a 	or	r17,r8,r2
100114d8:	0005883a 	mov	r2,zero
100114dc:	003f1606 	br	10011138 <__alt_data_end+0xf8011138>
100114e0:	02000434 	movhi	r8,16
100114e4:	0009883a 	mov	r4,zero
100114e8:	423fffc4 	addi	r8,r8,-1
100114ec:	00bfffc4 	movi	r2,-1
100114f0:	0401ffc4 	movi	r16,2047
100114f4:	003e6606 	br	10010e90 <__alt_data_end+0xf8010e90>
100114f8:	1c62b03a 	or	r17,r3,r17
100114fc:	8822c03a 	cmpne	r17,r17,zero
10011500:	0005883a 	mov	r2,zero
10011504:	003f9906 	br	1001136c <__alt_data_end+0xf801136c>
10011508:	2807883a 	mov	r3,r5
1001150c:	3023883a 	mov	r17,r6
10011510:	0401ffc4 	movi	r16,2047
10011514:	003df506 	br	10010cec <__alt_data_end+0xf8010cec>
10011518:	2807883a 	mov	r3,r5
1001151c:	3023883a 	mov	r17,r6
10011520:	003df206 	br	10010cec <__alt_data_end+0xf8010cec>
10011524:	123ff804 	addi	r8,r2,-32
10011528:	01000804 	movi	r4,32
1001152c:	1a10d83a 	srl	r8,r3,r8
10011530:	11000a26 	beq	r2,r4,1001155c <__subdf3+0x8f4>
10011534:	01001004 	movi	r4,64
10011538:	2085c83a 	sub	r2,r4,r2
1001153c:	1884983a 	sll	r2,r3,r2
10011540:	1444b03a 	or	r2,r2,r17
10011544:	1004c03a 	cmpne	r2,r2,zero
10011548:	40a2b03a 	or	r17,r8,r2
1001154c:	0005883a 	mov	r2,zero
10011550:	003f8606 	br	1001136c <__alt_data_end+0xf801136c>
10011554:	0005883a 	mov	r2,zero
10011558:	003fdc06 	br	100114cc <__alt_data_end+0xf80114cc>
1001155c:	0005883a 	mov	r2,zero
10011560:	003ff706 	br	10011540 <__alt_data_end+0xf8011540>

10011564 <__fixdfsi>:
10011564:	280cd53a 	srli	r6,r5,20
10011568:	00c00434 	movhi	r3,16
1001156c:	18ffffc4 	addi	r3,r3,-1
10011570:	3181ffcc 	andi	r6,r6,2047
10011574:	01c0ff84 	movi	r7,1022
10011578:	28c6703a 	and	r3,r5,r3
1001157c:	280ad7fa 	srli	r5,r5,31
10011580:	3980120e 	bge	r7,r6,100115cc <__fixdfsi+0x68>
10011584:	00810744 	movi	r2,1053
10011588:	11800c16 	blt	r2,r6,100115bc <__fixdfsi+0x58>
1001158c:	00810cc4 	movi	r2,1075
10011590:	1185c83a 	sub	r2,r2,r6
10011594:	01c007c4 	movi	r7,31
10011598:	18c00434 	orhi	r3,r3,16
1001159c:	38800d16 	blt	r7,r2,100115d4 <__fixdfsi+0x70>
100115a0:	31befb44 	addi	r6,r6,-1043
100115a4:	2084d83a 	srl	r2,r4,r2
100115a8:	1986983a 	sll	r3,r3,r6
100115ac:	1884b03a 	or	r2,r3,r2
100115b0:	28000726 	beq	r5,zero,100115d0 <__fixdfsi+0x6c>
100115b4:	0085c83a 	sub	r2,zero,r2
100115b8:	f800283a 	ret
100115bc:	00a00034 	movhi	r2,32768
100115c0:	10bfffc4 	addi	r2,r2,-1
100115c4:	2885883a 	add	r2,r5,r2
100115c8:	f800283a 	ret
100115cc:	0005883a 	mov	r2,zero
100115d0:	f800283a 	ret
100115d4:	008104c4 	movi	r2,1043
100115d8:	1185c83a 	sub	r2,r2,r6
100115dc:	1884d83a 	srl	r2,r3,r2
100115e0:	003ff306 	br	100115b0 <__alt_data_end+0xf80115b0>

100115e4 <__floatsidf>:
100115e4:	defffd04 	addi	sp,sp,-12
100115e8:	dfc00215 	stw	ra,8(sp)
100115ec:	dc400115 	stw	r17,4(sp)
100115f0:	dc000015 	stw	r16,0(sp)
100115f4:	20002b26 	beq	r4,zero,100116a4 <__floatsidf+0xc0>
100115f8:	2023883a 	mov	r17,r4
100115fc:	2020d7fa 	srli	r16,r4,31
10011600:	20002d16 	blt	r4,zero,100116b8 <__floatsidf+0xd4>
10011604:	8809883a 	mov	r4,r17
10011608:	00117680 	call	10011768 <__clzsi2>
1001160c:	01410784 	movi	r5,1054
10011610:	288bc83a 	sub	r5,r5,r2
10011614:	01010cc4 	movi	r4,1075
10011618:	2149c83a 	sub	r4,r4,r5
1001161c:	00c007c4 	movi	r3,31
10011620:	1900160e 	bge	r3,r4,1001167c <__floatsidf+0x98>
10011624:	00c104c4 	movi	r3,1043
10011628:	1947c83a 	sub	r3,r3,r5
1001162c:	88c6983a 	sll	r3,r17,r3
10011630:	00800434 	movhi	r2,16
10011634:	10bfffc4 	addi	r2,r2,-1
10011638:	1886703a 	and	r3,r3,r2
1001163c:	2941ffcc 	andi	r5,r5,2047
10011640:	800d883a 	mov	r6,r16
10011644:	0005883a 	mov	r2,zero
10011648:	280a953a 	slli	r5,r5,20
1001164c:	31803fcc 	andi	r6,r6,255
10011650:	01000434 	movhi	r4,16
10011654:	300c97fa 	slli	r6,r6,31
10011658:	213fffc4 	addi	r4,r4,-1
1001165c:	1906703a 	and	r3,r3,r4
10011660:	1946b03a 	or	r3,r3,r5
10011664:	1986b03a 	or	r3,r3,r6
10011668:	dfc00217 	ldw	ra,8(sp)
1001166c:	dc400117 	ldw	r17,4(sp)
10011670:	dc000017 	ldw	r16,0(sp)
10011674:	dec00304 	addi	sp,sp,12
10011678:	f800283a 	ret
1001167c:	00c002c4 	movi	r3,11
10011680:	1887c83a 	sub	r3,r3,r2
10011684:	88c6d83a 	srl	r3,r17,r3
10011688:	8904983a 	sll	r2,r17,r4
1001168c:	01000434 	movhi	r4,16
10011690:	213fffc4 	addi	r4,r4,-1
10011694:	2941ffcc 	andi	r5,r5,2047
10011698:	1906703a 	and	r3,r3,r4
1001169c:	800d883a 	mov	r6,r16
100116a0:	003fe906 	br	10011648 <__alt_data_end+0xf8011648>
100116a4:	000d883a 	mov	r6,zero
100116a8:	000b883a 	mov	r5,zero
100116ac:	0007883a 	mov	r3,zero
100116b0:	0005883a 	mov	r2,zero
100116b4:	003fe406 	br	10011648 <__alt_data_end+0xf8011648>
100116b8:	0123c83a 	sub	r17,zero,r4
100116bc:	003fd106 	br	10011604 <__alt_data_end+0xf8011604>

100116c0 <__floatunsidf>:
100116c0:	defffe04 	addi	sp,sp,-8
100116c4:	dc000015 	stw	r16,0(sp)
100116c8:	dfc00115 	stw	ra,4(sp)
100116cc:	2021883a 	mov	r16,r4
100116d0:	20002226 	beq	r4,zero,1001175c <__floatunsidf+0x9c>
100116d4:	00117680 	call	10011768 <__clzsi2>
100116d8:	01010784 	movi	r4,1054
100116dc:	2089c83a 	sub	r4,r4,r2
100116e0:	01810cc4 	movi	r6,1075
100116e4:	310dc83a 	sub	r6,r6,r4
100116e8:	00c007c4 	movi	r3,31
100116ec:	1980120e 	bge	r3,r6,10011738 <__floatunsidf+0x78>
100116f0:	00c104c4 	movi	r3,1043
100116f4:	1907c83a 	sub	r3,r3,r4
100116f8:	80ca983a 	sll	r5,r16,r3
100116fc:	00800434 	movhi	r2,16
10011700:	10bfffc4 	addi	r2,r2,-1
10011704:	2101ffcc 	andi	r4,r4,2047
10011708:	0021883a 	mov	r16,zero
1001170c:	288a703a 	and	r5,r5,r2
10011710:	2008953a 	slli	r4,r4,20
10011714:	00c00434 	movhi	r3,16
10011718:	18ffffc4 	addi	r3,r3,-1
1001171c:	28c6703a 	and	r3,r5,r3
10011720:	8005883a 	mov	r2,r16
10011724:	1906b03a 	or	r3,r3,r4
10011728:	dfc00117 	ldw	ra,4(sp)
1001172c:	dc000017 	ldw	r16,0(sp)
10011730:	dec00204 	addi	sp,sp,8
10011734:	f800283a 	ret
10011738:	00c002c4 	movi	r3,11
1001173c:	188bc83a 	sub	r5,r3,r2
10011740:	814ad83a 	srl	r5,r16,r5
10011744:	00c00434 	movhi	r3,16
10011748:	18ffffc4 	addi	r3,r3,-1
1001174c:	81a0983a 	sll	r16,r16,r6
10011750:	2101ffcc 	andi	r4,r4,2047
10011754:	28ca703a 	and	r5,r5,r3
10011758:	003fed06 	br	10011710 <__alt_data_end+0xf8011710>
1001175c:	0009883a 	mov	r4,zero
10011760:	000b883a 	mov	r5,zero
10011764:	003fea06 	br	10011710 <__alt_data_end+0xf8011710>

10011768 <__clzsi2>:
10011768:	00bfffd4 	movui	r2,65535
1001176c:	11000536 	bltu	r2,r4,10011784 <__clzsi2+0x1c>
10011770:	00803fc4 	movi	r2,255
10011774:	11000f36 	bltu	r2,r4,100117b4 <__clzsi2+0x4c>
10011778:	00800804 	movi	r2,32
1001177c:	0007883a 	mov	r3,zero
10011780:	00000506 	br	10011798 <__clzsi2+0x30>
10011784:	00804034 	movhi	r2,256
10011788:	10bfffc4 	addi	r2,r2,-1
1001178c:	11000c2e 	bgeu	r2,r4,100117c0 <__clzsi2+0x58>
10011790:	00800204 	movi	r2,8
10011794:	00c00604 	movi	r3,24
10011798:	20c8d83a 	srl	r4,r4,r3
1001179c:	00c40074 	movhi	r3,4097
100117a0:	18d0be04 	addi	r3,r3,17144
100117a4:	1909883a 	add	r4,r3,r4
100117a8:	20c00003 	ldbu	r3,0(r4)
100117ac:	10c5c83a 	sub	r2,r2,r3
100117b0:	f800283a 	ret
100117b4:	00800604 	movi	r2,24
100117b8:	00c00204 	movi	r3,8
100117bc:	003ff606 	br	10011798 <__alt_data_end+0xf8011798>
100117c0:	00800404 	movi	r2,16
100117c4:	1007883a 	mov	r3,r2
100117c8:	003ff306 	br	10011798 <__alt_data_end+0xf8011798>

100117cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
100117cc:	defffe04 	addi	sp,sp,-8
100117d0:	dfc00115 	stw	ra,4(sp)
100117d4:	df000015 	stw	fp,0(sp)
100117d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100117dc:	d0a00d17 	ldw	r2,-32716(gp)
100117e0:	10000326 	beq	r2,zero,100117f0 <alt_get_errno+0x24>
100117e4:	d0a00d17 	ldw	r2,-32716(gp)
100117e8:	103ee83a 	callr	r2
100117ec:	00000106 	br	100117f4 <alt_get_errno+0x28>
100117f0:	d0a78d04 	addi	r2,gp,-25036
}
100117f4:	e037883a 	mov	sp,fp
100117f8:	dfc00117 	ldw	ra,4(sp)
100117fc:	df000017 	ldw	fp,0(sp)
10011800:	dec00204 	addi	sp,sp,8
10011804:	f800283a 	ret

10011808 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
10011808:	defffb04 	addi	sp,sp,-20
1001180c:	dfc00415 	stw	ra,16(sp)
10011810:	df000315 	stw	fp,12(sp)
10011814:	df000304 	addi	fp,sp,12
10011818:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1001181c:	e0bfff17 	ldw	r2,-4(fp)
10011820:	10000816 	blt	r2,zero,10011844 <close+0x3c>
10011824:	01400304 	movi	r5,12
10011828:	e13fff17 	ldw	r4,-4(fp)
1001182c:	0000fc80 	call	10000fc8 <__mulsi3>
10011830:	1007883a 	mov	r3,r2
10011834:	00840074 	movhi	r2,4097
10011838:	1093f604 	addi	r2,r2,20440
1001183c:	1885883a 	add	r2,r3,r2
10011840:	00000106 	br	10011848 <close+0x40>
10011844:	0005883a 	mov	r2,zero
10011848:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1001184c:	e0bffd17 	ldw	r2,-12(fp)
10011850:	10001926 	beq	r2,zero,100118b8 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
10011854:	e0bffd17 	ldw	r2,-12(fp)
10011858:	10800017 	ldw	r2,0(r2)
1001185c:	10800417 	ldw	r2,16(r2)
10011860:	10000626 	beq	r2,zero,1001187c <close+0x74>
10011864:	e0bffd17 	ldw	r2,-12(fp)
10011868:	10800017 	ldw	r2,0(r2)
1001186c:	10800417 	ldw	r2,16(r2)
10011870:	e13ffd17 	ldw	r4,-12(fp)
10011874:	103ee83a 	callr	r2
10011878:	00000106 	br	10011880 <close+0x78>
1001187c:	0005883a 	mov	r2,zero
10011880:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
10011884:	e13fff17 	ldw	r4,-4(fp)
10011888:	0011ef00 	call	10011ef0 <alt_release_fd>
    if (rval < 0)
1001188c:	e0bffe17 	ldw	r2,-8(fp)
10011890:	1000070e 	bge	r2,zero,100118b0 <close+0xa8>
    {
      ALT_ERRNO = -rval;
10011894:	00117cc0 	call	100117cc <alt_get_errno>
10011898:	1007883a 	mov	r3,r2
1001189c:	e0bffe17 	ldw	r2,-8(fp)
100118a0:	0085c83a 	sub	r2,zero,r2
100118a4:	18800015 	stw	r2,0(r3)
      return -1;
100118a8:	00bfffc4 	movi	r2,-1
100118ac:	00000706 	br	100118cc <close+0xc4>
    }
    return 0;
100118b0:	0005883a 	mov	r2,zero
100118b4:	00000506 	br	100118cc <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
100118b8:	00117cc0 	call	100117cc <alt_get_errno>
100118bc:	1007883a 	mov	r3,r2
100118c0:	00801444 	movi	r2,81
100118c4:	18800015 	stw	r2,0(r3)
    return -1;
100118c8:	00bfffc4 	movi	r2,-1
  }
}
100118cc:	e037883a 	mov	sp,fp
100118d0:	dfc00117 	ldw	ra,4(sp)
100118d4:	df000017 	ldw	fp,0(sp)
100118d8:	dec00204 	addi	sp,sp,8
100118dc:	f800283a 	ret

100118e0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
100118e0:	defffc04 	addi	sp,sp,-16
100118e4:	df000315 	stw	fp,12(sp)
100118e8:	df000304 	addi	fp,sp,12
100118ec:	e13ffd15 	stw	r4,-12(fp)
100118f0:	e17ffe15 	stw	r5,-8(fp)
100118f4:	e1bfff15 	stw	r6,-4(fp)
  return len;
100118f8:	e0bfff17 	ldw	r2,-4(fp)
}
100118fc:	e037883a 	mov	sp,fp
10011900:	df000017 	ldw	fp,0(sp)
10011904:	dec00104 	addi	sp,sp,4
10011908:	f800283a 	ret

1001190c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1001190c:	defffe04 	addi	sp,sp,-8
10011910:	dfc00115 	stw	ra,4(sp)
10011914:	df000015 	stw	fp,0(sp)
10011918:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1001191c:	d0a00d17 	ldw	r2,-32716(gp)
10011920:	10000326 	beq	r2,zero,10011930 <alt_get_errno+0x24>
10011924:	d0a00d17 	ldw	r2,-32716(gp)
10011928:	103ee83a 	callr	r2
1001192c:	00000106 	br	10011934 <alt_get_errno+0x28>
10011930:	d0a78d04 	addi	r2,gp,-25036
}
10011934:	e037883a 	mov	sp,fp
10011938:	dfc00117 	ldw	ra,4(sp)
1001193c:	df000017 	ldw	fp,0(sp)
10011940:	dec00204 	addi	sp,sp,8
10011944:	f800283a 	ret

10011948 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
10011948:	defffb04 	addi	sp,sp,-20
1001194c:	dfc00415 	stw	ra,16(sp)
10011950:	df000315 	stw	fp,12(sp)
10011954:	df000304 	addi	fp,sp,12
10011958:	e13ffe15 	stw	r4,-8(fp)
1001195c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011960:	e0bffe17 	ldw	r2,-8(fp)
10011964:	10000816 	blt	r2,zero,10011988 <fstat+0x40>
10011968:	01400304 	movi	r5,12
1001196c:	e13ffe17 	ldw	r4,-8(fp)
10011970:	0000fc80 	call	10000fc8 <__mulsi3>
10011974:	1007883a 	mov	r3,r2
10011978:	00840074 	movhi	r2,4097
1001197c:	1093f604 	addi	r2,r2,20440
10011980:	1885883a 	add	r2,r3,r2
10011984:	00000106 	br	1001198c <fstat+0x44>
10011988:	0005883a 	mov	r2,zero
1001198c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
10011990:	e0bffd17 	ldw	r2,-12(fp)
10011994:	10001026 	beq	r2,zero,100119d8 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
10011998:	e0bffd17 	ldw	r2,-12(fp)
1001199c:	10800017 	ldw	r2,0(r2)
100119a0:	10800817 	ldw	r2,32(r2)
100119a4:	10000726 	beq	r2,zero,100119c4 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
100119a8:	e0bffd17 	ldw	r2,-12(fp)
100119ac:	10800017 	ldw	r2,0(r2)
100119b0:	10800817 	ldw	r2,32(r2)
100119b4:	e17fff17 	ldw	r5,-4(fp)
100119b8:	e13ffd17 	ldw	r4,-12(fp)
100119bc:	103ee83a 	callr	r2
100119c0:	00000a06 	br	100119ec <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
100119c4:	e0bfff17 	ldw	r2,-4(fp)
100119c8:	00c80004 	movi	r3,8192
100119cc:	10c00115 	stw	r3,4(r2)
      return 0;
100119d0:	0005883a 	mov	r2,zero
100119d4:	00000506 	br	100119ec <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
100119d8:	001190c0 	call	1001190c <alt_get_errno>
100119dc:	1007883a 	mov	r3,r2
100119e0:	00801444 	movi	r2,81
100119e4:	18800015 	stw	r2,0(r3)
    return -1;
100119e8:	00bfffc4 	movi	r2,-1
  }
}
100119ec:	e037883a 	mov	sp,fp
100119f0:	dfc00117 	ldw	ra,4(sp)
100119f4:	df000017 	ldw	fp,0(sp)
100119f8:	dec00204 	addi	sp,sp,8
100119fc:	f800283a 	ret

10011a00 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011a00:	defffe04 	addi	sp,sp,-8
10011a04:	dfc00115 	stw	ra,4(sp)
10011a08:	df000015 	stw	fp,0(sp)
10011a0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011a10:	d0a00d17 	ldw	r2,-32716(gp)
10011a14:	10000326 	beq	r2,zero,10011a24 <alt_get_errno+0x24>
10011a18:	d0a00d17 	ldw	r2,-32716(gp)
10011a1c:	103ee83a 	callr	r2
10011a20:	00000106 	br	10011a28 <alt_get_errno+0x28>
10011a24:	d0a78d04 	addi	r2,gp,-25036
}
10011a28:	e037883a 	mov	sp,fp
10011a2c:	dfc00117 	ldw	ra,4(sp)
10011a30:	df000017 	ldw	fp,0(sp)
10011a34:	dec00204 	addi	sp,sp,8
10011a38:	f800283a 	ret

10011a3c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
10011a3c:	deffed04 	addi	sp,sp,-76
10011a40:	dfc01215 	stw	ra,72(sp)
10011a44:	df001115 	stw	fp,68(sp)
10011a48:	df001104 	addi	fp,sp,68
10011a4c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011a50:	e0bfff17 	ldw	r2,-4(fp)
10011a54:	10000816 	blt	r2,zero,10011a78 <isatty+0x3c>
10011a58:	01400304 	movi	r5,12
10011a5c:	e13fff17 	ldw	r4,-4(fp)
10011a60:	0000fc80 	call	10000fc8 <__mulsi3>
10011a64:	1007883a 	mov	r3,r2
10011a68:	00840074 	movhi	r2,4097
10011a6c:	1093f604 	addi	r2,r2,20440
10011a70:	1885883a 	add	r2,r3,r2
10011a74:	00000106 	br	10011a7c <isatty+0x40>
10011a78:	0005883a 	mov	r2,zero
10011a7c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
10011a80:	e0bfef17 	ldw	r2,-68(fp)
10011a84:	10000e26 	beq	r2,zero,10011ac0 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
10011a88:	e0bfef17 	ldw	r2,-68(fp)
10011a8c:	10800017 	ldw	r2,0(r2)
10011a90:	10800817 	ldw	r2,32(r2)
10011a94:	1000021e 	bne	r2,zero,10011aa0 <isatty+0x64>
    {
      return 1;
10011a98:	00800044 	movi	r2,1
10011a9c:	00000d06 	br	10011ad4 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
10011aa0:	e0bff004 	addi	r2,fp,-64
10011aa4:	100b883a 	mov	r5,r2
10011aa8:	e13fff17 	ldw	r4,-4(fp)
10011aac:	00119480 	call	10011948 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
10011ab0:	e0bff117 	ldw	r2,-60(fp)
10011ab4:	10880020 	cmpeqi	r2,r2,8192
10011ab8:	10803fcc 	andi	r2,r2,255
10011abc:	00000506 	br	10011ad4 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
10011ac0:	0011a000 	call	10011a00 <alt_get_errno>
10011ac4:	1007883a 	mov	r3,r2
10011ac8:	00801444 	movi	r2,81
10011acc:	18800015 	stw	r2,0(r3)
    return 0;
10011ad0:	0005883a 	mov	r2,zero
  }
}
10011ad4:	e037883a 	mov	sp,fp
10011ad8:	dfc00117 	ldw	ra,4(sp)
10011adc:	df000017 	ldw	fp,0(sp)
10011ae0:	dec00204 	addi	sp,sp,8
10011ae4:	f800283a 	ret

10011ae8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
10011ae8:	defffc04 	addi	sp,sp,-16
10011aec:	df000315 	stw	fp,12(sp)
10011af0:	df000304 	addi	fp,sp,12
10011af4:	e13ffd15 	stw	r4,-12(fp)
10011af8:	e17ffe15 	stw	r5,-8(fp)
10011afc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
10011b00:	e0fffe17 	ldw	r3,-8(fp)
10011b04:	e0bffd17 	ldw	r2,-12(fp)
10011b08:	18800c26 	beq	r3,r2,10011b3c <alt_load_section+0x54>
  {
    while( to != end )
10011b0c:	00000806 	br	10011b30 <alt_load_section+0x48>
    {
      *to++ = *from++;
10011b10:	e0bffe17 	ldw	r2,-8(fp)
10011b14:	10c00104 	addi	r3,r2,4
10011b18:	e0fffe15 	stw	r3,-8(fp)
10011b1c:	e0fffd17 	ldw	r3,-12(fp)
10011b20:	19000104 	addi	r4,r3,4
10011b24:	e13ffd15 	stw	r4,-12(fp)
10011b28:	18c00017 	ldw	r3,0(r3)
10011b2c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
10011b30:	e0fffe17 	ldw	r3,-8(fp)
10011b34:	e0bfff17 	ldw	r2,-4(fp)
10011b38:	18bff51e 	bne	r3,r2,10011b10 <__alt_data_end+0xf8011b10>
    {
      *to++ = *from++;
    }
  }
}
10011b3c:	0001883a 	nop
10011b40:	e037883a 	mov	sp,fp
10011b44:	df000017 	ldw	fp,0(sp)
10011b48:	dec00104 	addi	sp,sp,4
10011b4c:	f800283a 	ret

10011b50 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
10011b50:	defffe04 	addi	sp,sp,-8
10011b54:	dfc00115 	stw	ra,4(sp)
10011b58:	df000015 	stw	fp,0(sp)
10011b5c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
10011b60:	01840074 	movhi	r6,4097
10011b64:	31988004 	addi	r6,r6,25088
10011b68:	01440074 	movhi	r5,4097
10011b6c:	29510b04 	addi	r5,r5,17452
10011b70:	01040074 	movhi	r4,4097
10011b74:	21188004 	addi	r4,r4,25088
10011b78:	0011ae80 	call	10011ae8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
10011b7c:	01840034 	movhi	r6,4096
10011b80:	31808c04 	addi	r6,r6,560
10011b84:	01440034 	movhi	r5,4096
10011b88:	29400804 	addi	r5,r5,32
10011b8c:	01040034 	movhi	r4,4096
10011b90:	21000804 	addi	r4,r4,32
10011b94:	0011ae80 	call	10011ae8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
10011b98:	01840074 	movhi	r6,4097
10011b9c:	31910b04 	addi	r6,r6,17452
10011ba0:	01440074 	movhi	r5,4097
10011ba4:	294ffb04 	addi	r5,r5,16364
10011ba8:	01040074 	movhi	r4,4097
10011bac:	210ffb04 	addi	r4,r4,16364
10011bb0:	0011ae80 	call	10011ae8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
10011bb4:	0012f340 	call	10012f34 <alt_dcache_flush_all>
  alt_icache_flush_all();
10011bb8:	00130f40 	call	100130f4 <alt_icache_flush_all>
}
10011bbc:	0001883a 	nop
10011bc0:	e037883a 	mov	sp,fp
10011bc4:	dfc00117 	ldw	ra,4(sp)
10011bc8:	df000017 	ldw	fp,0(sp)
10011bcc:	dec00204 	addi	sp,sp,8
10011bd0:	f800283a 	ret

10011bd4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011bd4:	defffe04 	addi	sp,sp,-8
10011bd8:	dfc00115 	stw	ra,4(sp)
10011bdc:	df000015 	stw	fp,0(sp)
10011be0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011be4:	d0a00d17 	ldw	r2,-32716(gp)
10011be8:	10000326 	beq	r2,zero,10011bf8 <alt_get_errno+0x24>
10011bec:	d0a00d17 	ldw	r2,-32716(gp)
10011bf0:	103ee83a 	callr	r2
10011bf4:	00000106 	br	10011bfc <alt_get_errno+0x28>
10011bf8:	d0a78d04 	addi	r2,gp,-25036
}
10011bfc:	e037883a 	mov	sp,fp
10011c00:	dfc00117 	ldw	ra,4(sp)
10011c04:	df000017 	ldw	fp,0(sp)
10011c08:	dec00204 	addi	sp,sp,8
10011c0c:	f800283a 	ret

10011c10 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
10011c10:	defff904 	addi	sp,sp,-28
10011c14:	dfc00615 	stw	ra,24(sp)
10011c18:	df000515 	stw	fp,20(sp)
10011c1c:	df000504 	addi	fp,sp,20
10011c20:	e13ffd15 	stw	r4,-12(fp)
10011c24:	e17ffe15 	stw	r5,-8(fp)
10011c28:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
10011c2c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011c30:	e0bffd17 	ldw	r2,-12(fp)
10011c34:	10000816 	blt	r2,zero,10011c58 <lseek+0x48>
10011c38:	01400304 	movi	r5,12
10011c3c:	e13ffd17 	ldw	r4,-12(fp)
10011c40:	0000fc80 	call	10000fc8 <__mulsi3>
10011c44:	1007883a 	mov	r3,r2
10011c48:	00840074 	movhi	r2,4097
10011c4c:	1093f604 	addi	r2,r2,20440
10011c50:	1885883a 	add	r2,r3,r2
10011c54:	00000106 	br	10011c5c <lseek+0x4c>
10011c58:	0005883a 	mov	r2,zero
10011c5c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
10011c60:	e0bffc17 	ldw	r2,-16(fp)
10011c64:	10001026 	beq	r2,zero,10011ca8 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10011c68:	e0bffc17 	ldw	r2,-16(fp)
10011c6c:	10800017 	ldw	r2,0(r2)
10011c70:	10800717 	ldw	r2,28(r2)
10011c74:	10000926 	beq	r2,zero,10011c9c <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10011c78:	e0bffc17 	ldw	r2,-16(fp)
10011c7c:	10800017 	ldw	r2,0(r2)
10011c80:	10800717 	ldw	r2,28(r2)
10011c84:	e1bfff17 	ldw	r6,-4(fp)
10011c88:	e17ffe17 	ldw	r5,-8(fp)
10011c8c:	e13ffc17 	ldw	r4,-16(fp)
10011c90:	103ee83a 	callr	r2
10011c94:	e0bffb15 	stw	r2,-20(fp)
10011c98:	00000506 	br	10011cb0 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
10011c9c:	00bfde84 	movi	r2,-134
10011ca0:	e0bffb15 	stw	r2,-20(fp)
10011ca4:	00000206 	br	10011cb0 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
10011ca8:	00bfebc4 	movi	r2,-81
10011cac:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
10011cb0:	e0bffb17 	ldw	r2,-20(fp)
10011cb4:	1000070e 	bge	r2,zero,10011cd4 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
10011cb8:	0011bd40 	call	10011bd4 <alt_get_errno>
10011cbc:	1007883a 	mov	r3,r2
10011cc0:	e0bffb17 	ldw	r2,-20(fp)
10011cc4:	0085c83a 	sub	r2,zero,r2
10011cc8:	18800015 	stw	r2,0(r3)
    rc = -1;
10011ccc:	00bfffc4 	movi	r2,-1
10011cd0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
10011cd4:	e0bffb17 	ldw	r2,-20(fp)
}
10011cd8:	e037883a 	mov	sp,fp
10011cdc:	dfc00117 	ldw	ra,4(sp)
10011ce0:	df000017 	ldw	fp,0(sp)
10011ce4:	dec00204 	addi	sp,sp,8
10011ce8:	f800283a 	ret

10011cec <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
10011cec:	defffd04 	addi	sp,sp,-12
10011cf0:	dfc00215 	stw	ra,8(sp)
10011cf4:	df000115 	stw	fp,4(sp)
10011cf8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
10011cfc:	0009883a 	mov	r4,zero
10011d00:	00121c40 	call	100121c4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
10011d04:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
10011d08:	00121fc0 	call	100121fc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
10011d0c:	01840074 	movhi	r6,4097
10011d10:	31910104 	addi	r6,r6,17412
10011d14:	01440074 	movhi	r5,4097
10011d18:	29510104 	addi	r5,r5,17412
10011d1c:	01040074 	movhi	r4,4097
10011d20:	21110104 	addi	r4,r4,17412
10011d24:	00134980 	call	10013498 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
10011d28:	00130340 	call	10013034 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
10011d2c:	01040074 	movhi	r4,4097
10011d30:	210c2504 	addi	r4,r4,12436
10011d34:	0013c580 	call	10013c58 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
10011d38:	d0a78e17 	ldw	r2,-25032(gp)
10011d3c:	d0e78f17 	ldw	r3,-25028(gp)
10011d40:	d1279017 	ldw	r4,-25024(gp)
10011d44:	200d883a 	mov	r6,r4
10011d48:	180b883a 	mov	r5,r3
10011d4c:	1009883a 	mov	r4,r2
10011d50:	0000de40 	call	10000de4 <main>
10011d54:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10011d58:	01000044 	movi	r4,1
10011d5c:	00118080 	call	10011808 <close>
  exit (result);
10011d60:	e13fff17 	ldw	r4,-4(fp)
10011d64:	0013c6c0 	call	10013c6c <exit>

10011d68 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10011d68:	defffe04 	addi	sp,sp,-8
10011d6c:	df000115 	stw	fp,4(sp)
10011d70:	df000104 	addi	fp,sp,4
10011d74:	e13fff15 	stw	r4,-4(fp)
}
10011d78:	0001883a 	nop
10011d7c:	e037883a 	mov	sp,fp
10011d80:	df000017 	ldw	fp,0(sp)
10011d84:	dec00104 	addi	sp,sp,4
10011d88:	f800283a 	ret

10011d8c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
10011d8c:	defffe04 	addi	sp,sp,-8
10011d90:	df000115 	stw	fp,4(sp)
10011d94:	df000104 	addi	fp,sp,4
10011d98:	e13fff15 	stw	r4,-4(fp)
}
10011d9c:	0001883a 	nop
10011da0:	e037883a 	mov	sp,fp
10011da4:	df000017 	ldw	fp,0(sp)
10011da8:	dec00104 	addi	sp,sp,4
10011dac:	f800283a 	ret

10011db0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011db0:	defffe04 	addi	sp,sp,-8
10011db4:	dfc00115 	stw	ra,4(sp)
10011db8:	df000015 	stw	fp,0(sp)
10011dbc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10011dc0:	d0a00d17 	ldw	r2,-32716(gp)
10011dc4:	10000326 	beq	r2,zero,10011dd4 <alt_get_errno+0x24>
10011dc8:	d0a00d17 	ldw	r2,-32716(gp)
10011dcc:	103ee83a 	callr	r2
10011dd0:	00000106 	br	10011dd8 <alt_get_errno+0x28>
10011dd4:	d0a78d04 	addi	r2,gp,-25036
}
10011dd8:	e037883a 	mov	sp,fp
10011ddc:	dfc00117 	ldw	ra,4(sp)
10011de0:	df000017 	ldw	fp,0(sp)
10011de4:	dec00204 	addi	sp,sp,8
10011de8:	f800283a 	ret

10011dec <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
10011dec:	defff904 	addi	sp,sp,-28
10011df0:	dfc00615 	stw	ra,24(sp)
10011df4:	df000515 	stw	fp,20(sp)
10011df8:	df000504 	addi	fp,sp,20
10011dfc:	e13ffd15 	stw	r4,-12(fp)
10011e00:	e17ffe15 	stw	r5,-8(fp)
10011e04:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10011e08:	e0bffd17 	ldw	r2,-12(fp)
10011e0c:	10000816 	blt	r2,zero,10011e30 <read+0x44>
10011e10:	01400304 	movi	r5,12
10011e14:	e13ffd17 	ldw	r4,-12(fp)
10011e18:	0000fc80 	call	10000fc8 <__mulsi3>
10011e1c:	1007883a 	mov	r3,r2
10011e20:	00840074 	movhi	r2,4097
10011e24:	1093f604 	addi	r2,r2,20440
10011e28:	1885883a 	add	r2,r3,r2
10011e2c:	00000106 	br	10011e34 <read+0x48>
10011e30:	0005883a 	mov	r2,zero
10011e34:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10011e38:	e0bffb17 	ldw	r2,-20(fp)
10011e3c:	10002226 	beq	r2,zero,10011ec8 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10011e40:	e0bffb17 	ldw	r2,-20(fp)
10011e44:	10800217 	ldw	r2,8(r2)
10011e48:	108000cc 	andi	r2,r2,3
10011e4c:	10800060 	cmpeqi	r2,r2,1
10011e50:	1000181e 	bne	r2,zero,10011eb4 <read+0xc8>
        (fd->dev->read))
10011e54:	e0bffb17 	ldw	r2,-20(fp)
10011e58:	10800017 	ldw	r2,0(r2)
10011e5c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10011e60:	10001426 	beq	r2,zero,10011eb4 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
10011e64:	e0bffb17 	ldw	r2,-20(fp)
10011e68:	10800017 	ldw	r2,0(r2)
10011e6c:	10800517 	ldw	r2,20(r2)
10011e70:	e0ffff17 	ldw	r3,-4(fp)
10011e74:	180d883a 	mov	r6,r3
10011e78:	e17ffe17 	ldw	r5,-8(fp)
10011e7c:	e13ffb17 	ldw	r4,-20(fp)
10011e80:	103ee83a 	callr	r2
10011e84:	e0bffc15 	stw	r2,-16(fp)
10011e88:	e0bffc17 	ldw	r2,-16(fp)
10011e8c:	1000070e 	bge	r2,zero,10011eac <read+0xc0>
        {
          ALT_ERRNO = -rval;
10011e90:	0011db00 	call	10011db0 <alt_get_errno>
10011e94:	1007883a 	mov	r3,r2
10011e98:	e0bffc17 	ldw	r2,-16(fp)
10011e9c:	0085c83a 	sub	r2,zero,r2
10011ea0:	18800015 	stw	r2,0(r3)
          return -1;
10011ea4:	00bfffc4 	movi	r2,-1
10011ea8:	00000c06 	br	10011edc <read+0xf0>
        }
        return rval;
10011eac:	e0bffc17 	ldw	r2,-16(fp)
10011eb0:	00000a06 	br	10011edc <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
10011eb4:	0011db00 	call	10011db0 <alt_get_errno>
10011eb8:	1007883a 	mov	r3,r2
10011ebc:	00800344 	movi	r2,13
10011ec0:	18800015 	stw	r2,0(r3)
10011ec4:	00000406 	br	10011ed8 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
10011ec8:	0011db00 	call	10011db0 <alt_get_errno>
10011ecc:	1007883a 	mov	r3,r2
10011ed0:	00801444 	movi	r2,81
10011ed4:	18800015 	stw	r2,0(r3)
  }
  return -1;
10011ed8:	00bfffc4 	movi	r2,-1
}
10011edc:	e037883a 	mov	sp,fp
10011ee0:	dfc00117 	ldw	ra,4(sp)
10011ee4:	df000017 	ldw	fp,0(sp)
10011ee8:	dec00204 	addi	sp,sp,8
10011eec:	f800283a 	ret

10011ef0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
10011ef0:	defffc04 	addi	sp,sp,-16
10011ef4:	dfc00315 	stw	ra,12(sp)
10011ef8:	df000215 	stw	fp,8(sp)
10011efc:	dc000115 	stw	r16,4(sp)
10011f00:	df000204 	addi	fp,sp,8
10011f04:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
10011f08:	e0bffe17 	ldw	r2,-8(fp)
10011f0c:	108000d0 	cmplti	r2,r2,3
10011f10:	1000111e 	bne	r2,zero,10011f58 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
10011f14:	04040074 	movhi	r16,4097
10011f18:	8413f604 	addi	r16,r16,20440
10011f1c:	e0bffe17 	ldw	r2,-8(fp)
10011f20:	01400304 	movi	r5,12
10011f24:	1009883a 	mov	r4,r2
10011f28:	0000fc80 	call	10000fc8 <__mulsi3>
10011f2c:	8085883a 	add	r2,r16,r2
10011f30:	10800204 	addi	r2,r2,8
10011f34:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
10011f38:	04040074 	movhi	r16,4097
10011f3c:	8413f604 	addi	r16,r16,20440
10011f40:	e0bffe17 	ldw	r2,-8(fp)
10011f44:	01400304 	movi	r5,12
10011f48:	1009883a 	mov	r4,r2
10011f4c:	0000fc80 	call	10000fc8 <__mulsi3>
10011f50:	8085883a 	add	r2,r16,r2
10011f54:	10000015 	stw	zero,0(r2)
  }
}
10011f58:	0001883a 	nop
10011f5c:	e6ffff04 	addi	sp,fp,-4
10011f60:	dfc00217 	ldw	ra,8(sp)
10011f64:	df000117 	ldw	fp,4(sp)
10011f68:	dc000017 	ldw	r16,0(sp)
10011f6c:	dec00304 	addi	sp,sp,12
10011f70:	f800283a 	ret

10011f74 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
10011f74:	defff904 	addi	sp,sp,-28
10011f78:	df000615 	stw	fp,24(sp)
10011f7c:	df000604 	addi	fp,sp,24
10011f80:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10011f84:	0005303a 	rdctl	r2,status
10011f88:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10011f8c:	e0fffe17 	ldw	r3,-8(fp)
10011f90:	00bfff84 	movi	r2,-2
10011f94:	1884703a 	and	r2,r3,r2
10011f98:	1001703a 	wrctl	status,r2
  
  return context;
10011f9c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
10011fa0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
10011fa4:	d0a00e17 	ldw	r2,-32712(gp)
10011fa8:	10c000c4 	addi	r3,r2,3
10011fac:	00bfff04 	movi	r2,-4
10011fb0:	1884703a 	and	r2,r3,r2
10011fb4:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
10011fb8:	d0e00e17 	ldw	r3,-32712(gp)
10011fbc:	e0bfff17 	ldw	r2,-4(fp)
10011fc0:	1887883a 	add	r3,r3,r2
10011fc4:	00860034 	movhi	r2,6144
10011fc8:	10800004 	addi	r2,r2,0
10011fcc:	10c0062e 	bgeu	r2,r3,10011fe8 <sbrk+0x74>
10011fd0:	e0bffb17 	ldw	r2,-20(fp)
10011fd4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10011fd8:	e0bffa17 	ldw	r2,-24(fp)
10011fdc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
10011fe0:	00bfffc4 	movi	r2,-1
10011fe4:	00000b06 	br	10012014 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
10011fe8:	d0a00e17 	ldw	r2,-32712(gp)
10011fec:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
10011ff0:	d0e00e17 	ldw	r3,-32712(gp)
10011ff4:	e0bfff17 	ldw	r2,-4(fp)
10011ff8:	1885883a 	add	r2,r3,r2
10011ffc:	d0a00e15 	stw	r2,-32712(gp)
10012000:	e0bffb17 	ldw	r2,-20(fp)
10012004:	e0bffc15 	stw	r2,-16(fp)
10012008:	e0bffc17 	ldw	r2,-16(fp)
1001200c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
10012010:	e0bffd17 	ldw	r2,-12(fp)
} 
10012014:	e037883a 	mov	sp,fp
10012018:	df000017 	ldw	fp,0(sp)
1001201c:	dec00104 	addi	sp,sp,4
10012020:	f800283a 	ret

10012024 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
10012024:	defffd04 	addi	sp,sp,-12
10012028:	dfc00215 	stw	ra,8(sp)
1001202c:	df000115 	stw	fp,4(sp)
10012030:	df000104 	addi	fp,sp,4
10012034:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
10012038:	e13fff17 	ldw	r4,-4(fp)
1001203c:	0012ddc0 	call	10012ddc <alt_busy_sleep>
}
10012040:	e037883a 	mov	sp,fp
10012044:	dfc00117 	ldw	ra,4(sp)
10012048:	df000017 	ldw	fp,0(sp)
1001204c:	dec00204 	addi	sp,sp,8
10012050:	f800283a 	ret

10012054 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10012054:	defffe04 	addi	sp,sp,-8
10012058:	dfc00115 	stw	ra,4(sp)
1001205c:	df000015 	stw	fp,0(sp)
10012060:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10012064:	d0a00d17 	ldw	r2,-32716(gp)
10012068:	10000326 	beq	r2,zero,10012078 <alt_get_errno+0x24>
1001206c:	d0a00d17 	ldw	r2,-32716(gp)
10012070:	103ee83a 	callr	r2
10012074:	00000106 	br	1001207c <alt_get_errno+0x28>
10012078:	d0a78d04 	addi	r2,gp,-25036
}
1001207c:	e037883a 	mov	sp,fp
10012080:	dfc00117 	ldw	ra,4(sp)
10012084:	df000017 	ldw	fp,0(sp)
10012088:	dec00204 	addi	sp,sp,8
1001208c:	f800283a 	ret

10012090 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
10012090:	defff904 	addi	sp,sp,-28
10012094:	dfc00615 	stw	ra,24(sp)
10012098:	df000515 	stw	fp,20(sp)
1001209c:	df000504 	addi	fp,sp,20
100120a0:	e13ffd15 	stw	r4,-12(fp)
100120a4:	e17ffe15 	stw	r5,-8(fp)
100120a8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
100120ac:	e0bffd17 	ldw	r2,-12(fp)
100120b0:	10000816 	blt	r2,zero,100120d4 <write+0x44>
100120b4:	01400304 	movi	r5,12
100120b8:	e13ffd17 	ldw	r4,-12(fp)
100120bc:	0000fc80 	call	10000fc8 <__mulsi3>
100120c0:	1007883a 	mov	r3,r2
100120c4:	00840074 	movhi	r2,4097
100120c8:	1093f604 	addi	r2,r2,20440
100120cc:	1885883a 	add	r2,r3,r2
100120d0:	00000106 	br	100120d8 <write+0x48>
100120d4:	0005883a 	mov	r2,zero
100120d8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
100120dc:	e0bffb17 	ldw	r2,-20(fp)
100120e0:	10002126 	beq	r2,zero,10012168 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
100120e4:	e0bffb17 	ldw	r2,-20(fp)
100120e8:	10800217 	ldw	r2,8(r2)
100120ec:	108000cc 	andi	r2,r2,3
100120f0:	10001826 	beq	r2,zero,10012154 <write+0xc4>
100120f4:	e0bffb17 	ldw	r2,-20(fp)
100120f8:	10800017 	ldw	r2,0(r2)
100120fc:	10800617 	ldw	r2,24(r2)
10012100:	10001426 	beq	r2,zero,10012154 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
10012104:	e0bffb17 	ldw	r2,-20(fp)
10012108:	10800017 	ldw	r2,0(r2)
1001210c:	10800617 	ldw	r2,24(r2)
10012110:	e0ffff17 	ldw	r3,-4(fp)
10012114:	180d883a 	mov	r6,r3
10012118:	e17ffe17 	ldw	r5,-8(fp)
1001211c:	e13ffb17 	ldw	r4,-20(fp)
10012120:	103ee83a 	callr	r2
10012124:	e0bffc15 	stw	r2,-16(fp)
10012128:	e0bffc17 	ldw	r2,-16(fp)
1001212c:	1000070e 	bge	r2,zero,1001214c <write+0xbc>
      {
        ALT_ERRNO = -rval;
10012130:	00120540 	call	10012054 <alt_get_errno>
10012134:	1007883a 	mov	r3,r2
10012138:	e0bffc17 	ldw	r2,-16(fp)
1001213c:	0085c83a 	sub	r2,zero,r2
10012140:	18800015 	stw	r2,0(r3)
        return -1;
10012144:	00bfffc4 	movi	r2,-1
10012148:	00000c06 	br	1001217c <write+0xec>
      }
      return rval;
1001214c:	e0bffc17 	ldw	r2,-16(fp)
10012150:	00000a06 	br	1001217c <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
10012154:	00120540 	call	10012054 <alt_get_errno>
10012158:	1007883a 	mov	r3,r2
1001215c:	00800344 	movi	r2,13
10012160:	18800015 	stw	r2,0(r3)
10012164:	00000406 	br	10012178 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
10012168:	00120540 	call	10012054 <alt_get_errno>
1001216c:	1007883a 	mov	r3,r2
10012170:	00801444 	movi	r2,81
10012174:	18800015 	stw	r2,0(r3)
  }
  return -1;
10012178:	00bfffc4 	movi	r2,-1
}
1001217c:	e037883a 	mov	sp,fp
10012180:	dfc00117 	ldw	ra,4(sp)
10012184:	df000017 	ldw	fp,0(sp)
10012188:	dec00204 	addi	sp,sp,8
1001218c:	f800283a 	ret

10012190 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
10012190:	defffd04 	addi	sp,sp,-12
10012194:	dfc00215 	stw	ra,8(sp)
10012198:	df000115 	stw	fp,4(sp)
1001219c:	df000104 	addi	fp,sp,4
100121a0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
100121a4:	d1600a04 	addi	r5,gp,-32728
100121a8:	e13fff17 	ldw	r4,-4(fp)
100121ac:	0012f900 	call	10012f90 <alt_dev_llist_insert>
}
100121b0:	e037883a 	mov	sp,fp
100121b4:	dfc00117 	ldw	ra,4(sp)
100121b8:	df000017 	ldw	fp,0(sp)
100121bc:	dec00204 	addi	sp,sp,8
100121c0:	f800283a 	ret

100121c4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
100121c4:	defffd04 	addi	sp,sp,-12
100121c8:	dfc00215 	stw	ra,8(sp)
100121cc:	df000115 	stw	fp,4(sp)
100121d0:	df000104 	addi	fp,sp,4
100121d4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
100121d8:	001393c0 	call	1001393c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
100121dc:	00800044 	movi	r2,1
100121e0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
100121e4:	0001883a 	nop
100121e8:	e037883a 	mov	sp,fp
100121ec:	dfc00117 	ldw	ra,4(sp)
100121f0:	df000017 	ldw	fp,0(sp)
100121f4:	dec00204 	addi	sp,sp,8
100121f8:	f800283a 	ret

100121fc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
100121fc:	defffe04 	addi	sp,sp,-8
10012200:	dfc00115 	stw	ra,4(sp)
10012204:	df000015 	stw	fp,0(sp)
10012208:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1001220c:	01800144 	movi	r6,5
10012210:	000b883a 	mov	r5,zero
10012214:	01040074 	movhi	r4,4097
10012218:	21146004 	addi	r4,r4,20864
1001221c:	00123ac0 	call	100123ac <altera_avalon_jtag_uart_init>
10012220:	01040074 	movhi	r4,4097
10012224:	21145604 	addi	r4,r4,20824
10012228:	00121900 	call	10012190 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
1001222c:	0001883a 	nop
}
10012230:	0001883a 	nop
10012234:	e037883a 	mov	sp,fp
10012238:	dfc00117 	ldw	ra,4(sp)
1001223c:	df000017 	ldw	fp,0(sp)
10012240:	dec00204 	addi	sp,sp,8
10012244:	f800283a 	ret

10012248 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
10012248:	defffa04 	addi	sp,sp,-24
1001224c:	dfc00515 	stw	ra,20(sp)
10012250:	df000415 	stw	fp,16(sp)
10012254:	df000404 	addi	fp,sp,16
10012258:	e13ffd15 	stw	r4,-12(fp)
1001225c:	e17ffe15 	stw	r5,-8(fp)
10012260:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
10012264:	e0bffd17 	ldw	r2,-12(fp)
10012268:	10800017 	ldw	r2,0(r2)
1001226c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
10012270:	e0bffc17 	ldw	r2,-16(fp)
10012274:	10c00a04 	addi	r3,r2,40
10012278:	e0bffd17 	ldw	r2,-12(fp)
1001227c:	10800217 	ldw	r2,8(r2)
10012280:	100f883a 	mov	r7,r2
10012284:	e1bfff17 	ldw	r6,-4(fp)
10012288:	e17ffe17 	ldw	r5,-8(fp)
1001228c:	1809883a 	mov	r4,r3
10012290:	00128700 	call	10012870 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
10012294:	e037883a 	mov	sp,fp
10012298:	dfc00117 	ldw	ra,4(sp)
1001229c:	df000017 	ldw	fp,0(sp)
100122a0:	dec00204 	addi	sp,sp,8
100122a4:	f800283a 	ret

100122a8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
100122a8:	defffa04 	addi	sp,sp,-24
100122ac:	dfc00515 	stw	ra,20(sp)
100122b0:	df000415 	stw	fp,16(sp)
100122b4:	df000404 	addi	fp,sp,16
100122b8:	e13ffd15 	stw	r4,-12(fp)
100122bc:	e17ffe15 	stw	r5,-8(fp)
100122c0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
100122c4:	e0bffd17 	ldw	r2,-12(fp)
100122c8:	10800017 	ldw	r2,0(r2)
100122cc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
100122d0:	e0bffc17 	ldw	r2,-16(fp)
100122d4:	10c00a04 	addi	r3,r2,40
100122d8:	e0bffd17 	ldw	r2,-12(fp)
100122dc:	10800217 	ldw	r2,8(r2)
100122e0:	100f883a 	mov	r7,r2
100122e4:	e1bfff17 	ldw	r6,-4(fp)
100122e8:	e17ffe17 	ldw	r5,-8(fp)
100122ec:	1809883a 	mov	r4,r3
100122f0:	0012a8c0 	call	10012a8c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
100122f4:	e037883a 	mov	sp,fp
100122f8:	dfc00117 	ldw	ra,4(sp)
100122fc:	df000017 	ldw	fp,0(sp)
10012300:	dec00204 	addi	sp,sp,8
10012304:	f800283a 	ret

10012308 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
10012308:	defffc04 	addi	sp,sp,-16
1001230c:	dfc00315 	stw	ra,12(sp)
10012310:	df000215 	stw	fp,8(sp)
10012314:	df000204 	addi	fp,sp,8
10012318:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001231c:	e0bfff17 	ldw	r2,-4(fp)
10012320:	10800017 	ldw	r2,0(r2)
10012324:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
10012328:	e0bffe17 	ldw	r2,-8(fp)
1001232c:	10c00a04 	addi	r3,r2,40
10012330:	e0bfff17 	ldw	r2,-4(fp)
10012334:	10800217 	ldw	r2,8(r2)
10012338:	100b883a 	mov	r5,r2
1001233c:	1809883a 	mov	r4,r3
10012340:	00127180 	call	10012718 <altera_avalon_jtag_uart_close>
}
10012344:	e037883a 	mov	sp,fp
10012348:	dfc00117 	ldw	ra,4(sp)
1001234c:	df000017 	ldw	fp,0(sp)
10012350:	dec00204 	addi	sp,sp,8
10012354:	f800283a 	ret

10012358 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
10012358:	defffa04 	addi	sp,sp,-24
1001235c:	dfc00515 	stw	ra,20(sp)
10012360:	df000415 	stw	fp,16(sp)
10012364:	df000404 	addi	fp,sp,16
10012368:	e13ffd15 	stw	r4,-12(fp)
1001236c:	e17ffe15 	stw	r5,-8(fp)
10012370:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
10012374:	e0bffd17 	ldw	r2,-12(fp)
10012378:	10800017 	ldw	r2,0(r2)
1001237c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
10012380:	e0bffc17 	ldw	r2,-16(fp)
10012384:	10800a04 	addi	r2,r2,40
10012388:	e1bfff17 	ldw	r6,-4(fp)
1001238c:	e17ffe17 	ldw	r5,-8(fp)
10012390:	1009883a 	mov	r4,r2
10012394:	00127800 	call	10012780 <altera_avalon_jtag_uart_ioctl>
}
10012398:	e037883a 	mov	sp,fp
1001239c:	dfc00117 	ldw	ra,4(sp)
100123a0:	df000017 	ldw	fp,0(sp)
100123a4:	dec00204 	addi	sp,sp,8
100123a8:	f800283a 	ret

100123ac <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
100123ac:	defffa04 	addi	sp,sp,-24
100123b0:	dfc00515 	stw	ra,20(sp)
100123b4:	df000415 	stw	fp,16(sp)
100123b8:	df000404 	addi	fp,sp,16
100123bc:	e13ffd15 	stw	r4,-12(fp)
100123c0:	e17ffe15 	stw	r5,-8(fp)
100123c4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
100123c8:	e0bffd17 	ldw	r2,-12(fp)
100123cc:	00c00044 	movi	r3,1
100123d0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
100123d4:	e0bffd17 	ldw	r2,-12(fp)
100123d8:	10800017 	ldw	r2,0(r2)
100123dc:	10800104 	addi	r2,r2,4
100123e0:	1007883a 	mov	r3,r2
100123e4:	e0bffd17 	ldw	r2,-12(fp)
100123e8:	10800817 	ldw	r2,32(r2)
100123ec:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
100123f0:	e0bffe17 	ldw	r2,-8(fp)
100123f4:	e0ffff17 	ldw	r3,-4(fp)
100123f8:	d8000015 	stw	zero,0(sp)
100123fc:	e1fffd17 	ldw	r7,-12(fp)
10012400:	01840074 	movhi	r6,4097
10012404:	31891b04 	addi	r6,r6,9324
10012408:	180b883a 	mov	r5,r3
1001240c:	1009883a 	mov	r4,r2
10012410:	00131140 	call	10013114 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
10012414:	e0bffd17 	ldw	r2,-12(fp)
10012418:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1001241c:	e0bffd17 	ldw	r2,-12(fp)
10012420:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
10012424:	d0e79217 	ldw	r3,-25016(gp)
10012428:	e1fffd17 	ldw	r7,-12(fp)
1001242c:	01840074 	movhi	r6,4097
10012430:	31899e04 	addi	r6,r6,9848
10012434:	180b883a 	mov	r5,r3
10012438:	1009883a 	mov	r4,r2
1001243c:	0012cb00 	call	10012cb0 <alt_alarm_start>
10012440:	1000040e 	bge	r2,zero,10012454 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
10012444:	e0fffd17 	ldw	r3,-12(fp)
10012448:	00a00034 	movhi	r2,32768
1001244c:	10bfffc4 	addi	r2,r2,-1
10012450:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
10012454:	0001883a 	nop
10012458:	e037883a 	mov	sp,fp
1001245c:	dfc00117 	ldw	ra,4(sp)
10012460:	df000017 	ldw	fp,0(sp)
10012464:	dec00204 	addi	sp,sp,8
10012468:	f800283a 	ret

1001246c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1001246c:	defff804 	addi	sp,sp,-32
10012470:	df000715 	stw	fp,28(sp)
10012474:	df000704 	addi	fp,sp,28
10012478:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1001247c:	e0bfff17 	ldw	r2,-4(fp)
10012480:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
10012484:	e0bffb17 	ldw	r2,-20(fp)
10012488:	10800017 	ldw	r2,0(r2)
1001248c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10012490:	e0bffc17 	ldw	r2,-16(fp)
10012494:	10800104 	addi	r2,r2,4
10012498:	10800037 	ldwio	r2,0(r2)
1001249c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
100124a0:	e0bffd17 	ldw	r2,-12(fp)
100124a4:	1080c00c 	andi	r2,r2,768
100124a8:	10006d26 	beq	r2,zero,10012660 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
100124ac:	e0bffd17 	ldw	r2,-12(fp)
100124b0:	1080400c 	andi	r2,r2,256
100124b4:	10003526 	beq	r2,zero,1001258c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
100124b8:	00800074 	movhi	r2,1
100124bc:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100124c0:	e0bffb17 	ldw	r2,-20(fp)
100124c4:	10800a17 	ldw	r2,40(r2)
100124c8:	10800044 	addi	r2,r2,1
100124cc:	1081ffcc 	andi	r2,r2,2047
100124d0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
100124d4:	e0bffb17 	ldw	r2,-20(fp)
100124d8:	10c00b17 	ldw	r3,44(r2)
100124dc:	e0bffe17 	ldw	r2,-8(fp)
100124e0:	18801526 	beq	r3,r2,10012538 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
100124e4:	e0bffc17 	ldw	r2,-16(fp)
100124e8:	10800037 	ldwio	r2,0(r2)
100124ec:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
100124f0:	e0bff917 	ldw	r2,-28(fp)
100124f4:	10a0000c 	andi	r2,r2,32768
100124f8:	10001126 	beq	r2,zero,10012540 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
100124fc:	e0bffb17 	ldw	r2,-20(fp)
10012500:	10800a17 	ldw	r2,40(r2)
10012504:	e0fff917 	ldw	r3,-28(fp)
10012508:	1809883a 	mov	r4,r3
1001250c:	e0fffb17 	ldw	r3,-20(fp)
10012510:	1885883a 	add	r2,r3,r2
10012514:	10800e04 	addi	r2,r2,56
10012518:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1001251c:	e0bffb17 	ldw	r2,-20(fp)
10012520:	10800a17 	ldw	r2,40(r2)
10012524:	10800044 	addi	r2,r2,1
10012528:	10c1ffcc 	andi	r3,r2,2047
1001252c:	e0bffb17 	ldw	r2,-20(fp)
10012530:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
10012534:	003fe206 	br	100124c0 <__alt_data_end+0xf80124c0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
10012538:	0001883a 	nop
1001253c:	00000106 	br	10012544 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
10012540:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
10012544:	e0bff917 	ldw	r2,-28(fp)
10012548:	10bfffec 	andhi	r2,r2,65535
1001254c:	10000f26 	beq	r2,zero,1001258c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10012550:	e0bffb17 	ldw	r2,-20(fp)
10012554:	10c00817 	ldw	r3,32(r2)
10012558:	00bfff84 	movi	r2,-2
1001255c:	1886703a 	and	r3,r3,r2
10012560:	e0bffb17 	ldw	r2,-20(fp)
10012564:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
10012568:	e0bffc17 	ldw	r2,-16(fp)
1001256c:	10800104 	addi	r2,r2,4
10012570:	1007883a 	mov	r3,r2
10012574:	e0bffb17 	ldw	r2,-20(fp)
10012578:	10800817 	ldw	r2,32(r2)
1001257c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10012580:	e0bffc17 	ldw	r2,-16(fp)
10012584:	10800104 	addi	r2,r2,4
10012588:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1001258c:	e0bffd17 	ldw	r2,-12(fp)
10012590:	1080800c 	andi	r2,r2,512
10012594:	103fbe26 	beq	r2,zero,10012490 <__alt_data_end+0xf8012490>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
10012598:	e0bffd17 	ldw	r2,-12(fp)
1001259c:	1004d43a 	srli	r2,r2,16
100125a0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
100125a4:	00001406 	br	100125f8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
100125a8:	e0bffc17 	ldw	r2,-16(fp)
100125ac:	e0fffb17 	ldw	r3,-20(fp)
100125b0:	18c00d17 	ldw	r3,52(r3)
100125b4:	e13ffb17 	ldw	r4,-20(fp)
100125b8:	20c7883a 	add	r3,r4,r3
100125bc:	18c20e04 	addi	r3,r3,2104
100125c0:	18c00003 	ldbu	r3,0(r3)
100125c4:	18c03fcc 	andi	r3,r3,255
100125c8:	18c0201c 	xori	r3,r3,128
100125cc:	18ffe004 	addi	r3,r3,-128
100125d0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
100125d4:	e0bffb17 	ldw	r2,-20(fp)
100125d8:	10800d17 	ldw	r2,52(r2)
100125dc:	10800044 	addi	r2,r2,1
100125e0:	10c1ffcc 	andi	r3,r2,2047
100125e4:	e0bffb17 	ldw	r2,-20(fp)
100125e8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
100125ec:	e0bffa17 	ldw	r2,-24(fp)
100125f0:	10bfffc4 	addi	r2,r2,-1
100125f4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
100125f8:	e0bffa17 	ldw	r2,-24(fp)
100125fc:	10000526 	beq	r2,zero,10012614 <altera_avalon_jtag_uart_irq+0x1a8>
10012600:	e0bffb17 	ldw	r2,-20(fp)
10012604:	10c00d17 	ldw	r3,52(r2)
10012608:	e0bffb17 	ldw	r2,-20(fp)
1001260c:	10800c17 	ldw	r2,48(r2)
10012610:	18bfe51e 	bne	r3,r2,100125a8 <__alt_data_end+0xf80125a8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
10012614:	e0bffa17 	ldw	r2,-24(fp)
10012618:	103f9d26 	beq	r2,zero,10012490 <__alt_data_end+0xf8012490>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1001261c:	e0bffb17 	ldw	r2,-20(fp)
10012620:	10c00817 	ldw	r3,32(r2)
10012624:	00bfff44 	movi	r2,-3
10012628:	1886703a 	and	r3,r3,r2
1001262c:	e0bffb17 	ldw	r2,-20(fp)
10012630:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10012634:	e0bffb17 	ldw	r2,-20(fp)
10012638:	10800017 	ldw	r2,0(r2)
1001263c:	10800104 	addi	r2,r2,4
10012640:	1007883a 	mov	r3,r2
10012644:	e0bffb17 	ldw	r2,-20(fp)
10012648:	10800817 	ldw	r2,32(r2)
1001264c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10012650:	e0bffc17 	ldw	r2,-16(fp)
10012654:	10800104 	addi	r2,r2,4
10012658:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1001265c:	003f8c06 	br	10012490 <__alt_data_end+0xf8012490>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
10012660:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
10012664:	0001883a 	nop
10012668:	e037883a 	mov	sp,fp
1001266c:	df000017 	ldw	fp,0(sp)
10012670:	dec00104 	addi	sp,sp,4
10012674:	f800283a 	ret

10012678 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
10012678:	defff804 	addi	sp,sp,-32
1001267c:	df000715 	stw	fp,28(sp)
10012680:	df000704 	addi	fp,sp,28
10012684:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
10012688:	e0bffb17 	ldw	r2,-20(fp)
1001268c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
10012690:	e0bff917 	ldw	r2,-28(fp)
10012694:	10800017 	ldw	r2,0(r2)
10012698:	10800104 	addi	r2,r2,4
1001269c:	10800037 	ldwio	r2,0(r2)
100126a0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
100126a4:	e0bffa17 	ldw	r2,-24(fp)
100126a8:	1081000c 	andi	r2,r2,1024
100126ac:	10000b26 	beq	r2,zero,100126dc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
100126b0:	e0bff917 	ldw	r2,-28(fp)
100126b4:	10800017 	ldw	r2,0(r2)
100126b8:	10800104 	addi	r2,r2,4
100126bc:	1007883a 	mov	r3,r2
100126c0:	e0bff917 	ldw	r2,-28(fp)
100126c4:	10800817 	ldw	r2,32(r2)
100126c8:	10810014 	ori	r2,r2,1024
100126cc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
100126d0:	e0bff917 	ldw	r2,-28(fp)
100126d4:	10000915 	stw	zero,36(r2)
100126d8:	00000a06 	br	10012704 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
100126dc:	e0bff917 	ldw	r2,-28(fp)
100126e0:	10c00917 	ldw	r3,36(r2)
100126e4:	00a00034 	movhi	r2,32768
100126e8:	10bfff04 	addi	r2,r2,-4
100126ec:	10c00536 	bltu	r2,r3,10012704 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
100126f0:	e0bff917 	ldw	r2,-28(fp)
100126f4:	10800917 	ldw	r2,36(r2)
100126f8:	10c00044 	addi	r3,r2,1
100126fc:	e0bff917 	ldw	r2,-28(fp)
10012700:	10c00915 	stw	r3,36(r2)
10012704:	d0a79217 	ldw	r2,-25016(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
10012708:	e037883a 	mov	sp,fp
1001270c:	df000017 	ldw	fp,0(sp)
10012710:	dec00104 	addi	sp,sp,4
10012714:	f800283a 	ret

10012718 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
10012718:	defffd04 	addi	sp,sp,-12
1001271c:	df000215 	stw	fp,8(sp)
10012720:	df000204 	addi	fp,sp,8
10012724:	e13ffe15 	stw	r4,-8(fp)
10012728:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1001272c:	00000506 	br	10012744 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
10012730:	e0bfff17 	ldw	r2,-4(fp)
10012734:	1090000c 	andi	r2,r2,16384
10012738:	10000226 	beq	r2,zero,10012744 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1001273c:	00bffd44 	movi	r2,-11
10012740:	00000b06 	br	10012770 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10012744:	e0bffe17 	ldw	r2,-8(fp)
10012748:	10c00d17 	ldw	r3,52(r2)
1001274c:	e0bffe17 	ldw	r2,-8(fp)
10012750:	10800c17 	ldw	r2,48(r2)
10012754:	18800526 	beq	r3,r2,1001276c <altera_avalon_jtag_uart_close+0x54>
10012758:	e0bffe17 	ldw	r2,-8(fp)
1001275c:	10c00917 	ldw	r3,36(r2)
10012760:	e0bffe17 	ldw	r2,-8(fp)
10012764:	10800117 	ldw	r2,4(r2)
10012768:	18bff136 	bltu	r3,r2,10012730 <__alt_data_end+0xf8012730>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1001276c:	0005883a 	mov	r2,zero
}
10012770:	e037883a 	mov	sp,fp
10012774:	df000017 	ldw	fp,0(sp)
10012778:	dec00104 	addi	sp,sp,4
1001277c:	f800283a 	ret

10012780 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
10012780:	defffa04 	addi	sp,sp,-24
10012784:	df000515 	stw	fp,20(sp)
10012788:	df000504 	addi	fp,sp,20
1001278c:	e13ffd15 	stw	r4,-12(fp)
10012790:	e17ffe15 	stw	r5,-8(fp)
10012794:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
10012798:	00bff9c4 	movi	r2,-25
1001279c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
100127a0:	e0bffe17 	ldw	r2,-8(fp)
100127a4:	10da8060 	cmpeqi	r3,r2,27137
100127a8:	1800031e 	bne	r3,zero,100127b8 <altera_avalon_jtag_uart_ioctl+0x38>
100127ac:	109a80a0 	cmpeqi	r2,r2,27138
100127b0:	1000181e 	bne	r2,zero,10012814 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
100127b4:	00002906 	br	1001285c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
100127b8:	e0bffd17 	ldw	r2,-12(fp)
100127bc:	10c00117 	ldw	r3,4(r2)
100127c0:	00a00034 	movhi	r2,32768
100127c4:	10bfffc4 	addi	r2,r2,-1
100127c8:	18802126 	beq	r3,r2,10012850 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
100127cc:	e0bfff17 	ldw	r2,-4(fp)
100127d0:	10800017 	ldw	r2,0(r2)
100127d4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
100127d8:	e0bffc17 	ldw	r2,-16(fp)
100127dc:	10800090 	cmplti	r2,r2,2
100127e0:	1000061e 	bne	r2,zero,100127fc <altera_avalon_jtag_uart_ioctl+0x7c>
100127e4:	e0fffc17 	ldw	r3,-16(fp)
100127e8:	00a00034 	movhi	r2,32768
100127ec:	10bfffc4 	addi	r2,r2,-1
100127f0:	18800226 	beq	r3,r2,100127fc <altera_avalon_jtag_uart_ioctl+0x7c>
100127f4:	e0bffc17 	ldw	r2,-16(fp)
100127f8:	00000206 	br	10012804 <altera_avalon_jtag_uart_ioctl+0x84>
100127fc:	00a00034 	movhi	r2,32768
10012800:	10bfff84 	addi	r2,r2,-2
10012804:	e0fffd17 	ldw	r3,-12(fp)
10012808:	18800115 	stw	r2,4(r3)
      rc = 0;
1001280c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
10012810:	00000f06 	br	10012850 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
10012814:	e0bffd17 	ldw	r2,-12(fp)
10012818:	10c00117 	ldw	r3,4(r2)
1001281c:	00a00034 	movhi	r2,32768
10012820:	10bfffc4 	addi	r2,r2,-1
10012824:	18800c26 	beq	r3,r2,10012858 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
10012828:	e0bffd17 	ldw	r2,-12(fp)
1001282c:	10c00917 	ldw	r3,36(r2)
10012830:	e0bffd17 	ldw	r2,-12(fp)
10012834:	10800117 	ldw	r2,4(r2)
10012838:	1885803a 	cmpltu	r2,r3,r2
1001283c:	10c03fcc 	andi	r3,r2,255
10012840:	e0bfff17 	ldw	r2,-4(fp)
10012844:	10c00015 	stw	r3,0(r2)
      rc = 0;
10012848:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1001284c:	00000206 	br	10012858 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
10012850:	0001883a 	nop
10012854:	00000106 	br	1001285c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
10012858:	0001883a 	nop

  default:
    break;
  }

  return rc;
1001285c:	e0bffb17 	ldw	r2,-20(fp)
}
10012860:	e037883a 	mov	sp,fp
10012864:	df000017 	ldw	fp,0(sp)
10012868:	dec00104 	addi	sp,sp,4
1001286c:	f800283a 	ret

10012870 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
10012870:	defff304 	addi	sp,sp,-52
10012874:	dfc00c15 	stw	ra,48(sp)
10012878:	df000b15 	stw	fp,44(sp)
1001287c:	df000b04 	addi	fp,sp,44
10012880:	e13ffc15 	stw	r4,-16(fp)
10012884:	e17ffd15 	stw	r5,-12(fp)
10012888:	e1bffe15 	stw	r6,-8(fp)
1001288c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
10012890:	e0bffd17 	ldw	r2,-12(fp)
10012894:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
10012898:	00004706 	br	100129b8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1001289c:	e0bffc17 	ldw	r2,-16(fp)
100128a0:	10800a17 	ldw	r2,40(r2)
100128a4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
100128a8:	e0bffc17 	ldw	r2,-16(fp)
100128ac:	10800b17 	ldw	r2,44(r2)
100128b0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
100128b4:	e0fff717 	ldw	r3,-36(fp)
100128b8:	e0bff817 	ldw	r2,-32(fp)
100128bc:	18800536 	bltu	r3,r2,100128d4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
100128c0:	e0fff717 	ldw	r3,-36(fp)
100128c4:	e0bff817 	ldw	r2,-32(fp)
100128c8:	1885c83a 	sub	r2,r3,r2
100128cc:	e0bff615 	stw	r2,-40(fp)
100128d0:	00000406 	br	100128e4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
100128d4:	00c20004 	movi	r3,2048
100128d8:	e0bff817 	ldw	r2,-32(fp)
100128dc:	1885c83a 	sub	r2,r3,r2
100128e0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
100128e4:	e0bff617 	ldw	r2,-40(fp)
100128e8:	10001e26 	beq	r2,zero,10012964 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
100128ec:	e0fffe17 	ldw	r3,-8(fp)
100128f0:	e0bff617 	ldw	r2,-40(fp)
100128f4:	1880022e 	bgeu	r3,r2,10012900 <altera_avalon_jtag_uart_read+0x90>
        n = space;
100128f8:	e0bffe17 	ldw	r2,-8(fp)
100128fc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
10012900:	e0bffc17 	ldw	r2,-16(fp)
10012904:	10c00e04 	addi	r3,r2,56
10012908:	e0bff817 	ldw	r2,-32(fp)
1001290c:	1885883a 	add	r2,r3,r2
10012910:	e1bff617 	ldw	r6,-40(fp)
10012914:	100b883a 	mov	r5,r2
10012918:	e13ff517 	ldw	r4,-44(fp)
1001291c:	0008fe00 	call	10008fe0 <memcpy>
      ptr   += n;
10012920:	e0fff517 	ldw	r3,-44(fp)
10012924:	e0bff617 	ldw	r2,-40(fp)
10012928:	1885883a 	add	r2,r3,r2
1001292c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
10012930:	e0fffe17 	ldw	r3,-8(fp)
10012934:	e0bff617 	ldw	r2,-40(fp)
10012938:	1885c83a 	sub	r2,r3,r2
1001293c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10012940:	e0fff817 	ldw	r3,-32(fp)
10012944:	e0bff617 	ldw	r2,-40(fp)
10012948:	1885883a 	add	r2,r3,r2
1001294c:	10c1ffcc 	andi	r3,r2,2047
10012950:	e0bffc17 	ldw	r2,-16(fp)
10012954:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
10012958:	e0bffe17 	ldw	r2,-8(fp)
1001295c:	00bfcf16 	blt	zero,r2,1001289c <__alt_data_end+0xf801289c>
10012960:	00000106 	br	10012968 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
10012964:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
10012968:	e0fff517 	ldw	r3,-44(fp)
1001296c:	e0bffd17 	ldw	r2,-12(fp)
10012970:	1880141e 	bne	r3,r2,100129c4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
10012974:	e0bfff17 	ldw	r2,-4(fp)
10012978:	1090000c 	andi	r2,r2,16384
1001297c:	1000131e 	bne	r2,zero,100129cc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
10012980:	0001883a 	nop
10012984:	e0bffc17 	ldw	r2,-16(fp)
10012988:	10c00a17 	ldw	r3,40(r2)
1001298c:	e0bff717 	ldw	r2,-36(fp)
10012990:	1880051e 	bne	r3,r2,100129a8 <altera_avalon_jtag_uart_read+0x138>
10012994:	e0bffc17 	ldw	r2,-16(fp)
10012998:	10c00917 	ldw	r3,36(r2)
1001299c:	e0bffc17 	ldw	r2,-16(fp)
100129a0:	10800117 	ldw	r2,4(r2)
100129a4:	18bff736 	bltu	r3,r2,10012984 <__alt_data_end+0xf8012984>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
100129a8:	e0bffc17 	ldw	r2,-16(fp)
100129ac:	10c00a17 	ldw	r3,40(r2)
100129b0:	e0bff717 	ldw	r2,-36(fp)
100129b4:	18800726 	beq	r3,r2,100129d4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
100129b8:	e0bffe17 	ldw	r2,-8(fp)
100129bc:	00bfb716 	blt	zero,r2,1001289c <__alt_data_end+0xf801289c>
100129c0:	00000506 	br	100129d8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
100129c4:	0001883a 	nop
100129c8:	00000306 	br	100129d8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
100129cc:	0001883a 	nop
100129d0:	00000106 	br	100129d8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
100129d4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
100129d8:	e0fff517 	ldw	r3,-44(fp)
100129dc:	e0bffd17 	ldw	r2,-12(fp)
100129e0:	18801826 	beq	r3,r2,10012a44 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
100129e4:	0005303a 	rdctl	r2,status
100129e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100129ec:	e0fffb17 	ldw	r3,-20(fp)
100129f0:	00bfff84 	movi	r2,-2
100129f4:	1884703a 	and	r2,r3,r2
100129f8:	1001703a 	wrctl	status,r2
  
  return context;
100129fc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
10012a00:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10012a04:	e0bffc17 	ldw	r2,-16(fp)
10012a08:	10800817 	ldw	r2,32(r2)
10012a0c:	10c00054 	ori	r3,r2,1
10012a10:	e0bffc17 	ldw	r2,-16(fp)
10012a14:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10012a18:	e0bffc17 	ldw	r2,-16(fp)
10012a1c:	10800017 	ldw	r2,0(r2)
10012a20:	10800104 	addi	r2,r2,4
10012a24:	1007883a 	mov	r3,r2
10012a28:	e0bffc17 	ldw	r2,-16(fp)
10012a2c:	10800817 	ldw	r2,32(r2)
10012a30:	18800035 	stwio	r2,0(r3)
10012a34:	e0bffa17 	ldw	r2,-24(fp)
10012a38:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012a3c:	e0bff917 	ldw	r2,-28(fp)
10012a40:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
10012a44:	e0fff517 	ldw	r3,-44(fp)
10012a48:	e0bffd17 	ldw	r2,-12(fp)
10012a4c:	18800426 	beq	r3,r2,10012a60 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
10012a50:	e0fff517 	ldw	r3,-44(fp)
10012a54:	e0bffd17 	ldw	r2,-12(fp)
10012a58:	1885c83a 	sub	r2,r3,r2
10012a5c:	00000606 	br	10012a78 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
10012a60:	e0bfff17 	ldw	r2,-4(fp)
10012a64:	1090000c 	andi	r2,r2,16384
10012a68:	10000226 	beq	r2,zero,10012a74 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
10012a6c:	00bffd44 	movi	r2,-11
10012a70:	00000106 	br	10012a78 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
10012a74:	00bffec4 	movi	r2,-5
}
10012a78:	e037883a 	mov	sp,fp
10012a7c:	dfc00117 	ldw	ra,4(sp)
10012a80:	df000017 	ldw	fp,0(sp)
10012a84:	dec00204 	addi	sp,sp,8
10012a88:	f800283a 	ret

10012a8c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
10012a8c:	defff304 	addi	sp,sp,-52
10012a90:	dfc00c15 	stw	ra,48(sp)
10012a94:	df000b15 	stw	fp,44(sp)
10012a98:	df000b04 	addi	fp,sp,44
10012a9c:	e13ffc15 	stw	r4,-16(fp)
10012aa0:	e17ffd15 	stw	r5,-12(fp)
10012aa4:	e1bffe15 	stw	r6,-8(fp)
10012aa8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
10012aac:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
10012ab0:	e0bffd17 	ldw	r2,-12(fp)
10012ab4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
10012ab8:	00003706 	br	10012b98 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
10012abc:	e0bffc17 	ldw	r2,-16(fp)
10012ac0:	10800c17 	ldw	r2,48(r2)
10012ac4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
10012ac8:	e0bffc17 	ldw	r2,-16(fp)
10012acc:	10800d17 	ldw	r2,52(r2)
10012ad0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
10012ad4:	e0fff917 	ldw	r3,-28(fp)
10012ad8:	e0bff517 	ldw	r2,-44(fp)
10012adc:	1880062e 	bgeu	r3,r2,10012af8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
10012ae0:	e0fff517 	ldw	r3,-44(fp)
10012ae4:	e0bff917 	ldw	r2,-28(fp)
10012ae8:	1885c83a 	sub	r2,r3,r2
10012aec:	10bfffc4 	addi	r2,r2,-1
10012af0:	e0bff615 	stw	r2,-40(fp)
10012af4:	00000b06 	br	10012b24 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
10012af8:	e0bff517 	ldw	r2,-44(fp)
10012afc:	10000526 	beq	r2,zero,10012b14 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
10012b00:	00c20004 	movi	r3,2048
10012b04:	e0bff917 	ldw	r2,-28(fp)
10012b08:	1885c83a 	sub	r2,r3,r2
10012b0c:	e0bff615 	stw	r2,-40(fp)
10012b10:	00000406 	br	10012b24 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
10012b14:	00c1ffc4 	movi	r3,2047
10012b18:	e0bff917 	ldw	r2,-28(fp)
10012b1c:	1885c83a 	sub	r2,r3,r2
10012b20:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
10012b24:	e0bff617 	ldw	r2,-40(fp)
10012b28:	10001e26 	beq	r2,zero,10012ba4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
10012b2c:	e0fffe17 	ldw	r3,-8(fp)
10012b30:	e0bff617 	ldw	r2,-40(fp)
10012b34:	1880022e 	bgeu	r3,r2,10012b40 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
10012b38:	e0bffe17 	ldw	r2,-8(fp)
10012b3c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
10012b40:	e0bffc17 	ldw	r2,-16(fp)
10012b44:	10c20e04 	addi	r3,r2,2104
10012b48:	e0bff917 	ldw	r2,-28(fp)
10012b4c:	1885883a 	add	r2,r3,r2
10012b50:	e1bff617 	ldw	r6,-40(fp)
10012b54:	e17ffd17 	ldw	r5,-12(fp)
10012b58:	1009883a 	mov	r4,r2
10012b5c:	0008fe00 	call	10008fe0 <memcpy>
      ptr   += n;
10012b60:	e0fffd17 	ldw	r3,-12(fp)
10012b64:	e0bff617 	ldw	r2,-40(fp)
10012b68:	1885883a 	add	r2,r3,r2
10012b6c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
10012b70:	e0fffe17 	ldw	r3,-8(fp)
10012b74:	e0bff617 	ldw	r2,-40(fp)
10012b78:	1885c83a 	sub	r2,r3,r2
10012b7c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10012b80:	e0fff917 	ldw	r3,-28(fp)
10012b84:	e0bff617 	ldw	r2,-40(fp)
10012b88:	1885883a 	add	r2,r3,r2
10012b8c:	10c1ffcc 	andi	r3,r2,2047
10012b90:	e0bffc17 	ldw	r2,-16(fp)
10012b94:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
10012b98:	e0bffe17 	ldw	r2,-8(fp)
10012b9c:	00bfc716 	blt	zero,r2,10012abc <__alt_data_end+0xf8012abc>
10012ba0:	00000106 	br	10012ba8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
10012ba4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10012ba8:	0005303a 	rdctl	r2,status
10012bac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10012bb0:	e0fffb17 	ldw	r3,-20(fp)
10012bb4:	00bfff84 	movi	r2,-2
10012bb8:	1884703a 	and	r2,r3,r2
10012bbc:	1001703a 	wrctl	status,r2
  
  return context;
10012bc0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
10012bc4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10012bc8:	e0bffc17 	ldw	r2,-16(fp)
10012bcc:	10800817 	ldw	r2,32(r2)
10012bd0:	10c00094 	ori	r3,r2,2
10012bd4:	e0bffc17 	ldw	r2,-16(fp)
10012bd8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10012bdc:	e0bffc17 	ldw	r2,-16(fp)
10012be0:	10800017 	ldw	r2,0(r2)
10012be4:	10800104 	addi	r2,r2,4
10012be8:	1007883a 	mov	r3,r2
10012bec:	e0bffc17 	ldw	r2,-16(fp)
10012bf0:	10800817 	ldw	r2,32(r2)
10012bf4:	18800035 	stwio	r2,0(r3)
10012bf8:	e0bffa17 	ldw	r2,-24(fp)
10012bfc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012c00:	e0bff817 	ldw	r2,-32(fp)
10012c04:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
10012c08:	e0bffe17 	ldw	r2,-8(fp)
10012c0c:	0080100e 	bge	zero,r2,10012c50 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
10012c10:	e0bfff17 	ldw	r2,-4(fp)
10012c14:	1090000c 	andi	r2,r2,16384
10012c18:	1000101e 	bne	r2,zero,10012c5c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
10012c1c:	0001883a 	nop
10012c20:	e0bffc17 	ldw	r2,-16(fp)
10012c24:	10c00d17 	ldw	r3,52(r2)
10012c28:	e0bff517 	ldw	r2,-44(fp)
10012c2c:	1880051e 	bne	r3,r2,10012c44 <altera_avalon_jtag_uart_write+0x1b8>
10012c30:	e0bffc17 	ldw	r2,-16(fp)
10012c34:	10c00917 	ldw	r3,36(r2)
10012c38:	e0bffc17 	ldw	r2,-16(fp)
10012c3c:	10800117 	ldw	r2,4(r2)
10012c40:	18bff736 	bltu	r3,r2,10012c20 <__alt_data_end+0xf8012c20>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
10012c44:	e0bffc17 	ldw	r2,-16(fp)
10012c48:	10800917 	ldw	r2,36(r2)
10012c4c:	1000051e 	bne	r2,zero,10012c64 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
10012c50:	e0bffe17 	ldw	r2,-8(fp)
10012c54:	00bfd016 	blt	zero,r2,10012b98 <__alt_data_end+0xf8012b98>
10012c58:	00000306 	br	10012c68 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
10012c5c:	0001883a 	nop
10012c60:	00000106 	br	10012c68 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
10012c64:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
10012c68:	e0fffd17 	ldw	r3,-12(fp)
10012c6c:	e0bff717 	ldw	r2,-36(fp)
10012c70:	18800426 	beq	r3,r2,10012c84 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
10012c74:	e0fffd17 	ldw	r3,-12(fp)
10012c78:	e0bff717 	ldw	r2,-36(fp)
10012c7c:	1885c83a 	sub	r2,r3,r2
10012c80:	00000606 	br	10012c9c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
10012c84:	e0bfff17 	ldw	r2,-4(fp)
10012c88:	1090000c 	andi	r2,r2,16384
10012c8c:	10000226 	beq	r2,zero,10012c98 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
10012c90:	00bffd44 	movi	r2,-11
10012c94:	00000106 	br	10012c9c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
10012c98:	00bffec4 	movi	r2,-5
}
10012c9c:	e037883a 	mov	sp,fp
10012ca0:	dfc00117 	ldw	ra,4(sp)
10012ca4:	df000017 	ldw	fp,0(sp)
10012ca8:	dec00204 	addi	sp,sp,8
10012cac:	f800283a 	ret

10012cb0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
10012cb0:	defff504 	addi	sp,sp,-44
10012cb4:	df000a15 	stw	fp,40(sp)
10012cb8:	df000a04 	addi	fp,sp,40
10012cbc:	e13ffc15 	stw	r4,-16(fp)
10012cc0:	e17ffd15 	stw	r5,-12(fp)
10012cc4:	e1bffe15 	stw	r6,-8(fp)
10012cc8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
10012ccc:	e03ff615 	stw	zero,-40(fp)
10012cd0:	d0a79217 	ldw	r2,-25016(gp)
  
  if (alt_ticks_per_second ())
10012cd4:	10003c26 	beq	r2,zero,10012dc8 <alt_alarm_start+0x118>
  {
    if (alarm)
10012cd8:	e0bffc17 	ldw	r2,-16(fp)
10012cdc:	10003826 	beq	r2,zero,10012dc0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
10012ce0:	e0bffc17 	ldw	r2,-16(fp)
10012ce4:	e0fffe17 	ldw	r3,-8(fp)
10012ce8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
10012cec:	e0bffc17 	ldw	r2,-16(fp)
10012cf0:	e0ffff17 	ldw	r3,-4(fp)
10012cf4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10012cf8:	0005303a 	rdctl	r2,status
10012cfc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10012d00:	e0fff917 	ldw	r3,-28(fp)
10012d04:	00bfff84 	movi	r2,-2
10012d08:	1884703a 	and	r2,r3,r2
10012d0c:	1001703a 	wrctl	status,r2
  
  return context;
10012d10:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
10012d14:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
10012d18:	d0a79317 	ldw	r2,-25012(gp)
      
      current_nticks = alt_nticks();
10012d1c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
10012d20:	e0fffd17 	ldw	r3,-12(fp)
10012d24:	e0bff617 	ldw	r2,-40(fp)
10012d28:	1885883a 	add	r2,r3,r2
10012d2c:	10c00044 	addi	r3,r2,1
10012d30:	e0bffc17 	ldw	r2,-16(fp)
10012d34:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
10012d38:	e0bffc17 	ldw	r2,-16(fp)
10012d3c:	10c00217 	ldw	r3,8(r2)
10012d40:	e0bff617 	ldw	r2,-40(fp)
10012d44:	1880042e 	bgeu	r3,r2,10012d58 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
10012d48:	e0bffc17 	ldw	r2,-16(fp)
10012d4c:	00c00044 	movi	r3,1
10012d50:	10c00405 	stb	r3,16(r2)
10012d54:	00000206 	br	10012d60 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
10012d58:	e0bffc17 	ldw	r2,-16(fp)
10012d5c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
10012d60:	e0bffc17 	ldw	r2,-16(fp)
10012d64:	d0e01004 	addi	r3,gp,-32704
10012d68:	e0fffa15 	stw	r3,-24(fp)
10012d6c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10012d70:	e0bffb17 	ldw	r2,-20(fp)
10012d74:	e0fffa17 	ldw	r3,-24(fp)
10012d78:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10012d7c:	e0bffa17 	ldw	r2,-24(fp)
10012d80:	10c00017 	ldw	r3,0(r2)
10012d84:	e0bffb17 	ldw	r2,-20(fp)
10012d88:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10012d8c:	e0bffa17 	ldw	r2,-24(fp)
10012d90:	10800017 	ldw	r2,0(r2)
10012d94:	e0fffb17 	ldw	r3,-20(fp)
10012d98:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10012d9c:	e0bffa17 	ldw	r2,-24(fp)
10012da0:	e0fffb17 	ldw	r3,-20(fp)
10012da4:	10c00015 	stw	r3,0(r2)
10012da8:	e0bff817 	ldw	r2,-32(fp)
10012dac:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10012db0:	e0bff717 	ldw	r2,-36(fp)
10012db4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
10012db8:	0005883a 	mov	r2,zero
10012dbc:	00000306 	br	10012dcc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
10012dc0:	00bffa84 	movi	r2,-22
10012dc4:	00000106 	br	10012dcc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
10012dc8:	00bfde84 	movi	r2,-134
  }
}
10012dcc:	e037883a 	mov	sp,fp
10012dd0:	df000017 	ldw	fp,0(sp)
10012dd4:	dec00104 	addi	sp,sp,4
10012dd8:	f800283a 	ret

10012ddc <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
10012ddc:	defffa04 	addi	sp,sp,-24
10012de0:	dfc00515 	stw	ra,20(sp)
10012de4:	df000415 	stw	fp,16(sp)
10012de8:	df000404 	addi	fp,sp,16
10012dec:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
10012df0:	00800244 	movi	r2,9
10012df4:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
10012df8:	014003f4 	movhi	r5,15
10012dfc:	29509004 	addi	r5,r5,16960
10012e00:	e13ffd17 	ldw	r4,-12(fp)
10012e04:	0000fc80 	call	10000fc8 <__mulsi3>
10012e08:	100b883a 	mov	r5,r2
10012e0c:	0100bef4 	movhi	r4,763
10012e10:	213c2004 	addi	r4,r4,-3968
10012e14:	0000f0c0 	call	10000f0c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
10012e18:	100b883a 	mov	r5,r2
10012e1c:	01200034 	movhi	r4,32768
10012e20:	213fffc4 	addi	r4,r4,-1
10012e24:	0000f0c0 	call	10000f0c <__udivsi3>
10012e28:	100b883a 	mov	r5,r2
10012e2c:	e13fff17 	ldw	r4,-4(fp)
10012e30:	0000f0c0 	call	10000f0c <__udivsi3>
10012e34:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
10012e38:	e0bffe17 	ldw	r2,-8(fp)
10012e3c:	10002a26 	beq	r2,zero,10012ee8 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
10012e40:	e03ffc15 	stw	zero,-16(fp)
10012e44:	00001706 	br	10012ea4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
10012e48:	00a00034 	movhi	r2,32768
10012e4c:	10bfffc4 	addi	r2,r2,-1
10012e50:	10bfffc4 	addi	r2,r2,-1
10012e54:	103ffe1e 	bne	r2,zero,10012e50 <__alt_data_end+0xf8012e50>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
10012e58:	014003f4 	movhi	r5,15
10012e5c:	29509004 	addi	r5,r5,16960
10012e60:	e13ffd17 	ldw	r4,-12(fp)
10012e64:	0000fc80 	call	10000fc8 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
10012e68:	100b883a 	mov	r5,r2
10012e6c:	0100bef4 	movhi	r4,763
10012e70:	213c2004 	addi	r4,r4,-3968
10012e74:	0000f0c0 	call	10000f0c <__udivsi3>
10012e78:	100b883a 	mov	r5,r2
10012e7c:	01200034 	movhi	r4,32768
10012e80:	213fffc4 	addi	r4,r4,-1
10012e84:	0000f0c0 	call	10000f0c <__udivsi3>
10012e88:	1007883a 	mov	r3,r2
10012e8c:	e0bfff17 	ldw	r2,-4(fp)
10012e90:	10c5c83a 	sub	r2,r2,r3
10012e94:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
10012e98:	e0bffc17 	ldw	r2,-16(fp)
10012e9c:	10800044 	addi	r2,r2,1
10012ea0:	e0bffc15 	stw	r2,-16(fp)
10012ea4:	e0fffc17 	ldw	r3,-16(fp)
10012ea8:	e0bffe17 	ldw	r2,-8(fp)
10012eac:	18bfe616 	blt	r3,r2,10012e48 <__alt_data_end+0xf8012e48>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
10012eb0:	014003f4 	movhi	r5,15
10012eb4:	29509004 	addi	r5,r5,16960
10012eb8:	e13ffd17 	ldw	r4,-12(fp)
10012ebc:	0000fc80 	call	10000fc8 <__mulsi3>
10012ec0:	100b883a 	mov	r5,r2
10012ec4:	0100bef4 	movhi	r4,763
10012ec8:	213c2004 	addi	r4,r4,-3968
10012ecc:	0000f0c0 	call	10000f0c <__udivsi3>
10012ed0:	e17fff17 	ldw	r5,-4(fp)
10012ed4:	1009883a 	mov	r4,r2
10012ed8:	0000fc80 	call	10000fc8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
10012edc:	10bfffc4 	addi	r2,r2,-1
10012ee0:	103ffe1e 	bne	r2,zero,10012edc <__alt_data_end+0xf8012edc>
10012ee4:	00000d06 	br	10012f1c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
10012ee8:	014003f4 	movhi	r5,15
10012eec:	29509004 	addi	r5,r5,16960
10012ef0:	e13ffd17 	ldw	r4,-12(fp)
10012ef4:	0000fc80 	call	10000fc8 <__mulsi3>
10012ef8:	100b883a 	mov	r5,r2
10012efc:	0100bef4 	movhi	r4,763
10012f00:	213c2004 	addi	r4,r4,-3968
10012f04:	0000f0c0 	call	10000f0c <__udivsi3>
10012f08:	e17fff17 	ldw	r5,-4(fp)
10012f0c:	1009883a 	mov	r4,r2
10012f10:	0000fc80 	call	10000fc8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
10012f14:	10bfffc4 	addi	r2,r2,-1
10012f18:	00bffe16 	blt	zero,r2,10012f14 <__alt_data_end+0xf8012f14>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
10012f1c:	0005883a 	mov	r2,zero
}
10012f20:	e037883a 	mov	sp,fp
10012f24:	dfc00117 	ldw	ra,4(sp)
10012f28:	df000017 	ldw	fp,0(sp)
10012f2c:	dec00204 	addi	sp,sp,8
10012f30:	f800283a 	ret

10012f34 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
10012f34:	deffff04 	addi	sp,sp,-4
10012f38:	df000015 	stw	fp,0(sp)
10012f3c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
10012f40:	0001883a 	nop
10012f44:	e037883a 	mov	sp,fp
10012f48:	df000017 	ldw	fp,0(sp)
10012f4c:	dec00104 	addi	sp,sp,4
10012f50:	f800283a 	ret

10012f54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10012f54:	defffe04 	addi	sp,sp,-8
10012f58:	dfc00115 	stw	ra,4(sp)
10012f5c:	df000015 	stw	fp,0(sp)
10012f60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10012f64:	d0a00d17 	ldw	r2,-32716(gp)
10012f68:	10000326 	beq	r2,zero,10012f78 <alt_get_errno+0x24>
10012f6c:	d0a00d17 	ldw	r2,-32716(gp)
10012f70:	103ee83a 	callr	r2
10012f74:	00000106 	br	10012f7c <alt_get_errno+0x28>
10012f78:	d0a78d04 	addi	r2,gp,-25036
}
10012f7c:	e037883a 	mov	sp,fp
10012f80:	dfc00117 	ldw	ra,4(sp)
10012f84:	df000017 	ldw	fp,0(sp)
10012f88:	dec00204 	addi	sp,sp,8
10012f8c:	f800283a 	ret

10012f90 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
10012f90:	defffa04 	addi	sp,sp,-24
10012f94:	dfc00515 	stw	ra,20(sp)
10012f98:	df000415 	stw	fp,16(sp)
10012f9c:	df000404 	addi	fp,sp,16
10012fa0:	e13ffe15 	stw	r4,-8(fp)
10012fa4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
10012fa8:	e0bffe17 	ldw	r2,-8(fp)
10012fac:	10000326 	beq	r2,zero,10012fbc <alt_dev_llist_insert+0x2c>
10012fb0:	e0bffe17 	ldw	r2,-8(fp)
10012fb4:	10800217 	ldw	r2,8(r2)
10012fb8:	1000061e 	bne	r2,zero,10012fd4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
10012fbc:	0012f540 	call	10012f54 <alt_get_errno>
10012fc0:	1007883a 	mov	r3,r2
10012fc4:	00800584 	movi	r2,22
10012fc8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
10012fcc:	00bffa84 	movi	r2,-22
10012fd0:	00001306 	br	10013020 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
10012fd4:	e0bffe17 	ldw	r2,-8(fp)
10012fd8:	e0ffff17 	ldw	r3,-4(fp)
10012fdc:	e0fffc15 	stw	r3,-16(fp)
10012fe0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10012fe4:	e0bffd17 	ldw	r2,-12(fp)
10012fe8:	e0fffc17 	ldw	r3,-16(fp)
10012fec:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10012ff0:	e0bffc17 	ldw	r2,-16(fp)
10012ff4:	10c00017 	ldw	r3,0(r2)
10012ff8:	e0bffd17 	ldw	r2,-12(fp)
10012ffc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10013000:	e0bffc17 	ldw	r2,-16(fp)
10013004:	10800017 	ldw	r2,0(r2)
10013008:	e0fffd17 	ldw	r3,-12(fp)
1001300c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10013010:	e0bffc17 	ldw	r2,-16(fp)
10013014:	e0fffd17 	ldw	r3,-12(fp)
10013018:	10c00015 	stw	r3,0(r2)

  return 0;  
1001301c:	0005883a 	mov	r2,zero
}
10013020:	e037883a 	mov	sp,fp
10013024:	dfc00117 	ldw	ra,4(sp)
10013028:	df000017 	ldw	fp,0(sp)
1001302c:	dec00204 	addi	sp,sp,8
10013030:	f800283a 	ret

10013034 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
10013034:	defffd04 	addi	sp,sp,-12
10013038:	dfc00215 	stw	ra,8(sp)
1001303c:	df000115 	stw	fp,4(sp)
10013040:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10013044:	00840074 	movhi	r2,4097
10013048:	108ffa04 	addi	r2,r2,16360
1001304c:	e0bfff15 	stw	r2,-4(fp)
10013050:	00000606 	br	1001306c <_do_ctors+0x38>
        (*ctor) (); 
10013054:	e0bfff17 	ldw	r2,-4(fp)
10013058:	10800017 	ldw	r2,0(r2)
1001305c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
10013060:	e0bfff17 	ldw	r2,-4(fp)
10013064:	10bfff04 	addi	r2,r2,-4
10013068:	e0bfff15 	stw	r2,-4(fp)
1001306c:	e0ffff17 	ldw	r3,-4(fp)
10013070:	00840074 	movhi	r2,4097
10013074:	108ffb04 	addi	r2,r2,16364
10013078:	18bff62e 	bgeu	r3,r2,10013054 <__alt_data_end+0xf8013054>
        (*ctor) (); 
}
1001307c:	0001883a 	nop
10013080:	e037883a 	mov	sp,fp
10013084:	dfc00117 	ldw	ra,4(sp)
10013088:	df000017 	ldw	fp,0(sp)
1001308c:	dec00204 	addi	sp,sp,8
10013090:	f800283a 	ret

10013094 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
10013094:	defffd04 	addi	sp,sp,-12
10013098:	dfc00215 	stw	ra,8(sp)
1001309c:	df000115 	stw	fp,4(sp)
100130a0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100130a4:	00840074 	movhi	r2,4097
100130a8:	108ffa04 	addi	r2,r2,16360
100130ac:	e0bfff15 	stw	r2,-4(fp)
100130b0:	00000606 	br	100130cc <_do_dtors+0x38>
        (*dtor) (); 
100130b4:	e0bfff17 	ldw	r2,-4(fp)
100130b8:	10800017 	ldw	r2,0(r2)
100130bc:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
100130c0:	e0bfff17 	ldw	r2,-4(fp)
100130c4:	10bfff04 	addi	r2,r2,-4
100130c8:	e0bfff15 	stw	r2,-4(fp)
100130cc:	e0ffff17 	ldw	r3,-4(fp)
100130d0:	00840074 	movhi	r2,4097
100130d4:	108ffb04 	addi	r2,r2,16364
100130d8:	18bff62e 	bgeu	r3,r2,100130b4 <__alt_data_end+0xf80130b4>
        (*dtor) (); 
}
100130dc:	0001883a 	nop
100130e0:	e037883a 	mov	sp,fp
100130e4:	dfc00117 	ldw	ra,4(sp)
100130e8:	df000017 	ldw	fp,0(sp)
100130ec:	dec00204 	addi	sp,sp,8
100130f0:	f800283a 	ret

100130f4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
100130f4:	deffff04 	addi	sp,sp,-4
100130f8:	df000015 	stw	fp,0(sp)
100130fc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
10013100:	0001883a 	nop
10013104:	e037883a 	mov	sp,fp
10013108:	df000017 	ldw	fp,0(sp)
1001310c:	dec00104 	addi	sp,sp,4
10013110:	f800283a 	ret

10013114 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10013114:	defff904 	addi	sp,sp,-28
10013118:	dfc00615 	stw	ra,24(sp)
1001311c:	df000515 	stw	fp,20(sp)
10013120:	df000504 	addi	fp,sp,20
10013124:	e13ffc15 	stw	r4,-16(fp)
10013128:	e17ffd15 	stw	r5,-12(fp)
1001312c:	e1bffe15 	stw	r6,-8(fp)
10013130:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
10013134:	e0800217 	ldw	r2,8(fp)
10013138:	d8800015 	stw	r2,0(sp)
1001313c:	e1ffff17 	ldw	r7,-4(fp)
10013140:	e1bffe17 	ldw	r6,-8(fp)
10013144:	e17ffd17 	ldw	r5,-12(fp)
10013148:	e13ffc17 	ldw	r4,-16(fp)
1001314c:	00132c40 	call	100132c4 <alt_iic_isr_register>
}  
10013150:	e037883a 	mov	sp,fp
10013154:	dfc00117 	ldw	ra,4(sp)
10013158:	df000017 	ldw	fp,0(sp)
1001315c:	dec00204 	addi	sp,sp,8
10013160:	f800283a 	ret

10013164 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
10013164:	defff904 	addi	sp,sp,-28
10013168:	df000615 	stw	fp,24(sp)
1001316c:	df000604 	addi	fp,sp,24
10013170:	e13ffe15 	stw	r4,-8(fp)
10013174:	e17fff15 	stw	r5,-4(fp)
10013178:	e0bfff17 	ldw	r2,-4(fp)
1001317c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013180:	0005303a 	rdctl	r2,status
10013184:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013188:	e0fffb17 	ldw	r3,-20(fp)
1001318c:	00bfff84 	movi	r2,-2
10013190:	1884703a 	and	r2,r3,r2
10013194:	1001703a 	wrctl	status,r2
  
  return context;
10013198:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1001319c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
100131a0:	00c00044 	movi	r3,1
100131a4:	e0bffa17 	ldw	r2,-24(fp)
100131a8:	1884983a 	sll	r2,r3,r2
100131ac:	1007883a 	mov	r3,r2
100131b0:	d0a79117 	ldw	r2,-25020(gp)
100131b4:	1884b03a 	or	r2,r3,r2
100131b8:	d0a79115 	stw	r2,-25020(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
100131bc:	d0a79117 	ldw	r2,-25020(gp)
100131c0:	100170fa 	wrctl	ienable,r2
100131c4:	e0bffc17 	ldw	r2,-16(fp)
100131c8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
100131cc:	e0bffd17 	ldw	r2,-12(fp)
100131d0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
100131d4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
100131d8:	0001883a 	nop
}
100131dc:	e037883a 	mov	sp,fp
100131e0:	df000017 	ldw	fp,0(sp)
100131e4:	dec00104 	addi	sp,sp,4
100131e8:	f800283a 	ret

100131ec <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
100131ec:	defff904 	addi	sp,sp,-28
100131f0:	df000615 	stw	fp,24(sp)
100131f4:	df000604 	addi	fp,sp,24
100131f8:	e13ffe15 	stw	r4,-8(fp)
100131fc:	e17fff15 	stw	r5,-4(fp)
10013200:	e0bfff17 	ldw	r2,-4(fp)
10013204:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013208:	0005303a 	rdctl	r2,status
1001320c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013210:	e0fffb17 	ldw	r3,-20(fp)
10013214:	00bfff84 	movi	r2,-2
10013218:	1884703a 	and	r2,r3,r2
1001321c:	1001703a 	wrctl	status,r2
  
  return context;
10013220:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
10013224:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
10013228:	00c00044 	movi	r3,1
1001322c:	e0bffa17 	ldw	r2,-24(fp)
10013230:	1884983a 	sll	r2,r3,r2
10013234:	0084303a 	nor	r2,zero,r2
10013238:	1007883a 	mov	r3,r2
1001323c:	d0a79117 	ldw	r2,-25020(gp)
10013240:	1884703a 	and	r2,r3,r2
10013244:	d0a79115 	stw	r2,-25020(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10013248:	d0a79117 	ldw	r2,-25020(gp)
1001324c:	100170fa 	wrctl	ienable,r2
10013250:	e0bffc17 	ldw	r2,-16(fp)
10013254:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10013258:	e0bffd17 	ldw	r2,-12(fp)
1001325c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
10013260:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
10013264:	0001883a 	nop
}
10013268:	e037883a 	mov	sp,fp
1001326c:	df000017 	ldw	fp,0(sp)
10013270:	dec00104 	addi	sp,sp,4
10013274:	f800283a 	ret

10013278 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
10013278:	defffc04 	addi	sp,sp,-16
1001327c:	df000315 	stw	fp,12(sp)
10013280:	df000304 	addi	fp,sp,12
10013284:	e13ffe15 	stw	r4,-8(fp)
10013288:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1001328c:	000530fa 	rdctl	r2,ienable
10013290:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
10013294:	00c00044 	movi	r3,1
10013298:	e0bfff17 	ldw	r2,-4(fp)
1001329c:	1884983a 	sll	r2,r3,r2
100132a0:	1007883a 	mov	r3,r2
100132a4:	e0bffd17 	ldw	r2,-12(fp)
100132a8:	1884703a 	and	r2,r3,r2
100132ac:	1004c03a 	cmpne	r2,r2,zero
100132b0:	10803fcc 	andi	r2,r2,255
}
100132b4:	e037883a 	mov	sp,fp
100132b8:	df000017 	ldw	fp,0(sp)
100132bc:	dec00104 	addi	sp,sp,4
100132c0:	f800283a 	ret

100132c4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
100132c4:	defff504 	addi	sp,sp,-44
100132c8:	dfc00a15 	stw	ra,40(sp)
100132cc:	df000915 	stw	fp,36(sp)
100132d0:	df000904 	addi	fp,sp,36
100132d4:	e13ffc15 	stw	r4,-16(fp)
100132d8:	e17ffd15 	stw	r5,-12(fp)
100132dc:	e1bffe15 	stw	r6,-8(fp)
100132e0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
100132e4:	00bffa84 	movi	r2,-22
100132e8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
100132ec:	e0bffd17 	ldw	r2,-12(fp)
100132f0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
100132f4:	e0bff817 	ldw	r2,-32(fp)
100132f8:	10800808 	cmpgei	r2,r2,32
100132fc:	1000271e 	bne	r2,zero,1001339c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10013300:	0005303a 	rdctl	r2,status
10013304:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10013308:	e0fffb17 	ldw	r3,-20(fp)
1001330c:	00bfff84 	movi	r2,-2
10013310:	1884703a 	and	r2,r3,r2
10013314:	1001703a 	wrctl	status,r2
  
  return context;
10013318:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1001331c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
10013320:	008400b4 	movhi	r2,4098
10013324:	10a00d04 	addi	r2,r2,-32716
10013328:	e0fff817 	ldw	r3,-32(fp)
1001332c:	180690fa 	slli	r3,r3,3
10013330:	10c5883a 	add	r2,r2,r3
10013334:	e0fffe17 	ldw	r3,-8(fp)
10013338:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1001333c:	008400b4 	movhi	r2,4098
10013340:	10a00d04 	addi	r2,r2,-32716
10013344:	e0fff817 	ldw	r3,-32(fp)
10013348:	180690fa 	slli	r3,r3,3
1001334c:	10c5883a 	add	r2,r2,r3
10013350:	10800104 	addi	r2,r2,4
10013354:	e0ffff17 	ldw	r3,-4(fp)
10013358:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1001335c:	e0bffe17 	ldw	r2,-8(fp)
10013360:	10000526 	beq	r2,zero,10013378 <alt_iic_isr_register+0xb4>
10013364:	e0bff817 	ldw	r2,-32(fp)
10013368:	100b883a 	mov	r5,r2
1001336c:	e13ffc17 	ldw	r4,-16(fp)
10013370:	00131640 	call	10013164 <alt_ic_irq_enable>
10013374:	00000406 	br	10013388 <alt_iic_isr_register+0xc4>
10013378:	e0bff817 	ldw	r2,-32(fp)
1001337c:	100b883a 	mov	r5,r2
10013380:	e13ffc17 	ldw	r4,-16(fp)
10013384:	00131ec0 	call	100131ec <alt_ic_irq_disable>
10013388:	e0bff715 	stw	r2,-36(fp)
1001338c:	e0bffa17 	ldw	r2,-24(fp)
10013390:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10013394:	e0bff917 	ldw	r2,-28(fp)
10013398:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1001339c:	e0bff717 	ldw	r2,-36(fp)
}
100133a0:	e037883a 	mov	sp,fp
100133a4:	dfc00117 	ldw	ra,4(sp)
100133a8:	df000017 	ldw	fp,0(sp)
100133ac:	dec00204 	addi	sp,sp,8
100133b0:	f800283a 	ret

100133b4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
100133b4:	defff804 	addi	sp,sp,-32
100133b8:	dfc00715 	stw	ra,28(sp)
100133bc:	df000615 	stw	fp,24(sp)
100133c0:	dc000515 	stw	r16,20(sp)
100133c4:	df000604 	addi	fp,sp,24
100133c8:	e13ffb15 	stw	r4,-20(fp)
100133cc:	e17ffc15 	stw	r5,-16(fp)
100133d0:	e1bffd15 	stw	r6,-12(fp)
100133d4:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
100133d8:	e1bffe17 	ldw	r6,-8(fp)
100133dc:	e17ffd17 	ldw	r5,-12(fp)
100133e0:	e13ffc17 	ldw	r4,-16(fp)
100133e4:	001363c0 	call	1001363c <open>
100133e8:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
100133ec:	e0bffa17 	ldw	r2,-24(fp)
100133f0:	10002216 	blt	r2,zero,1001347c <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
100133f4:	04040074 	movhi	r16,4097
100133f8:	8413f604 	addi	r16,r16,20440
100133fc:	e0bffa17 	ldw	r2,-24(fp)
10013400:	01400304 	movi	r5,12
10013404:	1009883a 	mov	r4,r2
10013408:	0000fc80 	call	10000fc8 <__mulsi3>
1001340c:	8085883a 	add	r2,r16,r2
10013410:	10c00017 	ldw	r3,0(r2)
10013414:	e0bffb17 	ldw	r2,-20(fp)
10013418:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1001341c:	04040074 	movhi	r16,4097
10013420:	8413f604 	addi	r16,r16,20440
10013424:	e0bffa17 	ldw	r2,-24(fp)
10013428:	01400304 	movi	r5,12
1001342c:	1009883a 	mov	r4,r2
10013430:	0000fc80 	call	10000fc8 <__mulsi3>
10013434:	8085883a 	add	r2,r16,r2
10013438:	10800104 	addi	r2,r2,4
1001343c:	10c00017 	ldw	r3,0(r2)
10013440:	e0bffb17 	ldw	r2,-20(fp)
10013444:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
10013448:	04040074 	movhi	r16,4097
1001344c:	8413f604 	addi	r16,r16,20440
10013450:	e0bffa17 	ldw	r2,-24(fp)
10013454:	01400304 	movi	r5,12
10013458:	1009883a 	mov	r4,r2
1001345c:	0000fc80 	call	10000fc8 <__mulsi3>
10013460:	8085883a 	add	r2,r16,r2
10013464:	10800204 	addi	r2,r2,8
10013468:	10c00017 	ldw	r3,0(r2)
1001346c:	e0bffb17 	ldw	r2,-20(fp)
10013470:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
10013474:	e13ffa17 	ldw	r4,-24(fp)
10013478:	0011ef00 	call	10011ef0 <alt_release_fd>
  }
} 
1001347c:	0001883a 	nop
10013480:	e6ffff04 	addi	sp,fp,-4
10013484:	dfc00217 	ldw	ra,8(sp)
10013488:	df000117 	ldw	fp,4(sp)
1001348c:	dc000017 	ldw	r16,0(sp)
10013490:	dec00304 	addi	sp,sp,12
10013494:	f800283a 	ret

10013498 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
10013498:	defffb04 	addi	sp,sp,-20
1001349c:	dfc00415 	stw	ra,16(sp)
100134a0:	df000315 	stw	fp,12(sp)
100134a4:	df000304 	addi	fp,sp,12
100134a8:	e13ffd15 	stw	r4,-12(fp)
100134ac:	e17ffe15 	stw	r5,-8(fp)
100134b0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
100134b4:	01c07fc4 	movi	r7,511
100134b8:	01800044 	movi	r6,1
100134bc:	e17ffd17 	ldw	r5,-12(fp)
100134c0:	01040074 	movhi	r4,4097
100134c4:	2113f904 	addi	r4,r4,20452
100134c8:	00133b40 	call	100133b4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
100134cc:	01c07fc4 	movi	r7,511
100134d0:	000d883a 	mov	r6,zero
100134d4:	e17ffe17 	ldw	r5,-8(fp)
100134d8:	01040074 	movhi	r4,4097
100134dc:	2113f604 	addi	r4,r4,20440
100134e0:	00133b40 	call	100133b4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
100134e4:	01c07fc4 	movi	r7,511
100134e8:	01800044 	movi	r6,1
100134ec:	e17fff17 	ldw	r5,-4(fp)
100134f0:	01040074 	movhi	r4,4097
100134f4:	2113fc04 	addi	r4,r4,20464
100134f8:	00133b40 	call	100133b4 <alt_open_fd>
}  
100134fc:	0001883a 	nop
10013500:	e037883a 	mov	sp,fp
10013504:	dfc00117 	ldw	ra,4(sp)
10013508:	df000017 	ldw	fp,0(sp)
1001350c:	dec00204 	addi	sp,sp,8
10013510:	f800283a 	ret

10013514 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10013514:	defffe04 	addi	sp,sp,-8
10013518:	dfc00115 	stw	ra,4(sp)
1001351c:	df000015 	stw	fp,0(sp)
10013520:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10013524:	d0a00d17 	ldw	r2,-32716(gp)
10013528:	10000326 	beq	r2,zero,10013538 <alt_get_errno+0x24>
1001352c:	d0a00d17 	ldw	r2,-32716(gp)
10013530:	103ee83a 	callr	r2
10013534:	00000106 	br	1001353c <alt_get_errno+0x28>
10013538:	d0a78d04 	addi	r2,gp,-25036
}
1001353c:	e037883a 	mov	sp,fp
10013540:	dfc00117 	ldw	ra,4(sp)
10013544:	df000017 	ldw	fp,0(sp)
10013548:	dec00204 	addi	sp,sp,8
1001354c:	f800283a 	ret

10013550 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
10013550:	defffb04 	addi	sp,sp,-20
10013554:	dfc00415 	stw	ra,16(sp)
10013558:	df000315 	stw	fp,12(sp)
1001355c:	dc000215 	stw	r16,8(sp)
10013560:	df000304 	addi	fp,sp,12
10013564:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
10013568:	e0bffe17 	ldw	r2,-8(fp)
1001356c:	10800217 	ldw	r2,8(r2)
10013570:	10d00034 	orhi	r3,r2,16384
10013574:	e0bffe17 	ldw	r2,-8(fp)
10013578:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1001357c:	e03ffd15 	stw	zero,-12(fp)
10013580:	00002306 	br	10013610 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
10013584:	04040074 	movhi	r16,4097
10013588:	8413f604 	addi	r16,r16,20440
1001358c:	e0bffd17 	ldw	r2,-12(fp)
10013590:	01400304 	movi	r5,12
10013594:	1009883a 	mov	r4,r2
10013598:	0000fc80 	call	10000fc8 <__mulsi3>
1001359c:	8085883a 	add	r2,r16,r2
100135a0:	10c00017 	ldw	r3,0(r2)
100135a4:	e0bffe17 	ldw	r2,-8(fp)
100135a8:	10800017 	ldw	r2,0(r2)
100135ac:	1880151e 	bne	r3,r2,10013604 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
100135b0:	04040074 	movhi	r16,4097
100135b4:	8413f604 	addi	r16,r16,20440
100135b8:	e0bffd17 	ldw	r2,-12(fp)
100135bc:	01400304 	movi	r5,12
100135c0:	1009883a 	mov	r4,r2
100135c4:	0000fc80 	call	10000fc8 <__mulsi3>
100135c8:	8085883a 	add	r2,r16,r2
100135cc:	10800204 	addi	r2,r2,8
100135d0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
100135d4:	10000b0e 	bge	r2,zero,10013604 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
100135d8:	01400304 	movi	r5,12
100135dc:	e13ffd17 	ldw	r4,-12(fp)
100135e0:	0000fc80 	call	10000fc8 <__mulsi3>
100135e4:	1007883a 	mov	r3,r2
100135e8:	00840074 	movhi	r2,4097
100135ec:	1093f604 	addi	r2,r2,20440
100135f0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
100135f4:	e0bffe17 	ldw	r2,-8(fp)
100135f8:	18800226 	beq	r3,r2,10013604 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
100135fc:	00bffcc4 	movi	r2,-13
10013600:	00000806 	br	10013624 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
10013604:	e0bffd17 	ldw	r2,-12(fp)
10013608:	10800044 	addi	r2,r2,1
1001360c:	e0bffd15 	stw	r2,-12(fp)
10013610:	d0a00c17 	ldw	r2,-32720(gp)
10013614:	1007883a 	mov	r3,r2
10013618:	e0bffd17 	ldw	r2,-12(fp)
1001361c:	18bfd92e 	bgeu	r3,r2,10013584 <__alt_data_end+0xf8013584>
    }
  }
  
  /* The device is not locked */
 
  return 0;
10013620:	0005883a 	mov	r2,zero
}
10013624:	e6ffff04 	addi	sp,fp,-4
10013628:	dfc00217 	ldw	ra,8(sp)
1001362c:	df000117 	ldw	fp,4(sp)
10013630:	dc000017 	ldw	r16,0(sp)
10013634:	dec00304 	addi	sp,sp,12
10013638:	f800283a 	ret

1001363c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1001363c:	defff604 	addi	sp,sp,-40
10013640:	dfc00915 	stw	ra,36(sp)
10013644:	df000815 	stw	fp,32(sp)
10013648:	df000804 	addi	fp,sp,32
1001364c:	e13ffd15 	stw	r4,-12(fp)
10013650:	e17ffe15 	stw	r5,-8(fp)
10013654:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
10013658:	00bfffc4 	movi	r2,-1
1001365c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
10013660:	00bffb44 	movi	r2,-19
10013664:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
10013668:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1001366c:	d1600a04 	addi	r5,gp,-32728
10013670:	e13ffd17 	ldw	r4,-12(fp)
10013674:	00139600 	call	10013960 <alt_find_dev>
10013678:	e0bff815 	stw	r2,-32(fp)
1001367c:	e0bff817 	ldw	r2,-32(fp)
10013680:	1000051e 	bne	r2,zero,10013698 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
10013684:	e13ffd17 	ldw	r4,-12(fp)
10013688:	00139f00 	call	100139f0 <alt_find_file>
1001368c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
10013690:	00800044 	movi	r2,1
10013694:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
10013698:	e0bff817 	ldw	r2,-32(fp)
1001369c:	10002b26 	beq	r2,zero,1001374c <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
100136a0:	e13ff817 	ldw	r4,-32(fp)
100136a4:	0013af80 	call	10013af8 <alt_get_fd>
100136a8:	e0bff915 	stw	r2,-28(fp)
100136ac:	e0bff917 	ldw	r2,-28(fp)
100136b0:	1000030e 	bge	r2,zero,100136c0 <open+0x84>
    {
      status = index;
100136b4:	e0bff917 	ldw	r2,-28(fp)
100136b8:	e0bffa15 	stw	r2,-24(fp)
100136bc:	00002506 	br	10013754 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
100136c0:	01400304 	movi	r5,12
100136c4:	e13ff917 	ldw	r4,-28(fp)
100136c8:	0000fc80 	call	10000fc8 <__mulsi3>
100136cc:	1007883a 	mov	r3,r2
100136d0:	00840074 	movhi	r2,4097
100136d4:	1093f604 	addi	r2,r2,20440
100136d8:	1885883a 	add	r2,r3,r2
100136dc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
100136e0:	e0fffe17 	ldw	r3,-8(fp)
100136e4:	00900034 	movhi	r2,16384
100136e8:	10bfffc4 	addi	r2,r2,-1
100136ec:	1886703a 	and	r3,r3,r2
100136f0:	e0bffc17 	ldw	r2,-16(fp)
100136f4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
100136f8:	e0bffb17 	ldw	r2,-20(fp)
100136fc:	1000051e 	bne	r2,zero,10013714 <open+0xd8>
10013700:	e13ffc17 	ldw	r4,-16(fp)
10013704:	00135500 	call	10013550 <alt_file_locked>
10013708:	e0bffa15 	stw	r2,-24(fp)
1001370c:	e0bffa17 	ldw	r2,-24(fp)
10013710:	10001016 	blt	r2,zero,10013754 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
10013714:	e0bff817 	ldw	r2,-32(fp)
10013718:	10800317 	ldw	r2,12(r2)
1001371c:	10000826 	beq	r2,zero,10013740 <open+0x104>
10013720:	e0bff817 	ldw	r2,-32(fp)
10013724:	10800317 	ldw	r2,12(r2)
10013728:	e1ffff17 	ldw	r7,-4(fp)
1001372c:	e1bffe17 	ldw	r6,-8(fp)
10013730:	e17ffd17 	ldw	r5,-12(fp)
10013734:	e13ffc17 	ldw	r4,-16(fp)
10013738:	103ee83a 	callr	r2
1001373c:	00000106 	br	10013744 <open+0x108>
10013740:	0005883a 	mov	r2,zero
10013744:	e0bffa15 	stw	r2,-24(fp)
10013748:	00000206 	br	10013754 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
1001374c:	00bffb44 	movi	r2,-19
10013750:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
10013754:	e0bffa17 	ldw	r2,-24(fp)
10013758:	1000090e 	bge	r2,zero,10013780 <open+0x144>
  {
    alt_release_fd (index);  
1001375c:	e13ff917 	ldw	r4,-28(fp)
10013760:	0011ef00 	call	10011ef0 <alt_release_fd>
    ALT_ERRNO = -status;
10013764:	00135140 	call	10013514 <alt_get_errno>
10013768:	1007883a 	mov	r3,r2
1001376c:	e0bffa17 	ldw	r2,-24(fp)
10013770:	0085c83a 	sub	r2,zero,r2
10013774:	18800015 	stw	r2,0(r3)
    return -1;
10013778:	00bfffc4 	movi	r2,-1
1001377c:	00000106 	br	10013784 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
10013780:	e0bff917 	ldw	r2,-28(fp)
}
10013784:	e037883a 	mov	sp,fp
10013788:	dfc00117 	ldw	ra,4(sp)
1001378c:	df000017 	ldw	fp,0(sp)
10013790:	dec00204 	addi	sp,sp,8
10013794:	f800283a 	ret

10013798 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
10013798:	defffa04 	addi	sp,sp,-24
1001379c:	df000515 	stw	fp,20(sp)
100137a0:	df000504 	addi	fp,sp,20
100137a4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
100137a8:	0005303a 	rdctl	r2,status
100137ac:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100137b0:	e0fffc17 	ldw	r3,-16(fp)
100137b4:	00bfff84 	movi	r2,-2
100137b8:	1884703a 	and	r2,r3,r2
100137bc:	1001703a 	wrctl	status,r2
  
  return context;
100137c0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
100137c4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
100137c8:	e0bfff17 	ldw	r2,-4(fp)
100137cc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
100137d0:	e0bffd17 	ldw	r2,-12(fp)
100137d4:	10800017 	ldw	r2,0(r2)
100137d8:	e0fffd17 	ldw	r3,-12(fp)
100137dc:	18c00117 	ldw	r3,4(r3)
100137e0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
100137e4:	e0bffd17 	ldw	r2,-12(fp)
100137e8:	10800117 	ldw	r2,4(r2)
100137ec:	e0fffd17 	ldw	r3,-12(fp)
100137f0:	18c00017 	ldw	r3,0(r3)
100137f4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
100137f8:	e0bffd17 	ldw	r2,-12(fp)
100137fc:	e0fffd17 	ldw	r3,-12(fp)
10013800:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
10013804:	e0bffd17 	ldw	r2,-12(fp)
10013808:	e0fffd17 	ldw	r3,-12(fp)
1001380c:	10c00015 	stw	r3,0(r2)
10013810:	e0bffb17 	ldw	r2,-20(fp)
10013814:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10013818:	e0bffe17 	ldw	r2,-8(fp)
1001381c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
10013820:	0001883a 	nop
10013824:	e037883a 	mov	sp,fp
10013828:	df000017 	ldw	fp,0(sp)
1001382c:	dec00104 	addi	sp,sp,4
10013830:	f800283a 	ret

10013834 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
10013834:	defffb04 	addi	sp,sp,-20
10013838:	dfc00415 	stw	ra,16(sp)
1001383c:	df000315 	stw	fp,12(sp)
10013840:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
10013844:	d0a01017 	ldw	r2,-32704(gp)
10013848:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1001384c:	d0a79317 	ldw	r2,-25012(gp)
10013850:	10800044 	addi	r2,r2,1
10013854:	d0a79315 	stw	r2,-25012(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10013858:	00002e06 	br	10013914 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1001385c:	e0bffd17 	ldw	r2,-12(fp)
10013860:	10800017 	ldw	r2,0(r2)
10013864:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
10013868:	e0bffd17 	ldw	r2,-12(fp)
1001386c:	10800403 	ldbu	r2,16(r2)
10013870:	10803fcc 	andi	r2,r2,255
10013874:	10000426 	beq	r2,zero,10013888 <alt_tick+0x54>
10013878:	d0a79317 	ldw	r2,-25012(gp)
1001387c:	1000021e 	bne	r2,zero,10013888 <alt_tick+0x54>
    {
      alarm->rollover = 0;
10013880:	e0bffd17 	ldw	r2,-12(fp)
10013884:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
10013888:	e0bffd17 	ldw	r2,-12(fp)
1001388c:	10800217 	ldw	r2,8(r2)
10013890:	d0e79317 	ldw	r3,-25012(gp)
10013894:	18801d36 	bltu	r3,r2,1001390c <alt_tick+0xd8>
10013898:	e0bffd17 	ldw	r2,-12(fp)
1001389c:	10800403 	ldbu	r2,16(r2)
100138a0:	10803fcc 	andi	r2,r2,255
100138a4:	1000191e 	bne	r2,zero,1001390c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
100138a8:	e0bffd17 	ldw	r2,-12(fp)
100138ac:	10800317 	ldw	r2,12(r2)
100138b0:	e0fffd17 	ldw	r3,-12(fp)
100138b4:	18c00517 	ldw	r3,20(r3)
100138b8:	1809883a 	mov	r4,r3
100138bc:	103ee83a 	callr	r2
100138c0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
100138c4:	e0bfff17 	ldw	r2,-4(fp)
100138c8:	1000031e 	bne	r2,zero,100138d8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
100138cc:	e13ffd17 	ldw	r4,-12(fp)
100138d0:	00137980 	call	10013798 <alt_alarm_stop>
100138d4:	00000d06 	br	1001390c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
100138d8:	e0bffd17 	ldw	r2,-12(fp)
100138dc:	10c00217 	ldw	r3,8(r2)
100138e0:	e0bfff17 	ldw	r2,-4(fp)
100138e4:	1887883a 	add	r3,r3,r2
100138e8:	e0bffd17 	ldw	r2,-12(fp)
100138ec:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
100138f0:	e0bffd17 	ldw	r2,-12(fp)
100138f4:	10c00217 	ldw	r3,8(r2)
100138f8:	d0a79317 	ldw	r2,-25012(gp)
100138fc:	1880032e 	bgeu	r3,r2,1001390c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
10013900:	e0bffd17 	ldw	r2,-12(fp)
10013904:	00c00044 	movi	r3,1
10013908:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1001390c:	e0bffe17 	ldw	r2,-8(fp)
10013910:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10013914:	e0fffd17 	ldw	r3,-12(fp)
10013918:	d0a01004 	addi	r2,gp,-32704
1001391c:	18bfcf1e 	bne	r3,r2,1001385c <__alt_data_end+0xf801385c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
10013920:	0001883a 	nop
}
10013924:	0001883a 	nop
10013928:	e037883a 	mov	sp,fp
1001392c:	dfc00117 	ldw	ra,4(sp)
10013930:	df000017 	ldw	fp,0(sp)
10013934:	dec00204 	addi	sp,sp,8
10013938:	f800283a 	ret

1001393c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1001393c:	deffff04 	addi	sp,sp,-4
10013940:	df000015 	stw	fp,0(sp)
10013944:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
10013948:	000170fa 	wrctl	ienable,zero
}
1001394c:	0001883a 	nop
10013950:	e037883a 	mov	sp,fp
10013954:	df000017 	ldw	fp,0(sp)
10013958:	dec00104 	addi	sp,sp,4
1001395c:	f800283a 	ret

10013960 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
10013960:	defffa04 	addi	sp,sp,-24
10013964:	dfc00515 	stw	ra,20(sp)
10013968:	df000415 	stw	fp,16(sp)
1001396c:	df000404 	addi	fp,sp,16
10013970:	e13ffe15 	stw	r4,-8(fp)
10013974:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
10013978:	e0bfff17 	ldw	r2,-4(fp)
1001397c:	10800017 	ldw	r2,0(r2)
10013980:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
10013984:	e13ffe17 	ldw	r4,-8(fp)
10013988:	00012700 	call	10001270 <strlen>
1001398c:	10800044 	addi	r2,r2,1
10013990:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10013994:	00000d06 	br	100139cc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
10013998:	e0bffc17 	ldw	r2,-16(fp)
1001399c:	10800217 	ldw	r2,8(r2)
100139a0:	e0fffd17 	ldw	r3,-12(fp)
100139a4:	180d883a 	mov	r6,r3
100139a8:	e17ffe17 	ldw	r5,-8(fp)
100139ac:	1009883a 	mov	r4,r2
100139b0:	0013ca40 	call	10013ca4 <memcmp>
100139b4:	1000021e 	bne	r2,zero,100139c0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
100139b8:	e0bffc17 	ldw	r2,-16(fp)
100139bc:	00000706 	br	100139dc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
100139c0:	e0bffc17 	ldw	r2,-16(fp)
100139c4:	10800017 	ldw	r2,0(r2)
100139c8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
100139cc:	e0fffc17 	ldw	r3,-16(fp)
100139d0:	e0bfff17 	ldw	r2,-4(fp)
100139d4:	18bff01e 	bne	r3,r2,10013998 <__alt_data_end+0xf8013998>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
100139d8:	0005883a 	mov	r2,zero
}
100139dc:	e037883a 	mov	sp,fp
100139e0:	dfc00117 	ldw	ra,4(sp)
100139e4:	df000017 	ldw	fp,0(sp)
100139e8:	dec00204 	addi	sp,sp,8
100139ec:	f800283a 	ret

100139f0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
100139f0:	defffb04 	addi	sp,sp,-20
100139f4:	dfc00415 	stw	ra,16(sp)
100139f8:	df000315 	stw	fp,12(sp)
100139fc:	df000304 	addi	fp,sp,12
10013a00:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
10013a04:	d0a00817 	ldw	r2,-32736(gp)
10013a08:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10013a0c:	00003106 	br	10013ad4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
10013a10:	e0bffd17 	ldw	r2,-12(fp)
10013a14:	10800217 	ldw	r2,8(r2)
10013a18:	1009883a 	mov	r4,r2
10013a1c:	00012700 	call	10001270 <strlen>
10013a20:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
10013a24:	e0bffd17 	ldw	r2,-12(fp)
10013a28:	10c00217 	ldw	r3,8(r2)
10013a2c:	e0bffe17 	ldw	r2,-8(fp)
10013a30:	10bfffc4 	addi	r2,r2,-1
10013a34:	1885883a 	add	r2,r3,r2
10013a38:	10800003 	ldbu	r2,0(r2)
10013a3c:	10803fcc 	andi	r2,r2,255
10013a40:	1080201c 	xori	r2,r2,128
10013a44:	10bfe004 	addi	r2,r2,-128
10013a48:	10800bd8 	cmpnei	r2,r2,47
10013a4c:	1000031e 	bne	r2,zero,10013a5c <alt_find_file+0x6c>
    {
      len -= 1;
10013a50:	e0bffe17 	ldw	r2,-8(fp)
10013a54:	10bfffc4 	addi	r2,r2,-1
10013a58:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10013a5c:	e0bffe17 	ldw	r2,-8(fp)
10013a60:	e0ffff17 	ldw	r3,-4(fp)
10013a64:	1885883a 	add	r2,r3,r2
10013a68:	10800003 	ldbu	r2,0(r2)
10013a6c:	10803fcc 	andi	r2,r2,255
10013a70:	1080201c 	xori	r2,r2,128
10013a74:	10bfe004 	addi	r2,r2,-128
10013a78:	10800be0 	cmpeqi	r2,r2,47
10013a7c:	1000081e 	bne	r2,zero,10013aa0 <alt_find_file+0xb0>
10013a80:	e0bffe17 	ldw	r2,-8(fp)
10013a84:	e0ffff17 	ldw	r3,-4(fp)
10013a88:	1885883a 	add	r2,r3,r2
10013a8c:	10800003 	ldbu	r2,0(r2)
10013a90:	10803fcc 	andi	r2,r2,255
10013a94:	1080201c 	xori	r2,r2,128
10013a98:	10bfe004 	addi	r2,r2,-128
10013a9c:	10000a1e 	bne	r2,zero,10013ac8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
10013aa0:	e0bffd17 	ldw	r2,-12(fp)
10013aa4:	10800217 	ldw	r2,8(r2)
10013aa8:	e0fffe17 	ldw	r3,-8(fp)
10013aac:	180d883a 	mov	r6,r3
10013ab0:	e17fff17 	ldw	r5,-4(fp)
10013ab4:	1009883a 	mov	r4,r2
10013ab8:	0013ca40 	call	10013ca4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10013abc:	1000021e 	bne	r2,zero,10013ac8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
10013ac0:	e0bffd17 	ldw	r2,-12(fp)
10013ac4:	00000706 	br	10013ae4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
10013ac8:	e0bffd17 	ldw	r2,-12(fp)
10013acc:	10800017 	ldw	r2,0(r2)
10013ad0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10013ad4:	e0fffd17 	ldw	r3,-12(fp)
10013ad8:	d0a00804 	addi	r2,gp,-32736
10013adc:	18bfcc1e 	bne	r3,r2,10013a10 <__alt_data_end+0xf8013a10>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
10013ae0:	0005883a 	mov	r2,zero
}
10013ae4:	e037883a 	mov	sp,fp
10013ae8:	dfc00117 	ldw	ra,4(sp)
10013aec:	df000017 	ldw	fp,0(sp)
10013af0:	dec00204 	addi	sp,sp,8
10013af4:	f800283a 	ret

10013af8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
10013af8:	defffa04 	addi	sp,sp,-24
10013afc:	dfc00515 	stw	ra,20(sp)
10013b00:	df000415 	stw	fp,16(sp)
10013b04:	dc000315 	stw	r16,12(sp)
10013b08:	df000404 	addi	fp,sp,16
10013b0c:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
10013b10:	00bffa04 	movi	r2,-24
10013b14:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10013b18:	e03ffc15 	stw	zero,-16(fp)
10013b1c:	00001d06 	br	10013b94 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
10013b20:	04040074 	movhi	r16,4097
10013b24:	8413f604 	addi	r16,r16,20440
10013b28:	e0bffc17 	ldw	r2,-16(fp)
10013b2c:	01400304 	movi	r5,12
10013b30:	1009883a 	mov	r4,r2
10013b34:	0000fc80 	call	10000fc8 <__mulsi3>
10013b38:	8085883a 	add	r2,r16,r2
10013b3c:	10800017 	ldw	r2,0(r2)
10013b40:	1000111e 	bne	r2,zero,10013b88 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
10013b44:	04040074 	movhi	r16,4097
10013b48:	8413f604 	addi	r16,r16,20440
10013b4c:	e0bffc17 	ldw	r2,-16(fp)
10013b50:	01400304 	movi	r5,12
10013b54:	1009883a 	mov	r4,r2
10013b58:	0000fc80 	call	10000fc8 <__mulsi3>
10013b5c:	8085883a 	add	r2,r16,r2
10013b60:	e0fffe17 	ldw	r3,-8(fp)
10013b64:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
10013b68:	d0e00c17 	ldw	r3,-32720(gp)
10013b6c:	e0bffc17 	ldw	r2,-16(fp)
10013b70:	1880020e 	bge	r3,r2,10013b7c <alt_get_fd+0x84>
      {
        alt_max_fd = i;
10013b74:	e0bffc17 	ldw	r2,-16(fp)
10013b78:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
10013b7c:	e0bffc17 	ldw	r2,-16(fp)
10013b80:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
10013b84:	00000606 	br	10013ba0 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10013b88:	e0bffc17 	ldw	r2,-16(fp)
10013b8c:	10800044 	addi	r2,r2,1
10013b90:	e0bffc15 	stw	r2,-16(fp)
10013b94:	e0bffc17 	ldw	r2,-16(fp)
10013b98:	10800810 	cmplti	r2,r2,32
10013b9c:	103fe01e 	bne	r2,zero,10013b20 <__alt_data_end+0xf8013b20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
10013ba0:	e0bffd17 	ldw	r2,-12(fp)
}
10013ba4:	e6ffff04 	addi	sp,fp,-4
10013ba8:	dfc00217 	ldw	ra,8(sp)
10013bac:	df000117 	ldw	fp,4(sp)
10013bb0:	dc000017 	ldw	r16,0(sp)
10013bb4:	dec00304 	addi	sp,sp,12
10013bb8:	f800283a 	ret

10013bbc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
10013bbc:	defffe04 	addi	sp,sp,-8
10013bc0:	df000115 	stw	fp,4(sp)
10013bc4:	df000104 	addi	fp,sp,4
10013bc8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
10013bcc:	e0bfff17 	ldw	r2,-4(fp)
10013bd0:	10bffe84 	addi	r2,r2,-6
10013bd4:	10c00428 	cmpgeui	r3,r2,16
10013bd8:	18001a1e 	bne	r3,zero,10013c44 <alt_exception_cause_generated_bad_addr+0x88>
10013bdc:	100690ba 	slli	r3,r2,2
10013be0:	00840074 	movhi	r2,4097
10013be4:	108efd04 	addi	r2,r2,15348
10013be8:	1885883a 	add	r2,r3,r2
10013bec:	10800017 	ldw	r2,0(r2)
10013bf0:	1000683a 	jmp	r2
10013bf4:	10013c34 	orhi	zero,r2,1264
10013bf8:	10013c34 	orhi	zero,r2,1264
10013bfc:	10013c44 	addi	zero,r2,1265
10013c00:	10013c44 	addi	zero,r2,1265
10013c04:	10013c44 	addi	zero,r2,1265
10013c08:	10013c34 	orhi	zero,r2,1264
10013c0c:	10013c3c 	xorhi	zero,r2,1264
10013c10:	10013c44 	addi	zero,r2,1265
10013c14:	10013c34 	orhi	zero,r2,1264
10013c18:	10013c34 	orhi	zero,r2,1264
10013c1c:	10013c44 	addi	zero,r2,1265
10013c20:	10013c34 	orhi	zero,r2,1264
10013c24:	10013c3c 	xorhi	zero,r2,1264
10013c28:	10013c44 	addi	zero,r2,1265
10013c2c:	10013c44 	addi	zero,r2,1265
10013c30:	10013c34 	orhi	zero,r2,1264
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
10013c34:	00800044 	movi	r2,1
10013c38:	00000306 	br	10013c48 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
10013c3c:	0005883a 	mov	r2,zero
10013c40:	00000106 	br	10013c48 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
10013c44:	0005883a 	mov	r2,zero
  }
}
10013c48:	e037883a 	mov	sp,fp
10013c4c:	df000017 	ldw	fp,0(sp)
10013c50:	dec00104 	addi	sp,sp,4
10013c54:	f800283a 	ret

10013c58 <atexit>:
10013c58:	200b883a 	mov	r5,r4
10013c5c:	000f883a 	mov	r7,zero
10013c60:	000d883a 	mov	r6,zero
10013c64:	0009883a 	mov	r4,zero
10013c68:	0013d201 	jmpi	10013d20 <__register_exitproc>

10013c6c <exit>:
10013c6c:	defffe04 	addi	sp,sp,-8
10013c70:	000b883a 	mov	r5,zero
10013c74:	dc000015 	stw	r16,0(sp)
10013c78:	dfc00115 	stw	ra,4(sp)
10013c7c:	2021883a 	mov	r16,r4
10013c80:	0013e380 	call	10013e38 <__call_exitprocs>
10013c84:	00840074 	movhi	r2,4097
10013c88:	10987004 	addi	r2,r2,25024
10013c8c:	11000017 	ldw	r4,0(r2)
10013c90:	20800f17 	ldw	r2,60(r4)
10013c94:	10000126 	beq	r2,zero,10013c9c <exit+0x30>
10013c98:	103ee83a 	callr	r2
10013c9c:	8009883a 	mov	r4,r16
10013ca0:	0013fb80 	call	10013fb8 <_exit>

10013ca4 <memcmp>:
10013ca4:	01c000c4 	movi	r7,3
10013ca8:	3980192e 	bgeu	r7,r6,10013d10 <memcmp+0x6c>
10013cac:	2144b03a 	or	r2,r4,r5
10013cb0:	11c4703a 	and	r2,r2,r7
10013cb4:	10000f26 	beq	r2,zero,10013cf4 <memcmp+0x50>
10013cb8:	20800003 	ldbu	r2,0(r4)
10013cbc:	28c00003 	ldbu	r3,0(r5)
10013cc0:	10c0151e 	bne	r2,r3,10013d18 <memcmp+0x74>
10013cc4:	31bfff84 	addi	r6,r6,-2
10013cc8:	01ffffc4 	movi	r7,-1
10013ccc:	00000406 	br	10013ce0 <memcmp+0x3c>
10013cd0:	20800003 	ldbu	r2,0(r4)
10013cd4:	28c00003 	ldbu	r3,0(r5)
10013cd8:	31bfffc4 	addi	r6,r6,-1
10013cdc:	10c00e1e 	bne	r2,r3,10013d18 <memcmp+0x74>
10013ce0:	21000044 	addi	r4,r4,1
10013ce4:	29400044 	addi	r5,r5,1
10013ce8:	31fff91e 	bne	r6,r7,10013cd0 <__alt_data_end+0xf8013cd0>
10013cec:	0005883a 	mov	r2,zero
10013cf0:	f800283a 	ret
10013cf4:	20c00017 	ldw	r3,0(r4)
10013cf8:	28800017 	ldw	r2,0(r5)
10013cfc:	18bfee1e 	bne	r3,r2,10013cb8 <__alt_data_end+0xf8013cb8>
10013d00:	31bfff04 	addi	r6,r6,-4
10013d04:	21000104 	addi	r4,r4,4
10013d08:	29400104 	addi	r5,r5,4
10013d0c:	39bff936 	bltu	r7,r6,10013cf4 <__alt_data_end+0xf8013cf4>
10013d10:	303fe91e 	bne	r6,zero,10013cb8 <__alt_data_end+0xf8013cb8>
10013d14:	003ff506 	br	10013cec <__alt_data_end+0xf8013cec>
10013d18:	10c5c83a 	sub	r2,r2,r3
10013d1c:	f800283a 	ret

10013d20 <__register_exitproc>:
10013d20:	defffa04 	addi	sp,sp,-24
10013d24:	dc000315 	stw	r16,12(sp)
10013d28:	04040074 	movhi	r16,4097
10013d2c:	84187004 	addi	r16,r16,25024
10013d30:	80c00017 	ldw	r3,0(r16)
10013d34:	dc400415 	stw	r17,16(sp)
10013d38:	dfc00515 	stw	ra,20(sp)
10013d3c:	18805217 	ldw	r2,328(r3)
10013d40:	2023883a 	mov	r17,r4
10013d44:	10003726 	beq	r2,zero,10013e24 <__register_exitproc+0x104>
10013d48:	10c00117 	ldw	r3,4(r2)
10013d4c:	010007c4 	movi	r4,31
10013d50:	20c00e16 	blt	r4,r3,10013d8c <__register_exitproc+0x6c>
10013d54:	1a000044 	addi	r8,r3,1
10013d58:	8800221e 	bne	r17,zero,10013de4 <__register_exitproc+0xc4>
10013d5c:	18c00084 	addi	r3,r3,2
10013d60:	18c7883a 	add	r3,r3,r3
10013d64:	18c7883a 	add	r3,r3,r3
10013d68:	12000115 	stw	r8,4(r2)
10013d6c:	10c7883a 	add	r3,r2,r3
10013d70:	19400015 	stw	r5,0(r3)
10013d74:	0005883a 	mov	r2,zero
10013d78:	dfc00517 	ldw	ra,20(sp)
10013d7c:	dc400417 	ldw	r17,16(sp)
10013d80:	dc000317 	ldw	r16,12(sp)
10013d84:	dec00604 	addi	sp,sp,24
10013d88:	f800283a 	ret
10013d8c:	00800034 	movhi	r2,0
10013d90:	10800004 	addi	r2,r2,0
10013d94:	10002626 	beq	r2,zero,10013e30 <__register_exitproc+0x110>
10013d98:	01006404 	movi	r4,400
10013d9c:	d9400015 	stw	r5,0(sp)
10013da0:	d9800115 	stw	r6,4(sp)
10013da4:	d9c00215 	stw	r7,8(sp)
10013da8:	00000000 	call	10000000 <__alt_mem_sdram>
10013dac:	d9400017 	ldw	r5,0(sp)
10013db0:	d9800117 	ldw	r6,4(sp)
10013db4:	d9c00217 	ldw	r7,8(sp)
10013db8:	10001d26 	beq	r2,zero,10013e30 <__register_exitproc+0x110>
10013dbc:	81000017 	ldw	r4,0(r16)
10013dc0:	10000115 	stw	zero,4(r2)
10013dc4:	02000044 	movi	r8,1
10013dc8:	22405217 	ldw	r9,328(r4)
10013dcc:	0007883a 	mov	r3,zero
10013dd0:	12400015 	stw	r9,0(r2)
10013dd4:	20805215 	stw	r2,328(r4)
10013dd8:	10006215 	stw	zero,392(r2)
10013ddc:	10006315 	stw	zero,396(r2)
10013de0:	883fde26 	beq	r17,zero,10013d5c <__alt_data_end+0xf8013d5c>
10013de4:	18c9883a 	add	r4,r3,r3
10013de8:	2109883a 	add	r4,r4,r4
10013dec:	1109883a 	add	r4,r2,r4
10013df0:	21802215 	stw	r6,136(r4)
10013df4:	01800044 	movi	r6,1
10013df8:	12406217 	ldw	r9,392(r2)
10013dfc:	30cc983a 	sll	r6,r6,r3
10013e00:	4992b03a 	or	r9,r9,r6
10013e04:	12406215 	stw	r9,392(r2)
10013e08:	21c04215 	stw	r7,264(r4)
10013e0c:	01000084 	movi	r4,2
10013e10:	893fd21e 	bne	r17,r4,10013d5c <__alt_data_end+0xf8013d5c>
10013e14:	11006317 	ldw	r4,396(r2)
10013e18:	218cb03a 	or	r6,r4,r6
10013e1c:	11806315 	stw	r6,396(r2)
10013e20:	003fce06 	br	10013d5c <__alt_data_end+0xf8013d5c>
10013e24:	18805304 	addi	r2,r3,332
10013e28:	18805215 	stw	r2,328(r3)
10013e2c:	003fc606 	br	10013d48 <__alt_data_end+0xf8013d48>
10013e30:	00bfffc4 	movi	r2,-1
10013e34:	003fd006 	br	10013d78 <__alt_data_end+0xf8013d78>

10013e38 <__call_exitprocs>:
10013e38:	defff504 	addi	sp,sp,-44
10013e3c:	df000915 	stw	fp,36(sp)
10013e40:	dd400615 	stw	r21,24(sp)
10013e44:	dc800315 	stw	r18,12(sp)
10013e48:	dfc00a15 	stw	ra,40(sp)
10013e4c:	ddc00815 	stw	r23,32(sp)
10013e50:	dd800715 	stw	r22,28(sp)
10013e54:	dd000515 	stw	r20,20(sp)
10013e58:	dcc00415 	stw	r19,16(sp)
10013e5c:	dc400215 	stw	r17,8(sp)
10013e60:	dc000115 	stw	r16,4(sp)
10013e64:	d9000015 	stw	r4,0(sp)
10013e68:	2839883a 	mov	fp,r5
10013e6c:	04800044 	movi	r18,1
10013e70:	057fffc4 	movi	r21,-1
10013e74:	00840074 	movhi	r2,4097
10013e78:	10987004 	addi	r2,r2,25024
10013e7c:	12000017 	ldw	r8,0(r2)
10013e80:	45005217 	ldw	r20,328(r8)
10013e84:	44c05204 	addi	r19,r8,328
10013e88:	a0001c26 	beq	r20,zero,10013efc <__call_exitprocs+0xc4>
10013e8c:	a0800117 	ldw	r2,4(r20)
10013e90:	15ffffc4 	addi	r23,r2,-1
10013e94:	b8000d16 	blt	r23,zero,10013ecc <__call_exitprocs+0x94>
10013e98:	14000044 	addi	r16,r2,1
10013e9c:	8421883a 	add	r16,r16,r16
10013ea0:	8421883a 	add	r16,r16,r16
10013ea4:	84402004 	addi	r17,r16,128
10013ea8:	a463883a 	add	r17,r20,r17
10013eac:	a421883a 	add	r16,r20,r16
10013eb0:	e0001e26 	beq	fp,zero,10013f2c <__call_exitprocs+0xf4>
10013eb4:	80804017 	ldw	r2,256(r16)
10013eb8:	e0801c26 	beq	fp,r2,10013f2c <__call_exitprocs+0xf4>
10013ebc:	bdffffc4 	addi	r23,r23,-1
10013ec0:	843fff04 	addi	r16,r16,-4
10013ec4:	8c7fff04 	addi	r17,r17,-4
10013ec8:	bd7ff91e 	bne	r23,r21,10013eb0 <__alt_data_end+0xf8013eb0>
10013ecc:	00800034 	movhi	r2,0
10013ed0:	10800004 	addi	r2,r2,0
10013ed4:	10000926 	beq	r2,zero,10013efc <__call_exitprocs+0xc4>
10013ed8:	a0800117 	ldw	r2,4(r20)
10013edc:	1000301e 	bne	r2,zero,10013fa0 <__call_exitprocs+0x168>
10013ee0:	a0800017 	ldw	r2,0(r20)
10013ee4:	10003226 	beq	r2,zero,10013fb0 <__call_exitprocs+0x178>
10013ee8:	a009883a 	mov	r4,r20
10013eec:	98800015 	stw	r2,0(r19)
10013ef0:	00000000 	call	10000000 <__alt_mem_sdram>
10013ef4:	9d000017 	ldw	r20,0(r19)
10013ef8:	a03fe41e 	bne	r20,zero,10013e8c <__alt_data_end+0xf8013e8c>
10013efc:	dfc00a17 	ldw	ra,40(sp)
10013f00:	df000917 	ldw	fp,36(sp)
10013f04:	ddc00817 	ldw	r23,32(sp)
10013f08:	dd800717 	ldw	r22,28(sp)
10013f0c:	dd400617 	ldw	r21,24(sp)
10013f10:	dd000517 	ldw	r20,20(sp)
10013f14:	dcc00417 	ldw	r19,16(sp)
10013f18:	dc800317 	ldw	r18,12(sp)
10013f1c:	dc400217 	ldw	r17,8(sp)
10013f20:	dc000117 	ldw	r16,4(sp)
10013f24:	dec00b04 	addi	sp,sp,44
10013f28:	f800283a 	ret
10013f2c:	a0800117 	ldw	r2,4(r20)
10013f30:	80c00017 	ldw	r3,0(r16)
10013f34:	10bfffc4 	addi	r2,r2,-1
10013f38:	15c01426 	beq	r2,r23,10013f8c <__call_exitprocs+0x154>
10013f3c:	80000015 	stw	zero,0(r16)
10013f40:	183fde26 	beq	r3,zero,10013ebc <__alt_data_end+0xf8013ebc>
10013f44:	95c8983a 	sll	r4,r18,r23
10013f48:	a0806217 	ldw	r2,392(r20)
10013f4c:	a5800117 	ldw	r22,4(r20)
10013f50:	2084703a 	and	r2,r4,r2
10013f54:	10000b26 	beq	r2,zero,10013f84 <__call_exitprocs+0x14c>
10013f58:	a0806317 	ldw	r2,396(r20)
10013f5c:	2088703a 	and	r4,r4,r2
10013f60:	20000c1e 	bne	r4,zero,10013f94 <__call_exitprocs+0x15c>
10013f64:	89400017 	ldw	r5,0(r17)
10013f68:	d9000017 	ldw	r4,0(sp)
10013f6c:	183ee83a 	callr	r3
10013f70:	a0800117 	ldw	r2,4(r20)
10013f74:	15bfbf1e 	bne	r2,r22,10013e74 <__alt_data_end+0xf8013e74>
10013f78:	98800017 	ldw	r2,0(r19)
10013f7c:	153fcf26 	beq	r2,r20,10013ebc <__alt_data_end+0xf8013ebc>
10013f80:	003fbc06 	br	10013e74 <__alt_data_end+0xf8013e74>
10013f84:	183ee83a 	callr	r3
10013f88:	003ff906 	br	10013f70 <__alt_data_end+0xf8013f70>
10013f8c:	a5c00115 	stw	r23,4(r20)
10013f90:	003feb06 	br	10013f40 <__alt_data_end+0xf8013f40>
10013f94:	89000017 	ldw	r4,0(r17)
10013f98:	183ee83a 	callr	r3
10013f9c:	003ff406 	br	10013f70 <__alt_data_end+0xf8013f70>
10013fa0:	a0800017 	ldw	r2,0(r20)
10013fa4:	a027883a 	mov	r19,r20
10013fa8:	1029883a 	mov	r20,r2
10013fac:	003fb606 	br	10013e88 <__alt_data_end+0xf8013e88>
10013fb0:	0005883a 	mov	r2,zero
10013fb4:	003ffb06 	br	10013fa4 <__alt_data_end+0xf8013fa4>

10013fb8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
10013fb8:	defffd04 	addi	sp,sp,-12
10013fbc:	df000215 	stw	fp,8(sp)
10013fc0:	df000204 	addi	fp,sp,8
10013fc4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10013fc8:	0001883a 	nop
10013fcc:	e0bfff17 	ldw	r2,-4(fp)
10013fd0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
10013fd4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10013fd8:	10000226 	beq	r2,zero,10013fe4 <_exit+0x2c>
    ALT_SIM_FAIL();
10013fdc:	002af070 	cmpltui	zero,zero,43969
10013fe0:	00000106 	br	10013fe8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
10013fe4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10013fe8:	003fff06 	br	10013fe8 <__alt_data_end+0xf8013fe8>
